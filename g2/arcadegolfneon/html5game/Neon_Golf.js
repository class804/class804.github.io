window.famobi_mgb_url = window.famobi.getMoreGamesButtonImage(true);
Array.prototype.__yy_owner = 0;
var JSON_game = {
    Extensions: [{
        jsFiles: ["tph_FMS_loading.js"]
    }, {
        jsFiles: ["uph_Dogfire_analytics.js", "vph_famobi.js"]
    }],
    Sounds: [{
        pName: "sound_explosion_2",
        kind: 0,
        extension: ".wav",
        origName: "sound_explosion_2",
        effects: 0,
        volume: 1,
        pan: 0,
        preload: true,
        groupId: 0
    }, {
        pName: "sound_hit_6",
        kind: 0,
        extension: ".wav",
        origName: "sound_hit_6",
        effects: 0,
        volume: 1,
        pan: 0,
        preload: true,
        groupId: 0
    }, {
        pName: "sound_beep_2",
        kind: 0,
        extension: ".wav",
        origName: "sound_beep_2",
        effects: 0,
        volume: 1,
        pan: 0,
        preload: true,
        groupId: 0
    }, {
        pName: "sound_flash_1",
        kind: 0,
        extension: ".wav",
        origName: "sound_flash_1",
        effects: 0,
        volume: 1,
        pan: 0,
        preload: true,
        groupId: 0
    }, {
        pName: "sound_accent_contact_1",
        kind: 0,
        extension: ".wav",
        origName: "sound_accent_contact_1",
        effects: 0,
        volume: 1,
        pan: 0,
        preload: true,
        groupId: 0
    }, {
        pName: "sound_accent_contact_2",
        kind: 0,
        extension: ".wav",
        origName: "sound_accent_contact_2",
        effects: 0,
        volume: 1,
        pan: 0,
        preload: true,
        groupId: 0
    }, {
        pName: "music_accents3_03",
        kind: 0,
        extension: ".wav",
        origName: "music_accents3_03",
        effects: 0,
        volume: 1,
        pan: 0,
        preload: true,
        groupId: 0
    }, {
        pName: "music_accents3_07",
        kind: 0,
        extension: ".wav",
        origName: "music_accents3_07",
        effects: 0,
        volume: 1,
        pan: 0,
        preload: true,
        groupId: 0
    }, {
        pName: "music_accents3_08",
        kind: 0,
        extension: ".wav",
        origName: "music_accents3_08",
        effects: 0,
        volume: 1,
        pan: 0,
        preload: true,
        groupId: 0
    }, {
        pName: "sound_button_1",
        kind: 0,
        extension: ".wav",
        origName: "sound_button_1",
        effects: 0,
        volume: 1,
        pan: 0,
        preload: true,
        groupId: 0
    }, {
        pName: "music_background",
        kind: 0,
        extension: ".mp3",
        origName: "music_background",
        effects: 0,
        volume: 1,
        pan: 0,
        preload: true,
        groupId: 0
    }, {
        pName: "music_accents3_09",
        kind: 0,
        extension: ".wav",
        origName: "music_accents3_09",
        effects: 0,
        volume: 1,
        pan: 0,
        preload: true,
        groupId: 0
    }, {
        pName: "music_accents3_10",
        kind: 0,
        extension: ".wav",
        origName: "music_accents3_10",
        effects: 0,
        volume: 1,
        pan: 0,
        preload: true,
        groupId: 0
    }],
    AudioGroups: [],
    Sprites: [{
        pName: "spr_phys_floor",
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 8,
        yOrigin: 8,
        bboxLeft: 15,
        bboxTop: 15,
        TPEntryIndex: [0]
    }, {
        pName: "spr_particle_square",
        width: 8,
        height: 8,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 4,
        yOrigin: 4,
        bboxLeft: 2,
        bboxRight: 5,
        bboxTop: 2,
        bboxBottom: 5,
        TPEntryIndex: [1]
    }, {
        pName: "spr_ball_glow",
        width: 210,
        height: 42,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 105,
        yOrigin: 21,
        bboxLeft: 5,
        bboxRight: 204,
        bboxTop: 5,
        bboxBottom: 36,
        TPEntryIndex: [2]
    }, {
        pName: "spr_ball_glare",
        width: 64,
        height: 64,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 32,
        yOrigin: 32,
        bboxLeft: 16,
        bboxRight: 48,
        bboxTop: 15,
        bboxBottom: 47,
        TPEntryIndex: [3, 4, 5, 6]
    }, {
        pName: "spr_infinity",
        width: 37,
        height: 22,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 18,
        yOrigin: 22,
        bboxLeft: 5,
        bboxRight: 31,
        bboxTop: 5,
        bboxBottom: 16,
        TPEntryIndex: [7]
    }, {
        pName: "spr_logo_neon_golf_01",
        width: 587,
        height: 320,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 293,
        yOrigin: 148,
        bboxLeft: 5,
        bboxRight: 586,
        bboxBottom: 319,
        TPEntryIndex: [8]
    }, {
        pName: "spr_pointer_hand",
        width: 128,
        height: 128,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 63,
        yOrigin: 52,
        bboxLeft: 38,
        bboxRight: 97,
        bboxTop: 31,
        bboxBottom: 111,
        TPEntryIndex: [9, 10]
    }, {
        pName: "spr_ball_explosion",
        width: 256,
        height: 256,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 127,
        yOrigin: 128,
        bboxLeft: 63,
        bboxRight: 188,
        bboxTop: 63,
        bboxBottom: 191,
        TPEntryIndex: [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
    }, {
        pName: "spr_mountains_1",
        width: 490,
        height: 346,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 485,
        yOrigin: 341,
        bboxLeft: 5,
        bboxRight: 484,
        bboxTop: 5,
        bboxBottom: 340,
        TPEntryIndex: [22]
    }, {
        pName: "spr_mountains_2",
        width: 490,
        height: 346,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 5,
        yOrigin: 341,
        bboxLeft: 5,
        bboxRight: 484,
        bboxTop: 5,
        bboxBottom: 340,
        TPEntryIndex: [23]
    }, {
        pName: "spr_icon_volume",
        width: 60,
        height: 60,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 5,
        yOrigin: 5,
        bboxLeft: 6,
        bboxRight: 53,
        bboxTop: 9,
        bboxBottom: 52,
        TPEntryIndex: [24, 25]
    }, {
        pName: "spr_icon_play",
        width: 256,
        height: 256,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 128,
        yOrigin: 128,
        bboxLeft: 43,
        bboxRight: 212,
        bboxTop: 43,
        bboxBottom: 212,
        TPEntryIndex: [26, 27, 28, 29]
    }, {
        pName: "spr_icon_play_sml",
        width: 123,
        height: 118,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 61,
        yOrigin: 5,
        bboxLeft: 5,
        bboxRight: 117,
        bboxTop: 5,
        bboxBottom: 112,
        TPEntryIndex: [30]
    }, {
        pName: "spr_icon_play_pause_png",
        width: 101,
        height: 101,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 5,
        yOrigin: 5,
        bboxLeft: 5,
        bboxRight: 95,
        bboxTop: 5,
        bboxBottom: 95,
        TPEntryIndex: [31]
    }, {
        pName: "spr_icon_options",
        width: 60,
        height: 60,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 5,
        yOrigin: 5,
        bboxLeft: 7,
        bboxRight: 51,
        bboxTop: 7,
        bboxBottom: 51,
        TPEntryIndex: [32, 33]
    }, {
        pName: "spr_checkbox",
        width: 64,
        height: 64,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 32,
        yOrigin: 32,
        bboxLeft: 8,
        bboxRight: 54,
        bboxTop: 8,
        bboxBottom: 54,
        TPEntryIndex: [34, 35]
    }, {
        pName: "spr_loading",
        width: 162,
        height: 30,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 81,
        yOrigin: 15,
        bboxLeft: 5,
        bboxRight: 156,
        bboxTop: 5,
        bboxBottom: 24,
        TPEntryIndex: [36]
    }, {
        pName: "spr_html5_games",
        width: 600,
        height: 253,
        transparent: false,
        smooth: false,
        preload: false,
        bboxRight: 599,
        bboxBottom: 252,
        TPEntryIndex: [37]
    }, {
        pName: "spr_btn_volume",
        width: 101,
        height: 101,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 50,
        yOrigin: 5,
        bboxLeft: 5,
        bboxRight: 95,
        bboxTop: 5,
        bboxBottom: 95,
        TPEntryIndex: [38, 39]
    }, {
        pName: "spr_btn_home",
        width: 101,
        height: 101,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 5,
        yOrigin: 5,
        bboxLeft: 5,
        bboxRight: 95,
        bboxTop: 5,
        bboxBottom: 95,
        TPEntryIndex: [40]
    }, {
        pName: "spt_btn_options",
        width: 101,
        height: 101,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 50,
        yOrigin: 5,
        bboxLeft: 5,
        bboxRight: 95,
        bboxTop: 5,
        bboxBottom: 95,
        TPEntryIndex: [41]
    }, {
        pName: "spr_btn_back",
        width: 88,
        height: 91,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 5,
        yOrigin: 5,
        bboxLeft: 5,
        bboxRight: 82,
        bboxTop: 5,
        bboxBottom: 85,
        TPEntryIndex: [42]
    }, {
        pName: "spr_btn_info",
        width: 101,
        height: 101,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 50,
        yOrigin: 5,
        bboxLeft: 5,
        bboxRight: 95,
        bboxTop: 5,
        bboxBottom: 95,
        TPEntryIndex: [43]
    }, {
        pName: "spr_btn_mode",
        width: 284,
        height: 86,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 125,
        yOrigin: 6,
        bboxLeft: 5,
        bboxRight: 278,
        bboxTop: 5,
        bboxBottom: 80,
        TPEntryIndex: [44, 45]
    }, {
        pName: "spr_mode_background",
        width: 508,
        height: 323,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 254,
        yOrigin: 161,
        bboxLeft: 5,
        bboxRight: 502,
        bboxTop: 5,
        bboxBottom: 317,
        TPEntryIndex: [46]
    }, {
        pName: "spr_logo_dogfire",
        width: 312,
        height: 86,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 5,
        yOrigin: 5,
        bboxLeft: 5,
        bboxRight: 306,
        bboxTop: 5,
        bboxBottom: 80,
        TPEntryIndex: [47]
    }, {
        pName: "spr_icon_pause",
        width: 60,
        height: 60,
        transparent: false,
        smooth: false,
        preload: false,
        xOrigin: 5,
        yOrigin: 5,
        bboxLeft: 12,
        bboxRight: 49,
        bboxTop: 8,
        bboxBottom: 52,
        TPEntryIndex: [48]
    }],
    Backgrounds: [],
    Paths: [],
    Scripts: [
        gml_Script_mhtml5_resize_screen_v1,
        gml_Script_mhtml5_resize_screen_v2,
        gml_Script_scr_floor_correction_v1,
        gml_Script_scr_floor_init_v1,
        gml_Script_scr_floor_surface_v1,
        gml_Script_scr_floor_surface_v3,
        gml_Script_scr_language_load,
        gml_Script_scr_level_create_v1,
        gml_Script_scr_level_create_v2,
        gml_Script_scr_level_create_v4,
        gml_Script_scr_screen_init_v1,
        gml_Script_scr_screen_set_v1,
        gml_Script_scr_meter_ctrl_body_arrow,
        gml_Script_scr_meter_ctrl_body_triangle,
        gml_Script_scr_meter_ctrl_pointer_triangle,
        gml_Script_scr_meter_draw_body_arrow,
        gml_Script_scr_meter_draw_body_dashed,
        gml_Script_scr_meter_draw_body_saber,
        gml_Script_scr_meter_sizes,
        gml_Script_mhtml5_center_canvas,
        gml_Script_mhtml5_check_orientation,
        gml_Script_mhtml5_draw_flipwarning,
        gml_Script_mhtml5_hide_addressbar,
        gml_Script_mhtml5_resize_screen,
        gml_Script_mhtml5_var_transfer,
        gml_Script_scale_canvas,
        gml_Script_scr_floor_base_displace,
        gml_Script_scr_floor_code,
        gml_Script_scr_floor_correction,
        gml_Script_scr_floor_draw,
        gml_Script_scr_floor_glow,
        gml_Script_scr_floor_high_low,
        gml_Script_scr_floor_init,
        gml_Script_scr_floor_surface_v2,
        gml_Script_scr_level_analyze,
        gml_Script_scr_level_build_from_string,
        gml_Script_scr_level_create_v3,
        gml_Script_scr_level_next_save,
        gml_Script_scr_level_refresh,
        gml_Script_scr_stars_init,
        gml_Script_scr_physics_ball_init,
        gml_Script_scr_physics_ball_init_v1,
        gml_Script_scr_physics_fixture_init,
        gml_Script_scr_physics_world_create,
        gml_Script_scr_famobi_options_save,
        gml_Script_scr_famobi_progress_load,
        gml_Script_scr_famobi_progress_save,
        gml_Script_scr_famobi_progress_save_sml,
        gml_Script_scr_famobi_MoreGamesButtonImage_load,
        gml_Script_draw_bezier,
        gml_Script_scr_analytics_init,
        gml_Script_scr_analytics_send,
        gml_Script_scr_audio_fade,
        gml_Script_scr_ball_destroy,
        gml_Script_scr_btn_action,
        gml_Script_scr_btn_settings,
        gml_Script_scr_color_background,
        gml_Script_scr_color_flash,
        gml_Script_scr_color_transition,
        gml_Script_scr_color_world,
        gml_Script_scr_debug_print,
        gml_Script_scr_dialog_load,
        gml_Script_scr_draw_hole_arrow,
        gml_Script_scr_draw_menu_background,
        gml_Script_scr_force_apply,
        gml_Script_scr_fps_check,
        gml_Script_scr_game_mode_name,
        gml_Script_scr_game_mode_set,
        gml_Script_scr_game_version,
        gml_Script_scr_hsv_to_rgb,
        gml_Script_scr_ini_options_save,
        gml_Script_scr_ini_progress_load,
        gml_Script_scr_ini_progress_save,
        gml_Script_scr_ini_progress_save_sml,
        gml_Script_scr_level_height,
        gml_Script_scr_lowres_check,
        gml_Script_scr_menu_horizon_y,
        gml_Script_scr_play_music,
        gml_Script_scr_play_sound,
        gml_Script_scr_power_of_two_convert,
        gml_Script_scr_rgb_to_hsv,
        gml_Script_scr_screen_init,
        gml_Script_scr_screen_set,
        gml_Script_scr_shake_view,
        gml_Script_scr_sound_button,
        gml_Script_scr_surface_hole_arrow,
        gml_Script_scr_time_convert,
        gml_Script_scr_tutorial_destroy,
        gml_Script_scr_tween_1,
        gml_Script_scr_tween_2,
        gml_Script_scr_tween_3,
        gml_Script_scr_volume_master_switch,
        gml_Script_scr_world_ratio
    ],
    ScriptNames: [
        "mhtml5_resize_screen_v1",
        "mhtml5_resize_screen_v2",
        "scr_floor_correction_v1",
        "scr_floor_init_v1",
        "scr_floor_surface_v1",
        "scr_floor_surface_v3",
        "scr_language_load",
        "scr_level_create_v1",
        "scr_level_create_v2",
        "scr_level_create_v4",
        "scr_screen_init_v1",
        "scr_screen_set_v1",
        "scr_meter_ctrl_body_arrow",
        "scr_meter_ctrl_body_triangle",
        "scr_meter_ctrl_pointer_triangle",
        "scr_meter_draw_body_arrow",
        "scr_meter_draw_body_dashed",
        "scr_meter_draw_body_saber",
        "scr_meter_sizes",
        "mhtml5_center_canvas",
        "mhtml5_check_orientation",
        "mhtml5_draw_flipwarning",
        "mhtml5_hide_addressbar",
        "mhtml5_resize_screen",
        "mhtml5_var_transfer",
        "scale_canvas",
        "scr_floor_base_displace",
        "scr_floor_code",
        "scr_floor_correction",
        "scr_floor_draw",
        "scr_floor_glow",
        "scr_floor_high_low",
        "scr_floor_init",
        "scr_floor_surface_v2",
        "scr_level_analyze",
        "scr_level_build_from_string",
        "scr_level_create_v3",
        "scr_level_next_save",
        "scr_level_refresh",
        "scr_stars_init",
        "scr_physics_ball_init",
        "scr_physics_ball_init_v1",
        "scr_physics_fixture_init",
        "scr_physics_world_create",
        "scr_famobi_options_save",
        "scr_famobi_progress_load",
        "scr_famobi_progress_save",
        "scr_famobi_progress_save_sml",
        "scr_famobi_MoreGamesButtonImage_load",
        "draw_bezier",
        "scr_analytics_init",
        "scr_analytics_send",
        "scr_audio_fade",
        "scr_ball_destroy",
        "scr_btn_action",
        "scr_btn_settings",
        "scr_color_background",
        "scr_color_flash",
        "scr_color_transition",
        "scr_color_world",
        "scr_debug_print",
        "scr_dialog_load",
        "scr_draw_hole_arrow",
        "scr_draw_menu_background",
        "scr_force_apply",
        "scr_fps_check",
        "scr_game_mode_name",
        "scr_game_mode_set",
        "scr_game_version",
        "scr_hsv_to_rgb",
        "scr_ini_options_save",
        "scr_ini_progress_load",
        "scr_ini_progress_save",
        "scr_ini_progress_save_sml",
        "scr_level_height",
        "scr_lowres_check",
        "scr_menu_horizon_y",
        "scr_play_music",
        "scr_play_sound",
        "scr_power_of_two_convert",
        "scr_rgb_to_hsv",
        "scr_screen_init",
        "scr_screen_set",
        "scr_shake_view",
        "scr_sound_button",
        "scr_surface_hole_arrow",
        "scr_time_convert",
        "scr_tutorial_destroy",
        "scr_tween_1",
        "scr_tween_2",
        "scr_tween_3",
        "scr_volume_master_switch",
        "scr_world_ratio"
    ],
    Shaders: [],
    Fonts: [{
        pName: "font_pixel_arial_12",
        size: 12,
        bold: false,
        italic: false,
        first: 32,
        last: 127,
        charset: 1,
        antialias: 0,
        fontname: "Pixel Arial 11",
        TPageEntry: 49,
        scaleX: 1,
        scaleY: 1,
        glyphs: [{
            i: 32,
            c: " ",
            x: 162,
            y: 76,
            w: 6,
            h: 24,
            shift: 6,
            offset: 0
        }, {
            i: 33,
            c: "!",
            x: 64,
            y: 102,
            w: 2,
            h: 20,
            shift: 4,
            offset: 1
        }, {
            i: 34,
            c: "\"",
            x: 36,
            y: 102,
            w: 6,
            h: 10,
            shift: 8,
            offset: 1
        }, {
            i: 35,
            c: "#",
            x: 182,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 0
        }, {
            i: 36,
            c: "$",
            x: 204,
            y: 28,
            w: 10,
            h: 22,
            shift: 12,
            offset: 0
        }, {
            i: 37,
            c: "%",
            x: 68,
            y: 2,
            w: 18,
            h: 20,
            shift: 20,
            offset: 0
        }, {
            i: 38,
            c: "&",
            x: 16,
            y: 28,
            w: 12,
            h: 20,
            shift: 14,
            offset: 1
        }, {
            i: 39,
            c: "'",
            x: 86,
            y: 102,
            w: 2,
            h: 10,
            shift: 4,
            offset: 1
        }, {
            i: 40,
            c: "(",
            x: 154,
            y: 76,
            w: 6,
            h: 24,
            shift: 8,
            offset: 1
        }, {
            i: 41,
            c: ")",
            x: 130,
            y: 76,
            w: 6,
            h: 24,
            shift: 8,
            offset: 1
        }, {
            i: 42,
            c: "*",
            x: 28,
            y: 102,
            w: 6,
            h: 12,
            shift: 8,
            offset: 1
        }, {
            i: 43,
            c: "+",
            x: 74,
            y: 76,
            w: 10,
            h: 18,
            shift: 12,
            offset: 1
        }, {
            i: 44,
            c: ",",
            x: 48,
            y: 102,
            w: 2,
            h: 24,
            shift: 4,
            offset: 1
        }, {
            i: 45,
            c: "-",
            x: 2,
            y: 102,
            w: 6,
            h: 16,
            shift: 8,
            offset: 1
        }, {
            i: 46,
            c: ".",
            x: 76,
            y: 102,
            w: 2,
            h: 20,
            shift: 4,
            offset: 1
        }, {
            i: 47,
            c: "/",
            x: 218,
            y: 76,
            w: 6,
            h: 20,
            shift: 8,
            offset: 1
        }, {
            i: 48,
            c: "0",
            x: 134,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 49,
            c: "1",
            x: 226,
            y: 76,
            w: 6,
            h: 20,
            shift: 10,
            offset: 1
        }, {
            i: 50,
            c: "2",
            x: 242,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 51,
            c: "3",
            x: 228,
            y: 28,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 52,
            c: "4",
            x: 2,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 53,
            c: "5",
            x: 86,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 54,
            c: "6",
            x: 216,
            y: 28,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 55,
            c: "7",
            x: 98,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 56,
            c: "8",
            x: 194,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 57,
            c: "9",
            x: 146,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 58,
            c: ":",
            x: 60,
            y: 102,
            w: 2,
            h: 20,
            shift: 4,
            offset: 1
        }, {
            i: 59,
            c: ";",
            x: 52,
            y: 102,
            w: 2,
            h: 24,
            shift: 4,
            offset: 1
        }, {
            i: 60,
            c: "<",
            x: 86,
            y: 76,
            w: 10,
            h: 18,
            shift: 12,
            offset: 1
        }, {
            i: 61,
            c: "=",
            x: 118,
            y: 76,
            w: 10,
            h: 16,
            shift: 12,
            offset: 1
        }, {
            i: 62,
            c: ">",
            x: 62,
            y: 76,
            w: 10,
            h: 18,
            shift: 12,
            offset: 1
        }, {
            i: 63,
            c: "?",
            x: 26,
            y: 76,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 64,
            c: "@",
            x: 2,
            y: 2,
            w: 20,
            h: 24,
            shift: 22,
            offset: 0
        }, {
            i: 65,
            c: "A",
            x: 134,
            y: 2,
            w: 14,
            h: 20,
            shift: 16,
            offset: 1
        }, {
            i: 66,
            c: "B",
            x: 176,
            y: 28,
            w: 12,
            h: 20,
            shift: 14,
            offset: 1
        }, {
            i: 67,
            c: "C",
            x: 162,
            y: 28,
            w: 12,
            h: 20,
            shift: 14,
            offset: 1
        }, {
            i: 68,
            c: "D",
            x: 96,
            y: 28,
            w: 12,
            h: 20,
            shift: 14,
            offset: 1
        }, {
            i: 69,
            c: "E",
            x: 14,
            y: 76,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 70,
            c: "F",
            x: 38,
            y: 76,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 71,
            c: "G",
            x: 166,
            y: 2,
            w: 14,
            h: 20,
            shift: 16,
            offset: 0
        }, {
            i: 72,
            c: "H",
            x: 148,
            y: 28,
            w: 12,
            h: 20,
            shift: 14,
            offset: 1
        }, {
            i: 73,
            c: "I",
            x: 72,
            y: 102,
            w: 2,
            h: 20,
            shift: 4,
            offset: 1
        }, {
            i: 74,
            c: "J",
            x: 108,
            y: 76,
            w: 8,
            h: 20,
            shift: 10,
            offset: 1
        }, {
            i: 75,
            c: "K",
            x: 190,
            y: 28,
            w: 12,
            h: 20,
            shift: 14,
            offset: 1
        }, {
            i: 76,
            c: "L",
            x: 50,
            y: 76,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 77,
            c: "M",
            x: 182,
            y: 2,
            w: 14,
            h: 20,
            shift: 16,
            offset: 1
        }, {
            i: 78,
            c: "N",
            x: 230,
            y: 2,
            w: 12,
            h: 20,
            shift: 14,
            offset: 1
        }, {
            i: 79,
            c: "O",
            x: 102,
            y: 2,
            w: 14,
            h: 20,
            shift: 16,
            offset: 1
        }, {
            i: 80,
            c: "P",
            x: 218,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 81,
            c: "Q",
            x: 118,
            y: 2,
            w: 14,
            h: 20,
            shift: 16,
            offset: 0
        }, {
            i: 82,
            c: "R",
            x: 134,
            y: 28,
            w: 12,
            h: 20,
            shift: 14,
            offset: 1
        }, {
            i: 83,
            c: "S",
            x: 44,
            y: 28,
            w: 12,
            h: 20,
            shift: 14,
            offset: 1
        }, {
            i: 84,
            c: "T",
            x: 62,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 85,
            c: "U",
            x: 30,
            y: 28,
            w: 12,
            h: 20,
            shift: 14,
            offset: 1
        }, {
            i: 86,
            c: "V",
            x: 150,
            y: 2,
            w: 14,
            h: 20,
            shift: 16,
            offset: 1
        }, {
            i: 87,
            c: "W",
            x: 24,
            y: 2,
            w: 22,
            h: 20,
            shift: 20,
            offset: -2
        }, {
            i: 88,
            c: "X",
            x: 2,
            y: 28,
            w: 12,
            h: 20,
            shift: 14,
            offset: 0
        }, {
            i: 89,
            c: "Y",
            x: 198,
            y: 2,
            w: 14,
            h: 20,
            shift: 16,
            offset: 1
        }, {
            i: 90,
            c: "Z",
            x: 70,
            y: 28,
            w: 12,
            h: 20,
            shift: 14,
            offset: 1
        }, {
            i: 91,
            c: "[",
            x: 22,
            y: 102,
            w: 4,
            h: 24,
            shift: 6,
            offset: 1
        }, {
            i: 92,
            c: "\\",
            x: 210,
            y: 76,
            w: 6,
            h: 20,
            shift: 8,
            offset: 1
        }, {
            i: 93,
            c: "]",
            x: 10,
            y: 102,
            w: 4,
            h: 24,
            shift: 6,
            offset: 1
        }, {
            i: 94,
            c: "^",
            x: 242,
            y: 76,
            w: 10,
            h: 12,
            shift: 12,
            offset: 1
        }, {
            i: 95,
            c: "_",
            x: 88,
            y: 2,
            w: 12,
            h: 24,
            shift: 14,
            offset: 1
        }, {
            i: 96,
            c: "`",
            x: 80,
            y: 102,
            w: 4,
            h: 8,
            shift: 8,
            offset: 1
        }, {
            i: 97,
            c: "a",
            x: 170,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 98,
            c: "b",
            x: 158,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 99,
            c: "c",
            x: 50,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 100,
            c: "d",
            x: 2,
            y: 76,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 101,
            c: "e",
            x: 110,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 102,
            c: "f",
            x: 194,
            y: 76,
            w: 6,
            h: 20,
            shift: 8,
            offset: 1
        }, {
            i: 103,
            c: "g",
            x: 84,
            y: 28,
            w: 10,
            h: 24,
            shift: 12,
            offset: 1
        }, {
            i: 104,
            c: "h",
            x: 26,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 105,
            c: "i",
            x: 56,
            y: 102,
            w: 2,
            h: 20,
            shift: 4,
            offset: 1
        }, {
            i: 106,
            c: "j",
            x: 16,
            y: 102,
            w: 4,
            h: 24,
            shift: 4,
            offset: -1
        }, {
            i: 107,
            c: "k",
            x: 98,
            y: 76,
            w: 8,
            h: 20,
            shift: 10,
            offset: 1
        }, {
            i: 108,
            c: "l",
            x: 68,
            y: 102,
            w: 2,
            h: 20,
            shift: 4,
            offset: 1
        }, {
            i: 109,
            c: "m",
            x: 214,
            y: 2,
            w: 14,
            h: 20,
            shift: 16,
            offset: 1
        }, {
            i: 110,
            c: "n",
            x: 74,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 111,
            c: "o",
            x: 240,
            y: 28,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 112,
            c: "p",
            x: 58,
            y: 28,
            w: 10,
            h: 24,
            shift: 12,
            offset: 1
        }, {
            i: 113,
            c: "q",
            x: 122,
            y: 28,
            w: 10,
            h: 24,
            shift: 12,
            offset: 1
        }, {
            i: 114,
            c: "r",
            x: 202,
            y: 76,
            w: 6,
            h: 20,
            shift: 8,
            offset: 1
        }, {
            i: 115,
            c: "s",
            x: 206,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 116,
            c: "t",
            x: 234,
            y: 76,
            w: 6,
            h: 20,
            shift: 6,
            offset: -1
        }, {
            i: 117,
            c: "u",
            x: 122,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 118,
            c: "v",
            x: 14,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 119,
            c: "w",
            x: 48,
            y: 2,
            w: 18,
            h: 20,
            shift: 20,
            offset: 0
        }, {
            i: 120,
            c: "x",
            x: 38,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 0
        }, {
            i: 121,
            c: "y",
            x: 110,
            y: 28,
            w: 10,
            h: 24,
            shift: 12,
            offset: 1
        }, {
            i: 122,
            c: "z",
            x: 230,
            y: 54,
            w: 10,
            h: 20,
            shift: 12,
            offset: 1
        }, {
            i: 123,
            c: "{",
            x: 138,
            y: 76,
            w: 6,
            h: 24,
            shift: 8,
            offset: 1
        }, {
            i: 124,
            c: "|",
            x: 44,
            y: 102,
            w: 2,
            h: 24,
            shift: 4,
            offset: 1
        }, {
            i: 125,
            c: "}",
            x: 146,
            y: 76,
            w: 6,
            h: 24,
            shift: 8,
            offset: 1
        }, {
            i: 126,
            c: "~",
            x: 182,
            y: 76,
            w: 10,
            h: 14,
            shift: 12,
            offset: 1
        }, {
            i: 127,
            x: 170,
            y: 76,
            w: 10,
            h: 14,
            shift: 12,
            offset: 1
        }, ],
    }, {
        pName: "font_beyond_med",
        size: 32,
        bold: false,
        italic: false,
        first: 32,
        last: 127,
        charset: 1,
        antialias: 3,
        fontname: "DPSDbeyond",
        TPageEntry: 50,
        scaleX: 1,
        scaleY: 1,
        glyphs: [{
            i: 32,
            c: " ",
            x: 42,
            y: 2,
            w: 26,
            h: 49,
            shift: 26,
            offset: 0
        }, {
            i: 33,
            c: "!",
            x: 56,
            y: 154,
            w: 10,
            h: 42,
            shift: 26,
            offset: 10
        }, {
            i: 34,
            c: "\"",
            x: 162,
            y: 154,
            w: 11,
            h: 25,
            shift: 26,
            offset: 9
        }, {
            i: 35,
            c: "#",
            x: 113,
            y: 2,
            w: 21,
            h: 42,
            shift: 26,
            offset: 4
        }, {
            i: 36,
            c: "$",
            x: 419,
            y: 55,
            w: 15,
            h: 45,
            shift: 26,
            offset: 7
        }, {
            i: 37,
            c: "%",
            x: 2,
            y: 2,
            w: 38,
            h: 43,
            shift: 52,
            offset: 8
        }, {
            i: 38,
            c: "&",
            x: 136,
            y: 2,
            w: 20,
            h: 42,
            shift: 26,
            offset: 5
        }, {
            i: 39,
            c: "'",
            x: 181,
            y: 154,
            w: 4,
            h: 25,
            shift: 26,
            offset: 12
        }, {
            i: 40,
            c: "(",
            x: 492,
            y: 108,
            w: 12,
            h: 42,
            shift: 26,
            offset: 9
        }, {
            i: 41,
            c: ")",
            x: 2,
            y: 154,
            w: 12,
            h: 42,
            shift: 26,
            offset: 9
        }, {
            i: 42,
            c: "*",
            x: 28,
            y: 154,
            w: 14,
            h: 30,
            shift: 26,
            offset: 5
        }, {
            i: 43,
            c: "+",
            x: 2,
            y: 55,
            w: 18,
            h: 41,
            shift: 26,
            offset: 5
        }, {
            i: 44,
            c: ",",
            x: 68,
            y: 154,
            w: 8,
            h: 50,
            shift: 26,
            offset: 7
        }, {
            i: 45,
            c: "-",
            x: 133,
            y: 154,
            w: 9,
            h: 33,
            shift: 26,
            offset: 8
        }, {
            i: 46,
            c: ".",
            x: 153,
            y: 154,
            w: 7,
            h: 42,
            shift: 26,
            offset: 10
        }, {
            i: 47,
            c: "/",
            x: 462,
            y: 2,
            w: 18,
            h: 42,
            shift: 26,
            offset: 4
        }, {
            i: 48,
            c: "0",
            x: 64,
            y: 55,
            w: 17,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 49,
            c: "1",
            x: 100,
            y: 154,
            w: 9,
            h: 42,
            shift: 26,
            offset: 7
        }, {
            i: 50,
            c: "2",
            x: 431,
            y: 108,
            w: 14,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 51,
            c: "3",
            x: 199,
            y: 108,
            w: 15,
            h: 42,
            shift: 26,
            offset: 5
        }, {
            i: 52,
            c: "4",
            x: 159,
            y: 55,
            w: 17,
            h: 42,
            shift: 26,
            offset: 4
        }, {
            i: 53,
            c: "5",
            x: 367,
            y: 108,
            w: 14,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 54,
            c: "6",
            x: 20,
            y: 108,
            w: 16,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 55,
            c: "7",
            x: 250,
            y: 108,
            w: 15,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 56,
            c: "8",
            x: 2,
            y: 108,
            w: 16,
            h: 42,
            shift: 26,
            offset: 5
        }, {
            i: 57,
            c: "9",
            x: 284,
            y: 108,
            w: 15,
            h: 42,
            shift: 26,
            offset: 5
        }, {
            i: 58,
            c: ":",
            x: 144,
            y: 154,
            w: 7,
            h: 42,
            shift: 26,
            offset: 10
        }, {
            i: 59,
            c: ";",
            x: 16,
            y: 154,
            w: 10,
            h: 49,
            shift: 26,
            offset: 7
        }, {
            i: 60,
            c: "<",
            x: 462,
            y: 108,
            w: 13,
            h: 44,
            shift: 26,
            offset: 7
        }, {
            i: 61,
            c: "=",
            x: 398,
            y: 55,
            w: 19,
            h: 36,
            shift: 26,
            offset: 4
        }, {
            i: 62,
            c: ">",
            x: 447,
            y: 108,
            w: 13,
            h: 44,
            shift: 26,
            offset: 7
        }, {
            i: 63,
            c: "?",
            x: 146,
            y: 108,
            w: 16,
            h: 42,
            shift: 26,
            offset: 7
        }, {
            i: 64,
            c: "@",
            x: 158,
            y: 2,
            w: 20,
            h: 42,
            shift: 26,
            offset: 4
        }, {
            i: 65,
            c: "A",
            x: 140,
            y: 55,
            w: 17,
            h: 42,
            shift: 26,
            offset: 5
        }, {
            i: 66,
            c: "B",
            x: 422,
            y: 2,
            w: 18,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 67,
            c: "C",
            x: 301,
            y: 108,
            w: 15,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 68,
            c: "D",
            x: 289,
            y: 55,
            w: 17,
            h: 42,
            shift: 26,
            offset: 5
        }, {
            i: 69,
            c: "E",
            x: 216,
            y: 108,
            w: 15,
            h: 42,
            shift: 26,
            offset: 7
        }, {
            i: 70,
            c: "F",
            x: 267,
            y: 108,
            w: 15,
            h: 42,
            shift: 26,
            offset: 8
        }, {
            i: 71,
            c: "G",
            x: 490,
            y: 55,
            w: 16,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 72,
            c: "H",
            x: 308,
            y: 55,
            w: 17,
            h: 42,
            shift: 26,
            offset: 5
        }, {
            i: 73,
            c: "I",
            x: 415,
            y: 108,
            w: 14,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 74,
            c: "J",
            x: 346,
            y: 55,
            w: 14,
            h: 50,
            shift: 26,
            offset: 6
        }, {
            i: 75,
            c: "K",
            x: 232,
            y: 55,
            w: 17,
            h: 42,
            shift: 26,
            offset: 5
        }, {
            i: 76,
            c: "L",
            x: 399,
            y: 108,
            w: 14,
            h: 42,
            shift: 26,
            offset: 8
        }, {
            i: 77,
            c: "M",
            x: 238,
            y: 2,
            w: 19,
            h: 42,
            shift: 26,
            offset: 4
        }, {
            i: 78,
            c: "N",
            x: 56,
            y: 108,
            w: 16,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 79,
            c: "O",
            x: 270,
            y: 55,
            w: 17,
            h: 42,
            shift: 26,
            offset: 5
        }, {
            i: 80,
            c: "P",
            x: 121,
            y: 55,
            w: 17,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 81,
            c: "Q",
            x: 198,
            y: 2,
            w: 17,
            h: 48,
            shift: 26,
            offset: 5
        }, {
            i: 82,
            c: "R",
            x: 102,
            y: 55,
            w: 17,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 83,
            c: "S",
            x: 182,
            y: 108,
            w: 15,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 84,
            c: "T",
            x: 359,
            y: 2,
            w: 18,
            h: 42,
            shift: 26,
            offset: 4
        }, {
            i: 85,
            c: "U",
            x: 327,
            y: 55,
            w: 17,
            h: 42,
            shift: 26,
            offset: 5
        }, {
            i: 86,
            c: "V",
            x: 251,
            y: 55,
            w: 17,
            h: 42,
            shift: 26,
            offset: 5
        }, {
            i: 87,
            c: "W",
            x: 259,
            y: 2,
            w: 19,
            h: 42,
            shift: 26,
            offset: 4
        }, {
            i: 88,
            c: "X",
            x: 213,
            y: 55,
            w: 17,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 89,
            c: "Y",
            x: 83,
            y: 55,
            w: 17,
            h: 42,
            shift: 26,
            offset: 5
        }, {
            i: 90,
            c: "Z",
            x: 92,
            y: 108,
            w: 16,
            h: 42,
            shift: 26,
            offset: 5
        }, {
            i: 91,
            c: "[",
            x: 89,
            y: 154,
            w: 9,
            h: 42,
            shift: 26,
            offset: 7
        }, {
            i: 92,
            c: "\\",
            x: 339,
            y: 2,
            w: 18,
            h: 42,
            shift: 26,
            offset: 4
        }, {
            i: 93,
            c: "]",
            x: 78,
            y: 154,
            w: 9,
            h: 42,
            shift: 26,
            offset: 7
        }, {
            i: 94,
            c: "^",
            x: 111,
            y: 154,
            w: 20,
            h: 18,
            shift: 26,
            offset: 4
        }, {
            i: 95,
            c: "_",
            x: 217,
            y: 2,
            w: 19,
            h: 42,
            shift: 26,
            offset: 4
        }, {
            i: 96,
            c: "`",
            x: 318,
            y: 2,
            w: 19,
            h: 40,
            shift: 26,
            offset: 4
        }, {
            i: 97,
            c: "a",
            x: 380,
            y: 55,
            w: 16,
            h: 43,
            shift: 26,
            offset: 5
        }, {
            i: 98,
            c: "b",
            x: 233,
            y: 108,
            w: 15,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 99,
            c: "c",
            x: 383,
            y: 108,
            w: 14,
            h: 42,
            shift: 26,
            offset: 7
        }, {
            i: 100,
            c: "d",
            x: 362,
            y: 55,
            w: 16,
            h: 43,
            shift: 26,
            offset: 5
        }, {
            i: 101,
            c: "e",
            x: 436,
            y: 55,
            w: 16,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 102,
            c: "f",
            x: 164,
            y: 108,
            w: 16,
            h: 42,
            shift: 26,
            offset: 7
        }, {
            i: 103,
            c: "g",
            x: 70,
            y: 2,
            w: 18,
            h: 50,
            shift: 26,
            offset: 5
        }, {
            i: 104,
            c: "h",
            x: 318,
            y: 108,
            w: 15,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 105,
            c: "i",
            x: 44,
            y: 154,
            w: 10,
            h: 42,
            shift: 26,
            offset: 8
        }, {
            i: 106,
            c: "j",
            x: 197,
            y: 55,
            w: 14,
            h: 51,
            shift: 26,
            offset: 8
        }, {
            i: 107,
            c: "k",
            x: 454,
            y: 55,
            w: 16,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 108,
            c: "l",
            x: 351,
            y: 108,
            w: 14,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 109,
            c: "m",
            x: 90,
            y: 2,
            w: 21,
            h: 42,
            shift: 26,
            offset: 2
        }, {
            i: 110,
            c: "n",
            x: 442,
            y: 2,
            w: 18,
            h: 42,
            shift: 26,
            offset: 4
        }, {
            i: 111,
            c: "o",
            x: 45,
            y: 55,
            w: 17,
            h: 42,
            shift: 26,
            offset: 5
        }, {
            i: 112,
            c: "p",
            x: 301,
            y: 2,
            w: 15,
            h: 51,
            shift: 26,
            offset: 6
        }, {
            i: 113,
            c: "q",
            x: 482,
            y: 2,
            w: 15,
            h: 50,
            shift: 26,
            offset: 6
        }, {
            i: 114,
            c: "r",
            x: 472,
            y: 55,
            w: 16,
            h: 42,
            shift: 26,
            offset: 5
        }, {
            i: 115,
            c: "s",
            x: 335,
            y: 108,
            w: 14,
            h: 43,
            shift: 26,
            offset: 6
        }, {
            i: 116,
            c: "t",
            x: 477,
            y: 108,
            w: 13,
            h: 42,
            shift: 26,
            offset: 7
        }, {
            i: 117,
            c: "u",
            x: 379,
            y: 2,
            w: 18,
            h: 42,
            shift: 26,
            offset: 5
        }, {
            i: 118,
            c: "v",
            x: 178,
            y: 55,
            w: 17,
            h: 42,
            shift: 26,
            offset: 5
        }, {
            i: 119,
            c: "w",
            x: 280,
            y: 2,
            w: 19,
            h: 42,
            shift: 26,
            offset: 4
        }, {
            i: 120,
            c: "x",
            x: 110,
            y: 108,
            w: 16,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 121,
            c: "y",
            x: 180,
            y: 2,
            w: 16,
            h: 51,
            shift: 26,
            offset: 5
        }, {
            i: 122,
            c: "z",
            x: 38,
            y: 108,
            w: 16,
            h: 42,
            shift: 26,
            offset: 5
        }, {
            i: 123,
            c: "{",
            x: 74,
            y: 108,
            w: 16,
            h: 42,
            shift: 26,
            offset: 5
        }, {
            i: 124,
            c: "|",
            x: 175,
            y: 154,
            w: 4,
            h: 51,
            shift: 26,
            offset: 12
        }, {
            i: 125,
            c: "}",
            x: 128,
            y: 108,
            w: 16,
            h: 42,
            shift: 26,
            offset: 6
        }, {
            i: 126,
            c: "~",
            x: 399,
            y: 2,
            w: 21,
            h: 36,
            shift: 26,
            offset: 4
        }, {
            i: 127,
            x: 22,
            y: 55,
            w: 21,
            h: 35,
            shift: 26,
            offset: 4
        }, ],
    }, {
        pName: "font_beyond_sml",
        size: 28,
        bold: false,
        italic: false,
        first: 32,
        last: 127,
        charset: 1,
        antialias: 3,
        fontname: "DPSDbeyond",
        TPageEntry: 51,
        scaleX: 1,
        scaleY: 1,
        glyphs: [{
            i: 32,
            c: " ",
            x: 36,
            y: 2,
            w: 22,
            h: 42,
            shift: 22,
            offset: 0
        }, {
            i: 33,
            c: "!",
            x: 370,
            y: 94,
            w: 8,
            h: 36,
            shift: 22,
            offset: 8
        }, {
            i: 34,
            c: "\"",
            x: 439,
            y: 94,
            w: 10,
            h: 22,
            shift: 22,
            offset: 7
        }, {
            i: 35,
            c: "#",
            x: 78,
            y: 2,
            w: 18,
            h: 36,
            shift: 23,
            offset: 3
        }, {
            i: 36,
            c: "$",
            x: 200,
            y: 48,
            w: 13,
            h: 39,
            shift: 22,
            offset: 6
        }, {
            i: 37,
            c: "%",
            x: 2,
            y: 2,
            w: 32,
            h: 37,
            shift: 45,
            offset: 7
        }, {
            i: 38,
            c: "&",
            x: 170,
            y: 2,
            w: 17,
            h: 36,
            shift: 22,
            offset: 4
        }, {
            i: 39,
            c: "'",
            x: 483,
            y: 94,
            w: 3,
            h: 22,
            shift: 22,
            offset: 10
        }, {
            i: 40,
            c: "(",
            x: 311,
            y: 94,
            w: 11,
            h: 36,
            shift: 22,
            offset: 8
        }, {
            i: 41,
            c: ")",
            x: 324,
            y: 94,
            w: 11,
            h: 36,
            shift: 22,
            offset: 8
        }, {
            i: 42,
            c: "*",
            x: 347,
            y: 94,
            w: 12,
            h: 25,
            shift: 22,
            offset: 4
        }, {
            i: 43,
            c: "+",
            x: 169,
            y: 48,
            w: 15,
            h: 35,
            shift: 22,
            offset: 4
        }, {
            i: 44,
            c: ",",
            x: 361,
            y: 94,
            w: 7,
            h: 42,
            shift: 22,
            offset: 6
        }, {
            i: 45,
            c: "-",
            x: 451,
            y: 94,
            w: 8,
            h: 27,
            shift: 22,
            offset: 7
        }, {
            i: 46,
            c: ".",
            x: 461,
            y: 94,
            w: 6,
            h: 36,
            shift: 22,
            offset: 8
        }, {
            i: 47,
            c: "/",
            x: 19,
            y: 48,
            w: 15,
            h: 36,
            shift: 22,
            offset: 4
        }, {
            i: 48,
            c: "0",
            x: 421,
            y: 2,
            w: 15,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 49,
            c: "1",
            x: 410,
            y: 94,
            w: 8,
            h: 36,
            shift: 22,
            offset: 6
        }, {
            i: 50,
            c: "2",
            x: 171,
            y: 94,
            w: 13,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 51,
            c: "3",
            x: 111,
            y: 94,
            w: 13,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 52,
            c: "4",
            x: 87,
            y: 48,
            w: 15,
            h: 36,
            shift: 22,
            offset: 3
        }, {
            i: 53,
            c: "5",
            x: 96,
            y: 94,
            w: 13,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 54,
            c: "6",
            x: 327,
            y: 48,
            w: 14,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 55,
            c: "7",
            x: 81,
            y: 94,
            w: 13,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 56,
            c: "8",
            x: 343,
            y: 48,
            w: 14,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 57,
            c: "9",
            x: 471,
            y: 48,
            w: 14,
            h: 36,
            shift: 22,
            offset: 4
        }, {
            i: 58,
            c: ":",
            x: 469,
            y: 94,
            w: 6,
            h: 36,
            shift: 22,
            offset: 8
        }, {
            i: 59,
            c: ";",
            x: 337,
            y: 94,
            w: 8,
            h: 42,
            shift: 22,
            offset: 6
        }, {
            i: 60,
            c: "<",
            x: 285,
            y: 94,
            w: 11,
            h: 37,
            shift: 22,
            offset: 6
        }, {
            i: 61,
            c: "=",
            x: 18,
            y: 94,
            w: 16,
            h: 31,
            shift: 22,
            offset: 4
        }, {
            i: 62,
            c: ">",
            x: 298,
            y: 94,
            w: 11,
            h: 37,
            shift: 22,
            offset: 6
        }, {
            i: 63,
            c: "?",
            x: 439,
            y: 48,
            w: 14,
            h: 36,
            shift: 22,
            offset: 6
        }, {
            i: 64,
            c: "@",
            x: 151,
            y: 2,
            w: 17,
            h: 36,
            shift: 22,
            offset: 4
        }, {
            i: 65,
            c: "A",
            x: 70,
            y: 48,
            w: 15,
            h: 36,
            shift: 22,
            offset: 4
        }, {
            i: 66,
            c: "B",
            x: 387,
            y: 2,
            w: 15,
            h: 36,
            shift: 22,
            offset: 6
        }, {
            i: 67,
            c: "C",
            x: 156,
            y: 94,
            w: 13,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 68,
            c: "D",
            x: 438,
            y: 2,
            w: 15,
            h: 36,
            shift: 22,
            offset: 4
        }, {
            i: 69,
            c: "E",
            x: 66,
            y: 94,
            w: 13,
            h: 36,
            shift: 22,
            offset: 6
        }, {
            i: 70,
            c: "F",
            x: 186,
            y: 94,
            w: 13,
            h: 36,
            shift: 22,
            offset: 7
        }, {
            i: 71,
            c: "G",
            x: 375,
            y: 48,
            w: 14,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 72,
            c: "H",
            x: 215,
            y: 48,
            w: 14,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 73,
            c: "I",
            x: 271,
            y: 94,
            w: 12,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 74,
            c: "J",
            x: 155,
            y: 48,
            w: 12,
            h: 44,
            shift: 22,
            offset: 5
        }, {
            i: 75,
            c: "K",
            x: 263,
            y: 48,
            w: 14,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 76,
            c: "L",
            x: 243,
            y: 94,
            w: 12,
            h: 36,
            shift: 22,
            offset: 7
        }, {
            i: 77,
            c: "M",
            x: 224,
            y: 2,
            w: 16,
            h: 36,
            shift: 22,
            offset: 4
        }, {
            i: 78,
            c: "N",
            x: 279,
            y: 48,
            w: 14,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 79,
            c: "O",
            x: 104,
            y: 48,
            w: 15,
            h: 36,
            shift: 22,
            offset: 4
        }, {
            i: 80,
            c: "P",
            x: 489,
            y: 2,
            w: 15,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 81,
            c: "Q",
            x: 134,
            y: 2,
            w: 15,
            h: 41,
            shift: 22,
            offset: 4
        }, {
            i: 82,
            c: "R",
            x: 472,
            y: 2,
            w: 15,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 83,
            c: "S",
            x: 141,
            y: 94,
            w: 13,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 84,
            c: "T",
            x: 296,
            y: 2,
            w: 16,
            h: 36,
            shift: 22,
            offset: 3
        }, {
            i: 85,
            c: "U",
            x: 231,
            y: 48,
            w: 14,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 86,
            c: "V",
            x: 455,
            y: 2,
            w: 15,
            h: 36,
            shift: 22,
            offset: 4
        }, {
            i: 87,
            c: "W",
            x: 260,
            y: 2,
            w: 16,
            h: 36,
            shift: 22,
            offset: 3
        }, {
            i: 88,
            c: "X",
            x: 2,
            y: 48,
            w: 15,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 89,
            c: "Y",
            x: 404,
            y: 2,
            w: 15,
            h: 36,
            shift: 22,
            offset: 4
        }, {
            i: 90,
            c: "Z",
            x: 455,
            y: 48,
            w: 14,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 91,
            c: "[",
            x: 390,
            y: 94,
            w: 8,
            h: 36,
            shift: 22,
            offset: 6
        }, {
            i: 92,
            c: "\\",
            x: 121,
            y: 48,
            w: 15,
            h: 36,
            shift: 22,
            offset: 4
        }, {
            i: 93,
            c: "]",
            x: 400,
            y: 94,
            w: 8,
            h: 36,
            shift: 22,
            offset: 6
        }, {
            i: 94,
            c: "^",
            x: 420,
            y: 94,
            w: 17,
            h: 16,
            shift: 22,
            offset: 3
        }, {
            i: 95,
            c: "_",
            x: 314,
            y: 2,
            w: 16,
            h: 36,
            shift: 22,
            offset: 4
        }, {
            i: 96,
            c: "`",
            x: 205,
            y: 2,
            w: 17,
            h: 35,
            shift: 22,
            offset: 3
        }, {
            i: 97,
            c: "a",
            x: 51,
            y: 94,
            w: 13,
            h: 37,
            shift: 22,
            offset: 5
        }, {
            i: 98,
            c: "b",
            x: 407,
            y: 48,
            w: 14,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 99,
            c: "c",
            x: 215,
            y: 94,
            w: 12,
            h: 36,
            shift: 22,
            offset: 6
        }, {
            i: 100,
            c: "d",
            x: 36,
            y: 94,
            w: 13,
            h: 37,
            shift: 22,
            offset: 5
        }, {
            i: 101,
            c: "e",
            x: 359,
            y: 48,
            w: 14,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 102,
            c: "f",
            x: 247,
            y: 48,
            w: 14,
            h: 36,
            shift: 22,
            offset: 6
        }, {
            i: 103,
            c: "g",
            x: 60,
            y: 2,
            w: 16,
            h: 43,
            shift: 22,
            offset: 5
        }, {
            i: 104,
            c: "h",
            x: 2,
            y: 94,
            w: 14,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 105,
            c: "i",
            x: 380,
            y: 94,
            w: 8,
            h: 36,
            shift: 22,
            offset: 7
        }, {
            i: 106,
            c: "j",
            x: 186,
            y: 48,
            w: 12,
            h: 43,
            shift: 22,
            offset: 7
        }, {
            i: 107,
            c: "k",
            x: 391,
            y: 48,
            w: 14,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 108,
            c: "l",
            x: 229,
            y: 94,
            w: 12,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 109,
            c: "m",
            x: 98,
            y: 2,
            w: 18,
            h: 36,
            shift: 22,
            offset: 2
        }, {
            i: 110,
            c: "n",
            x: 278,
            y: 2,
            w: 16,
            h: 36,
            shift: 22,
            offset: 3
        }, {
            i: 111,
            c: "o",
            x: 53,
            y: 48,
            w: 15,
            h: 36,
            shift: 22,
            offset: 4
        }, {
            i: 112,
            c: "p",
            x: 118,
            y: 2,
            w: 14,
            h: 44,
            shift: 22,
            offset: 5
        }, {
            i: 113,
            c: "q",
            x: 189,
            y: 2,
            w: 14,
            h: 43,
            shift: 22,
            offset: 5
        }, {
            i: 114,
            c: "r",
            x: 126,
            y: 94,
            w: 13,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 115,
            c: "s",
            x: 201,
            y: 94,
            w: 12,
            h: 37,
            shift: 22,
            offset: 5
        }, {
            i: 116,
            c: "t",
            x: 257,
            y: 94,
            w: 12,
            h: 36,
            shift: 22,
            offset: 6
        }, {
            i: 117,
            c: "u",
            x: 138,
            y: 48,
            w: 15,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 118,
            c: "v",
            x: 36,
            y: 48,
            w: 15,
            h: 36,
            shift: 22,
            offset: 4
        }, {
            i: 119,
            c: "w",
            x: 242,
            y: 2,
            w: 16,
            h: 36,
            shift: 22,
            offset: 3
        }, {
            i: 120,
            c: "x",
            x: 487,
            y: 48,
            w: 14,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 121,
            c: "y",
            x: 332,
            y: 2,
            w: 13,
            h: 44,
            shift: 22,
            offset: 5
        }, {
            i: 122,
            c: "z",
            x: 311,
            y: 48,
            w: 14,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 123,
            c: "{",
            x: 295,
            y: 48,
            w: 14,
            h: 36,
            shift: 22,
            offset: 4
        }, {
            i: 124,
            c: "|",
            x: 477,
            y: 94,
            w: 4,
            h: 44,
            shift: 22,
            offset: 10
        }, {
            i: 125,
            c: "}",
            x: 423,
            y: 48,
            w: 14,
            h: 36,
            shift: 22,
            offset: 5
        }, {
            i: 126,
            c: "~",
            x: 367,
            y: 2,
            w: 18,
            h: 31,
            shift: 22,
            offset: 3
        }, {
            i: 127,
            x: 347,
            y: 2,
            w: 18,
            h: 31,
            shift: 22,
            offset: 3
        }, ],
    }, {
        pName: "font_beyond_tiny",
        size: 24,
        bold: false,
        italic: false,
        first: 32,
        last: 127,
        charset: 1,
        antialias: 3,
        fontname: "DPSDbeyond",
        TPageEntry: 52,
        scaleX: 1,
        scaleY: 1,
        glyphs: [{
            i: 32,
            c: " ",
            x: 32,
            y: 2,
            w: 19,
            h: 36,
            shift: 19,
            offset: 0
        }, {
            i: 33,
            c: "!",
            x: 222,
            y: 155,
            w: 7,
            h: 31,
            shift: 19,
            offset: 7
        }, {
            i: 34,
            c: "\"",
            x: 61,
            y: 194,
            w: 9,
            h: 19,
            shift: 19,
            offset: 6
        }, {
            i: 35,
            c: "#",
            x: 69,
            y: 2,
            w: 16,
            h: 31,
            shift: 20,
            offset: 3
        }, {
            i: 36,
            c: "$",
            x: 210,
            y: 116,
            w: 11,
            h: 33,
            shift: 19,
            offset: 5
        }, {
            i: 37,
            c: "%",
            x: 2,
            y: 2,
            w: 28,
            h: 31,
            shift: 39,
            offset: 6
        }, {
            i: 38,
            c: "&",
            x: 121,
            y: 2,
            w: 15,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 39,
            c: "'",
            x: 86,
            y: 194,
            w: 3,
            h: 19,
            shift: 19,
            offset: 9
        }, {
            i: 40,
            c: "(",
            x: 199,
            y: 155,
            w: 9,
            h: 31,
            shift: 19,
            offset: 7
        }, {
            i: 41,
            c: ")",
            x: 188,
            y: 155,
            w: 9,
            h: 31,
            shift: 19,
            offset: 7
        }, {
            i: 42,
            c: "*",
            x: 210,
            y: 155,
            w: 10,
            h: 22,
            shift: 19,
            offset: 4
        }, {
            i: 43,
            c: "+",
            x: 122,
            y: 82,
            w: 13,
            h: 30,
            shift: 19,
            offset: 4
        }, {
            i: 44,
            c: ",",
            x: 20,
            y: 194,
            w: 6,
            h: 36,
            shift: 19,
            offset: 5
        }, {
            i: 45,
            c: "-",
            x: 72,
            y: 194,
            w: 7,
            h: 24,
            shift: 19,
            offset: 6
        }, {
            i: 46,
            c: ".",
            x: 53,
            y: 194,
            w: 6,
            h: 31,
            shift: 19,
            offset: 7
        }, {
            i: 47,
            c: "/",
            x: 205,
            y: 42,
            w: 13,
            h: 31,
            shift: 19,
            offset: 3
        }, {
            i: 48,
            c: "0",
            x: 32,
            y: 82,
            w: 13,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 49,
            c: "1",
            x: 231,
            y: 155,
            w: 7,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 50,
            c: "2",
            x: 2,
            y: 155,
            w: 11,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 51,
            c: "3",
            x: 93,
            y: 155,
            w: 11,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 52,
            c: "4",
            x: 235,
            y: 42,
            w: 13,
            h: 31,
            shift: 19,
            offset: 3
        }, {
            i: 53,
            c: "5",
            x: 15,
            y: 155,
            w: 11,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 54,
            c: "6",
            x: 2,
            y: 116,
            w: 12,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 55,
            c: "7",
            x: 28,
            y: 155,
            w: 11,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 56,
            c: "8",
            x: 237,
            y: 82,
            w: 12,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 57,
            c: "9",
            x: 156,
            y: 116,
            w: 12,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 58,
            c: ":",
            x: 45,
            y: 194,
            w: 6,
            h: 31,
            shift: 19,
            offset: 7
        }, {
            i: 59,
            c: ";",
            x: 178,
            y: 155,
            w: 8,
            h: 37,
            shift: 19,
            offset: 5
        }, {
            i: 60,
            c: "<",
            x: 106,
            y: 155,
            w: 10,
            h: 32,
            shift: 19,
            offset: 6
        }, {
            i: 61,
            c: "=",
            x: 151,
            y: 82,
            w: 14,
            h: 27,
            shift: 19,
            offset: 3
        }, {
            i: 62,
            c: ">",
            x: 118,
            y: 155,
            w: 10,
            h: 32,
            shift: 19,
            offset: 6
        }, {
            i: 63,
            c: "?",
            x: 142,
            y: 116,
            w: 12,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 64,
            c: "@",
            x: 104,
            y: 2,
            w: 15,
            h: 31,
            shift: 19,
            offset: 3
        }, {
            i: 65,
            c: "A",
            x: 62,
            y: 82,
            w: 13,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 66,
            c: "B",
            x: 107,
            y: 82,
            w: 13,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 67,
            c: "C",
            x: 67,
            y: 155,
            w: 11,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 68,
            c: "D",
            x: 17,
            y: 82,
            w: 13,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 69,
            c: "E",
            x: 54,
            y: 155,
            w: 11,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 70,
            c: "F",
            x: 236,
            y: 116,
            w: 11,
            h: 31,
            shift: 19,
            offset: 6
        }, {
            i: 71,
            c: "G",
            x: 167,
            y: 82,
            w: 12,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 72,
            c: "H",
            x: 47,
            y: 82,
            w: 13,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 73,
            c: "I",
            x: 142,
            y: 155,
            w: 10,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 74,
            c: "J",
            x: 198,
            y: 116,
            w: 10,
            h: 37,
            shift: 19,
            offset: 5
        }, {
            i: 75,
            c: "K",
            x: 30,
            y: 116,
            w: 12,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 76,
            c: "L",
            x: 41,
            y: 155,
            w: 11,
            h: 31,
            shift: 19,
            offset: 6
        }, {
            i: 77,
            c: "M",
            x: 2,
            y: 42,
            w: 14,
            h: 31,
            shift: 19,
            offset: 3
        }, {
            i: 78,
            c: "N",
            x: 195,
            y: 82,
            w: 12,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 79,
            c: "O",
            x: 77,
            y: 82,
            w: 13,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 80,
            c: "P",
            x: 2,
            y: 82,
            w: 13,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 81,
            c: "Q",
            x: 152,
            y: 2,
            w: 13,
            h: 35,
            shift: 19,
            offset: 4
        }, {
            i: 82,
            c: "R",
            x: 160,
            y: 42,
            w: 13,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 83,
            c: "S",
            x: 223,
            y: 116,
            w: 11,
            h: 32,
            shift: 19,
            offset: 5
        }, {
            i: 84,
            c: "T",
            x: 18,
            y: 42,
            w: 14,
            h: 31,
            shift: 19,
            offset: 3
        }, {
            i: 85,
            c: "U",
            x: 44,
            y: 116,
            w: 12,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 86,
            c: "V",
            x: 145,
            y: 42,
            w: 13,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 87,
            c: "W",
            x: 227,
            y: 2,
            w: 14,
            h: 31,
            shift: 19,
            offset: 3
        }, {
            i: 88,
            c: "X",
            x: 220,
            y: 42,
            w: 13,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 89,
            c: "Y",
            x: 175,
            y: 42,
            w: 13,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 90,
            c: "Z",
            x: 72,
            y: 116,
            w: 12,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 91,
            c: "[",
            x: 240,
            y: 155,
            w: 7,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 92,
            c: "\\",
            x: 92,
            y: 82,
            w: 13,
            h: 31,
            shift: 19,
            offset: 3
        }, {
            i: 93,
            c: "]",
            x: 2,
            y: 194,
            w: 7,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 94,
            c: "^",
            x: 28,
            y: 194,
            w: 15,
            h: 14,
            shift: 19,
            offset: 3
        }, {
            i: 95,
            c: "_",
            x: 34,
            y: 42,
            w: 14,
            h: 31,
            shift: 19,
            offset: 3
        }, {
            i: 96,
            c: "`",
            x: 68,
            y: 42,
            w: 14,
            h: 30,
            shift: 19,
            offset: 3
        }, {
            i: 97,
            c: "a",
            x: 100,
            y: 116,
            w: 12,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 98,
            c: "b",
            x: 86,
            y: 116,
            w: 12,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 99,
            c: "c",
            x: 130,
            y: 155,
            w: 10,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 100,
            c: "d",
            x: 137,
            y: 82,
            w: 12,
            h: 32,
            shift: 19,
            offset: 4
        }, {
            i: 101,
            c: "e",
            x: 223,
            y: 82,
            w: 12,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 102,
            c: "f",
            x: 16,
            y: 116,
            w: 12,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 103,
            c: "g",
            x: 53,
            y: 2,
            w: 14,
            h: 38,
            shift: 19,
            offset: 4
        }, {
            i: 104,
            c: "h",
            x: 184,
            y: 116,
            w: 12,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 105,
            c: "i",
            x: 11,
            y: 194,
            w: 7,
            h: 31,
            shift: 19,
            offset: 6
        }, {
            i: 106,
            c: "j",
            x: 84,
            y: 42,
            w: 11,
            h: 38,
            shift: 19,
            offset: 6
        }, {
            i: 107,
            c: "k",
            x: 128,
            y: 116,
            w: 12,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 108,
            c: "l",
            x: 154,
            y: 155,
            w: 10,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 109,
            c: "m",
            x: 87,
            y: 2,
            w: 15,
            h: 32,
            shift: 19,
            offset: 2
        }, {
            i: 110,
            c: "n",
            x: 211,
            y: 2,
            w: 14,
            h: 31,
            shift: 19,
            offset: 3
        }, {
            i: 111,
            c: "o",
            x: 190,
            y: 42,
            w: 13,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 112,
            c: "p",
            x: 181,
            y: 2,
            w: 12,
            h: 37,
            shift: 19,
            offset: 5
        }, {
            i: 113,
            c: "q",
            x: 138,
            y: 2,
            w: 12,
            h: 38,
            shift: 19,
            offset: 5
        }, {
            i: 114,
            c: "r",
            x: 114,
            y: 116,
            w: 12,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 115,
            c: "s",
            x: 80,
            y: 155,
            w: 11,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 116,
            c: "t",
            x: 166,
            y: 155,
            w: 10,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 117,
            c: "u",
            x: 115,
            y: 42,
            w: 13,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 118,
            c: "v",
            x: 130,
            y: 42,
            w: 13,
            h: 31,
            shift: 19,
            offset: 3
        }, {
            i: 119,
            c: "w",
            x: 195,
            y: 2,
            w: 14,
            h: 31,
            shift: 19,
            offset: 3
        }, {
            i: 120,
            c: "x",
            x: 170,
            y: 116,
            w: 12,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 121,
            c: "y",
            x: 167,
            y: 2,
            w: 12,
            h: 37,
            shift: 19,
            offset: 4
        }, {
            i: 122,
            c: "z",
            x: 181,
            y: 82,
            w: 12,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 123,
            c: "{",
            x: 209,
            y: 82,
            w: 12,
            h: 31,
            shift: 19,
            offset: 4
        }, {
            i: 124,
            c: "|",
            x: 81,
            y: 194,
            w: 3,
            h: 38,
            shift: 19,
            offset: 9
        }, {
            i: 125,
            c: "}",
            x: 58,
            y: 116,
            w: 12,
            h: 31,
            shift: 19,
            offset: 5
        }, {
            i: 126,
            c: "~",
            x: 50,
            y: 42,
            w: 16,
            h: 27,
            shift: 19,
            offset: 3
        }, {
            i: 127,
            x: 97,
            y: 42,
            w: 16,
            h: 26,
            shift: 19,
            offset: 3
        }, ],
    }, {
        pName: "font_score_3",
        size: 25,
        bold: true,
        italic: false,
        first: 32,
        last: 115,
        charset: 1,
        antialias: 3,
        fontname: "DPSDbeyond",
        TPageEntry: 53,
        scaleX: 1,
        scaleY: 1,
        glyphs: [{
            i: 32,
            c: " ",
            x: 2,
            y: 2,
            w: 21,
            h: 37,
            shift: 21,
            offset: 0
        }, {
            i: 43,
            c: "+",
            x: 59,
            y: 2,
            w: 15,
            h: 31,
            shift: 21,
            offset: 4
        }, {
            i: 48,
            c: "0",
            x: 42,
            y: 2,
            w: 15,
            h: 32,
            shift: 21,
            offset: 4
        }, {
            i: 49,
            c: "1",
            x: 77,
            y: 41,
            w: 8,
            h: 32,
            shift: 21,
            offset: 6
        }, {
            i: 50,
            c: "2",
            x: 62,
            y: 41,
            w: 13,
            h: 32,
            shift: 21,
            offset: 5
        }, {
            i: 51,
            c: "3",
            x: 47,
            y: 41,
            w: 13,
            h: 32,
            shift: 21,
            offset: 4
        }, {
            i: 52,
            c: "4",
            x: 25,
            y: 2,
            w: 15,
            h: 32,
            shift: 21,
            offset: 3
        }, {
            i: 53,
            c: "5",
            x: 17,
            y: 41,
            w: 13,
            h: 32,
            shift: 21,
            offset: 4
        }, {
            i: 54,
            c: "6",
            x: 92,
            y: 2,
            w: 14,
            h: 32,
            shift: 21,
            offset: 4
        }, {
            i: 55,
            c: "7",
            x: 32,
            y: 41,
            w: 13,
            h: 32,
            shift: 21,
            offset: 5
        }, {
            i: 56,
            c: "8",
            x: 108,
            y: 2,
            w: 14,
            h: 32,
            shift: 21,
            offset: 4
        }, {
            i: 57,
            c: "9",
            x: 76,
            y: 2,
            w: 14,
            h: 32,
            shift: 21,
            offset: 4
        }, {
            i: 58,
            c: ":",
            x: 87,
            y: 41,
            w: 7,
            h: 32,
            shift: 21,
            offset: 7
        }, {
            i: 115,
            c: "s",
            x: 2,
            y: 41,
            w: 13,
            h: 33,
            shift: 21,
            offset: 5
        }, ],
    }, {
        pName: "font_score_2",
        size: 20,
        bold: true,
        italic: false,
        first: 32,
        last: 115,
        charset: 1,
        antialias: 3,
        fontname: "DPSDbeyond",
        TPageEntry: 54,
        scaleX: 1,
        scaleY: 1,
        glyphs: [{
            i: 32,
            c: " ",
            x: 2,
            y: 2,
            w: 17,
            h: 31,
            shift: 17,
            offset: 0
        }, {
            i: 43,
            c: "+",
            x: 49,
            y: 2,
            w: 12,
            h: 25,
            shift: 17,
            offset: 3
        }, {
            i: 48,
            c: "0",
            x: 35,
            y: 2,
            w: 12,
            h: 26,
            shift: 17,
            offset: 4
        }, {
            i: 49,
            c: "1",
            x: 51,
            y: 35,
            w: 7,
            h: 26,
            shift: 17,
            offset: 5
        }, {
            i: 50,
            c: "2",
            x: 39,
            y: 35,
            w: 10,
            h: 26,
            shift: 17,
            offset: 4
        }, {
            i: 51,
            c: "3",
            x: 63,
            y: 2,
            w: 11,
            h: 26,
            shift: 17,
            offset: 3
        }, {
            i: 52,
            c: "4",
            x: 21,
            y: 2,
            w: 12,
            h: 26,
            shift: 17,
            offset: 2
        }, {
            i: 53,
            c: "5",
            x: 27,
            y: 35,
            w: 10,
            h: 26,
            shift: 17,
            offset: 4
        }, {
            i: 54,
            c: "6",
            x: 76,
            y: 2,
            w: 11,
            h: 26,
            shift: 17,
            offset: 4
        }, {
            i: 55,
            c: "7",
            x: 102,
            y: 2,
            w: 11,
            h: 26,
            shift: 17,
            offset: 4
        }, {
            i: 56,
            c: "8",
            x: 2,
            y: 35,
            w: 11,
            h: 26,
            shift: 17,
            offset: 3
        }, {
            i: 57,
            c: "9",
            x: 89,
            y: 2,
            w: 11,
            h: 26,
            shift: 17,
            offset: 3
        }, {
            i: 58,
            c: ":",
            x: 60,
            y: 35,
            w: 6,
            h: 26,
            shift: 17,
            offset: 6
        }, {
            i: 115,
            c: "s",
            x: 15,
            y: 35,
            w: 10,
            h: 27,
            shift: 17,
            offset: 4
        }, ],
    }, {
        pName: "font_score_1",
        size: 15,
        bold: true,
        italic: false,
        first: 32,
        last: 115,
        charset: 1,
        antialias: 3,
        fontname: "DPSDbeyond",
        TPageEntry: 55,
        scaleX: 1,
        scaleY: 1,
        glyphs: [{
            i: 32,
            c: " ",
            x: 2,
            y: 2,
            w: 13,
            h: 23,
            shift: 13,
            offset: 0
        }, {
            i: 43,
            c: "+",
            x: 17,
            y: 2,
            w: 10,
            h: 19,
            shift: 13,
            offset: 2
        }, {
            i: 48,
            c: "0",
            x: 62,
            y: 2,
            w: 9,
            h: 20,
            shift: 13,
            offset: 3
        }, {
            i: 49,
            c: "1",
            x: 12,
            y: 27,
            w: 6,
            h: 20,
            shift: 13,
            offset: 3
        }, {
            i: 50,
            c: "2",
            x: 2,
            y: 27,
            w: 8,
            h: 20,
            shift: 13,
            offset: 3
        }, {
            i: 51,
            c: "3",
            x: 84,
            y: 2,
            w: 8,
            h: 20,
            shift: 13,
            offset: 3
        }, {
            i: 52,
            c: "4",
            x: 73,
            y: 2,
            w: 9,
            h: 20,
            shift: 13,
            offset: 2
        }, {
            i: 53,
            c: "5",
            x: 94,
            y: 2,
            w: 8,
            h: 20,
            shift: 13,
            offset: 3
        }, {
            i: 54,
            c: "6",
            x: 29,
            y: 2,
            w: 9,
            h: 20,
            shift: 13,
            offset: 3
        }, {
            i: 55,
            c: "7",
            x: 104,
            y: 2,
            w: 8,
            h: 20,
            shift: 13,
            offset: 3
        }, {
            i: 56,
            c: "8",
            x: 51,
            y: 2,
            w: 9,
            h: 20,
            shift: 13,
            offset: 3
        }, {
            i: 57,
            c: "9",
            x: 40,
            y: 2,
            w: 9,
            h: 20,
            shift: 13,
            offset: 2
        }, {
            i: 58,
            c: ":",
            x: 20,
            y: 27,
            w: 4,
            h: 20,
            shift: 13,
            offset: 5
        }, {
            i: 115,
            c: "s",
            x: 114,
            y: 2,
            w: 8,
            h: 20,
            shift: 13,
            offset: 3
        }, ],
    }],
    Timelines: [{
        pName: "timeline_shake_sml",
        Events: [{
            Time: 0,
            Event: Timeline_timeline_shake_sml_0
        }, {
            Time: 3,
            Event: Timeline_timeline_shake_sml_1
        }, {
            Time: 6,
            Event: Timeline_timeline_shake_sml_2
        }, {
            Time: 9,
            Event: Timeline_timeline_shake_sml_3
        }, {
            Time: 12,
            Event: Timeline_timeline_shake_sml_4
        }, {
            Time: 15,
            Event: Timeline_timeline_shake_sml_5
        }, {
            Time: 18,
            Event: Timeline_timeline_shake_sml_6
        }],
    }, {
        pName: "timeline_shake_med",
        Events: [{
            Time: 0,
            Event: Timeline_timeline_shake_med_0
        }, {
            Time: 3,
            Event: Timeline_timeline_shake_med_1
        }, {
            Time: 6,
            Event: Timeline_timeline_shake_med_2
        }, {
            Time: 9,
            Event: Timeline_timeline_shake_med_3
        }, {
            Time: 12,
            Event: Timeline_timeline_shake_med_4
        }, {
            Time: 15,
            Event: Timeline_timeline_shake_med_5
        }, {
            Time: 18,
            Event: Timeline_timeline_shake_med_6
        }],
    }, {
        pName: "timeline_tutorial",
        Events: [{
            Time: 0,
            Event: Timeline_timeline_tutorial_0
        }, {
            Time: 15,
            Event: Timeline_timeline_tutorial_1
        }, {
            Time: 30,
            Event: Timeline_timeline_tutorial_2
        }, {
            Time: 45,
            Event: Timeline_timeline_tutorial_3
        }, {
            Time: 115,
            Event: Timeline_timeline_tutorial_4
        }],
    }],
    Triggers: [{}, ],
    GMObjects: [{
        pName: "obj_board_old",
        spriteIndex: -1,
        visible: true,
        parent: -100,
        CreateEvent: gml_Object_obj_board_old_Create_0,
        ObjAlarm3: gml_Object_obj_board_old_Alarm_3,
        ObjAlarm2: gml_Object_obj_board_old_Alarm_2,
        ObjAlarm1: gml_Object_obj_board_old_Alarm_1,
        ObjAlarm0: gml_Object_obj_board_old_Alarm_0,
        StepNormalEvent: gml_Object_obj_board_old_Step_0,
        GlobalLeftButtonReleased: gml_Object_obj_board_old_Mouse_56,
        GlobalLeftButtonPressed: gml_Object_obj_board_old_Mouse_53,
        DrawGUIEnd: gml_Object_obj_board_old_Draw_75,
        DrawEvent: gml_Object_obj_board_old_Draw_0,
        KeyPressed_R: gml_Object_obj_board_old_KeyPress_82,
        KeyPressed_F: gml_Object_obj_board_old_KeyPress_70,
        TriggerEvents: [],
        CollisionEvents: []
    }, {
        pName: "obj_ctrl_first_run",
        spriteIndex: -1,
        visible: true,
        parent: -100,
        CreateEvent: gml_Object_obj_ctrl_first_run_Create_0,
        ObjAlarm0: gml_Object_obj_ctrl_first_run_Alarm_0,
        WebAsyncEvent: gml_Object_obj_ctrl_first_run_Other_62,
        TriggerEvents: [],
        CollisionEvents: []
    }, {
        pName: "obj_ctrl_board",
        spriteIndex: -1,
        visible: true,
        parent: -100,
        CreateEvent: gml_Object_obj_ctrl_board_Create_0,
        ObjAlarm6: gml_Object_obj_ctrl_board_Alarm_6,
        ObjAlarm5: gml_Object_obj_ctrl_board_Alarm_5,
        ObjAlarm3: gml_Object_obj_ctrl_board_Alarm_3,
        ObjAlarm2: gml_Object_obj_ctrl_board_Alarm_2,
        ObjAlarm1: gml_Object_obj_ctrl_board_Alarm_1,
        ObjAlarm0: gml_Object_obj_ctrl_board_Alarm_0,
        StepNormalEvent: gml_Object_obj_ctrl_board_Step_0,
        GlobalLeftButtonReleased: gml_Object_obj_ctrl_board_Mouse_56,
        GlobalLeftButtonPressed: gml_Object_obj_ctrl_board_Mouse_53,
        WebAsyncEvent: gml_Object_obj_ctrl_board_Other_62,
        StartRoomEvent: gml_Object_obj_ctrl_board_Other_4,
        DrawGUI: gml_Object_obj_ctrl_board_Draw_64,
        DrawEvent: gml_Object_obj_ctrl_board_Draw_0,
        KeyPressed_S: gml_Object_obj_ctrl_board_KeyPress_83,
        KeyPressed_R: gml_Object_obj_ctrl_board_KeyPress_82,
        KeyPressed_M: gml_Object_obj_ctrl_board_KeyPress_77,
        KeyPressed_G: gml_Object_obj_ctrl_board_KeyPress_71,
        KeyPressed_F: gml_Object_obj_ctrl_board_KeyPress_70,
        KeyPressed_RIGHT: gml_Object_obj_ctrl_board_KeyPress_39,
        KeyPressed_LEFT: gml_Object_obj_ctrl_board_KeyPress_37,
        KeyPressed_BACKSPACE: gml_Object_obj_ctrl_board_KeyPress_8,
        TriggerEvents: [],
        CollisionEvents: []
    }, {
        pName: "obj_ctrl_html5",
        spriteIndex: -1,
        visible: true,
        persistent: true,
        parent: -100,
        CreateEvent: gml_Object_obj_ctrl_html5_Create_0,
        ObjAlarm2: gml_Object_obj_ctrl_html5_Alarm_2,
        ObjAlarm1: gml_Object_obj_ctrl_html5_Alarm_1,
        StepNormalEvent: gml_Object_obj_ctrl_html5_Step_0,
        StartRoomEvent: gml_Object_obj_ctrl_html5_Other_4,
        DrawGUI: gml_Object_obj_ctrl_html5_Draw_64,
        TriggerEvents: [],
        CollisionEvents: []
    }, {
        pName: "obj_ctrl_level_process",
        spriteIndex: -1,
        visible: true,
        depth: -10,
        parent: -100,
        CreateEvent: gml_Object_obj_ctrl_level_process_Create_0,
        StepNormalEvent: gml_Object_obj_ctrl_level_process_Step_0,
        DrawEvent: gml_Object_obj_ctrl_level_process_Draw_0,
        KeyPressed_O: gml_Object_obj_ctrl_level_process_KeyPress_79,
        KeyPressed_C: gml_Object_obj_ctrl_level_process_KeyPress_67,
        KeyPressed_A: gml_Object_obj_ctrl_level_process_KeyPress_65,
        TriggerEvents: [],
        CollisionEvents: []
    }, {
        pName: "obj_ctrl_resolution",
        spriteIndex: -1,
        visible: true,
        parent: -100,
        CreateEvent: gml_Object_obj_ctrl_resolution_Create_0,
        TriggerEvents: [],
        CollisionEvents: []
    }, {
        pName: "obj_ball",
        spriteIndex: -1,
        visible: true,
        depth: -1,
        parent: -100,
        CreateEvent: gml_Object_obj_ball_Create_0,
        DestroyEvent: gml_Object_obj_ball_Destroy_0,
        ObjAlarm3: gml_Object_obj_ball_Alarm_3,
        ObjAlarm2: gml_Object_obj_ball_Alarm_2,
        ObjAlarm1: gml_Object_obj_ball_Alarm_1,
        StepEndEvent: gml_Object_obj_ball_Step_2,
        StepNormalEvent: gml_Object_obj_ball_Step_0,
        DrawGUI: gml_Object_obj_ball_Draw_64,
        DrawEvent: gml_Object_obj_ball_Draw_0,
        TriggerEvents: [],
        CollisionEvents: [9, gml_Object_obj_ball_Collision_9]
    }, {
        pName: "obj_button_a",
        spriteIndex: -1,
        visible: true,
        depth: -1,
        parent: -100,
        CreateEvent: gml_Object_obj_button_a_Create_0,
        StepNormalEvent: gml_Object_obj_button_a_Step_0,
        GlobalLeftButtonPressed: gml_Object_obj_button_a_Mouse_53,
        DrawEvent: gml_Object_obj_button_a_Draw_0,
        TriggerEvents: [],
        CollisionEvents: []
    }, {
        pName: "obj_menu_main",
        spriteIndex: -1,
        visible: true,
        parent: -100,
        CreateEvent: gml_Object_obj_menu_main_Create_0,
        ObjAlarm5: gml_Object_obj_menu_main_Alarm_5,
        ObjAlarm4: gml_Object_obj_menu_main_Alarm_4,
        ObjAlarm3: gml_Object_obj_menu_main_Alarm_3,
        ObjAlarm1: gml_Object_obj_menu_main_Alarm_1,
        ObjAlarm0: gml_Object_obj_menu_main_Alarm_0,
        StepNormalEvent: gml_Object_obj_menu_main_Step_0,
        GlobalLeftButtonPressed: gml_Object_obj_menu_main_Mouse_53,
        WebAsyncEvent: gml_Object_obj_menu_main_Other_62,
        DrawGUI: gml_Object_obj_menu_main_Draw_64,
        DrawEvent: gml_Object_obj_menu_main_Draw_0,
        KeyPressed_V: gml_Object_obj_menu_main_KeyPress_86,
        KeyPressed_R: gml_Object_obj_menu_main_KeyPress_82,
        KeyPressed_M: gml_Object_obj_menu_main_KeyPress_77,
        KeyPressed_L: gml_Object_obj_menu_main_KeyPress_76,
        KeyPressed_F: gml_Object_obj_menu_main_KeyPress_70,
        TriggerEvents: [],
        CollisionEvents: []
    }, {
        pName: "obj_phys_floor",
        visible: true,
        depth: -10,
        parent: -100,
        CreateEvent: gml_Object_obj_phys_floor_Create_0,
        StepNormalEvent: gml_Object_obj_phys_floor_Step_0,
        DrawEvent: gml_Object_obj_phys_floor_Draw_0,
        TriggerEvents: [],
        CollisionEvents: [6, gml_Object_obj_phys_floor_Collision_6]
    }, {
        pName: "obj_win_reset",
        spriteIndex: -1,
        visible: true,
        depth: -10,
        parent: -100,
        CreateEvent: gml_Object_obj_win_reset_Create_0,
        DestroyEvent: gml_Object_obj_win_reset_Destroy_0,
        GlobalLeftButtonPressed: gml_Object_obj_win_reset_Mouse_53,
        DrawEvent: gml_Object_obj_win_reset_Draw_0,
        TriggerEvents: [],
        CollisionEvents: []
    }, {
        pName: "obj_win_sidemenu",
        spriteIndex: -1,
        visible: true,
        depth: -70,
        parent: -100,
        CreateEvent: gml_Object_obj_win_sidemenu_Create_0,
        DestroyEvent: gml_Object_obj_win_sidemenu_Destroy_0,
        StepNormalEvent: gml_Object_obj_win_sidemenu_Step_0,
        GlobalLeftButtonReleased: gml_Object_obj_win_sidemenu_Mouse_56,
        DrawGUI: gml_Object_obj_win_sidemenu_Draw_64,
        DrawEvent: gml_Object_obj_win_sidemenu_Draw_0,
        TriggerEvents: [],
        CollisionEvents: []
    }, {
        pName: "obj_tutorial_pointer",
        spriteIndex: -1,
        visible: true,
        depth: -50,
        parent: -100,
        CreateEvent: gml_Object_obj_tutorial_pointer_Create_0,
        ObjAlarm2: gml_Object_obj_tutorial_pointer_Alarm_2,
        ObjAlarm1: gml_Object_obj_tutorial_pointer_Alarm_1,
        StepNormalEvent: gml_Object_obj_tutorial_pointer_Step_0,
        GlobalLeftButtonReleased: gml_Object_obj_tutorial_pointer_Mouse_56,
        GlobalLeftButtonPressed: gml_Object_obj_tutorial_pointer_Mouse_53,
        DrawEvent: gml_Object_obj_tutorial_pointer_Draw_0,
        TriggerEvents: [],
        CollisionEvents: []
    }, {
        pName: "obj_menu_load",
        spriteIndex: -1,
        visible: true,
        parent: -100,
        CreateEvent: gml_Object_obj_menu_load_Create_0,
        ObjAlarm0: gml_Object_obj_menu_load_Alarm_0,
        DrawEvent: gml_Object_obj_menu_load_Draw_0,
        TriggerEvents: [],
        CollisionEvents: []
    }, {
        pName: "obj_draw_app_surface",
        spriteIndex: -1,
        visible: true,
        depth: -300,
        parent: -100,
        DrawGUI: gml_Object_obj_draw_app_surface_Draw_64,
        TriggerEvents: [],
        CollisionEvents: []
    }],
    GMRooms: [{
        pName: "room_first_load",
        width: 960,
        height: 540,
        colour: 0,
        enableViews: true,
        clearDisplayBuffer: false,
        backgrounds: [{}, {}, {}, {}, {}, {}, {}, {}],
        views: [{
            wview: 960,
            hview: 540,
            wport: 960,
            hport: 540,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }],
        pInstances: [{
            x: 32,
            y: 32,
            index: 1,
            id: 100000,
            rotation: 0,
            scaleX: 1,
            scaleY: 1,
            colour: 4294967295
        }],
        tiles: []
    }, {
        pName: "room_main",
        width: 960,
        height: 540,
        colour: 0,
        showColour: false,
        enableViews: true,
        clearDisplayBuffer: false,
        backgrounds: [{}, {}, {}, {}, {}, {}, {}, {}],
        views: [{
            wview: 960,
            hview: 540,
            wport: 960,
            hport: 540,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }],
        pInstances: [{
            x: 32,
            y: 32,
            index: 13,
            id: 100001,
            rotation: 0,
            scaleX: 1,
            scaleY: 1,
            colour: 4294967295
        }],
        tiles: []
    }, {
        pName: "room_resolution",
        width: 960,
        height: 540,
        colour: 0,
        showColour: false,
        enableViews: true,
        clearDisplayBuffer: false,
        backgrounds: [{}, {}, {}, {}, {}, {}, {}, {}],
        views: [{
            visible: true,
            wview: 960,
            hview: 540,
            wport: 960,
            hport: 540,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }],
        pInstances: [{
            x: 32,
            y: 32,
            index: 5,
            id: 100002,
            rotation: 0,
            scaleX: 1,
            scaleY: 1,
            colour: 4294967295
        }],
        tiles: []
    }, {
        pName: "room_game",
        width: 960,
        height: 540,
        showColour: false,
        enableViews: true,
        clearDisplayBuffer: false,
        backgrounds: [{}, {}, {}, {}, {}, {}, {}, {}],
        views: [{
            visible: true,
            wview: 960,
            hview: 540,
            wport: 960,
            hport: 540,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }, {
            wview: 1024,
            hview: 768,
            wport: 1024,
            hport: 768,
        }],
        pInstances: [{
            x: 32,
            y: 32,
            index: 2,
            id: 100003,
            rotation: 0,
            scaleX: 1,
            scaleY: 1,
            colour: 4294967295
        }],
        tiles: []
    }],
    RoomOrder: [0, 1, 2, 3],
    TPageEntries: [{
        x: 494,
        y: 262,
        w: 16,
        h: 16,
        XOffset: 0,
        YOffset: 0,
        CropWidth: 1,
        CropHeight: 1,
        ow: 16,
        oh: 16,
        tp: 1
    }, {
        x: 194,
        y: 522,
        w: 4,
        h: 4,
        XOffset: 2,
        YOffset: 2,
        CropWidth: 4,
        CropHeight: 4,
        ow: 8,
        oh: 8,
        tp: 1
    }, {
        x: 286,
        y: 462,
        w: 200,
        h: 32,
        XOffset: 5,
        YOffset: 5,
        CropWidth: 200,
        CropHeight: 32,
        ow: 210,
        oh: 42,
        tp: 1
    }, {
        x: 194,
        y: 550,
        w: 33,
        h: 33,
        XOffset: 16,
        YOffset: 15,
        CropWidth: 33,
        CropHeight: 33,
        ow: 64,
        oh: 64,
        tp: 1
    }, {
        x: 46,
        y: 526,
        w: 25,
        h: 25,
        XOffset: 20,
        YOffset: 19,
        CropWidth: 25,
        CropHeight: 25,
        ow: 64,
        oh: 64,
        tp: 1
    }, {
        x: 234,
        y: 550,
        w: 17,
        h: 17,
        XOffset: 24,
        YOffset: 23,
        CropWidth: 17,
        CropHeight: 17,
        ow: 64,
        oh: 64,
        tp: 1
    }, {
        x: 78,
        y: 526,
        w: 9,
        h: 9,
        XOffset: 28,
        YOffset: 27,
        CropWidth: 9,
        CropHeight: 9,
        ow: 64,
        oh: 64,
        tp: 1
    }, {
        x: 426,
        y: 570,
        w: 27,
        h: 12,
        XOffset: 5,
        YOffset: 5,
        CropWidth: 27,
        CropHeight: 12,
        ow: 37,
        oh: 22,
        tp: 1
    }, {
        x: 2,
        y: 2,
        w: 582,
        h: 320,
        XOffset: 5,
        YOffset: 0,
        CropWidth: 582,
        CropHeight: 320,
        ow: 587,
        oh: 320,
        tp: 2
    }, {
        x: 426,
        y: 498,
        w: 60,
        h: 68,
        XOffset: 38,
        YOffset: 44,
        CropWidth: 60,
        CropHeight: 68,
        ow: 128,
        oh: 128,
        tp: 1
    }, {
        x: 362,
        y: 498,
        w: 60,
        h: 81,
        XOffset: 38,
        YOffset: 31,
        CropWidth: 60,
        CropHeight: 81,
        ow: 128,
        oh: 128,
        tp: 1
    }, {
        x: 490,
        y: 454,
        w: 10,
        h: 10,
        XOffset: 122,
        YOffset: 123,
        CropWidth: 10,
        CropHeight: 10,
        ow: 256,
        oh: 256,
        tp: 1
    }, {
        x: 2,
        y: 574,
        w: 12,
        h: 12,
        XOffset: 121,
        YOffset: 122,
        CropWidth: 12,
        CropHeight: 12,
        ow: 256,
        oh: 256,
        tp: 1
    }, {
        x: 394,
        y: 366,
        w: 21,
        h: 23,
        XOffset: 117,
        YOffset: 117,
        CropWidth: 21,
        CropHeight: 23,
        ow: 256,
        oh: 256,
        tp: 1
    }, {
        x: 466,
        y: 418,
        w: 30,
        h: 32,
        XOffset: 113,
        YOffset: 112,
        CropWidth: 30,
        CropHeight: 32,
        ow: 256,
        oh: 256,
        tp: 1
    }, {
        x: 2,
        y: 526,
        w: 40,
        h: 42,
        XOffset: 108,
        YOffset: 107,
        CropWidth: 40,
        CropHeight: 42,
        ow: 256,
        oh: 256,
        tp: 1
    }, {
        x: 130,
        y: 522,
        w: 57,
        h: 61,
        XOffset: 100,
        YOffset: 98,
        CropWidth: 57,
        CropHeight: 61,
        ow: 256,
        oh: 256,
        tp: 1
    }, {
        x: 286,
        y: 498,
        w: 71,
        h: 76,
        XOffset: 93,
        YOffset: 90,
        CropWidth: 71,
        CropHeight: 76,
        ow: 256,
        oh: 256,
        tp: 1
    }, {
        x: 202,
        y: 462,
        w: 79,
        h: 84,
        XOffset: 89,
        YOffset: 86,
        CropWidth: 79,
        CropHeight: 84,
        ow: 256,
        oh: 256,
        tp: 1
    }, {
        x: 394,
        y: 262,
        w: 96,
        h: 100,
        XOffset: 81,
        YOffset: 78,
        CropWidth: 96,
        CropHeight: 100,
        ow: 256,
        oh: 256,
        tp: 1
    }, {
        x: 2,
        y: 394,
        w: 121,
        h: 128,
        XOffset: 68,
        YOffset: 64,
        CropWidth: 121,
        CropHeight: 128,
        ow: 256,
        oh: 256,
        tp: 1
    }, {
        x: 130,
        y: 394,
        w: 68,
        h: 123,
        XOffset: 63,
        YOffset: 63,
        CropWidth: 68,
        CropHeight: 123,
        ow: 256,
        oh: 256,
        tp: 1
    }, {
        x: 2,
        y: 326,
        w: 480,
        h: 336,
        XOffset: 5,
        YOffset: 5,
        CropWidth: 480,
        CropHeight: 336,
        ow: 490,
        oh: 346,
        tp: 2
    }, {
        x: 2,
        y: 666,
        w: 480,
        h: 336,
        XOffset: 5,
        YOffset: 5,
        CropWidth: 480,
        CropHeight: 336,
        ow: 490,
        oh: 346,
        tp: 2
    }, {
        x: 194,
        y: 210,
        w: 46,
        h: 38,
        XOffset: 6,
        YOffset: 12,
        CropWidth: 46,
        CropHeight: 38,
        ow: 60,
        oh: 60,
        tp: 3
    }, {
        x: 194,
        y: 162,
        w: 48,
        h: 44,
        XOffset: 6,
        YOffset: 9,
        CropWidth: 48,
        CropHeight: 44,
        ow: 60,
        oh: 60,
        tp: 3
    }, {
        x: 850,
        y: 2,
        w: 170,
        h: 170,
        XOffset: 43,
        YOffset: 43,
        CropWidth: 170,
        CropHeight: 170,
        ow: 256,
        oh: 256,
        tp: 2
    }, {
        x: 850,
        y: 178,
        w: 136,
        h: 136,
        XOffset: 60,
        YOffset: 60,
        CropWidth: 136,
        CropHeight: 136,
        ow: 256,
        oh: 256,
        tp: 2
    }, {
        x: 794,
        y: 906,
        w: 112,
        h: 112,
        XOffset: 72,
        YOffset: 72,
        CropWidth: 112,
        CropHeight: 112,
        ow: 256,
        oh: 256,
        tp: 2
    }, {
        x: 430,
        y: 194,
        w: 53,
        h: 62,
        XOffset: 109,
        YOffset: 97,
        CropWidth: 53,
        CropHeight: 62,
        ow: 256,
        oh: 256,
        tp: 3
    }, {
        x: 282,
        y: 2,
        w: 113,
        h: 108,
        XOffset: 5,
        YOffset: 5,
        CropWidth: 113,
        CropHeight: 108,
        ow: 123,
        oh: 118,
        tp: 3
    }, {
        x: 910,
        y: 906,
        w: 91,
        h: 91,
        XOffset: 5,
        YOffset: 5,
        CropWidth: 91,
        CropHeight: 91,
        ow: 101,
        oh: 101,
        tp: 2
    }, {
        x: 346,
        y: 114,
        w: 45,
        h: 45,
        XOffset: 7,
        YOffset: 7,
        CropWidth: 45,
        CropHeight: 45,
        ow: 60,
        oh: 60,
        tp: 3
    }, {
        x: 346,
        y: 114,
        w: 45,
        h: 45,
        XOffset: 7,
        YOffset: 7,
        CropWidth: 45,
        CropHeight: 45,
        ow: 60,
        oh: 60,
        tp: 3
    }, {
        x: 746,
        y: 262,
        w: 47,
        h: 47,
        XOffset: 8,
        YOffset: 8,
        CropWidth: 47,
        CropHeight: 47,
        ow: 64,
        oh: 64,
        tp: 2
    }, {
        x: 798,
        y: 262,
        w: 47,
        h: 47,
        XOffset: 8,
        YOffset: 8,
        CropWidth: 47,
        CropHeight: 47,
        ow: 64,
        oh: 64,
        tp: 2
    }, {
        x: 590,
        y: 262,
        w: 152,
        h: 20,
        XOffset: 5,
        YOffset: 5,
        CropWidth: 152,
        CropHeight: 20,
        ow: 162,
        oh: 30,
        tp: 2
    }, {
        x: 2,
        y: 2,
        w: 600,
        h: 253,
        XOffset: 0,
        YOffset: 0,
        CropWidth: 600,
        CropHeight: 253,
        ow: 600,
        oh: 253,
        tp: 0
    }, {
        x: 402,
        y: 2,
        w: 91,
        h: 91,
        XOffset: 5,
        YOffset: 5,
        CropWidth: 91,
        CropHeight: 91,
        ow: 101,
        oh: 101,
        tp: 3
    }, {
        x: 402,
        y: 98,
        w: 91,
        h: 91,
        XOffset: 5,
        YOffset: 5,
        CropWidth: 91,
        CropHeight: 91,
        ow: 101,
        oh: 101,
        tp: 3
    }, {
        x: 250,
        y: 114,
        w: 91,
        h: 91,
        XOffset: 5,
        YOffset: 5,
        CropWidth: 91,
        CropHeight: 91,
        ow: 101,
        oh: 101,
        tp: 3
    }, {
        x: 2,
        y: 162,
        w: 91,
        h: 91,
        XOffset: 5,
        YOffset: 5,
        CropWidth: 91,
        CropHeight: 91,
        ow: 101,
        oh: 101,
        tp: 3
    }, {
        x: 346,
        y: 194,
        w: 78,
        h: 81,
        XOffset: 5,
        YOffset: 5,
        CropWidth: 78,
        CropHeight: 81,
        ow: 88,
        oh: 91,
        tp: 3
    }, {
        x: 98,
        y: 162,
        w: 91,
        h: 91,
        XOffset: 5,
        YOffset: 5,
        CropWidth: 91,
        CropHeight: 91,
        ow: 101,
        oh: 101,
        tp: 3
    }, {
        x: 2,
        y: 82,
        w: 243,
        h: 76,
        XOffset: 5,
        YOffset: 5,
        CropWidth: 243,
        CropHeight: 76,
        ow: 284,
        oh: 86,
        tp: 3
    }, {
        x: 2,
        y: 2,
        w: 274,
        h: 76,
        XOffset: 5,
        YOffset: 5,
        CropWidth: 274,
        CropHeight: 76,
        ow: 284,
        oh: 86,
        tp: 3
    }, {
        x: 486,
        y: 326,
        w: 498,
        h: 313,
        XOffset: 5,
        YOffset: 5,
        CropWidth: 498,
        CropHeight: 313,
        ow: 508,
        oh: 323,
        tp: 2
    }, {
        x: 486,
        y: 906,
        w: 302,
        h: 76,
        XOffset: 5,
        YOffset: 5,
        CropWidth: 302,
        CropHeight: 76,
        ow: 312,
        oh: 86,
        tp: 2
    }, {
        x: 466,
        y: 366,
        w: 38,
        h: 45,
        XOffset: 12,
        YOffset: 8,
        CropWidth: 38,
        CropHeight: 45,
        ow: 60,
        oh: 60,
        tp: 1
    }, {
        x: 2,
        y: 262,
        w: 256,
        h: 128,
        XOffset: 0,
        YOffset: 0,
        CropWidth: 256,
        CropHeight: 128,
        ow: 256,
        oh: 128,
        tp: 1
    }, {
        x: 486,
        y: 646,
        w: 512,
        h: 256,
        XOffset: 0,
        YOffset: 0,
        CropWidth: 512,
        CropHeight: 256,
        ow: 512,
        oh: 256,
        tp: 2
    }, {
        x: 0,
        y: 2,
        w: 512,
        h: 256,
        XOffset: 0,
        YOffset: 0,
        CropWidth: 512,
        CropHeight: 256,
        ow: 512,
        oh: 256,
        tp: 1
    }, {
        x: 590,
        y: 2,
        w: 256,
        h: 256,
        XOffset: 0,
        YOffset: 0,
        CropWidth: 256,
        CropHeight: 256,
        ow: 256,
        oh: 256,
        tp: 2
    }, {
        x: 262,
        y: 262,
        w: 128,
        h: 128,
        XOffset: 0,
        YOffset: 0,
        CropWidth: 128,
        CropHeight: 128,
        ow: 128,
        oh: 128,
        tp: 1
    }, {
        x: 202,
        y: 394,
        w: 128,
        h: 64,
        XOffset: 0,
        YOffset: 0,
        CropWidth: 128,
        CropHeight: 64,
        ow: 128,
        oh: 64,
        tp: 1
    }, {
        x: 334,
        y: 394,
        w: 128,
        h: 64,
        XOffset: 0,
        YOffset: 0,
        CropWidth: 128,
        CropHeight: 64,
        ow: 128,
        oh: 64,
        tp: 1
    }],
    Textures: [window.famobi_mgb_url, "Neon_Golf_texture_1.png", "Neon_Golf_texture_2.png", window.famobi.hasFeature("credits") ? "Neon_Golf_texture_3.png" : "Neon_Golf_texture_4.png"],
    Options: {
        debugMode: false,
        UpdateDebugWindow_ref: UpdateDebugWindow,
        CreateDebugConsole_ref: CreateDebugConsole,
        gameId: 966176007,
        gameGuid: "6809c093-3dc9-4e97-8297-5baa187f8b8d",
        fullScreen: false,
        interpolatePixels: true,
        showCursor: true,
        scale: 0,
        allowFullScreenKey: true,
        freezeOnLostFocus: false,
        showLoadingBar: false,
        displayErrors: true,
        writeErrors: false,
        abortErrors: false,
        variableErrors: true,
        outputDebugToConsole: true,
        WebGL: 0,
        WebGLPreserveDrawingBuffer: 0,
        UseNewAudio: true,
        GameDir: "html5game",
        Config: "Default",
        ViewColour: 0,
        CreateEventOrder: true,
        UseParticles: true,
        LocalRunAlert: false,
        crc: -1831908691,
        md5: [36, 178, 100, 137, 149, 249, 63, 45, 239, 193, 219, 190, 65, 92, 49, 49],
        DisplayName: "neon golf",

        MajorVersion: 1,

        MinorVersion: 8,

        BuildVersion: 0,

        tm: 1454040020,
        loadingBarCallback: "FMS_custom_loading"
    }
};

function gmlConst() {}

function gmlInitGlobal() {}

// #####################################################################################################
// /// mhtml5_resize_screen(orientation,force_fullscreen);
//
// /*
//     // TERMS //
//
//     display_w = tamaño maximo que puede ser el juego ( PC: monitor, html5: browser window )
//
//     window_w = tamaño de la ventana del juego ( window_w = gui_w = port_w = canvas_w )
//
//     view_w = tamaño del espacio que se dibuja del juego
//
//     board_w = tamaño del juego donde se calcula la fisica
// */
//
//
// // Initialize
//
//     var force_fullscreen = argument1; // Resize HTML Canvas
//
//     // browser
//     var display_w = browser_width;
//     var display_h = browser_height;
//
//     // window base: 960 x 640
//     var win_w_base = 960;
//     var win_h_base = 640;
//
//     // window
//     var win_w = 0; // also: gui_w
//     var win_h = 0; // also: gui_h
//
//     var view_w = 0;
//     var view_h = 0;
//
//     // room ( board ): 480 x 320
//     var board_w = 480;
//     var board_h = 320;
//
// if ( argument0 == 0 ){
// // Landscape
//
//     var display_ratio = ( board_h / board_w );
//
//     var canvas_w = display_w;
//     var canvas_h = floor( canvas_w * display_ratio ); // height based on aspect ratio
//
//     var switch_orientation = false;
//
//     if ( display_h < canvas_h ){
//
//         display_ratio = ( board_w / board_h );
//
//         canvas_h = display_h;
//         canvas_w = floor( canvas_h * display_ratio );
//
//         switch_orientation = true;
//     }
//
//     view_w = canvas_w;
//     view_h = canvas_h;
//
//     if ( canvas_w < board_w ){
//
//         if ( !switch_orientation ){
//
//             view_w = board_w;
//             view_h = floor( view_w * display_ratio ); // height based on aspect ratio
//         }
//         else {
//
//             view_h = board_h;
//             view_w = floor( view_h * display_ratio ); // width based on aspect ratio
//         }
//     }
// }
// else {
// // Portrait
//
//     var display_ratio = ( board_w / board_h );
//
//     var canvas_h = display_h;
//     var canvas_w = floor( canvas_h * display_ratio ); // width based on aspect ratio
//
//     if ( display_w < canvas_w ){
//
//         display_ratio = ( board_h / board_w );
//
//         canvas_w = display_w;
//         canvas_h = floor( canvas_w * display_ratio );
//     }
//
//     view_w = canvas_w;
//     view_h = canvas_h;
//
//     if ( canvas_h < board_h ){
//
//         view_h = board_h;
//         view_w = floor( view_h * display_ratio ); // width based on aspect ratio
//     }
// }
//
// win_w = canvas_w;
// win_h = canvas_h;
//
// room_set_view(room_first_load, 0, 1, 0, 0,view_w, view_h, 0, 0, win_w, win_h, 0,0, -1, -1, -1);
//
// room_set_view(room_main, 0, 1, 0, 0,view_w, view_h, 0, 0, win_w, win_h, 0,0, -1, -1, -1);
//
// room_set_view(room_game, 0, 1, 0, 0,view_w, view_h, 0, 0, win_w, win_h, 0,0, -1, -1, -1);
//
// display_set_gui_size(win_w,win_h);
//
// window_set_size(win_w,win_h);
//
// surface_resize(application_surface, win_w, win_h);
//
//
// // Globals
//
//     global.board_w = board_w;
//     global.board_h = board_h;
//
//     global.view_w = view_w;
//     global.view_h = view_h;
//
//     global.win_w = canvas_w; // also: gui_w
//     global.win_h = canvas_h; // also: gui_h
//
//     global.display_ratio = ( view_w / board_w );
//
//
function gml_Script_mhtml5_resize_screen_v1(_inst, _other, argument0, argument1) {
    var gmlforce_fullscreen = argument1;
    var gmldisplay_w = g_pBuiltIn.get_browser_width();
    var gmldisplay_h = g_pBuiltIn.get_browser_height();
    var gmlwin_w_base = 960;
    var gmlwin_h_base = 640;
    var gmlwin_w = 0;
    var gmlwin_h = 0;
    var gmlview_w = 0;
    var gmlview_h = 0;
    var gmlboard_w = 480;
    var gmlboard_h = 320;
    if ((argument0 == 0)) {
        {
            var gmldisplay_ratio = (gmlboard_h / gmlboard_w);
            var gmlcanvas_w = gmldisplay_w;
            var gmlcanvas_h = floor((gmlcanvas_w * gmldisplay_ratio));
            var gmlswitch_orientation = 0 ? 1 : 0;
            if ((gmldisplay_h < gmlcanvas_h)) {
                {
                    gmldisplay_ratio = (gmlboard_w / gmlboard_h);
                    gmlcanvas_h = gmldisplay_h;
                    gmlcanvas_w = floor((gmlcanvas_h * gmldisplay_ratio));
                    gmlswitch_orientation = 1 ? 1 : 0;
                };
            };
            gmlview_w = gmlcanvas_w;
            gmlview_h = gmlcanvas_h;
            if ((gmlcanvas_w < gmlboard_w)) {
                {
                    if (!(gmlswitch_orientation > 0.5)) {
                        {
                            gmlview_w = gmlboard_w;
                            gmlview_h = floor((gmlview_w * gmldisplay_ratio));
                        };
                    } else {
                        {
                            gmlview_h = gmlboard_h;
                            gmlview_w = floor((gmlview_h * gmldisplay_ratio));
                        };
                    };
                };
            };
        };
    } else {
        {
            var gmldisplay_ratio = (gmlboard_w / gmlboard_h);
            var gmlcanvas_h = gmldisplay_h;
            var gmlcanvas_w = floor((gmlcanvas_h * gmldisplay_ratio));
            if ((gmldisplay_w < gmlcanvas_w)) {
                {
                    gmldisplay_ratio = (gmlboard_h / gmlboard_w);
                    gmlcanvas_w = gmldisplay_w;
                    gmlcanvas_h = floor((gmlcanvas_w * gmldisplay_ratio));
                };
            };
            gmlview_w = gmlcanvas_w;
            gmlview_h = gmlcanvas_h;
            if ((gmlcanvas_h < gmlboard_h)) {
                {
                    gmlview_h = gmlboard_h;
                    gmlview_w = floor((gmlview_h * gmldisplay_ratio));
                };
            };
        };
    };
    gmlwin_w = gmlcanvas_w;
    gmlwin_h = gmlcanvas_h;
    room_set_view(0, 0, 1, 0, 0, gmlview_w, gmlview_h, 0, 0, gmlwin_w, gmlwin_h, 0, 0, (-1), (-1), (-1));
    room_set_view(1, 0, 1, 0, 0, gmlview_w, gmlview_h, 0, 0, gmlwin_w, gmlwin_h, 0, 0, (-1), (-1), (-1));
    room_set_view(3, 0, 1, 0, 0, gmlview_w, gmlview_h, 0, 0, gmlwin_w, gmlwin_h, 0, 0, (-1), (-1), (-1));
    display_set_gui_size(gmlwin_w, gmlwin_h);
    window_set_size(gmlwin_w, gmlwin_h);
    surface_resize(g_pBuiltIn.application_surface, gmlwin_w, gmlwin_h);
    global.gmlboard_w = gmlboard_w;
    global.gmlboard_h = gmlboard_h;
    global.gmlview_w = gmlview_w;
    global.gmlview_h = gmlview_h;
    global.gmlwin_w = gmlcanvas_w;
    global.gmlwin_h = gmlcanvas_h;
    global.gmldisplay_ratio = (gmlview_w / gmlboard_w);
}

// #####################################################################################################
// /// mhtml5_resize_screen(orientation,force_fullscreen);
//
// /*
//     // TERMS //
//
//     display_w = tamaño maximo que puede ser el juego ( PC: monitor, html5: browser window )
//
//     window_w = tamaño de la ventana del juego ( window_w = gui_w = port_w = canvas_w )
//
//     view_w = tamaño del espacio que se dibuja del juego
//
//     board_w = tamaño del juego donde se calcula la fisica
// */
//
// // Initialize
//
//     var force_fullscreen = argument1; // Resize HTML Canvas
//
//     // browser
//     var display_w = browser_width;
//     var display_h = browser_height;
//
//     // window base: 960 x 640
//     var win_w_base = 960;
//     var win_h_base = 540;
//
//     // window
//     var win_w = 0; // also: gui_w
//     var win_h = 0; // also: gui_h
//
//     var view_w = 0;
//     var view_h = 0;
//
//     // room ( board ): 480 x 320
//     var board_w = 480;
//     var board_h = 270;
//
//     // global.game_lowres = false;
//
// if ( argument0 == 0 ){
// // Landscape
//
//     var display_ratio = ( board_h / board_w );
//
//     var canvas_w = display_w;
//     var canvas_h = floor( canvas_w * display_ratio ); // height based on aspect ratio
//
//     var switch_orientation = false;
//
//     if ( display_h < canvas_h ){
//
//         display_ratio = ( board_w / board_h );
//
//         canvas_h = display_h;
//         canvas_w = floor( canvas_h * display_ratio );
//
//         switch_orientation = true;
//     }
//
//     view_w = canvas_w;
//     view_h = canvas_h;
//
//     if ( canvas_w < win_w_base ){
//
//         if ( !switch_orientation ){
//
//             view_w = win_w_base;
//             view_h = floor( view_w * display_ratio ); // height based on aspect ratio
//         }
//         else {
//
//             view_h = win_h_base;
//             view_w = floor( view_h * display_ratio ); // width based on aspect ratio
//         }
//     }
// }
// else {
// // Portrait
//
//     var display_ratio = ( board_w / board_h );
//
//     var canvas_h = display_h;
//     var canvas_w = floor( canvas_h * display_ratio ); // width based on aspect ratio
//
//     if ( display_w < canvas_w ){
//
//         display_ratio = ( board_h / board_w );
//
//         canvas_w = display_w;
//         canvas_h = floor( canvas_w * display_ratio );
//     }
//
//     view_w = canvas_w;
//     view_h = canvas_h;
//
//     if ( canvas_h < board_h ){
//
//         view_h = board_h;
//         view_w = floor( view_h * display_ratio ); // width based on aspect ratio
//     }
// }
//
// // if (( global.platform_config == 1 ) and ( win_h < win_h_base )){ global.game_lowres = true; }
//
// win_w = canvas_w;
// win_h = canvas_h;
//
// room_set_view(room_first_load, 0, 1, 0, 0,view_w, view_h, 0, 0, win_w, win_h, 0,0, -1, -1, -1);
//
// room_set_view(room_main, 0, 1, 0, 0,view_w, view_h, 0, 0, win_w, win_h, 0,0, -1, -1, -1);
//
// room_set_view(room_game, 0, 1, 0, 0,view_w, view_h, 0, 0, win_w, win_h, 0,0, -1, -1, -1);
//
// display_set_gui_size(win_w,win_h);
//
// window_set_size(win_w,win_h);
//
// surface_resize(application_surface, win_w, win_h);
//
// js_changeCanvasClass();
//
// // FMS_custom_loading(graphics
//
// // Globals
//
//     global.board_w = board_w;
//     global.board_h = board_h;
//
//     global.view_w = view_w;
//     global.view_h = view_h;
//
//     global.win_w = canvas_w; // also: gui_w
//     global.win_h = canvas_h; // also: gui_h
//
//     global.display_ratio = ( view_w / board_w );
//
//
// // Check Low Resolution
//
//     scr_lowres_check(global.win_h,win_h_base);
//
//
// // Update World Variables
//
//     if ( room == room_main ){
//
//         with ( obj_menu_main ){
//
//             scr_color_world();
//
//             circle_fade_size_add = ( global.win_w / 30 );
//
//             // scr_world_ratio();
//         }
//     }
//     else if ( room == room_game ){
//
//         with ( obj_ctrl_board ){
//
//             scr_color_world();
//
//             // scr_world_ratio();
//         }
//     }
//
//
// // Scroll Home
//
//     js_Dogfire_ScrollHome();
//
//
function gml_Script_mhtml5_resize_screen_v2(_inst, _other, argument0, argument1) {
    var gmlforce_fullscreen = argument1;
    var gmldisplay_w = g_pBuiltIn.get_browser_width();
    var gmldisplay_h = g_pBuiltIn.get_browser_height();
    var gmlwin_w_base = 960;
    var gmlwin_h_base = 540;
    var gmlwin_w = 0;
    var gmlwin_h = 0;
    var gmlview_w = 0;
    var gmlview_h = 0;
    var gmlboard_w = 480;
    var gmlboard_h = 270;
    if ((argument0 == 0)) {
        {
            var gmldisplay_ratio = (gmlboard_h / gmlboard_w);
            var gmlcanvas_w = gmldisplay_w;
            var gmlcanvas_h = floor((gmlcanvas_w * gmldisplay_ratio));
            var gmlswitch_orientation = 0 ? 1 : 0;
            if ((gmldisplay_h < gmlcanvas_h)) {
                {
                    gmldisplay_ratio = (gmlboard_w / gmlboard_h);
                    gmlcanvas_h = gmldisplay_h;
                    gmlcanvas_w = floor((gmlcanvas_h * gmldisplay_ratio));
                    gmlswitch_orientation = 1 ? 1 : 0;
                };
            };
            gmlview_w = gmlcanvas_w;
            gmlview_h = gmlcanvas_h;
            if ((gmlcanvas_w < gmlwin_w_base)) {
                {
                    if (!(gmlswitch_orientation > 0.5)) {
                        {
                            gmlview_w = gmlwin_w_base;
                            gmlview_h = floor((gmlview_w * gmldisplay_ratio));
                        };
                    } else {
                        {
                            gmlview_h = gmlwin_h_base;
                            gmlview_w = floor((gmlview_h * gmldisplay_ratio));
                        };
                    };
                };
            };
        };
    } else {
        {
            var gmldisplay_ratio = (gmlboard_w / gmlboard_h);
            var gmlcanvas_h = gmldisplay_h;
            var gmlcanvas_w = floor((gmlcanvas_h * gmldisplay_ratio));
            if ((gmldisplay_w < gmlcanvas_w)) {
                {
                    gmldisplay_ratio = (gmlboard_h / gmlboard_w);
                    gmlcanvas_w = gmldisplay_w;
                    gmlcanvas_h = floor((gmlcanvas_w * gmldisplay_ratio));
                };
            };
            gmlview_w = gmlcanvas_w;
            gmlview_h = gmlcanvas_h;
            if ((gmlcanvas_h < gmlboard_h)) {
                {
                    gmlview_h = gmlboard_h;
                    gmlview_w = floor((gmlview_h * gmldisplay_ratio));
                };
            };
        };
    };
    gmlwin_w = gmlcanvas_w;
    gmlwin_h = gmlcanvas_h;
    room_set_view(0, 0, 1, 0, 0, gmlview_w, gmlview_h, 0, 0, gmlwin_w, gmlwin_h, 0, 0, (-1), (-1), (-1));
    room_set_view(1, 0, 1, 0, 0, gmlview_w, gmlview_h, 0, 0, gmlwin_w, gmlwin_h, 0, 0, (-1), (-1), (-1));
    room_set_view(3, 0, 1, 0, 0, gmlview_w, gmlview_h, 0, 0, gmlwin_w, gmlwin_h, 0, 0, (-1), (-1), (-1));
    display_set_gui_size(gmlwin_w, gmlwin_h);
    window_set_size(gmlwin_w, gmlwin_h);
    surface_resize(g_pBuiltIn.application_surface, gmlwin_w, gmlwin_h);
    js_changeCanvasClass();
    global.gmlboard_w = gmlboard_w;
    global.gmlboard_h = gmlboard_h;
    global.gmlview_w = gmlview_w;
    global.gmlview_h = gmlview_h;
    global.gmlwin_w = gmlcanvas_w;
    global.gmlwin_h = gmlcanvas_h;
    global.gmldisplay_ratio = (gmlview_w / gmlboard_w);
    gml_Script_scr_lowres_check(_inst, _other, global.gmlwin_h, gmlwin_h_base);
    if ((g_pBuiltIn.get_current_room() == 1)) {
        {
            {
                var __yy__v0 = GetWithArray(8);
                for (var __yy__v1 in __yy__v0) {
                    if (!__yy__v0.hasOwnProperty(__yy__v1)) continue;
                    var __yy__v2 = __yy__v0[__yy__v1];
                    if (__yy__v2.marked) continue;
                    if (!__yy__v2.active) continue; {
                        gml_Script_scr_color_world(__yy__v2, _inst);
                        __yy__v2.gmlcircle_fade_size_add = (global.gmlwin_w / 30);
                    }
                }
            };
        };
    } else {
        if ((g_pBuiltIn.get_current_room() == 3)) {
            {
                {
                    var __yy__v3 = GetWithArray(2);
                    for (var __yy__v4 in __yy__v3) {
                        if (!__yy__v3.hasOwnProperty(__yy__v4)) continue;
                        var __yy__v5 = __yy__v3[__yy__v4];
                        if (__yy__v5.marked) continue;
                        if (!__yy__v5.active) continue; {
                            gml_Script_scr_color_world(__yy__v5, _inst);
                        }
                    }
                };
            };
        };
    };
    js_Dogfire_ScrollHome();
}

// #####################################################################################################
// /// scr_floor_correction()
//
// // Floor Correction v.2
//
//     floor_point_lowest_y = -100000;
//     floor_point_highest_y = 100000;
//
//     for ( i=0; i<=line_count; i+=1 ){
//
//         // highest
//         if ( line_y1[i] > floor_point_lowest_y ){ floor_point_lowest_y = line_y1[i]; }
//         if ( line_y2[i] > floor_point_lowest_y ){ floor_point_lowest_y = line_y2[i]; }
//         // if ( line_y1[i] < floor_point_lowest_y ){ floor_point_lowest_y = line_y1[i]; }
//         // if ( line_y2[i] < floor_point_lowest_y ){ floor_point_lowest_y = line_y1[i]; }
//
//
//         // lowest
//         if ( line_y1[i] < floor_point_highest_y ){ floor_point_highest_y = line_y1[i]; }
//         if ( line_y2[i] < floor_point_highest_y ){ floor_point_highest_y = line_y2[i]; }
//         // if ( line_y1[i] > floor_point_highest_y ){ floor_point_highest_y = line_y1[i]; }
//         // if ( line_y2[i] > floor_point_highest_y ){ floor_point_highest_y = line_y1[i]; }
//
//         //  show_debug_message("line_y2[" + i + "]: " + string(line_y2[i]));
//     }
//
//
//     // show_debug_message("floor_point_lowest_y: " + string(floor_point_lowest_y));
//     // show_debug_message("floor_point_highest_y: " + string(floor_point_highest_y));
//
//     if ( floor_point_lowest_y < terrain_screen_bottom ){
//
//         var y_correction = ( terrain_screen_bottom - floor_point_lowest_y ) - grid_size;
//
//         // show_debug_message("add: " + string(y_correction));
//
//         /* for ( i=0; i<=line_count; i+=1 ){
//
//             line_y1[i] += y_correction;
//             line_y2[i] += y_correction;
//         }
//
//         hole_y1 += y_correction;
//         hole_y2 += y_correction; */
//     }
//     else if ( floor_point_lowest_y > terrain_screen_bottom ){
//
//         var y_correction = (( floor_point_lowest_y - terrain_screen_bottom ) * -1 ) - grid_size;
//
//         // y_correction = (( 240 - 230 ) * -1 ) - 20;
//
//         // show_debug_message("substract: " + string(y_correction));
//
//         /* for ( i=0; i<=line_count; i+=1 ){
//
//             line_y1[i] -= y_correction;
//             line_y2[i] -= y_correction;
//         }
//
//         hole_y1 -= y_correction;
//         hole_y2 -= y_correction; */
//     }
//     else if ( floor_point_lowest_y == terrain_screen_bottom ){
//
//         var y_correction = ( grid_size ) * -1;
//
//         // show_debug_message("substract: " + string(y_correction));
//     }
//
//     for ( i=0; i<=line_count; i+=1 ){
//
//         line_y1[i] += y_correction;
//         line_y2[i] += y_correction;
//     }
//
//     hole_y1 += y_correction;
//     hole_y2 += y_correction;
//
//     // show_debug_message("-----");
//
//
function gml_Script_scr_floor_correction_v1(_inst, _other) {
    _inst.gmlfloor_point_lowest_y = (-100000);
    _inst.gmlfloor_point_highest_y = 100000;
    for (_inst.gmli = 0;
        (_inst.gmli <= _inst.gmlline_count); _inst.gmli += 1) {
        {
            if ((_inst.gmlline_y1[_inst.gmli] > _inst.gmlfloor_point_lowest_y)) {
                {
                    _inst.gmlfloor_point_lowest_y = _inst.gmlline_y1[_inst.gmli];
                };
            };
            if ((_inst.gmlline_y2[_inst.gmli] > _inst.gmlfloor_point_lowest_y)) {
                {
                    _inst.gmlfloor_point_lowest_y = _inst.gmlline_y2[_inst.gmli];
                };
            };
            if ((_inst.gmlline_y1[_inst.gmli] < _inst.gmlfloor_point_highest_y)) {
                {
                    _inst.gmlfloor_point_highest_y = _inst.gmlline_y1[_inst.gmli];
                };
            };
            if ((_inst.gmlline_y2[_inst.gmli] < _inst.gmlfloor_point_highest_y)) {
                {
                    _inst.gmlfloor_point_highest_y = _inst.gmlline_y2[_inst.gmli];
                };
            };
        }
    };
    if ((_inst.gmlfloor_point_lowest_y < _inst.gmlterrain_screen_bottom)) {
        {
            var gmly_correction = ((_inst.gmlterrain_screen_bottom - _inst.gmlfloor_point_lowest_y) - _inst.gmlgrid_size);
        };
    } else {
        if ((_inst.gmlfloor_point_lowest_y > _inst.gmlterrain_screen_bottom)) {
            {
                var gmly_correction = (((_inst.gmlfloor_point_lowest_y - _inst.gmlterrain_screen_bottom) * (-1)) - _inst.gmlgrid_size);
            };
        } else {
            if ((_inst.gmlfloor_point_lowest_y == _inst.gmlterrain_screen_bottom)) {
                {
                    var gmly_correction = (_inst.gmlgrid_size * (-1));
                };
            };
        };
    };
    for (_inst.gmli = 0;
        (_inst.gmli <= _inst.gmlline_count); _inst.gmli += 1) {
        {
            if (!(_inst.gmlline_y1 instanceof Array)) {
                _inst.gmlline_y1 = [];
                _inst.gmlline_y1.__yy_owner = 3369323869;
            } else if (_inst.gmlline_y1.__yy_owner !== 3369323869) {
                _inst.gmlline_y1 = _inst.gmlline_y1.slice(0);
                _inst.gmlline_y1.__yy_owner = 3369323869;
            }
            _inst.gmlline_y1[_inst.gmli] += gmly_correction;
            if (!(_inst.gmlline_y2 instanceof Array)) {
                _inst.gmlline_y2 = [];
                _inst.gmlline_y2.__yy_owner = 3825114782;
            } else if (_inst.gmlline_y2.__yy_owner !== 3825114782) {
                _inst.gmlline_y2 = _inst.gmlline_y2.slice(0);
                _inst.gmlline_y2.__yy_owner = 3825114782;
            }
            _inst.gmlline_y2[_inst.gmli] += gmly_correction;
        }
    };
    _inst.gmlhole_y1 += gmly_correction;
    _inst.gmlhole_y2 += gmly_correction;
}

// #####################################################################################################
// /// scr_floor_init()
//
// // Variables Init
//
//     floor_started = true;
//     floor_ready = false;
//
//     floor_contruct_speed = 2;
//
//     world_width_board = room_width; // view_wview[0];
//     world_height_board = room_height;
//
//     world_width_draw = view_wview[0];
//     world_height_draw = view_hview[0];
//
//     draw_ratio = ( obj_ctrl_board.world_width_draw / obj_ctrl_board.world_width_board );
//     if ( draw_ratio < 1 ){ draw_ratio = 1; }
//
//     line_color = make_color_rgb(255,0,0);
//     line_color2 = make_colour_rgb(152,17,21);
//     line_color3 = make_colour_rgb(84,28,35);
//     line_glow_color1 = make_colour_rgb(63,31,40);
//     line_glow_color2 = make_colour_rgb(52,33,42);
//
//
//     first_line_w = 25 * game_ratio;
//     first_line_y = irandom_range(100*game_ratio,220*game_ratio);
//
//     line_gerth = ceil(2 * draw_ratio); // game_ratio
//
//     line_w_min = 25 * game_ratio;
//     line_w_max = 25 * game_ratio;
//
//     line_glow_offset[1] = 1 * game_ratio;
//     line_glow_offset[2] = 2 * game_ratio;
//
//     line_glow_alpha[1] = 0.20;
//     line_glow_alpha[2] = 0.10;
//
//     line_count = 0;
//     line_count_anim = 0;
//
//     line_start_w = 30 * game_ratio;
//
//     line_end_done = false;
//     line_end_w = irandom_range(35*game_ratio,100*game_ratio);
//
//     line_elevation_minus = 20 * game_ratio;
//     line_elevation_plus = 20 * game_ratio;
//
//     floor_end_buffer = irandom_range(35*game_ratio,75*game_ratio);
//
//     floor_top_buffer = 0;
//     floor_top_limit = 150 * game_ratio;
//
//     tall_lines = 0;
//     tall_lines_max = irandom_range(1,2);
//     tall_lines_dist = 0;
//     tall_lines_size_max = 100 * game_ratio;
//     tall_lines_chance_perc = 30;
//
//     hole_width = 15 * game_ratio;
//     hole_depth = 15 * game_ratio;
//
//     ball_in_hole = false;
//     force_meter_show = false;
//
//
// // Floor: Start Point
//
//     line_x1[line_count] = 0;
//     line_y1[line_count] = first_line_y;
//
//     line_x2[line_count] = line_x1[line_count] + first_line_w;
//     line_y2[line_count] = irandom_range(line_y1[line_count]-line_elevation_minus,line_y1[line_count]+line_elevation_plus);
//
//
// // Floor: Path
//
//     while ( line_x1[line_count] < ( world_width_board + first_line_w )){
//
//         if ( line_count == 0 ){
//         // Start Section
//
//             line_count += 1;
//
//             line_x1[line_count] = line_x2[line_count-1];
//             line_y1[line_count] = line_y2[line_count-1];
//
//             line_x2[line_count] = line_x1[line_count] + line_start_w;
//             line_y2[line_count] = line_y1[line_count];
//
//             ball_start_line = line_count;
//         }
//         else {
//         // Regular Section
//
//             line_count += 1;
//
//             line_x1[line_count] = line_x2[line_count-1];
//             line_y1[line_count] = line_y2[line_count-1];
//
//             line_x2[line_count] = irandom_range(line_x1[line_count]+line_w_min,line_x1[line_count]+line_w_max);
//             line_y2[line_count] = irandom_range(line_y1[line_count]-line_elevation_minus,line_y1[line_count]+line_elevation_plus);
//
//
//             // Tall Line Chance
//
//                 tall_lines_dist -= 1; if ( tall_lines_dist < 0 ){ tall_lines_dist = 0; }
//
//                 if (( tall_lines <= tall_lines_max ) and ( tall_lines_dist == 0 )){
//
//                     var tall_line_chance = irandom_range(0,tall_lines_size_max);
//                     if ( tall_line_chance < tall_lines_chance_perc ){ line_x2[line_count] = line_x1[line_count]; tall_lines += 1; }
//
//                     tall_lines_dist = 3;
//                 }
//         }
//
//         if (( !line_end_done ) and ( line_x2[line_count] > ( world_width_board - line_end_w - floor_end_buffer ))){
//         // End Section
//
//             line_x2[line_count] = ( world_width_board - line_end_w - floor_end_buffer );
//
//             hole_line_w[0] = irandom_range(5,(line_end_w-hole_width));
//             hole_line_w[1] = hole_width;
//             hole_line_w[2] = line_end_w - hole_line_w[1] - hole_line_w[0];
//
//             line_count += 1;
//
//                 line_x1[line_count] = line_x2[line_count-1];
//                 line_y1[line_count] = line_y2[line_count-1];
//                 line_x2[line_count] = line_x1[line_count] + hole_line_w[0];
//                 line_y2[line_count] = line_y1[line_count];
//
//             line_count += 1;
//
//                 line_x1[line_count] = line_x2[line_count-1];
//                 line_y1[line_count] = line_y2[line_count-1];
//                 line_x2[line_count] = line_x1[line_count];
//                 line_y2[line_count] = line_y1[line_count] + hole_depth;
//
//                 hole_x1 = line_x1[line_count];
//                 hole_y1 = line_y1[line_count];
//
//             line_count += 1;
//
//                 line_x1[line_count] = line_x2[line_count-1];
//                 line_y1[line_count] = line_y2[line_count-1];
//                 line_x2[line_count] = line_x1[line_count] + hole_line_w[1];
//                 line_y2[line_count] = line_y1[line_count];
//
//                 hole_x2 = line_x2[line_count];
//                 hole_y2 = line_y2[line_count];
//
//             line_count += 1;
//
//                 line_x1[line_count] = line_x2[line_count-1];
//                 line_y1[line_count] = line_y2[line_count-1];
//                 line_x2[line_count] = line_x1[line_count];
//                 line_y2[line_count] = line_y1[line_count] - hole_depth;
//
//             line_count += 1;
//
//                 line_x1[line_count] = line_x2[line_count-1];
//                 line_y1[line_count] = line_y2[line_count-1];
//                 line_x2[line_count] = line_x1[line_count] + hole_line_w[2];
//                 line_y2[line_count] = line_y1[line_count];
//
//             line_end_done = true;
//         }
//     }
//
//
// // Floor Correction
//
//     /*
//     if ( line_y2[line_count] < floor_top_limit ){
//
//         var y_correction = floor(point_distance(0, floor_top_limit, 0, line_y2[line_count] ));
//
//         for ( i=0; i<=line_count; i+=1 ){
//
//             line_y1[i] += y_correction;
//             line_y2[i] += y_correction;
//         }
//
//         hole_y1 += y_correction;
//         hole_y2 += y_correction;
//     }
//     else if ( line_y2[line_count] > ( world_height_board - floor_top_limit )){
//
//         var y_correction = floor(point_distance(0, ( world_height_board  - floor_top_limit ), 0, line_y2[line_count] ));
//
//         for ( i=0; i<=line_count; i+=1 ){
//
//             line_y1[i] -= y_correction;
//             line_y2[i] -= y_correction;
//         }
//
//         hole_y1 -= y_correction;
//         hole_y2 -= y_correction;
//     }
//     */
//
//     floor_point_lowest_y = world_height_board;
//     floor_point_highest_y = 0;
//
//     for ( i=0; i<=line_count; i+=1 ){
//
//         if ( line_y1[i] < floor_point_lowest_y ){ floor_point_lowest_y = line_y1[i]; }
//         if ( line_y2[i] < floor_point_lowest_y ){ floor_point_lowest_y = line_y1[i]; }
//
//         if ( line_y1[i] > floor_point_highest_y ){ floor_point_highest_y = line_y1[i]; }
//         if ( line_y2[i] > floor_point_highest_y ){ floor_point_highest_y = line_y1[i]; }
//     }
//
//     floor_point_mid_y = floor((( floor_point_highest_y - floor_point_lowest_y ) / 2 ) + floor_point_lowest_y );
//
//     var world_point_mid = ( world_height_board / 2 );
//
//     if ( floor_point_mid_y < world_point_mid ){
//
//         var y_correction = ( world_point_mid - floor_point_mid_y );
//
//         for ( i=0; i<=line_count; i+=1 ){
//
//             line_y1[i] += y_correction;
//             line_y2[i] += y_correction;
//         }
//
//         hole_y1 += y_correction;
//         hole_y2 += y_correction;
//     }
//     else if ( floor_point_mid_y > world_point_mid ){
//
//         var y_correction = ( floor_point_mid_y - world_point_mid );
//
//         for ( i=0; i<=line_count; i+=1 ){
//
//             line_y1[i] -= y_correction;
//             line_y2[i] -= y_correction;
//         }
//
//         hole_y1 -= y_correction;
//         hole_y2 -= y_correction;
//     }
//
//
//
//     /* floor_height = floor(point_distance(0,floor_point_lowest_y,0,floor_point_highest_y));
//
//     if ( line_y1[0] < line_y2[line_count] ){
//
//         floor_point_mid_y = line_y1[0] + floor( floor_height / 2 );
//     }
//     else {
//
//         floor_point_mid_y = line_y1[line_count] + floor( floor_height / 2 );
//     }*/
//
//     // Floor Surface Reset
//
//     surf_floor = -1;
//
//     /* if ( surface_exists(surf_floor)){ surface_free(surf_floor); }
//
//     surf_floor = surface_create(512, 512);
//
//     surface_set_target(surf_floor);
//
//         draw_clear_alpha(c_white, 0);
//
//         draw_set_alpha(1);
//
//         scr_floor_draw(line_count);
//
//     surface_reset_target();
//
//     // onfly_sprite_floor = sprite_create_from_surface(surf_floor,0,0,512,512,true,true,0,0);
//     */
//
// // Floor Instances
//
//     // Clear Floor Instances
//     if ( floor_physics_inst[0] != 0 ){
//
//         for ( var i=0; i<floor_physics_inst_count; i++; ){
//
//             with ( floor_physics_inst[i] ){ instance_destroy(); }
//         }
//     }
//
//     // Create New Floor Instances
//     var floor_fixture = scr_physics_fixture_init();
//
//     var local_phys_start_x = obj_ctrl_board.line_x1[0];
//     var local_phys_start_y = obj_ctrl_board.line_y1[0];
//
//     floor_fixture_vertex_count = 0;
//
//     floor_physics_inst_count = 0;
//
//     for (var i = 0; i<=line_count; i++;){
//
//         physics_fixture_add_point(floor_fixture, obj_ctrl_board.line_x1[i], obj_ctrl_board.line_y1[i]);
//
//         floor_fixture_vertex_count += 1;
//
//         if (( floor_fixture_vertex_count == 5 ) or ( i = line_count )){
//
//             floor_physics_inst[floor_physics_inst_count] = instance_create(0,0,obj_phys_floor);
//
//             physics_fixture_bind(floor_fixture, floor_physics_inst[floor_physics_inst_count]);
//
//             with ( floor_physics_inst[floor_physics_inst_count] ){
//
//                 phy_active = false;
//
//                 phys_start_x = local_phys_start_x;
//                 phys_start_y = local_phys_start_y;
//                 phys_end_x = obj_ctrl_board.line_x1[i];
//                 phys_end_y = obj_ctrl_board.line_y1[i];
//             }
//
//             physics_fixture_delete(floor_fixture);
//
//             floor_physics_inst_count += 1;
//
//             if ( i != line_count ){
//
//                 floor_fixture = scr_physics_fixture_init();
//
//                 local_phys_start_x = obj_ctrl_board.line_x1[i];
//                 local_phys_start_y = obj_ctrl_board.line_y1[i];
//
//                 physics_fixture_add_point(floor_fixture, obj_ctrl_board.line_x1[i], obj_ctrl_board.line_y1[i]); // Add previous vertex to stitch new with prev
//
//                 floor_fixture_vertex_count = 0;
//             }
//         }
//     }
//
//
function gml_Script_scr_floor_init_v1(_inst, _other) {
    _inst.gmlfloor_started = 1 ? 1 : 0;
    _inst.gmlfloor_ready = 0 ? 1 : 0;
    _inst.gmlfloor_contruct_speed = 2;
    _inst.gmlworld_width_board = g_pBuiltIn.room_width;
    _inst.gmlworld_height_board = g_pBuiltIn.room_height;
    _inst.gmlworld_width_draw = g_pBuiltIn.view_wview[0];
    _inst.gmlworld_height_draw = g_pBuiltIn.view_hview[0];
    _inst.gmldraw_ratio = (yyInst(2).gmlworld_width_draw / yyInst(2).gmlworld_width_board);
    if ((_inst.gmldraw_ratio < 1)) {
        {
            _inst.gmldraw_ratio = 1;
        };
    };
    _inst.gmlline_color = make_color_rgb(255, 0, 0);
    _inst.gmlline_color2 = make_colour_rgb(152, 17, 21);
    _inst.gmlline_color3 = make_colour_rgb(84, 28, 35);
    _inst.gmlline_glow_color1 = make_colour_rgb(63, 31, 40);
    _inst.gmlline_glow_color2 = make_colour_rgb(52, 33, 42);
    _inst.gmlfirst_line_w = (25 * _inst.gmlgame_ratio);
    _inst.gmlfirst_line_y = irandom_range((100 * _inst.gmlgame_ratio), (220 * _inst.gmlgame_ratio));
    _inst.gmlline_gerth = ceil((2 * _inst.gmldraw_ratio));
    _inst.gmlline_w_min = (25 * _inst.gmlgame_ratio);
    _inst.gmlline_w_max = (25 * _inst.gmlgame_ratio);
    if (!(_inst.gmlline_glow_offset instanceof Array)) {
        _inst.gmlline_glow_offset = [];
        _inst.gmlline_glow_offset.__yy_owner = 2102440192;
    } else if (_inst.gmlline_glow_offset.__yy_owner !== 2102440192) {
        _inst.gmlline_glow_offset = _inst.gmlline_glow_offset.slice(0);
        _inst.gmlline_glow_offset.__yy_owner = 2102440192;
    }
    _inst.gmlline_glow_offset[1] = (1 * _inst.gmlgame_ratio);
    _inst.gmlline_glow_offset[2] = (2 * _inst.gmlgame_ratio);
    if (!(_inst.gmlline_glow_alpha instanceof Array)) {
        _inst.gmlline_glow_alpha = [];
        _inst.gmlline_glow_alpha.__yy_owner = 4277564007;
    } else if (_inst.gmlline_glow_alpha.__yy_owner !== 4277564007) {
        _inst.gmlline_glow_alpha = _inst.gmlline_glow_alpha.slice(0);
        _inst.gmlline_glow_alpha.__yy_owner = 4277564007;
    }
    _inst.gmlline_glow_alpha[1] = 0.2;
    _inst.gmlline_glow_alpha[2] = 0.1;
    _inst.gmlline_count = 0;
    _inst.gmlline_count_anim = 0;
    _inst.gmlline_start_w = (30 * _inst.gmlgame_ratio);
    _inst.gmlline_end_done = 0 ? 1 : 0;
    _inst.gmlline_end_w = irandom_range((35 * _inst.gmlgame_ratio), (100 * _inst.gmlgame_ratio));
    _inst.gmlline_elevation_minus = (20 * _inst.gmlgame_ratio);
    _inst.gmlline_elevation_plus = (20 * _inst.gmlgame_ratio);
    _inst.gmlfloor_end_buffer = irandom_range((35 * _inst.gmlgame_ratio), (75 * _inst.gmlgame_ratio));
    _inst.gmlfloor_top_buffer = 0;
    _inst.gmlfloor_top_limit = (150 * _inst.gmlgame_ratio);
    _inst.gmltall_lines = 0;
    _inst.gmltall_lines_max = irandom_range(1, 2);
    _inst.gmltall_lines_dist = 0;
    _inst.gmltall_lines_size_max = (100 * _inst.gmlgame_ratio);
    _inst.gmltall_lines_chance_perc = 30;
    _inst.gmlhole_width = (15 * _inst.gmlgame_ratio);
    _inst.gmlhole_depth = (15 * _inst.gmlgame_ratio);
    _inst.gmlball_in_hole = 0 ? 1 : 0;
    _inst.gmlforce_meter_show = 0 ? 1 : 0;
    if (!(_inst.gmlline_x1 instanceof Array)) {
        _inst.gmlline_x1 = [];
        _inst.gmlline_x1.__yy_owner = 1886366264;
    } else if (_inst.gmlline_x1.__yy_owner !== 1886366264) {
        _inst.gmlline_x1 = _inst.gmlline_x1.slice(0);
        _inst.gmlline_x1.__yy_owner = 1886366264;
    }
    _inst.gmlline_x1[_inst.gmlline_count] = 0;
    if (!(_inst.gmlline_y1 instanceof Array)) {
        _inst.gmlline_y1 = [];
        _inst.gmlline_y1.__yy_owner = 3369323869;
    } else if (_inst.gmlline_y1.__yy_owner !== 3369323869) {
        _inst.gmlline_y1 = _inst.gmlline_y1.slice(0);
        _inst.gmlline_y1.__yy_owner = 3369323869;
    }
    _inst.gmlline_y1[_inst.gmlline_count] = _inst.gmlfirst_line_y;
    if (!(_inst.gmlline_x2 instanceof Array)) {
        _inst.gmlline_x2 = [];
        _inst.gmlline_x2.__yy_owner = 1531116027;
    } else if (_inst.gmlline_x2.__yy_owner !== 1531116027) {
        _inst.gmlline_x2 = _inst.gmlline_x2.slice(0);
        _inst.gmlline_x2.__yy_owner = 1531116027;
    }
    _inst.gmlline_x2[_inst.gmlline_count] = (_inst.gmlline_x1[_inst.gmlline_count] + _inst.gmlfirst_line_w);
    if (!(_inst.gmlline_y2 instanceof Array)) {
        _inst.gmlline_y2 = [];
        _inst.gmlline_y2.__yy_owner = 3825114782;
    } else if (_inst.gmlline_y2.__yy_owner !== 3825114782) {
        _inst.gmlline_y2 = _inst.gmlline_y2.slice(0);
        _inst.gmlline_y2.__yy_owner = 3825114782;
    }
    _inst.gmlline_y2[_inst.gmlline_count] = irandom_range((_inst.gmlline_y1[_inst.gmlline_count] - _inst.gmlline_elevation_minus), (_inst.gmlline_y1[_inst.gmlline_count] + _inst.gmlline_elevation_plus));
    while ((_inst.gmlline_x1[_inst.gmlline_count] < (_inst.gmlworld_width_board + _inst.gmlfirst_line_w))) {
        {
            if ((_inst.gmlline_count == 0)) {
                {
                    _inst.gmlline_count += 1;
                    _inst.gmlline_x1[_inst.gmlline_count] = _inst.gmlline_x2[(_inst.gmlline_count - 1)];
                    _inst.gmlline_y1[_inst.gmlline_count] = _inst.gmlline_y2[(_inst.gmlline_count - 1)];
                    _inst.gmlline_x2[_inst.gmlline_count] = (_inst.gmlline_x1[_inst.gmlline_count] + _inst.gmlline_start_w);
                    _inst.gmlline_y2[_inst.gmlline_count] = _inst.gmlline_y1[_inst.gmlline_count];
                    _inst.gmlball_start_line = _inst.gmlline_count;
                };
            } else {
                {
                    _inst.gmlline_count += 1;
                    _inst.gmlline_x1[_inst.gmlline_count] = _inst.gmlline_x2[(_inst.gmlline_count - 1)];
                    _inst.gmlline_y1[_inst.gmlline_count] = _inst.gmlline_y2[(_inst.gmlline_count - 1)];
                    _inst.gmlline_x2[_inst.gmlline_count] = irandom_range((_inst.gmlline_x1[_inst.gmlline_count] + _inst.gmlline_w_min), (_inst.gmlline_x1[_inst.gmlline_count] + _inst.gmlline_w_max));
                    _inst.gmlline_y2[_inst.gmlline_count] = irandom_range((_inst.gmlline_y1[_inst.gmlline_count] - _inst.gmlline_elevation_minus), (_inst.gmlline_y1[_inst.gmlline_count] + _inst.gmlline_elevation_plus));
                    _inst.gmltall_lines_dist -= 1;
                    if ((_inst.gmltall_lines_dist < 0)) {
                        {
                            _inst.gmltall_lines_dist = 0;
                        };
                    };
                    if ((((_inst.gmltall_lines <= _inst.gmltall_lines_max)) && ((_inst.gmltall_lines_dist == 0)))) {
                        {
                            var gmltall_line_chance = irandom_range(0, _inst.gmltall_lines_size_max);
                            if ((gmltall_line_chance < _inst.gmltall_lines_chance_perc)) {
                                {
                                    _inst.gmlline_x2[_inst.gmlline_count] = _inst.gmlline_x1[_inst.gmlline_count];
                                    _inst.gmltall_lines += 1;
                                };
                            };
                            _inst.gmltall_lines_dist = 3;
                        };
                    };
                };
            };
            if (((!(_inst.gmlline_end_done > 0.5)) && ((_inst.gmlline_x2[_inst.gmlline_count] > (_inst.gmlworld_width_board - _inst.gmlline_end_w - _inst.gmlfloor_end_buffer))))) {
                {
                    _inst.gmlline_x2[_inst.gmlline_count] = (_inst.gmlworld_width_board - _inst.gmlline_end_w - _inst.gmlfloor_end_buffer);
                    if (!(_inst.gmlhole_line_w instanceof Array)) {
                        _inst.gmlhole_line_w = [];
                        _inst.gmlhole_line_w.__yy_owner = 2738892900;
                    } else if (_inst.gmlhole_line_w.__yy_owner !== 2738892900) {
                        _inst.gmlhole_line_w = _inst.gmlhole_line_w.slice(0);
                        _inst.gmlhole_line_w.__yy_owner = 2738892900;
                    }
                    _inst.gmlhole_line_w[0] = irandom_range(5, (_inst.gmlline_end_w - _inst.gmlhole_width));
                    _inst.gmlhole_line_w[1] = _inst.gmlhole_width;
                    _inst.gmlhole_line_w[2] = (_inst.gmlline_end_w - _inst.gmlhole_line_w[1] - _inst.gmlhole_line_w[0]);
                    _inst.gmlline_count += 1;
                    _inst.gmlline_x1[_inst.gmlline_count] = _inst.gmlline_x2[(_inst.gmlline_count - 1)];
                    _inst.gmlline_y1[_inst.gmlline_count] = _inst.gmlline_y2[(_inst.gmlline_count - 1)];
                    _inst.gmlline_x2[_inst.gmlline_count] = (_inst.gmlline_x1[_inst.gmlline_count] + _inst.gmlhole_line_w[0]);
                    _inst.gmlline_y2[_inst.gmlline_count] = _inst.gmlline_y1[_inst.gmlline_count];
                    _inst.gmlline_count += 1;
                    _inst.gmlline_x1[_inst.gmlline_count] = _inst.gmlline_x2[(_inst.gmlline_count - 1)];
                    _inst.gmlline_y1[_inst.gmlline_count] = _inst.gmlline_y2[(_inst.gmlline_count - 1)];
                    _inst.gmlline_x2[_inst.gmlline_count] = _inst.gmlline_x1[_inst.gmlline_count];
                    _inst.gmlline_y2[_inst.gmlline_count] = (_inst.gmlline_y1[_inst.gmlline_count] + _inst.gmlhole_depth);
                    _inst.gmlhole_x1 = _inst.gmlline_x1[_inst.gmlline_count];
                    _inst.gmlhole_y1 = _inst.gmlline_y1[_inst.gmlline_count];
                    _inst.gmlline_count += 1;
                    _inst.gmlline_x1[_inst.gmlline_count] = _inst.gmlline_x2[(_inst.gmlline_count - 1)];
                    _inst.gmlline_y1[_inst.gmlline_count] = _inst.gmlline_y2[(_inst.gmlline_count - 1)];
                    _inst.gmlline_x2[_inst.gmlline_count] = (_inst.gmlline_x1[_inst.gmlline_count] + _inst.gmlhole_line_w[1]);
                    _inst.gmlline_y2[_inst.gmlline_count] = _inst.gmlline_y1[_inst.gmlline_count];
                    _inst.gmlhole_x2 = _inst.gmlline_x2[_inst.gmlline_count];
                    _inst.gmlhole_y2 = _inst.gmlline_y2[_inst.gmlline_count];
                    _inst.gmlline_count += 1;
                    _inst.gmlline_x1[_inst.gmlline_count] = _inst.gmlline_x2[(_inst.gmlline_count - 1)];
                    _inst.gmlline_y1[_inst.gmlline_count] = _inst.gmlline_y2[(_inst.gmlline_count - 1)];
                    _inst.gmlline_x2[_inst.gmlline_count] = _inst.gmlline_x1[_inst.gmlline_count];
                    _inst.gmlline_y2[_inst.gmlline_count] = (_inst.gmlline_y1[_inst.gmlline_count] - _inst.gmlhole_depth);
                    _inst.gmlline_count += 1;
                    _inst.gmlline_x1[_inst.gmlline_count] = _inst.gmlline_x2[(_inst.gmlline_count - 1)];
                    _inst.gmlline_y1[_inst.gmlline_count] = _inst.gmlline_y2[(_inst.gmlline_count - 1)];
                    _inst.gmlline_x2[_inst.gmlline_count] = (_inst.gmlline_x1[_inst.gmlline_count] + _inst.gmlhole_line_w[2]);
                    _inst.gmlline_y2[_inst.gmlline_count] = _inst.gmlline_y1[_inst.gmlline_count];
                    _inst.gmlline_end_done = 1 ? 1 : 0;
                };
            };
        }
    };
    _inst.gmlfloor_point_lowest_y = _inst.gmlworld_height_board;
    _inst.gmlfloor_point_highest_y = 0;
    for (_inst.gmli = 0;
        (_inst.gmli <= _inst.gmlline_count); _inst.gmli += 1) {
        {
            if ((_inst.gmlline_y1[_inst.gmli] < _inst.gmlfloor_point_lowest_y)) {
                {
                    _inst.gmlfloor_point_lowest_y = _inst.gmlline_y1[_inst.gmli];
                };
            };
            if ((_inst.gmlline_y2[_inst.gmli] < _inst.gmlfloor_point_lowest_y)) {
                {
                    _inst.gmlfloor_point_lowest_y = _inst.gmlline_y1[_inst.gmli];
                };
            };
            if ((_inst.gmlline_y1[_inst.gmli] > _inst.gmlfloor_point_highest_y)) {
                {
                    _inst.gmlfloor_point_highest_y = _inst.gmlline_y1[_inst.gmli];
                };
            };
            if ((_inst.gmlline_y2[_inst.gmli] > _inst.gmlfloor_point_highest_y)) {
                {
                    _inst.gmlfloor_point_highest_y = _inst.gmlline_y1[_inst.gmli];
                };
            };
        }
    };
    _inst.gmlfloor_point_mid_y = floor((((_inst.gmlfloor_point_highest_y - _inst.gmlfloor_point_lowest_y) / 2) + _inst.gmlfloor_point_lowest_y));
    var gmlworld_point_mid = (_inst.gmlworld_height_board / 2);
    if ((_inst.gmlfloor_point_mid_y < gmlworld_point_mid)) {
        {
            var gmly_correction = (gmlworld_point_mid - _inst.gmlfloor_point_mid_y);
            for (_inst.gmli = 0;
                (_inst.gmli <= _inst.gmlline_count); _inst.gmli += 1) {
                {
                    _inst.gmlline_y1[_inst.gmli] += gmly_correction;
                    _inst.gmlline_y2[_inst.gmli] += gmly_correction;
                }
            };
            _inst.gmlhole_y1 += gmly_correction;
            _inst.gmlhole_y2 += gmly_correction;
        };
    } else {
        if ((_inst.gmlfloor_point_mid_y > gmlworld_point_mid)) {
            {
                var gmly_correction = (_inst.gmlfloor_point_mid_y - gmlworld_point_mid);
                for (_inst.gmli = 0;
                    (_inst.gmli <= _inst.gmlline_count); _inst.gmli += 1) {
                    {
                        _inst.gmlline_y1[_inst.gmli] -= gmly_correction;
                        _inst.gmlline_y2[_inst.gmli] -= gmly_correction;
                    }
                };
                _inst.gmlhole_y1 -= gmly_correction;
                _inst.gmlhole_y2 -= gmly_correction;
            };
        };
    };
    _inst.gmlsurf_floor = (-1);
    if ((_inst.gmlfloor_physics_inst[0] != 0)) {
        {
            for (var gmli = 0;
                (gmli < _inst.gmlfloor_physics_inst_count); gmli++) {
                {
                    {
                        var __yy__v6 = GetWithArray(_inst.gmlfloor_physics_inst[gmli]);
                        for (var __yy__v7 in __yy__v6) {
                            if (!__yy__v6.hasOwnProperty(__yy__v7)) continue;
                            var __yy__v8 = __yy__v6[__yy__v7];
                            if (__yy__v8.marked) continue;
                            if (!__yy__v8.active) continue; {
                                instance_destroy(__yy__v8);
                            }
                        }
                    };
                }
            };
        };
    };
    var gmlfloor_fixture = gml_Script_scr_physics_fixture_init(_inst, _other);
    var gmllocal_phys_start_x = yyInst(2).gmlline_x1[0];
    var gmllocal_phys_start_y = yyInst(2).gmlline_y1[0];
    _inst.gmlfloor_fixture_vertex_count = 0;
    _inst.gmlfloor_physics_inst_count = 0;
    for (var gmli = 0;
        (gmli <= _inst.gmlline_count); gmli++) {
        {
            physics_fixture_add_point(gmlfloor_fixture, yyInst(2).gmlline_x1[gmli], yyInst(2).gmlline_y1[gmli]);
            _inst.gmlfloor_fixture_vertex_count += 1;
            if ((((_inst.gmlfloor_fixture_vertex_count == 5)) || ((gmli == _inst.gmlline_count)))) {
                {
                    if (!(_inst.gmlfloor_physics_inst instanceof Array)) {
                        _inst.gmlfloor_physics_inst = [];
                        _inst.gmlfloor_physics_inst.__yy_owner = 2998142590;
                    } else if (_inst.gmlfloor_physics_inst.__yy_owner !== 2998142590) {
                        _inst.gmlfloor_physics_inst = _inst.gmlfloor_physics_inst.slice(0);
                        _inst.gmlfloor_physics_inst.__yy_owner = 2998142590;
                    }
                    _inst.gmlfloor_physics_inst[_inst.gmlfloor_physics_inst_count] = instance_create(0, 0, 9);
                    physics_fixture_bind(_inst, gmlfloor_fixture, _inst.gmlfloor_physics_inst[_inst.gmlfloor_physics_inst_count]); {
                        var __yy__v9 = GetWithArray(_inst.gmlfloor_physics_inst[_inst.gmlfloor_physics_inst_count]);
                        for (var __yy__v10 in __yy__v9) {
                            if (!__yy__v9.hasOwnProperty(__yy__v10)) continue;
                            var __yy__v11 = __yy__v9[__yy__v10];
                            if (__yy__v11.marked) continue;
                            if (!__yy__v11.active) continue; {
                                __yy__v11.set_physics_active(0 ? 1 : 0);
                                __yy__v11.gmlphys_start_x = gmllocal_phys_start_x;
                                __yy__v11.gmlphys_start_y = gmllocal_phys_start_y;
                                __yy__v11.gmlphys_end_x = yyInst(2).gmlline_x1[gmli];
                                __yy__v11.gmlphys_end_y = yyInst(2).gmlline_y1[gmli];
                            }
                        }
                    };
                    physics_fixture_delete(gmlfloor_fixture);
                    _inst.gmlfloor_physics_inst_count += 1;
                    if ((gmli != _inst.gmlline_count)) {
                        {
                            gmlfloor_fixture = gml_Script_scr_physics_fixture_init(_inst, _other);
                            gmllocal_phys_start_x = yyInst(2).gmlline_x1[gmli];
                            gmllocal_phys_start_y = yyInst(2).gmlline_y1[gmli];
                            physics_fixture_add_point(gmlfloor_fixture, yyInst(2).gmlline_x1[gmli], yyInst(2).gmlline_y1[gmli]);
                            _inst.gmlfloor_fixture_vertex_count = 0;
                        };
                    };
                };
            };
        }
    };
}

// #####################################################################################################
// /// scr_floor_surface_v1(line_count)
//
//     var scr_line_count = argument0;
//
//     surf_floor = surface_create(512, 512);
//
//     // Line Surface
//     surface_set_target(surf_floor);
//
//         // Version 2
//         /*
//         line_step = 0;
//
//         draw_clear_alpha(c_white, 0);
//
//         repeat(line_gerth){
//
//             draw_primitive_begin(pr_linestrip);
//
//                 for ( i=0; i<=scr_line_count; i+=1 ){ draw_vertex_colour(line_x1[i], line_y1[i]+line_step, c_white, 1); }
//
//                 draw_vertex_colour(line_x2[scr_line_count], line_y2[scr_line_count]+line_step, c_white, 1);
//
//             draw_primitive_end();
//
//             line_step += 1;
//         }
//         */
//
//         // Version 1
//
//         draw_clear_alpha(c_white, 0);
//
//         draw_set_alpha(1);
//
//         for ( i=0; i<=scr_line_count; i+=1 ){
//
//             draw_line_width_colour(line_x1[i],line_y1[i],line_x2[i],line_y2[i],2,c_white,c_white);
//         }
//
//
//     surface_reset_target();
//
//
function gml_Script_scr_floor_surface_v1(_inst, _other, argument0) {
    var gmlscr_line_count = argument0;
    _inst.gmlsurf_floor = surface_create(512, 512);
    surface_set_target(_inst.gmlsurf_floor);
    draw_clear_alpha(16777215, 0);
    draw_set_alpha(1);
    for (_inst.gmli = 0;
        (_inst.gmli <= gmlscr_line_count); _inst.gmli += 1) {
        {
            draw_line_width_colour(_inst.gmlline_x1[_inst.gmli], _inst.gmlline_y1[_inst.gmli], _inst.gmlline_x2[_inst.gmli], _inst.gmlline_y2[_inst.gmli], 2, 16777215, 16777215);
        }
    };
    surface_reset_target();
}

// #####################################################################################################
// /// scr_floor_surface_v3(line_count,x_move,y_move,line_alpha,line_color,line_gerth)
//
//     var draw_ratio = obj_ctrl_board.draw_ratio;
//
//     var scr_line_count = argument0;
//     var x_move = argument1;
//     var y_move = argument2;
//     var line_alpha = argument3;
//     var line_color = argument4;
//     var line_gerth = argument5;
//
//     var x1 = 0;
//     var y1 = 0;
//     var x2 = 0;
//     var y2 = 0;
//
//     draw_set_alpha(line_alpha);
//
//     for ( i=0; i<=scr_line_count; i+=1 ){
//
//         x1 = (( line_x1[i] + x_move ) * obj_ctrl_board.draw_ratio );
//         y1 = (( line_y1[i] + y_move ) * obj_ctrl_board.draw_ratio );
//
//         x2 = (( line_x2[i] + x_move ) * obj_ctrl_board.draw_ratio );
//         y2 = (( line_y2[i] + y_move ) * obj_ctrl_board.draw_ratio );
//
//         draw_triangle_colour(x1,y1,x2,y2,x2,y2+line_gerth,line_color,line_color,line_color,false);
//
//         draw_triangle_colour(x1,y1,x1,y1+line_gerth,x2,y2+line_gerth,line_color,line_color,line_color,false);
//
//         // draw_line_width_colour(x1,y1,x2,y2,line_gerth,line_color,line_color);
//     }
//
//
function gml_Script_scr_floor_surface_v3(_inst, _other, argument0, argument1, argument2, argument3, argument4, argument5) {
    var gmldraw_ratio = yyInst(2).gmldraw_ratio;
    var gmlscr_line_count = argument0;
    var gmlx_move = argument1;
    var gmly_move = argument2;
    var gmlline_alpha = argument3;
    var gmlline_color = argument4;
    var gmlline_gerth = argument5;
    var gmlx1 = 0;
    var gmly1 = 0;
    var gmlx2 = 0;
    var gmly2 = 0;
    draw_set_alpha(gmlline_alpha);
    for (_inst.gmli = 0;
        (_inst.gmli <= gmlscr_line_count); _inst.gmli += 1) {
        {
            gmlx1 = ((_inst.gmlline_x1[_inst.gmli] + gmlx_move) * yyInst(2).gmldraw_ratio);
            gmly1 = ((_inst.gmlline_y1[_inst.gmli] + gmly_move) * yyInst(2).gmldraw_ratio);
            gmlx2 = ((_inst.gmlline_x2[_inst.gmli] + gmlx_move) * yyInst(2).gmldraw_ratio);
            gmly2 = ((_inst.gmlline_y2[_inst.gmli] + gmly_move) * yyInst(2).gmldraw_ratio);
            draw_triangle_colour(gmlx1, gmly1, gmlx2, gmly2, gmlx2, (gmly2 + gmlline_gerth), gmlline_color, gmlline_color, gmlline_color, 0);
            draw_triangle_colour(gmlx1, gmly1, gmlx1, (gmly1 + gmlline_gerth), gmlx2, (gmly2 + gmlline_gerth), gmlline_color, gmlline_color, gmlline_color, 0);
        }
    };
}

// #####################################################################################################
// /// scr_language_load()
//
// if ( global.game_lang == 0 ){
// // English
//
//     // Main Screen
//     lang_text_menu_main[0] = "PLAY GAME";
//     lang_text_menu_main[1] = "OPTIONS";
//     lang_text_menu_main[2] = "EXIT";
//     lang_text_menu_main[3] = "CREDITS";
//
//     // Options
//     lang_text_options[0] = "MUSIC";
//     lang_text_options[1] = "SOUND";
//     lang_text_options[2] = "LANGUAGE";
//     lang_text_options[3] = "ENGLISH";
//     lang_text_options[4] = "ESPANOL";
//     lang_text_options[5] = "OPTIONS";
//
//     // Game Modes
//     lang_text_modes[0] = "GAME MODES";
//     lang_text_modes[1] = "NEON COURSES";
//     lang_text_modes[2] = "HOLE-IN-ONE";
//     lang_text_modes[3] = "JUST IN TIME";
//     lang_text_modes[4] = "DONT RUN OUT";
//     lang_text_modes[5] = "PRACTICE";
//
//     lang_text_modes[6] = "SELECT A COURSE";
//     lang_text_modes[7] = "START";
//     lang_text_modes[8] = "CONTINUE";
//     lang_text_modes[9] = "RESET";
//
//     lang_text_modes[10] = "ONE SHOT PER LEVEL.#HOW MANY LEVELS#CAN YOU CLEAR?";
//     lang_text_modes[11] = "TIME IS RUNNING OUT.#CLEAR AS MANY LEVELS#AS YOU CAN.";
//     lang_text_modes[12] = "BALLS ARE LIMITED. HOW FAR#CAN YOU GO?";
//     lang_text_modes[13] = "THERE ARE NO RULES.#YOU CAN PRACTICE ALL#YOUR SHOTS.";
//
//     // Progress
//     lang_text_progress[0] = "PROGRESS";
//     lang_text_progress[1] = " of ";
//     lang_text_progress[2] = "HITS:";
//     lang_text_progress[3] = "BEST:";
//     lang_text_progress[4] = "COMPLETE ";
//     lang_text_progress[5] = " HOLES#IN THE LEAST#AMOUNT OF HITS";
//     lang_text_progress[6] = "BEST SCORE: ";
//     lang_text_progress[7] = " holes";
//
//     // Reset Window
//     lang_text_reset[0] = "LEVEL ";
//     lang_text_reset[1] = "NO SCORE";
//     lang_text_reset[2] = "SCORE:";
//     lang_text_reset[3] = "WARNING: ALL CHECKPOINTS AFTER#THE SELECTED ONE WILL BE DELETED";
//     lang_text_reset[4] = "THIS WILL RESET YOUR#PROGRESS AND SCORE TO CERO##ARE YOU SURE?";
//     lang_text_reset[5] = "GO BACK";
//     lang_text_reset[6] = "RESET";
//     lang_text_reset[7] = "SELECT A CHECKPOINT#TO RESET YOUR GAME";
//     lang_text_reset[8] = "GO BACK";
//
//     // Side Menu
//     lang_text_side[0] = "COURSE ";
//     lang_text_side[1] = "HOLE:";
//     lang_text_side[2] = "HITS:";
//     lang_text_side[3] = "BEST:";
//     lang_text_side[4] = "BEST SCORE:";
//     lang_text_side[5] = "MAIN MENU";
//     lang_text_side[6] = "RESUME";
//
//     // Game Over
//     lang_text_gover[0] = "COURSE COMPLETE";
//     lang_text_gover[1] = "Neon Course ";
//     lang_text_gover[2] = "New Record!:";
//     lang_text_gover[3] = "Score:";
//     lang_text_gover[4] = "Best Score:";
//     lang_text_gover[5] = "GAME OVER";
//     lang_text_gover[6] = "Hole in One";
//     lang_text_gover[7] = "Top Score:";
//     lang_text_gover[8] = "Just in Time";
//     lang_text_gover[9] = "Don't Run Out";
//
//     // Course
//     lang_text_course[0] = " BALLS";
//     lang_text_course[1] = " seconds";
//
//     // Tutorial
//     lang_text_tutorial[0] = "Click";
//     lang_text_tutorial[1] = "Tap";
//     lang_text_tutorial[2] = "To Hit the Ball#You can "
//     lang_text_tutorial[3] = " Anywhere.#Drag and Release"
// }
// else if ( global.game_lang == 1 ){
// // Spanish
//
//     // Main Screen
//     lang_text_menu_main[0] = "JUGAR";
//     lang_text_menu_main[1] = "OPCIONES";
//     lang_text_menu_main[2] = "SALIR";
//     lang_text_menu_main[3] = "CREDITOS";
//
//     // Options
//     lang_text_options[0] = "MUSICA";
//     lang_text_options[1] = "SONIDO";
//     lang_text_options[2] = "LENGUAJE";
//     lang_text_options[3] = "ENGLISH";
//     lang_text_options[4] = "ESPANOL";
//     lang_text_options[5] = "OPCIONES";
//
//     // Game Modes
//     lang_text_modes[0] = "MODOS DE JUEGO";
//     lang_text_modes[1] = "CAMPOS NEON";
//     lang_text_modes[2] = "HOYO-EN-UNO";
//     lang_text_modes[3] = "JUSTO A TIEMPO";
//     lang_text_modes[4] = "BOLA PERDIDA";
//     lang_text_modes[5] = "PRACTICA";
//
//     lang_text_modes[6] = "SELECCIONE UN CAMPO";
//     lang_text_modes[7] = "COMENZAR";
//     lang_text_modes[8] = "CONTINUAR";
//     lang_text_modes[9] = "REINICIAR";
//
//     lang_text_modes[10] = "UN TIRO POR NIVEL.#CUANTOS NIVELES#PUEDES COMPLETAR?";
//     lang_text_modes[11] = "EL TIEMPO SE TERMINA.#COMPLETA TANTOS NIVELES#COMO PUEDAS.";
//     lang_text_modes[12] = "BOLAS LIMITADAS. CUAN#LEJOS PUEDES LLEGAR?";
//     lang_text_modes[13] = "NO HAY REGLAS.#PUEDES PRATICAR#TODOS TUS TIROS.";
//
//     // Progress
//     lang_text_progress[0] = "PROGRESO";
//     lang_text_progress[1] = " de ";
//     lang_text_progress[2] = "TIROS:";
//     lang_text_progress[3] = "MEJOR:";
//     lang_text_progress[4] = "COMPLETAR ";
//     lang_text_progress[5] = " HOYOS#EN LA MENOR#CANTIDAD DE TIROS";
//     lang_text_progress[6] = "MEJOR PUNTUACION: ";
//     lang_text_progress[7] = " hoyos";
//
//     // Reset Window
//     lang_text_reset[0] = "NIVEL ";
//     lang_text_reset[1] = "SIN TIROS";
//     lang_text_reset[2] = "TIROS:";
//     lang_text_reset[3] = "AVISO: TODOS LOS MARCADORES LUEGO#DEL SELECCIONADO SERAN BORRADOS";
//     lang_text_reset[4] = "ESTA ACCION BORRARA TODO#SU PROGRESO Y PUNTUACIONES#DESEA CONTINUAR?";
//     lang_text_reset[5] = "ATRAS";
//     lang_text_reset[6] = "REINICIAR";
//     lang_text_reset[7] = "SELECCIONE UN MARCADOR#PARA REINICIAR SU JUEGO";
//     lang_text_reset[8] = "ATRAS";
//
//     // Side Menu
//     lang_text_side[0] = "CAMPO ";
//     lang_text_side[1] = "HOYO:";
//     lang_text_side[2] = "TIROS:";
//     lang_text_side[3] = "MEJOR:";
//     lang_text_side[4] = "MEJOR:";
//     lang_text_side[5] = "MENU PRINCIPAL";
//     lang_text_side[6] = "CONTINUAR";
//
//     // Game Over
//     lang_text_gover[0] = "CAMPO COMPLETADO";
//     lang_text_gover[1] = "Campos Neon ";
//     lang_text_gover[2] = "Nuevo Record!:";
//     lang_text_gover[3] = "Puntos:";
//     lang_text_gover[4] = "Mejor Puntuacion:";
//     lang_text_gover[5] = "FIN DEL JUEGO";
//     lang_text_gover[6] = "Hoyo en Uno";
//     lang_text_gover[7] = "Mejor Puntuacion:";
//     lang_text_gover[8] = "Justo a Tiempo";
//     lang_text_gover[9] = "Bola Perdida";
//
//     // Course
//     lang_text_course[0] = " BOLAS";
//     lang_text_course[1] = " segundos";
//
//     // Tutorial
//     lang_text_tutorial[0] = "Haz un Click";
//     lang_text_tutorial[1] = "Toca la Pantalla";
//     lang_text_tutorial[2] = "Para mover la Bola,#";
//     lang_text_tutorial[3] = " en cualquier sitio.#Hala y Suelta";
// }
//
//
function gml_Script_scr_language_load(_inst, _other) {
    if ((global.gmlgame_lang == 0)) {
        {
            if (!(_inst.gmllang_text_menu_main instanceof Array)) {
                _inst.gmllang_text_menu_main = [];
                _inst.gmllang_text_menu_main.__yy_owner = 3170742241;
            } else if (_inst.gmllang_text_menu_main.__yy_owner !== 3170742241) {
                _inst.gmllang_text_menu_main = _inst.gmllang_text_menu_main.slice(0);
                _inst.gmllang_text_menu_main.__yy_owner = 3170742241;
            }
            _inst.gmllang_text_menu_main[0] = "PLAY GAME";
            _inst.gmllang_text_menu_main[1] = "OPTIONS";
            _inst.gmllang_text_menu_main[2] = "EXIT";
            _inst.gmllang_text_menu_main[3] = "CREDITS";
            if (!(_inst.gmllang_text_options instanceof Array)) {
                _inst.gmllang_text_options = [];
                _inst.gmllang_text_options.__yy_owner = 2301361831;
            } else if (_inst.gmllang_text_options.__yy_owner !== 2301361831) {
                _inst.gmllang_text_options = _inst.gmllang_text_options.slice(0);
                _inst.gmllang_text_options.__yy_owner = 2301361831;
            }
            _inst.gmllang_text_options[0] = "MUSIC";
            _inst.gmllang_text_options[1] = "SOUND";
            _inst.gmllang_text_options[2] = "LANGUAGE";
            _inst.gmllang_text_options[3] = "ENGLISH";
            _inst.gmllang_text_options[4] = "ESPANOL";
            _inst.gmllang_text_options[5] = "OPTIONS";
            if (!(_inst.gmllang_text_modes instanceof Array)) {
                _inst.gmllang_text_modes = [];
                _inst.gmllang_text_modes.__yy_owner = 2094744668;
            } else if (_inst.gmllang_text_modes.__yy_owner !== 2094744668) {
                _inst.gmllang_text_modes = _inst.gmllang_text_modes.slice(0);
                _inst.gmllang_text_modes.__yy_owner = 2094744668;
            }
            _inst.gmllang_text_modes[0] = "GAME MODES";
            _inst.gmllang_text_modes[1] = "NEON COURSES";
            _inst.gmllang_text_modes[2] = "HOLE-IN-ONE";
            _inst.gmllang_text_modes[3] = "JUST IN TIME";
            _inst.gmllang_text_modes[4] = "DONT RUN OUT";
            _inst.gmllang_text_modes[5] = "PRACTICE";
            _inst.gmllang_text_modes[6] = "SELECT A COURSE";
            _inst.gmllang_text_modes[7] = "START";
            _inst.gmllang_text_modes[8] = "CONTINUE";
            _inst.gmllang_text_modes[9] = "RESET";
            _inst.gmllang_text_modes[10] = "ONE SHOT PER LEVEL.#HOW MANY LEVELS#CAN YOU CLEAR?";
            _inst.gmllang_text_modes[11] = "TIME IS RUNNING OUT.#CLEAR AS MANY LEVELS#AS YOU CAN.";
            _inst.gmllang_text_modes[12] = "BALLS ARE LIMITED. HOW FAR#CAN YOU GO?";
            _inst.gmllang_text_modes[13] = "THERE ARE NO RULES.#YOU CAN PRACTICE ALL#YOUR SHOTS.";
            if (!(_inst.gmllang_text_progress instanceof Array)) {
                _inst.gmllang_text_progress = [];
                _inst.gmllang_text_progress.__yy_owner = 3637012058;
            } else if (_inst.gmllang_text_progress.__yy_owner !== 3637012058) {
                _inst.gmllang_text_progress = _inst.gmllang_text_progress.slice(0);
                _inst.gmllang_text_progress.__yy_owner = 3637012058;
            }
            _inst.gmllang_text_progress[0] = "PROGRESS";
            _inst.gmllang_text_progress[1] = " of ";
            _inst.gmllang_text_progress[2] = "HITS:";
            _inst.gmllang_text_progress[3] = "BEST:";
            _inst.gmllang_text_progress[4] = "COMPLETE ";
            _inst.gmllang_text_progress[5] = " HOLES#IN THE LEAST#AMOUNT OF HITS";
            _inst.gmllang_text_progress[6] = "BEST SCORE: ";
            _inst.gmllang_text_progress[7] = " holes";
            if (!(_inst.gmllang_text_reset instanceof Array)) {
                _inst.gmllang_text_reset = [];
                _inst.gmllang_text_reset.__yy_owner = 1781278229;
            } else if (_inst.gmllang_text_reset.__yy_owner !== 1781278229) {
                _inst.gmllang_text_reset = _inst.gmllang_text_reset.slice(0);
                _inst.gmllang_text_reset.__yy_owner = 1781278229;
            }
            _inst.gmllang_text_reset[0] = "LEVEL ";
            _inst.gmllang_text_reset[1] = "NO SCORE";
            _inst.gmllang_text_reset[2] = "SCORE:";
            _inst.gmllang_text_reset[3] = "WARNING: ALL CHECKPOINTS AFTER#THE SELECTED ONE WILL BE DELETED";
            _inst.gmllang_text_reset[4] = "THIS WILL RESET YOUR#PROGRESS AND SCORE TO CERO##ARE YOU SURE?";
            _inst.gmllang_text_reset[5] = "GO BACK";
            _inst.gmllang_text_reset[6] = "RESET";
            _inst.gmllang_text_reset[7] = "SELECT A CHECKPOINT#TO RESET YOUR GAME";
            _inst.gmllang_text_reset[8] = "GO BACK";
            if (!(_inst.gmllang_text_side instanceof Array)) {
                _inst.gmllang_text_side = [];
                _inst.gmllang_text_side.__yy_owner = 2034702195;
            } else if (_inst.gmllang_text_side.__yy_owner !== 2034702195) {
                _inst.gmllang_text_side = _inst.gmllang_text_side.slice(0);
                _inst.gmllang_text_side.__yy_owner = 2034702195;
            }
            _inst.gmllang_text_side[0] = "COURSE ";
            _inst.gmllang_text_side[1] = "HOLE:";
            _inst.gmllang_text_side[2] = "HITS:";
            _inst.gmllang_text_side[3] = "BEST:";
            _inst.gmllang_text_side[4] = "BEST SCORE:";
            _inst.gmllang_text_side[5] = "MAIN MENU";
            _inst.gmllang_text_side[6] = "RESUME";
            if (!(_inst.gmllang_text_gover instanceof Array)) {
                _inst.gmllang_text_gover = [];
                _inst.gmllang_text_gover.__yy_owner = 1023166020;
            } else if (_inst.gmllang_text_gover.__yy_owner !== 1023166020) {
                _inst.gmllang_text_gover = _inst.gmllang_text_gover.slice(0);
                _inst.gmllang_text_gover.__yy_owner = 1023166020;
            }
            _inst.gmllang_text_gover[0] = "COURSE COMPLETE";
            _inst.gmllang_text_gover[1] = "Neon Course ";
            _inst.gmllang_text_gover[2] = "New Record!:";
            _inst.gmllang_text_gover[3] = "Score:";
            _inst.gmllang_text_gover[4] = "Best Score:";
            _inst.gmllang_text_gover[5] = "GAME OVER";
            _inst.gmllang_text_gover[6] = "Hole in One";
            _inst.gmllang_text_gover[7] = "Top Score:";
            _inst.gmllang_text_gover[8] = "Just in Time";
            _inst.gmllang_text_gover[9] = "Don't Run Out";
            if (!(_inst.gmllang_text_course instanceof Array)) {
                _inst.gmllang_text_course = [];
                _inst.gmllang_text_course.__yy_owner = 952542304;
            } else if (_inst.gmllang_text_course.__yy_owner !== 952542304) {
                _inst.gmllang_text_course = _inst.gmllang_text_course.slice(0);
                _inst.gmllang_text_course.__yy_owner = 952542304;
            }
            _inst.gmllang_text_course[0] = " BALLS";
            _inst.gmllang_text_course[1] = " seconds";
            if (!(_inst.gmllang_text_tutorial instanceof Array)) {
                _inst.gmllang_text_tutorial = [];
                _inst.gmllang_text_tutorial.__yy_owner = 1205983466;
            } else if (_inst.gmllang_text_tutorial.__yy_owner !== 1205983466) {
                _inst.gmllang_text_tutorial = _inst.gmllang_text_tutorial.slice(0);
                _inst.gmllang_text_tutorial.__yy_owner = 1205983466;
            }
            _inst.gmllang_text_tutorial[0] = "Click";
            _inst.gmllang_text_tutorial[1] = "Tap";
            _inst.gmllang_text_tutorial[2] = "To Hit the Ball#You can ";
            _inst.gmllang_text_tutorial[3] = " Anywhere.#Drag and Release";
        };
    } else {
        if ((global.gmlgame_lang == 1)) {
            {
                if (!(_inst.gmllang_text_menu_main instanceof Array)) {
                    _inst.gmllang_text_menu_main = [];
                    _inst.gmllang_text_menu_main.__yy_owner = 3170742241;
                } else if (_inst.gmllang_text_menu_main.__yy_owner !== 3170742241) {
                    _inst.gmllang_text_menu_main = _inst.gmllang_text_menu_main.slice(0);
                    _inst.gmllang_text_menu_main.__yy_owner = 3170742241;
                }
                _inst.gmllang_text_menu_main[0] = "JUGAR";
                _inst.gmllang_text_menu_main[1] = "OPCIONES";
                _inst.gmllang_text_menu_main[2] = "SALIR";
                _inst.gmllang_text_menu_main[3] = "CREDITOS";
                if (!(_inst.gmllang_text_options instanceof Array)) {
                    _inst.gmllang_text_options = [];
                    _inst.gmllang_text_options.__yy_owner = 2301361831;
                } else if (_inst.gmllang_text_options.__yy_owner !== 2301361831) {
                    _inst.gmllang_text_options = _inst.gmllang_text_options.slice(0);
                    _inst.gmllang_text_options.__yy_owner = 2301361831;
                }
                _inst.gmllang_text_options[0] = "MUSICA";
                _inst.gmllang_text_options[1] = "SONIDO";
                _inst.gmllang_text_options[2] = "LENGUAJE";
                _inst.gmllang_text_options[3] = "ENGLISH";
                _inst.gmllang_text_options[4] = "ESPANOL";
                _inst.gmllang_text_options[5] = "OPCIONES";
                if (!(_inst.gmllang_text_modes instanceof Array)) {
                    _inst.gmllang_text_modes = [];
                    _inst.gmllang_text_modes.__yy_owner = 2094744668;
                } else if (_inst.gmllang_text_modes.__yy_owner !== 2094744668) {
                    _inst.gmllang_text_modes = _inst.gmllang_text_modes.slice(0);
                    _inst.gmllang_text_modes.__yy_owner = 2094744668;
                }
                _inst.gmllang_text_modes[0] = "MODOS DE JUEGO";
                _inst.gmllang_text_modes[1] = "CAMPOS NEON";
                _inst.gmllang_text_modes[2] = "HOYO-EN-UNO";
                _inst.gmllang_text_modes[3] = "JUSTO A TIEMPO";
                _inst.gmllang_text_modes[4] = "BOLA PERDIDA";
                _inst.gmllang_text_modes[5] = "PRACTICA";
                _inst.gmllang_text_modes[6] = "SELECCIONE UN CAMPO";
                _inst.gmllang_text_modes[7] = "COMENZAR";
                _inst.gmllang_text_modes[8] = "CONTINUAR";
                _inst.gmllang_text_modes[9] = "REINICIAR";
                _inst.gmllang_text_modes[10] = "UN TIRO POR NIVEL.#CUANTOS NIVELES#PUEDES COMPLETAR?";
                _inst.gmllang_text_modes[11] = "EL TIEMPO SE TERMINA.#COMPLETA TANTOS NIVELES#COMO PUEDAS.";
                _inst.gmllang_text_modes[12] = "BOLAS LIMITADAS. CUAN#LEJOS PUEDES LLEGAR?";
                _inst.gmllang_text_modes[13] = "NO HAY REGLAS.#PUEDES PRATICAR#TODOS TUS TIROS.";
                if (!(_inst.gmllang_text_progress instanceof Array)) {
                    _inst.gmllang_text_progress = [];
                    _inst.gmllang_text_progress.__yy_owner = 3637012058;
                } else if (_inst.gmllang_text_progress.__yy_owner !== 3637012058) {
                    _inst.gmllang_text_progress = _inst.gmllang_text_progress.slice(0);
                    _inst.gmllang_text_progress.__yy_owner = 3637012058;
                }
                _inst.gmllang_text_progress[0] = "PROGRESO";
                _inst.gmllang_text_progress[1] = " de ";
                _inst.gmllang_text_progress[2] = "TIROS:";
                _inst.gmllang_text_progress[3] = "MEJOR:";
                _inst.gmllang_text_progress[4] = "COMPLETAR ";
                _inst.gmllang_text_progress[5] = " HOYOS#EN LA MENOR#CANTIDAD DE TIROS";
                _inst.gmllang_text_progress[6] = "MEJOR PUNTUACION: ";
                _inst.gmllang_text_progress[7] = " hoyos";
                if (!(_inst.gmllang_text_reset instanceof Array)) {
                    _inst.gmllang_text_reset = [];
                    _inst.gmllang_text_reset.__yy_owner = 1781278229;
                } else if (_inst.gmllang_text_reset.__yy_owner !== 1781278229) {
                    _inst.gmllang_text_reset = _inst.gmllang_text_reset.slice(0);
                    _inst.gmllang_text_reset.__yy_owner = 1781278229;
                }
                _inst.gmllang_text_reset[0] = "NIVEL ";
                _inst.gmllang_text_reset[1] = "SIN TIROS";
                _inst.gmllang_text_reset[2] = "TIROS:";
                _inst.gmllang_text_reset[3] = "AVISO: TODOS LOS MARCADORES LUEGO#DEL SELECCIONADO SERAN BORRADOS";
                _inst.gmllang_text_reset[4] = "ESTA ACCION BORRARA TODO#SU PROGRESO Y PUNTUACIONES#DESEA CONTINUAR?";
                _inst.gmllang_text_reset[5] = "ATRAS";
                _inst.gmllang_text_reset[6] = "REINICIAR";
                _inst.gmllang_text_reset[7] = "SELECCIONE UN MARCADOR#PARA REINICIAR SU JUEGO";
                _inst.gmllang_text_reset[8] = "ATRAS";
                if (!(_inst.gmllang_text_side instanceof Array)) {
                    _inst.gmllang_text_side = [];
                    _inst.gmllang_text_side.__yy_owner = 2034702195;
                } else if (_inst.gmllang_text_side.__yy_owner !== 2034702195) {
                    _inst.gmllang_text_side = _inst.gmllang_text_side.slice(0);
                    _inst.gmllang_text_side.__yy_owner = 2034702195;
                }
                _inst.gmllang_text_side[0] = "CAMPO ";
                _inst.gmllang_text_side[1] = "HOYO:";
                _inst.gmllang_text_side[2] = "TIROS:";
                _inst.gmllang_text_side[3] = "MEJOR:";
                _inst.gmllang_text_side[4] = "MEJOR:";
                _inst.gmllang_text_side[5] = "MENU PRINCIPAL";
                _inst.gmllang_text_side[6] = "CONTINUAR";
                if (!(_inst.gmllang_text_gover instanceof Array)) {
                    _inst.gmllang_text_gover = [];
                    _inst.gmllang_text_gover.__yy_owner = 1023166020;
                } else if (_inst.gmllang_text_gover.__yy_owner !== 1023166020) {
                    _inst.gmllang_text_gover = _inst.gmllang_text_gover.slice(0);
                    _inst.gmllang_text_gover.__yy_owner = 1023166020;
                }
                _inst.gmllang_text_gover[0] = "CAMPO COMPLETADO";
                _inst.gmllang_text_gover[1] = "Campos Neon ";
                _inst.gmllang_text_gover[2] = "Nuevo Record!:";
                _inst.gmllang_text_gover[3] = "Puntos:";
                _inst.gmllang_text_gover[4] = "Mejor Puntuacion:";
                _inst.gmllang_text_gover[5] = "FIN DEL JUEGO";
                _inst.gmllang_text_gover[6] = "Hoyo en Uno";
                _inst.gmllang_text_gover[7] = "Mejor Puntuacion:";
                _inst.gmllang_text_gover[8] = "Justo a Tiempo";
                _inst.gmllang_text_gover[9] = "Bola Perdida";
                if (!(_inst.gmllang_text_course instanceof Array)) {
                    _inst.gmllang_text_course = [];
                    _inst.gmllang_text_course.__yy_owner = 952542304;
                } else if (_inst.gmllang_text_course.__yy_owner !== 952542304) {
                    _inst.gmllang_text_course = _inst.gmllang_text_course.slice(0);
                    _inst.gmllang_text_course.__yy_owner = 952542304;
                }
                _inst.gmllang_text_course[0] = " BOLAS";
                _inst.gmllang_text_course[1] = " segundos";
                if (!(_inst.gmllang_text_tutorial instanceof Array)) {
                    _inst.gmllang_text_tutorial = [];
                    _inst.gmllang_text_tutorial.__yy_owner = 1205983466;
                } else if (_inst.gmllang_text_tutorial.__yy_owner !== 1205983466) {
                    _inst.gmllang_text_tutorial = _inst.gmllang_text_tutorial.slice(0);
                    _inst.gmllang_text_tutorial.__yy_owner = 1205983466;
                }
                _inst.gmllang_text_tutorial[0] = "Haz un Click";
                _inst.gmllang_text_tutorial[1] = "Toca la Pantalla";
                _inst.gmllang_text_tutorial[2] = "Para mover la Bola,#";
                _inst.gmllang_text_tutorial[3] = " en cualquier sitio.#Hala y Suelta";
            };
        };
    };
}

// #####################################################################################################
// /// scr_level_create_v1()
//
//     seed_number += 1;
//
//     random_set_seed(seed_number);
//
//     surface_free(surf_floor);
//     surface_free(surf_floor_glow1);
//     surface_free(surf_floor_glow2);
//
//     scr_floor_init(0);
//
//     // Floor
//
//         scr_floor_surface_v1(line_count);
//
//
//     // Floor Glow
//
//         scr_floor_glow();
//
//     /*
//     // Level Create
//
//         seed_number += 1;
//
//         random_set_seed(seed_number);
//
//         surface_free(surf_floor);
//         surface_free(surf_floor_glow1);
//         surface_free(surf_floor_glow2);
//
//         scr_floor_init();
//
//         // Floor
//
//             scr_floor_surface_v1(line_count_anim);
//
//
//         // Floor Glow
//
//             scr_floor_glow();
//
//
//         alarm[0] = floor_contruct_speed;
//     */
//
//
function gml_Script_scr_level_create_v1(_inst, _other) {
    _inst.gmlseed_number += 1;
    random_set_seed(_inst.gmlseed_number);
    surface_free(_inst.gmlsurf_floor);
    surface_free(_inst.gmlsurf_floor_glow1);
    surface_free(_inst.gmlsurf_floor_glow2);
    gml_Script_scr_floor_init(_inst, _other, 0);
    gml_Script_scr_floor_surface_v1(_inst, _other, _inst.gmlline_count);
    gml_Script_scr_floor_glow(_inst, _other);
}

// #####################################################################################################
// /// scr_level_create_v2()
//
//     seed_number += 1;
//
//     random_set_seed(seed_number);
//
//     //- surface_free(surf_floor);
//     //- surface_free(surf_floor_glow1);
//     //- surface_free(surf_floor_glow2);
//
//     scr_floor_init(0);
//
//     alarm[1] = floor_contruct_speed; // level contruction animation
//
//     // Floor
//
//         //- scr_floor_surface_v1(line_count);
//
//
//     // Floor Glow
//
//         //- scr_floor_glow();
//
//     /*
//     // Level Create
//
//         seed_number += 1;
//
//         random_set_seed(seed_number);
//
//         surface_free(surf_floor);
//         surface_free(surf_floor_glow1);
//         surface_free(surf_floor_glow2);
//
//         scr_floor_init();
//
//         // Floor
//
//             scr_floor_surface_v1(line_count_anim);
//
//
//         // Floor Glow
//
//             scr_floor_glow();
//
//
//         alarm[0] = floor_contruct_speed;
//     */
//
//
function gml_Script_scr_level_create_v2(_inst, _other) {
    _inst.gmlseed_number += 1;
    random_set_seed(_inst.gmlseed_number);
    gml_Script_scr_floor_init(_inst, _other, 0);
    if (!(_inst.alarm instanceof Array)) {
        _inst.alarm = [];
        _inst.alarm.__yy_owner = 1584050178;
    } else if (_inst.alarm.__yy_owner !== 1584050178) {
        _inst.alarm = _inst.alarm.slice(0);
        _inst.alarm.__yy_owner = 1584050178;
    }
    _inst.alarm[1] = _inst.gmlfloor_contruct_speed;
}

// #####################################################################################################
// /// scr_level_create_v3()
//
//     // game_levels_curr += 1;
//
//     // seed_number = game_levels_curr;
//
//     hole_number = game_levels_curr;
//
//     circle_fade_draw = false;
//
//     // Surface: Floor
//
//         surface_free(surf_floor);
//
//         surf_floor = surface_create(view_wview[0], view_hview[0]);
//
//         surface_set_target(surf_floor);
//
//             draw_clear_alpha(c_white, 0);
//
//             draw_set_alpha(1);
//
//         surface_reset_target();
//
//
//     // Surface: Hole
//
//         surface_free(surf_hole_arrow);
//
//
//     surf_floor_step = 0;
//
//     // if ( floor_mode == 2 ){ random_set_seed(seed_number); } // 2:level read;
//
//     scr_floor_init(obj_ctrl_board.floor_mode);
//
//     scr_stars_init();
//
//     alarm[1] = floor_contruct_speed; // start construction animation
//
//
//
function gml_Script_scr_level_create_v4(_inst, _other) {
    _inst.gmlhole_number = _inst.gmlgame_levels_curr;
    _inst.gmlcircle_fade_draw = 0 ? 1 : 0;
    surface_free(_inst.gmlsurf_floor);
    _inst.gmlsurf_floor = surface_create(g_pBuiltIn.view_wview[0], g_pBuiltIn.view_hview[0]);
    surface_set_target(_inst.gmlsurf_floor);
    draw_clear_alpha(16777215, 0);
    draw_set_alpha(1);
    surface_reset_target();
    surface_free(_inst.gmlsurf_hole_arrow);
    _inst.gmlsurf_floor_step = 0;
    gml_Script_scr_floor_init(_inst, _other, yyInst(2).gmlfloor_mode);
    gml_Script_scr_stars_init(_inst, _other);
    if (!(_inst.alarm instanceof Array)) {
        _inst.alarm = [];
        _inst.alarm.__yy_owner = 1584050178;
    } else if (_inst.alarm.__yy_owner !== 1584050178) {
        _inst.alarm = _inst.alarm.slice(0);
        _inst.alarm.__yy_owner = 1584050178;
    }
    _inst.alarm[1] = _inst.gmlfloor_contruct_speed;
}

// #####################################################################################################
// /// scr_screen_init(first_run);
//
// /*
//     // TERMS //
//
//     display_w = tamaño maximo que puede ser el juego ( PC: monitor, html5: browser window )
//
//     window_w = tamaño de la ventana del juego ( window_w = gui_w = port_w = canvas_w )
//
//     view_w = tamaño del espacio que se dibuja del juego
//
//     board_w = tamaño del juego donde se calcula la fisica
// */
//
// // Screen Init
//
// var first_run = argument0;
//
// if ( os_browser == browser_not_a_browser ){
//
//     if ( os_type == os_windows ){
//
//         // browser
//         var display_w = display_get_width();
//         var display_h = display_get_height();
//
//         // window
//         var win_w = 0; // also: gui_w
//         var win_h = 0; // also: gui_h
//
//         // view
//         var view_w = 0;
//         var view_h = 0;
//
//         // room ( board ): 480 x 320
//         var board_w = 480;
//         var board_h = 320;
//
//         // window base: 960 x 640
//         var win_w_base = 480; // 960;
//         var win_h_base = 320; // 640;
//
//         if ( first_run ){}
//
//         /* if ( first_run ){
//
//             // room ( board ): 480 x 320
//             var board_w = 480;
//             var board_h = 320;
//
//             // window base: 960 x 640
//             var win_w_base = 960;
//             var win_h_base = 640;
//
//             /*
//             // room(board): 480 x 320
//             // global.board_w = 480;
//             // global.board_h = 320;
//
//             // window: 960 x 640
//             // global.win_w_base = 960; // 960;
//             // global.win_h_base = 640; // 640;
//         }*/
//
//         if ( window_get_fullscreen() ){
//
//             /* var display_ratio = ( board_w / board_h );
//
//             win_h = display_get_height();
//             win_w = floor( win_h * display_ratio ); */
//
//             win_w = display_get_width();
//             win_h = display_get_height();
//         }
//         else {
//
//             win_w = win_w_base;
//             win_h = win_h_base;
//         }
//
//         var display_ratio = ( win_w / win_h ); // 0.5625 (1080p)
//
//         view_w = win_w;
//         view_h = win_h;
//
//         room_set_view(room_first_load, 0, 1, 0, 0,view_w, view_h, 0, 0, win_w, win_h, 0,0, -1, -1, -1);
//
//         room_set_view(room_game, 0, 1, 0, 0,view_w, view_h, 0, 0, win_w, win_h, 0,0, -1, -1, -1);
//
//         display_set_gui_size(win_w, win_h);
//
//         window_set_size(win_w, win_h);
//
//         surface_resize(application_surface, win_w, win_h);
//
//         // Globals
//
//             global.board_w = board_w;
//             global.board_h = board_h;
//
//             global.view_w = view_w;
//             global.view_h = view_h;
//
//             global.win_w = win_w; // also: gui_w
//             global.win_h = win_h; // also: gui_h
//
//             global.display_ratio = ( view_w / board_w );
//     }
// }
// else {
//
//     if ( first_run ){
//
//         instance_create(0,0,obj_ctrl_html5);
//     }
// }
//
// /*
// show_debug_message("1");
// show_debug_message("view_wview[0]: " + string(view_wview[0]));
// show_debug_message("view_hview[0]: " + string(view_hview[0]));
// show_debug_message("view_wport[0]: " + string(view_wport[0]));
// show_debug_message("view_hport[0]: " + string(view_hport[0]));
// show_debug_message("win_w: " + string(window_get_width()));
// show_debug_message("win_h: " + string(window_get_height()));
// */
//
//
function gml_Script_scr_screen_init_v1(_inst, _other, argument0) {
    var gmlfirst_run = argument0;
    if ((g_pBuiltIn.get_os_browser() == (-1))) {
        {
            if ((g_pBuiltIn.get_os_type() == 0)) {
                {
                    var gmldisplay_w = display_get_width();
                    var gmldisplay_h = display_get_height();
                    var gmlwin_w = 0;
                    var gmlwin_h = 0;
                    var gmlview_w = 0;
                    var gmlview_h = 0;
                    var gmlboard_w = 480;
                    var gmlboard_h = 320;
                    var gmlwin_w_base = 480;
                    var gmlwin_h_base = 320;
                    if (gmlfirst_run > 0.5) {
                        {};
                    };
                    if (window_get_fullscreen() > 0.5) {
                        {
                            gmlwin_w = display_get_width();
                            gmlwin_h = display_get_height();
                        };
                    } else {
                        {
                            gmlwin_w = gmlwin_w_base;
                            gmlwin_h = gmlwin_h_base;
                        };
                    };
                    var gmldisplay_ratio = (gmlwin_w / gmlwin_h);
                    gmlview_w = gmlwin_w;
                    gmlview_h = gmlwin_h;
                    room_set_view(0, 0, 1, 0, 0, gmlview_w, gmlview_h, 0, 0, gmlwin_w, gmlwin_h, 0, 0, (-1), (-1), (-1));
                    room_set_view(3, 0, 1, 0, 0, gmlview_w, gmlview_h, 0, 0, gmlwin_w, gmlwin_h, 0, 0, (-1), (-1), (-1));
                    display_set_gui_size(gmlwin_w, gmlwin_h);
                    window_set_size(gmlwin_w, gmlwin_h);
                    surface_resize(g_pBuiltIn.application_surface, gmlwin_w, gmlwin_h);
                    global.gmlboard_w = gmlboard_w;
                    global.gmlboard_h = gmlboard_h;
                    global.gmlview_w = gmlview_w;
                    global.gmlview_h = gmlview_h;
                    global.gmlwin_w = gmlwin_w;
                    global.gmlwin_h = gmlwin_h;
                    global.gmldisplay_ratio = (gmlview_w / gmlboard_w);
                };
            };
        };
    } else {
        {
            if (gmlfirst_run > 0.5) {
                {
                    instance_create(0, 0, 3);
                };
            };
        };
    };
}

// #####################################################################################################
// /// scr_screen_set(screen_type);
//
// screen_type = argument0;
//
// screen_title = "";
// screen_desc = "";
//
// btn_title = 0;
//
// // Button: Back
// btn_back_x1 = 10; // ( floor( world_width_draw / 2 ) - 481 ) + 10;
// btn_back_y1 = 10;// ( floor( world_height_draw / 2 ) - 271 ) + 10;
// btn_back_x2 = btn_back_x1 + 100;
// btn_back_y2 = btn_back_y1 + 100;
//
// if ( screen_type == 1 ){
//
//     var btn_id = 0;
//
//     /*
//     btn_title[btn_id] = lang_text_menu_main[3]; // "CREDITS"
//     btn_w[btn_id] = 200;
//     btn_h[btn_id] = 50;
//     btn_x[btn_id] = ( world_width_draw / 2 );
//     btn_y[btn_id] = (( world_height_draw / 2 ) + ( 14 * draw_h_ratio ));
//     btn_action[btn_id] = 28;
//     btn_active[btn_id] = false;
//     btn_align[btn_id] = fa_center;
//
//     btn_id += 1;
//
//     btn_title[btn_id] = lang_text_menu_main[1]; // "OPTIONS"
//     btn_w[btn_id] = 200;
//     btn_h[btn_id] = 50;
//     btn_x[btn_id] = ( world_width_draw / 2 );
//     btn_y[btn_id] = btn_y[btn_id-1] + btn_h[btn_id] + ( 10 * draw_h_ratio );
//     btn_action[btn_id] = 2;
//     btn_active[btn_id] = false;
//     btn_align[btn_id] = fa_center;
//
//     btn_id += 1;
//
//     btn_title[btn_id] = lang_text_menu_main[0]; // "PLAY GAME"
//     btn_w[btn_id] = 200;
//     btn_h[btn_id] = 50;
//     btn_x[btn_id] = ( world_width_draw / 2 );
//     btn_y[btn_id] = btn_y[btn_id-1] + btn_h[btn_id] + ( 10 * draw_h_ratio );
//     btn_action[btn_id] = 1;
//     btn_active[btn_id] = false;
//     btn_align[btn_id] = fa_center;
//
//     btn_id += 1;
//     */
//
//     btn_title[btn_id] = ""; // "PLAY GAME" -- lang_text_menu_main[0]
//     btn_w[btn_id] = 147;
//     btn_h[btn_id] = 147;
//     btn_x[btn_id] = ( world_width_draw / 2 );
//     btn_y[btn_id] = (( world_height_draw / 2 ) + ( 10 * draw_h_ratio ));
//     btn_action[btn_id] = 1;
//     btn_active[btn_id] = false;
//     btn_align[btn_id] = fa_center;
//
//     btn_id += 1;
//
//     btn_title[btn_id] = ""; // "OPTIONS" -- lang_text_menu_main[1]
//     btn_w[btn_id] = 101;
//     btn_h[btn_id] = 101;
//     btn_x[btn_id] = ( world_width_draw / 2 ) + 150;
//     btn_y[btn_id] = btn_y[btn_id-1] + 26;
//     btn_action[btn_id] = 2;
//     btn_active[btn_id] = false;
//     btn_align[btn_id] = fa_center;
//
//     btn_id += 1;
//
//     btn_title[btn_id] = ""; // "CREDITS" -- lang_text_menu_main[3]
//     btn_w[btn_id] = 101;
//     btn_h[btn_id] = 101;
//     btn_x[btn_id] = ( world_width_draw / 2 ) - 150;
//     btn_y[btn_id] = btn_y[btn_id-1];
//     btn_action[btn_id] = 27;
//     btn_active[btn_id] = false;
//     btn_align[btn_id] = fa_center;
//
//     btn_id += 1;
//
//     if ( os_browser == browser_not_a_browser ){
//
//         btn_title[btn_id] = lang_text_menu_main[2]; // "EXIT GAME"
//         btn_w[btn_id] = 150;
//         btn_h[btn_id] = 50;
//         btn_x[btn_id] = ( world_width_draw - 100 );
//         btn_y[btn_id] = (( world_height_draw ) - 100 ); // ( world_height_draw / 2 ) + 150;
//         btn_action[btn_id] = 3;
//         btn_active[btn_id] = false;
//         btn_align[btn_id] = fa_center;
//     }
// }
// else if (( screen_type == 2 ) or ( screen_type == 3 ) or ( screen_type == 4 ) or ( screen_type == 5 ) or ( screen_type == 6 ) or ( screen_type == 7 )){
//
//     screen_title = lang_text_modes[0]; // "GAME MODES"
//     screen_desc_align = fa_left;
//
//     btn_title[0] = scr_game_mode_name(1); // "NEON COURSES";
//     btn_w[0] = 270;
//     btn_h[0] = 50;
//     btn_x[0] = ( world_width_draw / 2 ) - 420;
//     btn_y[0] = ( world_height_draw / 2 ) - ( btn_h[0] / 2 ) - (( btn_h[0] + 6 ) * 2 );
//     btn_action[0] = 4;
//     btn_active[0] = false;
//     btn_align[0] = fa_left;
//
//     btn_title[1] = scr_game_mode_name(2); // "HOLE-IN-ONE";
//     btn_w[1] = 270;
//     btn_h[1] = 50;
//     btn_x[1] = ( world_width_draw / 2 ) - 420;
//     btn_y[1] = ( world_height_draw / 2 ) - ( btn_h[1] / 2 ) - (( btn_h[1] + 6 ) * 1 );
//     btn_action[1] = 5;
//     btn_active[1] = false;
//     btn_align[1] = fa_left;
//
//     btn_title[2] = scr_game_mode_name(3); // "JUST IN TIME";
//     btn_w[2] = 270;
//     btn_h[2] = 50;
//     btn_x[2] = ( world_width_draw / 2 ) - 420;
//     btn_y[2] = ( world_height_draw / 2 ) - ( btn_h[2] / 2 );
//     btn_action[2] = 7;
//     btn_active[2] = false;
//     btn_align[2] = fa_left;
//
//     btn_title[3] = scr_game_mode_name(4); // "DONT RUN OUT";
//     btn_w[3] = 270;
//     btn_h[3] = 50;
//     btn_x[3] = ( world_width_draw / 2 ) - 420;
//     btn_y[3] = ( world_height_draw / 2 ) - ( btn_h[3] / 2 ) + (( btn_h[3] + 6 ) * 1 );
//     btn_action[3] = 8;
//     btn_active[3] = false;
//     btn_align[3] = fa_left;
//
//     btn_title[4] = scr_game_mode_name(5); // "PRACTICE";
//     btn_w[4] = 180;
//     btn_h[4] = 50;
//     btn_x[4] = ( world_width_draw / 2 ) - 420;
//     btn_y[4] = ( world_height_draw / 2 ) - ( btn_h[4] / 2 ) + (( btn_h[4] + 6 ) * 2 );
//     btn_action[4] = 9;
//     btn_active[4] = false;
//     btn_align[4] = fa_left;
//
//     desc_x = (( world_width_draw / 2 ) - 55 );
//     desc_y = (( world_height_draw / 2 ) - 100 );
//
//     btn_w[5] = 100; // 164;
//     btn_h[5] = 100; // 60;
//     btn_x[5] = (( world_width_draw / 2 ) + 250 );
//     btn_y[5] = (( world_height_draw / 2 ) + 20 );
//     btn_action[5] = 6;
//     btn_active[5] = false;
//     btn_align[5] = fa_center;
//
//     if ( screen_type == 3 ){
//
//         // screen_desc = "Complete 300 tailored levels. Get the lowest score possible.";
//
//         // screen_desc = "Play a selection of 300 levels. Get the lowest score possible.";
//
//         screen_desc = lang_text_modes[6]; // "SELECT A COURSE";
//         screen_desc_align = fa_center;
//
//         desc_x = (( world_width_draw / 2 ) + 178 );
//         desc_y -= 60;
//
//
//         // Screen Items
//
//             var screen_item_x = desc_x;
//             var screen_item_y = desc_y;
//
//             screen_item_y += 83;
//
//             btn_course_w = 104;
//             btn_course_h = 67;
//
//             btn_course_x[1] = ( screen_item_x - 177 );
//             btn_course_y[1] = screen_item_y;
//             if ( global.game_submode == 1 ){ btn_course_active[1] = 1; btn_course_color[1] = c_aqua; } else { btn_course_active[1] = 0; btn_course_color[1] = c_lime; }
//
//             btn_course_x[2] = ( screen_item_x - 59 );
//             btn_course_y[2] = screen_item_y;
//             if ( global.game_submode == 2 ){ btn_course_active[2] = 1; btn_course_color[2] = c_aqua; } else { btn_course_active[2] = 0; btn_course_color[2] = c_lime; }
//
//             btn_course_x[3] = ( screen_item_x + 59 );
//             btn_course_y[3] = screen_item_y;
//             if ( global.game_submode == 3 ){ btn_course_active[3] = 1; btn_course_color[3] = c_aqua; } else { btn_course_active[3] = 0; btn_course_color[3] = c_lime; }
//
//             btn_course_x[4] = ( screen_item_x + 177 );
//             btn_course_y[4] = screen_item_y;
//             if ( global.game_submode == 4 ){ btn_course_active[4] = 1; btn_course_color[4] = c_aqua; } else { btn_course_active[4] = 0; btn_course_color[4] = c_lime; }
//
//
//         // Buttons
//
//             if (( game_levels_curr == 1 ) and ( game_mode_1_best_score == 0 )){
//
//                 btn_title[5] = ""; // "START"; lang_text_modes[7];
//                 btn_x[5] = desc_x;
//                 btn_y[5] = (( world_height_draw / 2 ) + 120 );
//             }
//             else {
//
//                 // desc_x -= 15
//
//                 btn_title[5] = ""; // "CONTINUE"; lang_text_modes[8];
//                 btn_x[5] = (( world_width_draw / 2 ) + 362 );
//                 btn_y[5] = (( world_height_draw / 2 ) + 150 );
//
//                 btn_title[6] = lang_text_modes[9]; // "RESET";
//                 btn_w[6] = 164;
//                 btn_h[6] = 60;
//                 btn_x[6] = (( world_width_draw / 2 ) - 2 );
//                 btn_y[6] = (( world_height_draw / 2 ) + 185 );
//                 btn_action[6] = 12;
//                 btn_active[6] = false;
//                 btn_align[6] = fa_center;
//
//                 if ( game_mode_1_best_score == 0 ){
//
//                     btn_y[5] -= 26;
//                     btn_y[6] -= 26;
//                 }
//             }
//
//             btn_active[0] = true; // button: side menu
//     }
//     else if ( screen_type == 4 ){
//
//         screen_desc = lang_text_modes[10]; // "ONE SHOT PER LEVEL.#HOW MANY LEVELS#CAN YOU CLEAR?";
//
//         if ( game_mode_2_holes_record != 0 ){ btn_y[5] += 80; }
//
//         btn_title[5] = ""; // "START"; lang_text_modes[7];
//
//         btn_active[1] = true;
//     }
//     else if ( screen_type == 5 ){
//
//         screen_desc = lang_text_modes[11] // "TIME IS RUNNING OUT.#CLEAR AS MANY LEVELS#AS YOU CAN.";
//
//         if ( game_mode_3_holes_record != 0 ){ btn_y[5] += 80; }
//
//         btn_title[5] = ""; // "START"; lang_text_modes[7];
//
//         btn_active[2] = true;
//     }
//     else if ( screen_type == 6 ){
//
//         screen_desc = lang_text_modes[12]; // "LIMITED LIVES. HAW FAR#CAN YOU GO?";
//
//         if ( game_mode_4_holes_record != 0 ){ btn_y[5] += 50; }
//
//         btn_title[5] = ""; // "START"; lang_text_modes[7];
//
//         btn_active[3] = true;
//     }
//     else if ( screen_type == 7 ){
//
//         screen_desc = lang_text_modes[13]; // "THERE ARE NO RULES.#YOU CAN PRACTICE ALL#YOUR SHOTS.";
//
//         btn_title[5] = ""; // "START"; lang_text_modes[7];
//
//         btn_active[4] = true;
//     }
//     else {
//
//         btn_active[0] = true; // Default Active Button
//     }
// }
// else if ( screen_type == 8 ){
//
//     screen_title = lang_text_options[5]; // "OPTIONS"
//     screen_desc_align = fa_left;
//
//     var btn_id = 0;
//
//     if ( multi_lang_support ){
//
//         btn_title[btn_id] = lang_text_options[3]; // "ENGLISH"
//         btn_w[btn_id] = 200;
//         btn_h[btn_id] = 50;
//         btn_x[btn_id] = (( world_width_draw / 2 ) - 350 + 50 );
//         btn_y[btn_id] = (( world_height_draw / 2 ) + 136 );
//         btn_action[btn_id] = 25;
//         btn_active[btn_id] = false;
//         btn_align[btn_id] = fa_left;
//
//         btn_id += 1;
//
//         btn_title[btn_id] = lang_text_options[4]; // "SPANISH"
//         btn_w[btn_id] = 200;
//         btn_h[btn_id] = 50;
//         btn_x[btn_id] = btn_x[btn_id-1] + 200 + 50;
//         btn_y[btn_id] = btn_y[btn_id-1];
//         btn_action[btn_id] = 26;
//         btn_active[btn_id] = false;
//         btn_align[btn_id] = fa_left;
//
//         btn_id += 1;
//     }
//
//     // Music
//
//         btn_title[btn_id] = "<";
//         btn_w[btn_id] = 50;
//         btn_h[btn_id] = 50;
//         btn_x[btn_id] = (( world_width_draw / 2 ) - 188 + 50 );
//         btn_y[btn_id] = (( world_height_draw / 2 ) - 160 );
//         btn_action[btn_id] = 21;
//         btn_active[btn_id] = false;
//         btn_align[btn_id] = fa_center;
//
//         btn_id += 1;
//
//         btn_title[btn_id] = ">";
//         btn_w[btn_id] = 50;
//         btn_h[btn_id] = 50;
//         btn_x[btn_id] = btn_x[btn_id-1] + 140;
//         btn_y[btn_id] = btn_y[btn_id-1];
//         btn_action[btn_id] = 22;
//         btn_active[btn_id] = false;
//         btn_align[btn_id] = fa_center;
//
//         btn_id += 1;
//
//     // Sound
//
//         btn_title[btn_id] = "<";
//         btn_w[btn_id] = 50;
//         btn_h[btn_id] = 50;
//         btn_x[btn_id] = (( world_width_draw / 2 ) - 188 + 50 );
//         btn_y[btn_id] = (( world_height_draw / 2 ) - 88 );
//         btn_action[btn_id] = 23;
//         btn_active[btn_id] = false;
//         btn_align[btn_id] = fa_center;
//
//         btn_id += 1;
//
//         btn_title[btn_id] = ">";
//         btn_w[btn_id] = 50;
//         btn_h[btn_id] = 50;
//         btn_x[btn_id] = btn_x[btn_id-1] + 140;
//         btn_y[btn_id] = btn_y[btn_id-1];
//         btn_action[btn_id] = 24;
//         btn_active[btn_id] = false;
//         btn_align[btn_id] = fa_center;
//
//         btn_id += 1;
//
//         btn_title[btn_id] = " ";
//         btn_w[btn_id] = 50;
//         btn_h[btn_id] = 50;
//         btn_x[btn_id] = (( world_width_draw / 2 ) - 166 + 50 );
//         btn_y[btn_id] = (( world_height_draw / 2 ) - 19 );
//         btn_action[btn_id] = 29;
//         btn_active[btn_id] = false;
//         btn_align[btn_id] = fa_center;
// }
// else if ( screen_type == 9 ){
//
//     screen_title = lang_text_credits[0]; // "CREDITS"
//     screen_desc_align = fa_left;
// }
//
function gml_Script_scr_screen_set_v1(_inst, _other, argument0) {
    _inst.gmlscreen_type = argument0;
    _inst.gmlscreen_title = "";
    _inst.gmlscreen_desc = "";
    _inst.gmlbtn_title = 0;
    _inst.gmlbtn_back_x1 = 10;
    _inst.gmlbtn_back_y1 = 10;
    _inst.gmlbtn_back_x2 = (_inst.gmlbtn_back_x1 + 100);
    _inst.gmlbtn_back_y2 = (_inst.gmlbtn_back_y1 + 100);
    if ((_inst.gmlscreen_type == 1)) {
        {
            var gmlbtn_id = 0;
            if (!(_inst.gmlbtn_title instanceof Array)) {
                _inst.gmlbtn_title = [];
                _inst.gmlbtn_title.__yy_owner = 1779252115;
            } else if (_inst.gmlbtn_title.__yy_owner !== 1779252115) {
                _inst.gmlbtn_title = _inst.gmlbtn_title.slice(0);
                _inst.gmlbtn_title.__yy_owner = 1779252115;
            }
            _inst.gmlbtn_title[gmlbtn_id] = "";
            if (!(_inst.gmlbtn_w instanceof Array)) {
                _inst.gmlbtn_w = [];
                _inst.gmlbtn_w.__yy_owner = 3123904953;
            } else if (_inst.gmlbtn_w.__yy_owner !== 3123904953) {
                _inst.gmlbtn_w = _inst.gmlbtn_w.slice(0);
                _inst.gmlbtn_w.__yy_owner = 3123904953;
            }
            _inst.gmlbtn_w[gmlbtn_id] = 147;
            if (!(_inst.gmlbtn_h instanceof Array)) {
                _inst.gmlbtn_h = [];
                _inst.gmlbtn_h.__yy_owner = 2003373863;
            } else if (_inst.gmlbtn_h.__yy_owner !== 2003373863) {
                _inst.gmlbtn_h = _inst.gmlbtn_h.slice(0);
                _inst.gmlbtn_h.__yy_owner = 2003373863;
            }
            _inst.gmlbtn_h[gmlbtn_id] = 147;
            if (!(_inst.gmlbtn_x instanceof Array)) {
                _inst.gmlbtn_x = [];
                _inst.gmlbtn_x.__yy_owner = 1034624374;
            } else if (_inst.gmlbtn_x.__yy_owner !== 1034624374) {
                _inst.gmlbtn_x = _inst.gmlbtn_x.slice(0);
                _inst.gmlbtn_x.__yy_owner = 1034624374;
            }
            _inst.gmlbtn_x[gmlbtn_id] = (_inst.gmlworld_width_draw / 2);
            if (!(_inst.gmlbtn_y instanceof Array)) {
                _inst.gmlbtn_y = [];
                _inst.gmlbtn_y.__yy_owner = 615525431;
            } else if (_inst.gmlbtn_y.__yy_owner !== 615525431) {
                _inst.gmlbtn_y = _inst.gmlbtn_y.slice(0);
                _inst.gmlbtn_y.__yy_owner = 615525431;
            }
            _inst.gmlbtn_y[gmlbtn_id] = ((_inst.gmlworld_height_draw / 2) + (10 * _inst.gmldraw_h_ratio));
            if (!(_inst.gmlbtn_action instanceof Array)) {
                _inst.gmlbtn_action = [];
                _inst.gmlbtn_action.__yy_owner = 2901436203;
            } else if (_inst.gmlbtn_action.__yy_owner !== 2901436203) {
                _inst.gmlbtn_action = _inst.gmlbtn_action.slice(0);
                _inst.gmlbtn_action.__yy_owner = 2901436203;
            }
            _inst.gmlbtn_action[gmlbtn_id] = 1;
            if (!(_inst.gmlbtn_active instanceof Array)) {
                _inst.gmlbtn_active = [];
                _inst.gmlbtn_active.__yy_owner = 1645586165;
            } else if (_inst.gmlbtn_active.__yy_owner !== 1645586165) {
                _inst.gmlbtn_active = _inst.gmlbtn_active.slice(0);
                _inst.gmlbtn_active.__yy_owner = 1645586165;
            }
            _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
            if (!(_inst.gmlbtn_align instanceof Array)) {
                _inst.gmlbtn_align = [];
                _inst.gmlbtn_align.__yy_owner = 1758933204;
            } else if (_inst.gmlbtn_align.__yy_owner !== 1758933204) {
                _inst.gmlbtn_align = _inst.gmlbtn_align.slice(0);
                _inst.gmlbtn_align.__yy_owner = 1758933204;
            }
            _inst.gmlbtn_align[gmlbtn_id] = 1;
            gmlbtn_id += 1;
            _inst.gmlbtn_title[gmlbtn_id] = "";
            _inst.gmlbtn_w[gmlbtn_id] = 101;
            _inst.gmlbtn_h[gmlbtn_id] = 101;
            _inst.gmlbtn_x[gmlbtn_id] = ((_inst.gmlworld_width_draw / 2) + 150);
            _inst.gmlbtn_y[gmlbtn_id] = (_inst.gmlbtn_y[(gmlbtn_id - 1)] + 26);
            _inst.gmlbtn_action[gmlbtn_id] = 2;
            _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
            _inst.gmlbtn_align[gmlbtn_id] = 1;
            gmlbtn_id += 1;
            _inst.gmlbtn_title[gmlbtn_id] = "";
            _inst.gmlbtn_w[gmlbtn_id] = 101;
            _inst.gmlbtn_h[gmlbtn_id] = 101;
            _inst.gmlbtn_x[gmlbtn_id] = ((_inst.gmlworld_width_draw / 2) - 150);
            _inst.gmlbtn_y[gmlbtn_id] = _inst.gmlbtn_y[(gmlbtn_id - 1)];
            _inst.gmlbtn_action[gmlbtn_id] = 27;
            _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
            _inst.gmlbtn_align[gmlbtn_id] = 1;
            gmlbtn_id += 1;
            if ((g_pBuiltIn.get_os_browser() == (-1))) {
                {
                    _inst.gmlbtn_title[gmlbtn_id] = _inst.gmllang_text_menu_main[2];
                    _inst.gmlbtn_w[gmlbtn_id] = 150;
                    _inst.gmlbtn_h[gmlbtn_id] = 50;
                    _inst.gmlbtn_x[gmlbtn_id] = (_inst.gmlworld_width_draw - 100);
                    _inst.gmlbtn_y[gmlbtn_id] = (_inst.gmlworld_height_draw - 100);
                    _inst.gmlbtn_action[gmlbtn_id] = 3;
                    _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
                    _inst.gmlbtn_align[gmlbtn_id] = 1;
                };
            };
        };
    } else {
        if ((((_inst.gmlscreen_type == 2)) || ((_inst.gmlscreen_type == 3)) || ((_inst.gmlscreen_type == 4)) || ((_inst.gmlscreen_type == 5)) || ((_inst.gmlscreen_type == 6)) || ((_inst.gmlscreen_type == 7)))) {
            {
                _inst.gmlscreen_title = _inst.gmllang_text_modes[0];
                _inst.gmlscreen_desc_align = 0;
                if (!(_inst.gmlbtn_title instanceof Array)) {
                    _inst.gmlbtn_title = [];
                    _inst.gmlbtn_title.__yy_owner = 1779252115;
                } else if (_inst.gmlbtn_title.__yy_owner !== 1779252115) {
                    _inst.gmlbtn_title = _inst.gmlbtn_title.slice(0);
                    _inst.gmlbtn_title.__yy_owner = 1779252115;
                }
                _inst.gmlbtn_title[0] = gml_Script_scr_game_mode_name(_inst, _other, 1);
                if (!(_inst.gmlbtn_w instanceof Array)) {
                    _inst.gmlbtn_w = [];
                    _inst.gmlbtn_w.__yy_owner = 3123904953;
                } else if (_inst.gmlbtn_w.__yy_owner !== 3123904953) {
                    _inst.gmlbtn_w = _inst.gmlbtn_w.slice(0);
                    _inst.gmlbtn_w.__yy_owner = 3123904953;
                }
                _inst.gmlbtn_w[0] = 270;
                if (!(_inst.gmlbtn_h instanceof Array)) {
                    _inst.gmlbtn_h = [];
                    _inst.gmlbtn_h.__yy_owner = 2003373863;
                } else if (_inst.gmlbtn_h.__yy_owner !== 2003373863) {
                    _inst.gmlbtn_h = _inst.gmlbtn_h.slice(0);
                    _inst.gmlbtn_h.__yy_owner = 2003373863;
                }
                _inst.gmlbtn_h[0] = 50;
                if (!(_inst.gmlbtn_x instanceof Array)) {
                    _inst.gmlbtn_x = [];
                    _inst.gmlbtn_x.__yy_owner = 1034624374;
                } else if (_inst.gmlbtn_x.__yy_owner !== 1034624374) {
                    _inst.gmlbtn_x = _inst.gmlbtn_x.slice(0);
                    _inst.gmlbtn_x.__yy_owner = 1034624374;
                }
                _inst.gmlbtn_x[0] = ((_inst.gmlworld_width_draw / 2) - 420);
                if (!(_inst.gmlbtn_y instanceof Array)) {
                    _inst.gmlbtn_y = [];
                    _inst.gmlbtn_y.__yy_owner = 615525431;
                } else if (_inst.gmlbtn_y.__yy_owner !== 615525431) {
                    _inst.gmlbtn_y = _inst.gmlbtn_y.slice(0);
                    _inst.gmlbtn_y.__yy_owner = 615525431;
                }
                _inst.gmlbtn_y[0] = ((_inst.gmlworld_height_draw / 2) - (_inst.gmlbtn_h[0] / 2) - ((_inst.gmlbtn_h[0] + 6) * 2));
                if (!(_inst.gmlbtn_action instanceof Array)) {
                    _inst.gmlbtn_action = [];
                    _inst.gmlbtn_action.__yy_owner = 2901436203;
                } else if (_inst.gmlbtn_action.__yy_owner !== 2901436203) {
                    _inst.gmlbtn_action = _inst.gmlbtn_action.slice(0);
                    _inst.gmlbtn_action.__yy_owner = 2901436203;
                }
                _inst.gmlbtn_action[0] = 4;
                if (!(_inst.gmlbtn_active instanceof Array)) {
                    _inst.gmlbtn_active = [];
                    _inst.gmlbtn_active.__yy_owner = 1645586165;
                } else if (_inst.gmlbtn_active.__yy_owner !== 1645586165) {
                    _inst.gmlbtn_active = _inst.gmlbtn_active.slice(0);
                    _inst.gmlbtn_active.__yy_owner = 1645586165;
                }
                _inst.gmlbtn_active[0] = 0 ? 1 : 0;
                if (!(_inst.gmlbtn_align instanceof Array)) {
                    _inst.gmlbtn_align = [];
                    _inst.gmlbtn_align.__yy_owner = 1758933204;
                } else if (_inst.gmlbtn_align.__yy_owner !== 1758933204) {
                    _inst.gmlbtn_align = _inst.gmlbtn_align.slice(0);
                    _inst.gmlbtn_align.__yy_owner = 1758933204;
                }
                _inst.gmlbtn_align[0] = 0;
                _inst.gmlbtn_title[1] = gml_Script_scr_game_mode_name(_inst, _other, 2);
                _inst.gmlbtn_w[1] = 270;
                _inst.gmlbtn_h[1] = 50;
                _inst.gmlbtn_x[1] = ((_inst.gmlworld_width_draw / 2) - 420);
                _inst.gmlbtn_y[1] = ((_inst.gmlworld_height_draw / 2) - (_inst.gmlbtn_h[1] / 2) - ((_inst.gmlbtn_h[1] + 6) * 1));
                _inst.gmlbtn_action[1] = 5;
                _inst.gmlbtn_active[1] = 0 ? 1 : 0;
                _inst.gmlbtn_align[1] = 0;
                _inst.gmlbtn_title[2] = gml_Script_scr_game_mode_name(_inst, _other, 3);
                _inst.gmlbtn_w[2] = 270;
                _inst.gmlbtn_h[2] = 50;
                _inst.gmlbtn_x[2] = ((_inst.gmlworld_width_draw / 2) - 420);
                _inst.gmlbtn_y[2] = ((_inst.gmlworld_height_draw / 2) - (_inst.gmlbtn_h[2] / 2));
                _inst.gmlbtn_action[2] = 7;
                _inst.gmlbtn_active[2] = 0 ? 1 : 0;
                _inst.gmlbtn_align[2] = 0;
                _inst.gmlbtn_title[3] = gml_Script_scr_game_mode_name(_inst, _other, 4);
                _inst.gmlbtn_w[3] = 270;
                _inst.gmlbtn_h[3] = 50;
                _inst.gmlbtn_x[3] = ((_inst.gmlworld_width_draw / 2) - 420);
                _inst.gmlbtn_y[3] = ((_inst.gmlworld_height_draw / 2) - (_inst.gmlbtn_h[3] / 2) + ((_inst.gmlbtn_h[3] + 6) * 1));
                _inst.gmlbtn_action[3] = 8;
                _inst.gmlbtn_active[3] = 0 ? 1 : 0;
                _inst.gmlbtn_align[3] = 0;
                _inst.gmlbtn_title[4] = gml_Script_scr_game_mode_name(_inst, _other, 5);
                _inst.gmlbtn_w[4] = 180;
                _inst.gmlbtn_h[4] = 50;
                _inst.gmlbtn_x[4] = ((_inst.gmlworld_width_draw / 2) - 420);
                _inst.gmlbtn_y[4] = ((_inst.gmlworld_height_draw / 2) - (_inst.gmlbtn_h[4] / 2) + ((_inst.gmlbtn_h[4] + 6) * 2));
                _inst.gmlbtn_action[4] = 9;
                _inst.gmlbtn_active[4] = 0 ? 1 : 0;
                _inst.gmlbtn_align[4] = 0;
                _inst.gmldesc_x = ((_inst.gmlworld_width_draw / 2) - 55);
                _inst.gmldesc_y = ((_inst.gmlworld_height_draw / 2) - 100);
                _inst.gmlbtn_w[5] = 100;
                _inst.gmlbtn_h[5] = 100;
                _inst.gmlbtn_x[5] = ((_inst.gmlworld_width_draw / 2) + 250);
                _inst.gmlbtn_y[5] = ((_inst.gmlworld_height_draw / 2) + 20);
                _inst.gmlbtn_action[5] = 6;
                _inst.gmlbtn_active[5] = 0 ? 1 : 0;
                _inst.gmlbtn_align[5] = 1;
                if ((_inst.gmlscreen_type == 3)) {
                    {
                        _inst.gmlscreen_desc = _inst.gmllang_text_modes[6];
                        _inst.gmlscreen_desc_align = 1;
                        _inst.gmldesc_x = ((_inst.gmlworld_width_draw / 2) + 178);
                        _inst.gmldesc_y -= 60;
                        var gmlscreen_item_x = _inst.gmldesc_x;
                        var gmlscreen_item_y = _inst.gmldesc_y;
                        gmlscreen_item_y += 83;
                        _inst.gmlbtn_course_w = 104;
                        _inst.gmlbtn_course_h = 67;
                        if (!(_inst.gmlbtn_course_x instanceof Array)) {
                            _inst.gmlbtn_course_x = [];
                            _inst.gmlbtn_course_x.__yy_owner = 764559735;
                        } else if (_inst.gmlbtn_course_x.__yy_owner !== 764559735) {
                            _inst.gmlbtn_course_x = _inst.gmlbtn_course_x.slice(0);
                            _inst.gmlbtn_course_x.__yy_owner = 764559735;
                        }
                        _inst.gmlbtn_course_x[1] = (gmlscreen_item_x - 177);
                        if (!(_inst.gmlbtn_course_y instanceof Array)) {
                            _inst.gmlbtn_course_y = [];
                            _inst.gmlbtn_course_y.__yy_owner = 881422390;
                        } else if (_inst.gmlbtn_course_y.__yy_owner !== 881422390) {
                            _inst.gmlbtn_course_y = _inst.gmlbtn_course_y.slice(0);
                            _inst.gmlbtn_course_y.__yy_owner = 881422390;
                        }
                        _inst.gmlbtn_course_y[1] = gmlscreen_item_y;
                        if ((global.gmlgame_submode == 1)) {
                            {
                                if (!(_inst.gmlbtn_course_active instanceof Array)) {
                                    _inst.gmlbtn_course_active = [];
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                } else if (_inst.gmlbtn_course_active.__yy_owner !== 3840781105) {
                                    _inst.gmlbtn_course_active = _inst.gmlbtn_course_active.slice(0);
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                }
                                _inst.gmlbtn_course_active[1] = 1;
                                if (!(_inst.gmlbtn_course_color instanceof Array)) {
                                    _inst.gmlbtn_course_color = [];
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                } else if (_inst.gmlbtn_course_color.__yy_owner !== 4209590705) {
                                    _inst.gmlbtn_course_color = _inst.gmlbtn_course_color.slice(0);
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                }
                                _inst.gmlbtn_course_color[1] = 16776960;
                            };
                        } else {
                            {
                                if (!(_inst.gmlbtn_course_active instanceof Array)) {
                                    _inst.gmlbtn_course_active = [];
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                } else if (_inst.gmlbtn_course_active.__yy_owner !== 3840781105) {
                                    _inst.gmlbtn_course_active = _inst.gmlbtn_course_active.slice(0);
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                }
                                _inst.gmlbtn_course_active[1] = 0;
                                if (!(_inst.gmlbtn_course_color instanceof Array)) {
                                    _inst.gmlbtn_course_color = [];
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                } else if (_inst.gmlbtn_course_color.__yy_owner !== 4209590705) {
                                    _inst.gmlbtn_course_color = _inst.gmlbtn_course_color.slice(0);
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                }
                                _inst.gmlbtn_course_color[1] = 65280;
                            };
                        };
                        _inst.gmlbtn_course_x[2] = (gmlscreen_item_x - 59);
                        _inst.gmlbtn_course_y[2] = gmlscreen_item_y;
                        if ((global.gmlgame_submode == 2)) {
                            {
                                if (!(_inst.gmlbtn_course_active instanceof Array)) {
                                    _inst.gmlbtn_course_active = [];
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                } else if (_inst.gmlbtn_course_active.__yy_owner !== 3840781105) {
                                    _inst.gmlbtn_course_active = _inst.gmlbtn_course_active.slice(0);
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                }
                                _inst.gmlbtn_course_active[2] = 1;
                                if (!(_inst.gmlbtn_course_color instanceof Array)) {
                                    _inst.gmlbtn_course_color = [];
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                } else if (_inst.gmlbtn_course_color.__yy_owner !== 4209590705) {
                                    _inst.gmlbtn_course_color = _inst.gmlbtn_course_color.slice(0);
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                }
                                _inst.gmlbtn_course_color[2] = 16776960;
                            };
                        } else {
                            {
                                if (!(_inst.gmlbtn_course_active instanceof Array)) {
                                    _inst.gmlbtn_course_active = [];
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                } else if (_inst.gmlbtn_course_active.__yy_owner !== 3840781105) {
                                    _inst.gmlbtn_course_active = _inst.gmlbtn_course_active.slice(0);
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                }
                                _inst.gmlbtn_course_active[2] = 0;
                                if (!(_inst.gmlbtn_course_color instanceof Array)) {
                                    _inst.gmlbtn_course_color = [];
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                } else if (_inst.gmlbtn_course_color.__yy_owner !== 4209590705) {
                                    _inst.gmlbtn_course_color = _inst.gmlbtn_course_color.slice(0);
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                }
                                _inst.gmlbtn_course_color[2] = 65280;
                            };
                        };
                        _inst.gmlbtn_course_x[3] = (gmlscreen_item_x + 59);
                        _inst.gmlbtn_course_y[3] = gmlscreen_item_y;
                        if ((global.gmlgame_submode == 3)) {
                            {
                                if (!(_inst.gmlbtn_course_active instanceof Array)) {
                                    _inst.gmlbtn_course_active = [];
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                } else if (_inst.gmlbtn_course_active.__yy_owner !== 3840781105) {
                                    _inst.gmlbtn_course_active = _inst.gmlbtn_course_active.slice(0);
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                }
                                _inst.gmlbtn_course_active[3] = 1;
                                if (!(_inst.gmlbtn_course_color instanceof Array)) {
                                    _inst.gmlbtn_course_color = [];
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                } else if (_inst.gmlbtn_course_color.__yy_owner !== 4209590705) {
                                    _inst.gmlbtn_course_color = _inst.gmlbtn_course_color.slice(0);
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                }
                                _inst.gmlbtn_course_color[3] = 16776960;
                            };
                        } else {
                            {
                                if (!(_inst.gmlbtn_course_active instanceof Array)) {
                                    _inst.gmlbtn_course_active = [];
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                } else if (_inst.gmlbtn_course_active.__yy_owner !== 3840781105) {
                                    _inst.gmlbtn_course_active = _inst.gmlbtn_course_active.slice(0);
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                }
                                _inst.gmlbtn_course_active[3] = 0;
                                if (!(_inst.gmlbtn_course_color instanceof Array)) {
                                    _inst.gmlbtn_course_color = [];
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                } else if (_inst.gmlbtn_course_color.__yy_owner !== 4209590705) {
                                    _inst.gmlbtn_course_color = _inst.gmlbtn_course_color.slice(0);
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                }
                                _inst.gmlbtn_course_color[3] = 65280;
                            };
                        };
                        _inst.gmlbtn_course_x[4] = (gmlscreen_item_x + 177);
                        _inst.gmlbtn_course_y[4] = gmlscreen_item_y;
                        if ((global.gmlgame_submode == 4)) {
                            {
                                if (!(_inst.gmlbtn_course_active instanceof Array)) {
                                    _inst.gmlbtn_course_active = [];
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                } else if (_inst.gmlbtn_course_active.__yy_owner !== 3840781105) {
                                    _inst.gmlbtn_course_active = _inst.gmlbtn_course_active.slice(0);
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                }
                                _inst.gmlbtn_course_active[4] = 1;
                                if (!(_inst.gmlbtn_course_color instanceof Array)) {
                                    _inst.gmlbtn_course_color = [];
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                } else if (_inst.gmlbtn_course_color.__yy_owner !== 4209590705) {
                                    _inst.gmlbtn_course_color = _inst.gmlbtn_course_color.slice(0);
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                }
                                _inst.gmlbtn_course_color[4] = 16776960;
                            };
                        } else {
                            {
                                if (!(_inst.gmlbtn_course_active instanceof Array)) {
                                    _inst.gmlbtn_course_active = [];
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                } else if (_inst.gmlbtn_course_active.__yy_owner !== 3840781105) {
                                    _inst.gmlbtn_course_active = _inst.gmlbtn_course_active.slice(0);
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                }
                                _inst.gmlbtn_course_active[4] = 0;
                                if (!(_inst.gmlbtn_course_color instanceof Array)) {
                                    _inst.gmlbtn_course_color = [];
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                } else if (_inst.gmlbtn_course_color.__yy_owner !== 4209590705) {
                                    _inst.gmlbtn_course_color = _inst.gmlbtn_course_color.slice(0);
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                }
                                _inst.gmlbtn_course_color[4] = 65280;
                            };
                        };
                        if ((((_inst.gmlgame_levels_curr == 1)) && ((_inst.gmlgame_mode_1_best_score == 0)))) {
                            {
                                _inst.gmlbtn_title[5] = "";
                                _inst.gmlbtn_x[5] = _inst.gmldesc_x;
                                _inst.gmlbtn_y[5] = ((_inst.gmlworld_height_draw / 2) + 120);
                            };
                        } else {
                            {
                                _inst.gmlbtn_title[5] = "";
                                _inst.gmlbtn_x[5] = ((_inst.gmlworld_width_draw / 2) + 362);
                                _inst.gmlbtn_y[5] = ((_inst.gmlworld_height_draw / 2) + 150);
                                _inst.gmlbtn_title[6] = _inst.gmllang_text_modes[9];
                                _inst.gmlbtn_w[6] = 164;
                                _inst.gmlbtn_h[6] = 60;
                                _inst.gmlbtn_x[6] = ((_inst.gmlworld_width_draw / 2) - 2);
                                _inst.gmlbtn_y[6] = ((_inst.gmlworld_height_draw / 2) + 185);
                                _inst.gmlbtn_action[6] = 12;
                                _inst.gmlbtn_active[6] = 0 ? 1 : 0;
                                _inst.gmlbtn_align[6] = 1;
                                if ((_inst.gmlgame_mode_1_best_score == 0)) {
                                    {
                                        _inst.gmlbtn_y[5] -= 26;
                                        _inst.gmlbtn_y[6] -= 26;
                                    };
                                };
                            };
                        };
                        _inst.gmlbtn_active[0] = 1 ? 1 : 0;
                    };
                } else {
                    if ((_inst.gmlscreen_type == 4)) {
                        {
                            _inst.gmlscreen_desc = _inst.gmllang_text_modes[10];
                            if ((_inst.gmlgame_mode_2_holes_record != 0)) {
                                {
                                    _inst.gmlbtn_y[5] += 80;
                                };
                            };
                            _inst.gmlbtn_title[5] = "";
                            _inst.gmlbtn_active[1] = 1 ? 1 : 0;
                        };
                    } else {
                        if ((_inst.gmlscreen_type == 5)) {
                            {
                                _inst.gmlscreen_desc = _inst.gmllang_text_modes[11];
                                if ((_inst.gmlgame_mode_3_holes_record != 0)) {
                                    {
                                        _inst.gmlbtn_y[5] += 80;
                                    };
                                };
                                _inst.gmlbtn_title[5] = "";
                                _inst.gmlbtn_active[2] = 1 ? 1 : 0;
                            };
                        } else {
                            if ((_inst.gmlscreen_type == 6)) {
                                {
                                    _inst.gmlscreen_desc = _inst.gmllang_text_modes[12];
                                    if ((_inst.gmlgame_mode_4_holes_record != 0)) {
                                        {
                                            _inst.gmlbtn_y[5] += 50;
                                        };
                                    };
                                    _inst.gmlbtn_title[5] = "";
                                    _inst.gmlbtn_active[3] = 1 ? 1 : 0;
                                };
                            } else {
                                if ((_inst.gmlscreen_type == 7)) {
                                    {
                                        _inst.gmlscreen_desc = _inst.gmllang_text_modes[13];
                                        _inst.gmlbtn_title[5] = "";
                                        _inst.gmlbtn_active[4] = 1 ? 1 : 0;
                                    };
                                } else {
                                    {
                                        _inst.gmlbtn_active[0] = 1 ? 1 : 0;
                                    };
                                };
                            };
                        };
                    };
                };
            };
        } else {
            if ((_inst.gmlscreen_type == 8)) {
                {
                    _inst.gmlscreen_title = _inst.gmllang_text_options[5];
                    _inst.gmlscreen_desc_align = 0;
                    var gmlbtn_id = 0;
                    if (_inst.gmlmulti_lang_support > 0.5) {
                        {
                            if (!(_inst.gmlbtn_title instanceof Array)) {
                                _inst.gmlbtn_title = [];
                                _inst.gmlbtn_title.__yy_owner = 1779252115;
                            } else if (_inst.gmlbtn_title.__yy_owner !== 1779252115) {
                                _inst.gmlbtn_title = _inst.gmlbtn_title.slice(0);
                                _inst.gmlbtn_title.__yy_owner = 1779252115;
                            }
                            _inst.gmlbtn_title[gmlbtn_id] = _inst.gmllang_text_options[3];
                            if (!(_inst.gmlbtn_w instanceof Array)) {
                                _inst.gmlbtn_w = [];
                                _inst.gmlbtn_w.__yy_owner = 3123904953;
                            } else if (_inst.gmlbtn_w.__yy_owner !== 3123904953) {
                                _inst.gmlbtn_w = _inst.gmlbtn_w.slice(0);
                                _inst.gmlbtn_w.__yy_owner = 3123904953;
                            }
                            _inst.gmlbtn_w[gmlbtn_id] = 200;
                            if (!(_inst.gmlbtn_h instanceof Array)) {
                                _inst.gmlbtn_h = [];
                                _inst.gmlbtn_h.__yy_owner = 2003373863;
                            } else if (_inst.gmlbtn_h.__yy_owner !== 2003373863) {
                                _inst.gmlbtn_h = _inst.gmlbtn_h.slice(0);
                                _inst.gmlbtn_h.__yy_owner = 2003373863;
                            }
                            _inst.gmlbtn_h[gmlbtn_id] = 50;
                            if (!(_inst.gmlbtn_x instanceof Array)) {
                                _inst.gmlbtn_x = [];
                                _inst.gmlbtn_x.__yy_owner = 1034624374;
                            } else if (_inst.gmlbtn_x.__yy_owner !== 1034624374) {
                                _inst.gmlbtn_x = _inst.gmlbtn_x.slice(0);
                                _inst.gmlbtn_x.__yy_owner = 1034624374;
                            }
                            _inst.gmlbtn_x[gmlbtn_id] = ((_inst.gmlworld_width_draw / 2) - 350 + 50);
                            if (!(_inst.gmlbtn_y instanceof Array)) {
                                _inst.gmlbtn_y = [];
                                _inst.gmlbtn_y.__yy_owner = 615525431;
                            } else if (_inst.gmlbtn_y.__yy_owner !== 615525431) {
                                _inst.gmlbtn_y = _inst.gmlbtn_y.slice(0);
                                _inst.gmlbtn_y.__yy_owner = 615525431;
                            }
                            _inst.gmlbtn_y[gmlbtn_id] = ((_inst.gmlworld_height_draw / 2) + 136);
                            if (!(_inst.gmlbtn_action instanceof Array)) {
                                _inst.gmlbtn_action = [];
                                _inst.gmlbtn_action.__yy_owner = 2901436203;
                            } else if (_inst.gmlbtn_action.__yy_owner !== 2901436203) {
                                _inst.gmlbtn_action = _inst.gmlbtn_action.slice(0);
                                _inst.gmlbtn_action.__yy_owner = 2901436203;
                            }
                            _inst.gmlbtn_action[gmlbtn_id] = 25;
                            if (!(_inst.gmlbtn_active instanceof Array)) {
                                _inst.gmlbtn_active = [];
                                _inst.gmlbtn_active.__yy_owner = 1645586165;
                            } else if (_inst.gmlbtn_active.__yy_owner !== 1645586165) {
                                _inst.gmlbtn_active = _inst.gmlbtn_active.slice(0);
                                _inst.gmlbtn_active.__yy_owner = 1645586165;
                            }
                            _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
                            if (!(_inst.gmlbtn_align instanceof Array)) {
                                _inst.gmlbtn_align = [];
                                _inst.gmlbtn_align.__yy_owner = 1758933204;
                            } else if (_inst.gmlbtn_align.__yy_owner !== 1758933204) {
                                _inst.gmlbtn_align = _inst.gmlbtn_align.slice(0);
                                _inst.gmlbtn_align.__yy_owner = 1758933204;
                            }
                            _inst.gmlbtn_align[gmlbtn_id] = 0;
                            gmlbtn_id += 1;
                            _inst.gmlbtn_title[gmlbtn_id] = _inst.gmllang_text_options[4];
                            _inst.gmlbtn_w[gmlbtn_id] = 200;
                            _inst.gmlbtn_h[gmlbtn_id] = 50;
                            _inst.gmlbtn_x[gmlbtn_id] = (_inst.gmlbtn_x[(gmlbtn_id - 1)] + 200 + 50);
                            _inst.gmlbtn_y[gmlbtn_id] = _inst.gmlbtn_y[(gmlbtn_id - 1)];
                            _inst.gmlbtn_action[gmlbtn_id] = 26;
                            _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
                            _inst.gmlbtn_align[gmlbtn_id] = 0;
                            gmlbtn_id += 1;
                        };
                    };
                    if (!(_inst.gmlbtn_title instanceof Array)) {
                        _inst.gmlbtn_title = [];
                        _inst.gmlbtn_title.__yy_owner = 1779252115;
                    } else if (_inst.gmlbtn_title.__yy_owner !== 1779252115) {
                        _inst.gmlbtn_title = _inst.gmlbtn_title.slice(0);
                        _inst.gmlbtn_title.__yy_owner = 1779252115;
                    }
                    _inst.gmlbtn_title[gmlbtn_id] = "<";
                    if (!(_inst.gmlbtn_w instanceof Array)) {
                        _inst.gmlbtn_w = [];
                        _inst.gmlbtn_w.__yy_owner = 3123904953;
                    } else if (_inst.gmlbtn_w.__yy_owner !== 3123904953) {
                        _inst.gmlbtn_w = _inst.gmlbtn_w.slice(0);
                        _inst.gmlbtn_w.__yy_owner = 3123904953;
                    }
                    _inst.gmlbtn_w[gmlbtn_id] = 50;
                    if (!(_inst.gmlbtn_h instanceof Array)) {
                        _inst.gmlbtn_h = [];
                        _inst.gmlbtn_h.__yy_owner = 2003373863;
                    } else if (_inst.gmlbtn_h.__yy_owner !== 2003373863) {
                        _inst.gmlbtn_h = _inst.gmlbtn_h.slice(0);
                        _inst.gmlbtn_h.__yy_owner = 2003373863;
                    }
                    _inst.gmlbtn_h[gmlbtn_id] = 50;
                    if (!(_inst.gmlbtn_x instanceof Array)) {
                        _inst.gmlbtn_x = [];
                        _inst.gmlbtn_x.__yy_owner = 1034624374;
                    } else if (_inst.gmlbtn_x.__yy_owner !== 1034624374) {
                        _inst.gmlbtn_x = _inst.gmlbtn_x.slice(0);
                        _inst.gmlbtn_x.__yy_owner = 1034624374;
                    }
                    _inst.gmlbtn_x[gmlbtn_id] = ((_inst.gmlworld_width_draw / 2) - 188 + 50);
                    if (!(_inst.gmlbtn_y instanceof Array)) {
                        _inst.gmlbtn_y = [];
                        _inst.gmlbtn_y.__yy_owner = 615525431;
                    } else if (_inst.gmlbtn_y.__yy_owner !== 615525431) {
                        _inst.gmlbtn_y = _inst.gmlbtn_y.slice(0);
                        _inst.gmlbtn_y.__yy_owner = 615525431;
                    }
                    _inst.gmlbtn_y[gmlbtn_id] = ((_inst.gmlworld_height_draw / 2) - 160);
                    if (!(_inst.gmlbtn_action instanceof Array)) {
                        _inst.gmlbtn_action = [];
                        _inst.gmlbtn_action.__yy_owner = 2901436203;
                    } else if (_inst.gmlbtn_action.__yy_owner !== 2901436203) {
                        _inst.gmlbtn_action = _inst.gmlbtn_action.slice(0);
                        _inst.gmlbtn_action.__yy_owner = 2901436203;
                    }
                    _inst.gmlbtn_action[gmlbtn_id] = 21;
                    if (!(_inst.gmlbtn_active instanceof Array)) {
                        _inst.gmlbtn_active = [];
                        _inst.gmlbtn_active.__yy_owner = 1645586165;
                    } else if (_inst.gmlbtn_active.__yy_owner !== 1645586165) {
                        _inst.gmlbtn_active = _inst.gmlbtn_active.slice(0);
                        _inst.gmlbtn_active.__yy_owner = 1645586165;
                    }
                    _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
                    if (!(_inst.gmlbtn_align instanceof Array)) {
                        _inst.gmlbtn_align = [];
                        _inst.gmlbtn_align.__yy_owner = 1758933204;
                    } else if (_inst.gmlbtn_align.__yy_owner !== 1758933204) {
                        _inst.gmlbtn_align = _inst.gmlbtn_align.slice(0);
                        _inst.gmlbtn_align.__yy_owner = 1758933204;
                    }
                    _inst.gmlbtn_align[gmlbtn_id] = 1;
                    gmlbtn_id += 1;
                    _inst.gmlbtn_title[gmlbtn_id] = ">";
                    _inst.gmlbtn_w[gmlbtn_id] = 50;
                    _inst.gmlbtn_h[gmlbtn_id] = 50;
                    _inst.gmlbtn_x[gmlbtn_id] = (_inst.gmlbtn_x[(gmlbtn_id - 1)] + 140);
                    _inst.gmlbtn_y[gmlbtn_id] = _inst.gmlbtn_y[(gmlbtn_id - 1)];
                    _inst.gmlbtn_action[gmlbtn_id] = 22;
                    _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
                    _inst.gmlbtn_align[gmlbtn_id] = 1;
                    gmlbtn_id += 1;
                    _inst.gmlbtn_title[gmlbtn_id] = "<";
                    _inst.gmlbtn_w[gmlbtn_id] = 50;
                    _inst.gmlbtn_h[gmlbtn_id] = 50;
                    _inst.gmlbtn_x[gmlbtn_id] = ((_inst.gmlworld_width_draw / 2) - 188 + 50);
                    _inst.gmlbtn_y[gmlbtn_id] = ((_inst.gmlworld_height_draw / 2) - 88);
                    _inst.gmlbtn_action[gmlbtn_id] = 23;
                    _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
                    _inst.gmlbtn_align[gmlbtn_id] = 1;
                    gmlbtn_id += 1;
                    _inst.gmlbtn_title[gmlbtn_id] = ">";
                    _inst.gmlbtn_w[gmlbtn_id] = 50;
                    _inst.gmlbtn_h[gmlbtn_id] = 50;
                    _inst.gmlbtn_x[gmlbtn_id] = (_inst.gmlbtn_x[(gmlbtn_id - 1)] + 140);
                    _inst.gmlbtn_y[gmlbtn_id] = _inst.gmlbtn_y[(gmlbtn_id - 1)];
                    _inst.gmlbtn_action[gmlbtn_id] = 24;
                    _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
                    _inst.gmlbtn_align[gmlbtn_id] = 1;
                    gmlbtn_id += 1;
                    _inst.gmlbtn_title[gmlbtn_id] = " ";
                    _inst.gmlbtn_w[gmlbtn_id] = 50;
                    _inst.gmlbtn_h[gmlbtn_id] = 50;
                    _inst.gmlbtn_x[gmlbtn_id] = ((_inst.gmlworld_width_draw / 2) - 166 + 50);
                    _inst.gmlbtn_y[gmlbtn_id] = ((_inst.gmlworld_height_draw / 2) - 19);
                    _inst.gmlbtn_action[gmlbtn_id] = 29;
                    _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
                    _inst.gmlbtn_align[gmlbtn_id] = 1;
                };
            } else {
                if ((_inst.gmlscreen_type == 9)) {
                    {
                        _inst.gmlscreen_title = _inst.gmllang_text_credits[0];
                        _inst.gmlscreen_desc_align = 0;
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// /// scr_meter_ctrl_arrow()
//
//     var tip_len_1 = ceil( global.display_ratio * 6 ); // Front Tip
//     var tip_len_2 = ceil( global.display_ratio * 4 ); // Side Tips
//
//     var force_meter_angle_2 = force_meter_angle_main + 90;
//     var force_meter_angle_3 = force_meter_angle_main - 90;
//
//     // First Point
//
//         force_meter_arrow_x1 = force_meter_x1 + lengthdir_x(force_meter_lenght,force_meter_angle_main);
//         force_meter_arrow_y1 = force_meter_y1 + lengthdir_y(force_meter_lenght,force_meter_angle_main);
//
//     // Tips
//
//         force_meter_tip_x1 = ceil( force_meter_arrow_x1 + lengthdir_x(tip_len_1,force_meter_angle_main));
//         force_meter_tip_y1 = ceil( force_meter_arrow_y1 + lengthdir_y(tip_len_1,force_meter_angle_main));
//
//         force_meter_tip_x2 = ceil( force_meter_arrow_x1 + lengthdir_x(tip_len_2,force_meter_angle_2));
//         force_meter_tip_y2 = ceil( force_meter_arrow_y1 + lengthdir_y(tip_len_2,force_meter_angle_2));
//
//         force_meter_tip_x3 = ceil( force_meter_arrow_x1 + lengthdir_x(tip_len_2,force_meter_angle_3));
//         force_meter_tip_y3 = ceil( force_meter_arrow_y1 + lengthdir_y(tip_len_2,force_meter_angle_3));
//
//     /* force_meter_tip_x2 = ceil( force_meter_tip_x2 - lengthdir_x(2,force_meter_angle_main));
//     force_meter_tip_y2 = ceil( force_meter_tip_y2 - lengthdir_y(2,force_meter_angle_main));
//
//     force_meter_tip_x3 = ceil( force_meter_tip_x3 - lengthdir_x(2,force_meter_angle_main));
//     force_meter_tip_y3 = ceil( force_meter_tip_y3 - lengthdir_y(2,force_meter_angle_main)); */
//
//
//
function gml_Script_scr_meter_ctrl_body_arrow(_inst, _other) {
    var gmltip_len_1 = ceil((global.gmldisplay_ratio * 6));
    var gmltip_len_2 = ceil((global.gmldisplay_ratio * 4));
    var gmlforce_meter_angle_2 = (_inst.gmlforce_meter_angle_main + 90);
    var gmlforce_meter_angle_3 = (_inst.gmlforce_meter_angle_main - 90);
    _inst.gmlforce_meter_arrow_x1 = (_inst.gmlforce_meter_x1 + lengthdir_x(_inst.gmlforce_meter_lenght, _inst.gmlforce_meter_angle_main));
    _inst.gmlforce_meter_arrow_y1 = (_inst.gmlforce_meter_y1 + lengthdir_y(_inst.gmlforce_meter_lenght, _inst.gmlforce_meter_angle_main));
    _inst.gmlforce_meter_tip_x1 = ceil((_inst.gmlforce_meter_arrow_x1 + lengthdir_x(gmltip_len_1, _inst.gmlforce_meter_angle_main)));
    _inst.gmlforce_meter_tip_y1 = ceil((_inst.gmlforce_meter_arrow_y1 + lengthdir_y(gmltip_len_1, _inst.gmlforce_meter_angle_main)));
    _inst.gmlforce_meter_tip_x2 = ceil((_inst.gmlforce_meter_arrow_x1 + lengthdir_x(gmltip_len_2, gmlforce_meter_angle_2)));
    _inst.gmlforce_meter_tip_y2 = ceil((_inst.gmlforce_meter_arrow_y1 + lengthdir_y(gmltip_len_2, gmlforce_meter_angle_2)));
    _inst.gmlforce_meter_tip_x3 = ceil((_inst.gmlforce_meter_arrow_x1 + lengthdir_x(gmltip_len_2, gmlforce_meter_angle_3)));
    _inst.gmlforce_meter_tip_y3 = ceil((_inst.gmlforce_meter_arrow_y1 + lengthdir_y(gmltip_len_2, gmlforce_meter_angle_3)));
}

// #####################################################################################################
// /// scr_meter_ctrl_triangle()
//
//
//     // Triangle Point 1
//
//         force_meter_angle_main = point_direction(force_meter_x2,force_meter_y2,force_meter_x1,force_meter_y1);
//
//         force_meter_lenght = point_distance(force_meter_x2,force_meter_y2,force_meter_x1,force_meter_y1);
//
//         force_meter_arrow_x1 = force_meter_x1 + lengthdir_x(force_meter_lenght,force_meter_angle_main);
//         force_meter_arrow_y1 = force_meter_y1 + lengthdir_y(force_meter_lenght,force_meter_angle_main);
//
//
//     // Triangle Point 2
//
//         force_meter_angle_2 = force_meter_angle_main + 90;
//
//         force_meter_side_lenght_2 = ceil( force_meter_lenght * 0.10 );
//         if ( force_meter_side_lenght_2 < 2 ){ force_meter_side_lenght_2 = 1; }
//         else if ( force_meter_side_lenght_2 > 10 ){ force_meter_side_lenght_2 = 10; }
//
//         force_meter_arrow_x2 = force_meter_x1 + lengthdir_x(force_meter_side_lenght_2,force_meter_angle_2);
//         force_meter_arrow_y2 = force_meter_y1 + lengthdir_y(force_meter_side_lenght_2,force_meter_angle_2);
//
//
//     // Triangle Point 3
//
//         force_meter_angle_3 = force_meter_angle_main - 90;
//
//         force_meter_side_lenght_3 = ( force_meter_lenght * 0.1 );
//         if ( force_meter_side_lenght_3 < 1 ){ force_meter_side_lenght_3 = 1; }
//         else if ( force_meter_side_lenght_3 > 10 ){ force_meter_side_lenght_3 = 10; }
//
//         force_meter_arrow_x3 = force_meter_x1 + lengthdir_x(force_meter_side_lenght_3,force_meter_angle_3);
//         force_meter_arrow_y3 = force_meter_y1 + lengthdir_y(force_meter_side_lenght_3,force_meter_angle_3);
//
//
//
//     // Finger Displacement
//
//         finger_displace = true;
//
//         if ( finger_displace ){
//
//             finger_size = 100 / global.display_ratio;
//
//             force_meter_pointer_x1b = force_meter_x1 + lengthdir_x(finger_size,force_meter_angle_main);
//             force_meter_pointer_y1b = force_meter_y1 + lengthdir_y(finger_size,force_meter_angle_main);
//
//             force_meter_arrow_x1 = force_meter_arrow_x1 + lengthdir_x(finger_size,force_meter_angle_main);
//             force_meter_arrow_y1 = force_meter_arrow_y1 + lengthdir_y(finger_size,force_meter_angle_main);
//
//             force_meter_arrow_x2 = force_meter_arrow_x2 + lengthdir_x(finger_size,force_meter_angle_main);
//             force_meter_arrow_y2 = force_meter_arrow_y2 + lengthdir_y(finger_size,force_meter_angle_main);
//
//             force_meter_arrow_x3 = force_meter_arrow_x3 + lengthdir_x(finger_size,force_meter_angle_main);
//             force_meter_arrow_y3 = force_meter_arrow_y3 + lengthdir_y(finger_size,force_meter_angle_main);
//         }
//
//
function gml_Script_scr_meter_ctrl_body_triangle(_inst, _other) {
    _inst.gmlforce_meter_angle_main = point_direction(_inst.gmlforce_meter_x2, _inst.gmlforce_meter_y2, _inst.gmlforce_meter_x1, _inst.gmlforce_meter_y1);
    _inst.gmlforce_meter_lenght = point_distance(_inst.gmlforce_meter_x2, _inst.gmlforce_meter_y2, _inst.gmlforce_meter_x1, _inst.gmlforce_meter_y1);
    _inst.gmlforce_meter_arrow_x1 = (_inst.gmlforce_meter_x1 + lengthdir_x(_inst.gmlforce_meter_lenght, _inst.gmlforce_meter_angle_main));
    _inst.gmlforce_meter_arrow_y1 = (_inst.gmlforce_meter_y1 + lengthdir_y(_inst.gmlforce_meter_lenght, _inst.gmlforce_meter_angle_main));
    _inst.gmlforce_meter_angle_2 = (_inst.gmlforce_meter_angle_main + 90);
    _inst.gmlforce_meter_side_lenght_2 = ceil((_inst.gmlforce_meter_lenght * 0.1));
    if ((_inst.gmlforce_meter_side_lenght_2 < 2)) {
        {
            _inst.gmlforce_meter_side_lenght_2 = 1;
        };
    } else {
        if ((_inst.gmlforce_meter_side_lenght_2 > 10)) {
            {
                _inst.gmlforce_meter_side_lenght_2 = 10;
            };
        };
    };
    _inst.gmlforce_meter_arrow_x2 = (_inst.gmlforce_meter_x1 + lengthdir_x(_inst.gmlforce_meter_side_lenght_2, _inst.gmlforce_meter_angle_2));
    _inst.gmlforce_meter_arrow_y2 = (_inst.gmlforce_meter_y1 + lengthdir_y(_inst.gmlforce_meter_side_lenght_2, _inst.gmlforce_meter_angle_2));
    _inst.gmlforce_meter_angle_3 = (_inst.gmlforce_meter_angle_main - 90);
    _inst.gmlforce_meter_side_lenght_3 = (_inst.gmlforce_meter_lenght * 0.1);
    if ((_inst.gmlforce_meter_side_lenght_3 < 1)) {
        {
            _inst.gmlforce_meter_side_lenght_3 = 1;
        };
    } else {
        if ((_inst.gmlforce_meter_side_lenght_3 > 10)) {
            {
                _inst.gmlforce_meter_side_lenght_3 = 10;
            };
        };
    };
    _inst.gmlforce_meter_arrow_x3 = (_inst.gmlforce_meter_x1 + lengthdir_x(_inst.gmlforce_meter_side_lenght_3, _inst.gmlforce_meter_angle_3));
    _inst.gmlforce_meter_arrow_y3 = (_inst.gmlforce_meter_y1 + lengthdir_y(_inst.gmlforce_meter_side_lenght_3, _inst.gmlforce_meter_angle_3));
    _inst.gmlfinger_displace = 1 ? 1 : 0;
    if (_inst.gmlfinger_displace > 0.5) {
        {
            _inst.gmlfinger_size = (100 / global.gmldisplay_ratio);
            _inst.gmlforce_meter_pointer_x1b = (_inst.gmlforce_meter_x1 + lengthdir_x(_inst.gmlfinger_size, _inst.gmlforce_meter_angle_main));
            _inst.gmlforce_meter_pointer_y1b = (_inst.gmlforce_meter_y1 + lengthdir_y(_inst.gmlfinger_size, _inst.gmlforce_meter_angle_main));
            _inst.gmlforce_meter_arrow_x1 = (_inst.gmlforce_meter_arrow_x1 + lengthdir_x(_inst.gmlfinger_size, _inst.gmlforce_meter_angle_main));
            _inst.gmlforce_meter_arrow_y1 = (_inst.gmlforce_meter_arrow_y1 + lengthdir_y(_inst.gmlfinger_size, _inst.gmlforce_meter_angle_main));
            _inst.gmlforce_meter_arrow_x2 = (_inst.gmlforce_meter_arrow_x2 + lengthdir_x(_inst.gmlfinger_size, _inst.gmlforce_meter_angle_main));
            _inst.gmlforce_meter_arrow_y2 = (_inst.gmlforce_meter_arrow_y2 + lengthdir_y(_inst.gmlfinger_size, _inst.gmlforce_meter_angle_main));
            _inst.gmlforce_meter_arrow_x3 = (_inst.gmlforce_meter_arrow_x3 + lengthdir_x(_inst.gmlfinger_size, _inst.gmlforce_meter_angle_main));
            _inst.gmlforce_meter_arrow_y3 = (_inst.gmlforce_meter_arrow_y3 + lengthdir_y(_inst.gmlfinger_size, _inst.gmlforce_meter_angle_main));
        };
    };
}

// #####################################################################################################
// /// scr_meter_ctrl_pointer_triangle()
//
//     var triangle_size = 20;
//     var displace_dist = 30;
//
//     // if (( global.view_w ) or ( global.view_w <= global.board_w )){ var triangle_size = 20; }
//
//     if (( global.platform_config = 2 ) or (( global.platform_config = 1 ) and ( global.platform_config_sub = 2 ))){
//
//         var triangle_size = 10;
//         var displace_dist = 15;
//     }
//
//     var force_meter_tripointer_angle = force_meter_angle_main;
//     force_meter_tripointer_x1 = force_meter_x1 + lengthdir_x(triangle_size,force_meter_tripointer_angle);
//     force_meter_tripointer_y1 = force_meter_y1 + lengthdir_y(triangle_size,force_meter_tripointer_angle);
//
//     var force_meter_tripointer_angle = force_meter_angle_main - 90;
//     force_meter_tripointer_x2 = force_meter_x1 + lengthdir_x(triangle_size,force_meter_tripointer_angle);
//     force_meter_tripointer_y2 = force_meter_y1 + lengthdir_y(triangle_size,force_meter_tripointer_angle);
//
//     var force_meter_tripointer_angle = force_meter_angle_main + 90;
//     force_meter_tripointer_x3 = force_meter_x1 + lengthdir_x(triangle_size,force_meter_tripointer_angle);
//     force_meter_tripointer_y3 = force_meter_y1 + lengthdir_y(triangle_size,force_meter_tripointer_angle);
//
//
//     force_meter_tripointer_x1 = force_meter_tripointer_x1 + lengthdir_x(displace_dist,force_meter_angle_main);
//     force_meter_tripointer_y1 = force_meter_tripointer_y1 + lengthdir_y(displace_dist,force_meter_angle_main);
//     force_meter_tripointer_x2 = force_meter_tripointer_x2 + lengthdir_x(displace_dist,force_meter_angle_main);
//     force_meter_tripointer_y2 = force_meter_tripointer_y2 + lengthdir_y(displace_dist,force_meter_angle_main);
//     force_meter_tripointer_x3 = force_meter_tripointer_x3 + lengthdir_x(displace_dist,force_meter_angle_main);
//     force_meter_tripointer_y3 = force_meter_tripointer_y3 + lengthdir_y(displace_dist,force_meter_angle_main);
//
//     pointer_triangle_size = triangle_size;
//     pointer_triangle_displace = displace_dist;
//
//
//
function gml_Script_scr_meter_ctrl_pointer_triangle(_inst, _other) {
    var gmltriangle_size = 20;
    var gmldisplace_dist = 30;
    if ((((global.gmlplatform_config == 2)) || ((((global.gmlplatform_config == 1)) && ((global.gmlplatform_config_sub == 2)))))) {
        {
            var gmltriangle_size = 10;
            var gmldisplace_dist = 15;
        };
    };
    var gmlforce_meter_tripointer_angle = _inst.gmlforce_meter_angle_main;
    _inst.gmlforce_meter_tripointer_x1 = (_inst.gmlforce_meter_x1 + lengthdir_x(gmltriangle_size, gmlforce_meter_tripointer_angle));
    _inst.gmlforce_meter_tripointer_y1 = (_inst.gmlforce_meter_y1 + lengthdir_y(gmltriangle_size, gmlforce_meter_tripointer_angle));
    var gmlforce_meter_tripointer_angle = (_inst.gmlforce_meter_angle_main - 90);
    _inst.gmlforce_meter_tripointer_x2 = (_inst.gmlforce_meter_x1 + lengthdir_x(gmltriangle_size, gmlforce_meter_tripointer_angle));
    _inst.gmlforce_meter_tripointer_y2 = (_inst.gmlforce_meter_y1 + lengthdir_y(gmltriangle_size, gmlforce_meter_tripointer_angle));
    var gmlforce_meter_tripointer_angle = (_inst.gmlforce_meter_angle_main + 90);
    _inst.gmlforce_meter_tripointer_x3 = (_inst.gmlforce_meter_x1 + lengthdir_x(gmltriangle_size, gmlforce_meter_tripointer_angle));
    _inst.gmlforce_meter_tripointer_y3 = (_inst.gmlforce_meter_y1 + lengthdir_y(gmltriangle_size, gmlforce_meter_tripointer_angle));
    _inst.gmlforce_meter_tripointer_x1 = (_inst.gmlforce_meter_tripointer_x1 + lengthdir_x(gmldisplace_dist, _inst.gmlforce_meter_angle_main));
    _inst.gmlforce_meter_tripointer_y1 = (_inst.gmlforce_meter_tripointer_y1 + lengthdir_y(gmldisplace_dist, _inst.gmlforce_meter_angle_main));
    _inst.gmlforce_meter_tripointer_x2 = (_inst.gmlforce_meter_tripointer_x2 + lengthdir_x(gmldisplace_dist, _inst.gmlforce_meter_angle_main));
    _inst.gmlforce_meter_tripointer_y2 = (_inst.gmlforce_meter_tripointer_y2 + lengthdir_y(gmldisplace_dist, _inst.gmlforce_meter_angle_main));
    _inst.gmlforce_meter_tripointer_x3 = (_inst.gmlforce_meter_tripointer_x3 + lengthdir_x(gmldisplace_dist, _inst.gmlforce_meter_angle_main));
    _inst.gmlforce_meter_tripointer_y3 = (_inst.gmlforce_meter_tripointer_y3 + lengthdir_y(gmldisplace_dist, _inst.gmlforce_meter_angle_main));
    _inst.gmlpointer_triangle_size = gmltriangle_size;
    _inst.gmlpointer_triangle_displace = gmldisplace_dist;
}

// #####################################################################################################
// /// scr_meter_draw_body_arrow()
//
//     draw_set_alpha(1);
//
//     draw_line_width_colour(force_meter_pointer_x1b,force_meter_pointer_y1b,force_meter_arrow_x1,force_meter_arrow_y1,ceil(meter_line_gerth*game_ratio),force_meter_color,force_meter_color);
//
//     draw_triangle_colour(force_meter_tip_x1,force_meter_tip_y1,force_meter_tip_x2,force_meter_tip_y2,force_meter_tip_x3,force_meter_tip_y3,force_meter_color,force_meter_color,force_meter_color,false);
//
//
function gml_Script_scr_meter_draw_body_arrow(_inst, _other) {
    draw_set_alpha(1);
    draw_line_width_colour(_inst.gmlforce_meter_pointer_x1b, _inst.gmlforce_meter_pointer_y1b, _inst.gmlforce_meter_arrow_x1, _inst.gmlforce_meter_arrow_y1, ceil((_inst.gmlmeter_line_gerth * _inst.gmlgame_ratio)), _inst.gmlforce_meter_color, _inst.gmlforce_meter_color);
    draw_triangle_colour(_inst.gmlforce_meter_tip_x1, _inst.gmlforce_meter_tip_y1, _inst.gmlforce_meter_tip_x2, _inst.gmlforce_meter_tip_y2, _inst.gmlforce_meter_tip_x3, _inst.gmlforce_meter_tip_y3, _inst.gmlforce_meter_color, _inst.gmlforce_meter_color, _inst.gmlforce_meter_color, 0);
}

// #####################################################################################################
// /// scr_meter_draw_body_dashed()
//
//     var force_meter_dash_angle = point_direction(force_meter_x1,force_meter_y1,force_meter_x2,force_meter_y2);
//
//     var force_meter_dash_and_gap =  force_meter_dash_size + force_meter_dash_gap;
//
//     var lengthdir_x_add = lengthdir_x(force_meter_dash_size,force_meter_dash_angle);
//     var lengthdir_y_add = lengthdir_y(force_meter_dash_size,force_meter_dash_angle);
//
//     // Dashes
//
//         var dash_count_max = floor( point_distance(force_meter_pointer_x1,force_meter_pointer_y1,force_meter_pointer_x2,force_meter_pointer_y2) / ( force_meter_dash_and_gap ));
//
//         var dash_x1 = force_meter_pointer_x1;
//         var dash_y1 = force_meter_pointer_y1;
//         var dash_x2 = dash_x1 + lengthdir_x_add;
//         var dash_y2 = dash_y1 + lengthdir_y_add;
//
//         var meter_rev_x1 = dash_x1;
//         var meter_rev_y1 = dash_y1;
//
//         var dash_count = 1;
//
//         repeat ( dash_count_max ){
//
//             draw_line_width_colour(dash_x1,dash_y1,dash_x2,dash_y2,force_meter_dash_gerth,force_meter_color,force_meter_color);
//
//             var dash_x1 = force_meter_pointer_x1 + lengthdir_x(((force_meter_dash_gap+force_meter_dash_size)*dash_count),force_meter_dash_angle);
//             var dash_y1 = force_meter_pointer_y1 + lengthdir_y(((force_meter_dash_gap+force_meter_dash_size)*dash_count),force_meter_dash_angle);
//             var dash_x2 = dash_x1 + lengthdir_x_add;
//             var dash_y2 = dash_y1 + lengthdir_y_add;
//
//             dash_count += 1;
//         }
//
//
//     // Reverse meter
//
//         var meter_rev_len = point_distance(meter_rev_x1,meter_rev_y1,force_meter_x2,force_meter_y2);
//         var meter_rev_angle = point_direction(force_meter_x2,force_meter_y2,meter_rev_x1,meter_rev_y1);
//         var meter_rev_color = force_meter_color_base;
//         var meter_rev_color_merge_num = 0
//
//         if ( force_meter_ready ){ meter_rev_color = c_lime; }
//
//         meter_rev_x1 = meter_rev_x1 + lengthdir_x( floor(( pointer_triangle_size + pointer_triangle_displace ) * 1.5 ),meter_rev_angle);
//         meter_rev_y1 = meter_rev_y1 + lengthdir_y( floor(( pointer_triangle_size + pointer_triangle_displace ) * 1.5 ),meter_rev_angle);
//
//         repeat(dash_count_max){
//
//             draw_circle_colour(meter_rev_x1,meter_rev_y1,(force_meter_dash_dot_size/2)+3,bg_color,bg_color,false);
//
//             draw_circle_colour(meter_rev_x1,meter_rev_y1,(force_meter_dash_dot_size/2),meter_rev_color,meter_rev_color,false);
//
//             meter_rev_x1 = meter_rev_x1 + lengthdir_x(( force_meter_dash_and_gap ),meter_rev_angle);
//             meter_rev_y1 = meter_rev_y1 + lengthdir_y(( force_meter_dash_and_gap ),meter_rev_angle);
//
//             if ( force_meter_ready ){
//
//                 meter_rev_color_merge_num += 0.15;
//
//                 if ( meter_rev_color_merge_num > 1 ){ meter_rev_color_merge_num = 1; }
//
//                 meter_rev_color = merge_colour(c_lime,c_red,meter_rev_color_merge_num);
//             }
//         }
//
//
//     // Dots
//
//         draw_circle_colour(force_meter_pointer_x1,force_meter_pointer_y1,(force_meter_dash_dot_size/2),force_meter_color,force_meter_color,false);
//
//         draw_circle_colour(force_meter_pointer_x2,force_meter_pointer_y2,(force_meter_dash_dot_size/2),force_meter_color,force_meter_color,false);
//
//
function gml_Script_scr_meter_draw_body_dashed(_inst, _other) {
    var gmlforce_meter_dash_angle = point_direction(_inst.gmlforce_meter_x1, _inst.gmlforce_meter_y1, _inst.gmlforce_meter_x2, _inst.gmlforce_meter_y2);
    var gmlforce_meter_dash_and_gap = (_inst.gmlforce_meter_dash_size + _inst.gmlforce_meter_dash_gap);
    var gmllengthdir_x_add = lengthdir_x(_inst.gmlforce_meter_dash_size, gmlforce_meter_dash_angle);
    var gmllengthdir_y_add = lengthdir_y(_inst.gmlforce_meter_dash_size, gmlforce_meter_dash_angle);
    var gmldash_count_max = floor((point_distance(_inst.gmlforce_meter_pointer_x1, _inst.gmlforce_meter_pointer_y1, _inst.gmlforce_meter_pointer_x2, _inst.gmlforce_meter_pointer_y2) / gmlforce_meter_dash_and_gap));
    var gmldash_x1 = _inst.gmlforce_meter_pointer_x1;
    var gmldash_y1 = _inst.gmlforce_meter_pointer_y1;
    var gmldash_x2 = (gmldash_x1 + gmllengthdir_x_add);
    var gmldash_y2 = (gmldash_y1 + gmllengthdir_y_add);
    var gmlmeter_rev_x1 = gmldash_x1;
    var gmlmeter_rev_y1 = gmldash_y1;
    var gmldash_count = 1;
    for (var __yy__v12 = 0, __yy__v13 = ~~(gmldash_count_max); __yy__v12 < __yy__v13; __yy__v12++) {
        {
            draw_line_width_colour(gmldash_x1, gmldash_y1, gmldash_x2, gmldash_y2, _inst.gmlforce_meter_dash_gerth, _inst.gmlforce_meter_color, _inst.gmlforce_meter_color);
            var gmldash_x1 = (_inst.gmlforce_meter_pointer_x1 + lengthdir_x(((_inst.gmlforce_meter_dash_gap + _inst.gmlforce_meter_dash_size) * gmldash_count), gmlforce_meter_dash_angle));
            var gmldash_y1 = (_inst.gmlforce_meter_pointer_y1 + lengthdir_y(((_inst.gmlforce_meter_dash_gap + _inst.gmlforce_meter_dash_size) * gmldash_count), gmlforce_meter_dash_angle));
            var gmldash_x2 = (gmldash_x1 + gmllengthdir_x_add);
            var gmldash_y2 = (gmldash_y1 + gmllengthdir_y_add);
            gmldash_count += 1;
        }
    };
    var gmlmeter_rev_len = point_distance(gmlmeter_rev_x1, gmlmeter_rev_y1, _inst.gmlforce_meter_x2, _inst.gmlforce_meter_y2);
    var gmlmeter_rev_angle = point_direction(_inst.gmlforce_meter_x2, _inst.gmlforce_meter_y2, gmlmeter_rev_x1, gmlmeter_rev_y1);
    var gmlmeter_rev_color = _inst.gmlforce_meter_color_base;
    var gmlmeter_rev_color_merge_num = 0;
    if (_inst.gmlforce_meter_ready > 0.5) {
        {
            gmlmeter_rev_color = 65280;
        };
    };
    gmlmeter_rev_x1 = (gmlmeter_rev_x1 + lengthdir_x(floor(((_inst.gmlpointer_triangle_size + _inst.gmlpointer_triangle_displace) * 1.5)), gmlmeter_rev_angle));
    gmlmeter_rev_y1 = (gmlmeter_rev_y1 + lengthdir_y(floor(((_inst.gmlpointer_triangle_size + _inst.gmlpointer_triangle_displace) * 1.5)), gmlmeter_rev_angle));
    for (var __yy__v14 = 0, __yy__v15 = ~~(gmldash_count_max); __yy__v14 < __yy__v15; __yy__v14++) {
        {
            draw_circle_colour(gmlmeter_rev_x1, gmlmeter_rev_y1, ((_inst.gmlforce_meter_dash_dot_size / 2) + 3), _inst.gmlbg_color, _inst.gmlbg_color, 0);
            draw_circle_colour(gmlmeter_rev_x1, gmlmeter_rev_y1, (_inst.gmlforce_meter_dash_dot_size / 2), gmlmeter_rev_color, gmlmeter_rev_color, 0);
            gmlmeter_rev_x1 = (gmlmeter_rev_x1 + lengthdir_x(gmlforce_meter_dash_and_gap, gmlmeter_rev_angle));
            gmlmeter_rev_y1 = (gmlmeter_rev_y1 + lengthdir_y(gmlforce_meter_dash_and_gap, gmlmeter_rev_angle));
            if (_inst.gmlforce_meter_ready > 0.5) {
                {
                    gmlmeter_rev_color_merge_num += 0.15;
                    if ((gmlmeter_rev_color_merge_num > 1)) {
                        {
                            gmlmeter_rev_color_merge_num = 1;
                        };
                    };
                    gmlmeter_rev_color = merge_colour(65280, 255, gmlmeter_rev_color_merge_num);
                };
            };
        }
    };
    draw_circle_colour(_inst.gmlforce_meter_pointer_x1, _inst.gmlforce_meter_pointer_y1, (_inst.gmlforce_meter_dash_dot_size / 2), _inst.gmlforce_meter_color, _inst.gmlforce_meter_color, 0);
    draw_circle_colour(_inst.gmlforce_meter_pointer_x2, _inst.gmlforce_meter_pointer_y2, (_inst.gmlforce_meter_dash_dot_size / 2), _inst.gmlforce_meter_color, _inst.gmlforce_meter_color, 0);
}

// #####################################################################################################
// /// scr_meter_draw_body_saber()
//
// if ( force_meter_ready ){
//
//     var meter_line_gerth = 4;
//     var meter_glow_gerth2 = 6;
//     var meter_glow_gerth3 = 10;
//     var meter_glow_gerth4 = 18;
//
//     if ( global.view_w <= global.board_w ){
//
//         meter_line_gerth = 5;
//         meter_glow_gerth2 = 7;
//         meter_glow_gerth3 = 11;
//         meter_glow_gerth4 = 19;
//     }
//
//     var saber_color1 = make_colour_rgb(255,255,255);
//     var saber_color2 = make_colour_rgb(75,200,44);
//     var saber_color3 = make_colour_rgb(64,145,44);
//     var saber_color4 = make_colour_rgb(46,59,44);
//
//     var saber_x1 = force_meter_pointer_x1; // force_meter_x1;
//     var saber_y1 = force_meter_pointer_y1; // force_meter_y1;
//     var saber_x2 = force_meter_pointer_x2; // force_meter_arrow_x1;
//     var saber_y2 = force_meter_pointer_y2; // force_meter_arrow_y1;
//
//     draw_set_alpha(1);
//
//     // draw_line_width_colour(saber_x1,saber_y1,saber_x2,saber_y2,ceil(meter_line_gerth*game_ratio),c_white,c_white);
//     // draw_line_width_colour(saber_x1,saber_y1,saber_x1,force_meter_arrow_y1,ceil(meter_line_gerth*game_ratio),c_red,c_red);
//     // draw_line_width_colour(saber_x1,saber_y1,saber_x2,saber_y2,ceil(meter_line_gerth*game_ratio),c_red,c_red);
//     // draw_line_width_colour(saber_x1,saber_y1,force_meter_arrow_x3,force_meter_arrow_y3,ceil(meter_line_gerth*game_ratio),c_red,c_red);
//
//     // Mouse Dot
//
//         // draw_line_width_colour(saber_x1,saber_y1,force_meter_x2,force_meter_y2,ceil(meter_line_gerth*game_ratio),saber_color1,saber_color1);
//
//         // draw_circle_colour(force_meter_x2,force_meter_y2,ceil(meter_glow_gerth4)/2,saber_color1,saber_color1,false);
//
//
//     // Glow 4
//
//         draw_line_width_colour(saber_x1,saber_y1,saber_x2,saber_y2,meter_glow_gerth4,saber_color4,saber_color4);
//
//         draw_circle_colour(saber_x1,saber_y1,(meter_glow_gerth4-1/2),saber_color4,saber_color4,false);
//         draw_circle_colour(saber_x2,saber_y2,(meter_glow_gerth4-1/2),saber_color4,saber_color4,false);
//
//
//     // Glow 3
//
//         draw_line_width_colour(saber_x1,saber_y1,saber_x2,saber_y2,meter_glow_gerth3,saber_color3,saber_color3);
//
//         draw_circle_colour(saber_x1,saber_y1,(meter_glow_gerth3-1/2),saber_color3,saber_color3,false);
//         draw_circle_colour(saber_x2,saber_y2,(meter_glow_gerth3-1/2),saber_color3,saber_color3,false);
//
//
//     // Glow 2
//
//         draw_line_width_colour(saber_x1,saber_y1,saber_x2,saber_y2,meter_glow_gerth2,saber_color2,saber_color2);
//
//         draw_circle_colour(saber_x1,saber_y1,(meter_glow_gerth2-1/2),saber_color2,saber_color2,false);
//         draw_circle_colour(saber_x2,saber_y2,(meter_glow_gerth2-1/2),saber_color2,saber_color2,false);
//
//
//     // Glow 1
//
//         draw_line_width_colour(saber_x1,saber_y1,saber_x2,saber_y2,meter_line_gerth,saber_color1,saber_color1);
//
//         draw_circle_colour(saber_x1,saber_y1,(meter_line_gerth-1/2),saber_color1,saber_color1,false);
//         draw_circle_colour(saber_x2,saber_y2,(meter_line_gerth-1/2),saber_color1,saber_color1,false);
// }
//
function gml_Script_scr_meter_draw_body_saber(_inst, _other) {
    if (_inst.gmlforce_meter_ready > 0.5) {
        {
            var gmlmeter_line_gerth = 4;
            var gmlmeter_glow_gerth2 = 6;
            var gmlmeter_glow_gerth3 = 10;
            var gmlmeter_glow_gerth4 = 18;
            if ((global.gmlview_w <= global.gmlboard_w)) {
                {
                    gmlmeter_line_gerth = 5;
                    gmlmeter_glow_gerth2 = 7;
                    gmlmeter_glow_gerth3 = 11;
                    gmlmeter_glow_gerth4 = 19;
                };
            };
            var gmlsaber_color1 = make_colour_rgb(255, 255, 255);
            var gmlsaber_color2 = make_colour_rgb(75, 200, 44);
            var gmlsaber_color3 = make_colour_rgb(64, 145, 44);
            var gmlsaber_color4 = make_colour_rgb(46, 59, 44);
            var gmlsaber_x1 = _inst.gmlforce_meter_pointer_x1;
            var gmlsaber_y1 = _inst.gmlforce_meter_pointer_y1;
            var gmlsaber_x2 = _inst.gmlforce_meter_pointer_x2;
            var gmlsaber_y2 = _inst.gmlforce_meter_pointer_y2;
            draw_set_alpha(1);
            draw_line_width_colour(gmlsaber_x1, gmlsaber_y1, gmlsaber_x2, gmlsaber_y2, gmlmeter_glow_gerth4, gmlsaber_color4, gmlsaber_color4);
            draw_circle_colour(gmlsaber_x1, gmlsaber_y1, (gmlmeter_glow_gerth4 - 0.5), gmlsaber_color4, gmlsaber_color4, 0);
            draw_circle_colour(gmlsaber_x2, gmlsaber_y2, (gmlmeter_glow_gerth4 - 0.5), gmlsaber_color4, gmlsaber_color4, 0);
            draw_line_width_colour(gmlsaber_x1, gmlsaber_y1, gmlsaber_x2, gmlsaber_y2, gmlmeter_glow_gerth3, gmlsaber_color3, gmlsaber_color3);
            draw_circle_colour(gmlsaber_x1, gmlsaber_y1, (gmlmeter_glow_gerth3 - 0.5), gmlsaber_color3, gmlsaber_color3, 0);
            draw_circle_colour(gmlsaber_x2, gmlsaber_y2, (gmlmeter_glow_gerth3 - 0.5), gmlsaber_color3, gmlsaber_color3, 0);
            draw_line_width_colour(gmlsaber_x1, gmlsaber_y1, gmlsaber_x2, gmlsaber_y2, gmlmeter_glow_gerth2, gmlsaber_color2, gmlsaber_color2);
            draw_circle_colour(gmlsaber_x1, gmlsaber_y1, (gmlmeter_glow_gerth2 - 0.5), gmlsaber_color2, gmlsaber_color2, 0);
            draw_circle_colour(gmlsaber_x2, gmlsaber_y2, (gmlmeter_glow_gerth2 - 0.5), gmlsaber_color2, gmlsaber_color2, 0);
            draw_line_width_colour(gmlsaber_x1, gmlsaber_y1, gmlsaber_x2, gmlsaber_y2, gmlmeter_line_gerth, gmlsaber_color1, gmlsaber_color1);
            draw_circle_colour(gmlsaber_x1, gmlsaber_y1, (gmlmeter_line_gerth - 0.5), gmlsaber_color1, gmlsaber_color1, 0);
            draw_circle_colour(gmlsaber_x2, gmlsaber_y2, (gmlmeter_line_gerth - 0.5), gmlsaber_color1, gmlsaber_color1, 0);
        };
    };
}

// #####################################################################################################
// /// scr_meter_sizes()
//
// if (( global.platform_config = 2 ) or (( global.platform_config = 1 ) and ( global.platform_config_sub = 2 ))){ // global.view_w <= global.board_w
//
//     force_meter_dash_gerth = 3;
//     force_meter_dash_dot_size = 9;
// }
// else if ( global.game_lowres ){
//
//     force_meter_dash_gerth = 4;
//     force_meter_dash_dot_size = 12;
// }
//
//
function gml_Script_scr_meter_sizes(_inst, _other) {
    if ((((global.gmlplatform_config == 2)) || ((((global.gmlplatform_config == 1)) && ((global.gmlplatform_config_sub == 2)))))) {
        {
            _inst.gmlforce_meter_dash_gerth = 3;
            _inst.gmlforce_meter_dash_dot_size = 9;
        };
    } else {
        if (global.gmlgame_lowres > 0.5) {
            {
                _inst.gmlforce_meter_dash_gerth = 4;
                _inst.gmlforce_meter_dash_dot_size = 12;
            };
        };
    };
}

// #####################################################################################################
// /// mhtml5_center_canvas()
//
// // Center the game in the browser window
//
//     if ( os_browser != browser_not_a_browser ){
//
//         window_set_position( floor(( browser_width / 2 ) - ( global.win_w / 2 )), floor(( browser_height / 2 ) - ( global.win_h / 2 )) );
//     }
//
//
function gml_Script_mhtml5_center_canvas(_inst, _other) {
    if ((g_pBuiltIn.get_os_browser() != (-1))) {
        {
            window_set_position(floor(((g_pBuiltIn.get_browser_width() / 2) - (global.gmlwin_w / 2))), floor(((g_pBuiltIn.get_browser_height() / 2) - (global.gmlwin_h / 2))));
        };
    };
}

// #####################################################################################################
// /// mhtml5_check_orientation()
//
// // Returns 0 if the user has their phone in landscape, returns 1 if the user has their phone in portrait
//
// if ( browser_width > browser_height ) {
//
//     return 0;
//
// } else {
//
//     return 1;
//
// }
//
function gml_Script_mhtml5_check_orientation(_inst, _other) {
    if ((g_pBuiltIn.get_browser_width() > g_pBuiltIn.get_browser_height())) {
        {
            return 0;
        };
    } else {
        {
            return 1;
        };
    };
}

// #####################################################################################################
// // draw the warning for flipping the phone back to the right orientation
// // argument0 - expected game orientation Landscape (0) or Portrait (1)
//
// draw_set_color(c_dkgray);
//
// draw_rectangle(0,0,display_get_gui_width(),display_get_gui_height(),0);
//
// draw_set_halign(fa_center);
//
// draw_set_valign(fa_middle);
//
// draw_set_color(c_white);
//
// if (argument0==0) {
//
//     draw_text(display_get_gui_width()/2,64,"Please return to landscape#mode to play the game");
// } else {
//
//     draw_text(display_get_gui_width()/2,64,"Please return to portrait#mode to play the game");
// }
//
// draw_set_halign(fa_left);
//
// draw_set_valign(fa_top);
//
//
function gml_Script_mhtml5_draw_flipwarning(_inst, _other, argument0) {
    draw_set_color(4210752);
    draw_rectangle(0, 0, display_get_gui_width(), display_get_gui_height(), 0);
    draw_set_halign(1);
    draw_set_valign(1);
    draw_set_color(16777215);
    if ((argument0 == 0)) {
        {
            draw_text((display_get_gui_width() / 2), 64, "Please return to landscape#mode to play the game");
        };
    } else {
        {
            draw_text((display_get_gui_width() / 2), 64, "Please return to portrait#mode to play the game");
        };
    };
    draw_set_halign(0);
    draw_set_valign(0);
}

// #####################################################################################################
// // Hide the address bar on iOS
//
// // exten_hide_addressbar();
//
function gml_Script_mhtml5_hide_addressbar(_inst, _other) {}

// #####################################################################################################
// /// mhtml5_resize_screen(orientation,force_fullscreen);
//
// /*
//     // TERMS //
//
//     display_w = tamaño maximo que puede ser el juego ( PC: monitor, html5: browser window )
//
//     window_w = tamaño de la ventana del juego ( window_w = gui_w = port_w = canvas_w )
//
//     view_w = tamaño del espacio que se dibuja del juego
//
//     board_w = tamaño del juego donde se calcula la fisica
// */
//
// // Initialize
//
//     var alignment = argument0;
//     var force_fullscreen = argument1; // Resize HTML Canvas
//
//     // browser
//     var display_w = browser_width;
//     var display_h = browser_height;
//
//     // window base: 960 x 640
//     var win_w_base = 960;
//     var win_h_base = 540;
//
//     // window
//     var win_w = 0; // also: gui_w
//     var win_h = 0; // also: gui_h
//
//     var view_w = 0;
//     var view_h = 0;
//
//     // room ( board ): 480 x 320
//     var board_w = 480;
//     var board_h = 270;
//
//     // global.game_lowres = false;
//
// /**/
// if ( argument0 == 0 ){
// // Landscape
//
//     var display_ratio = ( board_h / board_w );
//
//     var canvas_w = display_w;
//     var canvas_h = floor( canvas_w * display_ratio ); // height based on aspect ratio
//
//     var switch_orientation = false;
//
//     if ( display_h < canvas_h ){
//
//         display_ratio = ( board_w / board_h );
//
//         canvas_h = display_h;
//         canvas_w = floor( canvas_h * display_ratio );
//
//         switch_orientation = true;
//     }
//
//     view_w = canvas_w;
//     view_h = canvas_h;
//
//     if ( canvas_w < win_w_base ){
//
//         if ( !switch_orientation ){
//
//             view_w = win_w_base;
//             view_h = floor( view_w * display_ratio ); // height based on aspect ratio
//         }
//         else {
//
//             view_h = win_h_base;
//             view_w = floor( view_h * display_ratio ); // width based on aspect ratio
//         }
//     }
// }
// else {
// // Portrait
//
//     var display_ratio = ( board_w / board_h );
//
//     var canvas_h = display_h;
//     var canvas_w = floor( canvas_h * display_ratio ); // width based on aspect ratio
//
//     if ( display_w < canvas_w ){
//
//         display_ratio = ( board_h / board_w );
//
//         canvas_w = display_w;
//         canvas_h = floor( canvas_w * display_ratio );
//     }
//
//     view_w = canvas_w;
//     view_h = canvas_h;
//
//     if ( canvas_h < board_h ){
//
//         view_h = board_h;
//         view_w = floor( view_h * display_ratio ); // width based on aspect ratio
//     }
// }
//
// // if (( global.platform_config == 1 ) and ( win_h < win_h_base )){ global.game_lowres = true; }
//
//
// win_w = canvas_w;
// win_h = canvas_h;
//
// room_set_view(room_first_load, 0, 1, 0, 0,view_w, view_h, 0, 0, win_w, win_h, 0,0, -1, -1, -1);
//
// room_set_view(room_main, 0, 1, 0, 0,view_w, view_h, 0, 0, win_w, win_h, 0,0, -1, -1, -1);
//
// room_set_view(room_game, 0, 1, 0, 0,view_w, view_h, 0, 0, win_w, win_h, 0,0, -1, -1, -1);
//
// display_set_gui_size(win_w,win_h);
//
// window_set_size(win_w,win_h);
//
// surface_resize(application_surface, win_w, win_h);
//
// js_changeCanvasClass();
//
//
//
//
// // Globals
//
//     global.board_w = board_w;
//     global.board_h = board_h;
//
//     global.win_w_base = win_w_base;
//     global.win_h_base = win_h_base;
//
//     global.view_w = view_w;
//     global.view_h = view_h;
//
//     global.win_w = canvas_w; // also: gui_w
//     global.win_h = canvas_h; // also: gui_h
//
//     global.display_ratio = ( view_w / board_w );
//
//
// // Check Low Resolution
//
//     scr_lowres_check(global.win_h,win_h_base);
//
//
// // Update World Variables
//
//     if ( room == room_main ){
//
//         with ( obj_menu_main ){
//
//             scr_color_world();
//
//             circle_fade_size_add = ( global.win_w / 30 );
//
//             // scr_world_ratio();
//         }
//     }
//     else if ( room == room_game ){
//
//         with ( obj_ctrl_board ){
//
//             scr_color_world();
//
//             // scr_world_ratio();
//         }
//     }
//
//
// // Scroll Home
//
//     js_Dogfire_ScrollHome();
//
//
function gml_Script_mhtml5_resize_screen(_inst, _other, argument0, argument1) {
    var gmlalignment = argument0;
    var gmlforce_fullscreen = argument1;
    var gmldisplay_w = g_pBuiltIn.get_browser_width();
    var gmldisplay_h = g_pBuiltIn.get_browser_height();
    var gmlwin_w_base = 960;
    var gmlwin_h_base = 540;
    var gmlwin_w = 0;
    var gmlwin_h = 0;
    var gmlview_w = 0;
    var gmlview_h = 0;
    var gmlboard_w = 480;
    var gmlboard_h = 270;
    if ((argument0 == 0)) {
        {
            var gmldisplay_ratio = (gmlboard_h / gmlboard_w);
            var gmlcanvas_w = gmldisplay_w;
            var gmlcanvas_h = floor((gmlcanvas_w * gmldisplay_ratio));
            var gmlswitch_orientation = 0 ? 1 : 0;
            if ((gmldisplay_h < gmlcanvas_h)) {
                {
                    gmldisplay_ratio = (gmlboard_w / gmlboard_h);
                    gmlcanvas_h = gmldisplay_h;
                    gmlcanvas_w = floor((gmlcanvas_h * gmldisplay_ratio));
                    gmlswitch_orientation = 1 ? 1 : 0;
                };
            };
            gmlview_w = gmlcanvas_w;
            gmlview_h = gmlcanvas_h;
            if ((gmlcanvas_w < gmlwin_w_base)) {
                {
                    if (!(gmlswitch_orientation > 0.5)) {
                        {
                            gmlview_w = gmlwin_w_base;
                            gmlview_h = floor((gmlview_w * gmldisplay_ratio));
                        };
                    } else {
                        {
                            gmlview_h = gmlwin_h_base;
                            gmlview_w = floor((gmlview_h * gmldisplay_ratio));
                        };
                    };
                };
            };
        };
    } else {
        {
            var gmldisplay_ratio = (gmlboard_w / gmlboard_h);
            var gmlcanvas_h = gmldisplay_h;
            var gmlcanvas_w = floor((gmlcanvas_h * gmldisplay_ratio));
            if ((gmldisplay_w < gmlcanvas_w)) {
                {
                    gmldisplay_ratio = (gmlboard_h / gmlboard_w);
                    gmlcanvas_w = gmldisplay_w;
                    gmlcanvas_h = floor((gmlcanvas_w * gmldisplay_ratio));
                };
            };
            gmlview_w = gmlcanvas_w;
            gmlview_h = gmlcanvas_h;
            if ((gmlcanvas_h < gmlboard_h)) {
                {
                    gmlview_h = gmlboard_h;
                    gmlview_w = floor((gmlview_h * gmldisplay_ratio));
                };
            };
        };
    };
    gmlwin_w = gmlcanvas_w;
    gmlwin_h = gmlcanvas_h;
    room_set_view(0, 0, 1, 0, 0, gmlview_w, gmlview_h, 0, 0, gmlwin_w, gmlwin_h, 0, 0, (-1), (-1), (-1));
    room_set_view(1, 0, 1, 0, 0, gmlview_w, gmlview_h, 0, 0, gmlwin_w, gmlwin_h, 0, 0, (-1), (-1), (-1));
    room_set_view(3, 0, 1, 0, 0, gmlview_w, gmlview_h, 0, 0, gmlwin_w, gmlwin_h, 0, 0, (-1), (-1), (-1));
    display_set_gui_size(gmlwin_w, gmlwin_h);
    window_set_size(gmlwin_w, gmlwin_h);
    surface_resize(g_pBuiltIn.application_surface, gmlwin_w, gmlwin_h);
    js_changeCanvasClass();
    global.gmlboard_w = gmlboard_w;
    global.gmlboard_h = gmlboard_h;
    global.gmlwin_w_base = gmlwin_w_base;
    global.gmlwin_h_base = gmlwin_h_base;
    global.gmlview_w = gmlview_w;
    global.gmlview_h = gmlview_h;
    global.gmlwin_w = gmlcanvas_w;
    global.gmlwin_h = gmlcanvas_h;
    global.gmldisplay_ratio = (gmlview_w / gmlboard_w);
    gml_Script_scr_lowres_check(_inst, _other, global.gmlwin_h, gmlwin_h_base);
    if ((g_pBuiltIn.get_current_room() == 1)) {
        {
            {
                var __yy__v16 = GetWithArray(8);
                for (var __yy__v17 in __yy__v16) {
                    if (!__yy__v16.hasOwnProperty(__yy__v17)) continue;
                    var __yy__v18 = __yy__v16[__yy__v17];
                    if (__yy__v18.marked) continue;
                    if (!__yy__v18.active) continue; {
                        gml_Script_scr_color_world(__yy__v18, _inst);
                        __yy__v18.gmlcircle_fade_size_add = (global.gmlwin_w / 30);
                    }
                }
            };
        };
    } else {
        if ((g_pBuiltIn.get_current_room() == 3)) {
            {
                {
                    var __yy__v19 = GetWithArray(2);
                    for (var __yy__v20 in __yy__v19) {
                        if (!__yy__v19.hasOwnProperty(__yy__v20)) continue;
                        var __yy__v21 = __yy__v19[__yy__v20];
                        if (__yy__v21.marked) continue;
                        if (!__yy__v21.active) continue; {
                            gml_Script_scr_color_world(__yy__v21, _inst);
                        }
                    }
                };
            };
        };
    };
    js_Dogfire_ScrollHome();
}

// #####################################################################################################
// /// mhtml5_var_transfer()
//
// if ( os_type == os_browser ){
//
//     view_w = obj_ctrl_html5.view_w;
//     view_h = obj_ctrl_html5.view_h;
//
//     canvas_w = obj_ctrl_html5.canvas_w;
//     canvas_h = obj_ctrl_html5.canvas_h;
//
//     win_w = obj_ctrl_html5.win_w;
//     win_h = obj_ctrl_html5.win_h;
//
//     board_w = obj_ctrl_html5.board_w;
//     board_h = obj_ctrl_html5.board_h;
// }
//
//
function gml_Script_mhtml5_var_transfer(_inst, _other) {
    if ((g_pBuiltIn.get_os_type() == g_pBuiltIn.get_os_browser())) {
        {
            _inst.gmlview_w = yyInst(3).gmlview_w;
            _inst.gmlview_h = yyInst(3).gmlview_h;
            _inst.gmlcanvas_w = yyInst(3).gmlcanvas_w;
            _inst.gmlcanvas_h = yyInst(3).gmlcanvas_h;
            _inst.gmlwin_w = yyInst(3).gmlwin_w;
            _inst.gmlwin_h = yyInst(3).gmlwin_h;
            _inst.gmlboard_w = yyInst(3).gmlboard_w;
            _inst.gmlboard_h = yyInst(3).gmlboard_h;
        };
    };
}

// #####################################################################################################
// /// scale_canvas(base width, base height, current width, current height, center);
// //argument0 = base width;
// //argument1 = base height;
// //argument2 = current width
// //argument3 = current height
// //argument4 = center window (true, false);
//
// // if ( prev_w != win_w ) or ( prev_h != win_h ){}
//
//     var aspect = argument0 / argument1;
//
//     // show_debug_message("aspect: " + string(aspect));
//
//     if (( argument2 / aspect ) > argument3){
//
//         win_w = ( argument3 * aspect );
//         win_h = argument3;
//
//         window_set_size(win_w,win_h);
//     }
//     else{
//
//         win_w = argument2;
//         win_h = ( argument2 / aspect );
//
//         window_set_size(win_w,win_h);
//     }
//
//     if (argument4){ window_center(); }
//
//     view_wport[0] = window_get_width();
//     view_hport[0] = window_get_height();
//
//     // surface_resize(application_surface, min(window_get_width(), argument0), min(window_get_height(), argument1));
//
//     surface_resize(application_surface, window_get_width(), window_get_height());
//
//     board_scale = ( win_w / board_w_base );
//
//     if ( board_scale < 1 ){ board_scale = 1; }
//
//
// // prev_w = win_w;
// // prev_h = win_h;
//
// // if ( win_w > board_w_base ){ board_scale =  }
//
//
function gml_Script_scale_canvas(_inst, _other, argument0, argument1, argument2, argument3, argument4) {
    var gmlaspect = (argument0 / argument1);
    if (((argument2 / gmlaspect) > argument3)) {
        {
            _inst.gmlwin_w = (argument3 * gmlaspect);
            _inst.gmlwin_h = argument3;
            window_set_size(_inst.gmlwin_w, _inst.gmlwin_h);
        };
    } else {
        {
            _inst.gmlwin_w = argument2;
            _inst.gmlwin_h = (argument2 / gmlaspect);
            window_set_size(_inst.gmlwin_w, _inst.gmlwin_h);
        };
    };
    if (argument4 > 0.5) {
        {
            window_center();
        };
    };
    g_pBuiltIn.view_wport[0] = window_get_width();
    g_pBuiltIn.view_hport[0] = window_get_height();
    surface_resize(g_pBuiltIn.application_surface, window_get_width(), window_get_height());
    _inst.gmlboard_scale = (_inst.gmlwin_w / _inst.gmlboard_w_base);
    if ((_inst.gmlboard_scale < 1)) {
        {
            _inst.gmlboard_scale = 1;
        };
    };
}

// #####################################################################################################
// /// scr_floor_base_displace()
//
// var local_count = argument0
//
// // Displace X
//
//     var add_x = 0;
//
//     var displace_chance_x = irandom_range(1,5);
//
//     if ( local_count == 0 ){ displace_chance_x = 2; }
//
//     if ( displace_chance_x > 1 ){ add_x = grid_size * -1; } // ( 2,3 ) move left
//
//     if ( displace_chance_x > 3 ){ add_x = grid_size; } // ( 4,5 ) move right
//
//     floor_base_x2[local_count] += add_x;
//
//     if (( local_count != 0 ) and (  floor_base_x2[local_count] < floor_base_x2[local_count-1] )){
//
//         floor_base_x2[local_count] = floor_base_x2[local_count-1];
//     }
//
//
// // Displace Y
//
//     if (( local_count != 0 ) and ( floor_base_x2[local_count] = floor_base_x2[local_count-1] )){
//
//         floor_base_y2[local_count] = floor_base_y2[local_count-1]
//     }
//     else {
//
//         var new_y = terrain_screen_bottom;
//
//         var displace_chance_y = irandom_range(0,1);
//
//         if ( displace_chance_y == 1 ){ new_y = floor_base_y2[local_count] + grid_size; }
//
//         floor_base_y2[local_count] = new_y;
//     }
//
//
function gml_Script_scr_floor_base_displace(_inst, _other, argument0) {
    var gmllocal_count = argument0;
    var gmladd_x = 0;
    var gmldisplace_chance_x = irandom_range(1, 5);
    if ((gmllocal_count == 0)) {
        {
            gmldisplace_chance_x = 2;
        };
    };
    if ((gmldisplace_chance_x > 1)) {
        {
            gmladd_x = (_inst.gmlgrid_size * (-1));
        };
    };
    if ((gmldisplace_chance_x > 3)) {
        {
            gmladd_x = _inst.gmlgrid_size;
        };
    };
    if (!(_inst.gmlfloor_base_x2 instanceof Array)) {
        _inst.gmlfloor_base_x2 = [];
        _inst.gmlfloor_base_x2.__yy_owner = 2921704413;
    } else if (_inst.gmlfloor_base_x2.__yy_owner !== 2921704413) {
        _inst.gmlfloor_base_x2 = _inst.gmlfloor_base_x2.slice(0);
        _inst.gmlfloor_base_x2.__yy_owner = 2921704413;
    }
    _inst.gmlfloor_base_x2[gmllocal_count] += gmladd_x;
    if ((((gmllocal_count != 0)) && ((_inst.gmlfloor_base_x2[gmllocal_count] < _inst.gmlfloor_base_x2[(gmllocal_count - 1)])))) {
        {
            _inst.gmlfloor_base_x2[gmllocal_count] = _inst.gmlfloor_base_x2[(gmllocal_count - 1)];
        };
    };
    if ((((gmllocal_count != 0)) && ((_inst.gmlfloor_base_x2[gmllocal_count] == _inst.gmlfloor_base_x2[(gmllocal_count - 1)])))) {
        {
            if (!(_inst.gmlfloor_base_y2 instanceof Array)) {
                _inst.gmlfloor_base_y2 = [];
                _inst.gmlfloor_base_y2.__yy_owner = 379178168;
            } else if (_inst.gmlfloor_base_y2.__yy_owner !== 379178168) {
                _inst.gmlfloor_base_y2 = _inst.gmlfloor_base_y2.slice(0);
                _inst.gmlfloor_base_y2.__yy_owner = 379178168;
            }
            _inst.gmlfloor_base_y2[gmllocal_count] = _inst.gmlfloor_base_y2[(gmllocal_count - 1)];
        };
    } else {
        {
            var gmlnew_y = _inst.gmlterrain_screen_bottom;
            var gmldisplace_chance_y = irandom_range(0, 1);
            if ((gmldisplace_chance_y == 1)) {
                {
                    gmlnew_y = (_inst.gmlfloor_base_y2[gmllocal_count] + _inst.gmlgrid_size);
                };
            };
            if (!(_inst.gmlfloor_base_y2 instanceof Array)) {
                _inst.gmlfloor_base_y2 = [];
                _inst.gmlfloor_base_y2.__yy_owner = 379178168;
            } else if (_inst.gmlfloor_base_y2.__yy_owner !== 379178168) {
                _inst.gmlfloor_base_y2 = _inst.gmlfloor_base_y2.slice(0);
                _inst.gmlfloor_base_y2.__yy_owner = 379178168;
            }
            _inst.gmlfloor_base_y2[gmllocal_count] = gmlnew_y;
        };
    };
}

// #####################################################################################################
// /// scr_floor_code()
//
// // var floor_code;
//
// floor_code = string(line_x1[0]) + "," + string(line_y1[0]) + "+";
//
// for ( i=1; i<=line_count; i+=1 ){
//
//     floor_code = string(floor_code) + string(line_x1[i]) + "," + string(line_y1[i]) + "+";
// }
//
// floor_code = string(floor_code) + string(line_x2[line_count]) + "," + string(line_y2[line_count]);
//
// return floor_code;
//
//
function gml_Script_scr_floor_code(_inst, _other) {
    _inst.gmlfloor_code = (string(_inst.gmlline_x1[0]) + "," + string(_inst.gmlline_y1[0]) + "+");
    for (_inst.gmli = 1;
        (_inst.gmli <= _inst.gmlline_count); _inst.gmli += 1) {
        {
            _inst.gmlfloor_code = (string(_inst.gmlfloor_code) + string(_inst.gmlline_x1[_inst.gmli]) + "," + string(_inst.gmlline_y1[_inst.gmli]) + "+");
        }
    };
    _inst.gmlfloor_code = (string(_inst.gmlfloor_code) + string(_inst.gmlline_x2[_inst.gmlline_count]) + "," + string(_inst.gmlline_y2[_inst.gmlline_count]));
    return _inst.gmlfloor_code;
}

// #####################################################################################################
// /// scr_floor_correction()
//
// // Floor Correction v.2
//
//     scr_level_height();
//
//     if ( floor_point_lowest_y < terrain_screen_bottom ){
//
//         var y_correction = ( terrain_screen_bottom - floor_point_lowest_y ) - grid_size;
//     }
//     else if ( floor_point_lowest_y > terrain_screen_bottom ){
//
//         var y_correction = (( floor_point_lowest_y - terrain_screen_bottom ) * -1 ) - grid_size;
//     }
//     else if ( floor_point_lowest_y == terrain_screen_bottom ){
//
//         var y_correction = ( grid_size ) * -1;
//     }
//
//     for ( i=0; i<=line_count; i+=1 ){
//
//         line_y1[i] += y_correction;
//         line_y2[i] += y_correction;
//     }
//
//     hole_y1 += y_correction;
//     hole_y2 += y_correction;
//
//     floor_point_lowest_y += y_correction;
//     floor_point_highest_y += y_correction;
//
//
function gml_Script_scr_floor_correction(_inst, _other) {
    gml_Script_scr_level_height(_inst, _other);
    if ((_inst.gmlfloor_point_lowest_y < _inst.gmlterrain_screen_bottom)) {
        {
            var gmly_correction = ((_inst.gmlterrain_screen_bottom - _inst.gmlfloor_point_lowest_y) - _inst.gmlgrid_size);
        };
    } else {
        if ((_inst.gmlfloor_point_lowest_y > _inst.gmlterrain_screen_bottom)) {
            {
                var gmly_correction = (((_inst.gmlfloor_point_lowest_y - _inst.gmlterrain_screen_bottom) * (-1)) - _inst.gmlgrid_size);
            };
        } else {
            if ((_inst.gmlfloor_point_lowest_y == _inst.gmlterrain_screen_bottom)) {
                {
                    var gmly_correction = (_inst.gmlgrid_size * (-1));
                };
            };
        };
    };
    for (_inst.gmli = 0;
        (_inst.gmli <= _inst.gmlline_count); _inst.gmli += 1) {
        {
            if (!(_inst.gmlline_y1 instanceof Array)) {
                _inst.gmlline_y1 = [];
                _inst.gmlline_y1.__yy_owner = 3369323869;
            } else if (_inst.gmlline_y1.__yy_owner !== 3369323869) {
                _inst.gmlline_y1 = _inst.gmlline_y1.slice(0);
                _inst.gmlline_y1.__yy_owner = 3369323869;
            }
            _inst.gmlline_y1[_inst.gmli] += gmly_correction;
            if (!(_inst.gmlline_y2 instanceof Array)) {
                _inst.gmlline_y2 = [];
                _inst.gmlline_y2.__yy_owner = 3825114782;
            } else if (_inst.gmlline_y2.__yy_owner !== 3825114782) {
                _inst.gmlline_y2 = _inst.gmlline_y2.slice(0);
                _inst.gmlline_y2.__yy_owner = 3825114782;
            }
            _inst.gmlline_y2[_inst.gmli] += gmly_correction;
        }
    };
    _inst.gmlhole_y1 += gmly_correction;
    _inst.gmlhole_y2 += gmly_correction;
    _inst.gmlfloor_point_lowest_y += gmly_correction;
    _inst.gmlfloor_point_highest_y += gmly_correction;
}

// #####################################################################################################
// /// scr_floor_draw(line_count)
//
//     var line_count_anim = argument0;
//
//     var local_line_color = line_color;
//
//     if ( line_count_anim >= 0 ){
//
//         if ( line_count = line_count_anim ){
//
//             // Stars
//             for ( i=0; i<=star_count_max-1; i+=1 ){
//
//                 draw_rectangle_colour(stars_x1[i],stars_y1[i],stars_x2[i],stars_y2[i],star_color,star_color,star_color,star_color,false);
//             }
//
//
//             // Glow Circle
//             scr_floor_surface_v2(line_count_anim,0,0,1,line_glow_color2,ceil(line_gerth*10),2,0);
//             scr_floor_surface_v2(line_count_anim,0,0,1,line_glow_color1,ceil(line_gerth*7),2,0);
//
//
//             // Dark Bottom
//
//             var bot_x1 = 0;
//             var bot_y1 = terrain_screen_bottom * obj_ctrl_board.draw_w_ratio; // floor( world_height_board / 2 ) --- floor_point_highest_y
//             var bot_x2 = world_width_board * obj_ctrl_board.draw_w_ratio;
//             var bot_y2 = world_height_board * obj_ctrl_board.draw_w_ratio;
//
//             draw_rectangle_colour(bot_x1,bot_y1,bot_x2,bot_y2,bot_color,bot_color,bot_color,bot_color,false);
//
//
//             // Horizon
//
//             var hor_line_x1 = floor( world_width_board / 2 ) * obj_ctrl_board.draw_w_ratio;
//             var hor_line_y1 = floor( world_height_board * 0.5 ) * obj_ctrl_board.draw_w_ratio; // terrain_screen_bottom
//             var hor_line_x2 = hor_line_x1;
//             var hor_line_y2 = world_height_board * obj_ctrl_board.draw_w_ratio;
//
//             var line_angle = point_direction(hor_line_x2, hor_line_y2, hor_line_x1, hor_line_y1);
//             var hor_line_x1_final = hor_line_x2 + lengthdir_x((grid_size*2)*obj_ctrl_board.draw_w_ratio,line_angle);
//             var hor_line_y1_final = hor_line_y2 + lengthdir_y((grid_size*2)*obj_ctrl_board.draw_w_ratio,line_angle);
//
//             var hor_line_gerth = ceil( line_gerth / 2 );
//
//             if ( hor_line_gerth < 2 ){ hor_line_gerth = 2; }
//
//             if ( global.game_lowres ){ hor_line_gerth = 4; }
//
//             for ( i=1; i<=6; i+=1; ){
//
//                 draw_line_width_colour(hor_line_x1_final,hor_line_y1_final,hor_line_x2,hor_line_y2,hor_line_gerth,ground_color,ground_color); // tb_color
//
//                 hor_line_x2 += floor( floor( world_width_board * 0.10 ) * obj_ctrl_board.draw_w_ratio );
//
//                 line_angle = point_direction(hor_line_x2, hor_line_y2, hor_line_x1, hor_line_y1);
//                 hor_line_x1_final = hor_line_x2 + lengthdir_x(((grid_size*2)+(i*15))*obj_ctrl_board.draw_w_ratio,line_angle);
//                 hor_line_y1_final = hor_line_y2 + lengthdir_y(((grid_size*2)+(i*15))*obj_ctrl_board.draw_w_ratio,line_angle);
//             }
//
//             hor_line_x2 = hor_line_x1;
//
//             for ( i=1; i<=5; i+=1; ){
//
//                 hor_line_x2 -= floor( floor( world_width_board * 0.10 ) * obj_ctrl_board.draw_w_ratio );
//
//                 line_angle = point_direction(hor_line_x2, hor_line_y2, hor_line_x1, hor_line_y1);
//                 hor_line_x1_final = hor_line_x2 + lengthdir_x(((grid_size*2)+(i*15))*obj_ctrl_board.draw_w_ratio,line_angle);
//                 hor_line_y1_final = hor_line_y2 + lengthdir_y(((grid_size*2)+(i*15))*obj_ctrl_board.draw_w_ratio,line_angle);
//
//                 draw_line_width_colour(hor_line_x1_final,hor_line_y1_final,hor_line_x2,hor_line_y2,hor_line_gerth,ground_color,ground_color);
//             }
//
//             hor_line_x1 = 0;
//             hor_line_y1 = floor(( world_height_board - grid_size / 2 ) * obj_ctrl_board.draw_w_ratio );
//             hor_line_x2 = floor(world_width_board * obj_ctrl_board.draw_w_ratio );
//             hor_line_y2 = hor_line_y1;
//
//             draw_line_width_colour(hor_line_x1,hor_line_y1,hor_line_x2,hor_line_y2,hor_line_gerth,ground_color,ground_color);
//
//             hor_line_y1 -= ( grid_size * obj_ctrl_board.draw_w_ratio );
//             hor_line_y2 = hor_line_y1;
//
//             draw_line_width_colour(hor_line_x1,hor_line_y1,hor_line_x2,hor_line_y2,hor_line_gerth,ground_color,ground_color);
//
//
//             // Terrain Fill
//
//                 // Basic Triangles
//
//                 for ( i=0; i<floor_base_count; i+=1 ){
//
//                     var fill_tri_x1 = floor_base_x1[i] * obj_ctrl_board.draw_w_ratio;
//                     var fill_tri_y1 = floor_base_y1[i] * obj_ctrl_board.draw_w_ratio;
//                     var fill_tri_x2 = floor_base_x2[i] * obj_ctrl_board.draw_w_ratio;
//                     var fill_tri_y2 = floor_base_y2[i] * obj_ctrl_board.draw_w_ratio;
//                     var fill_tri_x3 = floor_base_x2[i+1] * obj_ctrl_board.draw_w_ratio;
//                     var fill_tri_y3 = floor_base_y2[i+1] * obj_ctrl_board.draw_w_ratio;
//
//                     var fill_color = tn_color;
//                     if ( fill_tri_y3 < fill_tri_y2 ){ fill_color = tb_color; }
//
//                     draw_triangle_colour(fill_tri_x1,fill_tri_y1,fill_tri_x2,fill_tri_y2,fill_tri_x3,fill_tri_y3,fill_color,fill_color,fill_color,false);
//
//                     /* draw_line_colour(fill_tri_x1,fill_tri_y1,fill_tri_x2,fill_tri_y2,c_gray,c_gray);
//                     draw_line_colour(fill_tri_x2,fill_tri_y2,fill_tri_x3,fill_tri_y3,c_gray,c_gray);
//                     draw_line_colour(fill_tri_x1,fill_tri_y1,fill_tri_x3,fill_tri_y3,c_gray,c_gray); */
//
//                     fill_tri_x1 = floor_base_x1[i] * obj_ctrl_board.draw_w_ratio;
//                     fill_tri_y1 = floor_base_y1[i] * obj_ctrl_board.draw_w_ratio;
//                     fill_tri_x2 = floor_base_x1[i+1] * obj_ctrl_board.draw_w_ratio;
//                     fill_tri_y2 = floor_base_y1[i+1] * obj_ctrl_board.draw_w_ratio;
//                     fill_tri_x3 = floor_base_x2[i+1] * obj_ctrl_board.draw_w_ratio;
//                     fill_tri_y3 = floor_base_y2[i+1] * obj_ctrl_board.draw_w_ratio;
//
//                     draw_triangle_colour(fill_tri_x1,fill_tri_y1,fill_tri_x2,fill_tri_y2,fill_tri_x3,fill_tri_y3,fill_color,fill_color,fill_color,false);
//                 }
//
//
//                 // Special Triangles
//
//                 for ( i=1; i<=line_count; i+=1; ){
//
//                     if ( line_x1[i] == line_x1[i-1] ){
//
//                         if ( line_y1[i] > line_y1[i-1] ){
//
//                             fill_tri_x1 = line_x1[i] * obj_ctrl_board.draw_w_ratio;
//                             fill_tri_y1 = line_y1[i] * obj_ctrl_board.draw_w_ratio;
//                             fill_tri_x2 = line_x1[i-1] * obj_ctrl_board.draw_w_ratio;
//                             fill_tri_y2 = line_y1[i-1] * obj_ctrl_board.draw_w_ratio;
//                             fill_tri_x3 = line_x1[i-2] * obj_ctrl_board.draw_w_ratio;
//                             fill_tri_y3 = line_y1[i-2] * obj_ctrl_board.draw_w_ratio;
//
//                             draw_triangle_colour(fill_tri_x1,fill_tri_y1,fill_tri_x2,fill_tri_y2,fill_tri_x3,fill_tri_y3,tn_color,tn_color,tn_color,false); // tn_color
//                         }
//
//                         if ( line_y1[i] < line_y1[i-1] ){
//
//                             fill_tri_x1 = line_x1[i-1] * obj_ctrl_board.draw_w_ratio;
//                             fill_tri_y1 = line_y1[i-1] * obj_ctrl_board.draw_w_ratio;
//                             fill_tri_x2 = line_x1[i] * obj_ctrl_board.draw_w_ratio;
//                             fill_tri_y2 = line_y1[i] * obj_ctrl_board.draw_w_ratio;
//                             fill_tri_x3 = line_x1[i+1] * obj_ctrl_board.draw_w_ratio;
//                             fill_tri_y3 = line_y1[i+1] * obj_ctrl_board.draw_w_ratio;
//
//                             draw_triangle_colour(fill_tri_x1,fill_tri_y1,fill_tri_x2,fill_tri_y2,fill_tri_x3,fill_tri_y3,tn_color,tn_color,tn_color,false);
//                         }
//                     }
//                 }
//
//
//             // Glow Big
//             scr_floor_surface_v2(line_count_anim,0,-3,1,line_color3,ceil(line_gerth*1.66),1,0);
//             scr_floor_surface_v2(line_count_anim,3,-3,1,line_color3,ceil(line_gerth*1.66),1,0);
//             scr_floor_surface_v2(line_count_anim,3,0,1,line_color3,ceil(line_gerth*1.66),1,0);
//             scr_floor_surface_v2(line_count_anim,3,3,1,line_color3,ceil(line_gerth*1.66),1,0);
//             scr_floor_surface_v2(line_count_anim,0,3,1,line_color3,ceil(line_gerth*1.66),1,0);
//             scr_floor_surface_v2(line_count_anim,-3,3,1,line_color3,ceil(line_gerth*1.66),1,0);
//             scr_floor_surface_v2(line_count_anim,-3,0,1,line_color3,ceil(line_gerth*1.66),1,0);
//             scr_floor_surface_v2(line_count_anim,-3,-3,1,line_color3,ceil(line_gerth*1.66),1,0);
//
//             scr_floor_surface_v2(line_count_anim,0,-3,1,line_color3,(ceil(line_gerth*1.66)/2)-1,3,0);
//             scr_floor_surface_v2(line_count_anim,3,-3,1,line_color3,(ceil(line_gerth*1.66)/2)-1,3,0);
//             scr_floor_surface_v2(line_count_anim,3,0,1,line_color3,(ceil(line_gerth*1.66)/2)-1,3,0);
//             scr_floor_surface_v2(line_count_anim,3,3,1,line_color3,(ceil(line_gerth*1.66)/2)-1,3,0);
//             scr_floor_surface_v2(line_count_anim,0,3,1,line_color3,(ceil(line_gerth*1.66)/2)-1,3,0);
//             scr_floor_surface_v2(line_count_anim,-3,3,1,line_color3,(ceil(line_gerth*1.66)/2)-1,3,0);
//             scr_floor_surface_v2(line_count_anim,-3,0,1,line_color3,(ceil(line_gerth*1.66)/2)-1,3,0);
//             scr_floor_surface_v2(line_count_anim,-3,-3,1,line_color3,(ceil(line_gerth*1.66)/2)-1,3,0);
//
//             scr_floor_surface_v2(line_count_anim,0,0,1,line_color3,((ceil(line_gerth*1.66)+(6*obj_ctrl_board.draw_w_ratio))/2)-1,3,0);
//
//
//
//
//
//             // Base
//             if ( line_count = line_count_anim ){
//
//                 draw_set_alpha(1);
//
//                 var fbase_x1 = 0;
//                 var fbase_y1 = 0;
//                 var fbase_x2 = 0;
//                 var fbase_y2 = 0;
//                 var fbase_line_gerth = ( ceil( line_gerth / 2 ) + 1 );
//
//                 if ( fbase_line_gerth < 2 ){ fbase_line_gerth = 3; }
//
//                 if ( global.game_lowres ){ fbase_line_gerth = 5; }
//
//                 for ( i=0; i<=floor_base_count; i+=1 ){
//
//                     fbase_x1 = floor_base_x1[i] * obj_ctrl_board.draw_w_ratio;
//                     fbase_y1 = floor_base_y1[i] * obj_ctrl_board.draw_w_ratio;
//                     fbase_x2 = floor_base_x2[i] * obj_ctrl_board.draw_w_ratio;
//                     fbase_y2 = floor_base_y2[i] * obj_ctrl_board.draw_w_ratio;
//
//                     draw_line_width_colour(fbase_x1,fbase_y1,fbase_x2,fbase_y2,fbase_line_gerth,line_color3,line_color3);
//                 }
//
//                 for ( i=0; i<floor_base_count; i+=1 ){
//
//                     fbase_x1 = floor_base_x2[i] * obj_ctrl_board.draw_w_ratio;
//                     fbase_y1 = floor_base_y2[i] * obj_ctrl_board.draw_w_ratio;
//                     fbase_x2 = floor_base_x2[i+1] * obj_ctrl_board.draw_w_ratio;
//                     fbase_y2 = floor_base_y2[i+1] * obj_ctrl_board.draw_w_ratio;
//
//                     draw_line_width_colour(fbase_x1,fbase_y1,fbase_x2,fbase_y2,fbase_line_gerth,line_color3,line_color3);
//                 }
//             }
//
//
//             // Glow Medium
//             scr_floor_surface_v2(line_count_anim,0,-1,1,line_color2,line_gerth,1,0);
//             scr_floor_surface_v2(line_count_anim,1,-1,1,line_color2,line_gerth,1,0);
//             scr_floor_surface_v2(line_count_anim,1,0,1,line_color2,line_gerth,1,0);
//             scr_floor_surface_v2(line_count_anim,1,1,1,line_color2,line_gerth,1,0);
//             scr_floor_surface_v2(line_count_anim,0,1,1,line_color2,line_gerth,1,0);
//             scr_floor_surface_v2(line_count_anim,-1,1,1,line_color2,line_gerth,1,0);
//             scr_floor_surface_v2(line_count_anim,-1,0,1,line_color2,line_gerth,1,0);
//             scr_floor_surface_v2(line_count_anim,-1,-1,1,line_color2,line_gerth,1,0);
//             scr_floor_surface_v2(line_count_anim,0,0,1,line_color2,(line_gerth/2)-1,3,0); // if (( os_browser == browser_not_a_browser ) and ( os_type = os_windows )){}
//
//
//             // Activate Line Color
//
//                 local_line_color = line_color;
//         }
//
//         // Laser Floor
//
//             scr_floor_surface_v2(line_count_anim,0,0,1,local_line_color,line_gerth,1,0);
//
//             scr_floor_surface_v2(line_count_anim,0,0,1,local_line_color,(line_gerth/2)-1,3,0); // if ( global.platform_config = 2 ){ }
//
//     }
//
//     // [ DEBUG ] scr_floor_surface_v2(line_count_anim,0,0,1,c_black,1,1); // 1 pixel floor
//
//
//
function gml_Script_scr_floor_draw(_inst, _other, argument0) {
    var gmlline_count_anim = argument0;
    var gmllocal_line_color = _inst.gmlline_color;
    if ((gmlline_count_anim >= 0)) {
        {
            if ((_inst.gmlline_count == gmlline_count_anim)) {
                {
                    for (_inst.gmli = 0;
                        (_inst.gmli <= (_inst.gmlstar_count_max - 1)); _inst.gmli += 1) {
                        {
                            draw_rectangle_colour(_inst.gmlstars_x1[_inst.gmli], _inst.gmlstars_y1[_inst.gmli], _inst.gmlstars_x2[_inst.gmli], _inst.gmlstars_y2[_inst.gmli], _inst.gmlstar_color, _inst.gmlstar_color, _inst.gmlstar_color, _inst.gmlstar_color, 0);
                        }
                    };
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 0, 0, 1, _inst.gmlline_glow_color2, ceil((_inst.gmlline_gerth * 10)), 2, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 0, 0, 1, _inst.gmlline_glow_color1, ceil((_inst.gmlline_gerth * 7)), 2, 0);
                    var gmlbot_x1 = 0;
                    var gmlbot_y1 = (_inst.gmlterrain_screen_bottom * yyInst(2).gmldraw_w_ratio);
                    var gmlbot_x2 = (_inst.gmlworld_width_board * yyInst(2).gmldraw_w_ratio);
                    var gmlbot_y2 = (_inst.gmlworld_height_board * yyInst(2).gmldraw_w_ratio);
                    draw_rectangle_colour(gmlbot_x1, gmlbot_y1, gmlbot_x2, gmlbot_y2, _inst.gmlbot_color, _inst.gmlbot_color, _inst.gmlbot_color, _inst.gmlbot_color, 0);
                    var gmlhor_line_x1 = (floor((_inst.gmlworld_width_board / 2)) * yyInst(2).gmldraw_w_ratio);
                    var gmlhor_line_y1 = (floor((_inst.gmlworld_height_board * 0.5)) * yyInst(2).gmldraw_w_ratio);
                    var gmlhor_line_x2 = gmlhor_line_x1;
                    var gmlhor_line_y2 = (_inst.gmlworld_height_board * yyInst(2).gmldraw_w_ratio);
                    var gmlline_angle = point_direction(gmlhor_line_x2, gmlhor_line_y2, gmlhor_line_x1, gmlhor_line_y1);
                    var gmlhor_line_x1_final = (gmlhor_line_x2 + lengthdir_x(((_inst.gmlgrid_size * 2) * yyInst(2).gmldraw_w_ratio), gmlline_angle));
                    var gmlhor_line_y1_final = (gmlhor_line_y2 + lengthdir_y(((_inst.gmlgrid_size * 2) * yyInst(2).gmldraw_w_ratio), gmlline_angle));
                    var gmlhor_line_gerth = ceil((_inst.gmlline_gerth / 2));
                    if ((gmlhor_line_gerth < 2)) {
                        {
                            gmlhor_line_gerth = 2;
                        };
                    };
                    if (global.gmlgame_lowres > 0.5) {
                        {
                            gmlhor_line_gerth = 4;
                        };
                    };
                    for (_inst.gmli = 1;
                        (_inst.gmli <= 6); _inst.gmli += 1) {
                        {
                            draw_line_width_colour(gmlhor_line_x1_final, gmlhor_line_y1_final, gmlhor_line_x2, gmlhor_line_y2, gmlhor_line_gerth, _inst.gmlground_color, _inst.gmlground_color);
                            gmlhor_line_x2 += floor((floor((_inst.gmlworld_width_board * 0.1)) * yyInst(2).gmldraw_w_ratio));
                            gmlline_angle = point_direction(gmlhor_line_x2, gmlhor_line_y2, gmlhor_line_x1, gmlhor_line_y1);
                            gmlhor_line_x1_final = (gmlhor_line_x2 + lengthdir_x((((_inst.gmlgrid_size * 2) + (_inst.gmli * 15)) * yyInst(2).gmldraw_w_ratio), gmlline_angle));
                            gmlhor_line_y1_final = (gmlhor_line_y2 + lengthdir_y((((_inst.gmlgrid_size * 2) + (_inst.gmli * 15)) * yyInst(2).gmldraw_w_ratio), gmlline_angle));
                        }
                    };
                    gmlhor_line_x2 = gmlhor_line_x1;
                    for (_inst.gmli = 1;
                        (_inst.gmli <= 5); _inst.gmli += 1) {
                        {
                            gmlhor_line_x2 -= floor((floor((_inst.gmlworld_width_board * 0.1)) * yyInst(2).gmldraw_w_ratio));
                            gmlline_angle = point_direction(gmlhor_line_x2, gmlhor_line_y2, gmlhor_line_x1, gmlhor_line_y1);
                            gmlhor_line_x1_final = (gmlhor_line_x2 + lengthdir_x((((_inst.gmlgrid_size * 2) + (_inst.gmli * 15)) * yyInst(2).gmldraw_w_ratio), gmlline_angle));
                            gmlhor_line_y1_final = (gmlhor_line_y2 + lengthdir_y((((_inst.gmlgrid_size * 2) + (_inst.gmli * 15)) * yyInst(2).gmldraw_w_ratio), gmlline_angle));
                            draw_line_width_colour(gmlhor_line_x1_final, gmlhor_line_y1_final, gmlhor_line_x2, gmlhor_line_y2, gmlhor_line_gerth, _inst.gmlground_color, _inst.gmlground_color);
                        }
                    };
                    gmlhor_line_x1 = 0;
                    gmlhor_line_y1 = floor(((_inst.gmlworld_height_board - (_inst.gmlgrid_size / 2)) * yyInst(2).gmldraw_w_ratio));
                    gmlhor_line_x2 = floor((_inst.gmlworld_width_board * yyInst(2).gmldraw_w_ratio));
                    gmlhor_line_y2 = gmlhor_line_y1;
                    draw_line_width_colour(gmlhor_line_x1, gmlhor_line_y1, gmlhor_line_x2, gmlhor_line_y2, gmlhor_line_gerth, _inst.gmlground_color, _inst.gmlground_color);
                    gmlhor_line_y1 -= (_inst.gmlgrid_size * yyInst(2).gmldraw_w_ratio);
                    gmlhor_line_y2 = gmlhor_line_y1;
                    draw_line_width_colour(gmlhor_line_x1, gmlhor_line_y1, gmlhor_line_x2, gmlhor_line_y2, gmlhor_line_gerth, _inst.gmlground_color, _inst.gmlground_color);
                    for (_inst.gmli = 0;
                        (_inst.gmli < _inst.gmlfloor_base_count); _inst.gmli += 1) {
                        {
                            var gmlfill_tri_x1 = (_inst.gmlfloor_base_x1[_inst.gmli] * yyInst(2).gmldraw_w_ratio);
                            var gmlfill_tri_y1 = (_inst.gmlfloor_base_y1[_inst.gmli] * yyInst(2).gmldraw_w_ratio);
                            var gmlfill_tri_x2 = (_inst.gmlfloor_base_x2[_inst.gmli] * yyInst(2).gmldraw_w_ratio);
                            var gmlfill_tri_y2 = (_inst.gmlfloor_base_y2[_inst.gmli] * yyInst(2).gmldraw_w_ratio);
                            var gmlfill_tri_x3 = (_inst.gmlfloor_base_x2[(_inst.gmli + 1)] * yyInst(2).gmldraw_w_ratio);
                            var gmlfill_tri_y3 = (_inst.gmlfloor_base_y2[(_inst.gmli + 1)] * yyInst(2).gmldraw_w_ratio);
                            var gmlfill_color = _inst.gmltn_color;
                            if ((gmlfill_tri_y3 < gmlfill_tri_y2)) {
                                {
                                    gmlfill_color = _inst.gmltb_color;
                                };
                            };
                            draw_triangle_colour(gmlfill_tri_x1, gmlfill_tri_y1, gmlfill_tri_x2, gmlfill_tri_y2, gmlfill_tri_x3, gmlfill_tri_y3, gmlfill_color, gmlfill_color, gmlfill_color, 0);
                            gmlfill_tri_x1 = (_inst.gmlfloor_base_x1[_inst.gmli] * yyInst(2).gmldraw_w_ratio);
                            gmlfill_tri_y1 = (_inst.gmlfloor_base_y1[_inst.gmli] * yyInst(2).gmldraw_w_ratio);
                            gmlfill_tri_x2 = (_inst.gmlfloor_base_x1[(_inst.gmli + 1)] * yyInst(2).gmldraw_w_ratio);
                            gmlfill_tri_y2 = (_inst.gmlfloor_base_y1[(_inst.gmli + 1)] * yyInst(2).gmldraw_w_ratio);
                            gmlfill_tri_x3 = (_inst.gmlfloor_base_x2[(_inst.gmli + 1)] * yyInst(2).gmldraw_w_ratio);
                            gmlfill_tri_y3 = (_inst.gmlfloor_base_y2[(_inst.gmli + 1)] * yyInst(2).gmldraw_w_ratio);
                            draw_triangle_colour(gmlfill_tri_x1, gmlfill_tri_y1, gmlfill_tri_x2, gmlfill_tri_y2, gmlfill_tri_x3, gmlfill_tri_y3, gmlfill_color, gmlfill_color, gmlfill_color, 0);
                        }
                    };
                    for (_inst.gmli = 1;
                        (_inst.gmli <= _inst.gmlline_count); _inst.gmli += 1) {
                        {
                            if ((_inst.gmlline_x1[_inst.gmli] == _inst.gmlline_x1[(_inst.gmli - 1)])) {
                                {
                                    if ((_inst.gmlline_y1[_inst.gmli] > _inst.gmlline_y1[(_inst.gmli - 1)])) {
                                        {
                                            gmlfill_tri_x1 = (_inst.gmlline_x1[_inst.gmli] * yyInst(2).gmldraw_w_ratio);
                                            gmlfill_tri_y1 = (_inst.gmlline_y1[_inst.gmli] * yyInst(2).gmldraw_w_ratio);
                                            gmlfill_tri_x2 = (_inst.gmlline_x1[(_inst.gmli - 1)] * yyInst(2).gmldraw_w_ratio);
                                            gmlfill_tri_y2 = (_inst.gmlline_y1[(_inst.gmli - 1)] * yyInst(2).gmldraw_w_ratio);
                                            gmlfill_tri_x3 = (_inst.gmlline_x1[(_inst.gmli - 2)] * yyInst(2).gmldraw_w_ratio);
                                            gmlfill_tri_y3 = (_inst.gmlline_y1[(_inst.gmli - 2)] * yyInst(2).gmldraw_w_ratio);
                                            draw_triangle_colour(gmlfill_tri_x1, gmlfill_tri_y1, gmlfill_tri_x2, gmlfill_tri_y2, gmlfill_tri_x3, gmlfill_tri_y3, _inst.gmltn_color, _inst.gmltn_color, _inst.gmltn_color, 0);
                                        };
                                    };
                                    if ((_inst.gmlline_y1[_inst.gmli] < _inst.gmlline_y1[(_inst.gmli - 1)])) {
                                        {
                                            gmlfill_tri_x1 = (_inst.gmlline_x1[(_inst.gmli - 1)] * yyInst(2).gmldraw_w_ratio);
                                            gmlfill_tri_y1 = (_inst.gmlline_y1[(_inst.gmli - 1)] * yyInst(2).gmldraw_w_ratio);
                                            gmlfill_tri_x2 = (_inst.gmlline_x1[_inst.gmli] * yyInst(2).gmldraw_w_ratio);
                                            gmlfill_tri_y2 = (_inst.gmlline_y1[_inst.gmli] * yyInst(2).gmldraw_w_ratio);
                                            gmlfill_tri_x3 = (_inst.gmlline_x1[(_inst.gmli + 1)] * yyInst(2).gmldraw_w_ratio);
                                            gmlfill_tri_y3 = (_inst.gmlline_y1[(_inst.gmli + 1)] * yyInst(2).gmldraw_w_ratio);
                                            draw_triangle_colour(gmlfill_tri_x1, gmlfill_tri_y1, gmlfill_tri_x2, gmlfill_tri_y2, gmlfill_tri_x3, gmlfill_tri_y3, _inst.gmltn_color, _inst.gmltn_color, _inst.gmltn_color, 0);
                                        };
                                    };
                                };
                            };
                        }
                    };
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 0, (-3), 1, _inst.gmlline_color3, ceil((_inst.gmlline_gerth * 1.66)), 1, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 3, (-3), 1, _inst.gmlline_color3, ceil((_inst.gmlline_gerth * 1.66)), 1, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 3, 0, 1, _inst.gmlline_color3, ceil((_inst.gmlline_gerth * 1.66)), 1, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 3, 3, 1, _inst.gmlline_color3, ceil((_inst.gmlline_gerth * 1.66)), 1, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 0, 3, 1, _inst.gmlline_color3, ceil((_inst.gmlline_gerth * 1.66)), 1, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, (-3), 3, 1, _inst.gmlline_color3, ceil((_inst.gmlline_gerth * 1.66)), 1, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, (-3), 0, 1, _inst.gmlline_color3, ceil((_inst.gmlline_gerth * 1.66)), 1, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, (-3), (-3), 1, _inst.gmlline_color3, ceil((_inst.gmlline_gerth * 1.66)), 1, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 0, (-3), 1, _inst.gmlline_color3, ((ceil((_inst.gmlline_gerth * 1.66)) / 2) - 1), 3, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 3, (-3), 1, _inst.gmlline_color3, ((ceil((_inst.gmlline_gerth * 1.66)) / 2) - 1), 3, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 3, 0, 1, _inst.gmlline_color3, ((ceil((_inst.gmlline_gerth * 1.66)) / 2) - 1), 3, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 3, 3, 1, _inst.gmlline_color3, ((ceil((_inst.gmlline_gerth * 1.66)) / 2) - 1), 3, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 0, 3, 1, _inst.gmlline_color3, ((ceil((_inst.gmlline_gerth * 1.66)) / 2) - 1), 3, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, (-3), 3, 1, _inst.gmlline_color3, ((ceil((_inst.gmlline_gerth * 1.66)) / 2) - 1), 3, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, (-3), 0, 1, _inst.gmlline_color3, ((ceil((_inst.gmlline_gerth * 1.66)) / 2) - 1), 3, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, (-3), (-3), 1, _inst.gmlline_color3, ((ceil((_inst.gmlline_gerth * 1.66)) / 2) - 1), 3, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 0, 0, 1, _inst.gmlline_color3, (((ceil((_inst.gmlline_gerth * 1.66)) + (6 * yyInst(2).gmldraw_w_ratio)) / 2) - 1), 3, 0);
                    if ((_inst.gmlline_count == gmlline_count_anim)) {
                        {
                            draw_set_alpha(1);
                            var gmlfbase_x1 = 0;
                            var gmlfbase_y1 = 0;
                            var gmlfbase_x2 = 0;
                            var gmlfbase_y2 = 0;
                            var gmlfbase_line_gerth = (ceil((_inst.gmlline_gerth / 2)) + 1);
                            if ((gmlfbase_line_gerth < 2)) {
                                {
                                    gmlfbase_line_gerth = 3;
                                };
                            };
                            if (global.gmlgame_lowres > 0.5) {
                                {
                                    gmlfbase_line_gerth = 5;
                                };
                            };
                            for (_inst.gmli = 0;
                                (_inst.gmli <= _inst.gmlfloor_base_count); _inst.gmli += 1) {
                                {
                                    gmlfbase_x1 = (_inst.gmlfloor_base_x1[_inst.gmli] * yyInst(2).gmldraw_w_ratio);
                                    gmlfbase_y1 = (_inst.gmlfloor_base_y1[_inst.gmli] * yyInst(2).gmldraw_w_ratio);
                                    gmlfbase_x2 = (_inst.gmlfloor_base_x2[_inst.gmli] * yyInst(2).gmldraw_w_ratio);
                                    gmlfbase_y2 = (_inst.gmlfloor_base_y2[_inst.gmli] * yyInst(2).gmldraw_w_ratio);
                                    draw_line_width_colour(gmlfbase_x1, gmlfbase_y1, gmlfbase_x2, gmlfbase_y2, gmlfbase_line_gerth, _inst.gmlline_color3, _inst.gmlline_color3);
                                }
                            };
                            for (_inst.gmli = 0;
                                (_inst.gmli < _inst.gmlfloor_base_count); _inst.gmli += 1) {
                                {
                                    gmlfbase_x1 = (_inst.gmlfloor_base_x2[_inst.gmli] * yyInst(2).gmldraw_w_ratio);
                                    gmlfbase_y1 = (_inst.gmlfloor_base_y2[_inst.gmli] * yyInst(2).gmldraw_w_ratio);
                                    gmlfbase_x2 = (_inst.gmlfloor_base_x2[(_inst.gmli + 1)] * yyInst(2).gmldraw_w_ratio);
                                    gmlfbase_y2 = (_inst.gmlfloor_base_y2[(_inst.gmli + 1)] * yyInst(2).gmldraw_w_ratio);
                                    draw_line_width_colour(gmlfbase_x1, gmlfbase_y1, gmlfbase_x2, gmlfbase_y2, gmlfbase_line_gerth, _inst.gmlline_color3, _inst.gmlline_color3);
                                }
                            };
                        };
                    };
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 0, (-1), 1, _inst.gmlline_color2, _inst.gmlline_gerth, 1, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 1, (-1), 1, _inst.gmlline_color2, _inst.gmlline_gerth, 1, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 1, 0, 1, _inst.gmlline_color2, _inst.gmlline_gerth, 1, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 1, 1, 1, _inst.gmlline_color2, _inst.gmlline_gerth, 1, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 0, 1, 1, _inst.gmlline_color2, _inst.gmlline_gerth, 1, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, (-1), 1, 1, _inst.gmlline_color2, _inst.gmlline_gerth, 1, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, (-1), 0, 1, _inst.gmlline_color2, _inst.gmlline_gerth, 1, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, (-1), (-1), 1, _inst.gmlline_color2, _inst.gmlline_gerth, 1, 0);
                    gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 0, 0, 1, _inst.gmlline_color2, ((_inst.gmlline_gerth / 2) - 1), 3, 0);
                    gmllocal_line_color = _inst.gmlline_color;
                };
            };
            gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 0, 0, 1, gmllocal_line_color, _inst.gmlline_gerth, 1, 0);
            gml_Script_scr_floor_surface_v2(_inst, _other, gmlline_count_anim, 0, 0, 1, gmllocal_line_color, ((_inst.gmlline_gerth / 2) - 1), 3, 0);
        };
    };
}

// #####################################################################################################
// /// scr_floor_glow()
//
//     surf_floor_glow1 = surface_create(512, 512);
//
//     surface_set_target(surf_floor_glow1);
//
//         draw_clear_alpha(c_white, 0);
//
//         draw_set_alpha(1);
//
//         var offset_value = line_glow_offset[1];
//
//             draw_surface_ext(surf_floor,0+offset_value,0,1,1,0,line_color,1);
//
//             draw_surface_ext(surf_floor,0+offset_value,0+offset_value,1,1,0,line_color,1);
//
//             draw_surface_ext(surf_floor,0,0+offset_value,1,1,0,line_color,1);
//
//             draw_surface_ext(surf_floor,0-offset_value,0+offset_value,1,1,0,line_color,1);
//
//             draw_surface_ext(surf_floor,0-offset_value,0,1,1,0,line_color,1);
//
//             draw_surface_ext(surf_floor,0-offset_value,0-offset_value,1,1,0,line_color,1);
//
//             draw_surface_ext(surf_floor,0,0-offset_value,1,1,0,line_color,1);
//
//             draw_surface_ext(surf_floor,0+offset_value,0-offset_value,1,1,0,line_color,1);
//
//     surface_reset_target();
//
//
//     surf_floor_glow2 = surface_create(512, 512);
//
//     surface_set_target(surf_floor_glow2);
//
//         draw_clear_alpha(c_white, 0);
//
//         draw_set_alpha(1);
//
//         var offset_value = line_glow_offset[2];
//
//             draw_surface_ext(surf_floor,0+offset_value,0,1,1,0,line_color,1);
//
//             draw_surface_ext(surf_floor,0+offset_value,0+offset_value,1,1,0,line_color,1);
//
//             draw_surface_ext(surf_floor,0,0+offset_value,1,1,0,line_color,1);
//
//             draw_surface_ext(surf_floor,0-offset_value,0+offset_value,1,1,0,line_color,1);
//
//             draw_surface_ext(surf_floor,0-offset_value,0,1,1,0,line_color,1);
//
//             draw_surface_ext(surf_floor,0-offset_value,0-offset_value,1,1,0,line_color,1);
//
//             draw_surface_ext(surf_floor,0,0-offset_value,1,1,0,line_color,1);
//
//             draw_surface_ext(surf_floor,0+offset_value,0-offset_value,1,1,0,line_color,1);
//
//     surface_reset_target();
//
//
//
function gml_Script_scr_floor_glow(_inst, _other) {
    _inst.gmlsurf_floor_glow1 = surface_create(512, 512);
    surface_set_target(_inst.gmlsurf_floor_glow1);
    draw_clear_alpha(16777215, 0);
    draw_set_alpha(1);
    var gmloffset_value = _inst.gmlline_glow_offset[1];
    draw_surface_ext(_inst.gmlsurf_floor, (0 + gmloffset_value), 0, 1, 1, 0, _inst.gmlline_color, 1);
    draw_surface_ext(_inst.gmlsurf_floor, (0 + gmloffset_value), (0 + gmloffset_value), 1, 1, 0, _inst.gmlline_color, 1);
    draw_surface_ext(_inst.gmlsurf_floor, 0, (0 + gmloffset_value), 1, 1, 0, _inst.gmlline_color, 1);
    draw_surface_ext(_inst.gmlsurf_floor, (0 - gmloffset_value), (0 + gmloffset_value), 1, 1, 0, _inst.gmlline_color, 1);
    draw_surface_ext(_inst.gmlsurf_floor, (0 - gmloffset_value), 0, 1, 1, 0, _inst.gmlline_color, 1);
    draw_surface_ext(_inst.gmlsurf_floor, (0 - gmloffset_value), (0 - gmloffset_value), 1, 1, 0, _inst.gmlline_color, 1);
    draw_surface_ext(_inst.gmlsurf_floor, 0, (0 - gmloffset_value), 1, 1, 0, _inst.gmlline_color, 1);
    draw_surface_ext(_inst.gmlsurf_floor, (0 + gmloffset_value), (0 - gmloffset_value), 1, 1, 0, _inst.gmlline_color, 1);
    surface_reset_target();
    _inst.gmlsurf_floor_glow2 = surface_create(512, 512);
    surface_set_target(_inst.gmlsurf_floor_glow2);
    draw_clear_alpha(16777215, 0);
    draw_set_alpha(1);
    var gmloffset_value = _inst.gmlline_glow_offset[2];
    draw_surface_ext(_inst.gmlsurf_floor, (0 + gmloffset_value), 0, 1, 1, 0, _inst.gmlline_color, 1);
    draw_surface_ext(_inst.gmlsurf_floor, (0 + gmloffset_value), (0 + gmloffset_value), 1, 1, 0, _inst.gmlline_color, 1);
    draw_surface_ext(_inst.gmlsurf_floor, 0, (0 + gmloffset_value), 1, 1, 0, _inst.gmlline_color, 1);
    draw_surface_ext(_inst.gmlsurf_floor, (0 - gmloffset_value), (0 + gmloffset_value), 1, 1, 0, _inst.gmlline_color, 1);
    draw_surface_ext(_inst.gmlsurf_floor, (0 - gmloffset_value), 0, 1, 1, 0, _inst.gmlline_color, 1);
    draw_surface_ext(_inst.gmlsurf_floor, (0 - gmloffset_value), (0 - gmloffset_value), 1, 1, 0, _inst.gmlline_color, 1);
    draw_surface_ext(_inst.gmlsurf_floor, 0, (0 - gmloffset_value), 1, 1, 0, _inst.gmlline_color, 1);
    draw_surface_ext(_inst.gmlsurf_floor, (0 + gmloffset_value), (0 - gmloffset_value), 1, 1, 0, _inst.gmlline_color, 1);
    surface_reset_target();
}

// #####################################################################################################
// /// scr_floor_high_low()
// // Determine if the last point is higher or lower than the previous higher or lower
//
//     if ( line_y2[line_count] > floor_point_lowest_y ){
//
//          floor_point_lowest_y = line_y2[line_count];
//     }
//
//     if ( line_y2[line_count] < floor_point_highest_y ){
//
//         floor_point_highest_y = line_y2[line_count];
//     }
//
function gml_Script_scr_floor_high_low(_inst, _other) {
    if ((_inst.gmlline_y2[_inst.gmlline_count] > _inst.gmlfloor_point_lowest_y)) {
        {
            _inst.gmlfloor_point_lowest_y = _inst.gmlline_y2[_inst.gmlline_count];
        };
    };
    if ((_inst.gmlline_y2[_inst.gmlline_count] < _inst.gmlfloor_point_highest_y)) {
        {
            _inst.gmlfloor_point_highest_y = _inst.gmlline_y2[_inst.gmlline_count];
        };
    };
}

// #####################################################################################################
// /// scr_floor_init(floor_mode)
//
// var floor_mode = argument0; // 0: random; 1:level save; 2:level read;
//
// // Variables Init
//
//     floor_started = true;
//     floor_ready = false;
//
//     floor_contruct_speed = 2;
//
//     scr_world_ratio();
//
//     // circle_fade_size_max = ( floor( global.win_w / 2 ) + floor( global.win_w * 0.25 )) * draw_w_ratio;
//     circle_fade_size_add = ( global.win_w / 30 );
//
//     if ( draw_w_ratio < 1 ){ draw_w_ratio = 1; }
//     if ( draw_h_ratio < 1 ){ draw_h_ratio = 1; }
//
//     scr_color_world();
//
//     scr_color_flash();
//
//     line_color = scr_color_transition(floor_color_r,floor_color_g,floor_color_b,bg_color_r,bg_color_g,bg_color_b,0); // make_color_rgb(255,0,0);
//     line_color2 = scr_color_transition(floor_color_r,floor_color_g,floor_color_b,bg_color_r,bg_color_g,bg_color_b,0.5); // make_colour_rgb(152,17,21);
//     line_color3 = scr_color_transition(floor_color_r,floor_color_g,floor_color_b,bg_color_r,bg_color_g,bg_color_b,0.7); // make_colour_rgb(84,28,35);
//     line_glow_color1 = scr_color_transition(floor_color_r,floor_color_g,floor_color_b,bg_color_r,bg_color_g,bg_color_b,0.9); // make_colour_rgb(63,31,40);
//     line_glow_color2 = scr_color_transition(floor_color_r,floor_color_g,floor_color_b,bg_color_r,bg_color_g,bg_color_b,0.95); // make_colour_rgb(52,33,42);
//
//     force_meter_color_base = make_colour_hsv(bg_color_h,bg_color_s,0.3*255);
//
//     line_gerth = ceil(2 * draw_w_ratio);
//
//     line_count = 0;
//     line_count_anim = -1;
//
//     line_end_done = false;
//
//     ball_in_hole = false;
//     force_meter_show = false;
//
//
// // Cuadriculado Init
//
//     grid_size = 20;
//
//     // grids_left = ( global.board_w / grid_size );
//
//     grid_w_count = floor( world_width_board / grid_size );
//     grid_h_count = floor( world_height_draw / ( grid_size * draw_h_ratio ));
//
//     grids_left = grid_w_count;
//
//     grid_next_max_x_base = 3;
//     grid_next_max_y = 2;
//
//     line_start_grid_size = 2;
//
//     line_vert_prev = false;
//
//     hole_grid_size = 3;
//
//     floor_end_buffer_grid_size = 2;
//
//     terrain_screen_top = ( grid_size * 2 );
//     terrain_screen_bottom = world_height_board - ( grid_size * 2 ); // global.board_h
//
//     floor_point_lowest_y = -100000;
//     floor_point_highest_y = 100000;
//
//     if ( floor_mode == 2 ){
//
//         ball_start_line = 1;
//
//         // Read Level Storage
//
//             var file_name = "level_order.txt";
//
//             if ( global.game_mode == 1 ){
//             // 1: Neon Courses
//
//                 if ( global.game_submode = 1 ){ file_name = "course_25h.txt"; } // 25h
//                 else if ( global.game_submode = 2 ){ file_name = "course_50h.txt"; } // 50h
//                 else if ( global.game_submode = 3 ){ file_name = "course_100h.txt"; } // 100h
//                 else if ( global.game_submode = 4 ){ file_name = "course_150h.txt"; } // 150h
//             }
//
//             file_level_storage = file_text_open_read(file_name);
//
//             var num = 0; while ( num != game_levels_curr ){ // !file_text_eoln(file)
//
//                 num++;
//
//                 level_file_points = file_text_read_string(file_level_storage);
//
//                 file_text_readln(file_level_storage);
//             }
//
//             file_text_close(file_level_storage);
//
//             scr_level_build_from_string(level_file_points);
//
//             // scr_level_analyze();
//     }
//     else {
//
//         // Floor: Start Point
//
//             line_x1[line_count] = 0;
//             line_y1[line_count] = terrain_screen_top + ( irandom_range(0,( grid_h_count - 4 )) * grid_size ); // 12 es la cantidad de grids aceptables
//
//             line_x2[line_count] = line_x1[line_count] + ( grid_size * line_start_grid_size );
//
//             var y_up_down_chance = irandom_range(1,3); // because html5 is weird
//             if ( y_up_down_chance == 1 ){ y_up_down_chance = -irandom_range(1,2); }
//             if ( y_up_down_chance == 2 ){ y_up_down_chance = 0; }
//             if ( y_up_down_chance == 3 ){ y_up_down_chance = irandom_range(1,2); }
//
//             line_y2[line_count] = line_y1[line_count] + ( y_up_down_chance * grid_size );
//
//             if ( line_y2[line_count] >= terrain_screen_bottom ){ line_y2[line_count] = ( terrain_screen_bottom - grid_size ) }
//             else if ( line_y2[line_count] <= terrain_screen_top ){ line_y2[line_count] = ( terrain_screen_top + grid_size ) }
//
//             grids_left -= line_start_grid_size;
//
//             scr_floor_high_low();
//
//         // Floor: Path
//
//             while ( grids_left > 0 ) {
//
//                 line_count += 1;
//
//                 line_x1[line_count] = line_x2[line_count-1];
//                 line_y1[line_count] = line_y2[line_count-1];
//
//                 if ( line_count == 1 ){
//                 // Ball Start
//
//                     line_x2[line_count] = line_x1[line_count] + ( line_start_grid_size * grid_size );
//                     line_y2[line_count] = line_y1[line_count];
//
//                     ball_start_line = line_count;
//
//                     line_next_grid_x_count = 2;
//
//                     scr_floor_high_low();
//                 }
//                 else {
//                 // Floor Line
//
//                     var grid_next_min_x = 0;
//                     var grid_next_max_x = grid_next_max_x_base
//
//                     if ( line_vert_prev or line_end_done ){ grid_next_min_x = 1; line_vert_prev = false; }
//
//                     if ( grids_left < grid_next_max_x ){ grid_next_max_x = grids_left; }
//
//                     line_next_grid_x_count = irandom_range(grid_next_min_x,grid_next_max_x);
//
//                     // Right Border Control
//                     // if ( line_end_done ){ line_next_grid_x_count = irandom_range(grid_next_min_x,2); }
//
//                     var y_up_down_chance = irandom_range(1,3); // because html5 is weird
//                     if ( y_up_down_chance == 1 ){ y_up_down_chance = -1; }
//                     if ( y_up_down_chance == 2 ){ y_up_down_chance = 0; }
//                     if ( y_up_down_chance == 3 ){ y_up_down_chance = 1; }
//
//                     if ( line_next_grid_x_count != 0 ){
//
//                         if ( line_next_grid_x_count > grids_left ){ line_next_grid_x_count = grids_left; }
//
//                         line_next_grid_y_count = y_up_down_chance * line_next_grid_x_count;
//                     }
//                     else {
//
//                         line_vert_prev = true;
//
//                         line_next_grid_y_count = y_up_down_chance * irandom_range(1,grid_next_max_y);
//                     }
//
//                     line_x2[line_count] = line_x1[line_count] + ( line_next_grid_x_count * grid_size );
//                     line_y2[line_count] = line_y1[line_count] + ( line_next_grid_y_count * grid_size );
//
//                     // Bottom Correct
//                     if ( line_y2[line_count] >= terrain_screen_bottom ){ line_y2[line_count] = ( terrain_screen_bottom - grid_size ) }
//                     else if ( line_y2[line_count] <= terrain_screen_top ){ line_y2[line_count] = ( terrain_screen_top + grid_size ) }
//
//                     scr_floor_high_low();
//
//                     // Hole
//                     if (( !line_end_done ) and ( line_x2[line_count] > ( world_width_board - ( hole_grid_size * grid_size ) - ( floor_end_buffer_grid_size * grid_size )))){
//
//                         line_x2[line_count] = line_x1[line_count] + ( 1 * grid_size );
//                         line_y2[line_count] = line_y1[line_count];
//
//                     line_count += 1;
//
//                         line_x1[line_count] = line_x2[line_count-1];
//                         line_y1[line_count] = line_y2[line_count-1];
//
//                         line_x2[line_count] = line_x1[line_count];
//                         line_y2[line_count] = line_y1[line_count] + ( 1 * grid_size );
//
//                         hole_x1 = line_x1[line_count];
//                         hole_y1 = line_y1[line_count];
//
//                         if ( floor_mode == 1 ){ file_hole_x1 = hole_x1; file_hole_y1 = hole_y1; }
//
//                     line_count += 1;
//
//                         line_x1[line_count] = line_x2[line_count-1];
//                         line_y1[line_count] = line_y2[line_count-1];
//
//                         line_x2[line_count] = line_x1[line_count] + ( 1 * grid_size );
//                         line_y2[line_count] = line_y1[line_count];;
//                         hole_x2 = line_x2[line_count];
//                         hole_y2 = line_y2[line_count];
//
//                         if ( floor_mode == 1 ){ file_hole_x2 = hole_x2; file_hole_y2 = hole_y2; }
//
//                     line_count += 1;
//
//                         line_x1[line_count] = line_x2[line_count-1];
//                         line_y1[line_count] = line_y2[line_count-1];
//
//                         line_x2[line_count] = line_x1[line_count];
//                         line_y2[line_count] = line_y1[line_count] - ( 1 * grid_size );
//
//                     line_count += 1;
//
//                         line_x1[line_count] = line_x2[line_count-1];
//                         line_y1[line_count] = line_y2[line_count-1];
//
//                         line_x2[line_count] = line_x1[line_count] + ( 1 * grid_size );
//                         line_y2[line_count] = line_y1[line_count];
//
//                         line_next_grid_x_count = hole_grid_size;
//
//                         line_end_done = true;
//                     }
//                 }
//
//                 grids_left -= line_next_grid_x_count;
//
//                 // [ debug ] show_debug_message("grids_left: " + string(grids_left));
//             }
//
//
//         /// Floor Code
//
//             floor_code = scr_floor_code()
//     }
//
//     // Floor Correction v.2
//
//         scr_floor_correction();
//
//
//     // Floor Correction v.1
//     // This version takes the entire floor, determines its highest and lowest point, its mid point and moves
//     // the entire floor to the middle of the screen, based on how far away the floor mid is away from the center
//     // of the screen.
//     /*
//         floor_point_lowest_y = 100000;
//         floor_point_highest_y = 0;
//
//         for ( i=0; i<=line_count; i+=1 ){
//
//             if ( line_y1[i] < floor_point_lowest_y ){ floor_point_lowest_y = line_y1[i]; }
//             if ( line_y2[i] < floor_point_lowest_y ){ floor_point_lowest_y = line_y1[i]; }
//
//             if ( line_y1[i] > floor_point_highest_y ){ floor_point_highest_y = line_y1[i]; }
//             if ( line_y2[i] > floor_point_highest_y ){ floor_point_highest_y = line_y1[i]; }
//         }
//
//         floor_point_mid_y = floor((( floor_point_highest_y - floor_point_lowest_y ) / 2 ) + floor_point_lowest_y );
//
//         var world_point_mid = ( world_height_board / 2 );
//
//         if ( floor_point_mid_y < world_point_mid ){
//
//             var y_correction = ( world_point_mid - floor_point_mid_y );
//
//             for ( i=0; i<=line_count; i+=1 ){
//
//                 line_y1[i] += y_correction;
//                 line_y2[i] += y_correction;
//             }
//
//             hole_y1 += y_correction;
//             hole_y2 += y_correction;
//         }
//         else if ( floor_point_mid_y > world_point_mid ){
//
//             var y_correction = ( floor_point_mid_y - world_point_mid );
//
//             for ( i=0; i<=line_count; i+=1 ){
//
//                 line_y1[i] -= y_correction;
//                 line_y2[i] -= y_correction;
//             }
//
//             hole_y1 -= y_correction;
//             hole_y2 -= y_correction;
//         }
//
//         surf_floor = -1;
//     */
//
// // Floor Base
//
//     var add_floor_base = true;
//
//     floor_base_count = 0;
//
//     for ( i=0; i<=line_count; i+=1 ){
//
//         if (( i != 0 ) and ( line_x1[i] = line_x1[i-1] )){
//
//             add_floor_base = false;
//
//             if ( line_y1[i] > line_y1[i-1] ){
//
//                 floor_base_x1[floor_base_count-1] = line_x1[i];
//                 floor_base_y1[floor_base_count-1] = line_y1[i];
//
//                 floor_base_x2[floor_base_count-1] = line_x1[i];
//                 floor_base_y2[floor_base_count-1] = terrain_screen_bottom;
//             }
//         }
//
//         if ( add_floor_base ){
//
//             floor_base_x1[floor_base_count] = line_x1[i];
//             floor_base_y1[floor_base_count] = line_y1[i];
//
//             floor_base_x2[floor_base_count] = line_x1[i];
//             floor_base_y2[floor_base_count] = terrain_screen_bottom;
//
//             scr_floor_base_displace(floor_base_count);
//
//             floor_base_count += 1;
//         }
//
//         add_floor_base = true;
//     }
//
//     floor_base_x1[floor_base_count] = line_x2[line_count];
//     floor_base_y1[floor_base_count] = line_y2[line_count];
//
//     floor_base_x2[floor_base_count] = line_x2[line_count] + grid_size;
//     floor_base_y2[floor_base_count] = terrain_screen_bottom;
//
//
// // Floor Instances
//     if (( floor_mode == 0 ) or ( floor_mode == 2 )){
//
//         // Clear Floor Instances
//         if ( floor_physics_inst[0] != 0 ){
//
//             for ( var i=0; i<floor_physics_inst_count; i++; ){
//
//                 with ( floor_physics_inst[i] ){ instance_destroy(); }
//             }
//         }
//
//         // Create New Floor Instances v.2
//         var floor_fixture = scr_physics_fixture_init();
//
//         var local_phys_start_x = obj_ctrl_board.line_x1[0];
//         var local_phys_start_y = obj_ctrl_board.line_y1[0];
//
//         physics_fixture_add_point(floor_fixture, local_phys_start_x, local_phys_start_y);
//
//         floor_fixture_vertex_count = -1;
//
//         floor_physics_inst_count = 0;
//
//         for (var i = 0; i<=line_count; i++;){
//
//             floor_fixture_vertex_count += 1;
//
//             physics_fixture_add_point(floor_fixture, obj_ctrl_board.line_x2[i], obj_ctrl_board.line_y2[i]);
//
//             if (( floor_fixture_vertex_count == 5 ) or ( i = line_count )){
//
//                 floor_physics_inst[floor_physics_inst_count] = instance_create(0,0,obj_phys_floor);
//
//                 physics_fixture_bind(floor_fixture, floor_physics_inst[floor_physics_inst_count]);
//
//                 with ( floor_physics_inst[floor_physics_inst_count] ){
//
//                     phy_active = false;
//
//                     phys_start_x = local_phys_start_x;
//                     phys_start_y = local_phys_start_y;
//                     phys_end_x = obj_ctrl_board.line_x2[i];
//                     phys_end_y = obj_ctrl_board.line_y2[i];
//                 }
//
//                 physics_fixture_delete(floor_fixture);
//
//                 floor_physics_inst_count += 1;
//
//                 if ( i != line_count ){
//
//                     floor_fixture = scr_physics_fixture_init();
//
//                     local_phys_start_x = obj_ctrl_board.line_x1[i+1];
//                     local_phys_start_y = obj_ctrl_board.line_y1[i+1];
//
//                     physics_fixture_add_point(floor_fixture, local_phys_start_x, local_phys_start_y); // Add previous vertex to stitch new with prev
//
//                     floor_fixture_vertex_count = -1;
//                 }
//             }
//         }
//     }
//
//     // Create New Floor Instances v.1
//     /* var floor_fixture = scr_physics_fixture_init();
//
//     var local_phys_start_x = obj_ctrl_board.line_x1[0];
//     var local_phys_start_y = obj_ctrl_board.line_y1[0];
//
//     floor_fixture_vertex_count = 0;
//
//     floor_physics_inst_count = 0;
//
//     for (var i = 0; i<=line_count; i++;){
//
//         physics_fixture_add_point(floor_fixture, obj_ctrl_board.line_x1[i], obj_ctrl_board.line_y1[i]);
//
//         floor_fixture_vertex_count += 1;
//
//         if (( floor_fixture_vertex_count == 5 ) or ( i = line_count )){
//
//             floor_physics_inst[floor_physics_inst_count] = instance_create(0,0,obj_phys_floor);
//
//             physics_fixture_bind(floor_fixture, floor_physics_inst[floor_physics_inst_count]);
//
//             with ( floor_physics_inst[floor_physics_inst_count] ){
//
//                 phy_active = false;
//
//                 phys_start_x = local_phys_start_x;
//                 phys_start_y = local_phys_start_y;
//                 phys_end_x = obj_ctrl_board.line_x1[i];
//                 phys_end_y = obj_ctrl_board.line_y1[i];
//             }
//
//             physics_fixture_delete(floor_fixture);
//
//             floor_physics_inst_count += 1;
//
//             if ( i != line_count ){
//
//                 floor_fixture = scr_physics_fixture_init();
//
//                 local_phys_start_x = obj_ctrl_board.line_x1[i];
//                 local_phys_start_y = obj_ctrl_board.line_y1[i];
//
//                 physics_fixture_add_point(floor_fixture, obj_ctrl_board.line_x1[i], obj_ctrl_board.line_y1[i]); // Add previous vertex to stitch new with prev
//
//                 floor_fixture_vertex_count = 0;
//             }
//         }
//     }*/
//
//
//     // draw_ratio = ( world_width_draw / world_width_board );
//
//     //- first_line_w = 25;
//     //- first_line_y = irandom_range(100,220);
//
//     //- line_w_min = 25;
//     //- line_w_max = 25;
//
//     // line_glow_offset[1] = 1;
//     // line_glow_offset[2] = 2;
//
//     //- line_glow_alpha[1] = 0.20;
//     //- line_glow_alpha[2] = 0.10;
//     //- line_end_w = irandom_range(35,100);
//
//     //- line_elevation_minus = 20;
//     //- line_elevation_plus = 20;
//
//     //- floor_end_buffer = irandom_range(35,75);
//
//     //- floor_top_buffer = 0;
//     //- floor_top_limit = 150;
//
//     //- tall_lines = 0;
//     //- tall_lines_max = irandom_range(1,2);
//     //- tall_lines_dist = 0;
//     //- tall_lines_size_max = 100;
//     //- tall_lines_chance_perc = 30;
//
//     //- hole_width = 15;
//     //- hole_depth = 15;
//
//     /* show_debug_message("line_x1[" + string(line_count) + "]:" + string(obj_ctrl_board.line_x1[line_count]));
//     show_debug_message("line_y1[" + string(line_count) + "]:" + string(obj_ctrl_board.line_y1[line_count]));
//     show_debug_message("line_x2[" + string(line_count) + "]:" + string(obj_ctrl_board.line_x2[line_count]));
//     show_debug_message("line_y2[" + string(line_count) + "]:" + string(obj_ctrl_board.line_y2[line_count]));*/
//
//
function gml_Script_scr_floor_init(_inst, _other, argument0) {
    var gmlfloor_mode = argument0;
    _inst.gmlfloor_started = 1 ? 1 : 0;
    _inst.gmlfloor_ready = 0 ? 1 : 0;
    _inst.gmlfloor_contruct_speed = 2;
    gml_Script_scr_world_ratio(_inst, _other);
    _inst.gmlcircle_fade_size_add = (global.gmlwin_w / 30);
    if ((_inst.gmldraw_w_ratio < 1)) {
        {
            _inst.gmldraw_w_ratio = 1;
        };
    };
    if ((_inst.gmldraw_h_ratio < 1)) {
        {
            _inst.gmldraw_h_ratio = 1;
        };
    };
    gml_Script_scr_color_world(_inst, _other);
    gml_Script_scr_color_flash(_inst, _other);
    _inst.gmlline_color = gml_Script_scr_color_transition(_inst, _other, _inst.gmlfloor_color_r, _inst.gmlfloor_color_g, _inst.gmlfloor_color_b, _inst.gmlbg_color_r, _inst.gmlbg_color_g, _inst.gmlbg_color_b, 0);
    _inst.gmlline_color2 = gml_Script_scr_color_transition(_inst, _other, _inst.gmlfloor_color_r, _inst.gmlfloor_color_g, _inst.gmlfloor_color_b, _inst.gmlbg_color_r, _inst.gmlbg_color_g, _inst.gmlbg_color_b, 0.5);
    _inst.gmlline_color3 = gml_Script_scr_color_transition(_inst, _other, _inst.gmlfloor_color_r, _inst.gmlfloor_color_g, _inst.gmlfloor_color_b, _inst.gmlbg_color_r, _inst.gmlbg_color_g, _inst.gmlbg_color_b, 0.7);
    _inst.gmlline_glow_color1 = gml_Script_scr_color_transition(_inst, _other, _inst.gmlfloor_color_r, _inst.gmlfloor_color_g, _inst.gmlfloor_color_b, _inst.gmlbg_color_r, _inst.gmlbg_color_g, _inst.gmlbg_color_b, 0.9);
    _inst.gmlline_glow_color2 = gml_Script_scr_color_transition(_inst, _other, _inst.gmlfloor_color_r, _inst.gmlfloor_color_g, _inst.gmlfloor_color_b, _inst.gmlbg_color_r, _inst.gmlbg_color_g, _inst.gmlbg_color_b, 0.95);
    _inst.gmlforce_meter_color_base = make_colour_hsv(_inst.gmlbg_color_h, _inst.gmlbg_color_s, 76.5);
    _inst.gmlline_gerth = ceil((2 * _inst.gmldraw_w_ratio));
    _inst.gmlline_count = 0;
    _inst.gmlline_count_anim = (-1);
    _inst.gmlline_end_done = 0 ? 1 : 0;
    _inst.gmlball_in_hole = 0 ? 1 : 0;
    _inst.gmlforce_meter_show = 0 ? 1 : 0;
    _inst.gmlgrid_size = 20;
    _inst.gmlgrid_w_count = floor((_inst.gmlworld_width_board / _inst.gmlgrid_size));
    _inst.gmlgrid_h_count = floor((_inst.gmlworld_height_draw / (_inst.gmlgrid_size * _inst.gmldraw_h_ratio)));
    _inst.gmlgrids_left = _inst.gmlgrid_w_count;
    _inst.gmlgrid_next_max_x_base = 3;
    _inst.gmlgrid_next_max_y = 2;
    _inst.gmlline_start_grid_size = 2;
    _inst.gmlline_vert_prev = 0 ? 1 : 0;
    _inst.gmlhole_grid_size = 3;
    _inst.gmlfloor_end_buffer_grid_size = 2;
    _inst.gmlterrain_screen_top = (_inst.gmlgrid_size * 2);
    _inst.gmlterrain_screen_bottom = (_inst.gmlworld_height_board - (_inst.gmlgrid_size * 2));
    _inst.gmlfloor_point_lowest_y = (-100000);
    _inst.gmlfloor_point_highest_y = 100000;
    if ((gmlfloor_mode == 2)) {
        {
            _inst.gmlball_start_line = 1;
            var gmlfile_name = "level_order.txt";
            if ((global.gmlgame_mode == 1)) {
                {
                    if ((global.gmlgame_submode == 1)) {
                        {
                            gmlfile_name = "course_25h.txt";
                        };
                    } else {
                        if ((global.gmlgame_submode == 2)) {
                            {
                                gmlfile_name = "course_50h.txt";
                            };
                        } else {
                            if ((global.gmlgame_submode == 3)) {
                                {
                                    gmlfile_name = "course_100h.txt";
                                };
                            } else {
                                if ((global.gmlgame_submode == 4)) {
                                    {
                                        gmlfile_name = "course_150h.txt";
                                    };
                                };
                            };
                        };
                    };
                };
            };
            _inst.gmlfile_level_storage = file_text_open_read(gmlfile_name);
            var gmlnum = 0;
            while ((gmlnum != _inst.gmlgame_levels_curr)) {
                {
                    gmlnum++;
                    _inst.gmllevel_file_points = file_text_read_string(_inst.gmlfile_level_storage);
                    file_text_readln(_inst.gmlfile_level_storage);
                }
            };
            file_text_close(_inst.gmlfile_level_storage);
            gml_Script_scr_level_build_from_string(_inst, _other, _inst.gmllevel_file_points);
        };
    } else {
        {
            if (!(_inst.gmlline_x1 instanceof Array)) {
                _inst.gmlline_x1 = [];
                _inst.gmlline_x1.__yy_owner = 1886366264;
            } else if (_inst.gmlline_x1.__yy_owner !== 1886366264) {
                _inst.gmlline_x1 = _inst.gmlline_x1.slice(0);
                _inst.gmlline_x1.__yy_owner = 1886366264;
            }
            _inst.gmlline_x1[_inst.gmlline_count] = 0;
            if (!(_inst.gmlline_y1 instanceof Array)) {
                _inst.gmlline_y1 = [];
                _inst.gmlline_y1.__yy_owner = 3369323869;
            } else if (_inst.gmlline_y1.__yy_owner !== 3369323869) {
                _inst.gmlline_y1 = _inst.gmlline_y1.slice(0);
                _inst.gmlline_y1.__yy_owner = 3369323869;
            }
            _inst.gmlline_y1[_inst.gmlline_count] = (_inst.gmlterrain_screen_top + (irandom_range(0, (_inst.gmlgrid_h_count - 4)) * _inst.gmlgrid_size));
            if (!(_inst.gmlline_x2 instanceof Array)) {
                _inst.gmlline_x2 = [];
                _inst.gmlline_x2.__yy_owner = 1531116027;
            } else if (_inst.gmlline_x2.__yy_owner !== 1531116027) {
                _inst.gmlline_x2 = _inst.gmlline_x2.slice(0);
                _inst.gmlline_x2.__yy_owner = 1531116027;
            }
            _inst.gmlline_x2[_inst.gmlline_count] = (_inst.gmlline_x1[_inst.gmlline_count] + (_inst.gmlgrid_size * _inst.gmlline_start_grid_size));
            var gmly_up_down_chance = irandom_range(1, 3);
            if ((gmly_up_down_chance == 1)) {
                {
                    gmly_up_down_chance = -irandom_range(1, 2);
                };
            };
            if ((gmly_up_down_chance == 2)) {
                {
                    gmly_up_down_chance = 0;
                };
            };
            if ((gmly_up_down_chance == 3)) {
                {
                    gmly_up_down_chance = irandom_range(1, 2);
                };
            };
            if (!(_inst.gmlline_y2 instanceof Array)) {
                _inst.gmlline_y2 = [];
                _inst.gmlline_y2.__yy_owner = 3825114782;
            } else if (_inst.gmlline_y2.__yy_owner !== 3825114782) {
                _inst.gmlline_y2 = _inst.gmlline_y2.slice(0);
                _inst.gmlline_y2.__yy_owner = 3825114782;
            }
            _inst.gmlline_y2[_inst.gmlline_count] = (_inst.gmlline_y1[_inst.gmlline_count] + (gmly_up_down_chance * _inst.gmlgrid_size));
            if ((_inst.gmlline_y2[_inst.gmlline_count] >= _inst.gmlterrain_screen_bottom)) {
                {
                    _inst.gmlline_y2[_inst.gmlline_count] = (_inst.gmlterrain_screen_bottom - _inst.gmlgrid_size);
                };
            } else {
                if ((_inst.gmlline_y2[_inst.gmlline_count] <= _inst.gmlterrain_screen_top)) {
                    {
                        _inst.gmlline_y2[_inst.gmlline_count] = (_inst.gmlterrain_screen_top + _inst.gmlgrid_size);
                    };
                };
            };
            _inst.gmlgrids_left -= _inst.gmlline_start_grid_size;
            gml_Script_scr_floor_high_low(_inst, _other);
            while ((_inst.gmlgrids_left > 0)) {
                {
                    _inst.gmlline_count += 1;
                    _inst.gmlline_x1[_inst.gmlline_count] = _inst.gmlline_x2[(_inst.gmlline_count - 1)];
                    _inst.gmlline_y1[_inst.gmlline_count] = _inst.gmlline_y2[(_inst.gmlline_count - 1)];
                    if ((_inst.gmlline_count == 1)) {
                        {
                            _inst.gmlline_x2[_inst.gmlline_count] = (_inst.gmlline_x1[_inst.gmlline_count] + (_inst.gmlline_start_grid_size * _inst.gmlgrid_size));
                            _inst.gmlline_y2[_inst.gmlline_count] = _inst.gmlline_y1[_inst.gmlline_count];
                            _inst.gmlball_start_line = _inst.gmlline_count;
                            _inst.gmlline_next_grid_x_count = 2;
                            gml_Script_scr_floor_high_low(_inst, _other);
                        };
                    } else {
                        {
                            var gmlgrid_next_min_x = 0;
                            var gmlgrid_next_max_x = _inst.gmlgrid_next_max_x_base;
                            if (((_inst.gmlline_vert_prev > 0.5) || (_inst.gmlline_end_done > 0.5))) {
                                {
                                    gmlgrid_next_min_x = 1;
                                    _inst.gmlline_vert_prev = 0 ? 1 : 0;
                                };
                            };
                            if ((_inst.gmlgrids_left < gmlgrid_next_max_x)) {
                                {
                                    gmlgrid_next_max_x = _inst.gmlgrids_left;
                                };
                            };
                            _inst.gmlline_next_grid_x_count = irandom_range(gmlgrid_next_min_x, gmlgrid_next_max_x);
                            var gmly_up_down_chance = irandom_range(1, 3);
                            if ((gmly_up_down_chance == 1)) {
                                {
                                    gmly_up_down_chance = (-1);
                                };
                            };
                            if ((gmly_up_down_chance == 2)) {
                                {
                                    gmly_up_down_chance = 0;
                                };
                            };
                            if ((gmly_up_down_chance == 3)) {
                                {
                                    gmly_up_down_chance = 1;
                                };
                            };
                            if ((_inst.gmlline_next_grid_x_count != 0)) {
                                {
                                    if ((_inst.gmlline_next_grid_x_count > _inst.gmlgrids_left)) {
                                        {
                                            _inst.gmlline_next_grid_x_count = _inst.gmlgrids_left;
                                        };
                                    };
                                    _inst.gmlline_next_grid_y_count = (gmly_up_down_chance * _inst.gmlline_next_grid_x_count);
                                };
                            } else {
                                {
                                    _inst.gmlline_vert_prev = 1 ? 1 : 0;
                                    _inst.gmlline_next_grid_y_count = (gmly_up_down_chance * irandom_range(1, _inst.gmlgrid_next_max_y));
                                };
                            };
                            _inst.gmlline_x2[_inst.gmlline_count] = (_inst.gmlline_x1[_inst.gmlline_count] + (_inst.gmlline_next_grid_x_count * _inst.gmlgrid_size));
                            _inst.gmlline_y2[_inst.gmlline_count] = (_inst.gmlline_y1[_inst.gmlline_count] + (_inst.gmlline_next_grid_y_count * _inst.gmlgrid_size));
                            if ((_inst.gmlline_y2[_inst.gmlline_count] >= _inst.gmlterrain_screen_bottom)) {
                                {
                                    _inst.gmlline_y2[_inst.gmlline_count] = (_inst.gmlterrain_screen_bottom - _inst.gmlgrid_size);
                                };
                            } else {
                                if ((_inst.gmlline_y2[_inst.gmlline_count] <= _inst.gmlterrain_screen_top)) {
                                    {
                                        _inst.gmlline_y2[_inst.gmlline_count] = (_inst.gmlterrain_screen_top + _inst.gmlgrid_size);
                                    };
                                };
                            };
                            gml_Script_scr_floor_high_low(_inst, _other);
                            if (((!(_inst.gmlline_end_done > 0.5)) && ((_inst.gmlline_x2[_inst.gmlline_count] > (_inst.gmlworld_width_board - (_inst.gmlhole_grid_size * _inst.gmlgrid_size) - (_inst.gmlfloor_end_buffer_grid_size * _inst.gmlgrid_size)))))) {
                                {
                                    _inst.gmlline_x2[_inst.gmlline_count] = (_inst.gmlline_x1[_inst.gmlline_count] + (1 * _inst.gmlgrid_size));
                                    _inst.gmlline_y2[_inst.gmlline_count] = _inst.gmlline_y1[_inst.gmlline_count];
                                    _inst.gmlline_count += 1;
                                    _inst.gmlline_x1[_inst.gmlline_count] = _inst.gmlline_x2[(_inst.gmlline_count - 1)];
                                    _inst.gmlline_y1[_inst.gmlline_count] = _inst.gmlline_y2[(_inst.gmlline_count - 1)];
                                    _inst.gmlline_x2[_inst.gmlline_count] = _inst.gmlline_x1[_inst.gmlline_count];
                                    _inst.gmlline_y2[_inst.gmlline_count] = (_inst.gmlline_y1[_inst.gmlline_count] + (1 * _inst.gmlgrid_size));
                                    _inst.gmlhole_x1 = _inst.gmlline_x1[_inst.gmlline_count];
                                    _inst.gmlhole_y1 = _inst.gmlline_y1[_inst.gmlline_count];
                                    if ((gmlfloor_mode == 1)) {
                                        {
                                            _inst.gmlfile_hole_x1 = _inst.gmlhole_x1;
                                            _inst.gmlfile_hole_y1 = _inst.gmlhole_y1;
                                        };
                                    };
                                    _inst.gmlline_count += 1;
                                    _inst.gmlline_x1[_inst.gmlline_count] = _inst.gmlline_x2[(_inst.gmlline_count - 1)];
                                    _inst.gmlline_y1[_inst.gmlline_count] = _inst.gmlline_y2[(_inst.gmlline_count - 1)];
                                    _inst.gmlline_x2[_inst.gmlline_count] = (_inst.gmlline_x1[_inst.gmlline_count] + (1 * _inst.gmlgrid_size));
                                    _inst.gmlline_y2[_inst.gmlline_count] = _inst.gmlline_y1[_inst.gmlline_count];
                                    _inst.gmlhole_x2 = _inst.gmlline_x2[_inst.gmlline_count];
                                    _inst.gmlhole_y2 = _inst.gmlline_y2[_inst.gmlline_count];
                                    if ((gmlfloor_mode == 1)) {
                                        {
                                            _inst.gmlfile_hole_x2 = _inst.gmlhole_x2;
                                            _inst.gmlfile_hole_y2 = _inst.gmlhole_y2;
                                        };
                                    };
                                    _inst.gmlline_count += 1;
                                    _inst.gmlline_x1[_inst.gmlline_count] = _inst.gmlline_x2[(_inst.gmlline_count - 1)];
                                    _inst.gmlline_y1[_inst.gmlline_count] = _inst.gmlline_y2[(_inst.gmlline_count - 1)];
                                    _inst.gmlline_x2[_inst.gmlline_count] = _inst.gmlline_x1[_inst.gmlline_count];
                                    _inst.gmlline_y2[_inst.gmlline_count] = (_inst.gmlline_y1[_inst.gmlline_count] - (1 * _inst.gmlgrid_size));
                                    _inst.gmlline_count += 1;
                                    _inst.gmlline_x1[_inst.gmlline_count] = _inst.gmlline_x2[(_inst.gmlline_count - 1)];
                                    _inst.gmlline_y1[_inst.gmlline_count] = _inst.gmlline_y2[(_inst.gmlline_count - 1)];
                                    _inst.gmlline_x2[_inst.gmlline_count] = (_inst.gmlline_x1[_inst.gmlline_count] + (1 * _inst.gmlgrid_size));
                                    _inst.gmlline_y2[_inst.gmlline_count] = _inst.gmlline_y1[_inst.gmlline_count];
                                    _inst.gmlline_next_grid_x_count = _inst.gmlhole_grid_size;
                                    _inst.gmlline_end_done = 1 ? 1 : 0;
                                };
                            };
                        };
                    };
                    _inst.gmlgrids_left -= _inst.gmlline_next_grid_x_count;
                }
            };
            _inst.gmlfloor_code = gml_Script_scr_floor_code(_inst, _other);
        };
    };
    gml_Script_scr_floor_correction(_inst, _other);
    var gmladd_floor_base = 1 ? 1 : 0;
    _inst.gmlfloor_base_count = 0;
    for (_inst.gmli = 0;
        (_inst.gmli <= _inst.gmlline_count); _inst.gmli += 1) {
        {
            if ((((_inst.gmli != 0)) && ((_inst.gmlline_x1[_inst.gmli] == _inst.gmlline_x1[(_inst.gmli - 1)])))) {
                {
                    gmladd_floor_base = 0 ? 1 : 0;
                    if ((_inst.gmlline_y1[_inst.gmli] > _inst.gmlline_y1[(_inst.gmli - 1)])) {
                        {
                            if (!(_inst.gmlfloor_base_x1 instanceof Array)) {
                                _inst.gmlfloor_base_x1 = [];
                                _inst.gmlfloor_base_x1.__yy_owner = 2231957534;
                            } else if (_inst.gmlfloor_base_x1.__yy_owner !== 2231957534) {
                                _inst.gmlfloor_base_x1 = _inst.gmlfloor_base_x1.slice(0);
                                _inst.gmlfloor_base_x1.__yy_owner = 2231957534;
                            }
                            _inst.gmlfloor_base_x1[(_inst.gmlfloor_base_count - 1)] = _inst.gmlline_x1[_inst.gmli];
                            if (!(_inst.gmlfloor_base_y1 instanceof Array)) {
                                _inst.gmlfloor_base_y1 = [];
                                _inst.gmlfloor_base_y1.__yy_owner = 1035247483;
                            } else if (_inst.gmlfloor_base_y1.__yy_owner !== 1035247483) {
                                _inst.gmlfloor_base_y1 = _inst.gmlfloor_base_y1.slice(0);
                                _inst.gmlfloor_base_y1.__yy_owner = 1035247483;
                            }
                            _inst.gmlfloor_base_y1[(_inst.gmlfloor_base_count - 1)] = _inst.gmlline_y1[_inst.gmli];
                            if (!(_inst.gmlfloor_base_x2 instanceof Array)) {
                                _inst.gmlfloor_base_x2 = [];
                                _inst.gmlfloor_base_x2.__yy_owner = 2921704413;
                            } else if (_inst.gmlfloor_base_x2.__yy_owner !== 2921704413) {
                                _inst.gmlfloor_base_x2 = _inst.gmlfloor_base_x2.slice(0);
                                _inst.gmlfloor_base_x2.__yy_owner = 2921704413;
                            }
                            _inst.gmlfloor_base_x2[(_inst.gmlfloor_base_count - 1)] = _inst.gmlline_x1[_inst.gmli];
                            if (!(_inst.gmlfloor_base_y2 instanceof Array)) {
                                _inst.gmlfloor_base_y2 = [];
                                _inst.gmlfloor_base_y2.__yy_owner = 379178168;
                            } else if (_inst.gmlfloor_base_y2.__yy_owner !== 379178168) {
                                _inst.gmlfloor_base_y2 = _inst.gmlfloor_base_y2.slice(0);
                                _inst.gmlfloor_base_y2.__yy_owner = 379178168;
                            }
                            _inst.gmlfloor_base_y2[(_inst.gmlfloor_base_count - 1)] = _inst.gmlterrain_screen_bottom;
                        };
                    };
                };
            };
            if (gmladd_floor_base > 0.5) {
                {
                    if (!(_inst.gmlfloor_base_x1 instanceof Array)) {
                        _inst.gmlfloor_base_x1 = [];
                        _inst.gmlfloor_base_x1.__yy_owner = 2231957534;
                    } else if (_inst.gmlfloor_base_x1.__yy_owner !== 2231957534) {
                        _inst.gmlfloor_base_x1 = _inst.gmlfloor_base_x1.slice(0);
                        _inst.gmlfloor_base_x1.__yy_owner = 2231957534;
                    }
                    _inst.gmlfloor_base_x1[_inst.gmlfloor_base_count] = _inst.gmlline_x1[_inst.gmli];
                    if (!(_inst.gmlfloor_base_y1 instanceof Array)) {
                        _inst.gmlfloor_base_y1 = [];
                        _inst.gmlfloor_base_y1.__yy_owner = 1035247483;
                    } else if (_inst.gmlfloor_base_y1.__yy_owner !== 1035247483) {
                        _inst.gmlfloor_base_y1 = _inst.gmlfloor_base_y1.slice(0);
                        _inst.gmlfloor_base_y1.__yy_owner = 1035247483;
                    }
                    _inst.gmlfloor_base_y1[_inst.gmlfloor_base_count] = _inst.gmlline_y1[_inst.gmli];
                    if (!(_inst.gmlfloor_base_x2 instanceof Array)) {
                        _inst.gmlfloor_base_x2 = [];
                        _inst.gmlfloor_base_x2.__yy_owner = 2921704413;
                    } else if (_inst.gmlfloor_base_x2.__yy_owner !== 2921704413) {
                        _inst.gmlfloor_base_x2 = _inst.gmlfloor_base_x2.slice(0);
                        _inst.gmlfloor_base_x2.__yy_owner = 2921704413;
                    }
                    _inst.gmlfloor_base_x2[_inst.gmlfloor_base_count] = _inst.gmlline_x1[_inst.gmli];
                    if (!(_inst.gmlfloor_base_y2 instanceof Array)) {
                        _inst.gmlfloor_base_y2 = [];
                        _inst.gmlfloor_base_y2.__yy_owner = 379178168;
                    } else if (_inst.gmlfloor_base_y2.__yy_owner !== 379178168) {
                        _inst.gmlfloor_base_y2 = _inst.gmlfloor_base_y2.slice(0);
                        _inst.gmlfloor_base_y2.__yy_owner = 379178168;
                    }
                    _inst.gmlfloor_base_y2[_inst.gmlfloor_base_count] = _inst.gmlterrain_screen_bottom;
                    gml_Script_scr_floor_base_displace(_inst, _other, _inst.gmlfloor_base_count);
                    _inst.gmlfloor_base_count += 1;
                };
            };
            gmladd_floor_base = 1 ? 1 : 0;
        }
    };
    if (!(_inst.gmlfloor_base_x1 instanceof Array)) {
        _inst.gmlfloor_base_x1 = [];
        _inst.gmlfloor_base_x1.__yy_owner = 2231957534;
    } else if (_inst.gmlfloor_base_x1.__yy_owner !== 2231957534) {
        _inst.gmlfloor_base_x1 = _inst.gmlfloor_base_x1.slice(0);
        _inst.gmlfloor_base_x1.__yy_owner = 2231957534;
    }
    _inst.gmlfloor_base_x1[_inst.gmlfloor_base_count] = _inst.gmlline_x2[_inst.gmlline_count];
    if (!(_inst.gmlfloor_base_y1 instanceof Array)) {
        _inst.gmlfloor_base_y1 = [];
        _inst.gmlfloor_base_y1.__yy_owner = 1035247483;
    } else if (_inst.gmlfloor_base_y1.__yy_owner !== 1035247483) {
        _inst.gmlfloor_base_y1 = _inst.gmlfloor_base_y1.slice(0);
        _inst.gmlfloor_base_y1.__yy_owner = 1035247483;
    }
    _inst.gmlfloor_base_y1[_inst.gmlfloor_base_count] = _inst.gmlline_y2[_inst.gmlline_count];
    if (!(_inst.gmlfloor_base_x2 instanceof Array)) {
        _inst.gmlfloor_base_x2 = [];
        _inst.gmlfloor_base_x2.__yy_owner = 2921704413;
    } else if (_inst.gmlfloor_base_x2.__yy_owner !== 2921704413) {
        _inst.gmlfloor_base_x2 = _inst.gmlfloor_base_x2.slice(0);
        _inst.gmlfloor_base_x2.__yy_owner = 2921704413;
    }
    _inst.gmlfloor_base_x2[_inst.gmlfloor_base_count] = (_inst.gmlline_x2[_inst.gmlline_count] + _inst.gmlgrid_size);
    if (!(_inst.gmlfloor_base_y2 instanceof Array)) {
        _inst.gmlfloor_base_y2 = [];
        _inst.gmlfloor_base_y2.__yy_owner = 379178168;
    } else if (_inst.gmlfloor_base_y2.__yy_owner !== 379178168) {
        _inst.gmlfloor_base_y2 = _inst.gmlfloor_base_y2.slice(0);
        _inst.gmlfloor_base_y2.__yy_owner = 379178168;
    }
    _inst.gmlfloor_base_y2[_inst.gmlfloor_base_count] = _inst.gmlterrain_screen_bottom;
    if ((((gmlfloor_mode == 0)) || ((gmlfloor_mode == 2)))) {
        {
            if ((_inst.gmlfloor_physics_inst[0] != 0)) {
                {
                    for (var gmli = 0;
                        (gmli < _inst.gmlfloor_physics_inst_count); gmli++) {
                        {
                            {
                                var __yy__v22 = GetWithArray(_inst.gmlfloor_physics_inst[gmli]);
                                for (var __yy__v23 in __yy__v22) {
                                    if (!__yy__v22.hasOwnProperty(__yy__v23)) continue;
                                    var __yy__v24 = __yy__v22[__yy__v23];
                                    if (__yy__v24.marked) continue;
                                    if (!__yy__v24.active) continue; {
                                        instance_destroy(__yy__v24);
                                    }
                                }
                            };
                        }
                    };
                };
            };
            var gmlfloor_fixture = gml_Script_scr_physics_fixture_init(_inst, _other);
            var gmllocal_phys_start_x = yyInst(2).gmlline_x1[0];
            var gmllocal_phys_start_y = yyInst(2).gmlline_y1[0];
            physics_fixture_add_point(gmlfloor_fixture, gmllocal_phys_start_x, gmllocal_phys_start_y);
            _inst.gmlfloor_fixture_vertex_count = (-1);
            _inst.gmlfloor_physics_inst_count = 0;
            for (var gmli = 0;
                (gmli <= _inst.gmlline_count); gmli++) {
                {
                    _inst.gmlfloor_fixture_vertex_count += 1;
                    physics_fixture_add_point(gmlfloor_fixture, yyInst(2).gmlline_x2[gmli], yyInst(2).gmlline_y2[gmli]);
                    if ((((_inst.gmlfloor_fixture_vertex_count == 5)) || ((gmli == _inst.gmlline_count)))) {
                        {
                            if (!(_inst.gmlfloor_physics_inst instanceof Array)) {
                                _inst.gmlfloor_physics_inst = [];
                                _inst.gmlfloor_physics_inst.__yy_owner = 2998142590;
                            } else if (_inst.gmlfloor_physics_inst.__yy_owner !== 2998142590) {
                                _inst.gmlfloor_physics_inst = _inst.gmlfloor_physics_inst.slice(0);
                                _inst.gmlfloor_physics_inst.__yy_owner = 2998142590;
                            }
                            _inst.gmlfloor_physics_inst[_inst.gmlfloor_physics_inst_count] = instance_create(0, 0, 9);
                            physics_fixture_bind(_inst, gmlfloor_fixture, _inst.gmlfloor_physics_inst[_inst.gmlfloor_physics_inst_count]); {
                                var __yy__v25 = GetWithArray(_inst.gmlfloor_physics_inst[_inst.gmlfloor_physics_inst_count]);
                                for (var __yy__v26 in __yy__v25) {
                                    if (!__yy__v25.hasOwnProperty(__yy__v26)) continue;
                                    var __yy__v27 = __yy__v25[__yy__v26];
                                    if (__yy__v27.marked) continue;
                                    if (!__yy__v27.active) continue; {
                                        __yy__v27.set_physics_active(0 ? 1 : 0);
                                        __yy__v27.gmlphys_start_x = gmllocal_phys_start_x;
                                        __yy__v27.gmlphys_start_y = gmllocal_phys_start_y;
                                        __yy__v27.gmlphys_end_x = yyInst(2).gmlline_x2[gmli];
                                        __yy__v27.gmlphys_end_y = yyInst(2).gmlline_y2[gmli];
                                    }
                                }
                            };
                            physics_fixture_delete(gmlfloor_fixture);
                            _inst.gmlfloor_physics_inst_count += 1;
                            if ((gmli != _inst.gmlline_count)) {
                                {
                                    gmlfloor_fixture = gml_Script_scr_physics_fixture_init(_inst, _other);
                                    gmllocal_phys_start_x = yyInst(2).gmlline_x1[(gmli + 1)];
                                    gmllocal_phys_start_y = yyInst(2).gmlline_y1[(gmli + 1)];
                                    physics_fixture_add_point(gmlfloor_fixture, gmllocal_phys_start_x, gmllocal_phys_start_y);
                                    _inst.gmlfloor_fixture_vertex_count = (-1);
                                };
                            };
                        };
                    };
                }
            };
        };
    };
}

// #####################################################################################################
// /// scr_floor_surface_v2(line_count,x_move,y_move,line_alpha,line_color,line_gerth,type,line_start)
//
//     var scr_line_count = argument0;
//     var x_move = argument1;
//     var y_move = argument2;
//     var line_alpha = argument3;
//     var line_color = argument4;
//     var line_gerth = argument5;
//     var type = argument6;
//     var line_start = argument7;
//
//     var x1 = 0;
//     var y1 = 0;
//     var x2 = 0;
//     var y2 = 0;
//
//     draw_set_alpha(line_alpha);
//
//     /*if ( ( scr_line_count - line_start ) >= 2 ){
//
//         for ( i=line_start+1; i<=scr_line_count; i+=1 ){
//
//
//         }
//     }*/
//
//     for ( i=line_start; i<=scr_line_count; i+=1 ){
//
//         x1 = floor(( line_x1[i] + x_move ) * obj_ctrl_board.draw_w_ratio );
//         y1 = floor(( line_y1[i] + y_move ) * obj_ctrl_board.draw_w_ratio );
//
//         x2 = floor(( line_x2[i] + x_move ) * obj_ctrl_board.draw_w_ratio );
//         y2 = floor(( line_y2[i] + y_move ) * obj_ctrl_board.draw_w_ratio );
//
//         var line_angle = point_direction(x1,y1,x2,y2);
//
//         if ( type == 1 ){
//         // Single Line Only
//
//             draw_line_width_colour(x1,y1,x2,y2,line_gerth,line_color,line_color);
//         }
//         else if ( type == 2 ){
//         // Line Glows
//
//             draw_circle_colour(x1,y1,line_gerth,line_color,line_color,false);
//
//             draw_circle_colour(x2,y2,line_gerth,line_color,line_color,false);
//
//             var line_lenght = point_distance(x1,y1,x2,y2);
//             var glow_step = 1;
//             var glow_interval = ceil( line_gerth / ( 40 * world_grid_ratio ));
//             var glow_max = floor( line_lenght / glow_interval );
//             var glow_x = x1;
//             var glow_y = y1;
//
//             repeat ( glow_max ){
//
//                 glow_x = glow_x + lengthdir_x(( glow_interval * glow_step ),line_angle);
//                 glow_y = glow_y + lengthdir_y(( glow_interval * glow_step ),line_angle);
//
//                 if ( point_distance(x1,y1,glow_x,glow_y) < line_lenght ){
//
//                     draw_circle_colour(glow_x,glow_y,line_gerth,line_color,line_color,false);
//                 }
//
//                 glow_step += 1;
//             }
//         }
//         else if ( type == 3 ){
//         // Line Rounded Caps Only
//
//             draw_circle_colour(x1,y1,line_gerth,line_color,line_color,false);
//             draw_circle_colour(x2,y2,line_gerth,line_color,line_color,false);
//
//             // Triangle Caps
//             /*
//             if ( i != line_count ){
//
//                 var next_x2 = (( line_x2[i+1] + x_move ) * obj_ctrl_board.draw_w_ratio );
//                 var next_y2 = (( line_y2[i+1] + y_move ) * obj_ctrl_board.draw_w_ratio );
//
//                 var next_line_angle = point_direction(x2,y2,next_x2,next_y2);
//
//                 var tri_x1 = x2;
//                 var tri_y1 = y2;
//
//                 if ( line_angle < 180 ){ var tri_angle_1 = ( line_angle + 90 ); }
//                 else { var tri_angle_1 = ( line_angle - 90 ); }
//
//                 var tri_x2 = tri_x1 + lengthdir_x(line_gerth,tri_angle_1);
//                 var tri_y2 = tri_y1 + lengthdir_y(line_gerth,tri_angle_1);
//
//                 if ( next_line_angle < 90 ){ var tri_angle_2 = ( next_line_angle - 90 ); }
//                 else { var tri_angle_2 = ( line_angle + 90 ); }
//
//                 var tri_x3 = tri_x1 + lengthdir_x(line_gerth,tri_angle_2);
//                 var tri_y3 = tri_y1 + lengthdir_y(line_gerth,tri_angle_2);
//
//                 // draw_triangle_colour(tri_x1,tri_y1,tri_x2,tri_y2,tri_x3,tri_y3,line_color,line_color,line_color,false);
//
//                 draw_point_color(tri_x1,tri_y1,c_lime);
//                 draw_point_color(tri_x2,tri_y2,c_lime);
//                 draw_point_color(tri_x3,tri_y3,c_lime);
//
//             }
//             */
//         }
//     }
//
//
function gml_Script_scr_floor_surface_v2(_inst, _other, argument0, argument1, argument2, argument3, argument4, argument5, argument6, argument7) {
    var gmlscr_line_count = argument0;
    var gmlx_move = argument1;
    var gmly_move = argument2;
    var gmlline_alpha = argument3;
    var gmlline_color = argument4;
    var gmlline_gerth = argument5;
    var gmltype = argument6;
    var gmlline_start = argument7;
    var gmlx1 = 0;
    var gmly1 = 0;
    var gmlx2 = 0;
    var gmly2 = 0;
    draw_set_alpha(gmlline_alpha);
    for (_inst.gmli = gmlline_start;
        (_inst.gmli <= gmlscr_line_count); _inst.gmli += 1) {
        {
            gmlx1 = floor(((_inst.gmlline_x1[_inst.gmli] + gmlx_move) * yyInst(2).gmldraw_w_ratio));
            gmly1 = floor(((_inst.gmlline_y1[_inst.gmli] + gmly_move) * yyInst(2).gmldraw_w_ratio));
            gmlx2 = floor(((_inst.gmlline_x2[_inst.gmli] + gmlx_move) * yyInst(2).gmldraw_w_ratio));
            gmly2 = floor(((_inst.gmlline_y2[_inst.gmli] + gmly_move) * yyInst(2).gmldraw_w_ratio));
            var gmlline_angle = point_direction(gmlx1, gmly1, gmlx2, gmly2);
            if ((gmltype == 1)) {
                {
                    draw_line_width_colour(gmlx1, gmly1, gmlx2, gmly2, gmlline_gerth, gmlline_color, gmlline_color);
                };
            } else {
                if ((gmltype == 2)) {
                    {
                        draw_circle_colour(gmlx1, gmly1, gmlline_gerth, gmlline_color, gmlline_color, 0);
                        draw_circle_colour(gmlx2, gmly2, gmlline_gerth, gmlline_color, gmlline_color, 0);
                        var gmlline_lenght = point_distance(gmlx1, gmly1, gmlx2, gmly2);
                        var gmlglow_step = 1;
                        var gmlglow_interval = ceil((gmlline_gerth / (40 * _inst.gmlworld_grid_ratio)));
                        var gmlglow_max = floor((gmlline_lenght / gmlglow_interval));
                        var gmlglow_x = gmlx1;
                        var gmlglow_y = gmly1;
                        for (var __yy__v28 = 0, __yy__v29 = ~~(gmlglow_max); __yy__v28 < __yy__v29; __yy__v28++) {
                            {
                                gmlglow_x = (gmlglow_x + lengthdir_x((gmlglow_interval * gmlglow_step), gmlline_angle));
                                gmlglow_y = (gmlglow_y + lengthdir_y((gmlglow_interval * gmlglow_step), gmlline_angle));
                                if ((point_distance(gmlx1, gmly1, gmlglow_x, gmlglow_y) < gmlline_lenght)) {
                                    {
                                        draw_circle_colour(gmlglow_x, gmlglow_y, gmlline_gerth, gmlline_color, gmlline_color, 0);
                                    };
                                };
                                gmlglow_step += 1;
                            }
                        };
                    };
                } else {
                    if ((gmltype == 3)) {
                        {
                            draw_circle_colour(gmlx1, gmly1, gmlline_gerth, gmlline_color, gmlline_color, 0);
                            draw_circle_colour(gmlx2, gmly2, gmlline_gerth, gmlline_color, gmlline_color, 0);
                        };
                    };
                };
            };
        }
    };
}

// #####################################################################################################
// /// scr_level_analyze()
//
// // Analyze Level
//
//     // line_count
//
//     level_score = 0;
//
//     // 1. la tabla empieza inmediatamente con una linea vertical hacia arriba. (1) por cada seccion vertical
//
//     // scr_debug_print("line_x1:" + string(line_x1[2]));
//     // scr_debug_print("line_y1:" + string(line_y1[2]));
//     // scr_debug_print("line_x2:" + string(line_x2[2]));
//     // scr_debug_print("line_y2:" + string(line_y2[2]));
//
//     // scr_debug_print("angle:" + string(point_direction(line_x1[2],line_y1[2],line_x2[2],line_y2[2])));
//
//     if ( point_direction(line_x1[2],line_y1[2],line_x2[2],line_y2[2]) == 90 ){
//
//         level_score += 1; scr_debug_print("point 1 : +1");
//     }
//
//
//     // 2. la seccion inmediatamente luego del hoyo es para abajo (1)
//
//     for ( i=0; i<=line_count; i+=1 ){
//
//         // scr_debug_print(string(hole_x1) + " = " + string(line_x1[i]));
//         // scr_debug_print(string(hole_y1+grid_size) + " = " + string(line_y1[i]));
//         // scr_debug_print(string(hole_x2) + " = " + string(line_x2[i]));
//         // scr_debug_print(string(hole_y2) + " = " + string(line_y2[i]));
//         // scr_debug_print("---");
//
//         if (( hole_x1 = line_x1[i] ) and (( hole_y1 + grid_size ) = line_y1[i] ) and ( hole_x2 = line_x2[i] ) and ( hole_y2 = line_y2[i] )){
//
//             // scr_debug_print("hole: " + string(point_direction(line_x1[i+3],line_y1[i+3],line_x2[i+3],line_y2[i+3])));
//
//             var line_angle = point_direction(line_x1[i+3],line_y1[i+3],line_x2[i+3],line_y2[i+3])
//
//             if ( line_angle >= 270 ){ level_score += 1; scr_debug_print("point 2 : +1"); }
//         }
//     }
//
//
//     // 3. la tabla termina con un plano horizontal (1)
//
//     if ( point_direction(line_x1[line_count],line_y1[line_count],line_x2[line_count],line_y2[line_count]) == 0 ){
//
//         level_score += 1; scr_debug_print("point 3 : +1");
//     }
//
//
//     // 4. la tabla termina con una seccion para abajo (2)
//
//     if ( point_direction(line_x1[line_count],line_y1[line_count],line_x2[line_count],line_y2[line_count]) >= 270 ){
//
//         level_score += 2; scr_debug_print("point 4 : +2");
//
//         var line_angle = point_direction(line_x1[line_count-1],line_y1[line_count-1],line_x2[line_count-1],line_y2[line_count-1])
//
//         if (( line_angle < 90 ) and ( line_angle > 0 )){ level_score -= 1; }
//     }
//
//
//     // 5. Tiene una linea vertical de mas de una seccion. (1) por cada seccion mas alla de la primera.
//     //    a. (1) si la seccion anterior es horizontal
//     //    b. (2) si la seccion anterior es con angulo hacia abajo
//
//     // var line_vertical = false;
//
//     for ( i=0; i<=line_count; i+=1 ){
//
//         if (( line_x1[i] != hole_x2 or line_y1[i] != hole_y2 )){
//
//             if ( point_direction(line_x1[i],line_y1[i],line_x2[i],line_y2[i]) == 90 ){
//
//                 // if ( line_vertical ){ level_score += 1; }
//
//                 // line_vertical = true;
//
//                 var line_height = point_distance(line_x1[i],line_y1[i],line_x2[i],line_y2[i]);
//
//                 // scr_debug_print("line_height: " + string(line_height));
//
//                 if ( line_height >= grid_size ){
//
//                     var score_temp = ( line_height / grid_size ) - 1;
//
//                     level_score += score_temp; scr_debug_print("point 5 : +" + string(score_temp));
//
//                     if ( point_direction(line_x1[i-1],line_y1[i-1],line_x2[i-1],line_y2[i-1]) == 0 ){ level_score += 1; scr_debug_print("point 5a : +1"); }
//                     else if ( point_direction(line_x1[i-1],line_y1[i-1],line_x2[i-1],line_y2[i-1]) >= 270 ){ level_score += 2; scr_debug_print("point 5b : +2"); }
//                 }
//             }
//         }
//     }
//
//
//     // 6. Si la tabla tiene mucha altura. (1) por cada 4 secciones de altura? si es mas de 5 secciones de alto
//
//     scr_level_height()
//
//     var level_height = floor_point_lowest_y - floor_point_highest_y;
//
//     if (( level_height / grid_size ) > 4 ){
//
//         // scr_debug_print("floor_point_lowest_y : " + string(floor_point_lowest_y));
//         // scr_debug_print("floor_point_highest_y : " + string(floor_point_highest_y));
//         // scr_debug_print("level_height : " + string(level_height));
//         // scr_debug_print("(( level_height ) - ( grid_size * 3 )) : " + string((( level_height ) - ( grid_size * 4 ))));
//         // scr_debug_print("floor((( level_height ) - ( grid_size * 3 )) / ( grid_size * 3 )) : " + string(floor((( level_height ) - ( grid_size * 4 )) / ( grid_size * 3 ))));
//         // scr_debug_print("---");
//
//         var score_temp = floor((( level_height ) - ( grid_size * 3 )) / ( grid_size * 3 ));
//
//         level_score += score_temp; scr_debug_print("point 6 : +" + string(score_temp));
//     }
//
//
//     // 7. Si la tabla es menor que 3 secciones (-2)
//
//     if (( level_height / grid_size ) <= 3 ){ level_score -= 2; scr_debug_print("point 7 : -2"); }
//
//
//     scr_debug_print("-- analysis end --");
//
//     if ( level_score < 0 ){ level_score = 0; }
//
//
function gml_Script_scr_level_analyze(_inst, _other) {
    _inst.gmllevel_score = 0;
    if ((point_direction(_inst.gmlline_x1[2], _inst.gmlline_y1[2], _inst.gmlline_x2[2], _inst.gmlline_y2[2]) == 90)) {
        {
            _inst.gmllevel_score += 1;
            gml_Script_scr_debug_print(_inst, _other, "point 1 : +1");
        };
    };
    for (_inst.gmli = 0;
        (_inst.gmli <= _inst.gmlline_count); _inst.gmli += 1) {
        {
            if ((((_inst.gmlhole_x1 == _inst.gmlline_x1[_inst.gmli])) && (((_inst.gmlhole_y1 + _inst.gmlgrid_size) == _inst.gmlline_y1[_inst.gmli])) && ((_inst.gmlhole_x2 == _inst.gmlline_x2[_inst.gmli])) && ((_inst.gmlhole_y2 == _inst.gmlline_y2[_inst.gmli])))) {
                {
                    var gmlline_angle = point_direction(_inst.gmlline_x1[(_inst.gmli + 3)], _inst.gmlline_y1[(_inst.gmli + 3)], _inst.gmlline_x2[(_inst.gmli + 3)], _inst.gmlline_y2[(_inst.gmli + 3)]);
                    if ((gmlline_angle >= 270)) {
                        {
                            _inst.gmllevel_score += 1;
                            gml_Script_scr_debug_print(_inst, _other, "point 2 : +1");
                        };
                    };
                };
            };
        }
    };
    if ((point_direction(_inst.gmlline_x1[_inst.gmlline_count], _inst.gmlline_y1[_inst.gmlline_count], _inst.gmlline_x2[_inst.gmlline_count], _inst.gmlline_y2[_inst.gmlline_count]) == 0)) {
        {
            _inst.gmllevel_score += 1;
            gml_Script_scr_debug_print(_inst, _other, "point 3 : +1");
        };
    };
    if ((point_direction(_inst.gmlline_x1[_inst.gmlline_count], _inst.gmlline_y1[_inst.gmlline_count], _inst.gmlline_x2[_inst.gmlline_count], _inst.gmlline_y2[_inst.gmlline_count]) >= 270)) {
        {
            _inst.gmllevel_score += 2;
            gml_Script_scr_debug_print(_inst, _other, "point 4 : +2");
            var gmlline_angle = point_direction(_inst.gmlline_x1[(_inst.gmlline_count - 1)], _inst.gmlline_y1[(_inst.gmlline_count - 1)], _inst.gmlline_x2[(_inst.gmlline_count - 1)], _inst.gmlline_y2[(_inst.gmlline_count - 1)]);
            if ((((gmlline_angle < 90)) && ((gmlline_angle > 0)))) {
                {
                    _inst.gmllevel_score -= 1;
                };
            };
        };
    };
    for (_inst.gmli = 0;
        (_inst.gmli <= _inst.gmlline_count); _inst.gmli += 1) {
        {
            if ((((_inst.gmlline_x1[_inst.gmli] != _inst.gmlhole_x2)) || ((_inst.gmlline_y1[_inst.gmli] != _inst.gmlhole_y2)))) {
                {
                    if ((point_direction(_inst.gmlline_x1[_inst.gmli], _inst.gmlline_y1[_inst.gmli], _inst.gmlline_x2[_inst.gmli], _inst.gmlline_y2[_inst.gmli]) == 90)) {
                        {
                            var gmlline_height = point_distance(_inst.gmlline_x1[_inst.gmli], _inst.gmlline_y1[_inst.gmli], _inst.gmlline_x2[_inst.gmli], _inst.gmlline_y2[_inst.gmli]);
                            if ((gmlline_height >= _inst.gmlgrid_size)) {
                                {
                                    var gmlscore_temp = ((gmlline_height / _inst.gmlgrid_size) - 1);
                                    _inst.gmllevel_score += gmlscore_temp;
                                    gml_Script_scr_debug_print(_inst, _other, ("point 5 : +" + string(gmlscore_temp)));
                                    if ((point_direction(_inst.gmlline_x1[(_inst.gmli - 1)], _inst.gmlline_y1[(_inst.gmli - 1)], _inst.gmlline_x2[(_inst.gmli - 1)], _inst.gmlline_y2[(_inst.gmli - 1)]) == 0)) {
                                        {
                                            _inst.gmllevel_score += 1;
                                            gml_Script_scr_debug_print(_inst, _other, "point 5a : +1");
                                        };
                                    } else {
                                        if ((point_direction(_inst.gmlline_x1[(_inst.gmli - 1)], _inst.gmlline_y1[(_inst.gmli - 1)], _inst.gmlline_x2[(_inst.gmli - 1)], _inst.gmlline_y2[(_inst.gmli - 1)]) >= 270)) {
                                            {
                                                _inst.gmllevel_score += 2;
                                                gml_Script_scr_debug_print(_inst, _other, "point 5b : +2");
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        }
    };
    gml_Script_scr_level_height(_inst, _other);
    var gmllevel_height = (_inst.gmlfloor_point_lowest_y - _inst.gmlfloor_point_highest_y);
    if (((gmllevel_height / _inst.gmlgrid_size) > 4)) {
        {
            var gmlscore_temp = floor(((gmllevel_height - (_inst.gmlgrid_size * 3)) / (_inst.gmlgrid_size * 3)));
            _inst.gmllevel_score += gmlscore_temp;
            gml_Script_scr_debug_print(_inst, _other, ("point 6 : +" + string(gmlscore_temp)));
        };
    };
    if (((gmllevel_height / _inst.gmlgrid_size) <= 3)) {
        {
            _inst.gmllevel_score -= 2;
            gml_Script_scr_debug_print(_inst, _other, "point 7 : -2");
        };
    };
    gml_Script_scr_debug_print(_inst, _other, "-- analysis end --");
    if ((_inst.gmllevel_score < 0)) {
        {
            _inst.gmllevel_score = 0;
        };
    };
}

// #####################################################################################################
// /// scr_level_build_from_string(level_string);
//
//     var level_file_points = argument0;
//
//     // Save Plot Points
//
//         var pos;
//         var level_file_points_temp = level_file_points;
//         var level_floor_points_array
//         var level_plot_count = 0;
//
//         // Separate plot points from hole points
//
//             pos = string_pos("$",level_file_points_temp);
//
//                 level_floor_points = string_copy(level_file_points_temp,1,pos-1);
//
//             level_file_points_temp = string_copy(level_file_points_temp,pos+1,string_length(level_file_points_temp)-pos);
//
//             pos = string_pos("$",level_file_points_temp);
//
//                 level_hole_points = string_copy(level_file_points_temp,1,pos-1);
//
//                 level_score = string_copy(level_file_points_temp,pos+1,string_length(level_file_points_temp)-pos);
//
//             floor_code = level_floor_points;
//
//
//         // Put floor points into array
//
//             while ( string_pos("+",level_floor_points) > 0){
//
//                 pos = string_pos("+",level_floor_points);
//
//                 level_floor_points_array[level_plot_count] = string_copy(level_floor_points,1,pos-1);
//
//                 // show_debug_message("level_floor_points_array[" + string(level_plot_count) + "]: " + string(level_floor_points_array[level_plot_count]))
//
//                 level_floor_points = string_copy(level_floor_points,pos+1,string_length(level_floor_points)-pos);
//
//                 level_plot_count += 1;
//             }
//
//             level_floor_points_array[level_plot_count] = level_floor_points;
//
//
//     // Create Floor Lines
//
//         var curr_plot;
//
//         line_count = -1;
//
//         for ( i=0; i<level_plot_count; i+=1 ){
//
//             line_count += 1;
//
//             // First Point
//
//                 curr_plot = level_floor_points_array[i];
//
//                 pos = string_pos(",",curr_plot);
//
//                 line_x1[line_count] = real(string_copy(curr_plot,1,pos-1));
//
//                 curr_plot = string_copy(curr_plot,pos+1,string_length(curr_plot)-pos);
//
//                 line_y1[line_count] = real(curr_plot);
//
//             // Second Point
//
//                 curr_plot = level_floor_points_array[i+1];
//
//                 pos = string_pos(",",curr_plot);
//
//                 line_x2[line_count] = real(string_copy(curr_plot,1,pos-1));
//
//                 curr_plot = string_copy(curr_plot,pos+1,string_length(curr_plot)-pos);
//
//                 line_y2[line_count] = real(curr_plot);
//         }
//
//
//     // Create Hole Points
//
//         // show_debug_message("level_hole_points: " + string(level_hole_points));
//
//         pos = string_pos(",",level_hole_points);
//
//         hole_x1 = real(string_copy(level_hole_points,1,pos-1)); // hole_x1
//
//             level_hole_points = string_copy(level_hole_points,pos+1,string_length(level_hole_points)-pos);
//
//             pos = string_pos(",",level_hole_points);
//
//         hole_y1 = real(string_copy(level_hole_points,1,pos-1)); // hole_y1
//
//             level_hole_points = string_copy(level_hole_points,pos+1,string_length(level_hole_points)-pos);
//
//             pos = string_pos(",",level_hole_points);
//
//         hole_x2 = real(string_copy(level_hole_points,1,pos-1)); // hole_x2
//
//         hole_y2 = real(string_copy(level_hole_points,pos+1,string_length(level_hole_points)-pos)); // hole_y2
//
//
function gml_Script_scr_level_build_from_string(_inst, _other, argument0) {
    var gmllevel_file_points = argument0;
    var gmlpos;
    var gmllevel_file_points_temp = gmllevel_file_points;
    var gmllevel_floor_points_array;
    var gmllevel_plot_count = 0;
    gmlpos = string_pos("$", gmllevel_file_points_temp);
    _inst.gmllevel_floor_points = string_copy(gmllevel_file_points_temp, 1, (gmlpos - 1));
    gmllevel_file_points_temp = string_copy(gmllevel_file_points_temp, (gmlpos + 1), (string_length(gmllevel_file_points_temp) - gmlpos));
    gmlpos = string_pos("$", gmllevel_file_points_temp);
    _inst.gmllevel_hole_points = string_copy(gmllevel_file_points_temp, 1, (gmlpos - 1));
    _inst.gmllevel_score = string_copy(gmllevel_file_points_temp, (gmlpos + 1), (string_length(gmllevel_file_points_temp) - gmlpos));
    _inst.gmlfloor_code = _inst.gmllevel_floor_points;
    while ((string_pos("+", _inst.gmllevel_floor_points) > 0)) {
        {
            gmlpos = string_pos("+", _inst.gmllevel_floor_points);
            if (!(gmllevel_floor_points_array instanceof Array)) {
                gmllevel_floor_points_array = [];
                gmllevel_floor_points_array.__yy_owner = -377;
            } else if (gmllevel_floor_points_array.__yy_owner !== -377) {
                gmllevel_floor_points_array = gmllevel_floor_points_array.slice(0);
                gmllevel_floor_points_array.__yy_owner = -377;
            }
            gmllevel_floor_points_array[gmllevel_plot_count] = string_copy(_inst.gmllevel_floor_points, 1, (gmlpos - 1));
            _inst.gmllevel_floor_points = string_copy(_inst.gmllevel_floor_points, (gmlpos + 1), (string_length(_inst.gmllevel_floor_points) - gmlpos));
            gmllevel_plot_count += 1;
        }
    };
    if (!(gmllevel_floor_points_array instanceof Array)) {
        gmllevel_floor_points_array = [];
        gmllevel_floor_points_array.__yy_owner = -377;
    } else if (gmllevel_floor_points_array.__yy_owner !== -377) {
        gmllevel_floor_points_array = gmllevel_floor_points_array.slice(0);
        gmllevel_floor_points_array.__yy_owner = -377;
    }
    gmllevel_floor_points_array[gmllevel_plot_count] = _inst.gmllevel_floor_points;
    var gmlcurr_plot;
    _inst.gmlline_count = (-1);
    for (_inst.gmli = 0;
        (_inst.gmli < gmllevel_plot_count); _inst.gmli += 1) {
        {
            _inst.gmlline_count += 1;
            gmlcurr_plot = gmllevel_floor_points_array[_inst.gmli];
            gmlpos = string_pos(",", gmlcurr_plot);
            if (!(_inst.gmlline_x1 instanceof Array)) {
                _inst.gmlline_x1 = [];
                _inst.gmlline_x1.__yy_owner = 1886366264;
            } else if (_inst.gmlline_x1.__yy_owner !== 1886366264) {
                _inst.gmlline_x1 = _inst.gmlline_x1.slice(0);
                _inst.gmlline_x1.__yy_owner = 1886366264;
            }
            _inst.gmlline_x1[_inst.gmlline_count] = real(string_copy(gmlcurr_plot, 1, (gmlpos - 1)));
            gmlcurr_plot = string_copy(gmlcurr_plot, (gmlpos + 1), (string_length(gmlcurr_plot) - gmlpos));
            if (!(_inst.gmlline_y1 instanceof Array)) {
                _inst.gmlline_y1 = [];
                _inst.gmlline_y1.__yy_owner = 3369323869;
            } else if (_inst.gmlline_y1.__yy_owner !== 3369323869) {
                _inst.gmlline_y1 = _inst.gmlline_y1.slice(0);
                _inst.gmlline_y1.__yy_owner = 3369323869;
            }
            _inst.gmlline_y1[_inst.gmlline_count] = real(gmlcurr_plot);
            gmlcurr_plot = gmllevel_floor_points_array[(_inst.gmli + 1)];
            gmlpos = string_pos(",", gmlcurr_plot);
            if (!(_inst.gmlline_x2 instanceof Array)) {
                _inst.gmlline_x2 = [];
                _inst.gmlline_x2.__yy_owner = 1531116027;
            } else if (_inst.gmlline_x2.__yy_owner !== 1531116027) {
                _inst.gmlline_x2 = _inst.gmlline_x2.slice(0);
                _inst.gmlline_x2.__yy_owner = 1531116027;
            }
            _inst.gmlline_x2[_inst.gmlline_count] = real(string_copy(gmlcurr_plot, 1, (gmlpos - 1)));
            gmlcurr_plot = string_copy(gmlcurr_plot, (gmlpos + 1), (string_length(gmlcurr_plot) - gmlpos));
            if (!(_inst.gmlline_y2 instanceof Array)) {
                _inst.gmlline_y2 = [];
                _inst.gmlline_y2.__yy_owner = 3825114782;
            } else if (_inst.gmlline_y2.__yy_owner !== 3825114782) {
                _inst.gmlline_y2 = _inst.gmlline_y2.slice(0);
                _inst.gmlline_y2.__yy_owner = 3825114782;
            }
            _inst.gmlline_y2[_inst.gmlline_count] = real(gmlcurr_plot);
        }
    };
    gmlpos = string_pos(",", _inst.gmllevel_hole_points);
    _inst.gmlhole_x1 = real(string_copy(_inst.gmllevel_hole_points, 1, (gmlpos - 1)));
    _inst.gmllevel_hole_points = string_copy(_inst.gmllevel_hole_points, (gmlpos + 1), (string_length(_inst.gmllevel_hole_points) - gmlpos));
    gmlpos = string_pos(",", _inst.gmllevel_hole_points);
    _inst.gmlhole_y1 = real(string_copy(_inst.gmllevel_hole_points, 1, (gmlpos - 1)));
    _inst.gmllevel_hole_points = string_copy(_inst.gmllevel_hole_points, (gmlpos + 1), (string_length(_inst.gmllevel_hole_points) - gmlpos));
    gmlpos = string_pos(",", _inst.gmllevel_hole_points);
    _inst.gmlhole_x2 = real(string_copy(_inst.gmllevel_hole_points, 1, (gmlpos - 1)));
    _inst.gmlhole_y2 = real(string_copy(_inst.gmllevel_hole_points, (gmlpos + 1), (string_length(_inst.gmllevel_hole_points) - gmlpos)));
}

// #####################################################################################################
// /// scr_level_create_v3()
//
//     // game_levels_curr += 1;
//
//     // seed_number = game_levels_curr;
//
//     hole_number = game_levels_curr;
//
//     circle_fade_draw = false;
//
//     global.temp_var += 1;
//     global.temp_string = string(view_wview[0]) + " x " + string(view_hview[0]);
//
//     // Surface: Floor
//
//         // surface_free(surf_floor);
//
//         // surf_floor = surface_create(view_wview[0], view_hview[0]);
//
//         surface_set_target(surf_floor);
//
//             draw_clear_alpha(c_white, 0);
//
//             draw_set_alpha(1);
//
//         surface_reset_target();
//
//
//     // Surface: Hole
//     /*
//         surface_free(surf_hole_arrow);
//
//         // surf_hole_arrow = surface_create(128, 128);
//
//         surface_set_target(surf_hole_arrow);
//
//             draw_clear_alpha(c_white, 0);
//
//             draw_set_alpha(1);
//
//         surface_reset_target();
//     */
//
//     surf_floor_step = 0;
//
//     // if ( floor_mode == 2 ){ random_set_seed(seed_number); } // 2:level read;
//
//     scr_floor_init(obj_ctrl_board.floor_mode);
//
//     scr_stars_init();
//
//     alarm[1] = floor_contruct_speed; // start construction animation
//
//
function gml_Script_scr_level_create_v3(_inst, _other) {

    global.gmlgame_levelName = "";
    switch (global.gmlgame_submode) {
        case 0:
            global.gmlgame_levelName = global.gmlgame_mode === 2 ? "HOLE-IN-ONE" : "TRAINING";
            window.famobi_analytics.trackEvent(global.repeated ? "EVENT_LEVELRESTART" : "EVENT_LEVELSTART", {
                levelName: global.gmlgame_levelName
            }).then(()=>{
              post_level_create_v3(_inst, _other);
            });
            global.repeated = false;
            break;
        case 1:
            global.gmlgame_levelName = "25HOLES_" + _inst.gmlgame_levels_curr;
            break;
        case 2:
            global.gmlgame_levelName = "50HOLES_" + _inst.gmlgame_levels_curr;
            break;
        case 3:
            global.gmlgame_levelName = "100HOLES_" + _inst.gmlgame_levels_curr;
            break;
    }
    if (global.gmlgame_submode > 0) {
        window.famobi_analytics.trackEvent("EVENT_LEVELSTART", {
            levelName: global.gmlgame_levelName
        }).then(()=>{
          post_level_create_v3(_inst, _other);
        });
    }
}

function post_level_create_v3(_inst, _other) {
  window.famobi_analytics.trackScreen("SCREEN_LEVEL", global.gmlgame_levelName);
  _inst.gmlhole_number = _inst.gmlgame_levels_curr;
  _inst.gmlcircle_fade_draw = 0 ? 1 : 0;
  global.gmltemp_var += 1;
  global.gmltemp_string = (string(g_pBuiltIn.view_wview[0]) + " x " + string(g_pBuiltIn.view_hview[0]));
  surface_set_target(_inst.gmlsurf_floor);
  draw_clear_alpha(16777215, 0);
  draw_set_alpha(1);
  surface_reset_target();
  _inst.gmlsurf_floor_step = 0;
  gml_Script_scr_floor_init(_inst, _other, yyInst(2).gmlfloor_mode);
  gml_Script_scr_stars_init(_inst, _other);
  if (!(_inst.alarm instanceof Array)) {
      _inst.alarm = [];
      _inst.alarm.__yy_owner = 1584050178;
  } else if (_inst.alarm.__yy_owner !== 1584050178) {
      _inst.alarm = _inst.alarm.slice(0);
      _inst.alarm.__yy_owner = 1584050178;
  }
  _inst.alarm[1] = _inst.gmlfloor_contruct_speed;
}

// #####################################################################################################
// /// scr_hole_next_save()
//
// if ( global.game_mode == 1 ){
// // The 300
//
//     var glob_game_submode = global.game_submode;
//
//     game_levels_hits_total += game_hits_curr;
//
//     game_mode_1_hits_curr[glob_game_submode] = 0;
//     game_mode_1_hits_total[glob_game_submode] = game_levels_hits_total;
//     game_mode_1_curr_level[glob_game_submode] = game_levels_curr + 1;
//
//     var checkpoint_reached = false;
//
//     if ( glob_game_submode == 1 ){
//     // 25h
//
//         switch (game_levels_curr) {
//             case 25: game_mode_1_cp[glob_game_submode,1] = game_levels_hits_total; checkpoint_reached = true; break;
//         }
//     }
//     else if ( glob_game_submode == 2 ){
//     // 50h
//
//         switch (game_levels_curr) {
//             case 25: game_mode_1_cp[glob_game_submode,1] = game_levels_hits_total; checkpoint_reached = true; break;
//             case 50: game_mode_1_cp[glob_game_submode,2] = game_levels_hits_total; checkpoint_reached = true; break;
//         }
//     }
//     else if ( glob_game_submode == 3 ){
//     // 75h
//
//         switch (game_levels_curr) {
//             case 25: game_mode_1_cp[glob_game_submode,1] = game_levels_hits_total; checkpoint_reached = true; break;
//             case 50: game_mode_1_cp[glob_game_submode,2] = game_levels_hits_total; checkpoint_reached = true; break;
//             case 75: game_mode_1_cp[glob_game_submode,3] = game_levels_hits_total; checkpoint_reached = true; break;
//             case 100: game_mode_1_cp[glob_game_submode,4] = game_levels_hits_total; checkpoint_reached = true; break;
//         }
//     }
//     else if ( glob_game_submode == 4 ){
//     // 150h
//
//         switch (game_levels_curr) {
//             case 25: game_mode_1_cp[glob_game_submode,1] = game_levels_hits_total; checkpoint_reached = true; break;
//             case 50: game_mode_1_cp[glob_game_submode,2] = game_levels_hits_total; checkpoint_reached = true; break;
//             case 75: game_mode_1_cp[glob_game_submode,3] = game_levels_hits_total; checkpoint_reached = true; break;
//             case 100: game_mode_1_cp[glob_game_submode,4] = game_levels_hits_total; checkpoint_reached = true; break;
//             case 125: game_mode_1_cp[glob_game_submode,5] = game_levels_hits_total; checkpoint_reached = true; break;
//             case 150: game_mode_1_cp[glob_game_submode,6] = game_levels_hits_total; checkpoint_reached = true; break;
//         }
//     }
//
//     // debug // show_debug_message(string(game_levels_curr) + " > " + string(game_levels_max_level));
//
//     // Analytics
//
//         if ( checkpoint_reached ){
//
//             var mode_string = "ModeCP_" + string(global.game_mode) + "_" + string(game_mode_1_max_level[global.game_submode]) + "h_" + string(game_levels_curr);
//
//             scr_analytics_send(mode_string);
//         }
//
//
//     if ( game_levels_curr = game_levels_max_level ){
//
//         // Update Best Score
//
//             if (( game_levels_hits_total < game_mode_1_best_score ) or ( game_mode_1_best_score == 0 )){
//
//                 game_mode_1_best_score = game_levels_hits_total;
//
//                 game_mode_1_hits_best[glob_game_submode] = game_mode_1_best_score;
//
//                 game_mode_1_new_record = true;
//             }
//
//
//         // Reset
//
//             game_mode_1_complete_score = game_levels_hits_total;
//
//             game_levels_curr = 1;
//
//             game_mode_1_hits_curr[glob_game_submode] = 0;
//             game_mode_1_hits_total[glob_game_submode] = 0;
//             game_mode_1_curr_level[glob_game_submode] = 1;
//
//             game_levels_hits_total = 0;
//
//             game_mode_1_complete = true;
//
//             for ( var i=1; i<array_length_2d(game_mode_1_cp,glob_game_submode); i+=1 ){
//
//                 game_mode_1_cp[glob_game_submode,i] = 0;
//             }
//     }
//
//     game_levels_curr += 1; // if( !game_over ){}
//
//     if ( global.famobi_active ){
//     // famobi
//
//         scr_famobi_progress_save(global.game_mode); // Save: The 300
//     }
//     else {
//
//         scr_ini_progress_save(global.game_mode); // Save: The 300
//     }
// }
//
// game_holes_completed += 1;
//
// game_hits_curr = 0;
//
//
function gml_Script_scr_level_next_save(_inst, _other) {

    if ((global.gmlgame_mode == 1)) {
        {
            var gmlglob_game_submode = global.gmlgame_submode;
            _inst.gmlgame_levels_hits_total += _inst.gmlgame_hits_curr;
            if (!(_inst.gmlgame_mode_1_hits_curr instanceof Array)) {
                _inst.gmlgame_mode_1_hits_curr = [];
                _inst.gmlgame_mode_1_hits_curr.__yy_owner = 287211472;
            } else if (_inst.gmlgame_mode_1_hits_curr.__yy_owner !== 287211472) {
                _inst.gmlgame_mode_1_hits_curr = _inst.gmlgame_mode_1_hits_curr.slice(0);
                _inst.gmlgame_mode_1_hits_curr.__yy_owner = 287211472;
            }
            _inst.gmlgame_mode_1_hits_curr[gmlglob_game_submode] = 0;
            if (!(_inst.gmlgame_mode_1_hits_total instanceof Array)) {
                _inst.gmlgame_mode_1_hits_total = [];
                _inst.gmlgame_mode_1_hits_total.__yy_owner = 875966489;
            } else if (_inst.gmlgame_mode_1_hits_total.__yy_owner !== 875966489) {
                _inst.gmlgame_mode_1_hits_total = _inst.gmlgame_mode_1_hits_total.slice(0);
                _inst.gmlgame_mode_1_hits_total.__yy_owner = 875966489;
            }
            _inst.gmlgame_mode_1_hits_total[gmlglob_game_submode] = _inst.gmlgame_levels_hits_total;
            if (!(_inst.gmlgame_mode_1_curr_level instanceof Array)) {
                _inst.gmlgame_mode_1_curr_level = [];
                _inst.gmlgame_mode_1_curr_level.__yy_owner = 2643717481;
            } else if (_inst.gmlgame_mode_1_curr_level.__yy_owner !== 2643717481) {
                _inst.gmlgame_mode_1_curr_level = _inst.gmlgame_mode_1_curr_level.slice(0);
                _inst.gmlgame_mode_1_curr_level.__yy_owner = 2643717481;
            }
            _inst.gmlgame_mode_1_curr_level[gmlglob_game_submode] = (_inst.gmlgame_levels_curr + 1);
            var gmlcheckpoint_reached = 0 ? 1 : 0;
            if ((gmlglob_game_submode == 1)) {
                {
                    switch (_inst.gmlgame_levels_curr) {
                        case 25:
                            if (!(_inst.gmlgame_mode_1_cp instanceof Array)) {
                                _inst.gmlgame_mode_1_cp = [];
                                _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                            } else if (_inst.gmlgame_mode_1_cp.__yy_owner !== 3932722578) {
                                _inst.gmlgame_mode_1_cp = _inst.gmlgame_mode_1_cp.slice(0);
                                _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                            }
                            array_set_2D(_inst.gmlgame_mode_1_cp, gmlglob_game_submode, 1, _inst.gmlgame_levels_hits_total);
                            gmlcheckpoint_reached = 1 ? 1 : 0;
                            break;
                    };
                };
            } else {
                if ((gmlglob_game_submode == 2)) {
                    {
                        switch (_inst.gmlgame_levels_curr) {
                            case 25:
                                if (!(_inst.gmlgame_mode_1_cp instanceof Array)) {
                                    _inst.gmlgame_mode_1_cp = [];
                                    _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                } else if (_inst.gmlgame_mode_1_cp.__yy_owner !== 3932722578) {
                                    _inst.gmlgame_mode_1_cp = _inst.gmlgame_mode_1_cp.slice(0);
                                    _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                }
                                array_set_2D(_inst.gmlgame_mode_1_cp, gmlglob_game_submode, 1, _inst.gmlgame_levels_hits_total);
                                gmlcheckpoint_reached = 1 ? 1 : 0;
                                break;
                            case 50:
                                if (!(_inst.gmlgame_mode_1_cp instanceof Array)) {
                                    _inst.gmlgame_mode_1_cp = [];
                                    _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                } else if (_inst.gmlgame_mode_1_cp.__yy_owner !== 3932722578) {
                                    _inst.gmlgame_mode_1_cp = _inst.gmlgame_mode_1_cp.slice(0);
                                    _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                }
                                array_set_2D(_inst.gmlgame_mode_1_cp, gmlglob_game_submode, 2, _inst.gmlgame_levels_hits_total);
                                gmlcheckpoint_reached = 1 ? 1 : 0;
                                break;
                        };
                    };
                } else {
                    if ((gmlglob_game_submode == 3)) {
                        {
                            switch (_inst.gmlgame_levels_curr) {
                                case 25:
                                    if (!(_inst.gmlgame_mode_1_cp instanceof Array)) {
                                        _inst.gmlgame_mode_1_cp = [];
                                        _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                    } else if (_inst.gmlgame_mode_1_cp.__yy_owner !== 3932722578) {
                                        _inst.gmlgame_mode_1_cp = _inst.gmlgame_mode_1_cp.slice(0);
                                        _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                    }
                                    array_set_2D(_inst.gmlgame_mode_1_cp, gmlglob_game_submode, 1, _inst.gmlgame_levels_hits_total);
                                    gmlcheckpoint_reached = 1 ? 1 : 0;
                                    break;
                                case 50:
                                    if (!(_inst.gmlgame_mode_1_cp instanceof Array)) {
                                        _inst.gmlgame_mode_1_cp = [];
                                        _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                    } else if (_inst.gmlgame_mode_1_cp.__yy_owner !== 3932722578) {
                                        _inst.gmlgame_mode_1_cp = _inst.gmlgame_mode_1_cp.slice(0);
                                        _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                    }
                                    array_set_2D(_inst.gmlgame_mode_1_cp, gmlglob_game_submode, 2, _inst.gmlgame_levels_hits_total);
                                    gmlcheckpoint_reached = 1 ? 1 : 0;
                                    break;
                                case 75:
                                    if (!(_inst.gmlgame_mode_1_cp instanceof Array)) {
                                        _inst.gmlgame_mode_1_cp = [];
                                        _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                    } else if (_inst.gmlgame_mode_1_cp.__yy_owner !== 3932722578) {
                                        _inst.gmlgame_mode_1_cp = _inst.gmlgame_mode_1_cp.slice(0);
                                        _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                    }
                                    array_set_2D(_inst.gmlgame_mode_1_cp, gmlglob_game_submode, 3, _inst.gmlgame_levels_hits_total);
                                    gmlcheckpoint_reached = 1 ? 1 : 0;
                                    break;
                                case 100:
                                    if (!(_inst.gmlgame_mode_1_cp instanceof Array)) {
                                        _inst.gmlgame_mode_1_cp = [];
                                        _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                    } else if (_inst.gmlgame_mode_1_cp.__yy_owner !== 3932722578) {
                                        _inst.gmlgame_mode_1_cp = _inst.gmlgame_mode_1_cp.slice(0);
                                        _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                    }
                                    array_set_2D(_inst.gmlgame_mode_1_cp, gmlglob_game_submode, 4, _inst.gmlgame_levels_hits_total);
                                    gmlcheckpoint_reached = 1 ? 1 : 0;
                                    break;
                            };
                        };
                    } else {
                        if ((gmlglob_game_submode == 4)) {
                            {
                                switch (_inst.gmlgame_levels_curr) {
                                    case 25:
                                        if (!(_inst.gmlgame_mode_1_cp instanceof Array)) {
                                            _inst.gmlgame_mode_1_cp = [];
                                            _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                        } else if (_inst.gmlgame_mode_1_cp.__yy_owner !== 3932722578) {
                                            _inst.gmlgame_mode_1_cp = _inst.gmlgame_mode_1_cp.slice(0);
                                            _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                        }
                                        array_set_2D(_inst.gmlgame_mode_1_cp, gmlglob_game_submode, 1, _inst.gmlgame_levels_hits_total);
                                        gmlcheckpoint_reached = 1 ? 1 : 0;
                                        break;
                                    case 50:
                                        if (!(_inst.gmlgame_mode_1_cp instanceof Array)) {
                                            _inst.gmlgame_mode_1_cp = [];
                                            _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                        } else if (_inst.gmlgame_mode_1_cp.__yy_owner !== 3932722578) {
                                            _inst.gmlgame_mode_1_cp = _inst.gmlgame_mode_1_cp.slice(0);
                                            _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                        }
                                        array_set_2D(_inst.gmlgame_mode_1_cp, gmlglob_game_submode, 2, _inst.gmlgame_levels_hits_total);
                                        gmlcheckpoint_reached = 1 ? 1 : 0;
                                        break;
                                    case 75:
                                        if (!(_inst.gmlgame_mode_1_cp instanceof Array)) {
                                            _inst.gmlgame_mode_1_cp = [];
                                            _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                        } else if (_inst.gmlgame_mode_1_cp.__yy_owner !== 3932722578) {
                                            _inst.gmlgame_mode_1_cp = _inst.gmlgame_mode_1_cp.slice(0);
                                            _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                        }
                                        array_set_2D(_inst.gmlgame_mode_1_cp, gmlglob_game_submode, 3, _inst.gmlgame_levels_hits_total);
                                        gmlcheckpoint_reached = 1 ? 1 : 0;
                                        break;
                                    case 100:
                                        if (!(_inst.gmlgame_mode_1_cp instanceof Array)) {
                                            _inst.gmlgame_mode_1_cp = [];
                                            _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                        } else if (_inst.gmlgame_mode_1_cp.__yy_owner !== 3932722578) {
                                            _inst.gmlgame_mode_1_cp = _inst.gmlgame_mode_1_cp.slice(0);
                                            _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                        }
                                        array_set_2D(_inst.gmlgame_mode_1_cp, gmlglob_game_submode, 4, _inst.gmlgame_levels_hits_total);
                                        gmlcheckpoint_reached = 1 ? 1 : 0;
                                        break;
                                    case 125:
                                        if (!(_inst.gmlgame_mode_1_cp instanceof Array)) {
                                            _inst.gmlgame_mode_1_cp = [];
                                            _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                        } else if (_inst.gmlgame_mode_1_cp.__yy_owner !== 3932722578) {
                                            _inst.gmlgame_mode_1_cp = _inst.gmlgame_mode_1_cp.slice(0);
                                            _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                        }
                                        array_set_2D(_inst.gmlgame_mode_1_cp, gmlglob_game_submode, 5, _inst.gmlgame_levels_hits_total);
                                        gmlcheckpoint_reached = 1 ? 1 : 0;
                                        break;
                                    case 150:
                                        if (!(_inst.gmlgame_mode_1_cp instanceof Array)) {
                                            _inst.gmlgame_mode_1_cp = [];
                                            _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                        } else if (_inst.gmlgame_mode_1_cp.__yy_owner !== 3932722578) {
                                            _inst.gmlgame_mode_1_cp = _inst.gmlgame_mode_1_cp.slice(0);
                                            _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                                        }
                                        array_set_2D(_inst.gmlgame_mode_1_cp, gmlglob_game_submode, 6, _inst.gmlgame_levels_hits_total);
                                        gmlcheckpoint_reached = 1 ? 1 : 0;
                                        break;
                                };
                            };
                        };
                    };
                };
            };
            if (gmlcheckpoint_reached > 0.5) {
                {
                    var gmlmode_string = ("ModeCP_" + string(global.gmlgame_mode) + "_" + string(_inst.gmlgame_mode_1_max_level[global.gmlgame_submode]) + "h_" + string(_inst.gmlgame_levels_curr));
                    gml_Script_scr_analytics_send(_inst, _other, gmlmode_string);
                };
            };
            if ((_inst.gmlgame_levels_curr == _inst.gmlgame_levels_max_level)) {
                {
                    if ((((_inst.gmlgame_levels_hits_total < _inst.gmlgame_mode_1_best_score)) || ((_inst.gmlgame_mode_1_best_score == 0)))) {
                        {
                            _inst.gmlgame_mode_1_best_score = _inst.gmlgame_levels_hits_total;
                            if (!(_inst.gmlgame_mode_1_hits_best instanceof Array)) {
                                _inst.gmlgame_mode_1_hits_best = [];
                                _inst.gmlgame_mode_1_hits_best.__yy_owner = 814005558;
                            } else if (_inst.gmlgame_mode_1_hits_best.__yy_owner !== 814005558) {
                                _inst.gmlgame_mode_1_hits_best = _inst.gmlgame_mode_1_hits_best.slice(0);
                                _inst.gmlgame_mode_1_hits_best.__yy_owner = 814005558;
                            }
                            _inst.gmlgame_mode_1_hits_best[gmlglob_game_submode] = _inst.gmlgame_mode_1_best_score;
                            _inst.gmlgame_mode_1_new_record = 1 ? 1 : 0;
                        };
                    };
                    _inst.gmlgame_mode_1_complete_score = _inst.gmlgame_levels_hits_total;
                    _inst.gmlgame_levels_curr = 1;
                    _inst.gmlgame_mode_1_hits_curr[gmlglob_game_submode] = 0;
                    _inst.gmlgame_mode_1_hits_total[gmlglob_game_submode] = 0;
                    _inst.gmlgame_mode_1_curr_level[gmlglob_game_submode] = 1;
                    _inst.gmlgame_levels_hits_total = 0;
                    _inst.gmlgame_mode_1_complete = 1 ? 1 : 0;
                    for (var gmli = 1;
                        (gmli < array_length_2d(_inst.gmlgame_mode_1_cp, gmlglob_game_submode)); gmli += 1) {
                        {
                            if (!(_inst.gmlgame_mode_1_cp instanceof Array)) {
                                _inst.gmlgame_mode_1_cp = [];
                                _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                            } else if (_inst.gmlgame_mode_1_cp.__yy_owner !== 3932722578) {
                                _inst.gmlgame_mode_1_cp = _inst.gmlgame_mode_1_cp.slice(0);
                                _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
                            }
                            array_set_2D(_inst.gmlgame_mode_1_cp, gmlglob_game_submode, gmli, 0);
                        }
                    };
                };
            };
            _inst.gmlgame_levels_curr += 1;
            if (global.gmlfamobi_active > 0.5) {

                var promises = [
                    window.famobi_analytics.trackEvent("EVENT_LEVELSUCCESS", {
                        levelName: global.gmlgame_levelName
                    }),
                    window.famobi_analytics.trackEvent("EVENT_LEVELSCORE", {
                      levelName: global.gmlgame_levelName,
                      levelScore: _inst.gmlgame_hits_curr
                    })
                ];

                famobi.log(global.gmlgame_submode, parseInt(global.gmlgame_levelName.split("_")[1]));

                if( // succeeded last level?
                    (global.gmlgame_submode == 1 && parseInt(global.gmlgame_levelName.split("_")[1]) == 25) ||
                    (global.gmlgame_submode == 2 && parseInt(global.gmlgame_levelName.split("_")[1]) == 50) ||
                    (global.gmlgame_submode == 3 && parseInt(global.gmlgame_levelName.split("_")[1]) == 100)) {
                    promises.push(window.famobi_analytics.trackEvent("EVENT_LEVELSCORE", {
                      levelName: global.gmlgame_levelName.split("_")[0],
                      levelScore: _inst.gmlgame_mode_1_complete_score
                    }));
                }
                Promise.all(promises).then(function() {
                    {
                        gml_Script_scr_famobi_progress_save(_inst, _other, global.gmlgame_mode);
                    };
                });
            } else {
                {
                    gml_Script_scr_ini_progress_save(_inst, _other, global.gmlgame_mode);
                };
            };
        };
    };
    _inst.gmlgame_holes_completed += 1;
    _inst.gmlgame_hits_curr = 0;
}

// #####################################################################################################
// /// scr_level_refresh()
//
//     sprite_delete(onfly_sprite_floor);
//
//     scr_level_create_v3();
//
//     floor_ready = false;
//
//     force_meter_show = false;
//
//     scr_ball_destroy();
//
//
//
function gml_Script_scr_level_refresh(_inst, _other) {
    sprite_delete(_inst.gmlonfly_sprite_floor);
    gml_Script_scr_level_create_v3(_inst, _other);
    _inst.gmlfloor_ready = 0 ? 1 : 0;
    _inst.gmlforce_meter_show = 0 ? 1 : 0;
    gml_Script_scr_ball_destroy(_inst, _other);
}

// #####################################################################################################
// /// scr_stars_init()
//
//     // Stars
//
//     var star_size = 1;
//     var star_size_1 = 1;
//     var star_size_2 = 3;
//
//     if ( global.game_lowres ){ star_size_1 = 3; star_size_2 = 6; }
//
//     star_count = 0;
//     star_count_max = 80;
//
//     repeat(star_count_max){
//
//         star_size = star_size_1;
//         var star_size_chance = irandom_range(1,10);
//         if ( star_size_chance > 9 ){ star_size = star_size_2; }
//
//         stars_x1[star_count] = irandom_range(0,world_width_board) * obj_ctrl_board.draw_w_ratio;
//         stars_y1[star_count] = irandom_range(0,terrain_screen_bottom-10) * obj_ctrl_board.draw_w_ratio;
//         stars_x2[star_count] = stars_x1[star_count] + ( star_size * obj_ctrl_board.draw_w_ratio );
//         stars_y2[star_count] = stars_y1[star_count] + ( star_size * obj_ctrl_board.draw_w_ratio );
//
//         star_count += 1;
//     }
//
//
function gml_Script_scr_stars_init(_inst, _other) {
    var gmlstar_size = 1;
    var gmlstar_size_1 = 1;
    var gmlstar_size_2 = 3;
    if (global.gmlgame_lowres > 0.5) {
        {
            gmlstar_size_1 = 3;
            gmlstar_size_2 = 6;
        };
    };
    _inst.gmlstar_count = 0;
    _inst.gmlstar_count_max = 80;
    for (var __yy__v30 = 0, __yy__v31 = ~~(_inst.gmlstar_count_max); __yy__v30 < __yy__v31; __yy__v30++) {
        {
            gmlstar_size = gmlstar_size_1;
            var gmlstar_size_chance = irandom_range(1, 10);
            if ((gmlstar_size_chance > 9)) {
                {
                    gmlstar_size = gmlstar_size_2;
                };
            };
            if (!(_inst.gmlstars_x1 instanceof Array)) {
                _inst.gmlstars_x1 = [];
                _inst.gmlstars_x1.__yy_owner = 3150890115;
            } else if (_inst.gmlstars_x1.__yy_owner !== 3150890115) {
                _inst.gmlstars_x1 = _inst.gmlstars_x1.slice(0);
                _inst.gmlstars_x1.__yy_owner = 3150890115;
            }
            _inst.gmlstars_x1[_inst.gmlstar_count] = (irandom_range(0, _inst.gmlworld_width_board) * yyInst(2).gmldraw_w_ratio);
            if (!(_inst.gmlstars_y1 instanceof Array)) {
                _inst.gmlstars_y1 = [];
                _inst.gmlstars_y1.__yy_owner = 57844710;
            } else if (_inst.gmlstars_y1.__yy_owner !== 57844710) {
                _inst.gmlstars_y1 = _inst.gmlstars_y1.slice(0);
                _inst.gmlstars_y1.__yy_owner = 57844710;
            }
            _inst.gmlstars_y1[_inst.gmlstar_count] = (irandom_range(0, (_inst.gmlterrain_screen_bottom - 10)) * yyInst(2).gmldraw_w_ratio);
            if (!(_inst.gmlstars_x2 instanceof Array)) {
                _inst.gmlstars_x2 = [];
                _inst.gmlstars_x2.__yy_owner = 2430834496;
            } else if (_inst.gmlstars_x2.__yy_owner !== 2430834496) {
                _inst.gmlstars_x2 = _inst.gmlstars_x2.slice(0);
                _inst.gmlstars_x2.__yy_owner = 2430834496;
            }
            _inst.gmlstars_x2[_inst.gmlstar_count] = (_inst.gmlstars_x1[_inst.gmlstar_count] + (gmlstar_size * yyInst(2).gmldraw_w_ratio));
            if (!(_inst.gmlstars_y2 instanceof Array)) {
                _inst.gmlstars_y2 = [];
                _inst.gmlstars_y2.__yy_owner = 677376037;
            } else if (_inst.gmlstars_y2.__yy_owner !== 677376037) {
                _inst.gmlstars_y2 = _inst.gmlstars_y2.slice(0);
                _inst.gmlstars_y2.__yy_owner = 677376037;
            }
            _inst.gmlstars_y2[_inst.gmlstar_count] = (_inst.gmlstars_y1[_inst.gmlstar_count] + (gmlstar_size * yyInst(2).gmldraw_w_ratio));
            _inst.gmlstar_count += 1;
        }
    };
}

// #####################################################################################################
// /// Physics Init
//
// // var game_ratio = obj_ctrl_board.game_ratio;
//
// // var game_ratio = 1; // obj_ctrl_board.game_ratio;
//
// var phys_circle_size = ball_size_radius_base; // ball_size_radius;
//
// var phys_density = 1.8; // 0.6 * phys_circle_size // real("0." + string( ceil( 2 * ball_size_radius ))); // 0.2 * ball_size_radius
//
// var phys_restitution = 0.6; // real("0." + string( ceil( 3 * game_ratio ))); // 0.3
//
// var phys_linear_damping = 0.5; // real("0." + string( ceil( 1 * game_ratio ))); // 0.1
//
// var phys_angular_damping = 0.8; // game_ratio * 10; // ceil( 5 * game_ratio ); // 5
//
// var phys_friction = 0.5; // game_ratio * 0.2; // real("0." + string( ceil( 2 * game_ratio ))); // 0.2
//
// ball_fixture = physics_fixture_create()
//
//     physics_fixture_set_circle_shape(ball_fixture, phys_circle_size);
//     physics_fixture_set_density(ball_fixture, phys_density); // mass per unit volume
//     physics_fixture_set_restitution(ball_fixture, phys_restitution); // bounciness
//     physics_fixture_set_collision_group(ball_fixture, 0);
//     physics_fixture_set_linear_damping(ball_fixture, phys_linear_damping); // reduce the physics world velocity of an instance ( similar to friction )
//     physics_fixture_set_angular_damping(ball_fixture, phys_angular_damping); // rotation
//     physics_fixture_set_friction(ball_fixture, phys_friction); // collision between 2 objects
//     physics_fixture_set_awake(ball_fixture, true);
//     physics_fixture_set_sensor(ball_fixture, false);
//
// my_fix = physics_fixture_bind(ball_fixture, id);
//
// physics_fixture_delete(ball_fixture);
//
//
function gml_Script_scr_physics_ball_init(_inst, _other) {
    var gmlphys_circle_size = _inst.gmlball_size_radius_base;
    var gmlphys_density = 1.8;
    var gmlphys_restitution = 0.6;
    var gmlphys_linear_damping = 0.5;
    var gmlphys_angular_damping = 0.8;
    var gmlphys_friction = 0.5;
    _inst.gmlball_fixture = physics_fixture_create();
    physics_fixture_set_circle_shape(_inst.gmlball_fixture, gmlphys_circle_size);
    physics_fixture_set_density(_inst.gmlball_fixture, gmlphys_density);
    physics_fixture_set_restitution(_inst.gmlball_fixture, gmlphys_restitution);
    physics_fixture_set_collision_group(_inst.gmlball_fixture, 0);
    physics_fixture_set_linear_damping(_inst.gmlball_fixture, gmlphys_linear_damping);
    physics_fixture_set_angular_damping(_inst.gmlball_fixture, gmlphys_angular_damping);
    physics_fixture_set_friction(_inst.gmlball_fixture, gmlphys_friction);
    physics_fixture_set_awake(_inst.gmlball_fixture, 1);
    physics_fixture_set_sensor(_inst.gmlball_fixture, 0);
    _inst.gmlmy_fix = physics_fixture_bind(_inst, _inst.gmlball_fixture, _inst.id);
    physics_fixture_delete(_inst.gmlball_fixture);
}

// #####################################################################################################
// /// Physics Init
//
// // var game_ratio = obj_ctrl_board.game_ratio;
//
// // var game_ratio = 1; // obj_ctrl_board.game_ratio;
//
// var phys_circle_size = ball_size_radius_base; // ball_size_radius;
//
// var phys_density = 1.8; // 0.6 * phys_circle_size // real("0." + string( ceil( 2 * ball_size_radius ))); // 0.2 * ball_size_radius
//
// var phys_restitution = 0.5; // real("0." + string( ceil( 3 * game_ratio ))); // 0.3
//
// var phys_linear_damping = 0.8; // real("0." + string( ceil( 1 * game_ratio ))); // 0.1
//
// var phys_angular_damping = 0.8; // game_ratio * 10; // ceil( 5 * game_ratio ); // 5
//
// var phys_friction = 0.5; // game_ratio * 0.2; // real("0." + string( ceil( 2 * game_ratio ))); // 0.2
//
// ball_fixture = physics_fixture_create()
//
//     physics_fixture_set_circle_shape(ball_fixture, phys_circle_size);
//     physics_fixture_set_density(ball_fixture, phys_density); // mass per unit volume
//     physics_fixture_set_restitution(ball_fixture, phys_restitution); // bounciness
//     physics_fixture_set_collision_group(ball_fixture, 0);
//     physics_fixture_set_linear_damping(ball_fixture, phys_linear_damping); // reduce the physics world velocity of an instance ( similar to friction )
//     physics_fixture_set_angular_damping(ball_fixture, phys_angular_damping); // rotation
//     physics_fixture_set_friction(ball_fixture, phys_friction); // collision between 2 objects
//     physics_fixture_set_awake(ball_fixture, true);
//     physics_fixture_set_sensor(ball_fixture, false);
//
// my_fix = physics_fixture_bind(ball_fixture, id);
//
// physics_fixture_delete(ball_fixture);
//
//
function gml_Script_scr_physics_ball_init_v1(_inst, _other) {
    var gmlphys_circle_size = _inst.gmlball_size_radius_base;
    var gmlphys_density = 1.8;
    var gmlphys_restitution = 0.5;
    var gmlphys_linear_damping = 0.8;
    var gmlphys_angular_damping = 0.8;
    var gmlphys_friction = 0.5;
    _inst.gmlball_fixture = physics_fixture_create();
    physics_fixture_set_circle_shape(_inst.gmlball_fixture, gmlphys_circle_size);
    physics_fixture_set_density(_inst.gmlball_fixture, gmlphys_density);
    physics_fixture_set_restitution(_inst.gmlball_fixture, gmlphys_restitution);
    physics_fixture_set_collision_group(_inst.gmlball_fixture, 0);
    physics_fixture_set_linear_damping(_inst.gmlball_fixture, gmlphys_linear_damping);
    physics_fixture_set_angular_damping(_inst.gmlball_fixture, gmlphys_angular_damping);
    physics_fixture_set_friction(_inst.gmlball_fixture, gmlphys_friction);
    physics_fixture_set_awake(_inst.gmlball_fixture, 1);
    physics_fixture_set_sensor(_inst.gmlball_fixture, 0);
    _inst.gmlmy_fix = physics_fixture_bind(_inst, _inst.gmlball_fixture, _inst.id);
    physics_fixture_delete(_inst.gmlball_fixture);
}

// #####################################################################################################
// /// scr_physics_fixture_init()
//
// // Settings for Floor Physics
//
//     var game_ratio = obj_ctrl_board.game_ratio;
//
//     var phys_density = 0;
//
//     var phys_restitution = 0.5; // 0.1; // ceil( 0.1 * game_ratio );
//
//     var phys_linear_damping = 0.8; // 0.1;
//
//     var phys_angular_damping = 0; // 0.1;
//
//     var phys_friction = 0.8; // game_ratio * 0.2;
//
//     var floor_fixture = physics_fixture_create();
//
//         physics_fixture_set_chain_shape(floor_fixture, false);
//         physics_fixture_set_density(floor_fixture, phys_density);
//         physics_fixture_set_restitution(floor_fixture, phys_restitution);
//         physics_fixture_set_linear_damping(floor_fixture, phys_linear_damping);
//         physics_fixture_set_angular_damping(floor_fixture, phys_angular_damping);
//         physics_fixture_set_friction(floor_fixture, phys_friction);
//         physics_fixture_set_collision_group(floor_fixture, 0);
//         physics_fixture_set_awake(floor_fixture, true);
//         physics_fixture_set_sensor(floor_fixture, false);
//
//     return floor_fixture;
//
//
function gml_Script_scr_physics_fixture_init(_inst, _other) {
    var gmlgame_ratio = yyInst(2).gmlgame_ratio;
    var gmlphys_density = 0;
    var gmlphys_restitution = 0.5;
    var gmlphys_linear_damping = 0.8;
    var gmlphys_angular_damping = 0;
    var gmlphys_friction = 0.8;
    var gmlfloor_fixture = physics_fixture_create();
    physics_fixture_set_chain_shape(gmlfloor_fixture, 0);
    physics_fixture_set_density(gmlfloor_fixture, gmlphys_density);
    physics_fixture_set_restitution(gmlfloor_fixture, gmlphys_restitution);
    physics_fixture_set_linear_damping(gmlfloor_fixture, gmlphys_linear_damping);
    physics_fixture_set_angular_damping(gmlfloor_fixture, gmlphys_angular_damping);
    physics_fixture_set_friction(gmlfloor_fixture, gmlphys_friction);
    physics_fixture_set_collision_group(gmlfloor_fixture, 0);
    physics_fixture_set_awake(gmlfloor_fixture, 1);
    physics_fixture_set_sensor(gmlfloor_fixture, 0);
    return gmlfloor_fixture;
}

// #####################################################################################################
// /// scr_physics_world_create
//
//     game_ratio = 1;
//
//     // var world_meters = round(( global.view_w / 15 ))
//
//     phys_world_pixel_to_meters = 0.03125; // 1/32
//
//     physics_world_create(phys_world_pixel_to_meters);
//     physics_world_gravity(0.0, 10.0);
//
//
function gml_Script_scr_physics_world_create(_inst, _other) {
    _inst.gmlgame_ratio = 1;
    _inst.gmlphys_world_pixel_to_meters = 0.03125;
    physics_world_create(_inst.gmlphys_world_pixel_to_meters);
    physics_world_gravity(0, 10);
}

// #####################################################################################################
// /// scr_ini_options_save(game_mode)
//
// ini_open("savedata.ini");
//
//     famobi_localStorage_set("game_lang",real(global.game_lang));
//
//     famobi_localStorage_set("game_volume_music",real(global.game_volume_music));
//
//     famobi_localStorage_set("game_volume_sound",real(global.game_volume_sound));
//
//     famobi_localStorage_set("game_tutorial_1",real(game_tutorial_1));
//
// ini_close();
//
//
function gml_Script_scr_famobi_options_save(_inst, _other) {
    // ini_open("savedata.ini");
    famobi_localStorage_set("game_lang", real(global.gmlgame_lang));
    famobi_localStorage_set("game_volume_music", real(global.gmlgame_volume_music));
    famobi_localStorage_set("game_volume_sound", real(global.gmlgame_volume_sound));
    famobi_localStorage_set("game_tutorial_1", real(_inst.gmlgame_tutorial_1));
    ini_close();
}

// #####################################################################################################
// /// scr_ini_progress_load(game_mode)
//
// var game_mode = argument0;
// var game_submode = global.game_submode;
//
//     // Neon Courses
//
//         // Reset Arrays
//
//             game_mode_1_hits_curr = 0;
//             game_mode_1_hits_total = 0;
//             game_mode_1_curr_level = 0;
//             game_mode_1_cp = 0;
//
//
//         // General Vars
//
//             game_hits_curr = 0;
//
//             game_levels_curr = 1;
//
//             game_levels_hits_total = 0;
//
//             game_levels_hits_total_vis = game_levels_hits_total;
//
//             game_mode_1_best_score = 0;
//
//             game_mode_1_complete_score = 0;
//
//             game_mode_1_complete = false;
//
//             game_mode_1_new_record = false;
//
//
//         // Hits ( Curr, Total, Best )
//
//             game_mode_1_hits_curr[1] = real(famobi_localStorage_get("game_mode_1_hits_curr_25h",0)); // 25h : Current Hits
//             game_mode_1_hits_curr[2] = real(famobi_localStorage_get("game_mode_1_hits_curr_50h",0)); // 50h : Current Hits
//             game_mode_1_hits_curr[3] = real(famobi_localStorage_get("game_mode_1_hits_curr_100h",0)); // 100h : Current Hits
//             game_mode_1_hits_curr[4] = real(famobi_localStorage_get("game_mode_1_hits_curr_150h",0)); // 150h : Current Hits
//
//             game_mode_1_hits_total[1] = real(famobi_localStorage_get("game_mode_1_hits_total_25h",0)); // 25h : Total Hits
//             game_mode_1_hits_total[2] = real(famobi_localStorage_get("game_mode_1_hits_total_50h",0)); // 50h : Total Hits
//             game_mode_1_hits_total[3] = real(famobi_localStorage_get("game_mode_1_hits_total_100h",0)); // 100h : Total Hits
//             game_mode_1_hits_total[4] = real(famobi_localStorage_get("game_mode_1_hits_total_150h",0)); // 150h : Total Hits
//
//             game_mode_1_hits_best[1] = real(famobi_localStorage_get("game_mode_1_hits_best_25h",0)); // 25h : Best Hits
//             game_mode_1_hits_best[2] = real(famobi_localStorage_get("game_mode_1_hits_best_50h",0)); // 50h : Best Hits
//             game_mode_1_hits_best[3] = real(famobi_localStorage_get("game_mode_1_hits_best_100h",0)); // 100h : Best Hits
//             game_mode_1_hits_best[4] = real(famobi_localStorage_get("game_mode_1_hits_best_150h",0)); // 150h : Best Hits
//
//
//         // Current Level
//
//             game_mode_1_curr_level[1] = real(famobi_localStorage_get("game_mode_1_level_25h",1)); // 25h : Current Level
//             game_mode_1_curr_level[2] = real(famobi_localStorage_get("game_mode_1_level_50h",1)); // 50h : Current Level
//             game_mode_1_curr_level[3] = real(famobi_localStorage_get("game_mode_1_level_100h",1)); // 100h : Current Level
//             game_mode_1_curr_level[4] = real(famobi_localStorage_get("game_mode_1_level_150h",1)); // 150h : Current Level
//
//
//         // Checkpoints 2.0
//
//             game_mode_1_cp[1,1] = real(famobi_localStorage_get("game_mode_1_25h_025",0)); // 25h : 25
//
//             game_mode_1_cp[2,1] = real(famobi_localStorage_get("game_mode_1_50h_025",0)); // 50h : 25
//
//             game_mode_1_cp[2,2] = real(famobi_localStorage_get("game_mode_1_50h_050",0)); // 50h : 50
//
//             game_mode_1_cp[3,1] = real(famobi_localStorage_get("game_mode_1_100h_025",0)); // 100h : 25
//
//             game_mode_1_cp[3,2] = real(famobi_localStorage_get("game_mode_1_100h_050",0)); // 100h : 50
//
//             game_mode_1_cp[3,3] = real(famobi_localStorage_get("game_mode_1_100h_075",0)); // 100h : 75
//
//             game_mode_1_cp[3,4] = real(famobi_localStorage_get("game_mode_1_100h_100",0)); // 100h : 100
//
//             game_mode_1_cp[4,1] = real(famobi_localStorage_get("game_mode_1_150h_025",0)); // 150h : 25
//
//             game_mode_1_cp[4,2] = real(famobi_localStorage_get("game_mode_1_150h_050",0)); // 150h : 50
//
//             game_mode_1_cp[4,3] = real(famobi_localStorage_get("game_mode_1_150h_075",0)); // 150h : 75
//
//             game_mode_1_cp[4,4] = real(famobi_localStorage_get("game_mode_1_150h_100",0)); // 150h : 100
//
//             game_mode_1_cp[4,5] = real(famobi_localStorage_get("game_mode_1_150h_125",0)); // 150h : 125
//
//             game_mode_1_cp[4,6] = real(famobi_localStorage_get("game_mode_1_150h_150",0)); // 150h : 150
//
//
//         // Sub Game Mode Vars
//
//             if ( game_mode == 1 ){
//             // Neon Courses
//
//                 game_mode_1_max_level[1] = 25;
//                 game_mode_1_max_level[2] = 50;
//                 game_mode_1_max_level[3] = 100;
//                 game_mode_1_max_level[4] = 150;
//
//                 game_levels_max_level = game_mode_1_max_level[game_submode];
//
//                 game_levels_curr = game_mode_1_curr_level[game_submode];
//
//                 game_levels_hits_total = game_mode_1_hits_total[game_submode];
//
//                 game_levels_hits_total_vis = game_levels_hits_total;
//
//                 game_hits_curr = game_mode_1_hits_curr[game_submode];
//
//                 game_hits_curr_vis = game_hits_curr;
//
//                 game_mode_1_best_score = game_mode_1_hits_best[game_submode];
//             }
//
//
//     // Hole in One
//
//         game_mode_2_holes_record = real(famobi_localStorage_get("game_mode_2_holes_record",0));
//
//
//     // Just in Time
//
//         game_mode_3_holes_record = real(famobi_localStorage_get("game_mode_3_holes_record",0)); // Holes Record
//
//         game_mode_3_time_left = 60000; // 1 minutes
//
//         game_mode_3_time_add_max = 10000; // 10 seconds max
//
//         game_mode_3_time_add_base = 12000; // 12 seconds ( +2 second buffer for draw )
//
//         game_mode_3_time_add = 0;
//
//
//     // Don't Run Out
//
//         game_mode_4_holes_record = real(famobi_localStorage_get("game_mode_4_holes_record",0));
//
//         game_mode_4_balls_max = 10;
//
//         game_mode_4_balls_left = game_mode_4_balls_max;
//
//
//     // Misc
//
//
//         game_tutorial_1 = real(famobi_localStorage_get("game_tutorial_1",0));
//
//         global.game_lang = real(famobi_localStorage_get("game_lang",0)); // 0:English; 1:Spanish;
//
//         global.game_volume_music  = real(famobi_localStorage_get("game_volume_music",1));
//
//         global.game_volume_sound = real(famobi_localStorage_get("game_volume_sound",1));
//
//
//
// // DEBUG //
//
//     /*
//     var progression__game_tutorial_1 = real(famobi_localStorage_get("progression__game_tutorial_1"));
//
//     show_debug_message("progression__game_tutorial_1: " + string(progression__game_tutorial_1));
//
//     if ( progression__game_tutorial_1 == undefined ){
//
//         famobi_localStorage_set("progression__game_tutorial_1",0);
//
//         var progression__game_tutorial_1 = real(famobi_localStorage_get("progression__game_tutorial_1"));
//
//         show_debug_message("progression__game_tutorial_1: " + string(progression__game_tutorial_1));
//     }
//
//     game_tutorial_1 = progression__game_tutorial_1;
//
//     */
//
function gml_Script_scr_famobi_progress_load(_inst, _other, argument0) {

    var gmlgame_mode = argument0;
    var gmlgame_submode = global.gmlgame_submode;
    _inst.gmlgame_mode_1_hits_curr = 0;
    _inst.gmlgame_mode_1_hits_total = 0;
    _inst.gmlgame_mode_1_curr_level = 0;
    _inst.gmlgame_mode_1_cp = 0;
    _inst.gmlgame_hits_curr = 0;
    _inst.gmlgame_levels_curr = 1;
    _inst.gmlgame_levels_hits_total = 0;
    _inst.gmlgame_levels_hits_total_vis = _inst.gmlgame_levels_hits_total;
    _inst.gmlgame_mode_1_best_score = 0;
    _inst.gmlgame_mode_1_complete_score = 0;
    _inst.gmlgame_mode_1_complete = 0 ? 1 : 0;
    _inst.gmlgame_mode_1_new_record = 0 ? 1 : 0;
    if (!(_inst.gmlgame_mode_1_hits_curr instanceof Array)) {
        _inst.gmlgame_mode_1_hits_curr = [];
        _inst.gmlgame_mode_1_hits_curr.__yy_owner = 287211472;
    } else if (_inst.gmlgame_mode_1_hits_curr.__yy_owner !== 287211472) {
        _inst.gmlgame_mode_1_hits_curr = _inst.gmlgame_mode_1_hits_curr.slice(0);
        _inst.gmlgame_mode_1_hits_curr.__yy_owner = 287211472;
    }
    _inst.gmlgame_mode_1_hits_curr[1] = real(famobi_localStorage_get("game_mode_1_hits_curr_25h", 0));
    _inst.gmlgame_mode_1_hits_curr[2] = real(famobi_localStorage_get("game_mode_1_hits_curr_50h", 0));
    _inst.gmlgame_mode_1_hits_curr[3] = real(famobi_localStorage_get("game_mode_1_hits_curr_100h", 0));
    _inst.gmlgame_mode_1_hits_curr[4] = real(famobi_localStorage_get("game_mode_1_hits_curr_150h", 0));
    if (!(_inst.gmlgame_mode_1_hits_total instanceof Array)) {
        _inst.gmlgame_mode_1_hits_total = [];
        _inst.gmlgame_mode_1_hits_total.__yy_owner = 875966489;
    } else if (_inst.gmlgame_mode_1_hits_total.__yy_owner !== 875966489) {
        _inst.gmlgame_mode_1_hits_total = _inst.gmlgame_mode_1_hits_total.slice(0);
        _inst.gmlgame_mode_1_hits_total.__yy_owner = 875966489;
    }
    _inst.gmlgame_mode_1_hits_total[1] = real(famobi_localStorage_get("game_mode_1_hits_total_25h", 0));
    _inst.gmlgame_mode_1_hits_total[2] = real(famobi_localStorage_get("game_mode_1_hits_total_50h", 0));
    _inst.gmlgame_mode_1_hits_total[3] = real(famobi_localStorage_get("game_mode_1_hits_total_100h", 0));
    _inst.gmlgame_mode_1_hits_total[4] = real(famobi_localStorage_get("game_mode_1_hits_total_150h", 0));
    if (!(_inst.gmlgame_mode_1_hits_best instanceof Array)) {
        _inst.gmlgame_mode_1_hits_best = [];
        _inst.gmlgame_mode_1_hits_best.__yy_owner = 814005558;
    } else if (_inst.gmlgame_mode_1_hits_best.__yy_owner !== 814005558) {
        _inst.gmlgame_mode_1_hits_best = _inst.gmlgame_mode_1_hits_best.slice(0);
        _inst.gmlgame_mode_1_hits_best.__yy_owner = 814005558;
    }
    _inst.gmlgame_mode_1_hits_best[1] = real(famobi_localStorage_get("game_mode_1_hits_best_25h", 0));
    _inst.gmlgame_mode_1_hits_best[2] = real(famobi_localStorage_get("game_mode_1_hits_best_50h", 0));
    _inst.gmlgame_mode_1_hits_best[3] = real(famobi_localStorage_get("game_mode_1_hits_best_100h", 0));
    _inst.gmlgame_mode_1_hits_best[4] = real(famobi_localStorage_get("game_mode_1_hits_best_150h", 0));
    if (!(_inst.gmlgame_mode_1_curr_level instanceof Array)) {
        _inst.gmlgame_mode_1_curr_level = [];
        _inst.gmlgame_mode_1_curr_level.__yy_owner = 2643717481;
    } else if (_inst.gmlgame_mode_1_curr_level.__yy_owner !== 2643717481) {
        _inst.gmlgame_mode_1_curr_level = _inst.gmlgame_mode_1_curr_level.slice(0);
        _inst.gmlgame_mode_1_curr_level.__yy_owner = 2643717481;
    }
    _inst.gmlgame_mode_1_curr_level[1] = real(famobi_localStorage_get("game_mode_1_level_25h", 1));
    _inst.gmlgame_mode_1_curr_level[2] = real(famobi_localStorage_get("game_mode_1_level_50h", 1));
    _inst.gmlgame_mode_1_curr_level[3] = real(famobi_localStorage_get("game_mode_1_level_100h", 1));
    _inst.gmlgame_mode_1_curr_level[4] = real(famobi_localStorage_get("game_mode_1_level_150h", 1));
    if (!(_inst.gmlgame_mode_1_cp instanceof Array)) {
        _inst.gmlgame_mode_1_cp = [];
        _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
    } else if (_inst.gmlgame_mode_1_cp.__yy_owner !== 3932722578) {
        _inst.gmlgame_mode_1_cp = _inst.gmlgame_mode_1_cp.slice(0);
        _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
    }
    array_set_2D(_inst.gmlgame_mode_1_cp, 1, 1, real(famobi_localStorage_get("game_mode_1_25h_025", 0)));
    array_set_2D(_inst.gmlgame_mode_1_cp, 2, 1, real(famobi_localStorage_get("game_mode_1_50h_025", 0)));
    array_set_2D(_inst.gmlgame_mode_1_cp, 2, 2, real(famobi_localStorage_get("game_mode_1_50h_050", 0)));
    array_set_2D(_inst.gmlgame_mode_1_cp, 3, 1, real(famobi_localStorage_get("game_mode_1_100h_025", 0)));
    array_set_2D(_inst.gmlgame_mode_1_cp, 3, 2, real(famobi_localStorage_get("game_mode_1_100h_050", 0)));
    array_set_2D(_inst.gmlgame_mode_1_cp, 3, 3, real(famobi_localStorage_get("game_mode_1_100h_075", 0)));
    array_set_2D(_inst.gmlgame_mode_1_cp, 3, 4, real(famobi_localStorage_get("game_mode_1_100h_100", 0)));
    array_set_2D(_inst.gmlgame_mode_1_cp, 4, 1, real(famobi_localStorage_get("game_mode_1_150h_025", 0)));
    array_set_2D(_inst.gmlgame_mode_1_cp, 4, 2, real(famobi_localStorage_get("game_mode_1_150h_050", 0)));
    array_set_2D(_inst.gmlgame_mode_1_cp, 4, 3, real(famobi_localStorage_get("game_mode_1_150h_075", 0)));
    array_set_2D(_inst.gmlgame_mode_1_cp, 4, 4, real(famobi_localStorage_get("game_mode_1_150h_100", 0)));
    array_set_2D(_inst.gmlgame_mode_1_cp, 4, 5, real(famobi_localStorage_get("game_mode_1_150h_125", 0)));
    array_set_2D(_inst.gmlgame_mode_1_cp, 4, 6, real(famobi_localStorage_get("game_mode_1_150h_150", 0)));
    if ((gmlgame_mode == 1)) {
        {
            if (!(_inst.gmlgame_mode_1_max_level instanceof Array)) {
                _inst.gmlgame_mode_1_max_level = [];
                _inst.gmlgame_mode_1_max_level.__yy_owner = 1804178631;
            } else if (_inst.gmlgame_mode_1_max_level.__yy_owner !== 1804178631) {
                _inst.gmlgame_mode_1_max_level = _inst.gmlgame_mode_1_max_level.slice(0);
                _inst.gmlgame_mode_1_max_level.__yy_owner = 1804178631;
            }
            _inst.gmlgame_mode_1_max_level[1] = 25;
            _inst.gmlgame_mode_1_max_level[2] = 50;
            _inst.gmlgame_mode_1_max_level[3] = 100;
            _inst.gmlgame_mode_1_max_level[4] = 150;
            _inst.gmlgame_levels_max_level = _inst.gmlgame_mode_1_max_level[gmlgame_submode];
            _inst.gmlgame_levels_curr = _inst.gmlgame_mode_1_curr_level[gmlgame_submode];
            _inst.gmlgame_levels_hits_total = _inst.gmlgame_mode_1_hits_total[gmlgame_submode];
            _inst.gmlgame_levels_hits_total_vis = _inst.gmlgame_levels_hits_total;
            _inst.gmlgame_hits_curr = _inst.gmlgame_mode_1_hits_curr[gmlgame_submode];
            _inst.gmlgame_hits_curr_vis = _inst.gmlgame_hits_curr;
            _inst.gmlgame_mode_1_best_score = _inst.gmlgame_mode_1_hits_best[gmlgame_submode];
        };
    };
    _inst.gmlgame_mode_2_holes_record = real(famobi_localStorage_get("game_mode_2_holes_record", 0));
    _inst.gmlgame_mode_3_holes_record = real(famobi_localStorage_get("game_mode_3_holes_record", 0));
    _inst.gmlgame_mode_3_time_left = 60000;
    _inst.gmlgame_mode_3_time_add_max = 10000;
    _inst.gmlgame_mode_3_time_add_base = 12000;
    _inst.gmlgame_mode_3_time_add = 0;
    _inst.gmlgame_mode_4_holes_record = real(famobi_localStorage_get("game_mode_4_holes_record", 0));
    _inst.gmlgame_mode_4_balls_max = 10;
    _inst.gmlgame_mode_4_balls_left = _inst.gmlgame_mode_4_balls_max;
    _inst.gmlgame_tutorial_1 = real(famobi_localStorage_get("game_tutorial_1", 0));
    global.gmlgame_lang = real(famobi_localStorage_get("game_lang", 0));
    global.gmlgame_volume_music = real(famobi_localStorage_get("game_volume_music", 1));
    global.gmlgame_volume_sound = real(famobi_localStorage_get("game_volume_sound", 1));
}

// #####################################################################################################
// /// scr_ini_progress_save(game_mode)
//
// var game_mode = argument0;
// var game_submode = global.game_submode;
//
// // ini_open("savedata.ini"); ini_close();
//
//     if ( game_mode == 1 ){
//     // Neon Courses
//
//         if ( game_submode == 1 ){
//
//             famobi_localStorage_set("game_mode_1_level_25h",real(game_mode_1_curr_level[1])); // 25h : Current Level
//             famobi_localStorage_set("game_mode_1_hits_curr_25h",real(game_mode_1_hits_curr[1])); // 25h : Hits Current
//             famobi_localStorage_set("game_mode_1_hits_total_25h",real(game_mode_1_hits_total[1])); // 25h : Hits Total
//             famobi_localStorage_set("game_mode_1_hits_best_25h",real(game_mode_1_hits_best[1])); // 25h : Hits Best
//
//             famobi_localStorage_set("game_mode_1_25h_025",real(game_mode_1_cp[1,1])); // 25h : Checkpoints
//
//         }
//         else if ( game_submode == 2 ){
//
//             famobi_localStorage_set("game_mode_1_level_50h",real(game_mode_1_curr_level[2])); // 50h : Current Level
//             famobi_localStorage_set("game_mode_1_hits_curr_50h",real(game_mode_1_hits_curr[2])); // 50h : Hits Current
//             famobi_localStorage_set("game_mode_1_hits_total_50h",real(game_mode_1_hits_total[2])); // 50h : Hits Total
//             famobi_localStorage_set("game_mode_1_hits_best_50h",real(game_mode_1_hits_best[2])); // 50h : Hits Best
//
//             famobi_localStorage_set("game_mode_1_50h_025",real(game_mode_1_cp[2,1])); // 50h : Checkpoints
//             famobi_localStorage_set("game_mode_1_50h_050",real(game_mode_1_cp[2,2]));
//         }
//         else if ( game_submode == 3 ){
//
//             famobi_localStorage_set("game_mode_1_level_100h",real(game_mode_1_curr_level[3])); // 100h : Current Level
//             famobi_localStorage_set("game_mode_1_hits_curr_100h",real(game_mode_1_hits_curr[3])); // 100h : Hits Current
//             famobi_localStorage_set("game_mode_1_hits_total_100h",real(game_mode_1_hits_total[3])); // 100h : Hits Total
//             famobi_localStorage_set("game_mode_1_hits_best_100h",real(game_mode_1_hits_best[3])); // 100h : Hits Best
//
//             famobi_localStorage_set("game_mode_1_100h_025",real(game_mode_1_cp[3,1])); // 100h : Checkpoints
//             famobi_localStorage_set("game_mode_1_100h_050",real(game_mode_1_cp[3,2]));
//             famobi_localStorage_set("game_mode_1_100h_075",real(game_mode_1_cp[3,3]));
//             famobi_localStorage_set("game_mode_1_100h_100",real(game_mode_1_cp[3,4]));
//         }
//         else if ( game_submode == 4 ){
//
//             famobi_localStorage_set("game_mode_1_level_150h",real(game_mode_1_curr_level[4]));
//             famobi_localStorage_set("game_mode_1_hits_curr_150h",real(game_mode_1_hits_curr[4]));
//             famobi_localStorage_set("game_mode_1_hits_total_150h",real(game_mode_1_hits_total[4]));
//             famobi_localStorage_set("game_mode_1_hits_best_150h",real(game_mode_1_hits_best[4]));
//
//             famobi_localStorage_set("game_mode_1_150h_025",real(game_mode_1_cp[4,1]));
//             famobi_localStorage_set("game_mode_1_150h_050",real(game_mode_1_cp[4,2]));
//             famobi_localStorage_set("game_mode_1_150h_075",real(game_mode_1_cp[4,3]));
//             famobi_localStorage_set("game_mode_1_150h_100",real(game_mode_1_cp[4,4]));
//             famobi_localStorage_set("game_mode_1_150h_125",real(game_mode_1_cp[4,5]));
//             famobi_localStorage_set("game_mode_1_150h_150",real(game_mode_1_cp[4,6]));
//         }
//     }
//     else if ( game_mode == 2 ){
//     // Hole in One
//
//         famobi_localStorage_set("game_mode_2_holes_record",real(obj_ctrl_board.game_mode_2_holes_record)); // Holes Record
//     }
//     else if ( game_mode == 3 ){
//     // Just in Time
//
//         famobi_localStorage_set("game_mode_3_holes_record",real(obj_ctrl_board.game_mode_3_holes_record)); // Holes Record
//     }
//     else if ( game_mode == 4 ){
//     // Don't Run Out
//
//         famobi_localStorage_set("game_mode_4_holes_record",real(obj_ctrl_board.game_mode_4_holes_record)); // Holes Record
//     }
//
//
//
//
function gml_Script_scr_famobi_progress_save(_inst, _other, argument0) {

    var gmlgame_mode = argument0;
    var gmlgame_submode = global.gmlgame_submode;
    if ((gmlgame_mode == 1)) {
        {
            if ((gmlgame_submode == 1)) {
                {
                    famobi_localStorage_set("game_mode_1_level_25h", real(_inst.gmlgame_mode_1_curr_level[1]));
                    famobi_localStorage_set("game_mode_1_hits_curr_25h", real(_inst.gmlgame_mode_1_hits_curr[1]));
                    famobi_localStorage_set("game_mode_1_hits_total_25h", real(_inst.gmlgame_mode_1_hits_total[1]));
                    famobi_localStorage_set("game_mode_1_hits_best_25h", real(_inst.gmlgame_mode_1_hits_best[1]));
                    famobi_localStorage_set("game_mode_1_25h_025", real(_inst.gmlgame_mode_1_cp[1][1]));
                };
            } else {
                if ((gmlgame_submode == 2)) {
                    {
                        famobi_localStorage_set("game_mode_1_level_50h", real(_inst.gmlgame_mode_1_curr_level[2]));
                        famobi_localStorage_set("game_mode_1_hits_curr_50h", real(_inst.gmlgame_mode_1_hits_curr[2]));
                        famobi_localStorage_set("game_mode_1_hits_total_50h", real(_inst.gmlgame_mode_1_hits_total[2]));
                        famobi_localStorage_set("game_mode_1_hits_best_50h", real(_inst.gmlgame_mode_1_hits_best[2]));
                        famobi_localStorage_set("game_mode_1_50h_025", real(_inst.gmlgame_mode_1_cp[2][1]));
                        famobi_localStorage_set("game_mode_1_50h_050", real(_inst.gmlgame_mode_1_cp[2][2]));
                    };
                } else {
                    if ((gmlgame_submode == 3)) {
                        {
                            famobi_localStorage_set("game_mode_1_level_100h", real(_inst.gmlgame_mode_1_curr_level[3]));
                            famobi_localStorage_set("game_mode_1_hits_curr_100h", real(_inst.gmlgame_mode_1_hits_curr[3]));
                            famobi_localStorage_set("game_mode_1_hits_total_100h", real(_inst.gmlgame_mode_1_hits_total[3]));
                            famobi_localStorage_set("game_mode_1_hits_best_100h", real(_inst.gmlgame_mode_1_hits_best[3]));
                            famobi_localStorage_set("game_mode_1_100h_025", real(_inst.gmlgame_mode_1_cp[3][1]));
                            famobi_localStorage_set("game_mode_1_100h_050", real(_inst.gmlgame_mode_1_cp[3][2]));
                            famobi_localStorage_set("game_mode_1_100h_075", real(_inst.gmlgame_mode_1_cp[3][3]));
                            famobi_localStorage_set("game_mode_1_100h_100", real(_inst.gmlgame_mode_1_cp[3][4]));
                        };
                    } else {
                        if ((gmlgame_submode == 4)) {
                            {
                                famobi_localStorage_set("game_mode_1_level_150h", real(_inst.gmlgame_mode_1_curr_level[4]));
                                famobi_localStorage_set("game_mode_1_hits_curr_150h", real(_inst.gmlgame_mode_1_hits_curr[4]));
                                famobi_localStorage_set("game_mode_1_hits_total_150h", real(_inst.gmlgame_mode_1_hits_total[4]));
                                famobi_localStorage_set("game_mode_1_hits_best_150h", real(_inst.gmlgame_mode_1_hits_best[4]));
                                famobi_localStorage_set("game_mode_1_150h_025", real(_inst.gmlgame_mode_1_cp[4][1]));
                                famobi_localStorage_set("game_mode_1_150h_050", real(_inst.gmlgame_mode_1_cp[4][2]));
                                famobi_localStorage_set("game_mode_1_150h_075", real(_inst.gmlgame_mode_1_cp[4][3]));
                                famobi_localStorage_set("game_mode_1_150h_100", real(_inst.gmlgame_mode_1_cp[4][4]));
                                famobi_localStorage_set("game_mode_1_150h_125", real(_inst.gmlgame_mode_1_cp[4][5]));
                                famobi_localStorage_set("game_mode_1_150h_150", real(_inst.gmlgame_mode_1_cp[4][6]));
                            };
                        };
                    };
                };
            };
        };
    } else {
        if ((gmlgame_mode == 2)) {
            {
                famobi_localStorage_set("game_mode_2_holes_record", real(yyInst(2).gmlgame_mode_2_holes_record));
            };
        } else {
            if ((gmlgame_mode == 3)) {
                {
                    famobi_localStorage_set("game_mode_3_holes_record", real(yyInst(2).gmlgame_mode_3_holes_record));
                };
            } else {
                if ((gmlgame_mode == 4)) {
                    {
                        famobi_localStorage_set("game_mode_4_holes_record", real(yyInst(2).gmlgame_mode_4_holes_record));
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// /// scr_ini_progress_save_sml(game_mode)
//
// var game_mode = argument0;
// var game_submode = global.game_submode;
//
// // ini_open("savedata.ini"); ini_close();
//
//     if ( game_mode == 1 ){
//     // Neon Courses
//
//         if ( game_submode == 1 ){
//         // 25h
//
//             famobi_localStorage_set("game_mode_1_hits_curr_25h",real(game_mode_1_hits_curr[1])); // 25h : Hits Current
//         }
//         else if ( game_submode == 2 ){
//         // 50h
//
//             famobi_localStorage_set("game_mode_1_hits_curr_50h",real(game_mode_1_hits_curr[2])); // 50h : Hits Current
//         }
//         else if ( game_submode == 3 ){
//         // 100h
//
//             famobi_localStorage_set("game_mode_1_hits_curr_100h",real(game_mode_1_hits_curr[3])); // 100h : Hits Current
//         }
//         else if ( game_submode == 4 ){
//         // 150h
//
//             famobi_localStorage_set("game_mode_1_hits_curr_150h",real(game_mode_1_hits_curr[4])); // 150h : Hits Current
//         }
//     }
//     else if ( game_mode == 2 ){
//     // Hole in One
//
//
//     }
//     else if ( game_mode == 3 ){
//     // Just in Time
//
//
//     }
//     else if ( game_mode == 4 ){
//     // Don't Run Out
//
//
//     }
//
//
function gml_Script_scr_famobi_progress_save_sml(_inst, _other, argument0) {
    var gmlgame_mode = argument0;
    var gmlgame_submode = global.gmlgame_submode;
    if ((gmlgame_mode == 1)) {
        {
            if ((gmlgame_submode == 1)) {
                {
                    famobi_localStorage_set("game_mode_1_hits_curr_25h", real(_inst.gmlgame_mode_1_hits_curr[1]));
                };
            } else {
                if ((gmlgame_submode == 2)) {
                    {
                        famobi_localStorage_set("game_mode_1_hits_curr_50h", real(_inst.gmlgame_mode_1_hits_curr[2]));
                    };
                } else {
                    if ((gmlgame_submode == 3)) {
                        {
                            famobi_localStorage_set("game_mode_1_hits_curr_100h", real(_inst.gmlgame_mode_1_hits_curr[3]));
                        };
                    } else {
                        if ((gmlgame_submode == 4)) {
                            {
                                famobi_localStorage_set("game_mode_1_hits_curr_150h", real(_inst.gmlgame_mode_1_hits_curr[4]));
                            };
                        };
                    };
                };
            };
        };
    } else {
        if ((gmlgame_mode == 2)) {
            {};
        } else {
            if ((gmlgame_mode == 3)) {
                {};
            } else {
                if ((gmlgame_mode == 4)) {
                    {};
                };
            };
        };
    };
}

// #####################################################################################################
// /// scr_famobi_MoreGamesButtonImage_load()
//
//     // show_debug_message("working_directory: " + string(working_directory));
//
//     var famobi_js_image = famobi_getMoreGamesButtonImage()
//
//     famobi_MoreGamesButtonImage = sprite_add(working_directory + "/" + famobi_js_image,1,true,true,0,0);
//
//     famobi_MoreGamesButtonImage_w = sprite_get_width(famobi_MoreGamesButtonImage);
//     famobi_MoreGamesButtonImage_h = sprite_get_height(famobi_MoreGamesButtonImage);
//
//     famobi_image_loaded = true;
//
//
function gml_Script_scr_famobi_MoreGamesButtonImage_load(_inst, _other) {
    var gmlfamobi_js_image = famobi_getMoreGamesButtonImage();
    _inst.gmlfamobi_MoreGamesButtonImage = sprite_add((g_pBuiltIn.working_directory + "/" + gmlfamobi_js_image), 1, 1, 1, 0, 0);
    _inst.gmlfamobi_MoreGamesButtonImage_w = sprite_get_width(_inst.gmlfamobi_MoreGamesButtonImage);
    _inst.gmlfamobi_MoreGamesButtonImage_h = sprite_get_height(_inst.gmlfamobi_MoreGamesButtonImage);
    _inst.gmlfamobi_image_loaded = 1 ? 1 : 0;
}

// #####################################################################################################
// /// draw_bezier(x1,y1,x2,y2,x3,y3,x4,y4,smoothness);
// /*
// Name: draw_bezier
// Author: roach
// ---
// Arguments:
// argument0 - x1
// argument1 - y1
// argument2 - x2
// argument3 - y2
// argument4 - x3
// argument5 - y3
// argument6 - x4
// argument7 - y4
// argument8 - Line smoothness
// ---
// Example:
// draw_bezier(0,0,640,0,0,480,640,480,0.005);
// */
// i=0
// ox=argument0
// oy=argument1
// cx=3*(argument2-argument0)
// bx=3*(argument4-argument2)-cx
// ax=argument6-argument0-cx-bx
// cy=3*(argument3-argument1)
// by=3*(argument5-argument3)-cy
// ay=argument7-argument1-cy-by
// for (i=0; i<1; i+=argument8)
// {
//   xq=((ax*i+bx)*i+cx)*i+argument0
//   yq=((ay*i+by)*i+cy)*i+argument1
//   if i>0 {draw_line_width(ox,oy,xq,yq,10)}
//   ox=xq; oy=yq
// }
//
function gml_Script_draw_bezier(_inst, _other, argument0, argument1, argument2, argument3, argument4, argument5, argument6, argument7, argument8) {
    _inst.gmli = 0;
    _inst.gmlox = argument0;
    _inst.gmloy = argument1;
    _inst.gmlcx = (3 * (argument2 - argument0));
    _inst.gmlbx = ((3 * (argument4 - argument2)) - _inst.gmlcx);
    _inst.gmlax = (argument6 - argument0 - _inst.gmlcx - _inst.gmlbx);
    _inst.gmlcy = (3 * (argument3 - argument1));
    _inst.gmlby = ((3 * (argument5 - argument3)) - _inst.gmlcy);
    _inst.gmlay = (argument7 - argument1 - _inst.gmlcy - _inst.gmlby);
    for (_inst.gmli = 0;
        (_inst.gmli < 1); _inst.gmli += argument8) {
        {
            _inst.gmlxq = ((((((_inst.gmlax * _inst.gmli) + _inst.gmlbx) * _inst.gmli) + _inst.gmlcx) * _inst.gmli) + argument0);
            _inst.gmlyq = ((((((_inst.gmlay * _inst.gmli) + _inst.gmlby) * _inst.gmli) + _inst.gmlcy) * _inst.gmli) + argument1);
            if ((_inst.gmli > 0)) {
                {
                    draw_line_width(_inst.gmlox, _inst.gmloy, _inst.gmlxq, _inst.gmlyq, 10);
                };
            };
            _inst.gmlox = _inst.gmlxq;
            _inst.gmloy = _inst.gmlyq;
        }
    };
}

// #####################################################################################################
// /// scr_analytics_init()
//
// if ( global.platform_config == 1 ){
// // Browser
//
//     FlurryAnalytics_Init("Y3JHHNKS5KDNY6CVMTP5");
// }
// else if ( global.platform_config == 3 ){
// // Mobile
//
//     if ( os_type = os_android ){
//     // Android
//
//         FlurryAnalytics_Init("VXXRX5Z62P4WRPKFWF7F");
//     }
//
// }
//
// // show_debug_message(local_string);
//
//
function gml_Script_scr_analytics_init(_inst, _other) {
    if ((global.gmlplatform_config == 1)) {
        {
            extension_stubfunc_real("Y3JHHNKS5KDNY6CVMTP5");
        };
    } else {
        if ((global.gmlplatform_config == 3)) {
            {
                if ((g_pBuiltIn.get_os_type() == 4)) {
                    {
                        extension_stubfunc_real("VXXRX5Z62P4WRPKFWF7F");
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// /// scr_analytics_send(string)
//
// var local_string = argument0;
//
// if ( global.platform_config == 1 ){
// // HTML5
//
//     // FlurryAnalytics_SendEvent(local_string);
//
//     //-- js_DogfireAnalytics_send(string(local_string));
//
//     // get = http_post_string("http://www.dogfiregames.com/game_files/neon_golf/analytics/index.php?entry=" + string(local_string),string(local_string));
//
//     // analytics_event(local_string);
// }
// else if ( global.platform_config == 2 ){
// // Desktop: Windows
//
//     get = http_post_string("http://www.dogfiregames.com/game_files/neon_golf/analytics/index.php?entry=" + string(local_string),string(local_string));
// }
// else if ( global.platform_config == 3 ){
// // Mobile
//
//     if ( os_type = os_android ){
//     // Android
//
//         FlurryAnalytics_SendEvent(local_string);
//     }
// }
//
// // show_debug_message(local_string);
//
//
function gml_Script_scr_analytics_send(_inst, _other, argument0) {
    var gmllocal_string = argument0;
    if ((global.gmlplatform_config == 1)) {
        {};
    } else {
        if ((global.gmlplatform_config == 2)) {
            {
                _inst.gmlget = http_post_string(("http://www.dogfiregames.com/game_files/neon_golf/analytics/index.php?entry=" + string(gmllocal_string)), string(gmllocal_string));
            };
        } else {
            if ((global.gmlplatform_config == 3)) {
                {
                    if ((g_pBuiltIn.get_os_type() == 4)) {
                        {
                            extension_stubfunc_real(gmllocal_string);
                        };
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// /// scr_audio_fade(music_id,volume,time);
//
// var music_id = argument0;
// var music_volume = argument1;
// var music_time = argument2;
//
// audio_sound_gain(music_id,( music_volume * global.game_volume_music ),music_time);
//
//
function gml_Script_scr_audio_fade(_inst, _other, argument0, argument1, argument2) {
    var gmlmusic_id = argument0;
    var gmlmusic_volume = argument1;
    var gmlmusic_time = argument2;
    audio_sound_gain(gmlmusic_id, (gmlmusic_volume * global.gmlgame_volume_music), gmlmusic_time);
}

// #####################################################################################################
// /// scr_ball_destroy()
//
// if ( ball_inst != 0 ){
//
//     with ( ball_inst ){ instance_destroy(); }
//
//     ball_inst = 0;
// }
//
//
function gml_Script_scr_ball_destroy(_inst, _other) {
    if ((_inst.gmlball_inst != 0)) {
        {
            {
                var __yy__v32 = GetWithArray(_inst.gmlball_inst);
                for (var __yy__v33 in __yy__v32) {
                    if (!__yy__v32.hasOwnProperty(__yy__v33)) continue;
                    var __yy__v34 = __yy__v32[__yy__v33];
                    if (__yy__v34.marked) continue;
                    if (!__yy__v34.active) continue; {
                        instance_destroy(__yy__v34);
                    }
                }
            };
            _inst.gmlball_inst = 0;
        };
    };
}

// #####################################################################################################
// /// scr_btn_action(action_number);
//
// var action_number = argument0;
//
// scr_sound_button();
//
// if ( action_number = 1 ){
// // Play Game
//
//     global.floor_mode = 2; // Neon Courses ( Default )
//     scr_game_mode_set(1,1); // Neon Courses ( Default )
//
//     scr_screen_set(3);
// }
// else if ( action_number = 2 ){
// // Options
//
//     scr_screen_set(8);
// }
// else if ( action_number = 3 ){
// // Exit Game
//
//     game_end();
// }
// else if ( action_number = 4 ){
// // Neon Courses
//
//     scr_game_mode_set(1,1);
//     scr_screen_set(3);
// }
// else if ( action_number = 5 ){
// // Hole in one
//
//     scr_game_mode_set(2,0);
//     scr_screen_set(4);
// }
// else if ( action_number = 6 ){
// // START
//
//     // Analytics
//
//         var mode_string = "ModeStart_" + string(global.game_mode);
//
//         if ( global.game_mode == 1 ){ mode_string = mode_string + "_" + string(game_mode_1_max_level[global.game_submode]) + "h"; }
//
//         scr_analytics_send(mode_string);
//
//     // Circle Fade
//
//         circle_fade_x = mouse_x;
//
//         circle_fade_y = mouse_y;
//
//         circle_fade_draw = true;
//
//         ball_explosion_step = 0;
//         ball_explosion_step_max = 11;
//
//         // Shake Screen
//         timeline_index = timeline_shake_med;
//         timeline_position = 0;
//         timeline_running = true;
//
//         scr_play_sound(sound_explosion_2,1,false);
//
//         alarm[3] = 1;
//
//     // Room: Game
//
//         global.music_start_played = false;
//
//         // room_goto_next();
// }
// else if ( action_number = 7 ){
// // Just in Time
//
//     scr_game_mode_set(3,0);
//
//     scr_screen_set(5);
// }
// else if ( action_number = 8 ){
// // Don't Run Out
//
//     scr_game_mode_set(4,0);
//
//     scr_screen_set(6);
// }
// else if ( action_number = 9 ){
// // Endless
//
//     scr_game_mode_set(5,0);
//
//     scr_screen_set(7);
// }
// else if ( action_number = 10 ){
// // Retry
//
//     // scr_audio_fade(obj_ctrl_board.music_world,0,1000);
//
//     // [audio] // scr_audio_fade(obj_ctrl_board.music_world,0,500);
//
//     global.music_start_played = false;
//
//     room_restart();
// }
// else if ( action_number = 11 ){
// // Go to Main Menu
//
//     // [audio] // scr_audio_fade(obj_ctrl_board.music_world,0,500);
//
//     global.music_start_played = false;
//
//     room_goto(room_main);
//
//     // game_restart();
// }
// else if ( action_number = 12 ){
// // Open Reset Popup Window
//
//     global.win_popup_active = true;
//
//     instance_create(0,0,obj_win_reset);
// }
// else if ( action_number = 13 ){
// // Close Popup
//
//     with ( obj_win_reset ){ instance_destroy(); }
// }
// else if ( action_number = 14 ){
// // Reset Progress: Main Courses
//
//     if ( obj_menu_main.game_mode_1_cp[global.game_submode,1] == 0 ){
//
//         var local_checkpoint_name = 1;
//         var local_checkpoint_score = 0;
//
//         obj_menu_main.game_mode_1_curr_level[global.game_submode] = real(local_checkpoint_name);
//         obj_menu_main.game_mode_1_hits_curr[global.game_submode] = 0;
//         obj_menu_main.game_mode_1_hits_total[global.game_submode] = real(local_checkpoint_score);
//     }
//     else {
//
//         var local_checkpoint_name = real(checkpoint_name[reset_checkpoint_id]);
//         var local_checkpoint_score = real(checkpoint_score[reset_checkpoint_id]);
//
//         obj_menu_main.game_mode_1_curr_level[global.game_submode] = real(local_checkpoint_name);
//         obj_menu_main.game_mode_1_hits_curr[global.game_submode] = 0;
//         obj_menu_main.game_mode_1_hits_total[global.game_submode] = real(local_checkpoint_score);
//
//         for ( var i=0; i<array_length_1d(checkpoint_name); i+=1; ){
//
//             if ( real(checkpoint_name[i]) > local_checkpoint_name ){
//
//                 if ( global.game_submode == 1 ){
//
//                     if ( checkpoint_name[i] = "25" ){ obj_menu_main.game_mode_1_cp[1,1] = 0; }
//                 }
//                 else if ( global.game_submode == 2 ){
//
//                     if ( checkpoint_name[i] = "25" ){ obj_menu_main.game_mode_1_cp[2,1] = 0; }
//                     else if ( checkpoint_name[i] = "50" ){ obj_menu_main.game_mode_1_cp[2,2] = 0; }
//                 }
//                 else if ( global.game_submode == 3 ){
//
//                     if ( checkpoint_name[i] = "25" ){ obj_menu_main.game_mode_1_cp[3,1] = 0; }
//                     else if ( checkpoint_name[i] = "50" ){ obj_menu_main.game_mode_1_cp[3,2] = 0; }
//                     else if ( checkpoint_name[i] = "75" ){ obj_menu_main.game_mode_1_cp[3,3] = 0; }
//                     else if ( checkpoint_name[i] = "100" ){ obj_menu_main.game_mode_1_cp[3,4] = 0; }
//                 }
//                 else if ( global.game_submode == 4 ){
//
//                     if ( checkpoint_name[i] = "25" ){ obj_menu_main.game_mode_1_cp[4,1] = 0; }
//                     else if ( checkpoint_name[i] = "50" ){ obj_menu_main.game_mode_1_cp[4,2] = 0; }
//                     else if ( checkpoint_name[i] = "75" ){ obj_menu_main.game_mode_1_cp[4,3] = 0; }
//                     else if ( checkpoint_name[i] = "100" ){ obj_menu_main.game_mode_1_cp[4,4] = 0; }
//                     else if ( checkpoint_name[i] = "125" ){ obj_menu_main.game_mode_1_cp[4,5] = 0; }
//                     else if ( checkpoint_name[i] = "150" ){ obj_menu_main.game_mode_1_cp[4,6] = 0; }
//                 }
//
//                 /* if ( checkpoint_name[i] = "25" ){ obj_menu_main.game_mode_1_checkpoint_025 = 0; }
//                 else if ( checkpoint_name[i] = "50" ){ obj_menu_main.game_mode_1_checkpoint_050 = 0; }
//                 else if ( checkpoint_name[i] = "75" ){ obj_menu_main.game_mode_1_checkpoint_075 = 0; }
//                 else if ( checkpoint_name[i] = "100" ){ obj_menu_main.game_mode_1_checkpoint_100 = 0; }
//                 else if ( checkpoint_name[i] = "125" ){ obj_menu_main.game_mode_1_checkpoint_125 = 0; }
//                 else if ( checkpoint_name[i] = "150" ){ obj_menu_main.game_mode_1_checkpoint_150 = 0; }
//                 else if ( checkpoint_name[i] = "175" ){ obj_menu_main.game_mode_1_checkpoint_175 = 0; }
//                 else if ( checkpoint_name[i] = "200" ){ obj_menu_main.game_mode_1_checkpoint_200 = 0; }
//                 else if ( checkpoint_name[i] = "225" ){ obj_menu_main.game_mode_1_checkpoint_225 = 0; }
//                 else if ( checkpoint_name[i] = "250" ){ obj_menu_main.game_mode_1_checkpoint_250 = 0; }
//                 else if ( checkpoint_name[i] = "275" ){ obj_menu_main.game_mode_1_checkpoint_275 = 0; }*/
//             }
//         }
//     }
//
//     with ( obj_menu_main ){
//
//         game_levels_curr = local_checkpoint_name;
//
//         game_levels_hits_total = local_checkpoint_score;
//
//         game_levels_hits_total_vis = game_levels_hits_total;
//
//         game_hits_curr = 0;
//
//         game_hits_curr_vis = game_hits_curr;
//
//         if ( global.famobi_active ){
//         // famobi
//
//             scr_famobi_progress_save(1);
//         }
//         else {
//
//             scr_ini_progress_save(1);
//         }
//
//         scr_screen_set(3);
//
//         with ( obj_win_reset ){ instance_destroy(); }
//     }
// }
// else if ( action_number = 15 ){
// // Neon Courses : 25h
//
//     scr_game_mode_set(1,1);
//     scr_screen_set(3);
// }
// else if ( action_number = 16 ){
// // Neon Courses : 50h
//
//     scr_game_mode_set(1,2);
//     scr_screen_set(3);
// }
// else if ( action_number = 17 ){
// // Neon Courses : 100h
//
//     scr_game_mode_set(1,3);
//     scr_screen_set(3);
// }
// else if ( action_number = 18 ){
// // Neon Courses : 150h
//
//     scr_game_mode_set(1,4);
//     scr_screen_set(3);
// }
// else if ( action_number = 19 ){
// // Side Menu : Goto Main Menu
//
//     // [audio] // scr_audio_fade(obj_ctrl_board.music_world,0,1000);
//
//     // [audio] // scr_audio_fade(obj_ctrl_board.audio_hit_sound[obj_ctrl_board.audio_hit_pos],0,1000);
//
//     global.music_start_played = false;
//
//     with ( obj_ctrl_board ){
//
//         if ( surface_exists(surf_floor) ){ surface_free(surf_floor); }
//         if ( surface_exists(surf_hole_arrow) ){ surface_free(surf_hole_arrow) };
//     }
//
//     floor_started = false;
//
//     room_goto(room_main);
//
//     // game_restart();
// }
// else if ( action_number = 20 ){
// // Side Menu : Close
//
//     with(obj_win_sidemenu){ instance_destroy(); }
// }
// else if ( action_number = 21 ){
// // Music Down
//
//     global.game_volume_music -= 0.1;
//
//     if ( global.game_volume_music < 0 ){ global.game_volume_music = 0 } else { global.volume_master = 1; audio_master_gain(global.volume_master); }
//
//     scr_audio_fade(menu_music,1,0);
// }
// else if ( action_number = 22 ){
// // Music Up
//
//     global.game_volume_music += 0.1;
//
//     if ( global.game_volume_music > 1 ){ global.game_volume_music = 1 } else { global.volume_master = 1; audio_master_gain(global.volume_master); }
//
//     scr_audio_fade(menu_music,1,0);
// }
// else if ( action_number = 23 ){
// // Volume Down
//
//     global.game_volume_sound -= 0.1;
//
//     if ( global.game_volume_sound < 0 ){ global.game_volume_sound = 0 } else { global.volume_master = 1; audio_master_gain(global.volume_master); }
// }
// else if ( action_number = 24 ){
// // Volume Up
//
//     global.game_volume_sound += 0.1;
//
//     if ( global.game_volume_sound > 1 ){ global.game_volume_sound = 1 } else { global.volume_master = 1; audio_master_gain(global.volume_master); }
// }
// else if ( action_number = 25 ){
// // Set Language: English
//
//     global.game_lang = 0;
//
//     with ( obj_menu_main ){ scr_dialog_load(); } // scr_language_load();
//
//     scr_screen_set(screen_type);
// }
// else if ( action_number = 26 ){
// // Set Language: Spanish
//
//     global.game_lang = 1;
//
//     with ( obj_menu_main ){ scr_dialog_load(); } // scr_language_load();
//
//     scr_screen_set(screen_type);
// }
// else if ( action_number = 27 ){
// /// Audio Master On/Off
//
//     scr_volume_master_switch();
// }
// else if ( action_number = 28 ){
// // Endless
//
//     scr_screen_set(9);
// }
// else if ( action_number = 29 ){
// // Endless
//
//     if ( game_tutorial_1 == 0 ){
//
//         game_tutorial_1 = 1;
//     }
//     else {
//
//         game_tutorial_1 = 0;
//     }
// }
//
//
function gml_Script_scr_btn_action(_inst, _other, argument0) {

    var gmlaction_number = argument0;

    switch (gmlaction_number) {
        case 1:
            if (false) window.famobi_analytics.trackEvent("EVENT_LEVELSTART", {
                levelName: ""
            });
            window.famobi_analytics.trackScreen("SCREEN_LEVELSELECT");
            break;
        case 2:
            window.famobi_analytics.trackScreen("SCREEN_SETTINGS");
            break;
        case 19:
            window.famobi_analytics.trackEvent("EVENT_LEVELFAIL", {
                levelName: global.gmlgame_levelName,
                reason: "quit"
            });
            break;
        case 20:
            window.famobi_analytics.trackScreen("SCREEN_LEVEL", global.gmlgame_levelName);
            break;
        case 28:
            window.famobi_analytics.trackScreen("SCREEN_CREDITS");
            break;
        default:
            //window.famobi.log("->" + gmlaction_number);
    }

    gml_Script_scr_sound_button(_inst, _other);
    if ((gmlaction_number == 1)) {
        {
            global.gmlfloor_mode = 2;
            gml_Script_scr_game_mode_set(_inst, _other, 1, 1);
            gml_Script_scr_screen_set(_inst, _other, 3);
        };
    } else {
        if ((gmlaction_number == 2)) {
            {
                gml_Script_scr_screen_set(_inst, _other, 8);
            };
        } else {
            if ((gmlaction_number == 3)) {
                {
                    game_end();
                };
            } else {
                if ((gmlaction_number == 4)) {
                    {
                        gml_Script_scr_game_mode_set(_inst, _other, 1, 1);
                        gml_Script_scr_screen_set(_inst, _other, 3);
                    };
                } else {
                    if ((gmlaction_number == 5)) {
                        {
                            gml_Script_scr_game_mode_set(_inst, _other, 2, 0);
                            gml_Script_scr_screen_set(_inst, _other, 4);
                        };
                    } else {
                        if ((gmlaction_number == 6)) {
                            {
                                var gmlmode_string = ("ModeStart_" + string(global.gmlgame_mode));
                                if ((global.gmlgame_mode == 1)) {
                                    {
                                        gmlmode_string = (gmlmode_string + "_" + string(_inst.gmlgame_mode_1_max_level[global.gmlgame_submode]) + "h");
                                    };
                                };
                                gml_Script_scr_analytics_send(_inst, _other, gmlmode_string);
                                _inst.gmlcircle_fade_x = g_pBuiltIn.mouse_x;
                                _inst.gmlcircle_fade_y = g_pBuiltIn.mouse_y;
                                _inst.gmlcircle_fade_draw = 1 ? 1 : 0;
                                _inst.gmlball_explosion_step = 0;
                                _inst.gmlball_explosion_step_max = 11;
                                _inst.timeline_index = 1;
                                _inst.timeline_position = 0;
                                _inst.set_timeline_running(1 ? 1 : 0);
                                gml_Script_scr_play_sound(_inst, _other, 0, 1, 0);
                                if (!(_inst.alarm instanceof Array)) {
                                    _inst.alarm = [];
                                    _inst.alarm.__yy_owner = 1584050178;
                                } else if (_inst.alarm.__yy_owner !== 1584050178) {
                                    _inst.alarm = _inst.alarm.slice(0);
                                    _inst.alarm.__yy_owner = 1584050178;
                                }
                                _inst.alarm[3] = 1;
                                global.gmlmusic_start_played = 0 ? 1 : 0;
                            };
                        } else {
                            if ((gmlaction_number == 7)) {
                                {
                                    gml_Script_scr_game_mode_set(_inst, _other, 3, 0);
                                    gml_Script_scr_screen_set(_inst, _other, 5);
                                };
                            } else {
                                if ((gmlaction_number == 8)) {
                                    {
                                        gml_Script_scr_game_mode_set(_inst, _other, 4, 0);
                                        gml_Script_scr_screen_set(_inst, _other, 6);
                                    };
                                } else {
                                    if ((gmlaction_number == 9)) {
                                        {
                                            gml_Script_scr_game_mode_set(_inst, _other, 5, 0);
                                            gml_Script_scr_screen_set(_inst, _other, 7);
                                        };
                                    } else {
                                        if ((gmlaction_number == 10)) {
                                            {
                                                global.gmlmusic_start_played = 0 ? 1 : 0;
                                                room_restart();
                                            };
                                        } else {
                                            if ((gmlaction_number == 11)) {
                                                {
                                                    global.gmlmusic_start_played = 0 ? 1 : 0;
                                                    room_goto(1);
                                                };
                                            } else {
                                                if ((gmlaction_number == 12)) {
                                                    {
                                                        global.gmlwin_popup_active = 1 ? 1 : 0;
                                                        instance_create(0, 0, 10);
                                                    };
                                                } else {
                                                    if ((gmlaction_number == 13)) {
                                                        {
                                                            {
                                                                var __yy__v35 = GetWithArray(10);
                                                                for (var __yy__v36 in __yy__v35) {
                                                                    if (!__yy__v35.hasOwnProperty(__yy__v36)) continue;
                                                                    var __yy__v37 = __yy__v35[__yy__v36];
                                                                    if (__yy__v37.marked) continue;
                                                                    if (!__yy__v37.active) continue; {
                                                                        instance_destroy(__yy__v37);
                                                                    }
                                                                }
                                                            };
                                                        };
                                                    } else {
                                                        if ((gmlaction_number == 14)) {
                                                            {
                                                                if ((yyInst(8).gmlgame_mode_1_cp[global.gmlgame_submode][1] == 0)) {
                                                                    {
                                                                        var gmllocal_checkpoint_name = 1;
                                                                        var gmllocal_checkpoint_score = 0;
                                                                        if (!(yyInst(8).gmlgame_mode_1_curr_level instanceof Array)) {
                                                                            yyInst(8).gmlgame_mode_1_curr_level = [];
                                                                            yyInst(8).gmlgame_mode_1_curr_level.__yy_owner = 1269144098;
                                                                        } else if (yyInst(8).gmlgame_mode_1_curr_level.__yy_owner !== 1269144098) {
                                                                            yyInst(8).gmlgame_mode_1_curr_level = yyInst(8).gmlgame_mode_1_curr_level.slice(0);
                                                                            yyInst(8).gmlgame_mode_1_curr_level.__yy_owner = 1269144098;
                                                                        }
                                                                        yyInst(8).gmlgame_mode_1_curr_level[global.gmlgame_submode] = real(gmllocal_checkpoint_name);
                                                                        if (!(yyInst(8).gmlgame_mode_1_hits_curr instanceof Array)) {
                                                                            yyInst(8).gmlgame_mode_1_hits_curr = [];
                                                                            yyInst(8).gmlgame_mode_1_hits_curr.__yy_owner = 273990106;
                                                                        } else if (yyInst(8).gmlgame_mode_1_hits_curr.__yy_owner !== 273990106) {
                                                                            yyInst(8).gmlgame_mode_1_hits_curr = yyInst(8).gmlgame_mode_1_hits_curr.slice(0);
                                                                            yyInst(8).gmlgame_mode_1_hits_curr.__yy_owner = 273990106;
                                                                        }
                                                                        yyInst(8).gmlgame_mode_1_hits_curr[global.gmlgame_submode] = 0;
                                                                        if (!(yyInst(8).gmlgame_mode_1_hits_total instanceof Array)) {
                                                                            yyInst(8).gmlgame_mode_1_hits_total = [];
                                                                            yyInst(8).gmlgame_mode_1_hits_total.__yy_owner = 3791669074;
                                                                        } else if (yyInst(8).gmlgame_mode_1_hits_total.__yy_owner !== 3791669074) {
                                                                            yyInst(8).gmlgame_mode_1_hits_total = yyInst(8).gmlgame_mode_1_hits_total.slice(0);
                                                                            yyInst(8).gmlgame_mode_1_hits_total.__yy_owner = 3791669074;
                                                                        }
                                                                        yyInst(8).gmlgame_mode_1_hits_total[global.gmlgame_submode] = real(gmllocal_checkpoint_score);
                                                                    };
                                                                } else {
                                                                    {
                                                                        var gmllocal_checkpoint_name = real(_inst.gmlcheckpoint_name[_inst.gmlreset_checkpoint_id]);
                                                                        var gmllocal_checkpoint_score = real(_inst.gmlcheckpoint_score[_inst.gmlreset_checkpoint_id]);
                                                                        if (!(yyInst(8).gmlgame_mode_1_curr_level instanceof Array)) {
                                                                            yyInst(8).gmlgame_mode_1_curr_level = [];
                                                                            yyInst(8).gmlgame_mode_1_curr_level.__yy_owner = 1269144098;
                                                                        } else if (yyInst(8).gmlgame_mode_1_curr_level.__yy_owner !== 1269144098) {
                                                                            yyInst(8).gmlgame_mode_1_curr_level = yyInst(8).gmlgame_mode_1_curr_level.slice(0);
                                                                            yyInst(8).gmlgame_mode_1_curr_level.__yy_owner = 1269144098;
                                                                        }
                                                                        yyInst(8).gmlgame_mode_1_curr_level[global.gmlgame_submode] = real(gmllocal_checkpoint_name);
                                                                        if (!(yyInst(8).gmlgame_mode_1_hits_curr instanceof Array)) {
                                                                            yyInst(8).gmlgame_mode_1_hits_curr = [];
                                                                            yyInst(8).gmlgame_mode_1_hits_curr.__yy_owner = 273990106;
                                                                        } else if (yyInst(8).gmlgame_mode_1_hits_curr.__yy_owner !== 273990106) {
                                                                            yyInst(8).gmlgame_mode_1_hits_curr = yyInst(8).gmlgame_mode_1_hits_curr.slice(0);
                                                                            yyInst(8).gmlgame_mode_1_hits_curr.__yy_owner = 273990106;
                                                                        }
                                                                        yyInst(8).gmlgame_mode_1_hits_curr[global.gmlgame_submode] = 0;
                                                                        if (!(yyInst(8).gmlgame_mode_1_hits_total instanceof Array)) {
                                                                            yyInst(8).gmlgame_mode_1_hits_total = [];
                                                                            yyInst(8).gmlgame_mode_1_hits_total.__yy_owner = 3791669074;
                                                                        } else if (yyInst(8).gmlgame_mode_1_hits_total.__yy_owner !== 3791669074) {
                                                                            yyInst(8).gmlgame_mode_1_hits_total = yyInst(8).gmlgame_mode_1_hits_total.slice(0);
                                                                            yyInst(8).gmlgame_mode_1_hits_total.__yy_owner = 3791669074;
                                                                        }
                                                                        yyInst(8).gmlgame_mode_1_hits_total[global.gmlgame_submode] = real(gmllocal_checkpoint_score);
                                                                        for (var gmli = 0;
                                                                            (gmli < array_length_1d(_inst.gmlcheckpoint_name)); gmli += 1) {
                                                                            {
                                                                                if ((real(_inst.gmlcheckpoint_name[gmli]) > gmllocal_checkpoint_name)) {
                                                                                    {
                                                                                        if ((global.gmlgame_submode == 1)) {
                                                                                            {
                                                                                                if ((_inst.gmlcheckpoint_name[gmli] == "25")) {
                                                                                                    {
                                                                                                        if (!(yyInst(8).gmlgame_mode_1_cp instanceof Array)) {
                                                                                                            yyInst(8).gmlgame_mode_1_cp = [];
                                                                                                            yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                        } else if (yyInst(8).gmlgame_mode_1_cp.__yy_owner !== 800029329) {
                                                                                                            yyInst(8).gmlgame_mode_1_cp = yyInst(8).gmlgame_mode_1_cp.slice(0);
                                                                                                            yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                        }
                                                                                                        array_set_2D(yyInst(8).gmlgame_mode_1_cp, 1, 1, 0);
                                                                                                    };
                                                                                                };
                                                                                            };
                                                                                        } else {
                                                                                            if ((global.gmlgame_submode == 2)) {
                                                                                                {
                                                                                                    if ((_inst.gmlcheckpoint_name[gmli] == "25")) {
                                                                                                        {
                                                                                                            if (!(yyInst(8).gmlgame_mode_1_cp instanceof Array)) {
                                                                                                                yyInst(8).gmlgame_mode_1_cp = [];
                                                                                                                yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                            } else if (yyInst(8).gmlgame_mode_1_cp.__yy_owner !== 800029329) {
                                                                                                                yyInst(8).gmlgame_mode_1_cp = yyInst(8).gmlgame_mode_1_cp.slice(0);
                                                                                                                yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                            }
                                                                                                            array_set_2D(yyInst(8).gmlgame_mode_1_cp, 2, 1, 0);
                                                                                                        };
                                                                                                    } else {
                                                                                                        if ((_inst.gmlcheckpoint_name[gmli] == "50")) {
                                                                                                            {
                                                                                                                if (!(yyInst(8).gmlgame_mode_1_cp instanceof Array)) {
                                                                                                                    yyInst(8).gmlgame_mode_1_cp = [];
                                                                                                                    yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                } else if (yyInst(8).gmlgame_mode_1_cp.__yy_owner !== 800029329) {
                                                                                                                    yyInst(8).gmlgame_mode_1_cp = yyInst(8).gmlgame_mode_1_cp.slice(0);
                                                                                                                    yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                }
                                                                                                                array_set_2D(yyInst(8).gmlgame_mode_1_cp, 2, 2, 0);
                                                                                                            };
                                                                                                        };
                                                                                                    };
                                                                                                };
                                                                                            } else {
                                                                                                if ((global.gmlgame_submode == 3)) {
                                                                                                    {
                                                                                                        if ((_inst.gmlcheckpoint_name[gmli] == "25")) {
                                                                                                            {
                                                                                                                if (!(yyInst(8).gmlgame_mode_1_cp instanceof Array)) {
                                                                                                                    yyInst(8).gmlgame_mode_1_cp = [];
                                                                                                                    yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                } else if (yyInst(8).gmlgame_mode_1_cp.__yy_owner !== 800029329) {
                                                                                                                    yyInst(8).gmlgame_mode_1_cp = yyInst(8).gmlgame_mode_1_cp.slice(0);
                                                                                                                    yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                }
                                                                                                                array_set_2D(yyInst(8).gmlgame_mode_1_cp, 3, 1, 0);
                                                                                                            };
                                                                                                        } else {
                                                                                                            if ((_inst.gmlcheckpoint_name[gmli] == "50")) {
                                                                                                                {
                                                                                                                    if (!(yyInst(8).gmlgame_mode_1_cp instanceof Array)) {
                                                                                                                        yyInst(8).gmlgame_mode_1_cp = [];
                                                                                                                        yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                    } else if (yyInst(8).gmlgame_mode_1_cp.__yy_owner !== 800029329) {
                                                                                                                        yyInst(8).gmlgame_mode_1_cp = yyInst(8).gmlgame_mode_1_cp.slice(0);
                                                                                                                        yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                    }
                                                                                                                    array_set_2D(yyInst(8).gmlgame_mode_1_cp, 3, 2, 0);
                                                                                                                };
                                                                                                            } else {
                                                                                                                if ((_inst.gmlcheckpoint_name[gmli] == "75")) {
                                                                                                                    {
                                                                                                                        if (!(yyInst(8).gmlgame_mode_1_cp instanceof Array)) {
                                                                                                                            yyInst(8).gmlgame_mode_1_cp = [];
                                                                                                                            yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                        } else if (yyInst(8).gmlgame_mode_1_cp.__yy_owner !== 800029329) {
                                                                                                                            yyInst(8).gmlgame_mode_1_cp = yyInst(8).gmlgame_mode_1_cp.slice(0);
                                                                                                                            yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                        }
                                                                                                                        array_set_2D(yyInst(8).gmlgame_mode_1_cp, 3, 3, 0);
                                                                                                                    };
                                                                                                                } else {
                                                                                                                    if ((_inst.gmlcheckpoint_name[gmli] == "100")) {
                                                                                                                        {
                                                                                                                            if (!(yyInst(8).gmlgame_mode_1_cp instanceof Array)) {
                                                                                                                                yyInst(8).gmlgame_mode_1_cp = [];
                                                                                                                                yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                            } else if (yyInst(8).gmlgame_mode_1_cp.__yy_owner !== 800029329) {
                                                                                                                                yyInst(8).gmlgame_mode_1_cp = yyInst(8).gmlgame_mode_1_cp.slice(0);
                                                                                                                                yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                            }
                                                                                                                            array_set_2D(yyInst(8).gmlgame_mode_1_cp, 3, 4, 0);
                                                                                                                        };
                                                                                                                    };
                                                                                                                };
                                                                                                            };
                                                                                                        };
                                                                                                    };
                                                                                                } else {
                                                                                                    if ((global.gmlgame_submode == 4)) {
                                                                                                        {
                                                                                                            if ((_inst.gmlcheckpoint_name[gmli] == "25")) {
                                                                                                                {
                                                                                                                    if (!(yyInst(8).gmlgame_mode_1_cp instanceof Array)) {
                                                                                                                        yyInst(8).gmlgame_mode_1_cp = [];
                                                                                                                        yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                    } else if (yyInst(8).gmlgame_mode_1_cp.__yy_owner !== 800029329) {
                                                                                                                        yyInst(8).gmlgame_mode_1_cp = yyInst(8).gmlgame_mode_1_cp.slice(0);
                                                                                                                        yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                    }
                                                                                                                    array_set_2D(yyInst(8).gmlgame_mode_1_cp, 4, 1, 0);
                                                                                                                };
                                                                                                            } else {
                                                                                                                if ((_inst.gmlcheckpoint_name[gmli] == "50")) {
                                                                                                                    {
                                                                                                                        if (!(yyInst(8).gmlgame_mode_1_cp instanceof Array)) {
                                                                                                                            yyInst(8).gmlgame_mode_1_cp = [];
                                                                                                                            yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                        } else if (yyInst(8).gmlgame_mode_1_cp.__yy_owner !== 800029329) {
                                                                                                                            yyInst(8).gmlgame_mode_1_cp = yyInst(8).gmlgame_mode_1_cp.slice(0);
                                                                                                                            yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                        }
                                                                                                                        array_set_2D(yyInst(8).gmlgame_mode_1_cp, 4, 2, 0);
                                                                                                                    };
                                                                                                                } else {
                                                                                                                    if ((_inst.gmlcheckpoint_name[gmli] == "75")) {
                                                                                                                        {
                                                                                                                            if (!(yyInst(8).gmlgame_mode_1_cp instanceof Array)) {
                                                                                                                                yyInst(8).gmlgame_mode_1_cp = [];
                                                                                                                                yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                            } else if (yyInst(8).gmlgame_mode_1_cp.__yy_owner !== 800029329) {
                                                                                                                                yyInst(8).gmlgame_mode_1_cp = yyInst(8).gmlgame_mode_1_cp.slice(0);
                                                                                                                                yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                            }
                                                                                                                            array_set_2D(yyInst(8).gmlgame_mode_1_cp, 4, 3, 0);
                                                                                                                        };
                                                                                                                    } else {
                                                                                                                        if ((_inst.gmlcheckpoint_name[gmli] == "100")) {
                                                                                                                            {
                                                                                                                                if (!(yyInst(8).gmlgame_mode_1_cp instanceof Array)) {
                                                                                                                                    yyInst(8).gmlgame_mode_1_cp = [];
                                                                                                                                    yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                                } else if (yyInst(8).gmlgame_mode_1_cp.__yy_owner !== 800029329) {
                                                                                                                                    yyInst(8).gmlgame_mode_1_cp = yyInst(8).gmlgame_mode_1_cp.slice(0);
                                                                                                                                    yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                                }
                                                                                                                                array_set_2D(yyInst(8).gmlgame_mode_1_cp, 4, 4, 0);
                                                                                                                            };
                                                                                                                        } else {
                                                                                                                            if ((_inst.gmlcheckpoint_name[gmli] == "125")) {
                                                                                                                                {
                                                                                                                                    if (!(yyInst(8).gmlgame_mode_1_cp instanceof Array)) {
                                                                                                                                        yyInst(8).gmlgame_mode_1_cp = [];
                                                                                                                                        yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                                    } else if (yyInst(8).gmlgame_mode_1_cp.__yy_owner !== 800029329) {
                                                                                                                                        yyInst(8).gmlgame_mode_1_cp = yyInst(8).gmlgame_mode_1_cp.slice(0);
                                                                                                                                        yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                                    }
                                                                                                                                    array_set_2D(yyInst(8).gmlgame_mode_1_cp, 4, 5, 0);
                                                                                                                                };
                                                                                                                            } else {
                                                                                                                                if ((_inst.gmlcheckpoint_name[gmli] == "150")) {
                                                                                                                                    {
                                                                                                                                        if (!(yyInst(8).gmlgame_mode_1_cp instanceof Array)) {
                                                                                                                                            yyInst(8).gmlgame_mode_1_cp = [];
                                                                                                                                            yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                                        } else if (yyInst(8).gmlgame_mode_1_cp.__yy_owner !== 800029329) {
                                                                                                                                            yyInst(8).gmlgame_mode_1_cp = yyInst(8).gmlgame_mode_1_cp.slice(0);
                                                                                                                                            yyInst(8).gmlgame_mode_1_cp.__yy_owner = 800029329;
                                                                                                                                        }
                                                                                                                                        array_set_2D(yyInst(8).gmlgame_mode_1_cp, 4, 6, 0);
                                                                                                                                    };
                                                                                                                                };
                                                                                                                            };
                                                                                                                        };
                                                                                                                    };
                                                                                                                };
                                                                                                            };
                                                                                                        };
                                                                                                    };
                                                                                                };
                                                                                            };
                                                                                        };
                                                                                    };
                                                                                };
                                                                            }
                                                                        };
                                                                    };
                                                                }; {
                                                                    var __yy__v38 = GetWithArray(8);
                                                                    for (var __yy__v39 in __yy__v38) {
                                                                        if (!__yy__v38.hasOwnProperty(__yy__v39)) continue;
                                                                        var __yy__v40 = __yy__v38[__yy__v39];
                                                                        if (__yy__v40.marked) continue;
                                                                        if (!__yy__v40.active) continue; {
                                                                            __yy__v40.gmlgame_levels_curr = gmllocal_checkpoint_name;
                                                                            __yy__v40.gmlgame_levels_hits_total = gmllocal_checkpoint_score;
                                                                            __yy__v40.gmlgame_levels_hits_total_vis = __yy__v40.gmlgame_levels_hits_total;
                                                                            __yy__v40.gmlgame_hits_curr = 0;
                                                                            __yy__v40.gmlgame_hits_curr_vis = __yy__v40.gmlgame_hits_curr;
                                                                            if (global.gmlfamobi_active > 0.5) {
                                                                                {
                                                                                    gml_Script_scr_famobi_progress_save(__yy__v40, _inst, 1);
                                                                                };
                                                                            } else {
                                                                                {
                                                                                    gml_Script_scr_ini_progress_save(__yy__v40, _inst, 1);
                                                                                };
                                                                            };
                                                                            gml_Script_scr_screen_set(__yy__v40, _inst, 3); {
                                                                                var __yy__v41 = GetWithArray(10);
                                                                                for (var __yy__v42 in __yy__v41) {
                                                                                    if (!__yy__v41.hasOwnProperty(__yy__v42)) continue;
                                                                                    var __yy__v43 = __yy__v41[__yy__v42];
                                                                                    if (__yy__v43.marked) continue;
                                                                                    if (!__yy__v43.active) continue; {
                                                                                        instance_destroy(__yy__v43);
                                                                                    }
                                                                                }
                                                                            };
                                                                        }
                                                                    }
                                                                };
                                                            };
                                                        } else {
                                                            if ((gmlaction_number == 15)) {
                                                                {
                                                                    gml_Script_scr_game_mode_set(_inst, _other, 1, 1);
                                                                    gml_Script_scr_screen_set(_inst, _other, 3);
                                                                };
                                                            } else {
                                                                if ((gmlaction_number == 16)) {
                                                                    {
                                                                        gml_Script_scr_game_mode_set(_inst, _other, 1, 2);
                                                                        gml_Script_scr_screen_set(_inst, _other, 3);
                                                                    };
                                                                } else {
                                                                    if ((gmlaction_number == 17)) {
                                                                        {
                                                                            gml_Script_scr_game_mode_set(_inst, _other, 1, 3);
                                                                            gml_Script_scr_screen_set(_inst, _other, 3);
                                                                        };
                                                                    } else {
                                                                        if ((gmlaction_number == 18)) {
                                                                            {
                                                                                gml_Script_scr_game_mode_set(_inst, _other, 1, 4);
                                                                                gml_Script_scr_screen_set(_inst, _other, 3);
                                                                            };
                                                                        } else {
                                                                            if ((gmlaction_number == 19)) {
                                                                                {
                                                                                    global.gmlmusic_start_played = 0 ? 1 : 0; {
                                                                                        var __yy__v44 = GetWithArray(2);
                                                                                        for (var __yy__v45 in __yy__v44) {
                                                                                            if (!__yy__v44.hasOwnProperty(__yy__v45)) continue;
                                                                                            var __yy__v46 = __yy__v44[__yy__v45];
                                                                                            if (__yy__v46.marked) continue;
                                                                                            if (!__yy__v46.active) continue; {
                                                                                                if (surface_exists(__yy__v46.gmlsurf_floor) > 0.5) {
                                                                                                    {
                                                                                                        surface_free(__yy__v46.gmlsurf_floor);
                                                                                                    };
                                                                                                };
                                                                                                if (surface_exists(__yy__v46.gmlsurf_hole_arrow) > 0.5) {
                                                                                                    {
                                                                                                        surface_free(__yy__v46.gmlsurf_hole_arrow);
                                                                                                    };
                                                                                                };
                                                                                            }
                                                                                        }
                                                                                    };
                                                                                    _inst.gmlfloor_started = 0 ? 1 : 0;
                                                                                    room_goto(1);
                                                                                };
                                                                            } else {
                                                                                if ((gmlaction_number == 20)) {
                                                                                    {
                                                                                        {
                                                                                            var __yy__v47 = GetWithArray(11);
                                                                                            for (var __yy__v48 in __yy__v47) {
                                                                                                if (!__yy__v47.hasOwnProperty(__yy__v48)) continue;
                                                                                                var __yy__v49 = __yy__v47[__yy__v48];
                                                                                                if (__yy__v49.marked) continue;
                                                                                                if (!__yy__v49.active) continue; {
                                                                                                    instance_destroy(__yy__v49);
                                                                                                }
                                                                                            }
                                                                                        };
                                                                                    };
                                                                                } else {
                                                                                    if ((gmlaction_number == 21)) {
                                                                                        {
                                                                                            global.gmlgame_volume_music -= 0.1;
                                                                                            if ((global.gmlgame_volume_music < 0)) {
                                                                                                {
                                                                                                    global.gmlgame_volume_music = 0;
                                                                                                };
                                                                                            } else {
                                                                                                {
                                                                                                    global.gmlvolume_master = 1;
                                                                                                    audio_master_gain(global.gmlvolume_master);
                                                                                                };
                                                                                            };
                                                                                            gml_Script_scr_audio_fade(_inst, _other, _inst.gmlmenu_music, 1, 0);
                                                                                        };
                                                                                    } else {
                                                                                        if ((gmlaction_number == 22)) {
                                                                                            {
                                                                                                global.gmlgame_volume_music += 0.1;
                                                                                                if ((global.gmlgame_volume_music > 1)) {
                                                                                                    {
                                                                                                        global.gmlgame_volume_music = 1;
                                                                                                    };
                                                                                                } else {
                                                                                                    {
                                                                                                        global.gmlvolume_master = 1;
                                                                                                        audio_master_gain(global.gmlvolume_master);
                                                                                                    };
                                                                                                };
                                                                                                gml_Script_scr_audio_fade(_inst, _other, _inst.gmlmenu_music, 1, 0);
                                                                                            };
                                                                                        } else {
                                                                                            if ((gmlaction_number == 23)) {
                                                                                                {
                                                                                                    global.gmlgame_volume_sound -= 0.1;
                                                                                                    if ((global.gmlgame_volume_sound < 0)) {
                                                                                                        {
                                                                                                            global.gmlgame_volume_sound = 0;
                                                                                                        };
                                                                                                    } else {
                                                                                                        {
                                                                                                            global.gmlvolume_master = 1;
                                                                                                            audio_master_gain(global.gmlvolume_master);
                                                                                                        };
                                                                                                    };
                                                                                                };
                                                                                            } else {
                                                                                                if ((gmlaction_number == 24)) {
                                                                                                    {
                                                                                                        global.gmlgame_volume_sound += 0.1;
                                                                                                        if ((global.gmlgame_volume_sound > 1)) {
                                                                                                            {
                                                                                                                global.gmlgame_volume_sound = 1;
                                                                                                            };
                                                                                                        } else {
                                                                                                            {
                                                                                                                global.gmlvolume_master = 1;
                                                                                                                audio_master_gain(global.gmlvolume_master);
                                                                                                            };
                                                                                                        };
                                                                                                    };
                                                                                                } else {
                                                                                                    if ((gmlaction_number == 25)) {
                                                                                                        {
                                                                                                            global.gmlgame_lang = 0; {
                                                                                                                var __yy__v50 = GetWithArray(8);
                                                                                                                for (var __yy__v51 in __yy__v50) {
                                                                                                                    if (!__yy__v50.hasOwnProperty(__yy__v51)) continue;
                                                                                                                    var __yy__v52 = __yy__v50[__yy__v51];
                                                                                                                    if (__yy__v52.marked) continue;
                                                                                                                    if (!__yy__v52.active) continue; {
                                                                                                                        gml_Script_scr_dialog_load(__yy__v52, _inst);
                                                                                                                    }
                                                                                                                }
                                                                                                            };
                                                                                                            gml_Script_scr_screen_set(_inst, _other, _inst.gmlscreen_type);
                                                                                                        };
                                                                                                    } else {
                                                                                                        if ((gmlaction_number == 26)) {
                                                                                                            {
                                                                                                                global.gmlgame_lang = 1; {
                                                                                                                    var __yy__v53 = GetWithArray(8);
                                                                                                                    for (var __yy__v54 in __yy__v53) {
                                                                                                                        if (!__yy__v53.hasOwnProperty(__yy__v54)) continue;
                                                                                                                        var __yy__v55 = __yy__v53[__yy__v54];
                                                                                                                        if (__yy__v55.marked) continue;
                                                                                                                        if (!__yy__v55.active) continue; {
                                                                                                                            gml_Script_scr_dialog_load(__yy__v55, _inst);
                                                                                                                        }
                                                                                                                    }
                                                                                                                };
                                                                                                                gml_Script_scr_screen_set(_inst, _other, _inst.gmlscreen_type);
                                                                                                            };
                                                                                                        } else {
                                                                                                            if ((gmlaction_number == 27)) {
                                                                                                                {
                                                                                                                    gml_Script_scr_volume_master_switch(_inst, _other);
                                                                                                                };
                                                                                                            } else {
                                                                                                                if ((gmlaction_number == 28)) {
                                                                                                                    {
                                                                                                                        gml_Script_scr_screen_set(_inst, _other, 9);
                                                                                                                    };
                                                                                                                } else {
                                                                                                                    if ((gmlaction_number == 29)) {
                                                                                                                        {
                                                                                                                            if ((_inst.gmlgame_tutorial_1 == 0)) {
                                                                                                                                {
                                                                                                                                    _inst.gmlgame_tutorial_1 = 1;
                                                                                                                                };
                                                                                                                            } else {
                                                                                                                                {
                                                                                                                                    _inst.gmlgame_tutorial_1 = 0;
                                                                                                                                };
                                                                                                                            };
                                                                                                                        };
                                                                                                                    };
                                                                                                                };
                                                                                                            };
                                                                                                        };
                                                                                                    };
                                                                                                };
                                                                                            };
                                                                                        };
                                                                                    };
                                                                                };
                                                                            };
                                                                        };
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// /// scr_btn_settings(btn_id);
//
// var btn_id = argument0;
//
// if ( btn_id == 1 ){
// // Retry
//
//     btn_action = 10;
//
//     btn_text = "Retry";
//
//     btn_game_over = true;
// }
// else if ( btn_id == 2 ){
// // Menu
//
//     btn_action = 11;
//
//     btn_text = "Return to Menu";
//
//     btn_game_over = true;
// }
//
//
function gml_Script_scr_btn_settings(_inst, _other, argument0) {
    var gmlbtn_id = argument0;
    if ((gmlbtn_id == 1)) {
        {
            _inst.gmlbtn_action = 10;
            _inst.gmlbtn_text = window.famobi.__("Retry");
            _inst.gmlbtn_game_over = 1 ? 1 : 0;
        };
    } else {
        if ((gmlbtn_id == 2)) {
            {
                _inst.gmlbtn_action = 11;
                _inst.gmlbtn_text = window.famobi.__("Return to Menu");
                _inst.gmlbtn_game_over = 1 ? 1 : 0;
            };
        };
    };
}

// #####################################################################################################
// /// scr_color_background(bg_mode);
//
// // Background
//
// var bg_mode = argument0; // 0:set bg; 1:transfer bg;
//
// if ( bg_mode == 0 ){
//
//     bg_color_h_vis = 255 * ( irandom_range(1,360) / 360 );
//     bg_color_s_vis = 255 * 0.20;
//     bg_color_v_vis = 255 * 0.17;
//
//     if ( global.first_bg_color ){ bg_color_h_vis = global.first_bg_color_hue; }
//
//     if ( room ==  room_game ){ global.first_bg_color = false; }
//
//     scr_hsv_to_rgb(bg_color_h_vis,bg_color_s_vis,bg_color_v_vis); // bgcolor // return: cRed, cGreen, cBlue
//
//     bg_color_r_vis = cRed;
//     bg_color_g_vis = cGreen;
//     bg_color_b_vis = cBlue;
//
//     bg_color_vis = make_colour_rgb(bg_color_r_vis,bg_color_g_vis,bg_color_b_vis);
// }
// else {
//
//     bg_color_h = bg_color_h_vis;
//     bg_color_s = bg_color_s_vis;
//     bg_color_v = bg_color_v_vis;
//
//     bg_color_r = bg_color_r_vis;
//     bg_color_g = bg_color_g_vis;
//     bg_color_b = bg_color_b_vis;
//
//     bg_color = bg_color_vis;
// }
//
//
function gml_Script_scr_color_background(_inst, _other, argument0) {
    var gmlbg_mode = argument0;
    if ((gmlbg_mode == 0)) {
        {
            _inst.gmlbg_color_h_vis = (255 * (irandom_range(1, 360) / 360));
            _inst.gmlbg_color_s_vis = 51;
            _inst.gmlbg_color_v_vis = 43.35;
            if (global.gmlfirst_bg_color > 0.5) {
                {
                    _inst.gmlbg_color_h_vis = global.gmlfirst_bg_color_hue;
                };
            };
            if ((g_pBuiltIn.get_current_room() == 3)) {
                {
                    global.gmlfirst_bg_color = 0 ? 1 : 0;
                };
            };
            gml_Script_scr_hsv_to_rgb(_inst, _other, _inst.gmlbg_color_h_vis, _inst.gmlbg_color_s_vis, _inst.gmlbg_color_v_vis);
            _inst.gmlbg_color_r_vis = _inst.gmlcRed;
            _inst.gmlbg_color_g_vis = _inst.gmlcGreen;
            _inst.gmlbg_color_b_vis = _inst.gmlcBlue;
            _inst.gmlbg_color_vis = make_colour_rgb(_inst.gmlbg_color_r_vis, _inst.gmlbg_color_g_vis, _inst.gmlbg_color_b_vis);
        };
    } else {
        {
            _inst.gmlbg_color_h = _inst.gmlbg_color_h_vis;
            _inst.gmlbg_color_s = _inst.gmlbg_color_s_vis;
            _inst.gmlbg_color_v = _inst.gmlbg_color_v_vis;
            _inst.gmlbg_color_r = _inst.gmlbg_color_r_vis;
            _inst.gmlbg_color_g = _inst.gmlbg_color_g_vis;
            _inst.gmlbg_color_b = _inst.gmlbg_color_b_vis;
            _inst.gmlbg_color = _inst.gmlbg_color_vis;
        };
    };
}

// #####################################################################################################
// /// scr_color_flash
//
// // Flash Color
//
// scr_rgb_to_hsv(floor_color_r,floor_color_g,floor_color_b);
//
// flash_color_h = cHue;
// flash_color_s = 255 * 0.40;
// flash_color_v = 255 * 0.30;
//
// flash_color = make_colour_hsv(flash_color_h,flash_color_s,flash_color_v);
//
//
function gml_Script_scr_color_flash(_inst, _other) {
    gml_Script_scr_rgb_to_hsv(_inst, _other, _inst.gmlfloor_color_r, _inst.gmlfloor_color_g, _inst.gmlfloor_color_b);
    _inst.gmlflash_color_h = _inst.gmlcHue;
    _inst.gmlflash_color_s = 102;
    _inst.gmlflash_color_v = 76.5;
    _inst.gmlflash_color = make_colour_hsv(_inst.gmlflash_color_h, _inst.gmlflash_color_s, _inst.gmlflash_color_v);
}

// #####################################################################################################
// /// scr_color_transition(R1,G1,B1,R2,G2,B2,change_percent);
//
// // Transition between two colors ( from RGB1 to RGB2 )
//
// R1 = argument0;
// G1 = argument1;
// B1 = argument2;
// R2 = argument3;
// G2 = argument4;
// B2 = argument5;
//
// change_percent = argument6;
//
// // Red
// if ( R1 > R2 ){
//
//     count_diff = R1 - R2;
//
//     count_diff_fraction = floor( count_diff * change_percent );
//
//     R3 = R1 - count_diff_fraction;
// }
// else {
//
//     count_diff = R2 - R1;
//
//     count_diff_fraction = floor( count_diff * change_percent );
//
//     R3 = R1 + count_diff_fraction;
// }
//
// // Green
// if ( G1 > G2 ){
//
//     count_diff = G1 - G2;
//
//     count_diff_fraction = floor( count_diff * change_percent );
//
//     G3 = G1 - count_diff_fraction;
// }
// else {
//
//     count_diff = G2 - G1;
//
//     count_diff_fraction = floor( count_diff * change_percent );
//
//     G3 = G1 + count_diff_fraction;
// }
//
// // Black
// if ( B1 > B2 ){
//
//     count_diff = B1 - B2;
//
//     count_diff_fraction = floor( count_diff * change_percent );
//
//     B3 = B1 - count_diff_fraction;
// }
// else {
//
//     count_diff = B2 - B1;
//
//     count_diff_fraction = floor( count_diff * change_percent );
//
//     B3 = B1 + count_diff_fraction;
// }
//
// return make_colour_rgb(R3,G3,B3);
//
function gml_Script_scr_color_transition(_inst, _other, argument0, argument1, argument2, argument3, argument4, argument5, argument6) {
    _inst.gmlR1 = argument0;
    _inst.gmlG1 = argument1;
    _inst.gmlB1 = argument2;
    _inst.gmlR2 = argument3;
    _inst.gmlG2 = argument4;
    _inst.gmlB2 = argument5;
    _inst.gmlchange_percent = argument6;
    if ((_inst.gmlR1 > _inst.gmlR2)) {
        {
            _inst.gmlcount_diff = (_inst.gmlR1 - _inst.gmlR2);
            _inst.gmlcount_diff_fraction = floor((_inst.gmlcount_diff * _inst.gmlchange_percent));
            _inst.gmlR3 = (_inst.gmlR1 - _inst.gmlcount_diff_fraction);
        };
    } else {
        {
            _inst.gmlcount_diff = (_inst.gmlR2 - _inst.gmlR1);
            _inst.gmlcount_diff_fraction = floor((_inst.gmlcount_diff * _inst.gmlchange_percent));
            _inst.gmlR3 = (_inst.gmlR1 + _inst.gmlcount_diff_fraction);
        };
    };
    if ((_inst.gmlG1 > _inst.gmlG2)) {
        {
            _inst.gmlcount_diff = (_inst.gmlG1 - _inst.gmlG2);
            _inst.gmlcount_diff_fraction = floor((_inst.gmlcount_diff * _inst.gmlchange_percent));
            _inst.gmlG3 = (_inst.gmlG1 - _inst.gmlcount_diff_fraction);
        };
    } else {
        {
            _inst.gmlcount_diff = (_inst.gmlG2 - _inst.gmlG1);
            _inst.gmlcount_diff_fraction = floor((_inst.gmlcount_diff * _inst.gmlchange_percent));
            _inst.gmlG3 = (_inst.gmlG1 + _inst.gmlcount_diff_fraction);
        };
    };
    if ((_inst.gmlB1 > _inst.gmlB2)) {
        {
            _inst.gmlcount_diff = (_inst.gmlB1 - _inst.gmlB2);
            _inst.gmlcount_diff_fraction = floor((_inst.gmlcount_diff * _inst.gmlchange_percent));
            _inst.gmlB3 = (_inst.gmlB1 - _inst.gmlcount_diff_fraction);
        };
    } else {
        {
            _inst.gmlcount_diff = (_inst.gmlB2 - _inst.gmlB1);
            _inst.gmlcount_diff_fraction = floor((_inst.gmlcount_diff * _inst.gmlchange_percent));
            _inst.gmlB3 = (_inst.gmlB1 + _inst.gmlcount_diff_fraction);
        };
    };
    return make_colour_rgb(_inst.gmlR3, _inst.gmlG3, _inst.gmlB3);
}

// #####################################################################################################
// /// scr_world_color()
//
//     floor_color_h = 255 * ( irandom_range(1,360) / 360 );
//     floor_color_s = 255;
//     floor_color_y = 255;
//
//     scr_hsv_to_rgb(floor_color_h,floor_color_s,floor_color_y); // bgcolor // return: cRed, cGreen, cBlue
//
//     floor_color_r = cRed;
//     floor_color_g = cGreen;
//     floor_color_b = cBlue;
//
//
//     // Background
//     scr_color_background(1);
//
//
//     // Terrain Normal
//
//     tn_color_h = floor_color_h;
//     tn_color_s = 255 * 0.50;
//     tn_color_v = 255 * 0.20;
//
//     tn_color = make_colour_hsv(tn_color_h,tn_color_s,tn_color_v);
//
//
//     // Terrain Bright
//
//     tb_color_h = floor_color_h;
//     tb_color_s = 255 * 0.50;
//     tb_color_v = 255 * 0.25;
//
//     tb_color = make_colour_hsv(tb_color_h,tb_color_s,tb_color_v);
//
//
//     // Dark Bottom
//
//     bot_color_h = bg_color_h;
//     bot_color_s = 255 * 0.20;
//     bot_color_v = 255 * 0.13;
//
//     scr_hsv_to_rgb(bot_color_h,bot_color_s,bot_color_v); // bgcolor // return: cRed, cGreen, cBlue
//
//     bot_color_r = cRed;
//     bot_color_g = cGreen;
//     bot_color_b = cBlue;
//
//     bot_color = make_colour_rgb(bot_color_r,bot_color_g,bot_color_b);
//
//
//     // Ground Color
//
//     ground_color_h = floor_color_h + 10; if ( ground_color_h > 255 ){ ground_color_h = floor_color_h - 20; }
//     ground_color_s = floor_color_s;
//     ground_color_y = 130;
//
//     ground_color = make_colour_hsv(ground_color_h,ground_color_s,ground_color_y);
//
//
//     /// Stars
//
//     var star_color_h = bg_color_h;
//     var star_color_s = 255 * 0.20;
//     var star_color_v = 255 * 0.4;
//
//     star_color = make_colour_hsv(star_color_h,star_color_s,star_color_v);
//
//
function gml_Script_scr_color_world(_inst, _other) {
    _inst.gmlfloor_color_h = (255 * (irandom_range(1, 360) / 360));
    _inst.gmlfloor_color_s = 255;
    _inst.gmlfloor_color_y = 255;
    gml_Script_scr_hsv_to_rgb(_inst, _other, _inst.gmlfloor_color_h, _inst.gmlfloor_color_s, _inst.gmlfloor_color_y);
    _inst.gmlfloor_color_r = _inst.gmlcRed;
    _inst.gmlfloor_color_g = _inst.gmlcGreen;
    _inst.gmlfloor_color_b = _inst.gmlcBlue;
    gml_Script_scr_color_background(_inst, _other, 1);
    _inst.gmltn_color_h = _inst.gmlfloor_color_h;
    _inst.gmltn_color_s = 127.5;
    _inst.gmltn_color_v = 51;
    _inst.gmltn_color = make_colour_hsv(_inst.gmltn_color_h, _inst.gmltn_color_s, _inst.gmltn_color_v);
    _inst.gmltb_color_h = _inst.gmlfloor_color_h;
    _inst.gmltb_color_s = 127.5;
    _inst.gmltb_color_v = 63.75;
    _inst.gmltb_color = make_colour_hsv(_inst.gmltb_color_h, _inst.gmltb_color_s, _inst.gmltb_color_v);
    _inst.gmlbot_color_h = _inst.gmlbg_color_h;
    _inst.gmlbot_color_s = 51;
    _inst.gmlbot_color_v = 33.15;
    gml_Script_scr_hsv_to_rgb(_inst, _other, _inst.gmlbot_color_h, _inst.gmlbot_color_s, _inst.gmlbot_color_v);
    _inst.gmlbot_color_r = _inst.gmlcRed;
    _inst.gmlbot_color_g = _inst.gmlcGreen;
    _inst.gmlbot_color_b = _inst.gmlcBlue;
    _inst.gmlbot_color = make_colour_rgb(_inst.gmlbot_color_r, _inst.gmlbot_color_g, _inst.gmlbot_color_b);
    _inst.gmlground_color_h = (_inst.gmlfloor_color_h + 10);
    if ((_inst.gmlground_color_h > 255)) {
        {
            _inst.gmlground_color_h = (_inst.gmlfloor_color_h - 20);
        };
    };
    _inst.gmlground_color_s = _inst.gmlfloor_color_s;
    _inst.gmlground_color_y = 130;
    _inst.gmlground_color = make_colour_hsv(_inst.gmlground_color_h, _inst.gmlground_color_s, _inst.gmlground_color_y);
    var gmlstar_color_h = _inst.gmlbg_color_h;
    var gmlstar_color_s = 51;
    var gmlstar_color_v = 102;
    _inst.gmlstar_color = make_colour_hsv(gmlstar_color_h, gmlstar_color_s, gmlstar_color_v);
}

// #####################################################################################################
// /// scr_debug_print(print_string);
//
// print_string = argument0;
//
// // show_debug_message(string(print_string))
//
//
function gml_Script_scr_debug_print(_inst, _other, argument0) {
    _inst.gmlprint_string = argument0;
}

// #####################################################################################################
// /// scr_dialog_load();
//
//     var lang_title = "en";
//
//     if ( global.game_lang == 0 ){ lang_title = "en"; }
//     else if ( global.game_lang == 1 ){ lang_title = "es"; }
//
//     // Dialog JSON
//
//         var i, file_dialog;
//
//         dialog_string = "";
//
//         file_dialog = file_text_open_read( working_directory + "dialog.json" );
//
//         while ( !file_text_eof(file_dialog) ){
//
//            dialog_string = dialog_string + file_text_read_string(file_dialog);
//
//            file_text_readln(file_dialog);
//         }
//
//         file_text_close(file_dialog);
//
//
//     // Dialog Load
//
//         jlist = json_decode(dialog_string);
//
//         // Check Multilanguage Support
//
//             multi_lang_support = real(ds_map_find_value(jlist,"multi_lang_support"));
//
//             if ( global.famobi_active ){ multi_lang_support = false; } // famobi
//
//             if ( multi_lang_support == 0 ){ lang_title = "en"; }
//
//
//         // for an array, this returns the ID to a list which contaoins each array element
//         arrayList = ds_map_find_value(jlist,lang_title);
//
//         for( i=0; i<ds_list_size(arrayList); i+=1; ){
//
//             // arrayItem[i] is the index to another map which contains the data for each element
//             arrayItem[i] = ds_list_find_value(arrayList,i);
//
//             lang_text_menu_main[0] = ds_map_find_value(arrayItem[i],"lang_text_menu_main_0");
//             lang_text_menu_main[1] = ds_map_find_value(arrayItem[i],"lang_text_menu_main_1");
//             lang_text_menu_main[2] = ds_map_find_value(arrayItem[i],"lang_text_menu_main_2");
//             lang_text_menu_main[3] = ds_map_find_value(arrayItem[i],"lang_text_menu_main_3");
//
//             lang_text_options[0] = ds_map_find_value(arrayItem[i],"lang_text_options_0");
//             lang_text_options[1] = ds_map_find_value(arrayItem[i],"lang_text_options_1");
//             lang_text_options[2] = ds_map_find_value(arrayItem[i],"lang_text_options_2");
//             lang_text_options[3] = ds_map_find_value(arrayItem[i],"lang_text_options_3");
//             lang_text_options[4] = ds_map_find_value(arrayItem[i],"lang_text_options_4");
//             lang_text_options[5] = ds_map_find_value(arrayItem[i],"lang_text_options_5");
//             lang_text_options[6] = ds_map_find_value(arrayItem[i],"lang_text_options_6");
//
//             lang_text_modes[0] = ds_map_find_value(arrayItem[i],"lang_text_modes_0");
//             lang_text_modes[1] = ds_map_find_value(arrayItem[i],"lang_text_modes_1");
//             lang_text_modes[2] = ds_map_find_value(arrayItem[i],"lang_text_modes_2");
//             lang_text_modes[3] = ds_map_find_value(arrayItem[i],"lang_text_modes_3");
//             lang_text_modes[4] = ds_map_find_value(arrayItem[i],"lang_text_modes_4");
//             lang_text_modes[5] = ds_map_find_value(arrayItem[i],"lang_text_modes_5");
//             lang_text_modes[6] = ds_map_find_value(arrayItem[i],"lang_text_modes_6");
//             lang_text_modes[7] = ds_map_find_value(arrayItem[i],"lang_text_modes_7");
//             lang_text_modes[8] = ds_map_find_value(arrayItem[i],"lang_text_modes_8");
//             lang_text_modes[9] = ds_map_find_value(arrayItem[i],"lang_text_modes_9");
//             lang_text_modes[10] = ds_map_find_value(arrayItem[i],"lang_text_modes_10");
//             lang_text_modes[11] = ds_map_find_value(arrayItem[i],"lang_text_modes_11");
//             lang_text_modes[12] = ds_map_find_value(arrayItem[i],"lang_text_modes_12");
//             lang_text_modes[13] = ds_map_find_value(arrayItem[i],"lang_text_modes_13");
//             lang_text_modes[14] = ds_map_find_value(arrayItem[i],"lang_text_modes_14");
//             lang_text_modes[15] = ds_map_find_value(arrayItem[i],"lang_text_modes_15");
//             lang_text_modes[16] = ds_map_find_value(arrayItem[i],"lang_text_modes_16");
//
//             lang_text_progress[0] = ds_map_find_value(arrayItem[i],"lang_text_progress_0");
//             lang_text_progress[1] = ds_map_find_value(arrayItem[i],"lang_text_progress_1");
//             lang_text_progress[2] = ds_map_find_value(arrayItem[i],"lang_text_progress_2");
//             lang_text_progress[3] = ds_map_find_value(arrayItem[i],"lang_text_progress_3");
//             lang_text_progress[4] = ds_map_find_value(arrayItem[i],"lang_text_progress_4");
//             lang_text_progress[5] = ds_map_find_value(arrayItem[i],"lang_text_progress_5");
//             lang_text_progress[6] = ds_map_find_value(arrayItem[i],"lang_text_progress_6");
//             lang_text_progress[7] = ds_map_find_value(arrayItem[i],"lang_text_progress_7");
//
//             lang_text_reset[0] = ds_map_find_value(arrayItem[i],"lang_text_reset_0");
//             lang_text_reset[1] = ds_map_find_value(arrayItem[i],"lang_text_reset_1");
//             lang_text_reset[2] = ds_map_find_value(arrayItem[i],"lang_text_reset_2");
//             lang_text_reset[3] = ds_map_find_value(arrayItem[i],"lang_text_reset_3");
//             lang_text_reset[4] = ds_map_find_value(arrayItem[i],"lang_text_reset_4");
//             lang_text_reset[5] = ds_map_find_value(arrayItem[i],"lang_text_reset_5");
//             lang_text_reset[6] = ds_map_find_value(arrayItem[i],"lang_text_reset_6");
//             lang_text_reset[7] = ds_map_find_value(arrayItem[i],"lang_text_reset_7");
//             lang_text_reset[8] = ds_map_find_value(arrayItem[i],"lang_text_reset_8");
//
//             lang_text_side[0] = ds_map_find_value(arrayItem[i],"lang_text_side_0");
//             lang_text_side[1] = ds_map_find_value(arrayItem[i],"lang_text_side_1");
//             lang_text_side[2] = ds_map_find_value(arrayItem[i],"lang_text_side_2");
//             lang_text_side[3] = ds_map_find_value(arrayItem[i],"lang_text_side_3");
//             lang_text_side[4] = ds_map_find_value(arrayItem[i],"lang_text_side_4");
//             lang_text_side[5] = ds_map_find_value(arrayItem[i],"lang_text_side_5");
//             lang_text_side[6] = ds_map_find_value(arrayItem[i],"lang_text_side_6");
//             lang_text_side[7] = ds_map_find_value(arrayItem[i],"lang_text_side_7");
//
//             lang_text_gover[0] = ds_map_find_value(arrayItem[i],"lang_text_gover_0");
//             lang_text_gover[1] = ds_map_find_value(arrayItem[i],"lang_text_gover_1");
//             lang_text_gover[2] = ds_map_find_value(arrayItem[i],"lang_text_gover_2");
//             lang_text_gover[3] = ds_map_find_value(arrayItem[i],"lang_text_gover_3");
//             lang_text_gover[4] = ds_map_find_value(arrayItem[i],"lang_text_gover_4");
//             lang_text_gover[5] = ds_map_find_value(arrayItem[i],"lang_text_gover_5");
//             lang_text_gover[6] = ds_map_find_value(arrayItem[i],"lang_text_gover_6");
//             lang_text_gover[7] = ds_map_find_value(arrayItem[i],"lang_text_gover_7");
//             lang_text_gover[8] = ds_map_find_value(arrayItem[i],"lang_text_gover_8");
//             lang_text_gover[9] = ds_map_find_value(arrayItem[i],"lang_text_gover_9");
//
//             lang_text_course[0] = ds_map_find_value(arrayItem[i],"lang_text_course_0");
//             lang_text_course[1] = ds_map_find_value(arrayItem[i],"lang_text_course_1");
//
//             lang_text_tutorial[0] = ds_map_find_value(arrayItem[i],"lang_text_tutorial_0");
//             lang_text_tutorial[1] = ds_map_find_value(arrayItem[i],"lang_text_tutorial_1");
//             lang_text_tutorial[2] = ds_map_find_value(arrayItem[i],"lang_text_tutorial_2");
//             lang_text_tutorial[3] = ds_map_find_value(arrayItem[i],"lang_text_tutorial_3");
//             lang_text_tutorial[4] = ds_map_find_value(arrayItem[i],"lang_text_tutorial_4");
//
//             lang_text_credits[0] = ds_map_find_value(arrayItem[i],"lang_text_credits_0");
//             lang_text_credits[1] = ds_map_find_value(arrayItem[i],"lang_text_credits_1");
//             lang_text_credits[2] = ds_map_find_value(arrayItem[i],"lang_text_credits_2");
//             lang_text_credits[3] = ds_map_find_value(arrayItem[i],"lang_text_credits_3");
//             lang_text_credits[4] = ds_map_find_value(arrayItem[i],"lang_text_credits_4");
//         }
//
//
// /*
// {
//     "en":
//     [
//         {
//
//             "_Main_Screen_" : "---------",
//             "lang_text_menu_main_0" : "PLAY GAME",
//             "lang_text_menu_main_1" : "OPTIONS",
//             "lang_text_menu_main_2" : "EXIT",
//             "lang_text_menu_main_3" : "CREDITS",
//
//             "_Options_" : "---------",
//             "lang_text_options_0" : "MUSIC",
//             "lang_text_options_1" : "SOUND",
//             "lang_text_options_2" : "LANGUAGE",
//             "lang_text_options_3" : "ENGLISH",
//             "lang_text_options_4" : "ESPANOL",
//             "lang_text_options_5" : "OPTIONS",
//
//             "_Game Modes_" : "---------",
//             "lang_text_modes_0" : "GAME MODES",
//             "lang_text_modes_1" : "NEON COURSES",
//             "lang_text_modes_2" : "HOLE-IN-ONE",
//             "lang_text_modes_3" : "JUST IN TIME",
//             "lang_text_modes_4" : "DONT RUN OUT",
//             "lang_text_modes_5" : "PRACTICE",
//             "lang_text_modes_6" : "SELECT A COURSE",
//             "lang_text_modes_7" : "START",
//             "lang_text_modes_8" : "CONTINUE",
//             "lang_text_modes_9" : "RESET",
//             "lang_text_modes_10" : "ONE SHOT PER LEVEL.#HOW MANY LEVELS#CAN YOU CLEAR?",
//             "lang_text_modes_11" : "TIME IS RUNNING OUT.#CLEAR AS MANY LEVELS#AS YOU CAN.",
//             "lang_text_modes_12" : "BALLS ARE LIMITED. HOW FAR#CAN YOU GO?",
//             "lang_text_modes_13" : "THERE ARE NO RULES.#YOU CAN PRACTICE ALL#YOUR SHOTS.",
//
//             "_Progress_" : "---------",
//             "lang_text_progress_0" : "PROGRESS",
//             "lang_text_progress_1" : " of ",
//             "lang_text_progress_2" : "HITS:",
//             "lang_text_progress_3" : "BEST:",
//             "lang_text_progress_4" : "COMPLETE ",
//             "lang_text_progress_5" : " HOLES#IN THE LEAST#AMOUNT OF HITS",
//             "lang_text_progress_6" : "BEST SCORE: ",
//             "lang_text_progress_7" : " holes",
//
//             "_Reset_Window_" : "---------",
//             "lang_text_reset_0" : "LEVEL ",
//             "lang_text_reset_1" : "NO SCORE",
//             "lang_text_reset_2" : "SCORE:",
//             "lang_text_reset_3" : "WARNING: ALL CHECKPOINTS AFTER#THE SELECTED ONE WILL BE DELETED",
//             "lang_text_reset_4" : "THIS WILL RESET YOUR#PROGRESS AND SCORE TO CERO##ARE YOU SURE?",
//             "lang_text_reset_5" : "GO BACK",
//             "lang_text_reset_6" : "RESET",
//             "lang_text_reset_7" : "SELECT A CHECKPOINT#TO RESET YOUR GAME",
//             "lang_text_reset_8" : "GO BACK",
//
//             "_Side_Menu_" : "---------",
//             "lang_text_side_0" : "COURSE ",
//             "lang_text_side_1" : "HOLE:",
//             "lang_text_side_2" : "HITS:",
//             "lang_text_side_3" : "BEST:",
//             "lang_text_side_4" : "BEST SCORE:",
//             "lang_text_side_5" : "MAIN MENU",
//             "lang_text_side_6" : "RESUME",
//
//             "_Game_Over_" : "---------",
//             "lang_text_gover_0" : "COURSE COMPLETE",
//             "lang_text_gover_1" : "Neon Course ",
//             "lang_text_gover_2" : "New Record!:",
//             "lang_text_gover_3" : "Score:",
//             "lang_text_gover_4" : "Best Score:",
//             "lang_text_gover_5" : "GAME OVER",
//             "lang_text_gover_6" : "Hole in One",
//             "lang_text_gover_7" : "Top Score:",
//             "lang_text_gover_8" : "Just in Time",
//             "lang_text_gover_9" : "Don't Run Out",
//
//             "_Course_" : "---------",
//             "lang_text_course_0" : " BALLS",
//             "lang_text_course_1" : " seconds",
//
//             "_Tutorial_" : "---------",
//             "lang_text_tutorial_0" : "Click",
//             "lang_text_tutorial_1" : "Tap",
//             "lang_text_tutorial_2" : "To Hit the Ball#You can ",
//             "lang_text_tutorial_3" : " Anywhere.#Drag and Release",
//
//         }
//     ],
//     "es":
//     [
//         {
//
//             "_Main_Screen_" : "---------",
//             "lang_text_menu_main_0" : "JUGAR",
//             "lang_text_menu_main_1" : "OPCIONES",
//             "lang_text_menu_main_2" : "SALIR",
//             "lang_text_menu_main_3" : "CREDITOS",
//
//             "_Options_" : "---------",
//             "lang_text_options_0" : "MUSICA",
//             "lang_text_options_1" : "SONIDO",
//             "lang_text_options_2" : "LENGUAJE",
//             "lang_text_options_3" : "ENGLISH",
//             "lang_text_options_4" : "ESPANOL",
//             "lang_text_options_5" : "OPCIONES",
//
//             "_Game Modes_" : "---------",
//             "lang_text_modes_0" : "MODOS DE JUEGO",
//             "lang_text_modes_1" : "CAMPOS NEON",
//             "lang_text_modes_2" : "HOYO-EN-UNO",
//             "lang_text_modes_3" : "JUSTO A TIEMPO",
//             "lang_text_modes_4" : "BOLA PERDIDA",
//             "lang_text_modes_5" : "PRACTICA",
//             "lang_text_modes_6" : "SELECCIONE UN CAMPO",
//             "lang_text_modes_7" : "COMENZAR",
//             "lang_text_modes_8" : "CONTINUAR",
//             "lang_text_modes_9" : "REINICIAR",
//             "lang_text_modes_10" : "UN TIRO POR NIVEL.#CUANTOS NIVELES#PUEDES COMPLETAR?",
//             "lang_text_modes_11" : "EL TIEMPO SE TERMINA.#COMPLETA TANTOS NIVELES#COMO PUEDAS.",
//             "lang_text_modes_12" : "BOLAS LIMITADAS. CUAN#LEJOS PUEDES LLEGAR?",
//             "lang_text_modes_13" : "NO HAY REGLAS.#PUEDES PRATICAR#TODOS TUS TIROS.",
//
//             "_Progress_" : "---------",
//             "lang_text_progress_0" : "PROGRESO",
//             "lang_text_progress_1" : " de ",
//             "lang_text_progress_2" : "TIROS:",
//             "lang_text_progress_3" : "MEJOR:",
//             "lang_text_progress_4" : "COMPLETAR ",
//             "lang_text_progress_5" : " HOYOS#EN LA MENOR#CANTIDAD DE TIROS",
//             "lang_text_progress_6" : "MEJOR PUNTUACION: ",
//             "lang_text_progress_7" : " hoyos",
//
//             "_Reset_Window_" : "---------",
//             "lang_text_reset_0" : "NIVEL ",
//             "lang_text_reset_1" : "SIN TIROS",
//             "lang_text_reset_2" : "TIROS:",
//             "lang_text_reset_3" : "AVISO: TODOS LOS MARCADORES LUEGO#DEL SELECCIONADO SERAN BORRADOS",
//             "lang_text_reset_4" : "ESTA ACCION BORRARA TODO#SU PROGRESO Y PUNTUACIONES#DESEA CONTINUAR?",
//             "lang_text_reset_5" : "ATRAS",
//             "lang_text_reset_6" : "REINICIAR",
//             "lang_text_reset_7" : "SELECCIONE UN MARCADOR#PARA REINICIAR SU JUEGO",
//             "lang_text_reset_8" : "ATRAS",
//
//             "_Side_Menu_" : "---------",
//             "lang_text_side_0" : "CAMPO ",
//             "lang_text_side_1" : "HOYO:",
//             "lang_text_side_2" : "TIROS:",
//             "lang_text_side_3" : "MEJOR:",
//             "lang_text_side_4" : "MEJOR:",
//             "lang_text_side_5" : "MENU PRINCIPAL",
//             "lang_text_side_6" : "CONTINUAR",
//
//             "_Game_Over_" : "---------",
//             "lang_text_gover_0" : "CAMPO COMPLETADO",
//             "lang_text_gover_1" : "Campos Neon ",
//             "lang_text_gover_2" : "Nuevo Record!:",
//             "lang_text_gover_3" : "Puntos:",
//             "lang_text_gover_4" : "Mejor Puntuacion:",
//             "lang_text_gover_5" : "FIN DEL JUEGO",
//             "lang_text_gover_6" : "Hoyo en Uno",
//             "lang_text_gover_7" : "Mejor Puntuacion:",
//             "lang_text_gover_8" : "Justo a Tiempo",
//             "lang_text_gover_9" : "Bola Perdida",
//
//             "_Course_" : "---------",
//             "lang_text_course_0" : " BOLAS",
//             "lang_text_course_1" : " segundos",
//
//             "_Tutorial_" : "---------",
//             "lang_text_tutorial_0" : "Haz un Click",
//             "lang_text_tutorial_1" : "Toca la Pantalla",
//             "lang_text_tutorial_2" : "Para mover la Bola,#",
//             "lang_text_tutorial_3" : " en cualquier sitio.#Hala y Suelta",
//
//         }
//     ]
// }
// */
//
//
//
//
function gml_Script_scr_dialog_load(_inst, _other) {
    var gmllang_title = "en";
    if ((global.gmlgame_lang == 0)) {
        {
            gmllang_title = "en";
        };
    } else {
        if ((global.gmlgame_lang == 1)) {
            {
                gmllang_title = "es";
            };
        };
    };
    var gmli, gmlfile_dialog;
    _inst.gmldialog_string = "";
    gmlfile_dialog = file_text_open_read((g_pBuiltIn.working_directory + "dialog.json"));
    while (!(file_text_eof(gmlfile_dialog) > 0.5)) {
        {
            _inst.gmldialog_string = (_inst.gmldialog_string + file_text_read_string(gmlfile_dialog));
            file_text_readln(gmlfile_dialog);
        }
    };
    file_text_close(gmlfile_dialog);
    _inst.gmljlist = json_decode(_inst.gmldialog_string);
    _inst.gmlmulti_lang_support = real(ds_map_find_value(_inst.gmljlist, "multi_lang_support"));
    if (global.gmlfamobi_active > 0.5) {
        {
            _inst.gmlmulti_lang_support = 0 ? 1 : 0;
        };
    };
    if ((_inst.gmlmulti_lang_support == 0)) {
        {
            gmllang_title = "en";
        };
    };
    _inst.gmlarrayList = ds_map_find_value(_inst.gmljlist, gmllang_title);
    for (gmli = 0;
        (gmli < ds_list_size(_inst.gmlarrayList)); gmli += 1) {
        {
            if (!(_inst.gmlarrayItem instanceof Array)) {
                _inst.gmlarrayItem = [];
                _inst.gmlarrayItem.__yy_owner = 3676105514;
            } else if (_inst.gmlarrayItem.__yy_owner !== 3676105514) {
                _inst.gmlarrayItem = _inst.gmlarrayItem.slice(0);
                _inst.gmlarrayItem.__yy_owner = 3676105514;
            }
            _inst.gmlarrayItem[gmli] = ds_list_find_value(_inst.gmlarrayList, gmli);
            if (!(_inst.gmllang_text_menu_main instanceof Array)) {
                _inst.gmllang_text_menu_main = [];
                _inst.gmllang_text_menu_main.__yy_owner = 3170742241;
            } else if (_inst.gmllang_text_menu_main.__yy_owner !== 3170742241) {
                _inst.gmllang_text_menu_main = _inst.gmllang_text_menu_main.slice(0);
                _inst.gmllang_text_menu_main.__yy_owner = 3170742241;
            }
            _inst.gmllang_text_menu_main[0] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_menu_main_0");
            _inst.gmllang_text_menu_main[1] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_menu_main_1");
            _inst.gmllang_text_menu_main[2] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_menu_main_2");
            _inst.gmllang_text_menu_main[3] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_menu_main_3");
            if (!(_inst.gmllang_text_options instanceof Array)) {
                _inst.gmllang_text_options = [];
                _inst.gmllang_text_options.__yy_owner = 2301361831;
            } else if (_inst.gmllang_text_options.__yy_owner !== 2301361831) {
                _inst.gmllang_text_options = _inst.gmllang_text_options.slice(0);
                _inst.gmllang_text_options.__yy_owner = 2301361831;
            }
            _inst.gmllang_text_options[0] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_options_0");
            _inst.gmllang_text_options[1] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_options_1");
            _inst.gmllang_text_options[2] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_options_2");
            _inst.gmllang_text_options[3] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_options_3");
            _inst.gmllang_text_options[4] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_options_4");
            _inst.gmllang_text_options[5] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_options_5");
            _inst.gmllang_text_options[6] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_options_6");
            if (!(_inst.gmllang_text_modes instanceof Array)) {
                _inst.gmllang_text_modes = [];
                _inst.gmllang_text_modes.__yy_owner = 2094744668;
            } else if (_inst.gmllang_text_modes.__yy_owner !== 2094744668) {
                _inst.gmllang_text_modes = _inst.gmllang_text_modes.slice(0);
                _inst.gmllang_text_modes.__yy_owner = 2094744668;
            }
            _inst.gmllang_text_modes[0] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_modes_0");
            _inst.gmllang_text_modes[1] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_modes_1");
            _inst.gmllang_text_modes[2] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_modes_2");
            _inst.gmllang_text_modes[3] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_modes_3");
            _inst.gmllang_text_modes[4] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_modes_4");
            _inst.gmllang_text_modes[5] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_modes_5");
            _inst.gmllang_text_modes[6] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_modes_6");
            _inst.gmllang_text_modes[7] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_modes_7");
            _inst.gmllang_text_modes[8] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_modes_8");
            _inst.gmllang_text_modes[9] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_modes_9");
            _inst.gmllang_text_modes[10] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_modes_10");
            _inst.gmllang_text_modes[11] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_modes_11");
            _inst.gmllang_text_modes[12] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_modes_12");
            _inst.gmllang_text_modes[13] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_modes_13");
            _inst.gmllang_text_modes[14] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_modes_14");
            _inst.gmllang_text_modes[15] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_modes_15");
            _inst.gmllang_text_modes[16] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_modes_16");
            if (!(_inst.gmllang_text_progress instanceof Array)) {
                _inst.gmllang_text_progress = [];
                _inst.gmllang_text_progress.__yy_owner = 3637012058;
            } else if (_inst.gmllang_text_progress.__yy_owner !== 3637012058) {
                _inst.gmllang_text_progress = _inst.gmllang_text_progress.slice(0);
                _inst.gmllang_text_progress.__yy_owner = 3637012058;
            }
            _inst.gmllang_text_progress[0] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_progress_0");
            _inst.gmllang_text_progress[1] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_progress_1");
            _inst.gmllang_text_progress[2] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_progress_2");
            _inst.gmllang_text_progress[3] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_progress_3");
            _inst.gmllang_text_progress[4] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_progress_4");
            _inst.gmllang_text_progress[5] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_progress_5");
            _inst.gmllang_text_progress[6] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_progress_6");
            _inst.gmllang_text_progress[7] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_progress_7");
            if (!(_inst.gmllang_text_reset instanceof Array)) {
                _inst.gmllang_text_reset = [];
                _inst.gmllang_text_reset.__yy_owner = 1781278229;
            } else if (_inst.gmllang_text_reset.__yy_owner !== 1781278229) {
                _inst.gmllang_text_reset = _inst.gmllang_text_reset.slice(0);
                _inst.gmllang_text_reset.__yy_owner = 1781278229;
            }
            _inst.gmllang_text_reset[0] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_reset_0");
            _inst.gmllang_text_reset[1] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_reset_1");
            _inst.gmllang_text_reset[2] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_reset_2");
            _inst.gmllang_text_reset[3] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_reset_3");
            _inst.gmllang_text_reset[4] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_reset_4");
            _inst.gmllang_text_reset[5] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_reset_5");
            _inst.gmllang_text_reset[6] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_reset_6");
            _inst.gmllang_text_reset[7] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_reset_7");
            _inst.gmllang_text_reset[8] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_reset_8");
            if (!(_inst.gmllang_text_side instanceof Array)) {
                _inst.gmllang_text_side = [];
                _inst.gmllang_text_side.__yy_owner = 2034702195;
            } else if (_inst.gmllang_text_side.__yy_owner !== 2034702195) {
                _inst.gmllang_text_side = _inst.gmllang_text_side.slice(0);
                _inst.gmllang_text_side.__yy_owner = 2034702195;
            }
            _inst.gmllang_text_side[0] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_side_0");
            _inst.gmllang_text_side[1] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_side_1");
            _inst.gmllang_text_side[2] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_side_2");
            _inst.gmllang_text_side[3] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_side_3");
            _inst.gmllang_text_side[4] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_side_4");
            _inst.gmllang_text_side[5] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_side_5");
            _inst.gmllang_text_side[6] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_side_6");
            _inst.gmllang_text_side[7] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_side_7");
            if (!(_inst.gmllang_text_gover instanceof Array)) {
                _inst.gmllang_text_gover = [];
                _inst.gmllang_text_gover.__yy_owner = 1023166020;
            } else if (_inst.gmllang_text_gover.__yy_owner !== 1023166020) {
                _inst.gmllang_text_gover = _inst.gmllang_text_gover.slice(0);
                _inst.gmllang_text_gover.__yy_owner = 1023166020;
            }
            _inst.gmllang_text_gover[0] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_gover_0");
            _inst.gmllang_text_gover[1] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_gover_1");
            _inst.gmllang_text_gover[2] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_gover_2");
            _inst.gmllang_text_gover[3] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_gover_3");
            _inst.gmllang_text_gover[4] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_gover_4");
            _inst.gmllang_text_gover[5] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_gover_5");
            _inst.gmllang_text_gover[6] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_gover_6");
            _inst.gmllang_text_gover[7] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_gover_7");
            _inst.gmllang_text_gover[8] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_gover_8");
            _inst.gmllang_text_gover[9] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_gover_9");
            if (!(_inst.gmllang_text_course instanceof Array)) {
                _inst.gmllang_text_course = [];
                _inst.gmllang_text_course.__yy_owner = 952542304;
            } else if (_inst.gmllang_text_course.__yy_owner !== 952542304) {
                _inst.gmllang_text_course = _inst.gmllang_text_course.slice(0);
                _inst.gmllang_text_course.__yy_owner = 952542304;
            }
            _inst.gmllang_text_course[0] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_course_0");
            _inst.gmllang_text_course[1] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_course_1");
            if (!(_inst.gmllang_text_tutorial instanceof Array)) {
                _inst.gmllang_text_tutorial = [];
                _inst.gmllang_text_tutorial.__yy_owner = 1205983466;
            } else if (_inst.gmllang_text_tutorial.__yy_owner !== 1205983466) {
                _inst.gmllang_text_tutorial = _inst.gmllang_text_tutorial.slice(0);
                _inst.gmllang_text_tutorial.__yy_owner = 1205983466;
            }
            _inst.gmllang_text_tutorial[0] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_tutorial_0");
            _inst.gmllang_text_tutorial[1] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_tutorial_1");
            _inst.gmllang_text_tutorial[2] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_tutorial_2");
            _inst.gmllang_text_tutorial[3] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_tutorial_3");
            _inst.gmllang_text_tutorial[4] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_tutorial_4");
            if (!(_inst.gmllang_text_credits instanceof Array)) {
                _inst.gmllang_text_credits = [];
                _inst.gmllang_text_credits.__yy_owner = 4117846772;
            } else if (_inst.gmllang_text_credits.__yy_owner !== 4117846772) {
                _inst.gmllang_text_credits = _inst.gmllang_text_credits.slice(0);
                _inst.gmllang_text_credits.__yy_owner = 4117846772;
            }
            _inst.gmllang_text_credits[0] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_credits_0");
            _inst.gmllang_text_credits[1] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_credits_1");
            _inst.gmllang_text_credits[2] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_credits_2");
            _inst.gmllang_text_credits[3] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_credits_3");
            _inst.gmllang_text_credits[4] = ds_map_find_value(_inst.gmlarrayItem[gmli], "lang_text_credits_4");
        }
    };
}

// #####################################################################################################
// /// scr_draw_hole_arrow()
//
//     var hole_ratio = world_grid_ratio;
//
//     var tri_x1 = ( 128 / 2 );
//     var tri_y1 = ( 120 );
//
//     var tri_x2 = floor( tri_x1 - ( 5 * hole_ratio ));
//     var tri_y2 = floor( tri_y1 - ( 5 * hole_ratio ));
//
//     var tri_x3 = floor( tri_x1 + ( 5 * hole_ratio ));
//     var tri_y3 = floor( tri_y1 - ( 5 * hole_ratio ));
//
//     if ( global.platform_config != 1 ){ texture_set_interpolation(false); }
//
//         draw_triangle_colour(tri_x1,tri_y1,tri_x2,tri_y2,tri_x3,tri_y3,force_meter_color_on,force_meter_color_on,force_meter_color_on,false);
//
//         // draw_set_font(font_beyond_num);
//
//         draw_set_font(font_score_1);
//         if ( world_grid_ratio > 1 ){ draw_set_font(font_score_2); }
//         if ( world_grid_ratio > 2 ){ draw_set_font(font_score_3); }
//
//         draw_set_valign(fa_bottom);
//         draw_set_halign(fa_center);
//         draw_set_color(c_white);
//
//         if ( global.game_mode == 1 ){
//         // The 300
//
//             draw_set_color(force_meter_color_on);
//
//             draw_text(tri_x1,tri_y3-(2*hole_ratio),string(hole_number)); // hole_ratio,hole_ratio
//         }
//         else if (( global.game_mode == 2 ) or ( global.game_mode == 3 ) or ( global.game_mode == 4 )){
//         // Hole in One
//
//             draw_set_color(force_meter_color_on);
//
//             draw_text(tri_x1,tri_y3-(2*hole_ratio),string(game_holes_completed_vis+1)); // hole_ratio,hole_ratio
//         }
//         else if ( global.game_mode == 5 ){
//         // Endless
//
//             draw_sprite_ext(spr_infinity,0,tri_x1,tri_y3-(2*hole_ratio),hole_ratio,hole_ratio,0,c_white,1);
//         }
//
//     if ( global.platform_config != 1 ){ texture_set_interpolation(true); }
//
//
function gml_Script_scr_draw_hole_arrow(_inst, _other) {
    var gmlhole_ratio = _inst.gmlworld_grid_ratio;
    var gmltri_x1 = 64;
    var gmltri_y1 = 120;
    var gmltri_x2 = floor((gmltri_x1 - (5 * gmlhole_ratio)));
    var gmltri_y2 = floor((gmltri_y1 - (5 * gmlhole_ratio)));
    var gmltri_x3 = floor((gmltri_x1 + (5 * gmlhole_ratio)));
    var gmltri_y3 = floor((gmltri_y1 - (5 * gmlhole_ratio)));
    if ((global.gmlplatform_config != 1)) {
        {
            texture_set_interpolation(0);
        };
    };
    draw_triangle_colour(gmltri_x1, gmltri_y1, gmltri_x2, gmltri_y2, gmltri_x3, gmltri_y3, _inst.gmlforce_meter_color_on, _inst.gmlforce_meter_color_on, _inst.gmlforce_meter_color_on, 0);
    draw_set_font(6);
    if ((_inst.gmlworld_grid_ratio > 1)) {
        {
            draw_set_font(5);
        };
    };
    if ((_inst.gmlworld_grid_ratio > 2)) {
        {
            draw_set_font(4);
        };
    };
    draw_set_valign(2);
    draw_set_halign(1);
    draw_set_color(16777215);
    if ((global.gmlgame_mode == 1)) {
        {
            draw_set_color(_inst.gmlforce_meter_color_on);
            draw_text(gmltri_x1, (gmltri_y3 - (2 * gmlhole_ratio)), string(_inst.gmlhole_number));
        };
    } else {
        if ((((global.gmlgame_mode == 2)) || ((global.gmlgame_mode == 3)) || ((global.gmlgame_mode == 4)))) {
            {
                draw_set_color(_inst.gmlforce_meter_color_on);
                draw_text(gmltri_x1, (gmltri_y3 - (2 * gmlhole_ratio)), string((_inst.gmlgame_holes_completed_vis + 1)));
            };
        } else {
            if ((global.gmlgame_mode == 5)) {
                {
                    draw_sprite_ext(_inst, 4, 0, gmltri_x1, (gmltri_y3 - (2 * gmlhole_ratio)), gmlhole_ratio, gmlhole_ratio, 0, 16777215, 1);
                };
            };
        };
    };
    if ((global.gmlplatform_config != 1)) {
        {
            texture_set_interpolation(1);
        };
    };
}

// #####################################################################################################
// /// scr_draw_menu_background(draw_step);
//
//     var draw_step = argument0;
//
//     if (( draw_step == 1 ) or ( draw_step = 0 )){
//
//         // Dark Bottom
//
//         grid_size = 20;
//         line_gerth = ceil(2 * draw_w_ratio);
//         color_lines = make_colour_rgb(255,0,167); // make_colour_rgb(86,3,52);
//
//         var terrain_screen_bottom = ( world_height_board / 2 ) - 100;
//         var bot_color = make_colour_rgb(18,4,25);
//
//         var bot_x1 = 0;
//         var bot_y1 = terrain_screen_bottom * draw_w_ratio;
//         var bot_x2 = world_width_board * draw_w_ratio;
//         var bot_y2 = world_height_board * draw_w_ratio;
//
//         draw_rectangle_colour(bot_x1,bot_y1,bot_x2,bot_y2,bot_color,bot_color,bot_color,bot_color,false);
//     }
//
//     if (( draw_step == 2 ) or ( draw_step = 0 )){
//
//         // Horizon
//
//         var horizon_y = scr_menu_horizon_y();
//
//         hor_line_x1 = floor( world_width_board / 2 ) * draw_w_ratio;
//         hor_line_y1 = horizon_y;
//         hor_line_x2 = hor_line_x1;
//         hor_line_y2 = world_height_board * draw_w_ratio;
//
//         var line_angle = point_direction(hor_line_x2, hor_line_y2, hor_line_x1, hor_line_y1);
//         var hor_line_x1_final = hor_line_x2 + lengthdir_x((grid_size*2)*draw_w_ratio,line_angle);
//         var hor_line_y1_final = hor_line_y2 + lengthdir_y((grid_size*2)*draw_w_ratio,line_angle);
//
//         var hor_line_gerth = ceil( line_gerth / 2 );
//
//         if ( hor_line_gerth < 2 ){ hor_line_gerth = 2; }
//
//         if ( global.game_lowres ){ hor_line_gerth = 4; }
//
//         for ( i=1; i<=11; i+=1; ){
//
//             draw_line_width_colour(hor_line_x1,hor_line_y1,hor_line_x2,hor_line_y2,hor_line_gerth,color_lines,color_lines);
//
//             hor_line_x2 += floor( floor( world_width_board * 0.10 ) * draw_w_ratio );
//
//             line_angle = point_direction(hor_line_x2, hor_line_y2, hor_line_x1, hor_line_y1);
//             hor_line_x1_final = hor_line_x1
//             hor_line_y1_final = hor_line_y1
//         }
//
//         hor_line_x2 = hor_line_x1;
//
//         for ( i=1; i<=10; i+=1; ){
//
//             hor_line_x2 -= floor( floor( world_width_board * 0.10 ) * draw_w_ratio );
//
//             line_angle = point_direction(hor_line_x2, hor_line_y2, hor_line_x1, hor_line_y1);
//             hor_line_x1_final = hor_line_x1;
//             hor_line_y1_final = hor_line_y1;
//
//             draw_line_width_colour(hor_line_x1_final,hor_line_y1_final,hor_line_x2,hor_line_y2,hor_line_gerth,color_lines,color_lines);
//         }
//
//         hor_line_x1 = 0;
//         hor_line_y1 = floor(( world_height_board ) * draw_w_ratio ); // - grid_size / 2
//         hor_line_x2 = floor(world_width_board * draw_w_ratio );
//         hor_line_y2 = hor_line_y1;
//
//         draw_line_width_colour(hor_line_x1,hor_line_y1,hor_line_x2,hor_line_y2,hor_line_gerth,color_lines,color_lines);
//
//         var gap_height_base = ( grid_size * draw_h_ratio );
//         var gap_height = gap_height_base;
//
//         repeat(24){
//
//             hor_line_y1 -= gap_height; // (( grid_size * draw_h_ratio ) - gap_height );
//             hor_line_y2 = hor_line_y1;
//
//             draw_line_width_colour(hor_line_x1,hor_line_y1,hor_line_x2,hor_line_y2,hor_line_gerth,color_lines,color_lines);
//
//             gap_height -= ceil( gap_height * 0.16 );
//         }
//
//         draw_rectangle_colour(hor_line_x1,0,hor_line_x2,hor_line_y2,c_black,c_black,c_black,c_black,false);
//
//         draw_line_width_colour(hor_line_x1,hor_line_y1,hor_line_x2,hor_line_y2,hor_line_gerth,color_lines,color_lines);
//     }
//
//     if (( draw_step == 3 ) or ( draw_step = 0 )){
//
//         // Mountains : Background
//
//         var bot_x1 = 0;
//         var bot_y1 = 0;
//         var bot_x2 = world_width_board * draw_w_ratio;
//         var bot_y2 = world_height_board * draw_w_ratio;
//         var mountain_bg_color = make_colour_rgb(15,18,133);
//
//         draw_rectangle_colour(bot_x1,bot_y1,bot_x2,(bot_y2/2),mountain_bg_color,mountain_bg_color,mountain_bg_color,mountain_bg_color,false);
//
//         // Mountains
//
//         horizon_y = hor_line_y1;
//
//         var horizon_ratio = (( world_width_draw / 2 ) / 480 );
//
//         draw_sprite_ext(spr_mountains_1,0,(world_width_draw/2),horizon_y,horizon_ratio,world_grid_ratio_capped,0,c_white,1);
//
//         draw_sprite_ext(spr_mountains_2,0,(world_width_draw/2),horizon_y,horizon_ratio,world_grid_ratio_capped,0,c_white,1); // world_grid_ratio_capped+0.1
//     }
//
//     if (( draw_step == 4 ) or ( draw_step = 0 )){
//
//         // Background Face
//         /*
//         draw_set_alpha(0.5);
//
//         draw_rectangle_colour(-10,-10,world_width_board*draw_w_ratio,world_height_board*draw_w_ratio,c_black,c_black,c_black,c_black,false);
//
//         draw_set_alpha(1);
//         */
//     }
//
//
function gml_Script_scr_draw_menu_background(_inst, _other, argument0) {
    var gmldraw_step = argument0;
    if ((((gmldraw_step == 1)) || ((gmldraw_step == 0)))) {
        {
            _inst.gmlgrid_size = 20;
            _inst.gmlline_gerth = ceil((2 * _inst.gmldraw_w_ratio));
            _inst.gmlcolor_lines = make_colour_rgb(255, 0, 167);
            var gmlterrain_screen_bottom = ((_inst.gmlworld_height_board / 2) - 100);
            var gmlbot_color = make_colour_rgb(18, 4, 25);
            var gmlbot_x1 = 0;
            var gmlbot_y1 = (gmlterrain_screen_bottom * _inst.gmldraw_w_ratio);
            var gmlbot_x2 = (_inst.gmlworld_width_board * _inst.gmldraw_w_ratio);
            var gmlbot_y2 = (_inst.gmlworld_height_board * _inst.gmldraw_w_ratio);
            draw_rectangle_colour(gmlbot_x1, gmlbot_y1, gmlbot_x2, gmlbot_y2, gmlbot_color, gmlbot_color, gmlbot_color, gmlbot_color, 0);
        };
    };
    if ((((gmldraw_step == 2)) || ((gmldraw_step == 0)))) {
        {
            var gmlhorizon_y = gml_Script_scr_menu_horizon_y(_inst, _other);
            _inst.gmlhor_line_x1 = (floor((_inst.gmlworld_width_board / 2)) * _inst.gmldraw_w_ratio);
            _inst.gmlhor_line_y1 = gmlhorizon_y;
            _inst.gmlhor_line_x2 = _inst.gmlhor_line_x1;
            _inst.gmlhor_line_y2 = (_inst.gmlworld_height_board * _inst.gmldraw_w_ratio);
            var gmlline_angle = point_direction(_inst.gmlhor_line_x2, _inst.gmlhor_line_y2, _inst.gmlhor_line_x1, _inst.gmlhor_line_y1);
            var gmlhor_line_x1_final = (_inst.gmlhor_line_x2 + lengthdir_x(((_inst.gmlgrid_size * 2) * _inst.gmldraw_w_ratio), gmlline_angle));
            var gmlhor_line_y1_final = (_inst.gmlhor_line_y2 + lengthdir_y(((_inst.gmlgrid_size * 2) * _inst.gmldraw_w_ratio), gmlline_angle));
            var gmlhor_line_gerth = ceil((_inst.gmlline_gerth / 2));
            if ((gmlhor_line_gerth < 2)) {
                {
                    gmlhor_line_gerth = 2;
                };
            };
            if (global.gmlgame_lowres > 0.5) {
                {
                    gmlhor_line_gerth = 4;
                };
            };
            for (_inst.gmli = 1;
                (_inst.gmli <= 11); _inst.gmli += 1) {
                {
                    draw_line_width_colour(_inst.gmlhor_line_x1, _inst.gmlhor_line_y1, _inst.gmlhor_line_x2, _inst.gmlhor_line_y2, gmlhor_line_gerth, _inst.gmlcolor_lines, _inst.gmlcolor_lines);
                    _inst.gmlhor_line_x2 += floor((floor((_inst.gmlworld_width_board * 0.1)) * _inst.gmldraw_w_ratio));
                    gmlline_angle = point_direction(_inst.gmlhor_line_x2, _inst.gmlhor_line_y2, _inst.gmlhor_line_x1, _inst.gmlhor_line_y1);
                    gmlhor_line_x1_final = _inst.gmlhor_line_x1;
                    gmlhor_line_y1_final = _inst.gmlhor_line_y1;
                }
            };
            _inst.gmlhor_line_x2 = _inst.gmlhor_line_x1;
            for (_inst.gmli = 1;
                (_inst.gmli <= 10); _inst.gmli += 1) {
                {
                    _inst.gmlhor_line_x2 -= floor((floor((_inst.gmlworld_width_board * 0.1)) * _inst.gmldraw_w_ratio));
                    gmlline_angle = point_direction(_inst.gmlhor_line_x2, _inst.gmlhor_line_y2, _inst.gmlhor_line_x1, _inst.gmlhor_line_y1);
                    gmlhor_line_x1_final = _inst.gmlhor_line_x1;
                    gmlhor_line_y1_final = _inst.gmlhor_line_y1;
                    draw_line_width_colour(gmlhor_line_x1_final, gmlhor_line_y1_final, _inst.gmlhor_line_x2, _inst.gmlhor_line_y2, gmlhor_line_gerth, _inst.gmlcolor_lines, _inst.gmlcolor_lines);
                }
            };
            _inst.gmlhor_line_x1 = 0;
            _inst.gmlhor_line_y1 = floor((_inst.gmlworld_height_board * _inst.gmldraw_w_ratio));
            _inst.gmlhor_line_x2 = floor((_inst.gmlworld_width_board * _inst.gmldraw_w_ratio));
            _inst.gmlhor_line_y2 = _inst.gmlhor_line_y1;
            draw_line_width_colour(_inst.gmlhor_line_x1, _inst.gmlhor_line_y1, _inst.gmlhor_line_x2, _inst.gmlhor_line_y2, gmlhor_line_gerth, _inst.gmlcolor_lines, _inst.gmlcolor_lines);
            var gmlgap_height_base = (_inst.gmlgrid_size * _inst.gmldraw_h_ratio);
            var gmlgap_height = gmlgap_height_base;
            for (var __yy__v56 = 0, __yy__v57 = ~~(24); __yy__v56 < __yy__v57; __yy__v56++) {
                {
                    _inst.gmlhor_line_y1 -= gmlgap_height;
                    _inst.gmlhor_line_y2 = _inst.gmlhor_line_y1;
                    draw_line_width_colour(_inst.gmlhor_line_x1, _inst.gmlhor_line_y1, _inst.gmlhor_line_x2, _inst.gmlhor_line_y2, gmlhor_line_gerth, _inst.gmlcolor_lines, _inst.gmlcolor_lines);
                    gmlgap_height -= ceil((gmlgap_height * 0.16));
                }
            };
            draw_rectangle_colour(_inst.gmlhor_line_x1, 0, _inst.gmlhor_line_x2, _inst.gmlhor_line_y2, 0, 0, 0, 0, 0);
            draw_line_width_colour(_inst.gmlhor_line_x1, _inst.gmlhor_line_y1, _inst.gmlhor_line_x2, _inst.gmlhor_line_y2, gmlhor_line_gerth, _inst.gmlcolor_lines, _inst.gmlcolor_lines);
        };
    };
    if ((((gmldraw_step == 3)) || ((gmldraw_step == 0)))) {
        {
            var gmlbot_x1 = 0;
            var gmlbot_y1 = 0;
            var gmlbot_x2 = (_inst.gmlworld_width_board * _inst.gmldraw_w_ratio);
            var gmlbot_y2 = (_inst.gmlworld_height_board * _inst.gmldraw_w_ratio);
            var gmlmountain_bg_color = make_colour_rgb(15, 18, 133);
            draw_rectangle_colour(gmlbot_x1, gmlbot_y1, gmlbot_x2, (gmlbot_y2 / 2), gmlmountain_bg_color, gmlmountain_bg_color, gmlmountain_bg_color, gmlmountain_bg_color, 0);
            gmlhorizon_y = _inst.gmlhor_line_y1;
            var gmlhorizon_ratio = ((_inst.gmlworld_width_draw / 2) / 480);
            draw_sprite_ext(_inst, 8, 0, (_inst.gmlworld_width_draw / 2), gmlhorizon_y, gmlhorizon_ratio, _inst.gmlworld_grid_ratio_capped, 0, 16777215, 1);
            draw_sprite_ext(_inst, 9, 0, (_inst.gmlworld_width_draw / 2), gmlhorizon_y, gmlhorizon_ratio, _inst.gmlworld_grid_ratio_capped, 0, 16777215, 1);
        };
    };
    if ((((gmldraw_step == 4)) || ((gmldraw_step == 0)))) {
        {};
    };
}

// #####################################################################################################
// /// scr_force_apply();
//
// // Force Meter : Apply Force
//
//     hit_play_sound = false;
//
//     if (( !game_over ) and ( ball_inst != 0 ) and ( force_meter_ready ) and ( force_meter_show ) and ( !ball_in_hole )){
//
//         var local_strength_modifier = strength_modifier[0];
//
//         if ( global.view_w <= global.board_w ){ local_strength_modifier = strength_modifier[1]; }
//
//         // Horizontal
//
//             var strength_horz = point_distance(force_meter_x1,force_meter_y1,force_meter_x2,force_meter_y1);
//
//             strength_horz = ( strength_horz / draw_w_ratio );
//
//             if ( strength_horz > 0 ){
//
//                 strength_horz = (( strength_horz * phys_world_pixel_to_meters ) * local_strength_modifier );
//
//                 if ( force_meter_x2 > force_meter_x1 ){
//
//                     strength_horz = strength_horz * -1;
//                 }
//                 else if ( force_meter_x1 = force_meter_x2 ){
//
//                     strength_horz = 0;
//                 }
//             }
//             else { strength_horz = 0; }
//
//
//         // Vertical
//
//             var strength_vert = point_distance(force_meter_x1,force_meter_y1,force_meter_x1,force_meter_y2);
//
//             strength_vert = ( strength_vert / draw_h_ratio );
//
//             if ( strength_vert != 0 ){ strength_vert = ((( strength_vert * -1 ) * phys_world_pixel_to_meters ) * local_strength_modifier ); }
//
//
//         // Apply Force
//
//             with ( ball_inst ){
//
//                 phy_active = true;
//
//                 physics_apply_force(x, y, strength_horz, strength_vert);
//
//                 glow_alpha = 1;
//
//                 trail_alpha = 1;
//             }
//
//         // Hit Sound
//
//             hit_play_sound = true;
//
//             scr_play_sound(sound_hit_6,1,false);
//
//
//         // Add Hit
//
//             if (( abs(strength_horz) > 0 ) or ( abs(strength_vert) > 0 )){
//
//                 game_hits_curr += 1;
//
//                 game_hits_curr_vis = game_hits_curr;
//
//                 if ( global.game_mode == 1 ){
//
//                     game_mode_1_hits_curr[global.game_submode] = game_hits_curr;
//
//                     if ( global.famobi_active ){
//                     // famobi
//
//                         scr_famobi_progress_save_sml(global.game_mode);
//                     }
//                     else {
//
//                         scr_ini_progress_save_sml(global.game_mode);
//                     }
//
//                 }
//                 else if ( global.game_mode == 3 ){
//                 // Just in Time : Reduce Time Add
//
//                     game_mode_3_time_add -= 2000;
//
//                     if ( game_mode_3_time_add < 0 ){ game_mode_3_time_add = 0; }
//                 }
//             }
//     }
//
//
// // Force Meter : De-Activate
//
//     force_meter_show = false;
//
//
// // Hit Sound
//
//     /* // [audio] //
//     if ( hit_play_sound ){
//
//         if ( !audio_is_playing(audio_hit_sound[audio_hit_pos]) ){
//
//             audio_hit_pos += 1;
//
//             if ( audio_hit_pos = audio_hit_pos_max ){ audio_hit_pos = 0; }
//
//             scr_play_sound(audio_hit_sound[audio_hit_pos],1,false);
//         }
//     }
//     */
//
//
function gml_Script_scr_force_apply(_inst, _other) {
    _inst.gmlhit_play_sound = 0 ? 1 : 0;
    if (((!(_inst.gmlgame_over > 0.5)) && ((_inst.gmlball_inst != 0)) && (_inst.gmlforce_meter_ready > 0.5) && (_inst.gmlforce_meter_show > 0.5) && (!(_inst.gmlball_in_hole > 0.5)))) {
        {
            var gmllocal_strength_modifier = _inst.gmlstrength_modifier[0];
            if ((global.gmlview_w <= global.gmlboard_w)) {
                {
                    gmllocal_strength_modifier = _inst.gmlstrength_modifier[1];
                };
            };
            var gmlstrength_horz = point_distance(_inst.gmlforce_meter_x1, _inst.gmlforce_meter_y1, _inst.gmlforce_meter_x2, _inst.gmlforce_meter_y1);
            gmlstrength_horz = (gmlstrength_horz / _inst.gmldraw_w_ratio);
            if ((gmlstrength_horz > 0)) {
                {
                    gmlstrength_horz = ((gmlstrength_horz * _inst.gmlphys_world_pixel_to_meters) * gmllocal_strength_modifier);
                    if ((_inst.gmlforce_meter_x2 > _inst.gmlforce_meter_x1)) {
                        {
                            gmlstrength_horz = (gmlstrength_horz * (-1));
                        };
                    } else {
                        if ((_inst.gmlforce_meter_x1 == _inst.gmlforce_meter_x2)) {
                            {
                                gmlstrength_horz = 0;
                            };
                        };
                    };
                };
            } else {
                {
                    gmlstrength_horz = 0;
                };
            };
            var gmlstrength_vert = point_distance(_inst.gmlforce_meter_x1, _inst.gmlforce_meter_y1, _inst.gmlforce_meter_x1, _inst.gmlforce_meter_y2);
            gmlstrength_vert = (gmlstrength_vert / _inst.gmldraw_h_ratio);
            if ((gmlstrength_vert != 0)) {
                {
                    gmlstrength_vert = (((gmlstrength_vert * (-1)) * _inst.gmlphys_world_pixel_to_meters) * gmllocal_strength_modifier);
                };
            }; {
                var __yy__v58 = GetWithArray(_inst.gmlball_inst);
                for (var __yy__v59 in __yy__v58) {
                    if (!__yy__v58.hasOwnProperty(__yy__v59)) continue;
                    var __yy__v60 = __yy__v58[__yy__v59];
                    if (__yy__v60.marked) continue;
                    if (!__yy__v60.active) continue; {
                        __yy__v60.set_physics_active(1 ? 1 : 0);
                        physics_apply_force(__yy__v60, __yy__v60.x, __yy__v60.y, gmlstrength_horz, gmlstrength_vert);
                        __yy__v60.gmlglow_alpha = 1;
                        __yy__v60.gmltrail_alpha = 1;
                    }
                }
            };
            _inst.gmlhit_play_sound = 1 ? 1 : 0;
            gml_Script_scr_play_sound(_inst, _other, 1, 1, 0);
            if ((((abs(gmlstrength_horz) > 0)) || ((abs(gmlstrength_vert) > 0)))) {
                {
                    _inst.gmlgame_hits_curr += 1;
                    _inst.gmlgame_hits_curr_vis = _inst.gmlgame_hits_curr;
                    if ((global.gmlgame_mode == 1)) {
                        {
                            if (!(_inst.gmlgame_mode_1_hits_curr instanceof Array)) {
                                _inst.gmlgame_mode_1_hits_curr = [];
                                _inst.gmlgame_mode_1_hits_curr.__yy_owner = 287211472;
                            } else if (_inst.gmlgame_mode_1_hits_curr.__yy_owner !== 287211472) {
                                _inst.gmlgame_mode_1_hits_curr = _inst.gmlgame_mode_1_hits_curr.slice(0);
                                _inst.gmlgame_mode_1_hits_curr.__yy_owner = 287211472;
                            }
                            _inst.gmlgame_mode_1_hits_curr[global.gmlgame_submode] = _inst.gmlgame_hits_curr;
                            if (global.gmlfamobi_active > 0.5) {
                                {
                                    gml_Script_scr_famobi_progress_save_sml(_inst, _other, global.gmlgame_mode);
                                };
                            } else {
                                {
                                    gml_Script_scr_ini_progress_save_sml(_inst, _other, global.gmlgame_mode);
                                };
                            };
                        };
                    } else {
                        if ((global.gmlgame_mode == 3)) {
                            {
                                _inst.gmlgame_mode_3_time_add -= 2000;
                                if ((_inst.gmlgame_mode_3_time_add < 0)) {
                                    {
                                        _inst.gmlgame_mode_3_time_add = 0;
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    _inst.gmlforce_meter_show = 0 ? 1 : 0;
}

// #####################################################################################################
// /// scr_fps_check();
//
// if (( global.platform_config = 1 ) and ( !global.game_lowfps ) and ( fps < 5 )){
//
//     global.game_lowfps = true;
// }
//
//
function gml_Script_scr_fps_check(_inst, _other) {
    if ((((global.gmlplatform_config == 1)) && (!(global.gmlgame_lowfps > 0.5)) && ((g_pBuiltIn.fps < 5)))) {
        {
            global.gmlgame_lowfps = 1 ? 1 : 0;
        };
    };
}

// #####################################################################################################
// /// scr_game_mode_name(game_mode);
//
// var game_mode = argument0;
//
// if ( game_mode == 1 ){
//
//     game_mode_name = lang_text_modes[1]; // "NEON COURSES"
// }
// if ( game_mode == 2 ){
//
//     game_mode_name = lang_text_modes[2]; // "HOLE-IN-ONE"
// }
// if ( game_mode == 3 ){
//
//     game_mode_name = lang_text_modes[3]; // "JUST IN TIME"
// }
// if ( game_mode == 4 ){
//
//     game_mode_name = lang_text_modes[4]; // "DONT RUN OUT"
// }
// if ( game_mode == 5 ){
//
//     game_mode_name = lang_text_modes[5]; // "PRACTICE"
// }
//
// return game_mode_name;
//
//
function gml_Script_scr_game_mode_name(_inst, _other, argument0) {
    var gmlgame_mode = argument0;
    if ((gmlgame_mode == 1)) {
        {
            _inst.gmlgame_mode_name = _inst.gmllang_text_modes[1];
        };
    };
    if ((gmlgame_mode == 2)) {
        {
            _inst.gmlgame_mode_name = _inst.gmllang_text_modes[2];
        };
    };
    if ((gmlgame_mode == 3)) {
        {
            _inst.gmlgame_mode_name = _inst.gmllang_text_modes[3];
        };
    };
    if ((gmlgame_mode == 4)) {
        {
            _inst.gmlgame_mode_name = _inst.gmllang_text_modes[4];
        };
    };
    if ((gmlgame_mode == 5)) {
        {
            _inst.gmlgame_mode_name = _inst.gmllang_text_modes[5];
        };
    };
    return _inst.gmlgame_mode_name;
}

// #####################################################################################################
// /// scr_game_mode_set(game_mode,submode);
//
// /*
// GAME MODES
// -------------------
// 1: Neon Courses
//     1> 25h
//     2> 50h
//     3> 100h
//     4> 150h
// 2: Hole in One
// 3: Just in time
// 4: Don't Run Out
// 5: Endless
// */
//
// var game_mode = argument0;
// var game_submode = argument1;
//
// global.game_mode = game_mode;
// global.game_submode = game_submode;
//
// if ( game_mode == 1 ){
// // 1: Neon Courses
//
//     global.floor_mode = 2; // tailored
//
//     game_levels_max_level = game_mode_1_max_level[game_submode];
//
//     game_levels_curr = game_mode_1_curr_level[game_submode];
//
//     game_levels_hits_total = game_mode_1_hits_total[game_submode];
//
//     game_mode_1_best_score = game_mode_1_hits_best[game_submode]; // game_mode_1_cp[game_submode,array_length_2d(game_mode_1_cp,game_submode)-1];
// }
// else if ( game_mode == 2 ){
// // 2: Hole in One
//
//     global.floor_mode = 0; // random
// }
// else if ( game_mode == 3 ){
// // 3: Just in Time
//
//     global.floor_mode = 0; // random
// }
// else if ( game_mode == 4 ){
// // 4: Don't Run Out
//
//     global.floor_mode = 0; // random
// }
// else if ( game_mode == 5 ){
// // 5: Endless
//
//     global.floor_mode = 0; // random
// }
//
//
function gml_Script_scr_game_mode_set(_inst, _other, argument0, argument1) {
    var gmlgame_mode = argument0;
    var gmlgame_submode = argument1;
    global.gmlgame_mode = gmlgame_mode;
    global.gmlgame_submode = gmlgame_submode;
    if ((gmlgame_mode == 1)) {
        {
            global.gmlfloor_mode = 2;
            _inst.gmlgame_levels_max_level = _inst.gmlgame_mode_1_max_level[gmlgame_submode];
            _inst.gmlgame_levels_curr = _inst.gmlgame_mode_1_curr_level[gmlgame_submode];
            _inst.gmlgame_levels_hits_total = _inst.gmlgame_mode_1_hits_total[gmlgame_submode];
            _inst.gmlgame_mode_1_best_score = _inst.gmlgame_mode_1_hits_best[gmlgame_submode];
        };
    } else {
        if ((gmlgame_mode == 2)) {
            {
                global.gmlfloor_mode = 0;
            };
        } else {
            if ((gmlgame_mode == 3)) {
                {
                    global.gmlfloor_mode = 0;
                };
            } else {
                if ((gmlgame_mode == 4)) {
                    {
                        global.gmlfloor_mode = 0;
                    };
                } else {
                    if ((gmlgame_mode == 5)) {
                        {
                            global.gmlfloor_mode = 0;
                        };
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// /// scr_game_version();
//
// return "1.8";
//
//
function gml_Script_scr_game_version(_inst, _other) {
    return "1.8";
}

// #####################################################################################################
// /// scr_hsv_to_rgb(h,s,v)
//
//     /*
//     **  Usage:
//     **      hsv_to_rgb(h,s,v,var_red,var_green,var_blue)
//     **
//     **  Arguments:
//     **      h,s,v       the hue, saturation, and value components of an HSV color, reals[0-255]
//     **      var_red     local variable name to store the red value in, string
//     **      var_green   local variable name to store the green value in, string
//     **      var_blue    local variable name to store the blue value in, string
//     **
//     **  Notes:
//     **      Rather than return a value, this sets the values of local variables
//     **
//     */
//
//     var a,b,c,d;
//     d = make_color_hsv(argument0,argument1,argument2);
//     a = color_get_red(d);
//     b = color_get_green(d);
//     c = color_get_blue(d);
//
//     cRed = a;
//     cGreen = b;
//     cBlue = c;
//
//
function gml_Script_scr_hsv_to_rgb(_inst, _other, argument0, argument1, argument2) {
    var gmla, gmlb, gmlc, gmld;
    gmld = make_color_hsv(argument0, argument1, argument2);
    gmla = color_get_red(gmld);
    gmlb = color_get_green(gmld);
    gmlc = color_get_blue(gmld);
    _inst.gmlcRed = gmla;
    _inst.gmlcGreen = gmlb;
    _inst.gmlcBlue = gmlc;
}

// #####################################################################################################
// /// scr_ini_progress_save_sml(game_mode)
//
// ini_open("savedata.ini");
//
//     ini_write_real("options", "game_lang", global.game_lang);
//
//     ini_write_real("options", "game_volume_music", global.game_volume_music);
//
//     ini_write_real("options", "game_volume_sound", global.game_volume_sound);
//
//     ini_write_real("progression", "game_tutorial_1", game_tutorial_1);
//
// ini_close();
//
//
// // Famobi
//
//     famobi_localStorage_set("progression__game_tutorial_1",game_tutorial_1);
//
//
function gml_Script_scr_ini_options_save(_inst, _other) {
    //ini_open("savedata.ini");
    window.famobi_analytics.trackScreen("SCREEN_SETTINGS");
    ini_write_real("options", "game_lang", global.gmlgame_lang);
    ini_write_real("options", "game_volume_music", global.gmlgame_volume_music);
    ini_write_real("options", "game_volume_sound", global.gmlgame_volume_sound);
    ini_write_real("progression", "game_tutorial_1", _inst.gmlgame_tutorial_1);
    ini_close();
    famobi_localStorage_set("progression__game_tutorial_1", _inst.gmlgame_tutorial_1);
}

// #####################################################################################################
// /// scr_ini_progress_load(game_mode)
//
// var game_mode = argument0;
// var game_submode = global.game_submode;
//
// ini_open("savedata.ini");
//
//     // Neon Courses
//
//         // Reset Arrays
//
//             game_mode_1_hits_curr = 0;
//             game_mode_1_hits_total = 0;
//             game_mode_1_curr_level = 0;
//             game_mode_1_cp = 0;
//
//
//         // General Vars
//
//             game_hits_curr = 0;
//
//             game_levels_curr = 1; // ini_read_real("progression", "game_levels_curr", 1);
//
//             game_levels_hits_total = 0; // ini_read_real("progression", "game_levels_hits_total", 0);
//
//             game_levels_hits_total_vis = game_levels_hits_total;
//
//             game_mode_1_best_score = 0; // ini_read_real("progression", "game_mode_1_best_score", 0);
//
//             game_mode_1_complete_score = 0;
//
//             game_mode_1_complete = false;
//
//             game_mode_1_new_record = false;
//
//
//         // Hits ( Curr, Total, Best )
//
//             game_mode_1_hits_curr[1] = ini_read_real("progression", "game_mode_1_hits_curr_25h", 0); // 25h : Current Hits
//             game_mode_1_hits_curr[2] = ini_read_real("progression", "game_mode_1_hits_curr_50h", 0); // 50h : Current Hits
//             game_mode_1_hits_curr[3] = ini_read_real("progression", "game_mode_1_hits_curr_100h", 0); // 100h : Current Hits
//             game_mode_1_hits_curr[4] = ini_read_real("progression", "game_mode_1_hits_curr_150h", 0); // 150h : Current Hits
//
//             game_mode_1_hits_total[1] = ini_read_real("progression", "game_mode_1_hits_total_25h", 0); // 25h : Total Hits
//             game_mode_1_hits_total[2] = ini_read_real("progression", "game_mode_1_hits_total_50h", 0); // 50h : Total Hits
//             game_mode_1_hits_total[3] = ini_read_real("progression", "game_mode_1_hits_total_100h", 0); // 100h : Total Hits
//             game_mode_1_hits_total[4] = ini_read_real("progression", "game_mode_1_hits_total_150h", 0); // 150h : Total Hits
//
//             game_mode_1_hits_best[1] = ini_read_real("progression", "game_mode_1_hits_best_25h", 0); // 25h : Best Hits
//             game_mode_1_hits_best[2] = ini_read_real("progression", "game_mode_1_hits_best_50h", 0); // 50h : Best Hits
//             game_mode_1_hits_best[3] = ini_read_real("progression", "game_mode_1_hits_best_100h", 0); // 100h : Best Hits
//             game_mode_1_hits_best[4] = ini_read_real("progression", "game_mode_1_hits_best_150h", 0); // 150h : Best Hits
//
//
//         // Current Level
//
//             game_mode_1_curr_level[1] = ini_read_real("progression", "game_mode_1_level_25h", 1); // 25h : Current Level
//             game_mode_1_curr_level[2] = ini_read_real("progression", "game_mode_1_level_50h", 1); // 50h : Current Level
//             game_mode_1_curr_level[3] = ini_read_real("progression", "game_mode_1_level_100h", 1); // 50h : Current Level
//             game_mode_1_curr_level[4] = ini_read_real("progression", "game_mode_1_level_150h", 1); // 50h : Current Level
//
//
//         // Checkpoints 2.0
//
//             game_mode_1_cp[1,1] = ini_read_real("progression", "game_mode_1_25h_025", 0); // 25h : 25
//
//             game_mode_1_cp[2,1] = ini_read_real("progression", "game_mode_1_50h_025", 0); // 50h : 25
//
//             game_mode_1_cp[2,2] = ini_read_real("progression", "game_mode_1_50h_050", 0); // 50h : 50
//
//             game_mode_1_cp[3,1] = ini_read_real("progression", "game_mode_1_100h_025", 0); // 100h : 25
//
//             game_mode_1_cp[3,2] = ini_read_real("progression", "game_mode_1_100h_050", 0); // 100h : 50
//
//             game_mode_1_cp[3,3] = ini_read_real("progression", "game_mode_1_100h_075", 0); // 100h : 75
//
//             game_mode_1_cp[3,4] = ini_read_real("progression", "game_mode_1_100h_100", 0); // 100h : 100
//
//             game_mode_1_cp[4,1] = ini_read_real("progression", "game_mode_1_150h_025", 0); // 150h : 25
//
//             game_mode_1_cp[4,2] = ini_read_real("progression", "game_mode_1_150h_050", 0); // 150h : 50
//
//             game_mode_1_cp[4,3] = ini_read_real("progression", "game_mode_1_150h_075", 0); // 150h : 75
//
//             game_mode_1_cp[4,4] = ini_read_real("progression", "game_mode_1_150h_100", 0); // 150h : 100
//
//             game_mode_1_cp[4,5] = ini_read_real("progression", "game_mode_1_150h_125", 0); // 150h : 125
//
//             game_mode_1_cp[4,6] = ini_read_real("progression", "game_mode_1_150h_150", 0); // 150h : 150
//
//
//         // Sub Game Mode Vars
//
//             if ( game_mode == 1 ){
//             // Neon Courses
//
//                 /* switch (game_submode){
//
//                     case 1: game_levels_max_level = 25; break;
//                     case 2: game_levels_max_level = 50; break;
//                     case 3: game_levels_max_level = 100; break;
//                     case 4: game_levels_max_level = 150; break;
//                 }*/
//
//                 game_mode_1_max_level[1] = 25;
//                 game_mode_1_max_level[2] = 50;
//                 game_mode_1_max_level[3] = 100;
//                 game_mode_1_max_level[4] = 150;
//
//                 game_levels_max_level = game_mode_1_max_level[game_submode];
//
//                 game_levels_curr = game_mode_1_curr_level[game_submode];
//
//                 game_levels_hits_total = game_mode_1_hits_total[game_submode];
//
//                 game_levels_hits_total_vis = game_levels_hits_total;
//
//                 game_hits_curr = game_mode_1_hits_curr[game_submode];
//
//                 game_hits_curr_vis = game_hits_curr;
//
//                 game_mode_1_best_score = game_mode_1_hits_best[game_submode]; // game_mode_1_cp[game_submode,array_length_2d(game_mode_1_cp,game_submode)-1];
//             }
//
//     // Hole in One
//
//         game_mode_2_holes_record = ini_read_real("progression", "game_mode_2_holes_record", 0); // Holes Record
//
//
//     // Just in Time
//
//         game_mode_3_holes_record = ini_read_real("progression", "game_mode_3_holes_record", 0); // Holes Record
//
//         game_mode_3_time_left = 60000; // 1 minutes
//
//         game_mode_3_time_add_max = 10000; // 10 seconds max
//
//         game_mode_3_time_add_base = 12000; // 12 seconds ( +2 second buffer for draw )
//
//         game_mode_3_time_add = 0;
//
//
//     // Don't Run Out
//
//         game_mode_4_holes_record = ini_read_real("progression", "game_mode_4_holes_record", 0); // Holes Record
//
//         game_mode_4_balls_max = 10;
//
//         game_mode_4_balls_left = game_mode_4_balls_max;
//
//
//     // Misc
//
//         game_tutorial_1 = ini_read_real("progression", "game_tutorial_1", 0);
//
//         global.game_lang = ini_read_real("options", "game_lang", 0); // 0:English; 1:Spanish;
//
//         global.game_volume_music = ini_read_real("options", "game_volume_music", 1);
//
//         global.game_volume_sound = ini_read_real("options", "game_volume_sound", 1);
//
//
// ini_close();
//
//
// // Famobi
// /*
//     var progression__game_tutorial_1 = famobi_localStorage_get("progression__game_tutorial_1");
//
//     show_debug_message("progression__game_tutorial_1: " + string(progression__game_tutorial_1));
//
//     if ( progression__game_tutorial_1 == undefined ){
//
//         famobi_localStorage_set("progression__game_tutorial_1",0);
//
//         var progression__game_tutorial_1 = famobi_localStorage_get("progression__game_tutorial_1");
//
//         show_debug_message("progression__game_tutorial_1: " + string(progression__game_tutorial_1));
//     }
//
//     game_tutorial_1 = progression__game_tutorial_1;
//
//     */
//
//         // Checkpoints
//         /*
//             game_mode_1_cppoint_025 = ini_read_real("progression", "game_mode_1_cppoint_025", 0); // 205
//
//             game_mode_1_cppoint_050 = ini_read_real("progression", "game_mode_1_cppoint_050", 0); // 050
//
//             game_mode_1_cppoint_075 = ini_read_real("progression", "game_mode_1_cppoint_075", 0); // 075
//
//             game_mode_1_cppoint_100 = ini_read_real("progression", "game_mode_1_cppoint_100", 0); // 100
//
//             game_mode_1_cppoint_125 = ini_read_real("progression", "game_mode_1_cppoint_125", 0); // 125
//
//             game_mode_1_cppoint_150 = ini_read_real("progression", "game_mode_1_cppoint_150", 0); // 150
//
//             game_mode_1_cppoint_175 = ini_read_real("progression", "game_mode_1_cppoint_175", 0); // 175
//
//             game_mode_1_cppoint_200 = ini_read_real("progression", "game_mode_1_cppoint_200", 0); // 200
//
//             game_mode_1_cppoint_225 = ini_read_real("progression", "game_mode_1_cppoint_225", 0); // 225
//
//             game_mode_1_cppoint_250 = ini_read_real("progression", "game_mode_1_cppoint_250", 0); // 250
//
//             game_mode_1_cppoint_275 = ini_read_real("progression", "game_mode_1_cppoint_275", 0); // 275
//         */
//
//
function gml_Script_scr_ini_progress_load(_inst, _other, argument0) {
    var gmlgame_mode = argument0;
    var gmlgame_submode = global.gmlgame_submode;
    // ini_open("savedata.ini");
    _inst.gmlgame_mode_1_hits_curr = 0;
    _inst.gmlgame_mode_1_hits_total = 0;
    _inst.gmlgame_mode_1_curr_level = 0;
    _inst.gmlgame_mode_1_cp = 0;
    _inst.gmlgame_hits_curr = 0;
    _inst.gmlgame_levels_curr = 1;
    _inst.gmlgame_levels_hits_total = 0;
    _inst.gmlgame_levels_hits_total_vis = _inst.gmlgame_levels_hits_total;
    _inst.gmlgame_mode_1_best_score = 0;
    _inst.gmlgame_mode_1_complete_score = 0;
    _inst.gmlgame_mode_1_complete = 0 ? 1 : 0;
    _inst.gmlgame_mode_1_new_record = 0 ? 1 : 0;
    if (!(_inst.gmlgame_mode_1_hits_curr instanceof Array)) {
        _inst.gmlgame_mode_1_hits_curr = [];
        _inst.gmlgame_mode_1_hits_curr.__yy_owner = 287211472;
    } else if (_inst.gmlgame_mode_1_hits_curr.__yy_owner !== 287211472) {
        _inst.gmlgame_mode_1_hits_curr = _inst.gmlgame_mode_1_hits_curr.slice(0);
        _inst.gmlgame_mode_1_hits_curr.__yy_owner = 287211472;
    }
    _inst.gmlgame_mode_1_hits_curr[1] = ini_read_real("progression", "game_mode_1_hits_curr_25h", 0);
    _inst.gmlgame_mode_1_hits_curr[2] = ini_read_real("progression", "game_mode_1_hits_curr_50h", 0);
    _inst.gmlgame_mode_1_hits_curr[3] = ini_read_real("progression", "game_mode_1_hits_curr_100h", 0);
    _inst.gmlgame_mode_1_hits_curr[4] = ini_read_real("progression", "game_mode_1_hits_curr_150h", 0);
    if (!(_inst.gmlgame_mode_1_hits_total instanceof Array)) {
        _inst.gmlgame_mode_1_hits_total = [];
        _inst.gmlgame_mode_1_hits_total.__yy_owner = 875966489;
    } else if (_inst.gmlgame_mode_1_hits_total.__yy_owner !== 875966489) {
        _inst.gmlgame_mode_1_hits_total = _inst.gmlgame_mode_1_hits_total.slice(0);
        _inst.gmlgame_mode_1_hits_total.__yy_owner = 875966489;
    }
    _inst.gmlgame_mode_1_hits_total[1] = ini_read_real("progression", "game_mode_1_hits_total_25h", 0);
    _inst.gmlgame_mode_1_hits_total[2] = ini_read_real("progression", "game_mode_1_hits_total_50h", 0);
    _inst.gmlgame_mode_1_hits_total[3] = ini_read_real("progression", "game_mode_1_hits_total_100h", 0);
    _inst.gmlgame_mode_1_hits_total[4] = ini_read_real("progression", "game_mode_1_hits_total_150h", 0);
    if (!(_inst.gmlgame_mode_1_hits_best instanceof Array)) {
        _inst.gmlgame_mode_1_hits_best = [];
        _inst.gmlgame_mode_1_hits_best.__yy_owner = 814005558;
    } else if (_inst.gmlgame_mode_1_hits_best.__yy_owner !== 814005558) {
        _inst.gmlgame_mode_1_hits_best = _inst.gmlgame_mode_1_hits_best.slice(0);
        _inst.gmlgame_mode_1_hits_best.__yy_owner = 814005558;
    }
    _inst.gmlgame_mode_1_hits_best[1] = ini_read_real("progression", "game_mode_1_hits_best_25h", 0);
    _inst.gmlgame_mode_1_hits_best[2] = ini_read_real("progression", "game_mode_1_hits_best_50h", 0);
    _inst.gmlgame_mode_1_hits_best[3] = ini_read_real("progression", "game_mode_1_hits_best_100h", 0);
    _inst.gmlgame_mode_1_hits_best[4] = ini_read_real("progression", "game_mode_1_hits_best_150h", 0);
    if (!(_inst.gmlgame_mode_1_curr_level instanceof Array)) {
        _inst.gmlgame_mode_1_curr_level = [];
        _inst.gmlgame_mode_1_curr_level.__yy_owner = 2643717481;
    } else if (_inst.gmlgame_mode_1_curr_level.__yy_owner !== 2643717481) {
        _inst.gmlgame_mode_1_curr_level = _inst.gmlgame_mode_1_curr_level.slice(0);
        _inst.gmlgame_mode_1_curr_level.__yy_owner = 2643717481;
    }
    _inst.gmlgame_mode_1_curr_level[1] = ini_read_real("progression", "game_mode_1_level_25h", 1);
    _inst.gmlgame_mode_1_curr_level[2] = ini_read_real("progression", "game_mode_1_level_50h", 1);
    _inst.gmlgame_mode_1_curr_level[3] = ini_read_real("progression", "game_mode_1_level_100h", 1);
    _inst.gmlgame_mode_1_curr_level[4] = ini_read_real("progression", "game_mode_1_level_150h", 1);
    if (!(_inst.gmlgame_mode_1_cp instanceof Array)) {
        _inst.gmlgame_mode_1_cp = [];
        _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
    } else if (_inst.gmlgame_mode_1_cp.__yy_owner !== 3932722578) {
        _inst.gmlgame_mode_1_cp = _inst.gmlgame_mode_1_cp.slice(0);
        _inst.gmlgame_mode_1_cp.__yy_owner = 3932722578;
    }
    array_set_2D(_inst.gmlgame_mode_1_cp, 1, 1, ini_read_real("progression", "game_mode_1_25h_025", 0));
    array_set_2D(_inst.gmlgame_mode_1_cp, 2, 1, ini_read_real("progression", "game_mode_1_50h_025", 0));
    array_set_2D(_inst.gmlgame_mode_1_cp, 2, 2, ini_read_real("progression", "game_mode_1_50h_050", 0));
    array_set_2D(_inst.gmlgame_mode_1_cp, 3, 1, ini_read_real("progression", "game_mode_1_100h_025", 0));
    array_set_2D(_inst.gmlgame_mode_1_cp, 3, 2, ini_read_real("progression", "game_mode_1_100h_050", 0));
    array_set_2D(_inst.gmlgame_mode_1_cp, 3, 3, ini_read_real("progression", "game_mode_1_100h_075", 0));
    array_set_2D(_inst.gmlgame_mode_1_cp, 3, 4, ini_read_real("progression", "game_mode_1_100h_100", 0));
    array_set_2D(_inst.gmlgame_mode_1_cp, 4, 1, ini_read_real("progression", "game_mode_1_150h_025", 0));
    array_set_2D(_inst.gmlgame_mode_1_cp, 4, 2, ini_read_real("progression", "game_mode_1_150h_050", 0));
    array_set_2D(_inst.gmlgame_mode_1_cp, 4, 3, ini_read_real("progression", "game_mode_1_150h_075", 0));
    array_set_2D(_inst.gmlgame_mode_1_cp, 4, 4, ini_read_real("progression", "game_mode_1_150h_100", 0));
    array_set_2D(_inst.gmlgame_mode_1_cp, 4, 5, ini_read_real("progression", "game_mode_1_150h_125", 0));
    array_set_2D(_inst.gmlgame_mode_1_cp, 4, 6, ini_read_real("progression", "game_mode_1_150h_150", 0));
    if ((gmlgame_mode == 1)) {
        {
            if (!(_inst.gmlgame_mode_1_max_level instanceof Array)) {
                _inst.gmlgame_mode_1_max_level = [];
                _inst.gmlgame_mode_1_max_level.__yy_owner = 1804178631;
            } else if (_inst.gmlgame_mode_1_max_level.__yy_owner !== 1804178631) {
                _inst.gmlgame_mode_1_max_level = _inst.gmlgame_mode_1_max_level.slice(0);
                _inst.gmlgame_mode_1_max_level.__yy_owner = 1804178631;
            }
            _inst.gmlgame_mode_1_max_level[1] = 25;
            _inst.gmlgame_mode_1_max_level[2] = 50;
            _inst.gmlgame_mode_1_max_level[3] = 100;
            _inst.gmlgame_mode_1_max_level[4] = 150;
            _inst.gmlgame_levels_max_level = _inst.gmlgame_mode_1_max_level[gmlgame_submode];
            _inst.gmlgame_levels_curr = _inst.gmlgame_mode_1_curr_level[gmlgame_submode];
            _inst.gmlgame_levels_hits_total = _inst.gmlgame_mode_1_hits_total[gmlgame_submode];
            _inst.gmlgame_levels_hits_total_vis = _inst.gmlgame_levels_hits_total;
            _inst.gmlgame_hits_curr = _inst.gmlgame_mode_1_hits_curr[gmlgame_submode];
            _inst.gmlgame_hits_curr_vis = _inst.gmlgame_hits_curr;
            _inst.gmlgame_mode_1_best_score = _inst.gmlgame_mode_1_hits_best[gmlgame_submode];
        };
    };
    _inst.gmlgame_mode_2_holes_record = ini_read_real("progression", "game_mode_2_holes_record", 0);
    _inst.gmlgame_mode_3_holes_record = ini_read_real("progression", "game_mode_3_holes_record", 0);
    _inst.gmlgame_mode_3_time_left = 60000;
    _inst.gmlgame_mode_3_time_add_max = 10000;
    _inst.gmlgame_mode_3_time_add_base = 12000;
    _inst.gmlgame_mode_3_time_add = 0;
    _inst.gmlgame_mode_4_holes_record = ini_read_real("progression", "game_mode_4_holes_record", 0);
    _inst.gmlgame_mode_4_balls_max = 10;
    _inst.gmlgame_mode_4_balls_left = _inst.gmlgame_mode_4_balls_max;
    _inst.gmlgame_tutorial_1 = ini_read_real("progression", "game_tutorial_1", 0);
    global.gmlgame_lang = ini_read_real("options", "game_lang", 0);
    global.gmlgame_volume_music = ini_read_real("options", "game_volume_music", 1);
    global.gmlgame_volume_sound = ini_read_real("options", "game_volume_sound", 1);
    ini_close();
}

// #####################################################################################################
// /// scr_ini_progress_save(game_mode)
//
// var game_mode = argument0;
// var game_submode = global.game_submode;
//
// ini_open("savedata.ini");
//
//     if ( game_mode == 1 ){
//     // Neon Courses
//
//         // ini_write_real("progression", "game_levels_curr", game_levels_curr);
//
//         // ini_write_real("progression", "game_levels_hits_total", game_levels_hits_total);
//
//         // ini_write_real("progression", "game_levels_hits_curr", game_hits_curr);
//
//         // ini_write_real("progression", "game_mode_1_best_score", game_mode_1_best_score);
//
//
//         if ( game_submode == 1 ){
//
//             ini_write_real("progression", "game_mode_1_level_25h", game_mode_1_curr_level[1]); // 25h : Current Level
//             ini_write_real("progression", "game_mode_1_hits_curr_25h", game_mode_1_hits_curr[1]); // 25h : Hits Current
//             ini_write_real("progression", "game_mode_1_hits_total_25h", game_mode_1_hits_total[1]); // 25h : Hits Total
//             ini_write_real("progression", "game_mode_1_hits_best_25h", game_mode_1_hits_best[1]); // 25h : Hits Best
//
//             ini_write_real("progression", "game_mode_1_25h_025", game_mode_1_cp[1,1]); // 25h : Checkpoints
//         }
//         else if ( game_submode == 2 ){
//
//             ini_write_real("progression", "game_mode_1_level_50h", game_mode_1_curr_level[2]); // 50h : Current Level
//             ini_write_real("progression", "game_mode_1_hits_curr_50h", game_mode_1_hits_curr[2]); // 50h : Hits Current
//             ini_write_real("progression", "game_mode_1_hits_total_50h", game_mode_1_hits_total[2]); // 50h : Hits Total
//             ini_write_real("progression", "game_mode_1_hits_best_50h", game_mode_1_hits_best[2]); // 50h : Hits Best
//
//             ini_write_real("progression", "game_mode_1_50h_025", game_mode_1_cp[2,1]); // 50h : Checkpoints
//             ini_write_real("progression", "game_mode_1_50h_050", game_mode_1_cp[2,2]);
//         }
//         else if ( game_submode == 3 ){
//
//             ini_write_real("progression", "game_mode_1_level_100h", game_mode_1_curr_level[3]); // 100h : Current Level
//             ini_write_real("progression", "game_mode_1_hits_curr_100h", game_mode_1_hits_curr[3]); // 100h : Hits Current
//             ini_write_real("progression", "game_mode_1_hits_total_100h", game_mode_1_hits_total[3]); // 100h : Hits Total
//             ini_write_real("progression", "game_mode_1_hits_best_100h", game_mode_1_hits_best[3]); // 100h : Hits Best
//
//             ini_write_real("progression", "game_mode_1_100h_025", game_mode_1_cp[3,1]); // 100h : Checkpoints
//             ini_write_real("progression", "game_mode_1_100h_050", game_mode_1_cp[3,2]);
//             ini_write_real("progression", "game_mode_1_100h_075", game_mode_1_cp[3,3]);
//             ini_write_real("progression", "game_mode_1_100h_100", game_mode_1_cp[3,4]);
//         }
//         else if ( game_submode == 4 ){
//
//             ini_write_real("progression", "game_mode_1_level_150h", game_mode_1_curr_level[4]); // 150h : Current Level
//             ini_write_real("progression", "game_mode_1_hits_curr_150h", game_mode_1_hits_curr[4]); // 150h : Hits Current
//             ini_write_real("progression", "game_mode_1_hits_total_150h", game_mode_1_hits_total[4]); // 150h : Hits Total
//             ini_write_real("progression", "game_mode_1_hits_best_150h", game_mode_1_hits_best[4]); // 150h : Hits Best
//
//             ini_write_real("progression", "game_mode_1_150h_025", game_mode_1_cp[4,1]); // 150h : Checkpoints
//             ini_write_real("progression", "game_mode_1_150h_050", game_mode_1_cp[4,2]);
//             ini_write_real("progression", "game_mode_1_150h_075", game_mode_1_cp[4,3]);
//             ini_write_real("progression", "game_mode_1_150h_100", game_mode_1_cp[4,4]);
//             ini_write_real("progression", "game_mode_1_150h_125", game_mode_1_cp[4,5]);
//             ini_write_real("progression", "game_mode_1_150h_150", game_mode_1_cp[4,6]);
//         }
//
//         /*
//         ini_write_real("progression", "game_mode_1_cppoint_025", game_mode_1_cppoint_025);
//
//         ini_write_real("progression", "game_mode_1_cppoint_050", game_mode_1_cppoint_050);
//
//         ini_write_real("progression", "game_mode_1_cppoint_075", game_mode_1_cppoint_075);
//
//         ini_write_real("progression", "game_mode_1_cppoint_100", game_mode_1_cppoint_100);
//
//         ini_write_real("progression", "game_mode_1_cppoint_125", game_mode_1_cppoint_125);
//
//         ini_write_real("progression", "game_mode_1_cppoint_150", game_mode_1_cppoint_150);
//
//         ini_write_real("progression", "game_mode_1_cppoint_175", game_mode_1_cppoint_175);
//
//         ini_write_real("progression", "game_mode_1_cppoint_200", game_mode_1_cppoint_200);
//
//         ini_write_real("progression", "game_mode_1_cppoint_225", game_mode_1_cppoint_225);
//
//         ini_write_real("progression", "game_mode_1_cppoint_250", game_mode_1_cppoint_250);
//
//         ini_write_real("progression", "game_mode_1_cppoint_275", game_mode_1_cppoint_275);
//         */
//     }
//     else if ( game_mode == 2 ){
//     // Hole in One
//
//         ini_write_real("progression", "game_mode_2_holes_record", obj_ctrl_board.game_mode_2_holes_record); // Holes Record
//     }
//     else if ( game_mode == 3 ){
//     // Just in Time
//
//         ini_write_real("progression", "game_mode_3_holes_record", obj_ctrl_board.game_mode_3_holes_record); // Holes Record
//     }
//     else if ( game_mode == 4 ){
//     // Don't Run Out
//
//         ini_write_real("progression", "game_mode_4_holes_record", obj_ctrl_board.game_mode_4_holes_record); // Holes Record
//     }
//
// ini_close();
//
//
function gml_Script_scr_ini_progress_save(_inst, _other, argument0) {
    var gmlgame_mode = argument0;
    var gmlgame_submode = global.gmlgame_submode;
    // ini_open("savedata.ini");
    if ((gmlgame_mode == 1)) {
        {
            if ((gmlgame_submode == 1)) {
                {
                    ini_write_real("progression", "game_mode_1_level_25h", _inst.gmlgame_mode_1_curr_level[1]);
                    ini_write_real("progression", "game_mode_1_hits_curr_25h", _inst.gmlgame_mode_1_hits_curr[1]);
                    ini_write_real("progression", "game_mode_1_hits_total_25h", _inst.gmlgame_mode_1_hits_total[1]);
                    ini_write_real("progression", "game_mode_1_hits_best_25h", _inst.gmlgame_mode_1_hits_best[1]);
                    ini_write_real("progression", "game_mode_1_25h_025", _inst.gmlgame_mode_1_cp[1][1]);
                };
            } else {
                if ((gmlgame_submode == 2)) {
                    {
                        ini_write_real("progression", "game_mode_1_level_50h", _inst.gmlgame_mode_1_curr_level[2]);
                        ini_write_real("progression", "game_mode_1_hits_curr_50h", _inst.gmlgame_mode_1_hits_curr[2]);
                        ini_write_real("progression", "game_mode_1_hits_total_50h", _inst.gmlgame_mode_1_hits_total[2]);
                        ini_write_real("progression", "game_mode_1_hits_best_50h", _inst.gmlgame_mode_1_hits_best[2]);
                        ini_write_real("progression", "game_mode_1_50h_025", _inst.gmlgame_mode_1_cp[2][1]);
                        ini_write_real("progression", "game_mode_1_50h_050", _inst.gmlgame_mode_1_cp[2][2]);
                    };
                } else {
                    if ((gmlgame_submode == 3)) {
                        {
                            ini_write_real("progression", "game_mode_1_level_100h", _inst.gmlgame_mode_1_curr_level[3]);
                            ini_write_real("progression", "game_mode_1_hits_curr_100h", _inst.gmlgame_mode_1_hits_curr[3]);
                            ini_write_real("progression", "game_mode_1_hits_total_100h", _inst.gmlgame_mode_1_hits_total[3]);
                            ini_write_real("progression", "game_mode_1_hits_best_100h", _inst.gmlgame_mode_1_hits_best[3]);
                            ini_write_real("progression", "game_mode_1_100h_025", _inst.gmlgame_mode_1_cp[3][1]);
                            ini_write_real("progression", "game_mode_1_100h_050", _inst.gmlgame_mode_1_cp[3][2]);
                            ini_write_real("progression", "game_mode_1_100h_075", _inst.gmlgame_mode_1_cp[3][3]);
                            ini_write_real("progression", "game_mode_1_100h_100", _inst.gmlgame_mode_1_cp[3][4]);
                        };
                    } else {
                        if ((gmlgame_submode == 4)) {
                            {
                                ini_write_real("progression", "game_mode_1_level_150h", _inst.gmlgame_mode_1_curr_level[4]);
                                ini_write_real("progression", "game_mode_1_hits_curr_150h", _inst.gmlgame_mode_1_hits_curr[4]);
                                ini_write_real("progression", "game_mode_1_hits_total_150h", _inst.gmlgame_mode_1_hits_total[4]);
                                ini_write_real("progression", "game_mode_1_hits_best_150h", _inst.gmlgame_mode_1_hits_best[4]);
                                ini_write_real("progression", "game_mode_1_150h_025", _inst.gmlgame_mode_1_cp[4][1]);
                                ini_write_real("progression", "game_mode_1_150h_050", _inst.gmlgame_mode_1_cp[4][2]);
                                ini_write_real("progression", "game_mode_1_150h_075", _inst.gmlgame_mode_1_cp[4][3]);
                                ini_write_real("progression", "game_mode_1_150h_100", _inst.gmlgame_mode_1_cp[4][4]);
                                ini_write_real("progression", "game_mode_1_150h_125", _inst.gmlgame_mode_1_cp[4][5]);
                                ini_write_real("progression", "game_mode_1_150h_150", _inst.gmlgame_mode_1_cp[4][6]);
                            };
                        };
                    };
                };
            };
        };
    } else {
        if ((gmlgame_mode == 2)) {
            {
                ini_write_real("progression", "game_mode_2_holes_record", yyInst(2).gmlgame_mode_2_holes_record);
            };
        } else {
            if ((gmlgame_mode == 3)) {
                {
                    ini_write_real("progression", "game_mode_3_holes_record", yyInst(2).gmlgame_mode_3_holes_record);
                };
            } else {
                if ((gmlgame_mode == 4)) {
                    {
                        ini_write_real("progression", "game_mode_4_holes_record", yyInst(2).gmlgame_mode_4_holes_record);
                    };
                };
            };
        };
    };
    ini_close();
}

// #####################################################################################################
// /// scr_ini_progress_save_sml(game_mode)
//
// var game_mode = argument0;
// var game_submode = global.game_submode;
//
// ini_open("savedata.ini");
//
//     if ( game_mode == 1 ){
//     // Neon Courses
//
//         if ( game_submode == 1 ){
//         // 25h
//
//             ini_write_real("progression", "game_mode_1_hits_curr_25h", game_mode_1_hits_curr[1]); // 25h : Hits Current
//         }
//         else if ( game_submode == 2 ){
//         // 50h
//
//             ini_write_real("progression", "game_mode_1_hits_curr_50h", game_mode_1_hits_curr[2]); // 50h : Hits Current
//         }
//         else if ( game_submode == 3 ){
//         // 100h
//
//             ini_write_real("progression", "game_mode_1_hits_curr_100h", game_mode_1_hits_curr[3]); // 100h : Hits Current
//         }
//         else if ( game_submode == 4 ){
//         // 150h
//
//            ini_write_real("progression", "game_mode_1_hits_curr_150h", game_mode_1_hits_curr[4]); // 150h : Hits Current
//         }
//     }
//     else if ( game_mode == 2 ){
//     // Hole in One
//
//
//     }
//     else if ( game_mode == 3 ){
//     // Just in Time
//
//
//     }
//     else if ( game_mode == 4 ){
//     // Don't Run Out
//
//
//     }
//
// ini_close();
//
//
function gml_Script_scr_ini_progress_save_sml(_inst, _other, argument0) {
    var gmlgame_mode = argument0;
    var gmlgame_submode = global.gmlgame_submode;
    // ini_open("savedata.ini");
    if ((gmlgame_mode == 1)) {
        {
            if ((gmlgame_submode == 1)) {
                {
                    ini_write_real("progression", "game_mode_1_hits_curr_25h", _inst.gmlgame_mode_1_hits_curr[1]);
                };
            } else {
                if ((gmlgame_submode == 2)) {
                    {
                        ini_write_real("progression", "game_mode_1_hits_curr_50h", _inst.gmlgame_mode_1_hits_curr[2]);
                    };
                } else {
                    if ((gmlgame_submode == 3)) {
                        {
                            ini_write_real("progression", "game_mode_1_hits_curr_100h", _inst.gmlgame_mode_1_hits_curr[3]);
                        };
                    } else {
                        if ((gmlgame_submode == 4)) {
                            {
                                ini_write_real("progression", "game_mode_1_hits_curr_150h", _inst.gmlgame_mode_1_hits_curr[4]);
                            };
                        };
                    };
                };
            };
        };
    } else {
        if ((gmlgame_mode == 2)) {
            {};
        } else {
            if ((gmlgame_mode == 3)) {
                {};
            } else {
                if ((gmlgame_mode == 4)) {
                    {};
                };
            };
        };
    };
    ini_close();
}

// #####################################################################################################
// /// scr_level_height()
//
//     floor_point_lowest_y = -100000;
//     floor_point_highest_y = 100000;
//
//     for ( i=0; i<=line_count; i+=1 ){
//
//         // highest
//         if ( line_y1[i] > floor_point_lowest_y ){ floor_point_lowest_y = line_y1[i]; }
//         if ( line_y2[i] > floor_point_lowest_y ){ floor_point_lowest_y = line_y2[i]; }
//
//         // lowest
//         if ( line_y1[i] < floor_point_highest_y ){ floor_point_highest_y = line_y1[i]; }
//         if ( line_y2[i] < floor_point_highest_y ){ floor_point_highest_y = line_y2[i]; }
//     }
//
//
function gml_Script_scr_level_height(_inst, _other) {
    _inst.gmlfloor_point_lowest_y = (-100000);
    _inst.gmlfloor_point_highest_y = 100000;
    for (_inst.gmli = 0;
        (_inst.gmli <= _inst.gmlline_count); _inst.gmli += 1) {
        {
            if ((_inst.gmlline_y1[_inst.gmli] > _inst.gmlfloor_point_lowest_y)) {
                {
                    _inst.gmlfloor_point_lowest_y = _inst.gmlline_y1[_inst.gmli];
                };
            };
            if ((_inst.gmlline_y2[_inst.gmli] > _inst.gmlfloor_point_lowest_y)) {
                {
                    _inst.gmlfloor_point_lowest_y = _inst.gmlline_y2[_inst.gmli];
                };
            };
            if ((_inst.gmlline_y1[_inst.gmli] < _inst.gmlfloor_point_highest_y)) {
                {
                    _inst.gmlfloor_point_highest_y = _inst.gmlline_y1[_inst.gmli];
                };
            };
            if ((_inst.gmlline_y2[_inst.gmli] < _inst.gmlfloor_point_highest_y)) {
                {
                    _inst.gmlfloor_point_highest_y = _inst.gmlline_y2[_inst.gmli];
                };
            };
        }
    };
}

// #####################################################################################################
// /// scr_fps_check(win_h,win_h_base);
//
// var win_h = argument0;
// var win_h_base = argument1;
//
// if (( global.platform_config == 1 ) and ( win_h < win_h_base )){
// // Browser
//
//     global.game_lowres = true;
// }
// else {
//
//     global.game_lowres = false;
// }
//
//
function gml_Script_scr_lowres_check(_inst, _other, argument0, argument1) {
    var gmlwin_h = argument0;
    var gmlwin_h_base = argument1;
    if ((((global.gmlplatform_config == 1)) && ((gmlwin_h < gmlwin_h_base)))) {
        {
            global.gmlgame_lowres = 1 ? 1 : 0;
        };
    } else {
        {
            global.gmlgame_lowres = 0 ? 1 : 0;
        };
    };
}

// #####################################################################################################
// /// scr_menu_horizon();
//
// return ( floor( world_height_board * 0.5 ) - 100 ) * draw_w_ratio;
//
//
function gml_Script_scr_menu_horizon_y(_inst, _other) {
    return ((floor((_inst.gmlworld_height_board * 0.5)) - 100) * _inst.gmldraw_w_ratio);
}

// #####################################################################################################
// /// scr_play_music(song,priority,loop,volume)
//
// var scr_song = argument0;
// var scr_priority = argument1;
// var scr_loop = argument2;
// var scr_volume = argument3;
//
// var music_id = audio_play_sound(scr_song,scr_priority,scr_loop);
//
// audio_sound_gain(music_id,( global.game_volume_music * scr_volume ),0);
//
// return music_id;
//
//
function gml_Script_scr_play_music(_inst, _other, argument0, argument1, argument2, argument3) {
    var gmlscr_song = argument0;
    var gmlscr_priority = argument1;
    var gmlscr_loop = argument2;
    var gmlscr_volume = argument3;
    var gmlmusic_id = audio_play_sound(gmlscr_song, gmlscr_priority, gmlscr_loop);
    audio_sound_gain(gmlmusic_id, (global.gmlgame_volume_music * gmlscr_volume), 0);
    return gmlmusic_id;
}

// #####################################################################################################
// /// scr_play_sound(sound,priority,loop)
//
// var scr_sound = argument0;
// var scr_priority = argument1;
// var scr_loop = argument2;
//
// var sound_id = audio_play_sound(scr_sound,scr_priority,scr_loop);
//
// audio_sound_gain(sound_id,global.game_volume_sound,0);
//
// return sound_id;
//
//
function gml_Script_scr_play_sound(_inst, _other, argument0, argument1, argument2) {
    var gmlscr_sound = argument0;
    var gmlscr_priority = argument1;
    var gmlscr_loop = argument2;
    var gmlsound_id = audio_play_sound(gmlscr_sound, gmlscr_priority, gmlscr_loop);
    audio_sound_gain(gmlsound_id, global.gmlgame_volume_sound, 0);
    return gmlsound_id;
}

// #####################################################################################################
// /// scr_power_of_two_get(number);
//
// var number = argument0;
// var power_found = false;
// var curr_power = 2;
//
// while ( !power_found ){
//
//     if ( number < curr_power ){ power_found = true; }
//     else { curr_power = curr_power * 2; }
// }
//
// return curr_power;
//
//
function gml_Script_scr_power_of_two_convert(_inst, _other, argument0) {
    var gmlnumber = argument0;
    var gmlpower_found = 0 ? 1 : 0;
    var gmlcurr_power = 2;
    while (!(gmlpower_found > 0.5)) {
        {
            if ((gmlnumber < gmlcurr_power)) {
                {
                    gmlpower_found = 1 ? 1 : 0;
                };
            } else {
                {
                    gmlcurr_power = (gmlcurr_power * 2);
                };
            };
        }
    };
    return gmlcurr_power;
}

// #####################################################################################################
// /// scr_rgb_to_hsv(r,g,b)
//
//     /*
//     **  Usage:
//     **      rgb_to_hsv(r,g,b,var_hue,var_sat,var_val)
//     **
//     **  Arguments:
//     **      r,g,b       the red, green, and blue components of an RGB color, reals[0-255]
//     **      var_hue     local variable name to store the hue in, string
//     **      var_sat     local variable name to store the saturation in, string
//     **      var_val     local variable name to store the value in, string
//     **
//     **  Notes:
//     **      Rather than return a value, this sets the values of local variables
//     **
//     */
//
//     var a,b,c,d;
//     d = make_color_rgb(argument0,argument1,argument2);
//     a = color_get_hue(d);
//     b = color_get_saturation(d);
//     c = color_get_value(d);
//
//     cHue = a;
//     cSat = b;
//     cValue = c;
//
//
function gml_Script_scr_rgb_to_hsv(_inst, _other, argument0, argument1, argument2) {
    var gmla, gmlb, gmlc, gmld;
    gmld = make_color_rgb(argument0, argument1, argument2);
    gmla = color_get_hue(gmld);
    gmlb = color_get_saturation(gmld);
    gmlc = color_get_value(gmld);
    _inst.gmlcHue = gmla;
    _inst.gmlcSat = gmlb;
    _inst.gmlcValue = gmlc;
}

// #####################################################################################################
// /// scr_screen_init(first_run);
//
// /*
//     // TERMS //
//
//     display_w = tamaño maximo que puede ser el juego ( PC: monitor, html5: browser window )
//
//     window_w = tamaño de la ventana del juego ( window_w = gui_w = port_w = canvas_w )
//
//     view_w = tamaño del espacio que se dibuja del juego
//
//     board_w = tamaño del juego donde se calcula la fisica
// */
//
// // Screen Init
//
// var first_run = argument0;
//
// if ( os_browser == browser_not_a_browser ){
//
//     var keep_base_ratio = true;
//
//     // browser
//     var display_w = display_get_width();
//     var display_h = display_get_height();
//
//     // window
//     var win_w = 0; // also: gui_w
//     var win_h = 0; // also: gui_h
//
//     // view
//     var view_w = 0;
//     var view_h = 0;
//
//     // room ( board ): 480 x 320
//     var board_w = 480;
//     var board_h = 270; // 270;
//
//     // window base: 960 x 640
//     var win_w_base = 960; // 960;
//     var win_h_base = 540; // 540;
//
//     // global.game_lowres = false;
//
//     if ( first_run ){  }
//
//     /* if ( first_run ){
//
//         // room ( board ): 480 x 320
//         var board_w = 480;
//         var board_h = 320;
//
//         // window base: 960 x 640
//         var win_w_base = 960;
//         var win_h_base = 640;
//
//         /*
//         // room(board): 480 x 320
//         // global.board_w = 480;
//         // global.board_h = 320;
//
//         // window: 960 x 640
//         // global.win_w_base = 960; // 960;
//         // global.win_h_base = 640; // 640;
//     }*/
//
//     if ( window_get_fullscreen() ){
//
//         /* var display_ratio = ( board_w / board_h );
//
//         win_h = display_get_height();
//         win_w = floor( win_h * display_ratio ); */
//
//         win_w = display_get_width();
//         win_h = display_get_height();
//     }
//     else {
//
//         if ( os_type == os_windows ){
//
//             win_w = win_w_base;
//             win_h = win_h_base;
//         }
//         else if (( os_type == os_android ) or ( os_type == os_winphone )){
//
//             win_w = display_get_width();
//             win_h = display_get_height();
//         }
//     }
//
//     // if (( global.platform_config == 1 ) and ( win_h < win_h_base )){ global.game_lowres = true; }
//
//     view_w = win_w;
//     view_h = win_h;
//
//     if ((( first_run ) and ( win_w < win_w_base )) or ( keep_base_ratio )){
//
//         var display_h_ratio = ( win_h / win_w ); // 0.5625 (1080p)
//
//         view_w = win_w_base;
//         view_h = view_w * display_h_ratio;
//     }
//
//     room_set_view(room_first_load, 0, 1, 0, 0, view_w, view_h, 0, 0, win_w, win_h, 0, 0, -1, -1, -1);
//
//     room_set_view(room_main, 0, 1, 0, 0, view_w, view_h, 0, 0, win_w, win_h, 0, 0, -1, -1, -1);
//
//     room_set_view(room_game, 0, 1, 0, 0, view_w, view_h, 0, 0, win_w, win_h, 0, 0, -1, -1, -1);
//
//     display_set_gui_size(win_w, win_h);
//
//     window_set_size(win_w, win_h);
//
//     surface_resize(application_surface, win_w, win_h);
//
//     // Globals
//
//         global.board_w = board_w;
//         global.board_h = board_h;
//
//         global.view_w = view_w;
//         global.view_h = view_h;
//
//         global.win_w = win_w; // also: gui_w
//         global.win_h = win_h; // also: gui_h
//
//         global.display_ratio = ( view_w / board_w );
//
//     scr_lowres_check(global.win_h,win_h_base);
// }
// else {
//
//     if ( first_run ) or ( instance_exists(obj_ctrl_html5) == 0 ){
//
//         instance_create(0,0,obj_ctrl_html5);
//     }
// }
//
// /*
// show_debug_message("1");
// show_debug_message("view_wview[0]: " + string(view_wview[0]));
// show_debug_message("view_hview[0]: " + string(view_hview[0]));
// show_debug_message("view_wport[0]: " + string(view_wport[0]));
// show_debug_message("view_hport[0]: " + string(view_hport[0]));
// show_debug_message("win_w: " + string(window_get_width()));
// show_debug_message("win_h: " + string(window_get_height()));
// */
//
//
function gml_Script_scr_screen_init(_inst, _other, argument0) {
    var gmlfirst_run = argument0;
    if ((g_pBuiltIn.get_os_browser() == (-1))) {
        {
            var gmlkeep_base_ratio = 1 ? 1 : 0;
            var gmldisplay_w = display_get_width();
            var gmldisplay_h = display_get_height();
            var gmlwin_w = 0;
            var gmlwin_h = 0;
            var gmlview_w = 0;
            var gmlview_h = 0;
            var gmlboard_w = 480;
            var gmlboard_h = 270;
            var gmlwin_w_base = 960;
            var gmlwin_h_base = 540;
            if (gmlfirst_run > 0.5) {
                {};
            };
            if (window_get_fullscreen() > 0.5) {
                {
                    gmlwin_w = display_get_width();
                    gmlwin_h = display_get_height();
                };
            } else {
                {
                    if ((g_pBuiltIn.get_os_type() == 0)) {
                        {
                            gmlwin_w = gmlwin_w_base;
                            gmlwin_h = gmlwin_h_base;
                        };
                    } else {
                        if ((((g_pBuiltIn.get_os_type() == 4)) || ((g_pBuiltIn.get_os_type() == 7)))) {
                            {
                                gmlwin_w = display_get_width();
                                gmlwin_h = display_get_height();
                            };
                        };
                    };
                };
            };
            gmlview_w = gmlwin_w;
            gmlview_h = gmlwin_h;
            if (((((gmlfirst_run > 0.5) && ((gmlwin_w < gmlwin_w_base)))) || (gmlkeep_base_ratio > 0.5))) {
                {
                    var gmldisplay_h_ratio = (gmlwin_h / gmlwin_w);
                    gmlview_w = gmlwin_w_base;
                    gmlview_h = (gmlview_w * gmldisplay_h_ratio);
                };
            };
            room_set_view(0, 0, 1, 0, 0, gmlview_w, gmlview_h, 0, 0, gmlwin_w, gmlwin_h, 0, 0, (-1), (-1), (-1));
            room_set_view(1, 0, 1, 0, 0, gmlview_w, gmlview_h, 0, 0, gmlwin_w, gmlwin_h, 0, 0, (-1), (-1), (-1));
            room_set_view(3, 0, 1, 0, 0, gmlview_w, gmlview_h, 0, 0, gmlwin_w, gmlwin_h, 0, 0, (-1), (-1), (-1));
            display_set_gui_size(gmlwin_w, gmlwin_h);
            window_set_size(gmlwin_w, gmlwin_h);
            surface_resize(g_pBuiltIn.application_surface, gmlwin_w, gmlwin_h);
            global.gmlboard_w = gmlboard_w;
            global.gmlboard_h = gmlboard_h;
            global.gmlview_w = gmlview_w;
            global.gmlview_h = gmlview_h;
            global.gmlwin_w = gmlwin_w;
            global.gmlwin_h = gmlwin_h;
            global.gmldisplay_ratio = (gmlview_w / gmlboard_w);
            gml_Script_scr_lowres_check(_inst, _other, global.gmlwin_h, gmlwin_h_base);
        };
    } else {
        {
            if (((gmlfirst_run > 0.5) || ((instance_exists(3) == 0)))) {
                {
                    instance_create(0, 0, 3);
                };
            };
        };
    };
}

// #####################################################################################################
// /// scr_screen_set(screen_type);
//
// screen_type = argument0;
//
// screen_title = "";
// screen_desc = "";
//
// btn_title = 0;
//
// // Button: Back
// btn_back_x1 = 10; // ( floor( world_width_draw / 2 ) - 481 ) + 10;
// btn_back_y1 = 10;// ( floor( world_height_draw / 2 ) - 271 ) + 10;
// btn_back_x2 = btn_back_x1 + 90;
// btn_back_y2 = btn_back_y1 + 90;
//
// desc_bg_x = (( world_width_draw / 2 ) + 179 );
// desc_bg_y = (( world_height_draw / 2 ) );
//
// if ( screen_type == 1 ){
//
//     var btn_id = 0;
//
//     /*
//     btn_title[btn_id] = lang_text_menu_main[3]; // "CREDITS"
//     btn_w[btn_id] = 200;
//     btn_h[btn_id] = 50;
//     btn_x[btn_id] = ( world_width_draw / 2 );
//     btn_y[btn_id] = (( world_height_draw / 2 ) + ( 14 * draw_h_ratio ));
//     btn_action[btn_id] = 28;
//     btn_active[btn_id] = false;
//     btn_align[btn_id] = fa_center;
//
//     btn_id += 1;
//
//     btn_title[btn_id] = lang_text_menu_main[1]; // "OPTIONS"
//     btn_w[btn_id] = 200;
//     btn_h[btn_id] = 50;
//     btn_x[btn_id] = ( world_width_draw / 2 );
//     btn_y[btn_id] = btn_y[btn_id-1] + btn_h[btn_id] + ( 10 * draw_h_ratio );
//     btn_action[btn_id] = 2;
//     btn_active[btn_id] = false;
//     btn_align[btn_id] = fa_center;
//
//     btn_id += 1;
//
//     btn_title[btn_id] = lang_text_menu_main[0]; // "PLAY GAME"
//     btn_w[btn_id] = 200;
//     btn_h[btn_id] = 50;
//     btn_x[btn_id] = ( world_width_draw / 2 );
//     btn_y[btn_id] = btn_y[btn_id-1] + btn_h[btn_id] + ( 10 * draw_h_ratio );
//     btn_action[btn_id] = 1;
//     btn_active[btn_id] = false;
//     btn_align[btn_id] = fa_center;
//
//     btn_id += 1;
//     */
//
//     btn_title[btn_id] = ""; // "PLAY GAME" -- lang_text_menu_main[0]
//     btn_w[btn_id] = 181;
//     btn_h[btn_id] = 181;
//     btn_x[btn_id] = ( world_width_draw / 2 );
//     btn_y[btn_id] = (( world_height_draw / 2 ) + ( 16 * draw_h_ratio ));
//     btn_action[btn_id] = 1;
//     btn_active[btn_id] = false;
//     btn_align[btn_id] = fa_center;
//
//     btn_id += 1;
//
//     btn_title[btn_id] = ""; // "OPTIONS" -- lang_text_menu_main[1]
//     btn_w[btn_id] = 101;
//     btn_h[btn_id] = 101;
//     btn_x[btn_id] = ( world_width_draw / 2 ) + 160;
//     btn_y[btn_id] = btn_y[btn_id-1] + 46;
//     btn_action[btn_id] = 2;
//     btn_active[btn_id] = false;
//     btn_align[btn_id] = fa_center;
//
//     btn_id += 1;
//
//     btn_title[btn_id] = ""; // "MUTE" -- lang_text_menu_main[3]
//     btn_w[btn_id] = 101;
//     btn_h[btn_id] = 101;
//     btn_x[btn_id] = ( world_width_draw / 2 ) - 160;
//     btn_y[btn_id] = btn_y[btn_id-1];
//     btn_action[btn_id] = 27;
//     btn_active[btn_id] = false;
//     btn_align[btn_id] = fa_center;
//
//     btn_id += 1;
//
//     btn_title[btn_id] = ""; // "INFO" -- lang_text_menu_main[3]
//     btn_w[btn_id] = 91;
//     btn_h[btn_id] = 91;
//     btn_x[btn_id] = floor( btn_w[btn_id] / 2 ) + 10;
//     btn_y[btn_id] = world_height_draw - btn_h[btn_id] - 10;
//     btn_action[btn_id] = 28;
//     btn_active[btn_id] = false;
//     btn_align[btn_id] = fa_center;
//
//     btn_id += 1;
//
//     if ( os_browser == browser_not_a_browser ){
//
//         btn_title[btn_id] = lang_text_menu_main[2]; // "EXIT GAME"
//         btn_w[btn_id] = 150;
//         btn_h[btn_id] = 50;
//         btn_x[btn_id] = ( world_width_draw - 60 );
//         btn_y[btn_id] = 10; // (( world_height_draw ) - 100 ); // ( world_height_draw / 2 ) + 150;
//         btn_action[btn_id] = 3;
//         btn_active[btn_id] = false;
//         btn_align[btn_id] = fa_center;
//     }
// }
// else if (( screen_type == 2 ) or ( screen_type == 3 ) or ( screen_type == 4 ) or ( screen_type == 5 ) or ( screen_type == 6 ) or ( screen_type == 7 )){
//
//     screen_title = lang_text_modes[0]; // "GAME MODES"
//     screen_desc_align = fa_center;
//
//     var btn_x_center = (( world_width_draw / 2 ) - 240 );
//     var btn_y_center = (( world_height_draw / 2 ) + 30 );
//
//     btn_title[0] = "25 HOLES"; // "25 HOLES"
//     btn_w[0] = 240;
//     btn_h[0] = 70;
//     btn_x[0] = btn_x_center;
//     btn_y[0] = btn_y_center - ( btn_h[0] / 2 ) - (( btn_h[0] + 6 ) * 2 ) - 20;
//     btn_action[0] = 15;
//     btn_active[0] = false;
//     btn_align[0] = fa_center;
//
//     btn_title[1] = "50 HOLES"; // "50 HOLES"
//     btn_w[1] = 240;
//     btn_h[1] = 70;
//     btn_x[1] = btn_x_center;
//     btn_y[1] = btn_y_center - ( btn_h[1] / 2 ) - (( btn_h[1] + 6 ) * 1 ) - 10;
//     btn_action[1] = 16;
//     btn_active[1] = false;
//     btn_align[1] = fa_center;
//
//     btn_title[2] = "100 HOLES"; // "100 HOLES"
//     btn_w[2] = 240;
//     btn_h[2] = 70;
//     btn_x[2] = btn_x_center;
//     btn_y[2] = btn_y_center - ( btn_h[2] / 2 );
//     btn_action[2] = 17;
//     btn_active[2] = false;
//     btn_align[2] = fa_center;
//
//     btn_title[3] = scr_game_mode_name(2); // "HOLE-IN-ONE"
//     btn_w[3] = 240;
//     btn_h[3] = 70;
//     btn_x[3] = btn_x_center;
//     btn_y[3] = btn_y_center - ( btn_h[3] / 2 ) + (( btn_h[3] + 6 ) * 1 ) + 10;
//     btn_action[3] = 5;
//     btn_active[3] = false;
//     btn_align[3] = fa_center;
//
//     btn_title[4] = scr_game_mode_name(5); // "PRACTICE"
//     btn_w[4] = 240;
//     btn_h[4] = 70;
//     btn_x[4] = btn_x_center;
//     btn_y[4] = btn_y_center - ( btn_h[4] / 2 ) + (( btn_h[4] + 6 ) * 2 ) + 20;
//     btn_action[4] = 9;
//     btn_active[4] = false;
//     btn_align[4] = fa_center;
//
//     desc_x = desc_bg_x;
//     desc_y = desc_bg_y - 75 - 60; // (( world_height_draw / 2 ) - 80 );
//
//     btn_title[5] = ""; // PLAY
//     btn_w[5] = 113;
//     btn_h[5] = 108;
//     btn_x[5] = desc_bg_x + 72;
//     btn_y[5] = desc_bg_y + 110;
//     btn_action[5] = 6;
//     btn_active[5] = false;
//     btn_align[5] = fa_left;
//
//     if ( screen_type == 3 ){
//
//         // screen_desc = "Complete 300 tailored levels. Get the lowest score possible.";
//
//         // screen_desc = "Play a selection of 300 levels. Get the lowest score possible.";
//
//         if ( global.game_submode == 1 ){ screen_desc = lang_text_modes[14]; } // "GOF: 25 HOLES";
//         else if ( global.game_submode == 2 ){ screen_desc = lang_text_modes[15]; } // "GOF: 50 HOLES";
//         else if ( global.game_submode == 3 ){ screen_desc = lang_text_modes[16]; } // "GOF: 100 HOLES";
//
//         screen_desc_align = fa_center;
//
//         // desc_x = desc_bg_x; // (( world_width_draw / 2 ) + 178 );
//         // desc_y -= 60;
//
//
//         // Screen Items
//
//             var screen_item_x = desc_x;
//             var screen_item_y = desc_y;
//
//             screen_item_y += 83;
//
//             btn_course_w = 104;
//             btn_course_h = 67;
//
//             btn_course_x[1] = ( screen_item_x - 177 );
//             btn_course_y[1] = screen_item_y;
//             if ( global.game_submode == 1 ){ btn_course_active[1] = 1; btn_course_color[1] = c_aqua; } else { btn_course_active[1] = 0; btn_course_color[1] = c_lime; }
//
//             btn_course_x[2] = ( screen_item_x - 59 );
//             btn_course_y[2] = screen_item_y;
//             if ( global.game_submode == 2 ){ btn_course_active[2] = 1; btn_course_color[2] = c_aqua; } else { btn_course_active[2] = 0; btn_course_color[2] = c_lime; }
//
//             btn_course_x[3] = ( screen_item_x + 59 );
//             btn_course_y[3] = screen_item_y;
//             if ( global.game_submode == 3 ){ btn_course_active[3] = 1; btn_course_color[3] = c_aqua; } else { btn_course_active[3] = 0; btn_course_color[3] = c_lime; }
//
//             btn_course_x[4] = ( screen_item_x + 177 );
//             btn_course_y[4] = screen_item_y;
//             if ( global.game_submode == 4 ){ btn_course_active[4] = 1; btn_course_color[4] = c_aqua; } else { btn_course_active[4] = 0; btn_course_color[4] = c_lime; }
//
//
//         // Buttons
//
//             if ( global.game_mode == 1 ){ btn_active[global.game_submode-1] = true; }
//
//             if (( game_levels_curr == 1 ) and ( game_mode_1_best_score == 0 )){ }
//             else {
//
//                 btn_title[6] = lang_text_modes[9]; // "RESET";
//                 btn_w[6] = 164;
//                 btn_h[6] = 60;
//                 btn_x[6] = desc_bg_x - 100;
//                 btn_y[6] = desc_bg_y + 80;
//                 btn_action[6] = 12;
//                 btn_active[6] = false;
//                 btn_align[6] = fa_center;
//             }
//
//             /*
//             if (( game_levels_curr == 1 ) and ( game_mode_1_best_score == 0 )){
//
//                 btn_title[5] = ""; // "START"; lang_text_modes[7];
//                 btn_x[5] = desc_x;
//                 btn_y[5] = (( world_height_draw / 2 ) + 120 );
//             }
//             else {
//
//                 // desc_x -= 15
//
//                 btn_title[5] = ""; // "CONTINUE"; lang_text_modes[8];
//                 btn_x[5] = (( world_width_draw / 2 ) +btn_y[6] 362 );
//                 btn_y[5] = (( world_height_draw / 2 ) + 150 );
//
//                 btn_title[6] = lang_text_modes[9]; // "RESET";
//                 btn_w[6] = 164;
//                 btn_h[6] = 60;
//                 btn_x[6] = (( world_width_draw / 2 ) - 2 );
//                 btn_y[6] = (( world_height_draw / 2 ) + 185 );
//                 btn_action[6] = 12;
//                 btn_active[6] = false;
//                 btn_align[6] = fa_center;
//
//                 if ( game_mode_1_best_score == 0 ){
//
//                     btn_y[5] -= 26;
//                     btn_y[6] -= 26;
//                 }
//             }
//             */
//
//             // btn_active[0] = true; // button: side menu
//     }
//     else if ( screen_type == 4 ){
//
//         desc_y += 20;
//
//         screen_desc = lang_text_modes[10]; // "ONE SHOT PER LEVEL.#HOW MANY LEVELS#CAN YOU CLEAR?";
//
//         // if ( game_mode_2_holes_record != 0 ){ btn_y[5] += 80; }
//
//         btn_title[5] = ""; // "START"; lang_text_modes[7];
//
//         btn_active[3] = true;
//     }
//     else if ( screen_type == 5 ){
//
//         desc_y += 20;
//
//         screen_desc = lang_text_modes[11] // "TIME IS RUNNING OUT.#CLEAR AS MANY LEVELS#AS YOU CAN.";
//
//         // if ( game_mode_3_holes_record != 0 ){ btn_y[5] += 80; }
//
//         btn_title[5] = ""; // "START"; lang_text_modes[7];
//
//         btn_active[2] = true;
//     }
//     else if ( screen_type == 6 ){
//
//         desc_y += 20;
//
//         screen_desc = lang_text_modes[12]; // "LIMITED LIVES. HAW FAR#CAN YOU GO?";
//
//         // if ( game_mode_4_holes_record != 0 ){ btn_y[5] += 50; }
//
//         btn_title[5] = ""; // "START"; lang_text_modes[7];
//
//         btn_active[3] = true;
//     }
//     else if ( screen_type == 7 ){
//
//         desc_y += 40;
//
//         screen_desc = lang_text_modes[13]; // "THERE ARE NO RULES.#YOU CAN PRACTICE ALL#YOUR SHOTS.";
//
//         // btn_title[5] = ""; // "START"; lang_text_modes[7];
//
//         btn_active[4] = true;
//     }
//     else {
//
//         btn_active[0] = true; // Default Active Button
//     }
// }
// else if ( screen_type == 8 ){
//
//     screen_title = lang_text_options[5]; // "OPTIONS"
//     screen_desc_align = fa_center;
//
//     var btn_id = 0;
//
//     if ( multi_lang_support ){
//
//         btn_title[btn_id] = lang_text_options[3]; // "ENGLISH"
//         btn_w[btn_id] = 200;
//         btn_h[btn_id] = 50;
//         btn_x[btn_id] = (( world_width_draw / 2 ) - 350 + 50 );
//         btn_y[btn_id] = (( world_height_draw / 2 ) + 136 );
//         btn_action[btn_id] = 25;
//         btn_active[btn_id] = false;
//         btn_align[btn_id] = fa_left;
//
//         btn_id += 1;
//
//         btn_title[btn_id] = lang_text_options[4]; // "SPANISH"
//         btn_w[btn_id] = 200;
//         btn_h[btn_id] = 50;
//         btn_x[btn_id] = btn_x[btn_id-1] + 200 + 50;
//         btn_y[btn_id] = btn_y[btn_id-1];
//         btn_action[btn_id] = 26;
//         btn_active[btn_id] = false;
//         btn_align[btn_id] = fa_left;
//
//         btn_id += 1;
//     }
//
//     // Music
//
//         btn_title[btn_id] = "<";
//         btn_w[btn_id] = 50;
//         btn_h[btn_id] = 50;
//         btn_x[btn_id] = (( world_width_draw / 2 ) - 188 + 50 );
//         btn_y[btn_id] = (( world_height_draw / 2 ) - 160 );
//         btn_action[btn_id] = 21;
//         btn_active[btn_id] = false;
//         btn_align[btn_id] = fa_center;
//
//         btn_id += 1;
//
//         btn_title[btn_id] = ">";
//         btn_w[btn_id] = 50;
//         btn_h[btn_id] = 50;
//         btn_x[btn_id] = btn_x[btn_id-1] + 140;
//         btn_y[btn_id] = btn_y[btn_id-1];
//         btn_action[btn_id] = 22;
//         btn_active[btn_id] = false;
//         btn_align[btn_id] = fa_center;
//
//         btn_id += 1;
//
//     // Sound
//
//         btn_title[btn_id] = "<";
//         btn_w[btn_id] = 50;
//         btn_h[btn_id] = 50;
//         btn_x[btn_id] = (( world_width_draw / 2 ) - 188 + 50 );
//         btn_y[btn_id] = (( world_height_draw / 2 ) - 88 );
//         btn_action[btn_id] = 23;
//         btn_active[btn_id] = false;
//         btn_align[btn_id] = fa_center;
//
//         btn_id += 1;
//
//         btn_title[btn_id] = ">";
//         btn_w[btn_id] = 50;
//         btn_h[btn_id] = 50;
//         btn_x[btn_id] = btn_x[btn_id-1] + 140;
//         btn_y[btn_id] = btn_y[btn_id-1];
//         btn_action[btn_id] = 24;
//         btn_active[btn_id] = false;
//         btn_align[btn_id] = fa_center;
//
//         btn_id += 1;
//
//         btn_title[btn_id] = " ";
//         btn_w[btn_id] = 50;
//         btn_h[btn_id] = 50;
//         btn_x[btn_id] = (( world_width_draw / 2 ) - 166 + 50 );
//         btn_y[btn_id] = (( world_height_draw / 2 ) - 19 );
//         btn_action[btn_id] = 29;
//         btn_active[btn_id] = false;
//         btn_align[btn_id] = fa_center;
// }
// else if ( screen_type == 9 ){
//
//     screen_title = lang_text_credits[0]; // "CREDITS"
//     screen_desc_align = fa_left;
// }
//
function gml_Script_scr_screen_set(_inst, _other, argument0) {
    _inst.gmlscreen_type = argument0;
    _inst.gmlscreen_title = "";
    _inst.gmlscreen_desc = "";
    _inst.gmlbtn_title = 0;
    _inst.gmlbtn_back_x1 = 10;
    _inst.gmlbtn_back_y1 = 10;
    _inst.gmlbtn_back_x2 = (_inst.gmlbtn_back_x1 + 90);
    _inst.gmlbtn_back_y2 = (_inst.gmlbtn_back_y1 + 90);
    _inst.gmldesc_bg_x = ((_inst.gmlworld_width_draw / 2) + 179);
    _inst.gmldesc_bg_y = (_inst.gmlworld_height_draw / 2);
    if ((_inst.gmlscreen_type == 1)) {
        {
            var gmlbtn_id = 0;
            if (!(_inst.gmlbtn_title instanceof Array)) {
                _inst.gmlbtn_title = [];
                _inst.gmlbtn_title.__yy_owner = 1779252115;
            } else if (_inst.gmlbtn_title.__yy_owner !== 1779252115) {
                _inst.gmlbtn_title = _inst.gmlbtn_title.slice(0);
                _inst.gmlbtn_title.__yy_owner = 1779252115;
            }
            _inst.gmlbtn_title[gmlbtn_id] = "";
            if (!(_inst.gmlbtn_w instanceof Array)) {
                _inst.gmlbtn_w = [];
                _inst.gmlbtn_w.__yy_owner = 3123904953;
            } else if (_inst.gmlbtn_w.__yy_owner !== 3123904953) {
                _inst.gmlbtn_w = _inst.gmlbtn_w.slice(0);
                _inst.gmlbtn_w.__yy_owner = 3123904953;
            }
            _inst.gmlbtn_w[gmlbtn_id] = 181;
            if (!(_inst.gmlbtn_h instanceof Array)) {
                _inst.gmlbtn_h = [];
                _inst.gmlbtn_h.__yy_owner = 2003373863;
            } else if (_inst.gmlbtn_h.__yy_owner !== 2003373863) {
                _inst.gmlbtn_h = _inst.gmlbtn_h.slice(0);
                _inst.gmlbtn_h.__yy_owner = 2003373863;
            }
            _inst.gmlbtn_h[gmlbtn_id] = 181;
            if (!(_inst.gmlbtn_x instanceof Array)) {
                _inst.gmlbtn_x = [];
                _inst.gmlbtn_x.__yy_owner = 1034624374;
            } else if (_inst.gmlbtn_x.__yy_owner !== 1034624374) {
                _inst.gmlbtn_x = _inst.gmlbtn_x.slice(0);
                _inst.gmlbtn_x.__yy_owner = 1034624374;
            }
            _inst.gmlbtn_x[gmlbtn_id] = (_inst.gmlworld_width_draw / 2);
            if (!(_inst.gmlbtn_y instanceof Array)) {
                _inst.gmlbtn_y = [];
                _inst.gmlbtn_y.__yy_owner = 615525431;
            } else if (_inst.gmlbtn_y.__yy_owner !== 615525431) {
                _inst.gmlbtn_y = _inst.gmlbtn_y.slice(0);
                _inst.gmlbtn_y.__yy_owner = 615525431;
            }
            _inst.gmlbtn_y[gmlbtn_id] = ((_inst.gmlworld_height_draw / 2) + (16 * _inst.gmldraw_h_ratio));
            if (!(_inst.gmlbtn_action instanceof Array)) {
                _inst.gmlbtn_action = [];
                _inst.gmlbtn_action.__yy_owner = 2901436203;
            } else if (_inst.gmlbtn_action.__yy_owner !== 2901436203) {
                _inst.gmlbtn_action = _inst.gmlbtn_action.slice(0);
                _inst.gmlbtn_action.__yy_owner = 2901436203;
            }
            _inst.gmlbtn_action[gmlbtn_id] = 1;
            if (!(_inst.gmlbtn_active instanceof Array)) {
                _inst.gmlbtn_active = [];
                _inst.gmlbtn_active.__yy_owner = 1645586165;
            } else if (_inst.gmlbtn_active.__yy_owner !== 1645586165) {
                _inst.gmlbtn_active = _inst.gmlbtn_active.slice(0);
                _inst.gmlbtn_active.__yy_owner = 1645586165;
            }
            _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
            if (!(_inst.gmlbtn_align instanceof Array)) {
                _inst.gmlbtn_align = [];
                _inst.gmlbtn_align.__yy_owner = 1758933204;
            } else if (_inst.gmlbtn_align.__yy_owner !== 1758933204) {
                _inst.gmlbtn_align = _inst.gmlbtn_align.slice(0);
                _inst.gmlbtn_align.__yy_owner = 1758933204;
            }
            _inst.gmlbtn_align[gmlbtn_id] = 1;
            gmlbtn_id += 1;
            _inst.gmlbtn_title[gmlbtn_id] = "";
            _inst.gmlbtn_w[gmlbtn_id] = 101;
            _inst.gmlbtn_h[gmlbtn_id] = 101;
            _inst.gmlbtn_x[gmlbtn_id] = ((_inst.gmlworld_width_draw / 2) + 160);
            _inst.gmlbtn_y[gmlbtn_id] = (_inst.gmlbtn_y[(gmlbtn_id - 1)] + 46);
            _inst.gmlbtn_action[gmlbtn_id] = 2;
            _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
            _inst.gmlbtn_align[gmlbtn_id] = 1;
            gmlbtn_id += 1;
            _inst.gmlbtn_title[gmlbtn_id] = "";
            _inst.gmlbtn_w[gmlbtn_id] = 101;
            _inst.gmlbtn_h[gmlbtn_id] = 101;
            _inst.gmlbtn_x[gmlbtn_id] = ((_inst.gmlworld_width_draw / 2) - 160);
            _inst.gmlbtn_y[gmlbtn_id] = _inst.gmlbtn_y[(gmlbtn_id - 1)];
            _inst.gmlbtn_action[gmlbtn_id] = 27;
            _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
            _inst.gmlbtn_align[gmlbtn_id] = 1;
            gmlbtn_id += 1;
            _inst.gmlbtn_title[gmlbtn_id] = "";
            _inst.gmlbtn_w[gmlbtn_id] = 91;
            _inst.gmlbtn_h[gmlbtn_id] = 91;
            _inst.gmlbtn_x[gmlbtn_id] = (floor((_inst.gmlbtn_w[gmlbtn_id] / 2)) + 10);
            _inst.gmlbtn_y[gmlbtn_id] = (_inst.gmlworld_height_draw - _inst.gmlbtn_h[gmlbtn_id] - 10);
            _inst.gmlbtn_action[gmlbtn_id] = window.famobi.hasFeature("credits") ? 28 : 0;
            _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
            _inst.gmlbtn_align[gmlbtn_id] = 1;
            gmlbtn_id += 1;
            if ((g_pBuiltIn.get_os_browser() == (-1))) {
                {
                    _inst.gmlbtn_title[gmlbtn_id] = _inst.gmllang_text_menu_main[2];
                    _inst.gmlbtn_w[gmlbtn_id] = 150;
                    _inst.gmlbtn_h[gmlbtn_id] = 50;
                    _inst.gmlbtn_x[gmlbtn_id] = (_inst.gmlworld_width_draw - 60);
                    _inst.gmlbtn_y[gmlbtn_id] = 10;
                    _inst.gmlbtn_action[gmlbtn_id] = 3;
                    _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
                    _inst.gmlbtn_align[gmlbtn_id] = 1;
                };
            };
        };
    } else {
        if ((((_inst.gmlscreen_type == 2)) || ((_inst.gmlscreen_type == 3)) || ((_inst.gmlscreen_type == 4)) || ((_inst.gmlscreen_type == 5)) || ((_inst.gmlscreen_type == 6)) || ((_inst.gmlscreen_type == 7)))) {
            {
                _inst.gmlscreen_title = _inst.gmllang_text_modes[0];
                _inst.gmlscreen_desc_align = 1;
                var gmlbtn_x_center = ((_inst.gmlworld_width_draw / 2) - 240);
                var gmlbtn_y_center = ((_inst.gmlworld_height_draw / 2) + 30);
                if (!(_inst.gmlbtn_title instanceof Array)) {
                    _inst.gmlbtn_title = [];
                    _inst.gmlbtn_title.__yy_owner = 1779252115;
                } else if (_inst.gmlbtn_title.__yy_owner !== 1779252115) {
                    _inst.gmlbtn_title = _inst.gmlbtn_title.slice(0);
                    _inst.gmlbtn_title.__yy_owner = 1779252115;
                }
                _inst.gmlbtn_title[0] = window.famobi.__("25 HOLES") || "25 HOLES";
                if (!(_inst.gmlbtn_w instanceof Array)) {
                    _inst.gmlbtn_w = [];
                    _inst.gmlbtn_w.__yy_owner = 3123904953;
                } else if (_inst.gmlbtn_w.__yy_owner !== 3123904953) {
                    _inst.gmlbtn_w = _inst.gmlbtn_w.slice(0);
                    _inst.gmlbtn_w.__yy_owner = 3123904953;
                }
                _inst.gmlbtn_w[0] = 240;
                if (!(_inst.gmlbtn_h instanceof Array)) {
                    _inst.gmlbtn_h = [];
                    _inst.gmlbtn_h.__yy_owner = 2003373863;
                } else if (_inst.gmlbtn_h.__yy_owner !== 2003373863) {
                    _inst.gmlbtn_h = _inst.gmlbtn_h.slice(0);
                    _inst.gmlbtn_h.__yy_owner = 2003373863;
                }
                _inst.gmlbtn_h[0] = 70;
                if (!(_inst.gmlbtn_x instanceof Array)) {
                    _inst.gmlbtn_x = [];
                    _inst.gmlbtn_x.__yy_owner = 1034624374;
                } else if (_inst.gmlbtn_x.__yy_owner !== 1034624374) {
                    _inst.gmlbtn_x = _inst.gmlbtn_x.slice(0);
                    _inst.gmlbtn_x.__yy_owner = 1034624374;
                }
                _inst.gmlbtn_x[0] = gmlbtn_x_center;
                if (!(_inst.gmlbtn_y instanceof Array)) {
                    _inst.gmlbtn_y = [];
                    _inst.gmlbtn_y.__yy_owner = 615525431;
                } else if (_inst.gmlbtn_y.__yy_owner !== 615525431) {
                    _inst.gmlbtn_y = _inst.gmlbtn_y.slice(0);
                    _inst.gmlbtn_y.__yy_owner = 615525431;
                }
                _inst.gmlbtn_y[0] = (gmlbtn_y_center - (_inst.gmlbtn_h[0] / 2) - ((_inst.gmlbtn_h[0] + 6) * 2) - 20);
                if (!(_inst.gmlbtn_action instanceof Array)) {
                    _inst.gmlbtn_action = [];
                    _inst.gmlbtn_action.__yy_owner = 2901436203;
                } else if (_inst.gmlbtn_action.__yy_owner !== 2901436203) {
                    _inst.gmlbtn_action = _inst.gmlbtn_action.slice(0);
                    _inst.gmlbtn_action.__yy_owner = 2901436203;
                }
                _inst.gmlbtn_action[0] = 15;
                if (!(_inst.gmlbtn_active instanceof Array)) {
                    _inst.gmlbtn_active = [];
                    _inst.gmlbtn_active.__yy_owner = 1645586165;
                } else if (_inst.gmlbtn_active.__yy_owner !== 1645586165) {
                    _inst.gmlbtn_active = _inst.gmlbtn_active.slice(0);
                    _inst.gmlbtn_active.__yy_owner = 1645586165;
                }
                _inst.gmlbtn_active[0] = 0 ? 1 : 0;
                if (!(_inst.gmlbtn_align instanceof Array)) {
                    _inst.gmlbtn_align = [];
                    _inst.gmlbtn_align.__yy_owner = 1758933204;
                } else if (_inst.gmlbtn_align.__yy_owner !== 1758933204) {
                    _inst.gmlbtn_align = _inst.gmlbtn_align.slice(0);
                    _inst.gmlbtn_align.__yy_owner = 1758933204;
                }
                _inst.gmlbtn_align[0] = 1;
                _inst.gmlbtn_title[1] = window.famobi.__("50 HOLES") || "50 HOLES";
                _inst.gmlbtn_w[1] = 240;
                _inst.gmlbtn_h[1] = 70;
                _inst.gmlbtn_x[1] = gmlbtn_x_center;
                _inst.gmlbtn_y[1] = (gmlbtn_y_center - (_inst.gmlbtn_h[1] / 2) - ((_inst.gmlbtn_h[1] + 6) * 1) - 10);
                _inst.gmlbtn_action[1] = 16;
                _inst.gmlbtn_active[1] = 0 ? 1 : 0;
                _inst.gmlbtn_align[1] = 1;
                _inst.gmlbtn_title[2] = window.famobi.__("100 HOLES") || "100 HOLES";
                _inst.gmlbtn_w[2] = 240;
                _inst.gmlbtn_h[2] = 70;
                _inst.gmlbtn_x[2] = gmlbtn_x_center;
                _inst.gmlbtn_y[2] = (gmlbtn_y_center - (_inst.gmlbtn_h[2] / 2));
                _inst.gmlbtn_action[2] = 17;
                _inst.gmlbtn_active[2] = 0 ? 1 : 0;
                _inst.gmlbtn_align[2] = 1;
                _inst.gmlbtn_title[3] = gml_Script_scr_game_mode_name(_inst, _other, 2);
                _inst.gmlbtn_w[3] = 240;
                _inst.gmlbtn_h[3] = 70;
                _inst.gmlbtn_x[3] = gmlbtn_x_center;
                _inst.gmlbtn_y[3] = (gmlbtn_y_center - (_inst.gmlbtn_h[3] / 2) + ((_inst.gmlbtn_h[3] + 6) * 1) + 10);
                _inst.gmlbtn_action[3] = 5;
                _inst.gmlbtn_active[3] = 0 ? 1 : 0;
                _inst.gmlbtn_align[3] = 1;
                _inst.gmlbtn_title[4] = gml_Script_scr_game_mode_name(_inst, _other, 5);
                _inst.gmlbtn_w[4] = 240;
                _inst.gmlbtn_h[4] = 70;
                _inst.gmlbtn_x[4] = gmlbtn_x_center;
                _inst.gmlbtn_y[4] = (gmlbtn_y_center - (_inst.gmlbtn_h[4] / 2) + ((_inst.gmlbtn_h[4] + 6) * 2) + 20);
                _inst.gmlbtn_action[4] = 9;
                _inst.gmlbtn_active[4] = 0 ? 1 : 0;
                _inst.gmlbtn_align[4] = 1;
                _inst.gmldesc_x = _inst.gmldesc_bg_x;
                _inst.gmldesc_y = (_inst.gmldesc_bg_y - 75 - 60);
                _inst.gmlbtn_title[5] = "";
                _inst.gmlbtn_w[5] = 113;
                _inst.gmlbtn_h[5] = 108;
                _inst.gmlbtn_x[5] = (_inst.gmldesc_bg_x + 72);
                _inst.gmlbtn_y[5] = (_inst.gmldesc_bg_y + 110);
                _inst.gmlbtn_action[5] = 6;
                _inst.gmlbtn_active[5] = 0 ? 1 : 0;
                _inst.gmlbtn_align[5] = 0;
                if ((_inst.gmlscreen_type == 3)) {
                    {
                        if ((global.gmlgame_submode == 1)) {
                            {
                                _inst.gmlscreen_desc = _inst.gmllang_text_modes[14];
                            };
                        } else {
                            if ((global.gmlgame_submode == 2)) {
                                {
                                    _inst.gmlscreen_desc = _inst.gmllang_text_modes[15];
                                };
                            } else {
                                if ((global.gmlgame_submode == 3)) {
                                    {
                                        _inst.gmlscreen_desc = _inst.gmllang_text_modes[16];
                                    };
                                };
                            };
                        };
                        _inst.gmlscreen_desc_align = 1;
                        var gmlscreen_item_x = _inst.gmldesc_x;
                        var gmlscreen_item_y = _inst.gmldesc_y;
                        gmlscreen_item_y += 83;
                        _inst.gmlbtn_course_w = 104;
                        _inst.gmlbtn_course_h = 67;
                        if (!(_inst.gmlbtn_course_x instanceof Array)) {
                            _inst.gmlbtn_course_x = [];
                            _inst.gmlbtn_course_x.__yy_owner = 764559735;
                        } else if (_inst.gmlbtn_course_x.__yy_owner !== 764559735) {
                            _inst.gmlbtn_course_x = _inst.gmlbtn_course_x.slice(0);
                            _inst.gmlbtn_course_x.__yy_owner = 764559735;
                        }
                        _inst.gmlbtn_course_x[1] = (gmlscreen_item_x - 177);
                        if (!(_inst.gmlbtn_course_y instanceof Array)) {
                            _inst.gmlbtn_course_y = [];
                            _inst.gmlbtn_course_y.__yy_owner = 881422390;
                        } else if (_inst.gmlbtn_course_y.__yy_owner !== 881422390) {
                            _inst.gmlbtn_course_y = _inst.gmlbtn_course_y.slice(0);
                            _inst.gmlbtn_course_y.__yy_owner = 881422390;
                        }
                        _inst.gmlbtn_course_y[1] = gmlscreen_item_y;
                        if ((global.gmlgame_submode == 1)) {
                            {
                                if (!(_inst.gmlbtn_course_active instanceof Array)) {
                                    _inst.gmlbtn_course_active = [];
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                } else if (_inst.gmlbtn_course_active.__yy_owner !== 3840781105) {
                                    _inst.gmlbtn_course_active = _inst.gmlbtn_course_active.slice(0);
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                }
                                _inst.gmlbtn_course_active[1] = 1;
                                if (!(_inst.gmlbtn_course_color instanceof Array)) {
                                    _inst.gmlbtn_course_color = [];
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                } else if (_inst.gmlbtn_course_color.__yy_owner !== 4209590705) {
                                    _inst.gmlbtn_course_color = _inst.gmlbtn_course_color.slice(0);
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                }
                                _inst.gmlbtn_course_color[1] = 16776960;
                            };
                        } else {
                            {
                                if (!(_inst.gmlbtn_course_active instanceof Array)) {
                                    _inst.gmlbtn_course_active = [];
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                } else if (_inst.gmlbtn_course_active.__yy_owner !== 3840781105) {
                                    _inst.gmlbtn_course_active = _inst.gmlbtn_course_active.slice(0);
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                }
                                _inst.gmlbtn_course_active[1] = 0;
                                if (!(_inst.gmlbtn_course_color instanceof Array)) {
                                    _inst.gmlbtn_course_color = [];
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                } else if (_inst.gmlbtn_course_color.__yy_owner !== 4209590705) {
                                    _inst.gmlbtn_course_color = _inst.gmlbtn_course_color.slice(0);
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                }
                                _inst.gmlbtn_course_color[1] = 65280;
                            };
                        };
                        _inst.gmlbtn_course_x[2] = (gmlscreen_item_x - 59);
                        _inst.gmlbtn_course_y[2] = gmlscreen_item_y;
                        if ((global.gmlgame_submode == 2)) {
                            {
                                if (!(_inst.gmlbtn_course_active instanceof Array)) {
                                    _inst.gmlbtn_course_active = [];
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                } else if (_inst.gmlbtn_course_active.__yy_owner !== 3840781105) {
                                    _inst.gmlbtn_course_active = _inst.gmlbtn_course_active.slice(0);
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                }
                                _inst.gmlbtn_course_active[2] = 1;
                                if (!(_inst.gmlbtn_course_color instanceof Array)) {
                                    _inst.gmlbtn_course_color = [];
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                } else if (_inst.gmlbtn_course_color.__yy_owner !== 4209590705) {
                                    _inst.gmlbtn_course_color = _inst.gmlbtn_course_color.slice(0);
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                }
                                _inst.gmlbtn_course_color[2] = 16776960;
                            };
                        } else {
                            {
                                if (!(_inst.gmlbtn_course_active instanceof Array)) {
                                    _inst.gmlbtn_course_active = [];
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                } else if (_inst.gmlbtn_course_active.__yy_owner !== 3840781105) {
                                    _inst.gmlbtn_course_active = _inst.gmlbtn_course_active.slice(0);
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                }
                                _inst.gmlbtn_course_active[2] = 0;
                                if (!(_inst.gmlbtn_course_color instanceof Array)) {
                                    _inst.gmlbtn_course_color = [];
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                } else if (_inst.gmlbtn_course_color.__yy_owner !== 4209590705) {
                                    _inst.gmlbtn_course_color = _inst.gmlbtn_course_color.slice(0);
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                }
                                _inst.gmlbtn_course_color[2] = 65280;
                            };
                        };
                        _inst.gmlbtn_course_x[3] = (gmlscreen_item_x + 59);
                        _inst.gmlbtn_course_y[3] = gmlscreen_item_y;
                        if ((global.gmlgame_submode == 3)) {
                            {
                                if (!(_inst.gmlbtn_course_active instanceof Array)) {
                                    _inst.gmlbtn_course_active = [];
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                } else if (_inst.gmlbtn_course_active.__yy_owner !== 3840781105) {
                                    _inst.gmlbtn_course_active = _inst.gmlbtn_course_active.slice(0);
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                }
                                _inst.gmlbtn_course_active[3] = 1;
                                if (!(_inst.gmlbtn_course_color instanceof Array)) {
                                    _inst.gmlbtn_course_color = [];
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                } else if (_inst.gmlbtn_course_color.__yy_owner !== 4209590705) {
                                    _inst.gmlbtn_course_color = _inst.gmlbtn_course_color.slice(0);
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                }
                                _inst.gmlbtn_course_color[3] = 16776960;
                            };
                        } else {
                            {
                                if (!(_inst.gmlbtn_course_active instanceof Array)) {
                                    _inst.gmlbtn_course_active = [];
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                } else if (_inst.gmlbtn_course_active.__yy_owner !== 3840781105) {
                                    _inst.gmlbtn_course_active = _inst.gmlbtn_course_active.slice(0);
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                }
                                _inst.gmlbtn_course_active[3] = 0;
                                if (!(_inst.gmlbtn_course_color instanceof Array)) {
                                    _inst.gmlbtn_course_color = [];
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                } else if (_inst.gmlbtn_course_color.__yy_owner !== 4209590705) {
                                    _inst.gmlbtn_course_color = _inst.gmlbtn_course_color.slice(0);
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                }
                                _inst.gmlbtn_course_color[3] = 65280;
                            };
                        };
                        _inst.gmlbtn_course_x[4] = (gmlscreen_item_x + 177);
                        _inst.gmlbtn_course_y[4] = gmlscreen_item_y;
                        if ((global.gmlgame_submode == 4)) {
                            {
                                if (!(_inst.gmlbtn_course_active instanceof Array)) {
                                    _inst.gmlbtn_course_active = [];
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                } else if (_inst.gmlbtn_course_active.__yy_owner !== 3840781105) {
                                    _inst.gmlbtn_course_active = _inst.gmlbtn_course_active.slice(0);
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                }
                                _inst.gmlbtn_course_active[4] = 1;
                                if (!(_inst.gmlbtn_course_color instanceof Array)) {
                                    _inst.gmlbtn_course_color = [];
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                } else if (_inst.gmlbtn_course_color.__yy_owner !== 4209590705) {
                                    _inst.gmlbtn_course_color = _inst.gmlbtn_course_color.slice(0);
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                }
                                _inst.gmlbtn_course_color[4] = 16776960;
                            };
                        } else {
                            {
                                if (!(_inst.gmlbtn_course_active instanceof Array)) {
                                    _inst.gmlbtn_course_active = [];
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                } else if (_inst.gmlbtn_course_active.__yy_owner !== 3840781105) {
                                    _inst.gmlbtn_course_active = _inst.gmlbtn_course_active.slice(0);
                                    _inst.gmlbtn_course_active.__yy_owner = 3840781105;
                                }
                                _inst.gmlbtn_course_active[4] = 0;
                                if (!(_inst.gmlbtn_course_color instanceof Array)) {
                                    _inst.gmlbtn_course_color = [];
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                } else if (_inst.gmlbtn_course_color.__yy_owner !== 4209590705) {
                                    _inst.gmlbtn_course_color = _inst.gmlbtn_course_color.slice(0);
                                    _inst.gmlbtn_course_color.__yy_owner = 4209590705;
                                }
                                _inst.gmlbtn_course_color[4] = 65280;
                            };
                        };
                        if ((global.gmlgame_mode == 1)) {
                            {
                                _inst.gmlbtn_active[(global.gmlgame_submode - 1)] = 1 ? 1 : 0;
                            };
                        };
                        if ((((_inst.gmlgame_levels_curr == 1)) && ((_inst.gmlgame_mode_1_best_score == 0)))) {
                            {};
                        } else {
                            {
                                _inst.gmlbtn_title[6] = _inst.gmllang_text_modes[9];
                                _inst.gmlbtn_w[6] = 164;
                                _inst.gmlbtn_h[6] = 60;
                                _inst.gmlbtn_x[6] = (_inst.gmldesc_bg_x - 100);
                                _inst.gmlbtn_y[6] = (_inst.gmldesc_bg_y + 80);
                                _inst.gmlbtn_action[6] = 12;
                                _inst.gmlbtn_active[6] = 0 ? 1 : 0;
                                _inst.gmlbtn_align[6] = 1;
                            };
                        };
                    };
                } else {
                    if ((_inst.gmlscreen_type == 4)) {
                        {
                            _inst.gmldesc_y += 20;
                            _inst.gmlscreen_desc = _inst.gmllang_text_modes[10];
                            _inst.gmlbtn_title[5] = "";
                            _inst.gmlbtn_active[3] = 1 ? 1 : 0;
                        };
                    } else {
                        if ((_inst.gmlscreen_type == 5)) {
                            {
                                _inst.gmldesc_y += 20;
                                _inst.gmlscreen_desc = _inst.gmllang_text_modes[11];
                                _inst.gmlbtn_title[5] = "";
                                _inst.gmlbtn_active[2] = 1 ? 1 : 0;
                            };
                        } else {
                            if ((_inst.gmlscreen_type == 6)) {
                                {
                                    _inst.gmldesc_y += 20;
                                    _inst.gmlscreen_desc = _inst.gmllang_text_modes[12];
                                    _inst.gmlbtn_title[5] = "";
                                    _inst.gmlbtn_active[3] = 1 ? 1 : 0;
                                };
                            } else {
                                if ((_inst.gmlscreen_type == 7)) {
                                    {
                                        _inst.gmldesc_y += 40;
                                        _inst.gmlscreen_desc = _inst.gmllang_text_modes[13];
                                        _inst.gmlbtn_active[4] = 1 ? 1 : 0;
                                    };
                                } else {
                                    {
                                        _inst.gmlbtn_active[0] = 1 ? 1 : 0;
                                    };
                                };
                            };
                        };
                    };
                };
            };
        } else {
            if ((_inst.gmlscreen_type == 8)) {
                {
                    _inst.gmlscreen_title = _inst.gmllang_text_options[5];
                    _inst.gmlscreen_desc_align = 1;
                    var gmlbtn_id = 0;
                    if (_inst.gmlmulti_lang_support > 0.5) {
                        {
                            if (!(_inst.gmlbtn_title instanceof Array)) {
                                _inst.gmlbtn_title = [];
                                _inst.gmlbtn_title.__yy_owner = 1779252115;
                            } else if (_inst.gmlbtn_title.__yy_owner !== 1779252115) {
                                _inst.gmlbtn_title = _inst.gmlbtn_title.slice(0);
                                _inst.gmlbtn_title.__yy_owner = 1779252115;
                            }
                            _inst.gmlbtn_title[gmlbtn_id] = _inst.gmllang_text_options[3];
                            if (!(_inst.gmlbtn_w instanceof Array)) {
                                _inst.gmlbtn_w = [];
                                _inst.gmlbtn_w.__yy_owner = 3123904953;
                            } else if (_inst.gmlbtn_w.__yy_owner !== 3123904953) {
                                _inst.gmlbtn_w = _inst.gmlbtn_w.slice(0);
                                _inst.gmlbtn_w.__yy_owner = 3123904953;
                            }
                            _inst.gmlbtn_w[gmlbtn_id] = 200;
                            if (!(_inst.gmlbtn_h instanceof Array)) {
                                _inst.gmlbtn_h = [];
                                _inst.gmlbtn_h.__yy_owner = 2003373863;
                            } else if (_inst.gmlbtn_h.__yy_owner !== 2003373863) {
                                _inst.gmlbtn_h = _inst.gmlbtn_h.slice(0);
                                _inst.gmlbtn_h.__yy_owner = 2003373863;
                            }
                            _inst.gmlbtn_h[gmlbtn_id] = 50;
                            if (!(_inst.gmlbtn_x instanceof Array)) {
                                _inst.gmlbtn_x = [];
                                _inst.gmlbtn_x.__yy_owner = 1034624374;
                            } else if (_inst.gmlbtn_x.__yy_owner !== 1034624374) {
                                _inst.gmlbtn_x = _inst.gmlbtn_x.slice(0);
                                _inst.gmlbtn_x.__yy_owner = 1034624374;
                            }
                            _inst.gmlbtn_x[gmlbtn_id] = ((_inst.gmlworld_width_draw / 2) - 350 + 50);
                            if (!(_inst.gmlbtn_y instanceof Array)) {
                                _inst.gmlbtn_y = [];
                                _inst.gmlbtn_y.__yy_owner = 615525431;
                            } else if (_inst.gmlbtn_y.__yy_owner !== 615525431) {
                                _inst.gmlbtn_y = _inst.gmlbtn_y.slice(0);
                                _inst.gmlbtn_y.__yy_owner = 615525431;
                            }
                            _inst.gmlbtn_y[gmlbtn_id] = ((_inst.gmlworld_height_draw / 2) + 136);
                            if (!(_inst.gmlbtn_action instanceof Array)) {
                                _inst.gmlbtn_action = [];
                                _inst.gmlbtn_action.__yy_owner = 2901436203;
                            } else if (_inst.gmlbtn_action.__yy_owner !== 2901436203) {
                                _inst.gmlbtn_action = _inst.gmlbtn_action.slice(0);
                                _inst.gmlbtn_action.__yy_owner = 2901436203;
                            }
                            _inst.gmlbtn_action[gmlbtn_id] = 25;
                            if (!(_inst.gmlbtn_active instanceof Array)) {
                                _inst.gmlbtn_active = [];
                                _inst.gmlbtn_active.__yy_owner = 1645586165;
                            } else if (_inst.gmlbtn_active.__yy_owner !== 1645586165) {
                                _inst.gmlbtn_active = _inst.gmlbtn_active.slice(0);
                                _inst.gmlbtn_active.__yy_owner = 1645586165;
                            }
                            _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
                            if (!(_inst.gmlbtn_align instanceof Array)) {
                                _inst.gmlbtn_align = [];
                                _inst.gmlbtn_align.__yy_owner = 1758933204;
                            } else if (_inst.gmlbtn_align.__yy_owner !== 1758933204) {
                                _inst.gmlbtn_align = _inst.gmlbtn_align.slice(0);
                                _inst.gmlbtn_align.__yy_owner = 1758933204;
                            }
                            _inst.gmlbtn_align[gmlbtn_id] = 0;
                            gmlbtn_id += 1;
                            _inst.gmlbtn_title[gmlbtn_id] = _inst.gmllang_text_options[4];
                            _inst.gmlbtn_w[gmlbtn_id] = 200;
                            _inst.gmlbtn_h[gmlbtn_id] = 50;
                            _inst.gmlbtn_x[gmlbtn_id] = (_inst.gmlbtn_x[(gmlbtn_id - 1)] + 200 + 50);
                            _inst.gmlbtn_y[gmlbtn_id] = _inst.gmlbtn_y[(gmlbtn_id - 1)];
                            _inst.gmlbtn_action[gmlbtn_id] = 26;
                            _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
                            _inst.gmlbtn_align[gmlbtn_id] = 0;
                            gmlbtn_id += 1;
                        };
                    };
                    if (!(_inst.gmlbtn_title instanceof Array)) {
                        _inst.gmlbtn_title = [];
                        _inst.gmlbtn_title.__yy_owner = 1779252115;
                    } else if (_inst.gmlbtn_title.__yy_owner !== 1779252115) {
                        _inst.gmlbtn_title = _inst.gmlbtn_title.slice(0);
                        _inst.gmlbtn_title.__yy_owner = 1779252115;
                    }
                    _inst.gmlbtn_title[gmlbtn_id] = "<";
                    if (!(_inst.gmlbtn_w instanceof Array)) {
                        _inst.gmlbtn_w = [];
                        _inst.gmlbtn_w.__yy_owner = 3123904953;
                    } else if (_inst.gmlbtn_w.__yy_owner !== 3123904953) {
                        _inst.gmlbtn_w = _inst.gmlbtn_w.slice(0);
                        _inst.gmlbtn_w.__yy_owner = 3123904953;
                    }
                    _inst.gmlbtn_w[gmlbtn_id] = 50;
                    if (!(_inst.gmlbtn_h instanceof Array)) {
                        _inst.gmlbtn_h = [];
                        _inst.gmlbtn_h.__yy_owner = 2003373863;
                    } else if (_inst.gmlbtn_h.__yy_owner !== 2003373863) {
                        _inst.gmlbtn_h = _inst.gmlbtn_h.slice(0);
                        _inst.gmlbtn_h.__yy_owner = 2003373863;
                    }
                    _inst.gmlbtn_h[gmlbtn_id] = 50;
                    if (!(_inst.gmlbtn_x instanceof Array)) {
                        _inst.gmlbtn_x = [];
                        _inst.gmlbtn_x.__yy_owner = 1034624374;
                    } else if (_inst.gmlbtn_x.__yy_owner !== 1034624374) {
                        _inst.gmlbtn_x = _inst.gmlbtn_x.slice(0);
                        _inst.gmlbtn_x.__yy_owner = 1034624374;
                    }
                    _inst.gmlbtn_x[gmlbtn_id] = ((_inst.gmlworld_width_draw / 2) - 188 + 50);
                    if (!(_inst.gmlbtn_y instanceof Array)) {
                        _inst.gmlbtn_y = [];
                        _inst.gmlbtn_y.__yy_owner = 615525431;
                    } else if (_inst.gmlbtn_y.__yy_owner !== 615525431) {
                        _inst.gmlbtn_y = _inst.gmlbtn_y.slice(0);
                        _inst.gmlbtn_y.__yy_owner = 615525431;
                    }
                    _inst.gmlbtn_y[gmlbtn_id] = ((_inst.gmlworld_height_draw / 2) - 160);
                    if (!(_inst.gmlbtn_action instanceof Array)) {
                        _inst.gmlbtn_action = [];
                        _inst.gmlbtn_action.__yy_owner = 2901436203;
                    } else if (_inst.gmlbtn_action.__yy_owner !== 2901436203) {
                        _inst.gmlbtn_action = _inst.gmlbtn_action.slice(0);
                        _inst.gmlbtn_action.__yy_owner = 2901436203;
                    }
                    _inst.gmlbtn_action[gmlbtn_id] = 21;
                    if (!(_inst.gmlbtn_active instanceof Array)) {
                        _inst.gmlbtn_active = [];
                        _inst.gmlbtn_active.__yy_owner = 1645586165;
                    } else if (_inst.gmlbtn_active.__yy_owner !== 1645586165) {
                        _inst.gmlbtn_active = _inst.gmlbtn_active.slice(0);
                        _inst.gmlbtn_active.__yy_owner = 1645586165;
                    }
                    _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
                    if (!(_inst.gmlbtn_align instanceof Array)) {
                        _inst.gmlbtn_align = [];
                        _inst.gmlbtn_align.__yy_owner = 1758933204;
                    } else if (_inst.gmlbtn_align.__yy_owner !== 1758933204) {
                        _inst.gmlbtn_align = _inst.gmlbtn_align.slice(0);
                        _inst.gmlbtn_align.__yy_owner = 1758933204;
                    }
                    _inst.gmlbtn_align[gmlbtn_id] = 1;
                    gmlbtn_id += 1;
                    _inst.gmlbtn_title[gmlbtn_id] = ">";
                    _inst.gmlbtn_w[gmlbtn_id] = 50;
                    _inst.gmlbtn_h[gmlbtn_id] = 50;
                    _inst.gmlbtn_x[gmlbtn_id] = (_inst.gmlbtn_x[(gmlbtn_id - 1)] + 140);
                    _inst.gmlbtn_y[gmlbtn_id] = _inst.gmlbtn_y[(gmlbtn_id - 1)];
                    _inst.gmlbtn_action[gmlbtn_id] = 22;
                    _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
                    _inst.gmlbtn_align[gmlbtn_id] = 1;
                    gmlbtn_id += 1;
                    _inst.gmlbtn_title[gmlbtn_id] = "<";
                    _inst.gmlbtn_w[gmlbtn_id] = 50;
                    _inst.gmlbtn_h[gmlbtn_id] = 50;
                    _inst.gmlbtn_x[gmlbtn_id] = ((_inst.gmlworld_width_draw / 2) - 188 + 50);
                    _inst.gmlbtn_y[gmlbtn_id] = ((_inst.gmlworld_height_draw / 2) - 88);
                    _inst.gmlbtn_action[gmlbtn_id] = 23;
                    _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
                    _inst.gmlbtn_align[gmlbtn_id] = 1;
                    gmlbtn_id += 1;
                    _inst.gmlbtn_title[gmlbtn_id] = ">";
                    _inst.gmlbtn_w[gmlbtn_id] = 50;
                    _inst.gmlbtn_h[gmlbtn_id] = 50;
                    _inst.gmlbtn_x[gmlbtn_id] = (_inst.gmlbtn_x[(gmlbtn_id - 1)] + 140);
                    _inst.gmlbtn_y[gmlbtn_id] = _inst.gmlbtn_y[(gmlbtn_id - 1)];
                    _inst.gmlbtn_action[gmlbtn_id] = 24;
                    _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
                    _inst.gmlbtn_align[gmlbtn_id] = 1;
                    gmlbtn_id += 1;
                    _inst.gmlbtn_title[gmlbtn_id] = " ";
                    _inst.gmlbtn_w[gmlbtn_id] = 50;
                    _inst.gmlbtn_h[gmlbtn_id] = 50;
                    _inst.gmlbtn_x[gmlbtn_id] = ((_inst.gmlworld_width_draw / 2) - 166 + 50);
                    _inst.gmlbtn_y[gmlbtn_id] = ((_inst.gmlworld_height_draw / 2) - 19);
                    _inst.gmlbtn_action[gmlbtn_id] = 29;
                    _inst.gmlbtn_active[gmlbtn_id] = 0 ? 1 : 0;
                    _inst.gmlbtn_align[gmlbtn_id] = 1;
                };
            } else {
                if ((_inst.gmlscreen_type == 9)) {
                    {
                        _inst.gmlscreen_title = _inst.gmllang_text_credits[0];
                        _inst.gmlscreen_desc_align = 0;
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// /// scr_shake_view(shake_ammount);
//
// var shake_ammount = argument0;
//
// var shake_num_x = irandom_range(0,shake_ammount);
// var shake_num_y = irandom_range(0,shake_ammount);
//
// var shake_dir_x = choose(-1,1);
// var shake_dir_y = choose(-1,1);
//
// view_xview[0] = 0 + ( shake_num_x * shake_dir_x );
// view_yview[0] = 0 + ( shake_num_y * shake_dir_y );
//
//
function gml_Script_scr_shake_view(_inst, _other, argument0) {
    var gmlshake_ammount = argument0;
    var gmlshake_num_x = irandom_range(0, gmlshake_ammount);
    var gmlshake_num_y = irandom_range(0, gmlshake_ammount);
    var gmlshake_dir_x = choose((-1), 1);
    var gmlshake_dir_y = choose((-1), 1);
    g_pBuiltIn.view_xview[0] = (0 + (gmlshake_num_x * gmlshake_dir_x));
    g_pBuiltIn.view_yview[0] = (0 + (gmlshake_num_y * gmlshake_dir_y));
}

// #####################################################################################################
// /// scr_sound_button()
//
// scr_play_sound(sound_button_1,8,false)
//
//
//
function gml_Script_scr_sound_button(_inst, _other) {
    gml_Script_scr_play_sound(_inst, _other, 9, 8, 0);
}

// #####################################################################################################
// /// scr_surface_hole_arrow();
//
//     surf_hole_arrow = surface_create(128,128);
//
//     surface_set_target(surf_hole_arrow);
//
//         draw_clear_alpha(c_white, 0);
//
//         draw_set_alpha(1);
//
//         scr_draw_hole_arrow();
//
//     surface_reset_target();
//
function gml_Script_scr_surface_hole_arrow(_inst, _other) {
    _inst.gmlsurf_hole_arrow = surface_create(128, 128);
    surface_set_target(_inst.gmlsurf_hole_arrow);
    draw_clear_alpha(16777215, 0);
    draw_set_alpha(1);
    gml_Script_scr_draw_hole_arrow(_inst, _other);
    surface_reset_target();
}

// #####################################################################################################
// /// scr_time_convert(time_raw);
//
// var time_raw = argument0;
// var time_minutes, time_seconds, time_converted
//
// time_minutes = floor(( time_raw / 1000 ) / 60 );
//
// time_seconds = floor(( time_raw - (( time_minutes * 1000 ) * 60 )) / 1000 );
//
// if ( string_length(string(time_minutes)) = 1 ){ time_minutes = "0" + string(time_minutes); }
//
// if ( string_length(string(time_seconds)) = 1 ){ time_seconds = "0" + string(time_seconds); }
//
// time_converted = string(time_minutes) + ":" + string(time_seconds);
//
// return time_converted;
//
//
function gml_Script_scr_time_convert(_inst, _other, argument0) {
    var gmltime_raw = argument0;
    var gmltime_minutes, gmltime_seconds, gmltime_converted;
    gmltime_minutes = floor(((gmltime_raw / 1000) / 60));
    gmltime_seconds = floor(((gmltime_raw - ((gmltime_minutes * 1000) * 60)) / 1000));
    if ((string_length(string(gmltime_minutes)) == 1)) {
        {
            gmltime_minutes = ("0" + string(gmltime_minutes));
        };
    };
    if ((string_length(string(gmltime_seconds)) == 1)) {
        {
            gmltime_seconds = ("0" + string(gmltime_seconds));
        };
    };
    gmltime_converted = (string(gmltime_minutes) + ":" + string(gmltime_seconds));
    return gmltime_converted;
}

// #####################################################################################################
// /// scr_tutorial_destroy
//
//     with ( obj_ctrl_board ){
//
//         game_tutorial_1 = 1;
//
//         if ( global.famobi_active ){
//         // famobi
//
//             scr_famobi_options_save();
//         }
//         else {
//
//             scr_ini_options_save();
//         }
//     }
//
//     /* ini_open("savedata.ini");
//         // ini_write_real("progression", "game_tutorial_1", obj_ctrl_board.game_tutorial_1);
//     ini_close(); */
//
//     instance_destroy();
//
//
function gml_Script_scr_tutorial_destroy(_inst, _other) {
    {
        var __yy__v61 = GetWithArray(2);
        for (var __yy__v62 in __yy__v61) {
            if (!__yy__v61.hasOwnProperty(__yy__v62)) continue;
            var __yy__v63 = __yy__v61[__yy__v62];
            if (__yy__v63.marked) continue;
            if (!__yy__v63.active) continue; {
                __yy__v63.gmlgame_tutorial_1 = 1;
                if (global.gmlfamobi_active > 0.5) {
                    {
                        gml_Script_scr_famobi_options_save(__yy__v63, _inst);
                    };
                } else {
                    {
                        gml_Script_scr_ini_options_save(__yy__v63, _inst);
                    };
                };
            }
        }
    };
    instance_destroy(_inst);
}

// #####################################################################################################
// /// scr_tween_1(current_time,start_value,change_in_value,duration)
//
// // Tweening: Quadratic Easing Out
//
// var t = argument0; // current time
// var b = argument1; // start value
// var c = argument2; // change in value (positive or negative_=)
// var d = argument3; // duration
//
// t /= d;
//
// return -c * t*(t-2) + b;
//
function gml_Script_scr_tween_1(_inst, _other, argument0, argument1, argument2, argument3) {
    var gmlt = argument0;
    var gmlb = argument1;
    var gmlc = argument2;
    var gmld = argument3;
    gmlt /= gmld;
    return ((-gmlc * gmlt * (gmlt - 2)) + gmlb);
}

// #####################################################################################################
// /// scr_tween_2(current_time,start_value,change_in_value,duration)
//
// // Tweening: Sinusoidal Easing in/out
//
// var t = argument0; // current time
// var b = argument1; // start value
// var c = argument2; // change in value (positive or negative_=)
// var d = argument3; // duration
//
// return -c / 2 * ( cos( pi * t / d ) - 1 ) + b;
//
function gml_Script_scr_tween_2(_inst, _other, argument0, argument1, argument2, argument3) {
    var gmlt = argument0;
    var gmlb = argument1;
    var gmlc = argument2;
    var gmld = argument3;
    return ((-gmlc / 2 * (cos((3.14159265358979 * gmlt / gmld)) - 1)) + gmlb);
}

// #####################################################################################################
// /// scr_tween_3(current_time,start_value,change_in_value,duration)
//
// // Tweening: Quadratic Easing In
//
// var t = argument0; // current time
// var b = argument1; // start value
// var c = argument2; // change in value (positive or negative)
// var d = argument3; // duration
//
//  t /= d;
//
// return c * t * t + b;
//
function gml_Script_scr_tween_3(_inst, _other, argument0, argument1, argument2, argument3) {
    var gmlt = argument0;
    var gmlb = argument1;
    var gmlc = argument2;
    var gmld = argument3;
    gmlt /= gmld;
    return ((gmlc * gmlt * gmlt) + gmlb);
}

// #####################################################################################################
// /// scr_volume_master_switch()
//
// if ( global.volume_master == 0 ){
//
//     global.volume_master = 1;
// }
// else {
//
//     global.volume_master = 0;
// }
//
// audio_master_gain(global.volume_master);
//
//
function gml_Script_scr_volume_master_switch(_inst, _other) {
    if ((global.gmlvolume_master == 0)) {
        {
            global.gmlvolume_master = 1;
        };
    } else {
        {
            global.gmlvolume_master = 0;
        };
    };
    window.famobi_analytics.trackEvent("EVENT_VOLUMECHANGE", {bgmVolume: global.gmlvolume_master, sfxVolume: global.gmlvolume_master});
    audio_master_gain(global.gmlvolume_master);
}

// #####################################################################################################
// /// scr_world_ratio()
//
// // World Vars
//
//     world_width_draw = view_wview[0]; // global.view_w
//     world_height_draw =  view_hview[0]; // global.view_h
//
//     view_ratio = world_height_draw / world_width_draw;
//
//     world_width_board = global.board_w;
//     world_height_board = floor( world_width_board * view_ratio )
//
//     draw_w_ratio = ( world_width_draw / world_width_board );
//     draw_h_ratio = ( world_height_draw / world_height_board );
//
//
// // Grid Ratio
//
//     var world_grid_size = 40;
//     var world_grid_w_count_base = floor( 960 / world_grid_size ); // 24
//     var world_grid_w_count = floor( view_wview[0] / world_grid_size ); // 48
//
//     world_grid_ratio = world_grid_w_count / world_grid_w_count_base;
//
//     world_grid_ratio_capped = world_grid_ratio;
//
//
// // Pause Ratio
//
//     if ( global.win_w < view_wview[0] ){
//
//         world_pause_ratio = ( view_wview[0] / global.win_w );
//     }
//     else {
//
//         world_pause_ratio = ( global.win_w / view_wview[0] );
//     }
//
//     world_pause_ratio = ( view_wview[0] / global.win_w );
//
//     // world_pause_ratio = ( view_wview[0] / 960 );
//
//     // if ( world_grid_ratio < 1 ){}
//     // Lowres
//
//         // world_grid_ratio_capped = 1;
//
//         if ( global.platform_config = 1 ){
//         // Browser
//
//             if ( global.platform_config_sub = 3 ){
//             // Mobile
//
//                 world_grid_ratio += 1;
//             }
//             else {
//             // Desktop
//
//                 // world_grid_ratio += ( 1 * ( 1 - world_grid_ratio ));
//             }
//         }
//         else {
//         // Desktop
//
//             world_grid_ratio += ( 1 * ( 1 - world_grid_ratio ));
//         }
//
//
//     // if ( global.platform_config_sub = 2 ){ world_grid_ratio = 1; }
//
//
function gml_Script_scr_world_ratio(_inst, _other) {
    _inst.gmlworld_width_draw = g_pBuiltIn.view_wview[0];
    _inst.gmlworld_height_draw = g_pBuiltIn.view_hview[0];
    _inst.gmlview_ratio = (_inst.gmlworld_height_draw / _inst.gmlworld_width_draw);
    _inst.gmlworld_width_board = global.gmlboard_w;
    _inst.gmlworld_height_board = floor((_inst.gmlworld_width_board * _inst.gmlview_ratio));
    _inst.gmldraw_w_ratio = (_inst.gmlworld_width_draw / _inst.gmlworld_width_board);
    _inst.gmldraw_h_ratio = (_inst.gmlworld_height_draw / _inst.gmlworld_height_board);
    var gmlworld_grid_size = 40;
    var gmlworld_grid_w_count_base = floor((960 / gmlworld_grid_size));
    var gmlworld_grid_w_count = floor((g_pBuiltIn.view_wview[0] / gmlworld_grid_size));
    _inst.gmlworld_grid_ratio = (gmlworld_grid_w_count / gmlworld_grid_w_count_base);
    _inst.gmlworld_grid_ratio_capped = _inst.gmlworld_grid_ratio;
    if ((global.gmlwin_w < g_pBuiltIn.view_wview[0])) {
        {
            _inst.gmlworld_pause_ratio = (g_pBuiltIn.view_wview[0] / global.gmlwin_w);
        };
    } else {
        {
            _inst.gmlworld_pause_ratio = (global.gmlwin_w / g_pBuiltIn.view_wview[0]);
        };
    };
    _inst.gmlworld_pause_ratio = (g_pBuiltIn.view_wview[0] / global.gmlwin_w);
    if ((global.gmlplatform_config == 1)) {
        {
            if ((global.gmlplatform_config_sub == 3)) {
                {
                    _inst.gmlworld_grid_ratio += 1;
                };
            } else {
                {};
            };
        };
    } else {
        {
            _inst.gmlworld_grid_ratio += (1 * (1 - _inst.gmlworld_grid_ratio));
        };
    };
}

// #####################################################################################################
// {
// #line gml_Timeline_timeline_shake_sml_0_1 1
// /// Shake
//
// scr_shake_view(3);
//
//
// /* */
// /*  */ }
//
function Timeline_timeline_shake_sml_0(_inst, _other) {
    {
        gml_Script_scr_shake_view(_inst, _other, 3);
    };
}

// #####################################################################################################
// {
// #line gml_Timeline_timeline_shake_sml_3_1 1
// /// Shake
//
// scr_shake_view(3);
//
//
// /* */
// /*  */ }
//
function Timeline_timeline_shake_sml_1(_inst, _other) {
    {
        gml_Script_scr_shake_view(_inst, _other, 3);
    };
}

// #####################################################################################################
// {
// #line gml_Timeline_timeline_shake_sml_6_1 1
// /// Shake
//
// scr_shake_view(3);
//
//
// /* */
// /*  */ }
//
function Timeline_timeline_shake_sml_2(_inst, _other) {
    {
        gml_Script_scr_shake_view(_inst, _other, 3);
    };
}

// #####################################################################################################
// {
// #line gml_Timeline_timeline_shake_sml_9_1 1
// /// Shake
//
// scr_shake_view(2);
//
//
// /* */
// /*  */ }
//
function Timeline_timeline_shake_sml_3(_inst, _other) {
    {
        gml_Script_scr_shake_view(_inst, _other, 2);
    };
}

// #####################################################################################################
// {
// #line gml_Timeline_timeline_shake_sml_12_1 1
// /// Shake
//
// scr_shake_view(2);
//
//
// /* */
// /*  */ }
//
function Timeline_timeline_shake_sml_4(_inst, _other) {
    {
        gml_Script_scr_shake_view(_inst, _other, 2);
    };
}

// #####################################################################################################
// {
// #line gml_Timeline_timeline_shake_sml_15_1 1
// /// Shake
//
// scr_shake_view(2);
//
//
// /* */
// /*  */ }
//
function Timeline_timeline_shake_sml_5(_inst, _other) {
    {
        gml_Script_scr_shake_view(_inst, _other, 2);
    };
}

// #####################################################################################################
// {
// #line gml_Timeline_timeline_shake_sml_18_1 1
// /// Stop Shake
//
// view_xview[0] = 0;
//
// view_yview[0] = 0;
//
//
// /* */
// /*  */ }
//
function Timeline_timeline_shake_sml_6(_inst, _other) {
    {
        g_pBuiltIn.view_xview[0] = 0;
        g_pBuiltIn.view_yview[0] = 0;
    };
}

// #####################################################################################################
// {
// #line gml_Timeline_timeline_shake_med_0_1 1
// /// Shake
//
// scr_shake_view(10);
//
//
// /* */
// /*  */ }
//
function Timeline_timeline_shake_med_0(_inst, _other) {
    {
        gml_Script_scr_shake_view(_inst, _other, 10);
    };
}

// #####################################################################################################
// {
// #line gml_Timeline_timeline_shake_med_3_1 1
// /// Shake
//
// scr_shake_view(10);
//
//
// /* */
// /*  */ }
//
function Timeline_timeline_shake_med_1(_inst, _other) {
    {
        gml_Script_scr_shake_view(_inst, _other, 10);
    };
}

// #####################################################################################################
// {
// #line gml_Timeline_timeline_shake_med_6_1 1
// /// Shake
//
// scr_shake_view(10);
//
//
// /* */
// /*  */ }
//
function Timeline_timeline_shake_med_2(_inst, _other) {
    {
        gml_Script_scr_shake_view(_inst, _other, 10);
    };
}

// #####################################################################################################
// {
// #line gml_Timeline_timeline_shake_med_9_1 1
// /// Shake
//
// scr_shake_view(10);
//
//
// /* */
// /*  */ }
//
function Timeline_timeline_shake_med_3(_inst, _other) {
    {
        gml_Script_scr_shake_view(_inst, _other, 10);
    };
}

// #####################################################################################################
// {
// #line gml_Timeline_timeline_shake_med_12_1 1
// /// Shake
//
// scr_shake_view(5);
//
//
// /* */
// /*  */ }
//
function Timeline_timeline_shake_med_4(_inst, _other) {
    {
        gml_Script_scr_shake_view(_inst, _other, 5);
    };
}

// #####################################################################################################
// {
// #line gml_Timeline_timeline_shake_med_15_1 1
// /// Shake
//
// scr_shake_view(5);
//
//
// /* */
// /*  */ }
//
function Timeline_timeline_shake_med_5(_inst, _other) {
    {
        gml_Script_scr_shake_view(_inst, _other, 5);
    };
}

// #####################################################################################################
// {
// #line gml_Timeline_timeline_shake_med_18_1 1
// /// Stop Shake
//
// view_xview[0] = 0;
//
// view_yview[0] = 0;
//
//
// /* */
// /*  */ }
//
function Timeline_timeline_shake_med_6(_inst, _other) {
    {
        g_pBuiltIn.view_xview[0] = 0;
        g_pBuiltIn.view_yview[0] = 0;
    };
}

// #####################################################################################################
// {
// #line gml_Timeline_timeline_tutorial_0_1 1
// /// Variables Init
//
//     cursor_alpha = 0;
//
//     cursor_step = 0;
//
//     cursor_index = 0;
//
//     cursor_tween_step = 0;
//     cursor_tween_step_max = 60;
//     cursor_tween_start = 0;
//     cursor_tween_end = 250;
//
//     cursor_path_angle = 220;
//
//     cursor_x_base = floor( obj_ctrl_board.world_width_draw / 2 ) + 100;
//     cursor_y_base = floor( obj_ctrl_board.world_height_draw / 2 );
//
//     cursor_x = cursor_x_base;
//     cursor_y = cursor_y_base;
//
//
// /* */
// /*  */ }
//
function Timeline_timeline_tutorial_0(_inst, _other) {
    {
        _inst.gmlcursor_alpha = 0;
        _inst.gmlcursor_step = 0;
        _inst.gmlcursor_index = 0;
        _inst.gmlcursor_tween_step = 0;
        _inst.gmlcursor_tween_step_max = 60;
        _inst.gmlcursor_tween_start = 0;
        _inst.gmlcursor_tween_end = 250;
        _inst.gmlcursor_path_angle = 220;
        _inst.gmlcursor_x_base = (floor((yyInst(2).gmlworld_width_draw / 2)) + 100);
        _inst.gmlcursor_y_base = floor((yyInst(2).gmlworld_height_draw / 2));
        _inst.gmlcursor_x = _inst.gmlcursor_x_base;
        _inst.gmlcursor_y = _inst.gmlcursor_y_base;
    };
}

// #####################################################################################################
// {
// #line gml_Timeline_timeline_tutorial_15_1 1
// /// Step 1
//
//     cursor_step = 1;
//
//
// /* */
// /*  */ }
//
function Timeline_timeline_tutorial_1(_inst, _other) {
    {
        _inst.gmlcursor_step = 1;
    };
}

// #####################################################################################################
// {
// #line gml_Timeline_timeline_tutorial_30_1 1
// /// Simulate click
//
//     cursor_index = 1;
//
//     cursor_x_base -= 8;
//     cursor_y_base -= 8;
//     cursor_x = cursor_x_base;
//     cursor_y = cursor_y_base;
//
// /* */
// /*  */ }
//
function Timeline_timeline_tutorial_2(_inst, _other) {
    {
        _inst.gmlcursor_index = 1;
        _inst.gmlcursor_x_base -= 8;
        _inst.gmlcursor_y_base -= 8;
        _inst.gmlcursor_x = _inst.gmlcursor_x_base;
        _inst.gmlcursor_y = _inst.gmlcursor_y_base;
    };
}

// #####################################################################################################
// {
// #line gml_Timeline_timeline_tutorial_45_1 1
// /// Start Tween
//
//     alarm[1] = 1;
//
//     cursor_step = 2;
//
//
// /* */
// /*  */ }
//
function Timeline_timeline_tutorial_3(_inst, _other) {
    {
        if (!(_inst.alarm instanceof Array)) {
            _inst.alarm = [];
            _inst.alarm.__yy_owner = 1584050178;
        } else if (_inst.alarm.__yy_owner !== 1584050178) {
            _inst.alarm = _inst.alarm.slice(0);
            _inst.alarm.__yy_owner = 1584050178;
        }
        _inst.alarm[1] = 1;
        _inst.gmlcursor_step = 2;
    };
}

// #####################################################################################################
// {
// #line gml_Timeline_timeline_tutorial_115_1 1
// /// Restart Timeline
//
//     alarm[2] = 1;
//
//
// /* */
// /*  */ }
//
function Timeline_timeline_tutorial_4(_inst, _other) {
    {
        if (!(_inst.alarm instanceof Array)) {
            _inst.alarm = [];
            _inst.alarm.__yy_owner = 1584050178;
        } else if (_inst.alarm.__yy_owner !== 1584050178) {
            _inst.alarm = _inst.alarm.slice(0);
            _inst.alarm.__yy_owner = 1584050178;
        }
        _inst.alarm[2] = 1;
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_board_old_CreateEvent_1 1
// /// Variables Init
//
// // application_surface_draw_enable(false);
//
// // lengthdir_x
//
// bg_color = make_colour_rgb(34,21,33);
//
// seed_number = 1;
//
// random_set_seed(seed_number);
//
// floor_physics_inst[0] = 0;
// floor_physics_inst_count = 0;
// floor_ready = false;
//
// force_meter_active = false;
//
// ball_inst = 0;
//
// floor_build_animation = true;
//
// phys_world_pixel_to_meters = 0.0313;
//
//
// /* */
// #line gml_Object_obj_board_old_CreateEvent_2 1
// /// Construct Level
//
//     /* if ( line_count_anim < line_count ){
//
//         line_count_anim += 1;
//         alarm[0] = floor_contruct_speed;
//     }
//
//     surface_free(surf_floor);
//     surface_free(surf_floor_glow1);
//     surface_free(surf_floor_glow2);*/
//
//     scr_floor_init(0);
//
//     alarm[1] = floor_contruct_speed;
//
//     // Floor
//
//         //- scr_floor_surface_v1(line_count); // line_count_anim
//
//
//     // Floor Glow
//
//         //- scr_floor_glow();
//
//
// /* */
// #line gml_Object_obj_board_old_CreateEvent_3 1
// /// [ DISABLED ] Create Level - Version 2
// /*
//     scr_floor_init();
//
//     // Floor
//
//         scr_floor_surface_v1(line_count_anim);
//
//
//     // Floor Glow
//
//         scr_floor_glow();
//
//
//     alarm[0] = floor_contruct_speed;
// */
//
// /* */
// #line gml_Object_obj_board_old_CreateEvent_4 1
// /// [ DISABLED ] Create Level - Version 1
// /*
//     surf_level = surface_create(512, 512);
//
//     surface_set_target(surf_level);
//
//         draw_clear_alpha(c_white, 0);
//
//         draw_set_alpha(1);
//
//         dist_value = 2;
//
//             draw_line_width_colour(line_x1+dist_value,line_y1,line_x2+dist_value,line_y2,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1+dist_value,line_y1+dist_value,line_x2+dist_value,line_y2+dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1,line_y1+dist_value,line_x2,line_y2+dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1-dist_value,line_y1+dist_value,line_x2-dist_value,line_y2+dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1-dist_value,line_y1,line_x2-dist_value,line_y2,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1-dist_value,line_y1-dist_value,line_x2-dist_value,line_y2-dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1,line_y1-dist_value,line_x2,line_y2-dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1+dist_value,line_y1-dist_value,line_x2+dist_value,line_y2-dist_value,2,c_white,c_white);
//
//         draw_set_alpha(0.5);
//
//         dist_value = 4;
//
//             draw_line_width_colour(line_x1+dist_value,line_y1,line_x2+dist_value,line_y2,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1+dist_value,line_y1+dist_value,line_x2+dist_value,line_y2+dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1,line_y1+dist_value,line_x2,line_y2+dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1-dist_value,line_y1+dist_value,line_x2-dist_value,line_y2+dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1-dist_value,line_y1,line_x2-dist_value,line_y2,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1-dist_value,line_y1-dist_value,line_x2-dist_value,line_y2-dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1,line_y1-dist_value,line_x2,line_y2-dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1+dist_value,line_y1-dist_value,line_x2+dist_value,line_y2-dist_value,2,c_white,c_white);
//
//     surface_reset_target();
//
// */
//
// /* */
// /*  */ }
//
function gml_Object_obj_board_old_Create_0(_inst, _other) {
    {
        _inst.gmlbg_color = make_colour_rgb(34, 21, 33);
        _inst.gmlseed_number = 1;
        random_set_seed(_inst.gmlseed_number);
        if (!(_inst.gmlfloor_physics_inst instanceof Array)) {
            _inst.gmlfloor_physics_inst = [];
            _inst.gmlfloor_physics_inst.__yy_owner = 2998142590;
        } else if (_inst.gmlfloor_physics_inst.__yy_owner !== 2998142590) {
            _inst.gmlfloor_physics_inst = _inst.gmlfloor_physics_inst.slice(0);
            _inst.gmlfloor_physics_inst.__yy_owner = 2998142590;
        }
        _inst.gmlfloor_physics_inst[0] = 0;
        _inst.gmlfloor_physics_inst_count = 0;
        _inst.gmlfloor_ready = 0 ? 1 : 0;
        _inst.gmlforce_meter_active = 0 ? 1 : 0;
        _inst.gmlball_inst = 0;
        _inst.gmlfloor_build_animation = 1 ? 1 : 0;
        _inst.gmlphys_world_pixel_to_meters = 0.0313;
        gml_Script_scr_floor_init(_inst, _other, 0);
        if (!(_inst.alarm instanceof Array)) {
            _inst.alarm = [];
            _inst.alarm.__yy_owner = 1584050178;
        } else if (_inst.alarm.__yy_owner !== 1584050178) {
            _inst.alarm = _inst.alarm.slice(0);
            _inst.alarm.__yy_owner = 1584050178;
        }
        _inst.alarm[1] = _inst.gmlfloor_contruct_speed;
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_board_old_ObjAlarm3_1 1
// /// Level Refresh
//
// scr_level_create_v2();
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_board_old_Alarm_3(_inst, _other) {
    {
        gml_Script_scr_level_create_v2(_inst, _other);
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_board_old_ObjAlarm2_1 1
// /// Create Ball
//
//     if ( ball_inst != 0 ){ with ( ball_inst ){ instance_destroy(); }}
//
//     ball_inst = instance_create(line_x1[1]+5,10,obj_ball);
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_board_old_Alarm_2(_inst, _other) {
    {
        if ((_inst.gmlball_inst != 0)) {
            {
                {
                    var __yy__v64 = GetWithArray(_inst.gmlball_inst);
                    for (var __yy__v65 in __yy__v64) {
                        if (!__yy__v64.hasOwnProperty(__yy__v65)) continue;
                        var __yy__v66 = __yy__v64[__yy__v65];
                        if (__yy__v66.marked) continue;
                        if (!__yy__v66.active) continue; {
                            instance_destroy(__yy__v66);
                        }
                    }
                };
            };
        };
        _inst.gmlball_inst = instance_create((_inst.gmlline_x1[1] + 5), 10, 6);
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_board_old_ObjAlarm1_1 1
// /// Construct Level - Add Section
//
//     line_count_anim += 1;
//
//     if ((( line_count_anim > 10 ) and ( fps < 5 )) or ( !floor_build_animation )){
//
//         floor_ready = true;
//
//         floor_build_animation = false;
//     }
//     else if ( line_count_anim < line_count ){
//
//         alarm[1] = floor_contruct_speed;
//     }
//     else {
//
//         floor_ready = true;
//     }
//
//
//     // Ready to Start Game
//     if ( floor_ready ){
//
//         line_count_anim = line_count;
//
//         alarm[2] = 1; // Create Ball
//     }
//
// /* */
// /*  */ }
//
function gml_Object_obj_board_old_Alarm_1(_inst, _other) {
    {
        _inst.gmlline_count_anim += 1;
        if ((((((_inst.gmlline_count_anim > 10)) && ((g_pBuiltIn.fps < 5)))) || (!(_inst.gmlfloor_build_animation > 0.5)))) {
            {
                _inst.gmlfloor_ready = 1 ? 1 : 0;
                _inst.gmlfloor_build_animation = 0 ? 1 : 0;
            };
        } else {
            if ((_inst.gmlline_count_anim < _inst.gmlline_count)) {
                {
                    if (!(_inst.alarm instanceof Array)) {
                        _inst.alarm = [];
                        _inst.alarm.__yy_owner = 1584050178;
                    } else if (_inst.alarm.__yy_owner !== 1584050178) {
                        _inst.alarm = _inst.alarm.slice(0);
                        _inst.alarm.__yy_owner = 1584050178;
                    }
                    _inst.alarm[1] = _inst.gmlfloor_contruct_speed;
                };
            } else {
                {
                    _inst.gmlfloor_ready = 1 ? 1 : 0;
                };
            };
        };
        if (_inst.gmlfloor_ready > 0.5) {
            {
                _inst.gmlline_count_anim = _inst.gmlline_count;
                if (!(_inst.alarm instanceof Array)) {
                    _inst.alarm = [];
                    _inst.alarm.__yy_owner = 1584050178;
                } else if (_inst.alarm.__yy_owner !== 1584050178) {
                    _inst.alarm = _inst.alarm.slice(0);
                    _inst.alarm.__yy_owner = 1584050178;
                }
                _inst.alarm[2] = 1;
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_board_old_ObjAlarm0_1 1
// /// [ DEPRECATED ] Construct Level
// /*
//     line_count_anim += 1;
//
//     if ( line_count_anim < line_count ){
//
//         alarm[0] = floor_contruct_speed;
//     }
//     else {
//
//         line_count_anim = line_count;
//
//         floor_ready = true;
//     }
//
//     surface_free(surf_floor);
//     surface_free(surf_floor_glow1);
//     surface_free(surf_floor_glow2);
//
//     // Floor
//
//         scr_floor_surface_v1(line_count_anim);
//
//
//     // Floor Glow
//
//         scr_floor_glow();
// */
//
// /* */
// /*  */ }
//
function gml_Object_obj_board_old_Alarm_0(_inst, _other) {
    {};
}

// #####################################################################################################
// {
// #line gml_Object_obj_board_old_StepNormalEvent_1 1
// /// [ DISABLED ] Check Surfaces - Version 1
// /*
// if ( !surface_exists(surf_level) ){
//
//     surf_level = surface_create(512, 512);
//
//     surface_set_target(surf_level);
//
//         draw_clear_alpha(c_white, 0);
//
//         draw_line_width_colour(line_x1,line_y1,line_x2,line_y2,2,line_color,line_color);
//
//     surface_reset_target();
//
// }
// */
//
//
// /* */
// #line gml_Object_obj_board_old_StepNormalEvent_2 1
// /// [ DISABLEDi ] Check Surfaces - Version 2
// /*
// if (( !surface_exists(surf_floor)) or ( !surface_exists(surf_floor_glow1)) or ( !surface_exists(surf_floor_glow2))){
//
//     scr_floor_surface_v1(line_count);
//
//     scr_floor_glow();
// }
// */
//
// /* */
// #line gml_Object_obj_board_old_StepNormalEvent_3 1
// /// Detect Ball in Hole
//
// if ( ball_inst != 0 ){
//
//     if ( !ball_in_hole ){
//
//         if (( obj_ball.x > hole_x1 and obj_ball.x < hole_x2 ) and ( obj_ball.y > hole_y1 and obj_ball.y < hole_y2 )){
//
//             ball_in_hole = true;
//
//             alarm[3] = room_speed * 2; // refresh level
//         }
//     }
// }
//
//
// /* */
// #line gml_Object_obj_board_old_StepNormalEvent_4 1
// /// Force Meter Control
//
// if ( floor_ready and force_meter_active ){
//
//     force_meter_x2 = mouse_x;
//     force_meter_y2 = mouse_y;
//
//     if ( force_meter_y2 < force_meter_y1 ){ force_meter_y2 = force_meter_y1; }
// }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_board_old_Step_0(_inst, _other) {
    {
        if ((_inst.gmlball_inst != 0)) {
            {
                if (!(_inst.gmlball_in_hole > 0.5)) {
                    {
                        if ((((((yyInst(6).x > _inst.gmlhole_x1)) && ((yyInst(6).x < _inst.gmlhole_x2)))) && ((((yyInst(6).y > _inst.gmlhole_y1)) && ((yyInst(6).y < _inst.gmlhole_y2)))))) {
                            {
                                _inst.gmlball_in_hole = 1 ? 1 : 0;
                                if (!(_inst.alarm instanceof Array)) {
                                    _inst.alarm = [];
                                    _inst.alarm.__yy_owner = 1584050178;
                                } else if (_inst.alarm.__yy_owner !== 1584050178) {
                                    _inst.alarm = _inst.alarm.slice(0);
                                    _inst.alarm.__yy_owner = 1584050178;
                                }
                                _inst.alarm[3] = (g_pBuiltIn.room_speed * 2);
                            };
                        };
                    };
                };
            };
        };
        if (((_inst.gmlfloor_ready > 0.5) && (_inst.gmlforce_meter_active > 0.5))) {
            {
                _inst.gmlforce_meter_x2 = g_pBuiltIn.mouse_x;
                _inst.gmlforce_meter_y2 = g_pBuiltIn.mouse_y;
                if ((_inst.gmlforce_meter_y2 < _inst.gmlforce_meter_y1)) {
                    {
                        _inst.gmlforce_meter_y2 = _inst.gmlforce_meter_y1;
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_board_old_GlobalLeftButtonReleased_1 1
// /// Force Meter - De-Activate
//
//     force_meter_active = false;
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_board_old_Mouse_56(_inst, _other) {
    {
        _inst.gmlforce_meter_active = 0 ? 1 : 0;
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_board_old_GlobalLeftButtonPressed_1 1
// /// Refresh Level
//
//     if ( mouse_x < 50 and mouse_y < 50 ){
//
//         scr_level_create_v2();
//     }
//
//
// /* */
// #line gml_Object_obj_board_old_GlobalLeftButtonPressed_2 1
// /// Restart Level
//
//     if ( mouse_x > room_width - 50 and mouse_y < 50 ){
//
//         sprite_delete(onfly_sprite_floor);
//
//         game_restart();
//     }
//
//
// /* */
// #line gml_Object_obj_board_old_GlobalLeftButtonPressed_3 1
// /// Force Meter - Activate
//
//     if ( floor_ready ){
//
//         force_meter_x1 = mouse_x;
//         force_meter_y1 = mouse_y;
//
//         force_meter_active = true;
//     }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_board_old_Mouse_53(_inst, _other) {
    {
        if ((((g_pBuiltIn.mouse_x < 50)) && ((g_pBuiltIn.mouse_y < 50)))) {
            {
                gml_Script_scr_level_create_v2(_inst, _other);
            };
        };
        if ((((g_pBuiltIn.mouse_x > (g_pBuiltIn.room_width - 50))) && ((g_pBuiltIn.mouse_y < 50)))) {
            {
                sprite_delete(_inst.gmlonfly_sprite_floor);
                game_restart();
            };
        };
        if (_inst.gmlfloor_ready > 0.5) {
            {
                _inst.gmlforce_meter_x1 = g_pBuiltIn.mouse_x;
                _inst.gmlforce_meter_y1 = g_pBuiltIn.mouse_y;
                _inst.gmlforce_meter_active = 1 ? 1 : 0;
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_board_old_DrawGUIEnd_1 1
// /// Draw Application Surface
//
// // draw_surface(application_surface,0,0);
//
//
// /* */
// #line gml_Object_obj_board_old_DrawGUIEnd_2 1
// /// [ DEBUG ] Draws
// /* */
// draw_set_font(font_pixel_arial_12);
//
// draw_set_color(c_white);
//
// draw_set_halign(fa_left);
// draw_set_valign(fa_bottom);
//
// var x_pos = 15;
// var y_pos = 30;
//
// draw_text(x_pos,y_pos, "width: " + string(display_get_width()));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "time: " + string(current_time));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "fps: " + string(fps));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "fps real: " + string(floor(fps_real)));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "ready: " + string(floor(floor_ready)));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "hole: " + string(floor(ball_in_hole)));
//
// y_pos += 25;
//
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_board_old_Draw_75(_inst, _other) {
    {
        draw_set_font(0);
        draw_set_color(16777215);
        draw_set_halign(0);
        draw_set_valign(2);
        var gmlx_pos = 15;
        var gmly_pos = 30;
        draw_text(gmlx_pos, gmly_pos, ("width: " + string(display_get_width())));
        gmly_pos += 25;
        draw_text(gmlx_pos, gmly_pos, ("time: " + string(g_pBuiltIn.get_current_time())));
        gmly_pos += 25;
        draw_text(gmlx_pos, gmly_pos, ("fps: " + string(g_pBuiltIn.fps)));
        gmly_pos += 25;
        draw_text(gmlx_pos, gmly_pos, ("fps real: " + string(floor(g_pBuiltIn.fps_real))));
        gmly_pos += 25;
        draw_text(gmlx_pos, gmly_pos, ("ready: " + string(floor(_inst.gmlfloor_ready))));
        gmly_pos += 25;
        draw_text(gmlx_pos, gmly_pos, ("hole: " + string(floor(_inst.gmlball_in_hole))));
        gmly_pos += 25;
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_board_old_DrawEvent_1 1
// /// [ DISABLED ] Draw Line - Version 1
// /*
// draw_clear_alpha(bg_color,1);
//
// draw_surface_ext(surf_level,0,0,1,1,0,line_color,0.5);
//
// draw_set_color(c_white);
// draw_set_alpha(1);
//
// draw_line_width_colour(line_x1,line_y1,line_x2,line_y2,2,line_color,line_color);
// */
//
// /* */
// #line gml_Object_obj_board_old_DrawEvent_2 1
// /// Draw Floor
//
// // draw_clear_alpha(bg_color,1);
//
// // draw_surface_ext(surf_floor_glow2,0,0,1,1,0,line_color,line_glow_alpha[2]);
//
// // draw_surface_ext(surf_floor_glow1,0,0,1,1,0,line_color,line_glow_alpha[1]);
//
// // draw_surface_ext(surf_floor,0,0,1,1,0,line_color,1);
//
// if ( !floor_ready ){
//
//     scr_floor_draw(line_count_anim);
// }
// else {
//
//     draw_sprite(onfly_sprite_floor,0,0,0);
// }
//
// // draw_rectangle_colour(hole_x1,hole_y1,hole_x2,hole_y2,c_white,c_white,c_white,c_white,false);
//
//
// /* */
// #line gml_Object_obj_board_old_DrawEvent_3 1
// /// Draw Force Meter
//
//     if ( force_meter_active ){
//
//         draw_line_width_colour(force_meter_x1,force_meter_y1,force_meter_x2,force_meter_y2,3,c_white,c_white)
//     }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_board_old_Draw_0(_inst, _other) {
    {
        if (!(_inst.gmlfloor_ready > 0.5)) {
            {
                gml_Script_scr_floor_draw(_inst, _other, _inst.gmlline_count_anim);
            };
        } else {
            {
                draw_sprite(_inst, _inst.gmlonfly_sprite_floor, 0, 0, 0);
            };
        };
        if (_inst.gmlforce_meter_active > 0.5) {
            {
                draw_line_width_colour(_inst.gmlforce_meter_x1, _inst.gmlforce_meter_y1, _inst.gmlforce_meter_x2, _inst.gmlforce_meter_y2, 3, 16777215, 16777215);
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_board_old_KeyPressed_R_1 1
// /// Refresh Level
//
//     scr_level_create_v2();
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_board_old_KeyPress_82(_inst, _other) {
    {
        gml_Script_scr_level_create_v2(_inst, _other);
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_board_old_KeyPressed_F_1 1
// /// Change Fullscreen
//
// if ( window_get_fullscreen() ){
//
//     window_set_fullscreen(false);
// }
// else {
//
//     window_set_fullscreen(true);
// }
//
// scr_screen_init(false);
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_board_old_KeyPress_70(_inst, _other) {
    {
        if (window_get_fullscreen() > 0.5) {
            {
                window_set_fullscreen(0);
            };
        } else {
            {
                window_set_fullscreen(1);
            };
        };
        gml_Script_scr_screen_init(_inst, _other, 0);
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_first_run_CreateEvent_1 1
// /// Plaform Config
//
// global.platform_config = 0;
// global.platform_config_sub = 0;
//
// if ( os_browser != browser_not_a_browser ){
// // Browser
//
//     global.platform_config = 1;
//     global.platform_config_sub = 1;
//
//     if (( os_type = os_windows ) or ( os_type = os_linux ) or ( os_type = os_macosx )){
//     // Desktop: Windows, Mac, Linux
//
//         global.platform_config_sub = 2;
//     }
//     else if (( os_type = os_winphone ) or ( os_type = os_android ) or ( os_type = os_ios ) or ( os_type = os_tizen )){
//     // Mobile: Android, Windows Phone, iOS, Tizen
//
//         global.platform_config_sub = 3;
//     }
// }
// else if (( os_type = os_windows ) or ( os_type = os_linux ) or ( os_type = os_macosx )){
// // Desktop: Windows, Mac, Linux
//
//     global.platform_config = 2;
//     global.platform_config_sub = 2;
// }
// else if (( os_type = os_winphone ) or ( os_type = os_android ) or ( os_type = os_ios ) or ( os_type = os_tizen )){
// // Mobile: Android, Windows Phone, iOS, Tizen
//
//     global.platform_config = 3;
//     global.platform_config_sub = 3;
// }
//
//
// /* */
// #line gml_Object_obj_ctrl_first_run_CreateEvent_2 1
// /// Screen Init
//
//     scr_screen_init(true);
//
//
// /* */
// #line gml_Object_obj_ctrl_first_run_CreateEvent_3 1
// /// First Run Variables
//
// global.tempo_var_3 = false;
//
// global.game_mode = 1;
//
// global.game_submode = 1;
//
// global.game_lowres = false;
//
// global.game_lowfps = false;
//
// global.music_start_played = false;
//
// global.volume_master = 1;
//
// global.first_run_menu = false;
//
// global.temp_var = 0;
// global.temp_string = "";
//
// global.debug_me = false;
//
// global.famobi_active = true;
//
//
// /* */
// #line gml_Object_obj_ctrl_first_run_CreateEvent_4 1
// /// Analytics Init
//
// scr_analytics_init();
//
// scr_analytics_send("GameLaunch");
//
//
// /* */
// #line gml_Object_obj_ctrl_first_run_CreateEvent_5 1
// /// Goto Next Room
//
//     alarm[0] = 30;
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_first_run_Create_0(_inst, _other) {
    {
        global.gmlplatform_config = 0;
        global.gmlplatform_config_sub = 0;
        if ((g_pBuiltIn.get_os_browser() != (-1))) {
            {
                global.gmlplatform_config = 1;
                global.gmlplatform_config_sub = 1;
                if ((((g_pBuiltIn.get_os_type() == 0)) || ((g_pBuiltIn.get_os_type() == 6)) || ((g_pBuiltIn.get_os_type() == 1)))) {
                    {
                        global.gmlplatform_config_sub = 2;
                    };
                } else {
                    if ((((g_pBuiltIn.get_os_type() == 7)) || ((g_pBuiltIn.get_os_type() == 4)) || ((g_pBuiltIn.get_os_type() == 3)) || ((g_pBuiltIn.get_os_type() == 8)))) {
                        {
                            global.gmlplatform_config_sub = 3;
                        };
                    };
                };
            };
        } else {
            if ((((g_pBuiltIn.get_os_type() == 0)) || ((g_pBuiltIn.get_os_type() == 6)) || ((g_pBuiltIn.get_os_type() == 1)))) {
                {
                    global.gmlplatform_config = 2;
                    global.gmlplatform_config_sub = 2;
                };
            } else {
                if ((((g_pBuiltIn.get_os_type() == 7)) || ((g_pBuiltIn.get_os_type() == 4)) || ((g_pBuiltIn.get_os_type() == 3)) || ((g_pBuiltIn.get_os_type() == 8)))) {
                    {
                        global.gmlplatform_config = 3;
                        global.gmlplatform_config_sub = 3;
                    };
                };
            };
        };
        gml_Script_scr_screen_init(_inst, _other, 1);
        global.gmltempo_var_3 = 0 ? 1 : 0;
        global.gmlgame_mode = 1;
        global.gmlgame_submode = 1;
        global.gmlgame_lowres = 0 ? 1 : 0;
        global.gmlgame_lowfps = 0 ? 1 : 0;
        global.gmlmusic_start_played = 0 ? 1 : 0;
        global.gmlvolume_master = 1;
        global.gmlfirst_run_menu = 0 ? 1 : 0;
        global.gmltemp_var = 0;
        global.gmltemp_string = "";
        global.gmldebug_me = 0 ? 1 : 0;
        global.gmlfamobi_active = 1 ? 1 : 0;
        gml_Script_scr_analytics_init(_inst, _other);
        gml_Script_scr_analytics_send(_inst, _other, "GameLaunch");
        if (!(_inst.alarm instanceof Array)) {
            _inst.alarm = [];
            _inst.alarm.__yy_owner = 1584050178;
        } else if (_inst.alarm.__yy_owner !== 1584050178) {
            _inst.alarm = _inst.alarm.slice(0);
            _inst.alarm.__yy_owner = 1584050178;
        }
        _inst.alarm[0] = 30;
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_first_run_ObjAlarm0_1 1
// /// Goto Next Room
//
//     room_goto_next();
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_first_run_Alarm_0(_inst, _other) {
    {
        room_goto_next();
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_first_run_WebAsyncEvent_1 1
// /// Process HTTP
//
// /*
// if ( ds_map_find_value(async_load, "id") == get ){
//
//     if ( ds_map_find_value(async_load, "status") == 0 ){
//
//         r_str = ds_map_find_value(async_load, "result");
//     }
//     else {
//
//         r_str = "null";
//     }
// }
// */
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_first_run_Other_62(_inst, _other) {
    {};
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_CreateEvent_1 1
// /// Variables Init
//
// /*
// if ( !global.tempo_var_3 ){
//
//     global.tempo_var_3 = true;
// }
// else {
//
//     // instance_destroy();
// }
// */
//
// // html5
//
//     mhtml5_var_transfer();
//
//
// // Random Init
//
//     seed_number = string(date_get_year(date_current_datetime()));
//     seed_number = seed_number + string(date_get_month(date_current_datetime()));
//     seed_number = seed_number + string(date_get_day(date_current_datetime()));
//     seed_number = seed_number + string(date_get_hour(date_current_datetime()));
//     seed_number = seed_number + string(date_get_minute(date_current_datetime()));
//     seed_number = seed_number + string(date_get_second(date_current_datetime()));
//
//     random_set_seed(real(seed_number));
//
//     random_set_seed(seed_number);
//
//
// // Floor
//
//     floor_started = false;
//     floor_ready = false;
//     floor_physics_inst[0] = 0;
//     floor_physics_inst_count = 0;
//     floor_build_animation = true;
//     floor_point_mid_y = 0;
//     floor_point_lowest_y = room_height;
//     floor_point_highest_y = 0;
//
//     floor_flash_standby = false;
//     floor_flash_active = false;
//
//     floor_on_the_fly = false;
//     if ( global.platform_config == 2 ){ floor_on_the_fly = true; } // Destop
//
//     level_score = 0;
//
//     // Floor Surface
//
//         surf_floor_step = 0;
//
//         surf_floor = surface_create(view_wview[0], view_hview[0]);
//
//         surface_set_target(surf_floor);
//
//             draw_clear_alpha(c_white, 0);
//
//             draw_set_alpha(1);
//
//         surface_reset_target();
//
//
// // World Color
//
//     scr_color_background(0);
//
//     scr_color_world();
//
//
// // Ball
//
//     ball_inst = 0;
//
//     ball_explosion_active = false;
//
//     ball_explosion_step = 0;
//     ball_explosion_step_max = 11;
//     ball_explosion_x = 0;
//     ball_explosion_y = 0;
//
//
// // Physics
//
//     game_ratio = 1;
//
//
// // Force Meter
//
//     force_meter_ready = false;
//
//     force_meter_show = false;
//
//     force_meter_stop_count_base = 5;
//     force_meter_stop_count = force_meter_stop_count_base;
//
//     force_meter_alpha = 0.5;
//
//     strength_modifier[0] = 6;
//     strength_modifier[1] = 4;
//
//     force_meter_color_base = make_colour_rgb(46,59,44);
//     force_meter_color = make_colour_rgb(46,59,44);
//     force_meter_color_on = make_colour_rgb(0,255,240);
//
//     // Dash
//     force_meter_dash_size = 20;
//     force_meter_dash_gap = 5;
//     force_meter_dash_gerth = 4;
//     force_meter_dash_dot_size = 8;
//
//     scr_meter_sizes();
//
//
// // Hits
//
//     game_levels_hits_total_vis = 0;
//
//     game_hits_curr_vis = 0;
//
//     game_holes_completed = 0;
//
//     game_holes_completed_vis = 0;
//
//
//
// // Misc
//
//     debug_draw_grid = false;
//     debug_var = 0;
//
//     game_over = false;
//     game_over_actions = false;
//
//     game_start = false;
//     game_start_actions = false;
//
//     surface_view = -1;
//
//     hole_triangle_move_quot = 0.25;
//     hole_triangle_move_max = 10;
//     hole_triangle_move_dir = 1;
//     hole_triangle_move_count = 0;
//
//     hole_number = 0;
//     surf_hole_arrow = surface_create(128, 128);
//
//     circle_fade_size = 0;
//     circle_fade_size_add = 0;
//     circle_fade_grow = false;
//     circle_fade_draw = false;
//
//     game_levels_max_level = 0;
//
//     mouse_hand = false;
//     window_set_cursor(cr_default);
//
//     screen_fade_alpha = 1;
//
//     sound_oob[0] = music_accents3_09;
//     sound_oob[1] = music_accents3_10;
//
//     ads_level_count = 1;
//     ads_level_count_max = 3;
//
//
// // Ball
//
//     ball_start_x = 10;
//     ball_start_y = 10;
//
//     floor_code = "";
//
//
// // Level Storage
//
//     floor_mode = global.floor_mode; // 0: random; 1:level save; 2:level read;
//
//
// // Famobi
//
//     famobi_active = global.famobi_active;
//
//     js_Pause_active = false;
//
//     js_Pause = false;
//
//
// // Audio
//
//     audio_world_accent[0] = music_accents3_03;
//     audio_world_accent[1] = music_accents3_07;
//     audio_world_accent[2] = music_accents3_08;
//
//     /* // [audio] //
//     audio_hit_pos = 0;
//     audio_hit_pos_max = 6;
//
//     audio_hit_sound[0] = sound_accent_1;
//     audio_hit_sound[1] = sound_accent_2;
//     audio_hit_sound[2] = sound_accent_3;
//     audio_hit_sound[3] = sound_accent_4;
//     audio_hit_sound[4] = sound_accent_5;
//     audio_hit_sound[5] = sound_accent_6;
//     */
//
//
// // Screenshot Saturday
//
//     // alarm[6] = room_speed * 6;
//
//
// // Debug
//
//     /*
//     show_debug_message("2");
//     show_debug_message("view_wview[0]: " + string(view_wview[0]));
//     show_debug_message("view_hview[0]: " + string(view_hview[0]));
//     show_debug_message("view_wport[0]: " + string(view_wport[0]));
//     show_debug_message("view_hport[0]: " + string(view_hport[0]));
//     show_debug_message("win_w: " + string(window_get_width()));
//     show_debug_message("win_h: " + string(window_get_height()));
//
//     alarm[5] = room_speed * 3;
//     */
//
//
// /* */
// #line gml_Object_obj_ctrl_board_CreateEvent_2 1
// /// Language : Load
//
//     scr_dialog_load();
//
//     // scr_language_load();
//
//
// /* */
// #line gml_Object_obj_ctrl_board_CreateEvent_3 1
// /// Physics & Level Init
//
//     scr_physics_world_create();
//
//     alarm[3] = 15; // Create Level
//
//
// /* */
// #line gml_Object_obj_ctrl_board_CreateEvent_4 1
// /// [INI] Load Progress Varibles
//
//     if ( global.famobi_active ){
//     // famobi
//
//         scr_famobi_progress_load(global.game_mode);
//     }
//     else {
//
//         scr_ini_progress_load(global.game_mode);
//     }
//
// /* */
// #line gml_Object_obj_ctrl_board_CreateEvent_5 1
// /// [ DISABLED ] Create Level - Version 1
// /*
//     surf_level = surface_create(512, 512);
//
//     surface_set_target(surf_level);
//
//         draw_clear_alpha(c_white, 0);
//
//         draw_set_alpha(1);
//
//         dist_value = 2;
//
//             draw_line_width_colour(line_x1+dist_value,line_y1,line_x2+dist_value,line_y2,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1+dist_value,line_y1+dist_value,line_x2+dist_value,line_y2+dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1,line_y1+dist_value,line_x2,line_y2+dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1-dist_value,line_y1+dist_value,line_x2-dist_value,line_y2+dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1-dist_value,line_y1,line_x2-dist_value,line_y2,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1-dist_value,line_y1-dist_value,line_x2-dist_value,line_y2-dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1,line_y1-dist_value,line_x2,line_y2-dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1+dist_value,line_y1-dist_value,line_x2+dist_value,line_y2-dist_value,2,c_white,c_white);
//
//         draw_set_alpha(0.5);
//
//         dist_value = 4;
//
//             draw_line_width_colour(line_x1+dist_value,line_y1,line_x2+dist_value,line_y2,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1+dist_value,line_y1+dist_value,line_x2+dist_value,line_y2+dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1,line_y1+dist_value,line_x2,line_y2+dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1-dist_value,line_y1+dist_value,line_x2-dist_value,line_y2+dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1-dist_value,line_y1,line_x2-dist_value,line_y2,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1-dist_value,line_y1-dist_value,line_x2-dist_value,line_y2-dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1,line_y1-dist_value,line_x2,line_y2-dist_value,2,c_white,c_white);
//
//             draw_line_width_colour(line_x1+dist_value,line_y1-dist_value,line_x2+dist_value,line_y2-dist_value,2,c_white,c_white);
//
//     surface_reset_target();
//
// */
//
// /* */
// #line gml_Object_obj_ctrl_board_CreateEvent_6 1
// /// [ DISABLED ] Create Level - Version 2
// /*
//     scr_floor_init();
//
//     // Floor
//
//         scr_floor_surface_v1(line_count_anim);
//
//
//     // Floor Glow
//
//         scr_floor_glow();
//
//
//     alarm[0] = floor_contruct_speed;
// */
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_Create_0(_inst, _other) {
    {
        gml_Script_mhtml5_var_transfer(_inst, _other);
        _inst.gmlseed_number = string(date_get_year(date_current_datetime()));
        _inst.gmlseed_number = (_inst.gmlseed_number + string(date_get_month(date_current_datetime())));
        _inst.gmlseed_number = (_inst.gmlseed_number + string(date_get_day(date_current_datetime())));
        _inst.gmlseed_number = (_inst.gmlseed_number + string(date_get_hour(date_current_datetime())));
        _inst.gmlseed_number = (_inst.gmlseed_number + string(date_get_minute(date_current_datetime())));
        _inst.gmlseed_number = (_inst.gmlseed_number + string(date_get_second(date_current_datetime())));
        random_set_seed(real(_inst.gmlseed_number));
        random_set_seed(_inst.gmlseed_number);
        _inst.gmlfloor_started = 0 ? 1 : 0;
        _inst.gmlfloor_ready = 0 ? 1 : 0;
        if (!(_inst.gmlfloor_physics_inst instanceof Array)) {
            _inst.gmlfloor_physics_inst = [];
            _inst.gmlfloor_physics_inst.__yy_owner = 2998142590;
        } else if (_inst.gmlfloor_physics_inst.__yy_owner !== 2998142590) {
            _inst.gmlfloor_physics_inst = _inst.gmlfloor_physics_inst.slice(0);
            _inst.gmlfloor_physics_inst.__yy_owner = 2998142590;
        }
        _inst.gmlfloor_physics_inst[0] = 0;
        _inst.gmlfloor_physics_inst_count = 0;
        _inst.gmlfloor_build_animation = 1 ? 1 : 0;
        _inst.gmlfloor_point_mid_y = 0;
        _inst.gmlfloor_point_lowest_y = g_pBuiltIn.room_height;
        _inst.gmlfloor_point_highest_y = 0;
        _inst.gmlfloor_flash_standby = 0 ? 1 : 0;
        _inst.gmlfloor_flash_active = 0 ? 1 : 0;
        _inst.gmlfloor_on_the_fly = 0 ? 1 : 0;
        if ((global.gmlplatform_config == 2)) {
            {
                _inst.gmlfloor_on_the_fly = 1 ? 1 : 0;
            };
        };
        _inst.gmllevel_score = 0;
        _inst.gmlsurf_floor_step = 0;
        _inst.gmlsurf_floor = surface_create(g_pBuiltIn.view_wview[0], g_pBuiltIn.view_hview[0]);
        surface_set_target(_inst.gmlsurf_floor);
        draw_clear_alpha(16777215, 0);
        draw_set_alpha(1);
        surface_reset_target();
        gml_Script_scr_color_background(_inst, _other, 0);
        gml_Script_scr_color_world(_inst, _other);
        _inst.gmlball_inst = 0;
        _inst.gmlball_explosion_active = 0 ? 1 : 0;
        _inst.gmlball_explosion_step = 0;
        _inst.gmlball_explosion_step_max = 11;
        _inst.gmlball_explosion_x = 0;
        _inst.gmlball_explosion_y = 0;
        _inst.gmlgame_ratio = 1;
        _inst.gmlforce_meter_ready = 0 ? 1 : 0;
        _inst.gmlforce_meter_show = 0 ? 1 : 0;
        _inst.gmlforce_meter_stop_count_base = 5;
        _inst.gmlforce_meter_stop_count = _inst.gmlforce_meter_stop_count_base;
        _inst.gmlforce_meter_alpha = 0.5;
        if (!(_inst.gmlstrength_modifier instanceof Array)) {
            _inst.gmlstrength_modifier = [];
            _inst.gmlstrength_modifier.__yy_owner = 4210611228;
        } else if (_inst.gmlstrength_modifier.__yy_owner !== 4210611228) {
            _inst.gmlstrength_modifier = _inst.gmlstrength_modifier.slice(0);
            _inst.gmlstrength_modifier.__yy_owner = 4210611228;
        }
        _inst.gmlstrength_modifier[0] = 6;
        _inst.gmlstrength_modifier[1] = 4;
        _inst.gmlforce_meter_color_base = make_colour_rgb(46, 59, 44);
        _inst.gmlforce_meter_color = make_colour_rgb(46, 59, 44);
        _inst.gmlforce_meter_color_on = make_colour_rgb(0, 255, 240);
        _inst.gmlforce_meter_dash_size = 20;
        _inst.gmlforce_meter_dash_gap = 5;
        _inst.gmlforce_meter_dash_gerth = 4;
        _inst.gmlforce_meter_dash_dot_size = 8;
        gml_Script_scr_meter_sizes(_inst, _other);
        _inst.gmlgame_levels_hits_total_vis = 0;
        _inst.gmlgame_hits_curr_vis = 0;
        _inst.gmlgame_holes_completed = 0;
        _inst.gmlgame_holes_completed_vis = 0;
        _inst.gmldebug_draw_grid = 0 ? 1 : 0;
        _inst.gmldebug_var = 0;
        _inst.gmlgame_over = 0 ? 1 : 0;
        _inst.gmlgame_over_actions = 0 ? 1 : 0;
        _inst.gmlgame_start = 0 ? 1 : 0;
        _inst.gmlgame_start_actions = 0 ? 1 : 0;
        _inst.gmlsurface_view = (-1);
        _inst.gmlhole_triangle_move_quot = 0.25;
        _inst.gmlhole_triangle_move_max = 10;
        _inst.gmlhole_triangle_move_dir = 1;
        _inst.gmlhole_triangle_move_count = 0;
        _inst.gmlhole_number = 0;
        _inst.gmlsurf_hole_arrow = surface_create(128, 128);
        _inst.gmlcircle_fade_size = 0;
        _inst.gmlcircle_fade_size_add = 0;
        _inst.gmlcircle_fade_grow = 0 ? 1 : 0;
        _inst.gmlcircle_fade_draw = 0 ? 1 : 0;
        _inst.gmlgame_levels_max_level = 0;
        _inst.gmlmouse_hand = 0 ? 1 : 0;
        window_set_cursor(0);
        _inst.gmlscreen_fade_alpha = 1;
        if (!(_inst.gmlsound_oob instanceof Array)) {
            _inst.gmlsound_oob = [];
            _inst.gmlsound_oob.__yy_owner = 3790580160;
        } else if (_inst.gmlsound_oob.__yy_owner !== 3790580160) {
            _inst.gmlsound_oob = _inst.gmlsound_oob.slice(0);
            _inst.gmlsound_oob.__yy_owner = 3790580160;
        }
        _inst.gmlsound_oob[0] = 11;
        _inst.gmlsound_oob[1] = 12;
        _inst.gmlads_level_count = 1;
        _inst.gmlads_level_count_max = 3;
        _inst.gmlball_start_x = 10;
        _inst.gmlball_start_y = 10;
        _inst.gmlfloor_code = "";
        _inst.gmlfloor_mode = global.gmlfloor_mode;
        _inst.gmlfamobi_active = global.gmlfamobi_active;
        _inst.gmljs_Pause_active = 0 ? 1 : 0;
        _inst.gmljs_Pause = 0 ? 1 : 0;
        if (!(_inst.gmlaudio_world_accent instanceof Array)) {
            _inst.gmlaudio_world_accent = [];
            _inst.gmlaudio_world_accent.__yy_owner = 1595288474;
        } else if (_inst.gmlaudio_world_accent.__yy_owner !== 1595288474) {
            _inst.gmlaudio_world_accent = _inst.gmlaudio_world_accent.slice(0);
            _inst.gmlaudio_world_accent.__yy_owner = 1595288474;
        }
        _inst.gmlaudio_world_accent[0] = 6;
        _inst.gmlaudio_world_accent[1] = 7;
        _inst.gmlaudio_world_accent[2] = 8;
        gml_Script_scr_dialog_load(_inst, _other);
        gml_Script_scr_physics_world_create(_inst, _other);
        if (!(_inst.alarm instanceof Array)) {
            _inst.alarm = [];
            _inst.alarm.__yy_owner = 1584050178;
        } else if (_inst.alarm.__yy_owner !== 1584050178) {
            _inst.alarm = _inst.alarm.slice(0);
            _inst.alarm.__yy_owner = 1584050178;
        }
        _inst.alarm[3] = 15;
        if (global.gmlfamobi_active > 0.5) {
            {
                gml_Script_scr_famobi_progress_load(_inst, _other, global.gmlgame_mode);
            };
        } else {
            {
                gml_Script_scr_ini_progress_load(_inst, _other, global.gmlgame_mode);
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_ObjAlarm6_1 1
// /// Screenshot Saturday
// /*
//     scr_level_next_save();
//
//     scr_ball_destroy();
//
//     scr_level_create_v3();
//
//     alarm[6] = room_speed * 2;
// */
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_Alarm_6(_inst, _other) {
    {};
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_ObjAlarm5_1 1
// /// Floor Flash Off
//
// floor_flash_standby = false;
//
// floor_flash_active = false;
//
//
// /* */
// #line gml_Object_obj_ctrl_board_ObjAlarm5_2 1
// /// Change Visible Hit Variables
//
// if ( global.game_mode == 1 ){
// // Neon Courses
//
//     game_levels_hits_total_vis = game_levels_hits_total;
// }
//
// game_hits_curr_vis = game_hits_curr;
//
//
// /* */
// #line gml_Object_obj_ctrl_board_ObjAlarm5_3 1
// /// Start Level : Reset Variables
//
// if ( global.game_mode == 3 ){
// // Just in Time
//
//     game_mode_3_time_left += game_mode_3_time_add; // Add Remaining
//
//     game_mode_3_time_add = game_mode_3_time_add_base; // Reset
// }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_ObjAlarm5_4 1
// /// [ DISABLED ] Start Level: Music / Sound
//
// // scr_play_sound(sound_accents3_03,1,false);
//
//
// // ------------------ //
//
// /*
// if ( !global.music_start_played ){
//
//     // [audio] // music_world = scr_play_music(music_backnoisev2,1,true,0.5);
//
//     scr_play_sound(sound_accents3_03,1,false);
//
//     global.music_start_played = true;
// }
// else {
//
//     scr_play_sound(sound_beep_1,1,false);
// }
// */
//
//
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_Alarm_5(_inst, _other) {
    {
        _inst.gmlfloor_flash_standby = 0 ? 1 : 0;
        _inst.gmlfloor_flash_active = 0 ? 1 : 0;
        if ((global.gmlgame_mode == 1)) {
            {
                _inst.gmlgame_levels_hits_total_vis = _inst.gmlgame_levels_hits_total;
            };
        };
        _inst.gmlgame_hits_curr_vis = _inst.gmlgame_hits_curr;
        if ((global.gmlgame_mode == 3)) {
            {
                _inst.gmlgame_mode_3_time_left += _inst.gmlgame_mode_3_time_add;
                _inst.gmlgame_mode_3_time_add = _inst.gmlgame_mode_3_time_add_base;
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_ObjAlarm3_1 1
// /// Level : Create New
//
//     scr_ball_destroy();
//
//     scr_level_create_v3();
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_Alarm_3(_inst, _other) {
    {
        gml_Script_scr_ball_destroy(_inst, _other);
        gml_Script_scr_level_create_v3(_inst, _other);
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_ObjAlarm2_1 1
// /// Create Ball
//
//     scr_ball_destroy();
//
//     ball_explosion_active = false;
//
//
//     // Start position
//
//         ball_start_x = line_x1[ball_start_line] + floor(( line_x2[ball_start_line] - line_x1[ball_start_line] ) / 2 )
//
//         ball_start_y = line_y1[ball_start_line] - 25;
//
//
//     // Create Ball
//
//         ball_inst = instance_create(ball_start_x,ball_start_y,obj_ball);
//
//
//     // Audio
//
//     if ( !audio_is_playing(audio_world_accent[world_song_id]) ){
//
//         scr_play_sound(sound_beep_2,1,false);
//     }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_Alarm_2(_inst, _other) {
    {
        gml_Script_scr_ball_destroy(_inst, _other);
        _inst.gmlball_explosion_active = 0 ? 1 : 0;
        _inst.gmlball_start_x = (_inst.gmlline_x1[_inst.gmlball_start_line] + floor(((_inst.gmlline_x2[_inst.gmlball_start_line] - _inst.gmlline_x1[_inst.gmlball_start_line]) / 2)));
        _inst.gmlball_start_y = (_inst.gmlline_y1[_inst.gmlball_start_line] - 25);
        _inst.gmlball_inst = instance_create(_inst.gmlball_start_x, _inst.gmlball_start_y, 6);
        if (!(audio_is_playing(_inst.gmlaudio_world_accent[_inst.gmlworld_song_id]) > 0.5)) {
            {
                gml_Script_scr_play_sound(_inst, _other, 2, 1, 0);
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_ObjAlarm1_1 1
// /// Construct Level - Add Section
//
// if ( !floor_ready ){
//
//     line_count_anim += 1;
//
//     //--
//     /* if ((( line_count_anim > 10 ) and ( global.game_lowfps )) or ( !floor_build_animation )){
//
//         floor_ready = true;
//
//         floor_build_animation = false;
//
//         line_count_anim = line_count;
//     }
//     else */
//     if ( line_count_anim <= line_count ){
//
//         alarm[1] = floor_contruct_speed; // Continue Animation
//     }
//     else {
//
//         floor_ready = true;
//
//         line_count_anim = line_count;
//     }
//
//     // if ( surf_floor_step == 0 ){}
//
//     if ( !surface_exists(surf_floor) ){
//
//         surf_floor = surface_create(view_wview[0], view_hview[0]);
//
//         surface_set_target(surf_floor);
//
//             draw_clear_alpha(c_white, 0);
//
//             draw_set_alpha(1);
//
//         surface_reset_target();
//     }
//
//     surface_set_target(surf_floor);
//
//         // scr_floor_draw(line_count);
//
//         scr_floor_surface_v2(line_count_anim,0,0,1,line_color,line_gerth,1,line_count_anim);
//
//         scr_floor_surface_v2(line_count_anim,0,0,1,line_color,(line_gerth/2)-1,3,line_count_anim);
//
//     surface_reset_target();
// }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_ObjAlarm1_2 1
// /// Contruct Level - Ready
//
//     // Ready to Start Game
//     if ( floor_ready ){
//
//         line_count_anim = line_count;
//
//         alarm[2] = 1; // Create Ball
//
//         if (( global.game_mode = 2 ) or ( global.game_mode = 3 ) or ( global.game_mode = 4 )){
//         // Hole in One
//
//             game_holes_completed_vis = game_holes_completed;
//         }
//
//
//         // Surface: Floor
//
//             surf_floor = surface_create(view_wview[0], view_hview[0]);
//
//             surface_set_target(surf_floor);
//
//                 draw_clear_alpha(c_white, 0);
//
//                 draw_set_alpha(1);
//
//                 scr_floor_draw(line_count);
//
//             surface_reset_target();
//
//
//         // Surface : Hole Arrow
//
//             scr_surface_hole_arrow();
//     }
//
//
//
//
// /* */
// #line gml_Object_obj_ctrl_board_ObjAlarm1_3 1
// /// Start Level: Music / Sound
//
// if ( line_count_anim == 0 ){
//
//     audio_stop_all();
//
//     world_song_id = choose(0,1,2);
//
//     scr_play_music(audio_world_accent[world_song_id],1,false,1);
// }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_Alarm_1(_inst, _other) {
    {
        if (!(_inst.gmlfloor_ready > 0.5)) {
            {
                _inst.gmlline_count_anim += 1;
                if ((_inst.gmlline_count_anim <= _inst.gmlline_count)) {
                    {
                        if (!(_inst.alarm instanceof Array)) {
                            _inst.alarm = [];
                            _inst.alarm.__yy_owner = 1584050178;
                        } else if (_inst.alarm.__yy_owner !== 1584050178) {
                            _inst.alarm = _inst.alarm.slice(0);
                            _inst.alarm.__yy_owner = 1584050178;
                        }
                        _inst.alarm[1] = _inst.gmlfloor_contruct_speed;
                    };
                } else {
                    {
                        _inst.gmlfloor_ready = 1 ? 1 : 0;
                        _inst.gmlline_count_anim = _inst.gmlline_count;
                    };
                };
                if (!(surface_exists(_inst.gmlsurf_floor) > 0.5)) {
                    {
                        _inst.gmlsurf_floor = surface_create(g_pBuiltIn.view_wview[0], g_pBuiltIn.view_hview[0]);
                        surface_set_target(_inst.gmlsurf_floor);
                        draw_clear_alpha(16777215, 0);
                        draw_set_alpha(1);
                        surface_reset_target();
                    };
                };
                surface_set_target(_inst.gmlsurf_floor);
                gml_Script_scr_floor_surface_v2(_inst, _other, _inst.gmlline_count_anim, 0, 0, 1, _inst.gmlline_color, _inst.gmlline_gerth, 1, _inst.gmlline_count_anim);
                gml_Script_scr_floor_surface_v2(_inst, _other, _inst.gmlline_count_anim, 0, 0, 1, _inst.gmlline_color, ((_inst.gmlline_gerth / 2) - 1), 3, _inst.gmlline_count_anim);
                surface_reset_target();
            };
        };
        if (_inst.gmlfloor_ready > 0.5) {
            {
                _inst.gmlline_count_anim = _inst.gmlline_count;
                if (!(_inst.alarm instanceof Array)) {
                    _inst.alarm = [];
                    _inst.alarm.__yy_owner = 1584050178;
                } else if (_inst.alarm.__yy_owner !== 1584050178) {
                    _inst.alarm = _inst.alarm.slice(0);
                    _inst.alarm.__yy_owner = 1584050178;
                }
                _inst.alarm[2] = 1;
                if ((((global.gmlgame_mode == 2)) || ((global.gmlgame_mode == 3)) || ((global.gmlgame_mode == 4)))) {
                    {
                        _inst.gmlgame_holes_completed_vis = _inst.gmlgame_holes_completed;
                    };
                };
                _inst.gmlsurf_floor = surface_create(g_pBuiltIn.view_wview[0], g_pBuiltIn.view_hview[0]);
                surface_set_target(_inst.gmlsurf_floor);
                draw_clear_alpha(16777215, 0);
                draw_set_alpha(1);
                gml_Script_scr_floor_draw(_inst, _other, _inst.gmlline_count);
                surface_reset_target();
                gml_Script_scr_surface_hole_arrow(_inst, _other);
            };
        };
        if ((_inst.gmlline_count_anim == 0)) {
            {
                audio_stop_all();
                _inst.gmlworld_song_id = choose(0, 1, 2);
                gml_Script_scr_play_music(_inst, _other, _inst.gmlaudio_world_accent[_inst.gmlworld_song_id], 1, 0, 1);
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_ObjAlarm0_1 1
// /// Tutorial
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_Alarm_0(_inst, _other) {
    {};
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_StepNormalEvent_1 1
// /// FPS Check
//
// scr_fps_check();
//
//
// /* */
// #line gml_Object_obj_ctrl_board_StepNormalEvent_2 1
// /// HTML5 Variable Transfer
//
//     mhtml5_var_transfer();
//
//
// /* */
// #line gml_Object_obj_ctrl_board_StepNormalEvent_3 1
// /// Control - Tutorial
//
// if (( floor_ready ) and ( game_tutorial_1 == 0 )){
//
//     instance_create(0,0,obj_tutorial_pointer);
//
//     game_tutorial_1 = 1;
//
//     if ( global.famobi_active ){
//     // famobi
//
//         scr_famobi_options_save();
//     }
//     else {
//
//         scr_ini_options_save();
//     }
//
//     /* ini_open("savedata.ini");
//         // ini_write_real("progression", "game_tutorial_1", 1);
//     ini_close(); */
// }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_StepNormalEvent_4 1
// /// Control - Ball
//
//     if ( ball_inst != 0 ){
//
//         // Ball : in Hole
//         if ( !ball_in_hole ){
//
//             var hole_detect_move = ( obj_ball.ball_size_radius * 2 )
//             if ( hole_detect_move < 5 ){ hole_detect_move = 5; }
//
//             if (( ball_inst.x > hole_x1 and ball_inst.x < hole_x2 ) and ( ball_inst.y > ( hole_y2 - ( hole_detect_move )) and ball_inst.y < hole_y2 )){
//
//                 ball_in_hole = true;
//
//                 with ( obj_ball ){ alarm[2] = 15; } // ball particle explosion;
//
//                 // alarm[3] = room_speed * 1.5; // level : create new
//
//                 scr_color_background(0);
//
//                 scr_level_next_save();
//             }
//         }
//
//
//         // Ball : Reset ( Draw Position )
//         if ( ball_inst.phy_active and ball_inst.phy_speed != 0 ){
//
//             if (( ball_inst.x_draw > ( world_width_draw + 10 )) or ( ball_inst.x_draw < ( 0 - 10 )) or ( ball_inst.y_draw > ( world_height_draw + 10 ))){
//
//                 alarm[2] = room_speed; // Create Ball
//
//                 scr_play_sound(sound_oob[choose(0,1)],1,false);
//
//                 scr_ball_destroy();
//
//                 if ( global.game_mode == 4 ){
//                 // Don't Run Out
//
//                     game_mode_4_balls_left -= 1;
//
//                     if ( game_mode_4_balls_left < 0 ){ game_mode_4_balls_left = 0; }
//                 }
//
//             }
//         }
//
//
//         if ( ball_inst != 0 ){
//
//             if ( ball_inst.y_draw < ( -1 * floor( ball_inst.ball_size_radius * 2 ))){
//
//                 ball_marker_x = ball_inst.x_draw;
//             }
//             else {
//
//                 ball_marker_x = noone;
//             }
//         }
//     }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_StepNormalEvent_5 1
// /// Control - Force Meter
//
// // Meter Ready
//
//     if (( ball_inst != 0 ) and ( !ball_in_hole )){
//
//         if ( !ball_inst.phy_active ){ // ball_inst.phy_speed < 0.10
//
//             force_meter_stop_count -= 1;
//
//             if ( force_meter_stop_count < 0 ){ force_meter_stop_count = 0; }
//         }
//         else { force_meter_stop_count = force_meter_stop_count_base; }
//     }
//
//     // if (( ball_inst != 0 ) and ( !ball_in_hole ) and ( ball_inst.phy_speed < 0.10 or !ball_inst.phy_active )){
//     if ( force_meter_stop_count == 0 ){
//     // On
//
//         force_meter_ready = true;
//
//         force_meter_alpha = 1;
//
//         force_meter_color = force_meter_color_on;
//     }
//     else {
//     // Off
//
//         force_meter_ready = false;
//
//         force_meter_alpha = 0.5;
//
//         force_meter_color = force_meter_color_base;
//     }
//
//
// // Force Meter : Mouse Position
//
//     if ( force_meter_show ){
//
//         force_meter_x2 = mouse_x;
//
//         force_meter_y2 = mouse_y;
//
//         if ( force_meter_y2 < force_meter_y1 ){ force_meter_y2 = force_meter_y1; }
//
//         if (( mouse_x <= 0 or mouse_x >= world_width_draw )){ scr_force_apply(); }
//         else if (( mouse_y <= 0 or mouse_y >= world_height_draw )){ scr_force_apply(); }
//     }
//
//     if ( force_meter_show ){
//     // Pointer Line
//
//         force_meter_pointer_x1 = force_meter_x1;
//         force_meter_pointer_y1 = force_meter_y1;
//         force_meter_pointer_x2 = force_meter_x2;
//         force_meter_pointer_y2 = force_meter_y2;
//     }
//
// if ( force_meter_show ){
//
//     force_meter_angle_main = point_direction(force_meter_x2,force_meter_y2,force_meter_x1,force_meter_y1);
//
//     force_meter_lenght = point_distance(force_meter_x2,force_meter_y2,force_meter_x1,force_meter_y1);
//
//     // scr_meter_ctrl_body_triangle(); // Meter : Body : Triangle
//
//     // scr_meter_ctrl_body_arrow(); // Meter : Body : Arrow
//
//     scr_meter_ctrl_pointer_triangle(); // Meter : Pointer : Triangle
// }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_StepNormalEvent_6 1
// /// Control - Floor Surface
//
// if ( floor_started ){
//
//     if ( floor_ready ){
//
//         if ( !surface_exists(surf_floor) ){
//
//             surf_floor = surface_create(view_wview[0], view_hview[0]);
//
//             surface_set_target(surf_floor);
//
//                 draw_clear_alpha(c_white, 0);
//
//                 draw_set_alpha(1);
//
//                 scr_floor_draw(line_count);
//
//             surface_reset_target();
//         }
//     }
//
//     /*
//     else {
//
//         if ( surf_floor_step == 0 ){
//
//             surface_free(surf_floor);
//
//             surf_floor = surface_create(view_wview[0], view_hview[0]);
//
//             // cr_floor_surface_v2(line_count,0,0,1,line_color,line_gerth,1,0);
//         }
//     }
//     */
// }
//
// /* */
// #line gml_Object_obj_ctrl_board_StepNormalEvent_7 1
// /// Control - Floor Flash
//
// if ( floor_started and !floor_ready ){
//
//     floor_flash_standby = true;
// }
//
// if ( !floor_flash_active and floor_flash_standby and floor_ready ){
//
//     floor_flash_active = true;
//
//     alarm[5] = 3;
// }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_StepNormalEvent_8 1
// /// Control - Triangle Hole & Surface
//
// if ( !global.win_popup_active ){
//
//     if ( hole_triangle_move_dir ){
//
//         hole_triangle_move_count += hole_triangle_move_quot;
//
//         if ( hole_triangle_move_count >= hole_triangle_move_max ){
//
//             hole_triangle_move_dir = 0;
//         }
//     }
//     else {
//
//         hole_triangle_move_count -= hole_triangle_move_quot;
//
//         if ( hole_triangle_move_count <= 0 ){
//
//             hole_triangle_move_dir = 1;
//         }
//     }
// }
//
// if ( floor_started ){
//
//     if ( floor_ready ){
//
//         if ( !surface_exists(surf_hole_arrow) ){
//
//             scr_surface_hole_arrow();
//         }
//     }
// }
//
// /* */
// #line gml_Object_obj_ctrl_board_StepNormalEvent_9 1
// /// Control - Hit Display
//
// /* */
// #line gml_Object_obj_ctrl_board_StepNormalEvent_10 1
// /// Control - Circle Fade
//
// if ( circle_fade_grow ){
//
//     circle_fade_size = floor( circle_fade_size + circle_fade_size_add );
//
//     if ( circle_fade_size > ( circle_fade_x + floor( global.win_w * 0.25 ))){
//
//         circle_fade_grow = false;
//
//         ads_level_count += 1;
//
//         alarm[3] = 1; // level : create new
//
//
//         // Famobi
//
//             if (( famobi_active ) and ( ads_level_count > ads_level_count_max )){
//
//                 famobi_showAd("function()",true);
//
//                 ads_level_count = 1;
//             }
//     }
// }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_StepNormalEvent_11 1
// /// Control : Game Modes
//
// if ( global.game_mode == 1 ){
// // The 300
//
//     if ( !game_over ){
//
//         if ( game_mode_1_complete ){
//         // NOTA: game_mode_1_complete = true in scr_level_next_save();
//
//             game_over = true;
//
//             // Update Best Score
//             // NOTA: changed in scr_level_next_save();
//
//             // Save: The 300
//             // scr_level_next_save();
//             // scr_ini_progress_save(global.game_mode);
//         }
//     }
// }
// else if ( global.game_mode == 2 ){
// // Hole in One
//
//     if ( !game_over ){
//
//         if ( game_hits_curr == 1 and force_meter_ready ){
//
//             game_over = true;
//
//             // Update top Score
//             if ( game_holes_completed > game_mode_2_holes_record ){ game_mode_2_holes_record = game_holes_completed; }
//
//             // Save: Hole in One
//             if ( global.famobi_active ){
//             // famobi
//
//                 scr_famobi_progress_save(global.game_mode);
//             }
//             else {
//
//                 scr_ini_progress_save(global.game_mode);
//             }
//         }
//     }
// }
// else if ( global.game_mode == 3 ){
// // Just in Time
//
//     if ( !game_start ){
//
//         if ( game_hits_curr == 0 and force_meter_ready ){
//
//             game_start = true;
//
//             game_mode_3_time_start = current_time;
//
//             game_mode_3_time_prev = current_time;
//         }
//     }
//     else {
//     // Game Running
//
//         var time_passed = current_time - game_mode_3_time_prev;
//
//         game_mode_3_time_left -= time_passed;
//
//         if ( game_mode_3_time_left < 0 ){ game_mode_3_time_left = 0; }
//
//         game_mode_3_time_prev = current_time;
//     }
//
//     if ( game_start and !game_over ){
//
//         if ( game_mode_3_time_left == 0 ){
//
//             game_over = true;
//
//             // Update top Score
//             if ( game_holes_completed > game_mode_3_holes_record ){ game_mode_3_holes_record = game_holes_completed; }
//
//             // Save: Hole in One
//             if ( global.famobi_active ){
//             // famobi
//
//                 scr_famobi_progress_save(global.game_mode);
//             }
//             else {
//
//                 scr_ini_progress_save(global.game_mode);
//             }
//         }
//     }
// }
// else if ( global.game_mode == 4 ){
// // Don't Run Out
//
//     if ( !game_over ){
//
//         if ( game_mode_4_balls_left == 0 and force_meter_ready ){
//
//             game_over = true;
//
//             // Update top Score
//             if ( game_holes_completed > game_mode_4_holes_record ){ game_mode_4_holes_record = game_holes_completed; }
//
//             // Save: Hole in One
//             if ( global.famobi_active ){
//             // famobi
//
//                 scr_famobi_progress_save(global.game_mode);
//             }
//             else {
//
//                 scr_ini_progress_save(global.game_mode);
//             }
//         }
//     }
// }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_StepNormalEvent_12 1
// /// Control : Game Over
//
// if ( game_over ){
//
//     if ( !game_over_actions ){
//
//         // Analytics
//
//             var mode_string = "GameOver_" + string(global.game_mode);
//
//             scr_analytics_send(mode_string);
//
//
//         // Background
//         game_over_bg_alpha = 0;
//         game_over_bg_alpha_max = 0.75;
//         game_over_bg_x1 = -10;
//         game_over_bg_y1 = -10;
//         game_over_bg_x2 = world_width_draw + 10;
//         game_over_bg_y2 = world_height_draw + 10;
//
//         game_over_btn_visible = false;
//
//         // Game Mode : Settings
//
//             if ( global.game_mode == 1 ){
//             // Neon Courses
//
//                 var text_id = 0;
//
//                 // Text: Game Over
//
//                     game_over_text[text_id] = lang_text_gover[0]; // "COURSE COMPLETE";
//                     game_over_text_color[text_id] = c_aqua;
//                     game_over_text_halign[text_id] = fa_center;
//                     game_over_text_x[text_id] = ( world_width_draw / 2 );
//                     game_over_text_y[text_id] = ( world_height_draw / 2 ) - 150;
//                     text_id += 1;
//
//                 // Text: Main Courses
//
//                     game_over_text[text_id] = lang_text_gover[1] + string(game_mode_1_max_level[global.game_submode]) + "h"; // "Neon Course "
//                     game_over_text_color[text_id] = c_aqua;
//                     game_over_text_halign[text_id] = fa_center;
//                     game_over_text_x[text_id] = ( world_width_draw / 2 );
//                     game_over_text_y[text_id] = ( world_height_draw / 2 ) - 50;
//                     text_id += 1;
//
//                 // Text: Score
//
//                     if ( game_mode_1_new_record ){
//
//                         game_over_text[text_id] = lang_text_gover[2] + string(game_mode_1_best_score); // "New Record!:"
//                         game_over_text_color[text_id] = c_red;
//                     }
//                     else {
//
//                         game_over_text[text_id] = lang_text_gover[3] + string(game_mode_1_complete_score) + "  " + lang_text_gover[4] + string(game_mode_1_best_score); // "Score: - Best Score:"
//                         game_over_text_color[text_id] = c_white;
//                     }
//
//                     game_over_text_halign[text_id] = fa_center;
//                     game_over_text_x[text_id] = ( world_width_draw / 2 );
//                     game_over_text_y[text_id] = ( world_height_draw / 2 );
//                     text_id += 1;
//
//                 // Button: Retry
//
//                     var btn_x = ( world_width_draw / 2 ) - 188;
//                     var btn_y = ( world_height_draw / 2 ) + 100;
//
//                     game_over_btn[1] = instance_create(btn_x,btn_y,obj_button_a);
//
//                     with ( game_over_btn[1] ){ scr_btn_settings(1); }
//
//
//                 // Button: Menu
//
//                     var btn_x = ( world_width_draw / 2 ) + 89;
//                     var btn_y = ( world_height_draw / 2 ) + 100;
//
//                     game_over_btn[2] = instance_create(btn_x,btn_y,obj_button_a);
//
//                     with ( game_over_btn[2] ){ scr_btn_settings(2); }
//
//
//                 // Famobi : High Score
//
//                     if ( famobi_active and game_mode_1_new_record ){
//
//                         famobi_submitHighscore("Course: " + string(game_mode_1_max_level[global.game_submode]), game_mode_1_complete_score);
//                     }
//             }
//             else if ( global.game_mode == 2 ){
//             // Hole in One
//
//                 var text_id = 0;
//
//                 // Text: Game Over
//
//                     game_over_text[text_id] = lang_text_gover[5]; // "GAME OVER";
//                     game_over_text_color[text_id] = c_red;
//                     game_over_text_halign[text_id] = fa_center;
//                     game_over_text_x[text_id] = ( world_width_draw / 2 );
//                     game_over_text_y[text_id] = ( world_height_draw / 2 ) - 150;
//                     text_id += 1;
//
//                 // Text: Hole in One
//
//                     game_over_text[text_id] = lang_text_gover[6]; // "Hole in One";
//                     game_over_text_color[text_id] = c_aqua;
//                     game_over_text_halign[text_id] = fa_center;
//                     game_over_text_x[text_id] = ( world_width_draw / 2 );
//                     game_over_text_y[text_id] = ( world_height_draw / 2 ) - 50;
//                     text_id += 1;
//
//                 // Text: Score
//
//                     game_over_text[text_id] = lang_text_gover[3] + string(game_holes_completed) + "  " + lang_text_gover[7] + string(game_mode_2_holes_record); // "Score: - Top Score:"
//                     game_over_text_color[text_id] = c_white;
//                     game_over_text_halign[text_id] = fa_center;
//                     game_over_text_x[text_id] = ( world_width_draw / 2 );
//                     game_over_text_y[text_id] = ( world_height_draw / 2 );
//                     text_id += 1;
//
//                 // Button: Retry
//
//                     var btn_x = ( world_width_draw / 2 ) - 188;
//                     var btn_y = ( world_height_draw / 2 ) + 100;
//
//                     game_over_btn[1] = instance_create(btn_x,btn_y,obj_button_a);
//
//                     with ( game_over_btn[1] ){ scr_btn_settings(1); }
//
//
//                 // Button: Menu
//
//                     var btn_x = ( world_width_draw / 2 ) + 89;
//                     var btn_y = ( world_height_draw / 2 ) + 100;
//
//                     game_over_btn[2] = instance_create(btn_x,btn_y,obj_button_a);
//
//                     with ( game_over_btn[2] ){ scr_btn_settings(2); }
//
//
//                 // Famobi : High Score
//
//                     if ( famobi_active ){
//
//                         famobi_submitHighscore("Hole-in-One", game_holes_completed);
//                     }
//             }
//             else if ( global.game_mode == 3 ){
//             // Just in Time
//
//                 var text_id = 0;
//
//                 // Text: Game Over
//
//                     game_over_text[text_id] = lang_text_gover[5]; // "GAME OVER";
//                     game_over_text_color[text_id] = c_red;
//                     game_over_text_halign[text_id] = fa_center;
//                     game_over_text_x[text_id] = ( world_width_draw / 2 );
//                     game_over_text_y[text_id] = ( world_height_draw / 2 ) - 150;
//                     text_id += 1;
//
//                 // Text: Hole in One
//
//                     game_over_text[text_id] = lang_text_gover[8]; // "Just in Time";
//                     game_over_text_color[text_id] = c_aqua;
//                     game_over_text_halign[text_id] = fa_center;
//                     game_over_text_x[text_id] = ( world_width_draw / 2 );
//                     game_over_text_y[text_id] = ( world_height_draw / 2 ) - 50;
//                     text_id += 1;
//
//                 // Text: Score
//
//                     game_over_text[text_id] = lang_text_gover[3] + string(game_holes_completed) + "  " + lang_text_gover[7] + string(game_mode_3_holes_record); // "Score:" - "Top Score:"
//                     game_over_text_color[text_id] = c_white;
//                     game_over_text_halign[text_id] = fa_center;
//                     game_over_text_x[text_id] = ( world_width_draw / 2 );
//                     game_over_text_y[text_id] = ( world_height_draw / 2 );
//                     text_id += 1;
//
//                 // Button: Retry
//
//                     var btn_x = ( world_width_draw / 2 ) - 188;
//                     var btn_y = ( world_height_draw / 2 ) + 100;
//
//                     game_over_btn[1] = instance_create(btn_x,btn_y,obj_button_a);
//
//                     with ( game_over_btn[1] ){ scr_btn_settings(1); }
//
//
//                 // Button: Menu
//
//                     var btn_x = ( world_width_draw / 2 ) + 89;
//                     var btn_y = ( world_height_draw / 2 ) + 100;
//
//                     game_over_btn[2] = instance_create(btn_x,btn_y,obj_button_a);
//
//                     with ( game_over_btn[2] ){ scr_btn_settings(2); }
//
//             }
//             else if ( global.game_mode == 4 ){
//             // Don't Run Out
//
//                 var text_id = 0;
//
//                 // Text: Game Over
//
//                     game_over_text[text_id] = lang_text_gover[5]; // "GAME OVER";
//                     game_over_text_color[text_id] = c_red;
//                     game_over_text_halign[text_id] = fa_center;
//                     game_over_text_x[text_id] = ( world_width_draw / 2 );
//                     game_over_text_y[text_id] = ( world_height_draw / 2 ) - 150;
//                     text_id += 1;
//
//                 // Text: Hole in One
//
//                     game_over_text[text_id] = lang_text_gover[9]; // "Don't Run Out";
//                     game_over_text_color[text_id] = c_aqua;
//                     game_over_text_halign[text_id] = fa_center;
//                     game_over_text_x[text_id] = ( world_width_draw / 2 );
//                     game_over_text_y[text_id] = ( world_height_draw / 2 ) - 50;
//                     text_id += 1;
//
//                 // Text: Score
//
//                     game_over_text[text_id] = lang_text_gover[3] + string(game_holes_completed) + "  " + lang_text_gover[7] + string(game_mode_4_holes_record); // "Score:" - "Top Score:"
//                     game_over_text_color[text_id] = c_white;
//                     game_over_text_halign[text_id] = fa_center;
//                     game_over_text_x[text_id] = ( world_width_draw / 2 );
//                     game_over_text_y[text_id] = ( world_height_draw / 2 );
//                     text_id += 1;
//
//                 // Button: Retry
//
//                     var btn_x = ( world_width_draw / 2 ) - 188;
//                     var btn_y = ( world_height_draw / 2 ) + 100;
//
//                     game_over_btn[1] = instance_create(btn_x,btn_y,obj_button_a);
//
//                     with ( game_over_btn[1] ){ scr_btn_settings(1); }
//
//
//                 // Button: Menu
//
//                     var btn_x = ( world_width_draw / 2 ) + 89;
//                     var btn_y = ( world_height_draw / 2 ) + 100;
//
//                     game_over_btn[2] = instance_create(btn_x,btn_y,obj_button_a);
//
//                     with ( game_over_btn[2] ){ scr_btn_settings(2); }
//             }
//
//         game_over_actions = true;
//
//         force_meter_show = false;
//
//         scr_ball_destroy();
//     }
//
//     // Fade In Background
//
//         game_over_bg_alpha += 0.05;
//
//         if ( game_over_bg_alpha > game_over_bg_alpha_max ){
//
//             game_over_bg_alpha = game_over_bg_alpha_max;
//
//             game_over_btn_visible = true;
//         }
// }
//
//
//
// /* */
// #line gml_Object_obj_ctrl_board_StepNormalEvent_13 1
// /// [ famobi ] Pause Request
//
//     if ( famobi_active and !js_Pause_active ){
//
//         if ( famobi_getJSpause() ){
//
//             js_Pause_active = true;
//
//             global.win_popup_active = true;
//
//             instance_create(0,0,obj_win_sidemenu);
//         }
//     }
//
// /* */
// #line gml_Object_obj_ctrl_board_StepNormalEvent_14 1
// /// [ DISABLED ] Check Surfaces - Version 1
// /*
// if ( !surface_exists(surf_level) ){
//
//     surf_level = surface_create(512, 512);
//
//     surface_set_target(surf_level);
//
//         draw_clear_alpha(c_white, 0);
//
//         draw_line_width_colour(line_x1,line_y1,line_x2,line_y2,2,line_color,line_color);
//
//     surface_reset_target();
//
// }
// */
//
//
// /* */
// #line gml_Object_obj_ctrl_board_StepNormalEvent_15 1
// /// [ DISABLED ] Check Surfaces - Version 2
// /*
// if (( !surface_exists(surf_floor)) or ( !surface_exists(surf_floor_glow1)) or ( !surface_exists(surf_floor_glow2))){
//
//     scr_floor_surface_v1(line_count);
//
//     scr_floor_glow();
// }
// */
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_Step_0(_inst, _other) {
    {
        gml_Script_scr_fps_check(_inst, _other);
        gml_Script_mhtml5_var_transfer(_inst, _other);
        if (((_inst.gmlfloor_ready > 0.5) && ((_inst.gmlgame_tutorial_1 == 0)))) {
            {
                instance_create(0, 0, 12);
                _inst.gmlgame_tutorial_1 = 1;
                if (global.gmlfamobi_active > 0.5) {
                    {
                        gml_Script_scr_famobi_options_save(_inst, _other);
                    };
                } else {
                    {
                        gml_Script_scr_ini_options_save(_inst, _other);
                    };
                };
            };
        };
        if ((_inst.gmlball_inst != 0)) {
            {
                if (!(_inst.gmlball_in_hole > 0.5)) {
                    {
                        var gmlhole_detect_move = (yyInst(6).gmlball_size_radius * 2);
                        if ((gmlhole_detect_move < 5)) {
                            {
                                gmlhole_detect_move = 5;
                            };
                        };
                        if ((((((yyInst(_inst.gmlball_inst).x > _inst.gmlhole_x1)) && ((yyInst(_inst.gmlball_inst).x < _inst.gmlhole_x2)))) && ((((yyInst(_inst.gmlball_inst).y > (_inst.gmlhole_y2 - gmlhole_detect_move))) && ((yyInst(_inst.gmlball_inst).y < _inst.gmlhole_y2)))))) {
                            {
                                _inst.gmlball_in_hole = 1 ? 1 : 0; {
                                    var __yy__v67 = GetWithArray(6);
                                    for (var __yy__v68 in __yy__v67) {
                                        if (!__yy__v67.hasOwnProperty(__yy__v68)) continue;
                                        var __yy__v69 = __yy__v67[__yy__v68];
                                        if (__yy__v69.marked) continue;
                                        if (!__yy__v69.active) continue; {
                                            if (!(__yy__v69.alarm instanceof Array)) {
                                                __yy__v69.alarm = [];
                                                __yy__v69.alarm.__yy_owner = 773313037;
                                            } else if (__yy__v69.alarm.__yy_owner !== 773313037) {
                                                __yy__v69.alarm = __yy__v69.alarm.slice(0);
                                                __yy__v69.alarm.__yy_owner = 773313037;
                                            }
                                            __yy__v69.alarm[2] = 15;
                                        }
                                    }
                                };
                                gml_Script_scr_color_background(_inst, _other, 0);
                                gml_Script_scr_level_next_save(_inst, _other);
                            };
                        };
                    };
                };
                if (((yyInst(_inst.gmlball_inst).phy_active > 0.5) && ((yyInst(_inst.gmlball_inst).phy_speed != 0)))) {
                    {
                        if ((((yyInst(_inst.gmlball_inst).gmlx_draw > (_inst.gmlworld_width_draw + 10))) || ((yyInst(_inst.gmlball_inst).gmlx_draw < (-10))) || ((yyInst(_inst.gmlball_inst).gmly_draw > (_inst.gmlworld_height_draw + 10))))) {
                            {
                                if (!(_inst.alarm instanceof Array)) {
                                    _inst.alarm = [];
                                    _inst.alarm.__yy_owner = 1584050178;
                                } else if (_inst.alarm.__yy_owner !== 1584050178) {
                                    _inst.alarm = _inst.alarm.slice(0);
                                    _inst.alarm.__yy_owner = 1584050178;
                                }
                                _inst.alarm[2] = g_pBuiltIn.room_speed;
                                gml_Script_scr_play_sound(_inst, _other, _inst.gmlsound_oob[choose(0, 1)], 1, 0);
                                gml_Script_scr_ball_destroy(_inst, _other);
                                if ((global.gmlgame_mode == 4)) {
                                    {
                                        _inst.gmlgame_mode_4_balls_left -= 1;
                                        if ((_inst.gmlgame_mode_4_balls_left < 0)) {
                                            {
                                                _inst.gmlgame_mode_4_balls_left = 0;
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
                if ((_inst.gmlball_inst != 0)) {
                    {
                        if ((yyInst(_inst.gmlball_inst).gmly_draw < ((-1) * floor((yyInst(_inst.gmlball_inst).gmlball_size_radius * 2))))) {
                            {
                                _inst.gmlball_marker_x = yyInst(_inst.gmlball_inst).gmlx_draw;
                            };
                        } else {
                            {
                                _inst.gmlball_marker_x = (-4);
                            };
                        };
                    };
                };
            };
        };
        if ((((_inst.gmlball_inst != 0)) && (!(_inst.gmlball_in_hole > 0.5)))) {
            {
                if (!(yyInst(_inst.gmlball_inst).phy_active > 0.5)) {
                    {
                        _inst.gmlforce_meter_stop_count -= 1;
                        if ((_inst.gmlforce_meter_stop_count < 0)) {
                            {
                                _inst.gmlforce_meter_stop_count = 0;
                            };
                        };
                    };
                } else {
                    {
                        _inst.gmlforce_meter_stop_count = _inst.gmlforce_meter_stop_count_base;
                    };
                };
            };
        };
        if ((_inst.gmlforce_meter_stop_count == 0)) {
            {
                _inst.gmlforce_meter_ready = 1 ? 1 : 0;
                _inst.gmlforce_meter_alpha = 1;
                _inst.gmlforce_meter_color = _inst.gmlforce_meter_color_on;
            };
        } else {
            {
                _inst.gmlforce_meter_ready = 0 ? 1 : 0;
                _inst.gmlforce_meter_alpha = 0.5;
                _inst.gmlforce_meter_color = _inst.gmlforce_meter_color_base;
            };
        };
        if (_inst.gmlforce_meter_show > 0.5) {
            {
                _inst.gmlforce_meter_x2 = g_pBuiltIn.mouse_x;
                _inst.gmlforce_meter_y2 = g_pBuiltIn.mouse_y;
                if ((_inst.gmlforce_meter_y2 < _inst.gmlforce_meter_y1)) {
                    {
                        _inst.gmlforce_meter_y2 = _inst.gmlforce_meter_y1;
                    };
                };
                if ((((g_pBuiltIn.mouse_x <= 0)) || ((g_pBuiltIn.mouse_x >= _inst.gmlworld_width_draw)))) {
                    {
                        gml_Script_scr_force_apply(_inst, _other);
                    };
                } else {
                    if ((((g_pBuiltIn.mouse_y <= 0)) || ((g_pBuiltIn.mouse_y >= _inst.gmlworld_height_draw)))) {
                        {
                            gml_Script_scr_force_apply(_inst, _other);
                        };
                    };
                };
            };
        };
        if (_inst.gmlforce_meter_show > 0.5) {
            {
                _inst.gmlforce_meter_pointer_x1 = _inst.gmlforce_meter_x1;
                _inst.gmlforce_meter_pointer_y1 = _inst.gmlforce_meter_y1;
                _inst.gmlforce_meter_pointer_x2 = _inst.gmlforce_meter_x2;
                _inst.gmlforce_meter_pointer_y2 = _inst.gmlforce_meter_y2;
            };
        };
        if (_inst.gmlforce_meter_show > 0.5) {
            {
                _inst.gmlforce_meter_angle_main = point_direction(_inst.gmlforce_meter_x2, _inst.gmlforce_meter_y2, _inst.gmlforce_meter_x1, _inst.gmlforce_meter_y1);
                _inst.gmlforce_meter_lenght = point_distance(_inst.gmlforce_meter_x2, _inst.gmlforce_meter_y2, _inst.gmlforce_meter_x1, _inst.gmlforce_meter_y1);
                gml_Script_scr_meter_ctrl_pointer_triangle(_inst, _other);
            };
        };
        if (_inst.gmlfloor_started > 0.5) {
            {
                if (_inst.gmlfloor_ready > 0.5) {
                    {
                        if (!(surface_exists(_inst.gmlsurf_floor) > 0.5)) {
                            {
                                _inst.gmlsurf_floor = surface_create(g_pBuiltIn.view_wview[0], g_pBuiltIn.view_hview[0]);
                                surface_set_target(_inst.gmlsurf_floor);
                                draw_clear_alpha(16777215, 0);
                                draw_set_alpha(1);
                                gml_Script_scr_floor_draw(_inst, _other, _inst.gmlline_count);
                                surface_reset_target();
                            };
                        };
                    };
                };
            };
        };
        if (((_inst.gmlfloor_started > 0.5) && (!(_inst.gmlfloor_ready > 0.5)))) {
            {
                _inst.gmlfloor_flash_standby = 1 ? 1 : 0;
            };
        };
        if (((!(_inst.gmlfloor_flash_active > 0.5)) && (_inst.gmlfloor_flash_standby > 0.5) && (_inst.gmlfloor_ready > 0.5))) {
            {
                _inst.gmlfloor_flash_active = 1 ? 1 : 0;
                if (!(_inst.alarm instanceof Array)) {
                    _inst.alarm = [];
                    _inst.alarm.__yy_owner = 1584050178;
                } else if (_inst.alarm.__yy_owner !== 1584050178) {
                    _inst.alarm = _inst.alarm.slice(0);
                    _inst.alarm.__yy_owner = 1584050178;
                }
                _inst.alarm[5] = 3;
            };
        };
        if (!(global.gmlwin_popup_active > 0.5)) {
            {
                if (_inst.gmlhole_triangle_move_dir > 0.5) {
                    {
                        _inst.gmlhole_triangle_move_count += _inst.gmlhole_triangle_move_quot;
                        if ((_inst.gmlhole_triangle_move_count >= _inst.gmlhole_triangle_move_max)) {
                            {
                                _inst.gmlhole_triangle_move_dir = 0;
                            };
                        };
                    };
                } else {
                    {
                        _inst.gmlhole_triangle_move_count -= _inst.gmlhole_triangle_move_quot;
                        if ((_inst.gmlhole_triangle_move_count <= 0)) {
                            {
                                _inst.gmlhole_triangle_move_dir = 1;
                            };
                        };
                    };
                };
            };
        };
        if (_inst.gmlfloor_started > 0.5) {
            {
                if (_inst.gmlfloor_ready > 0.5) {
                    {
                        if (!(surface_exists(_inst.gmlsurf_hole_arrow) > 0.5)) {
                            {
                                gml_Script_scr_surface_hole_arrow(_inst, _other);
                            };
                        };
                    };
                };
            };
        };
        if (_inst.gmlcircle_fade_grow > 0.5) {
            {
                _inst.gmlcircle_fade_size = floor((_inst.gmlcircle_fade_size + _inst.gmlcircle_fade_size_add));
                if ((_inst.gmlcircle_fade_size > (_inst.gmlcircle_fade_x + floor((global.gmlwin_w * 0.25))))) {
                    {
                        _inst.gmlcircle_fade_grow = 0 ? 1 : 0;
                        _inst.gmlads_level_count += 1;
                        if (!(_inst.alarm instanceof Array)) {
                            _inst.alarm = [];
                            _inst.alarm.__yy_owner = 1584050178;
                        } else if (_inst.alarm.__yy_owner !== 1584050178) {
                            _inst.alarm = _inst.alarm.slice(0);
                            _inst.alarm.__yy_owner = 1584050178;
                        }
                        _inst.alarm[3] = 1;
                        if (((_inst.gmlfamobi_active > 0.5) && ((_inst.gmlads_level_count > _inst.gmlads_level_count_max)))) {
                            {
                                // famobi_showAd("function()", 1);
                                _inst.gmlads_level_count = 1;
                            };
                        };
                    };
                };
            };
        };
        if ((global.gmlgame_mode == 1)) {
            {
                if (!(_inst.gmlgame_over > 0.5)) {
                    {
                        if (_inst.gmlgame_mode_1_complete > 0.5) {
                            {
                                _inst.gmlgame_over = 1 ? 1 : 0;
                            };
                        };
                    };
                };
            };
        } else {
            if ((global.gmlgame_mode == 2)) {
                {
                    if (!(_inst.gmlgame_over > 0.5)) {
                        {
                            if ((((_inst.gmlgame_hits_curr == 1)) && (_inst.gmlforce_meter_ready > 0.5))) {
                                {
                                    _inst.gmlgame_over = 1 ? 1 : 0;
                                    if ((_inst.gmlgame_holes_completed > _inst.gmlgame_mode_2_holes_record)) {
                                        {
                                            _inst.gmlgame_mode_2_holes_record = _inst.gmlgame_holes_completed;
                                        };
                                    };
                                    if (global.gmlfamobi_active > 0.5) {
                                        {
                                            gml_Script_scr_famobi_progress_save(_inst, _other, global.gmlgame_mode);
                                        };
                                    } else {
                                        {
                                            gml_Script_scr_ini_progress_save(_inst, _other, global.gmlgame_mode);
                                        };
                                    };
                                };
                            };
                        };
                    }
                };
            } else {
                if ((global.gmlgame_mode == 3)) {
                    {
                        if (!(_inst.gmlgame_start > 0.5)) {
                            {
                                if ((((_inst.gmlgame_hits_curr == 0)) && (_inst.gmlforce_meter_ready > 0.5))) {
                                    {
                                        _inst.gmlgame_start = 1 ? 1 : 0;
                                        _inst.gmlgame_mode_3_time_start = g_pBuiltIn.get_current_time();
                                        _inst.gmlgame_mode_3_time_prev = g_pBuiltIn.get_current_time();
                                    };
                                };
                            };
                        } else {
                            {
                                var gmltime_passed = (g_pBuiltIn.get_current_time() - _inst.gmlgame_mode_3_time_prev);
                                _inst.gmlgame_mode_3_time_left -= gmltime_passed;
                                if ((_inst.gmlgame_mode_3_time_left < 0)) {
                                    {
                                        _inst.gmlgame_mode_3_time_left = 0;
                                    };
                                };
                                _inst.gmlgame_mode_3_time_prev = g_pBuiltIn.get_current_time();
                            };
                        };
                        if (((_inst.gmlgame_start > 0.5) && (!(_inst.gmlgame_over > 0.5)))) {
                            {
                                if ((_inst.gmlgame_mode_3_time_left == 0)) {
                                    {
                                        _inst.gmlgame_over = 1 ? 1 : 0;
                                        if ((_inst.gmlgame_holes_completed > _inst.gmlgame_mode_3_holes_record)) {
                                            {
                                                _inst.gmlgame_mode_3_holes_record = _inst.gmlgame_holes_completed;
                                            };
                                        };
                                        if (global.gmlfamobi_active > 0.5) {
                                            {
                                                gml_Script_scr_famobi_progress_save(_inst, _other, global.gmlgame_mode);
                                            };
                                        } else {
                                            {
                                                gml_Script_scr_ini_progress_save(_inst, _other, global.gmlgame_mode);
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                } else {
                    if ((global.gmlgame_mode == 4)) {
                        {
                            if (!(_inst.gmlgame_over > 0.5)) {
                                {
                                    if ((((_inst.gmlgame_mode_4_balls_left == 0)) && (_inst.gmlforce_meter_ready > 0.5))) {
                                        {
                                            _inst.gmlgame_over = 1 ? 1 : 0;
                                            if ((_inst.gmlgame_holes_completed > _inst.gmlgame_mode_4_holes_record)) {
                                                {
                                                    _inst.gmlgame_mode_4_holes_record = _inst.gmlgame_holes_completed;
                                                };
                                            };
                                            if (global.gmlfamobi_active > 0.5) {
                                                {
                                                    gml_Script_scr_famobi_progress_save(_inst, _other, global.gmlgame_mode);
                                                };
                                            } else {
                                                {
                                                    gml_Script_scr_ini_progress_save(_inst, _other, global.gmlgame_mode);
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
        if (_inst.gmlgame_over > 0.5) {
            {
                if (!(_inst.gmlgame_over_actions > 0.5)) {
                    {
                        var gmlmode_string = ("GameOver_" + string(global.gmlgame_mode));
                        gml_Script_scr_analytics_send(_inst, _other, gmlmode_string);
                        _inst.gmlgame_over_bg_alpha = 0;
                        _inst.gmlgame_over_bg_alpha_max = 0.75;
                        _inst.gmlgame_over_bg_x1 = (-10);
                        _inst.gmlgame_over_bg_y1 = (-10);
                        _inst.gmlgame_over_bg_x2 = (_inst.gmlworld_width_draw + 10);
                        _inst.gmlgame_over_bg_y2 = (_inst.gmlworld_height_draw + 10);
                        _inst.gmlgame_over_btn_visible = 0 ? 1 : 0;
                        if ((global.gmlgame_mode == 1)) {
                            {
                                var gmltext_id = 0;
                                if (!(_inst.gmlgame_over_text instanceof Array)) {
                                    _inst.gmlgame_over_text = [];
                                    _inst.gmlgame_over_text.__yy_owner = 378001036;
                                } else if (_inst.gmlgame_over_text.__yy_owner !== 378001036) {
                                    _inst.gmlgame_over_text = _inst.gmlgame_over_text.slice(0);
                                    _inst.gmlgame_over_text.__yy_owner = 378001036;
                                }
                                _inst.gmlgame_over_text[gmltext_id] = _inst.gmllang_text_gover[0];
                                if (!(_inst.gmlgame_over_text_color instanceof Array)) {
                                    _inst.gmlgame_over_text_color = [];
                                    _inst.gmlgame_over_text_color.__yy_owner = 631951875;
                                } else if (_inst.gmlgame_over_text_color.__yy_owner !== 631951875) {
                                    _inst.gmlgame_over_text_color = _inst.gmlgame_over_text_color.slice(0);
                                    _inst.gmlgame_over_text_color.__yy_owner = 631951875;
                                }
                                _inst.gmlgame_over_text_color[gmltext_id] = 16776960;
                                if (!(_inst.gmlgame_over_text_halign instanceof Array)) {
                                    _inst.gmlgame_over_text_halign = [];
                                    _inst.gmlgame_over_text_halign.__yy_owner = 1716212661;
                                } else if (_inst.gmlgame_over_text_halign.__yy_owner !== 1716212661) {
                                    _inst.gmlgame_over_text_halign = _inst.gmlgame_over_text_halign.slice(0);
                                    _inst.gmlgame_over_text_halign.__yy_owner = 1716212661;
                                }
                                _inst.gmlgame_over_text_halign[gmltext_id] = 1;
                                if (!(_inst.gmlgame_over_text_x instanceof Array)) {
                                    _inst.gmlgame_over_text_x = [];
                                    _inst.gmlgame_over_text_x.__yy_owner = 3658815446;
                                } else if (_inst.gmlgame_over_text_x.__yy_owner !== 3658815446) {
                                    _inst.gmlgame_over_text_x = _inst.gmlgame_over_text_x.slice(0);
                                    _inst.gmlgame_over_text_x.__yy_owner = 3658815446;
                                }
                                _inst.gmlgame_over_text_x[gmltext_id] = (_inst.gmlworld_width_draw / 2);
                                if (!(_inst.gmlgame_over_text_y instanceof Array)) {
                                    _inst.gmlgame_over_text_y = [];
                                    _inst.gmlgame_over_text_y.__yy_owner = 3272484503;
                                } else if (_inst.gmlgame_over_text_y.__yy_owner !== 3272484503) {
                                    _inst.gmlgame_over_text_y = _inst.gmlgame_over_text_y.slice(0);
                                    _inst.gmlgame_over_text_y.__yy_owner = 3272484503;
                                }
                                _inst.gmlgame_over_text_y[gmltext_id] = ((_inst.gmlworld_height_draw / 2) - 150);
                                gmltext_id += 1;
                                _inst.gmlgame_over_text[gmltext_id] = (_inst.gmllang_text_gover[1] + string(_inst.gmlgame_mode_1_max_level[global.gmlgame_submode]) + "h");
                                _inst.gmlgame_over_text_color[gmltext_id] = 16776960;
                                _inst.gmlgame_over_text_halign[gmltext_id] = 1;
                                _inst.gmlgame_over_text_x[gmltext_id] = (_inst.gmlworld_width_draw / 2);
                                _inst.gmlgame_over_text_y[gmltext_id] = ((_inst.gmlworld_height_draw / 2) - 50);
                                gmltext_id += 1;
                                if (_inst.gmlgame_mode_1_new_record > 0.5) {
                                    {
                                        _inst.gmlgame_over_text[gmltext_id] = (_inst.gmllang_text_gover[2] + string(_inst.gmlgame_mode_1_best_score));
                                        _inst.gmlgame_over_text_color[gmltext_id] = 255;
                                    };
                                } else {
                                    {
                                        _inst.gmlgame_over_text[gmltext_id] = (_inst.gmllang_text_gover[3] + string(_inst.gmlgame_mode_1_complete_score) + "  " + _inst.gmllang_text_gover[4] + string(_inst.gmlgame_mode_1_best_score));
                                        _inst.gmlgame_over_text_color[gmltext_id] = 16777215;
                                    };
                                };
                                _inst.gmlgame_over_text_halign[gmltext_id] = 1;
                                _inst.gmlgame_over_text_x[gmltext_id] = (_inst.gmlworld_width_draw / 2);
                                _inst.gmlgame_over_text_y[gmltext_id] = (_inst.gmlworld_height_draw / 2);
                                gmltext_id += 1;
                                var gmlbtn_x = ((_inst.gmlworld_width_draw / 2) - 188);
                                var gmlbtn_y = ((_inst.gmlworld_height_draw / 2) + 100);
                                if (!(_inst.gmlgame_over_btn instanceof Array)) {
                                    _inst.gmlgame_over_btn = [];
                                    _inst.gmlgame_over_btn.__yy_owner = 911049754;
                                } else if (_inst.gmlgame_over_btn.__yy_owner !== 911049754) {
                                    _inst.gmlgame_over_btn = _inst.gmlgame_over_btn.slice(0);
                                    _inst.gmlgame_over_btn.__yy_owner = 911049754;
                                }
                                _inst.gmlgame_over_btn[1] = instance_create(gmlbtn_x, gmlbtn_y, 7); {
                                    var __yy__v70 = GetWithArray(_inst.gmlgame_over_btn[1]);
                                    for (var __yy__v71 in __yy__v70) {
                                        if (!__yy__v70.hasOwnProperty(__yy__v71)) continue;
                                        var __yy__v72 = __yy__v70[__yy__v71];
                                        if (__yy__v72.marked) continue;
                                        if (!__yy__v72.active) continue; {
                                            gml_Script_scr_btn_settings(__yy__v72, _inst, 1);
                                        }
                                    }
                                };
                                var gmlbtn_x = ((_inst.gmlworld_width_draw / 2) + 89);
                                var gmlbtn_y = ((_inst.gmlworld_height_draw / 2) + 100);
                                _inst.gmlgame_over_btn[2] = instance_create(gmlbtn_x, gmlbtn_y, 7); {
                                    var __yy__v73 = GetWithArray(_inst.gmlgame_over_btn[2]);
                                    for (var __yy__v74 in __yy__v73) {
                                        if (!__yy__v73.hasOwnProperty(__yy__v74)) continue;
                                        var __yy__v75 = __yy__v73[__yy__v74];
                                        if (__yy__v75.marked) continue;
                                        if (!__yy__v75.active) continue; {
                                            gml_Script_scr_btn_settings(__yy__v75, _inst, 2);
                                        }
                                    }
                                };
                                if (false && ((_inst.gmlfamobi_active > 0.5) && (_inst.gmlgame_mode_1_new_record > 0.5))) {
                                    {
                                        famobi_submitHighscore(("Course: " + string(_inst.gmlgame_mode_1_max_level[global.gmlgame_submode])), _inst.gmlgame_mode_1_complete_score);
                                    };
                                };
                            };
                        } else {
                            if ((global.gmlgame_mode == 2)) {
                                {
                                    var gmltext_id = 0;
                                    if (!(_inst.gmlgame_over_text instanceof Array)) {
                                        _inst.gmlgame_over_text = [];
                                        _inst.gmlgame_over_text.__yy_owner = 378001036;
                                    } else if (_inst.gmlgame_over_text.__yy_owner !== 378001036) {
                                        _inst.gmlgame_over_text = _inst.gmlgame_over_text.slice(0);
                                        _inst.gmlgame_over_text.__yy_owner = 378001036;
                                    }
                                    _inst.gmlgame_over_text[gmltext_id] = _inst.gmllang_text_gover[5];
                                    if (!(_inst.gmlgame_over_text_color instanceof Array)) {
                                        _inst.gmlgame_over_text_color = [];
                                        _inst.gmlgame_over_text_color.__yy_owner = 631951875;
                                    } else if (_inst.gmlgame_over_text_color.__yy_owner !== 631951875) {
                                        _inst.gmlgame_over_text_color = _inst.gmlgame_over_text_color.slice(0);
                                        _inst.gmlgame_over_text_color.__yy_owner = 631951875;
                                    }
                                    _inst.gmlgame_over_text_color[gmltext_id] = 255;
                                    if (!(_inst.gmlgame_over_text_halign instanceof Array)) {
                                        _inst.gmlgame_over_text_halign = [];
                                        _inst.gmlgame_over_text_halign.__yy_owner = 1716212661;
                                    } else if (_inst.gmlgame_over_text_halign.__yy_owner !== 1716212661) {
                                        _inst.gmlgame_over_text_halign = _inst.gmlgame_over_text_halign.slice(0);
                                        _inst.gmlgame_over_text_halign.__yy_owner = 1716212661;
                                    }
                                    _inst.gmlgame_over_text_halign[gmltext_id] = 1;
                                    if (!(_inst.gmlgame_over_text_x instanceof Array)) {
                                        _inst.gmlgame_over_text_x = [];
                                        _inst.gmlgame_over_text_x.__yy_owner = 3658815446;
                                    } else if (_inst.gmlgame_over_text_x.__yy_owner !== 3658815446) {
                                        _inst.gmlgame_over_text_x = _inst.gmlgame_over_text_x.slice(0);
                                        _inst.gmlgame_over_text_x.__yy_owner = 3658815446;
                                    }
                                    _inst.gmlgame_over_text_x[gmltext_id] = (_inst.gmlworld_width_draw / 2);
                                    if (!(_inst.gmlgame_over_text_y instanceof Array)) {
                                        _inst.gmlgame_over_text_y = [];
                                        _inst.gmlgame_over_text_y.__yy_owner = 3272484503;
                                    } else if (_inst.gmlgame_over_text_y.__yy_owner !== 3272484503) {
                                        _inst.gmlgame_over_text_y = _inst.gmlgame_over_text_y.slice(0);
                                        _inst.gmlgame_over_text_y.__yy_owner = 3272484503;
                                    }
                                    _inst.gmlgame_over_text_y[gmltext_id] = ((_inst.gmlworld_height_draw / 2) - 150);
                                    gmltext_id += 1;
                                    _inst.gmlgame_over_text[gmltext_id] = _inst.gmllang_text_gover[6];
                                    _inst.gmlgame_over_text_color[gmltext_id] = 16776960;
                                    _inst.gmlgame_over_text_halign[gmltext_id] = 1;
                                    _inst.gmlgame_over_text_x[gmltext_id] = (_inst.gmlworld_width_draw / 2);
                                    _inst.gmlgame_over_text_y[gmltext_id] = ((_inst.gmlworld_height_draw / 2) - 50);
                                    gmltext_id += 1;
                                    _inst.gmlgame_over_text[gmltext_id] = (_inst.gmllang_text_gover[3] + string(_inst.gmlgame_holes_completed) + "  " + _inst.gmllang_text_gover[7] + string(_inst.gmlgame_mode_2_holes_record));
                                    _inst.gmlgame_over_text_color[gmltext_id] = 16777215;
                                    _inst.gmlgame_over_text_halign[gmltext_id] = 1;
                                    _inst.gmlgame_over_text_x[gmltext_id] = (_inst.gmlworld_width_draw / 2);
                                    _inst.gmlgame_over_text_y[gmltext_id] = (_inst.gmlworld_height_draw / 2);
                                    gmltext_id += 1;
                                    var gmlbtn_x = ((_inst.gmlworld_width_draw / 2) - 188);
                                    var gmlbtn_y = ((_inst.gmlworld_height_draw / 2) + 100);
                                    if (!(_inst.gmlgame_over_btn instanceof Array)) {
                                        _inst.gmlgame_over_btn = [];
                                        _inst.gmlgame_over_btn.__yy_owner = 911049754;
                                    } else if (_inst.gmlgame_over_btn.__yy_owner !== 911049754) {
                                        _inst.gmlgame_over_btn = _inst.gmlgame_over_btn.slice(0);
                                        _inst.gmlgame_over_btn.__yy_owner = 911049754;
                                    }
                                    _inst.gmlgame_over_btn[1] = instance_create(gmlbtn_x, gmlbtn_y, 7); {
                                        var __yy__v76 = GetWithArray(_inst.gmlgame_over_btn[1]);
                                        for (var __yy__v77 in __yy__v76) {
                                            if (!__yy__v76.hasOwnProperty(__yy__v77)) continue;
                                            var __yy__v78 = __yy__v76[__yy__v77];
                                            if (__yy__v78.marked) continue;
                                            if (!__yy__v78.active) continue; {
                                                gml_Script_scr_btn_settings(__yy__v78, _inst, 1);
                                            }
                                        }
                                    };
                                    var gmlbtn_x = ((_inst.gmlworld_width_draw / 2) + 89);
                                    var gmlbtn_y = ((_inst.gmlworld_height_draw / 2) + 100);
                                    _inst.gmlgame_over_btn[2] = instance_create(gmlbtn_x, gmlbtn_y, 7); {
                                        var __yy__v79 = GetWithArray(_inst.gmlgame_over_btn[2]);
                                        for (var __yy__v80 in __yy__v79) {
                                            if (!__yy__v79.hasOwnProperty(__yy__v80)) continue;
                                            var __yy__v81 = __yy__v79[__yy__v80];
                                            if (__yy__v81.marked) continue;
                                            if (!__yy__v81.active) continue; {
                                                gml_Script_scr_btn_settings(__yy__v81, _inst, 2);
                                            }
                                        }
                                    };
                                    Promise.all([
                                        window.famobi_analytics.trackEvent("EVENT_LEVELFAIL", {
                                            levelName: global.gmlgame_levelName,
                                            reason: "dead"
                                        }),
                                        window.famobi_analytics.trackEvent("EVENT_LEVELSCORE", {
                                            levelName: global.gmlgame_levelName,
                                            levelScore: _inst.gmlgame_holes_completed
                                        })
                                    ]).then(function() {

                                    });
                                };
                            } else {
                                if ((global.gmlgame_mode == 3)) {
                                    {
                                        var gmltext_id = 0;
                                        if (!(_inst.gmlgame_over_text instanceof Array)) {
                                            _inst.gmlgame_over_text = [];
                                            _inst.gmlgame_over_text.__yy_owner = 378001036;
                                        } else if (_inst.gmlgame_over_text.__yy_owner !== 378001036) {
                                            _inst.gmlgame_over_text = _inst.gmlgame_over_text.slice(0);
                                            _inst.gmlgame_over_text.__yy_owner = 378001036;
                                        }
                                        _inst.gmlgame_over_text[gmltext_id] = _inst.gmllang_text_gover[5];
                                        if (!(_inst.gmlgame_over_text_color instanceof Array)) {
                                            _inst.gmlgame_over_text_color = [];
                                            _inst.gmlgame_over_text_color.__yy_owner = 631951875;
                                        } else if (_inst.gmlgame_over_text_color.__yy_owner !== 631951875) {
                                            _inst.gmlgame_over_text_color = _inst.gmlgame_over_text_color.slice(0);
                                            _inst.gmlgame_over_text_color.__yy_owner = 631951875;
                                        }
                                        _inst.gmlgame_over_text_color[gmltext_id] = 255;
                                        if (!(_inst.gmlgame_over_text_halign instanceof Array)) {
                                            _inst.gmlgame_over_text_halign = [];
                                            _inst.gmlgame_over_text_halign.__yy_owner = 1716212661;
                                        } else if (_inst.gmlgame_over_text_halign.__yy_owner !== 1716212661) {
                                            _inst.gmlgame_over_text_halign = _inst.gmlgame_over_text_halign.slice(0);
                                            _inst.gmlgame_over_text_halign.__yy_owner = 1716212661;
                                        }
                                        _inst.gmlgame_over_text_halign[gmltext_id] = 1;
                                        if (!(_inst.gmlgame_over_text_x instanceof Array)) {
                                            _inst.gmlgame_over_text_x = [];
                                            _inst.gmlgame_over_text_x.__yy_owner = 3658815446;
                                        } else if (_inst.gmlgame_over_text_x.__yy_owner !== 3658815446) {
                                            _inst.gmlgame_over_text_x = _inst.gmlgame_over_text_x.slice(0);
                                            _inst.gmlgame_over_text_x.__yy_owner = 3658815446;
                                        }
                                        _inst.gmlgame_over_text_x[gmltext_id] = (_inst.gmlworld_width_draw / 2);
                                        if (!(_inst.gmlgame_over_text_y instanceof Array)) {
                                            _inst.gmlgame_over_text_y = [];
                                            _inst.gmlgame_over_text_y.__yy_owner = 3272484503;
                                        } else if (_inst.gmlgame_over_text_y.__yy_owner !== 3272484503) {
                                            _inst.gmlgame_over_text_y = _inst.gmlgame_over_text_y.slice(0);
                                            _inst.gmlgame_over_text_y.__yy_owner = 3272484503;
                                        }
                                        _inst.gmlgame_over_text_y[gmltext_id] = ((_inst.gmlworld_height_draw / 2) - 150);
                                        gmltext_id += 1;
                                        _inst.gmlgame_over_text[gmltext_id] = _inst.gmllang_text_gover[8];
                                        _inst.gmlgame_over_text_color[gmltext_id] = 16776960;
                                        _inst.gmlgame_over_text_halign[gmltext_id] = 1;
                                        _inst.gmlgame_over_text_x[gmltext_id] = (_inst.gmlworld_width_draw / 2);
                                        _inst.gmlgame_over_text_y[gmltext_id] = ((_inst.gmlworld_height_draw / 2) - 50);
                                        gmltext_id += 1;
                                        _inst.gmlgame_over_text[gmltext_id] = (_inst.gmllang_text_gover[3] + string(_inst.gmlgame_holes_completed) + "  " + _inst.gmllang_text_gover[7] + string(_inst.gmlgame_mode_3_holes_record));
                                        _inst.gmlgame_over_text_color[gmltext_id] = 16777215;
                                        _inst.gmlgame_over_text_halign[gmltext_id] = 1;
                                        _inst.gmlgame_over_text_x[gmltext_id] = (_inst.gmlworld_width_draw / 2);
                                        _inst.gmlgame_over_text_y[gmltext_id] = (_inst.gmlworld_height_draw / 2);
                                        gmltext_id += 1;
                                        var gmlbtn_x = ((_inst.gmlworld_width_draw / 2) - 188);
                                        var gmlbtn_y = ((_inst.gmlworld_height_draw / 2) + 100);
                                        if (!(_inst.gmlgame_over_btn instanceof Array)) {
                                            _inst.gmlgame_over_btn = [];
                                            _inst.gmlgame_over_btn.__yy_owner = 911049754;
                                        } else if (_inst.gmlgame_over_btn.__yy_owner !== 911049754) {
                                            _inst.gmlgame_over_btn = _inst.gmlgame_over_btn.slice(0);
                                            _inst.gmlgame_over_btn.__yy_owner = 911049754;
                                        }
                                        _inst.gmlgame_over_btn[1] = instance_create(gmlbtn_x, gmlbtn_y, 7); {
                                            var __yy__v82 = GetWithArray(_inst.gmlgame_over_btn[1]);
                                            for (var __yy__v83 in __yy__v82) {
                                                if (!__yy__v82.hasOwnProperty(__yy__v83)) continue;
                                                var __yy__v84 = __yy__v82[__yy__v83];
                                                if (__yy__v84.marked) continue;
                                                if (!__yy__v84.active) continue; {
                                                    gml_Script_scr_btn_settings(__yy__v84, _inst, 1);
                                                }
                                            }
                                        };
                                        var gmlbtn_x = ((_inst.gmlworld_width_draw / 2) + 89);
                                        var gmlbtn_y = ((_inst.gmlworld_height_draw / 2) + 100);
                                        _inst.gmlgame_over_btn[2] = instance_create(gmlbtn_x, gmlbtn_y, 7); {
                                            var __yy__v85 = GetWithArray(_inst.gmlgame_over_btn[2]);
                                            for (var __yy__v86 in __yy__v85) {
                                                if (!__yy__v85.hasOwnProperty(__yy__v86)) continue;
                                                var __yy__v87 = __yy__v85[__yy__v86];
                                                if (__yy__v87.marked) continue;
                                                if (!__yy__v87.active) continue; {
                                                    gml_Script_scr_btn_settings(__yy__v87, _inst, 2);
                                                }
                                            }
                                        };
                                    };
                                } else {
                                    if ((global.gmlgame_mode == 4)) {
                                        {
                                            var gmltext_id = 0;
                                            if (!(_inst.gmlgame_over_text instanceof Array)) {
                                                _inst.gmlgame_over_text = [];
                                                _inst.gmlgame_over_text.__yy_owner = 378001036;
                                            } else if (_inst.gmlgame_over_text.__yy_owner !== 378001036) {
                                                _inst.gmlgame_over_text = _inst.gmlgame_over_text.slice(0);
                                                _inst.gmlgame_over_text.__yy_owner = 378001036;
                                            }
                                            _inst.gmlgame_over_text[gmltext_id] = _inst.gmllang_text_gover[5];
                                            if (!(_inst.gmlgame_over_text_color instanceof Array)) {
                                                _inst.gmlgame_over_text_color = [];
                                                _inst.gmlgame_over_text_color.__yy_owner = 631951875;
                                            } else if (_inst.gmlgame_over_text_color.__yy_owner !== 631951875) {
                                                _inst.gmlgame_over_text_color = _inst.gmlgame_over_text_color.slice(0);
                                                _inst.gmlgame_over_text_color.__yy_owner = 631951875;
                                            }
                                            _inst.gmlgame_over_text_color[gmltext_id] = 255;
                                            if (!(_inst.gmlgame_over_text_halign instanceof Array)) {
                                                _inst.gmlgame_over_text_halign = [];
                                                _inst.gmlgame_over_text_halign.__yy_owner = 1716212661;
                                            } else if (_inst.gmlgame_over_text_halign.__yy_owner !== 1716212661) {
                                                _inst.gmlgame_over_text_halign = _inst.gmlgame_over_text_halign.slice(0);
                                                _inst.gmlgame_over_text_halign.__yy_owner = 1716212661;
                                            }
                                            _inst.gmlgame_over_text_halign[gmltext_id] = 1;
                                            if (!(_inst.gmlgame_over_text_x instanceof Array)) {
                                                _inst.gmlgame_over_text_x = [];
                                                _inst.gmlgame_over_text_x.__yy_owner = 3658815446;
                                            } else if (_inst.gmlgame_over_text_x.__yy_owner !== 3658815446) {
                                                _inst.gmlgame_over_text_x = _inst.gmlgame_over_text_x.slice(0);
                                                _inst.gmlgame_over_text_x.__yy_owner = 3658815446;
                                            }
                                            _inst.gmlgame_over_text_x[gmltext_id] = (_inst.gmlworld_width_draw / 2);
                                            if (!(_inst.gmlgame_over_text_y instanceof Array)) {
                                                _inst.gmlgame_over_text_y = [];
                                                _inst.gmlgame_over_text_y.__yy_owner = 3272484503;
                                            } else if (_inst.gmlgame_over_text_y.__yy_owner !== 3272484503) {
                                                _inst.gmlgame_over_text_y = _inst.gmlgame_over_text_y.slice(0);
                                                _inst.gmlgame_over_text_y.__yy_owner = 3272484503;
                                            }
                                            _inst.gmlgame_over_text_y[gmltext_id] = ((_inst.gmlworld_height_draw / 2) - 150);
                                            gmltext_id += 1;
                                            _inst.gmlgame_over_text[gmltext_id] = _inst.gmllang_text_gover[9];
                                            _inst.gmlgame_over_text_color[gmltext_id] = 16776960;
                                            _inst.gmlgame_over_text_halign[gmltext_id] = 1;
                                            _inst.gmlgame_over_text_x[gmltext_id] = (_inst.gmlworld_width_draw / 2);
                                            _inst.gmlgame_over_text_y[gmltext_id] = ((_inst.gmlworld_height_draw / 2) - 50);
                                            gmltext_id += 1;
                                            _inst.gmlgame_over_text[gmltext_id] = (_inst.gmllang_text_gover[3] + string(_inst.gmlgame_holes_completed) + "  " + _inst.gmllang_text_gover[7] + string(_inst.gmlgame_mode_4_holes_record));
                                            _inst.gmlgame_over_text_color[gmltext_id] = 16777215;
                                            _inst.gmlgame_over_text_halign[gmltext_id] = 1;
                                            _inst.gmlgame_over_text_x[gmltext_id] = (_inst.gmlworld_width_draw / 2);
                                            _inst.gmlgame_over_text_y[gmltext_id] = (_inst.gmlworld_height_draw / 2);
                                            gmltext_id += 1;
                                            var gmlbtn_x = ((_inst.gmlworld_width_draw / 2) - 188);
                                            var gmlbtn_y = ((_inst.gmlworld_height_draw / 2) + 100);
                                            if (!(_inst.gmlgame_over_btn instanceof Array)) {
                                                _inst.gmlgame_over_btn = [];
                                                _inst.gmlgame_over_btn.__yy_owner = 911049754;
                                            } else if (_inst.gmlgame_over_btn.__yy_owner !== 911049754) {
                                                _inst.gmlgame_over_btn = _inst.gmlgame_over_btn.slice(0);
                                                _inst.gmlgame_over_btn.__yy_owner = 911049754;
                                            }
                                            _inst.gmlgame_over_btn[1] = instance_create(gmlbtn_x, gmlbtn_y, 7); {
                                                var __yy__v88 = GetWithArray(_inst.gmlgame_over_btn[1]);
                                                for (var __yy__v89 in __yy__v88) {
                                                    if (!__yy__v88.hasOwnProperty(__yy__v89)) continue;
                                                    var __yy__v90 = __yy__v88[__yy__v89];
                                                    if (__yy__v90.marked) continue;
                                                    if (!__yy__v90.active) continue; {
                                                        gml_Script_scr_btn_settings(__yy__v90, _inst, 1);
                                                    }
                                                }
                                            };
                                            var gmlbtn_x = ((_inst.gmlworld_width_draw / 2) + 89);
                                            var gmlbtn_y = ((_inst.gmlworld_height_draw / 2) + 100);
                                            _inst.gmlgame_over_btn[2] = instance_create(gmlbtn_x, gmlbtn_y, 7); {
                                                var __yy__v91 = GetWithArray(_inst.gmlgame_over_btn[2]);
                                                for (var __yy__v92 in __yy__v91) {
                                                    if (!__yy__v91.hasOwnProperty(__yy__v92)) continue;
                                                    var __yy__v93 = __yy__v91[__yy__v92];
                                                    if (__yy__v93.marked) continue;
                                                    if (!__yy__v93.active) continue; {
                                                        gml_Script_scr_btn_settings(__yy__v93, _inst, 2);
                                                    }
                                                }
                                            };
                                        };
                                    };
                                };
                            };
                        };
                        _inst.gmlgame_over_actions = 1 ? 1 : 0;
                        _inst.gmlforce_meter_show = 0 ? 1 : 0;
                        gml_Script_scr_ball_destroy(_inst, _other);
                    };
                };
                _inst.gmlgame_over_bg_alpha += 0.05;
                if ((_inst.gmlgame_over_bg_alpha > _inst.gmlgame_over_bg_alpha_max)) {
                    {
                        _inst.gmlgame_over_bg_alpha = _inst.gmlgame_over_bg_alpha_max;
                        _inst.gmlgame_over_btn_visible = 1 ? 1 : 0;
                    };
                };
            };
        };
        if (((_inst.gmlfamobi_active > 0.5) && (!(_inst.gmljs_Pause_active > 0.5)))) {
            {
                if (famobi_getJSpause() > 0.5) {
                    {
                        _inst.gmljs_Pause_active = 1 ? 1 : 0;
                        global.gmlwin_popup_active = 1 ? 1 : 0;
                        instance_create(0, 0, 11);
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_GlobalLeftButtonReleased_1 1
// /// Force Meter : Apply Force
//
// scr_force_apply();
//
// if ( mouse_hand ){
//
//     mouse_hand = false;
//
//     window_set_cursor(cr_default);
// }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_GlobalLeftButtonReleased_2 1
// /// [ DISABLED ] Force Meter : Apply Force
// /*
//     hit_play_sound = false;
//
//     if (( !game_over ) and ( ball_inst != 0 ) and ( force_meter_ready ) and ( force_meter_show ) and ( !ball_in_hole )){
//
//         var local_strength_modifier = strength_modifier[0];
//
//         if ( global.view_w <= global.board_w ){ local_strength_modifier = strength_modifier[1]; }
//
//         // Horizontal
//
//             var strength_horz = point_distance(force_meter_x1,force_meter_y1,force_meter_x2,force_meter_y1);
//
//             strength_horz = ( strength_horz / draw_w_ratio );
//
//             if ( strength_horz > 0 ){
//
//                 strength_horz = (( strength_horz * phys_world_pixel_to_meters ) * local_strength_modifier );
//
//                 if ( force_meter_x2 > force_meter_x1 ){
//
//                     strength_horz = strength_horz * -1;
//                 }
//                 else if ( force_meter_x1 = force_meter_x2 ){
//
//                     strength_horz = 0;
//                 }
//             }
//             else { strength_horz = 0; }
//
//
//         // Vertical
//
//             var strength_vert = point_distance(force_meter_x1,force_meter_y1,force_meter_x1,force_meter_y2);
//
//             strength_vert = ( strength_vert / draw_h_ratio );
//
//             if ( strength_vert != 0 ){ strength_vert = ((( strength_vert * -1 ) * phys_world_pixel_to_meters ) * local_strength_modifier ); }
//
//
//         // Apply Force
//
//             with ( ball_inst ){
//
//                 phy_active = true;
//
//                 physics_apply_force(x, y, strength_horz, strength_vert);
//
//                 glow_alpha = 1;
//
//                 trail_alpha = 1;
//             }
//
//         // Hit Sound
//
//             hit_play_sound = true;
//
//             scr_play_sound(sound_hit_6,1,false);
//
//
//         // Add Hit
//
//             if (( abs(strength_horz) > 0 ) or ( abs(strength_vert) > 0 )){
//
//                 game_hits_curr += 1;
//
//                 game_hits_curr_vis = game_hits_curr;
//
//                 if ( global.game_mode == 1 ){
//
//                     game_mode_1_hits_curr[global.game_submode] = game_hits_curr;
//
//                     scr_ini_progress_save_sml(global.game_mode);
//                 }
//                 else if ( global.game_mode == 3 ){
//                 // Just in Time : Reduce Time Add
//
//                     game_mode_3_time_add -= 2000;
//
//                     if ( game_mode_3_time_add < 0 ){ game_mode_3_time_add = 0; }
//                 }
//             }
//     }
// */
//
//
// /* */
// #line gml_Object_obj_ctrl_board_GlobalLeftButtonReleased_3 1
// /// [ DISABLED ] Force Meter : De-Activate
//
//     // force_meter_show = false;
//
//
// /* */
// #line gml_Object_obj_ctrl_board_GlobalLeftButtonReleased_4 1
// /// [ DISABLED ] Hit Sound
//
// /* // [audio] //
// if ( hit_play_sound ){
//
//     if ( !audio_is_playing(audio_hit_sound[audio_hit_pos]) ){
//
//         audio_hit_pos += 1;
//
//         if ( audio_hit_pos = audio_hit_pos_max ){ audio_hit_pos = 0; }
//
//         scr_play_sound(audio_hit_sound[audio_hit_pos],1,false);
//     }
// }
// */
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_Mouse_56(_inst, _other) {
    {
        gml_Script_scr_force_apply(_inst, _other);
        if (_inst.gmlmouse_hand > 0.5) {
            {
                _inst.gmlmouse_hand = 0 ? 1 : 0;
                window_set_cursor(0);
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_GlobalLeftButtonPressed_1 1
// /// [ DISABLED ] Click - Level : Create Next
// /*
// if ( floor_started ){
//
//     var click_size = 70; // ( 70 * ( draw_w_ratio / 2 ));
//
//     if (( mouse_x < click_size ) and ( mouse_y < click_size )){
//
//         scr_level_next_save();
//
//         scr_ball_destroy();
//
//         scr_level_create_v3();
//     }
// }
// */
//
// /* */
// #line gml_Object_obj_ctrl_board_GlobalLeftButtonPressed_2 1
// /// [ DISABLED ] Click - Game : Restart
// /*
// if ( floor_started ){
//
//     var click_size = 70; // ( 70 * ( draw_w_ratio / 2 ));
//
//     if ( mouse_x > ( view_wview[0] - click_size ) and mouse_y < click_size ){
//
//         game_restart();
//     }
// }
// */
//
// /* */
// #line gml_Object_obj_ctrl_board_GlobalLeftButtonPressed_3 1
// /// Click - Side Menu
//
// if (( !global.win_popup_active ) and ( floor_started )){
//
//     var click_size = 70;
//
//     var menu_x1 = ( world_width_draw - 55 );
//     var menu_y1 = 5;
//     var menu_x2 = menu_x1 + click_size;
//     var menu_y2 = menu_y1 + click_size;
//
//     if ( mouse_x > menu_x1 and mouse_x < menu_x2 ) and ( mouse_y > menu_y1 and mouse_y < menu_y2 ){
//
//         instance_create(0,0,obj_win_sidemenu);
//
//         global.win_popup_active = true;
//     }
// }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_GlobalLeftButtonPressed_4 1
// /// Click - Force Meter : Activate
//
//     if ( !game_over and floor_ready and !global.win_popup_active ){
//
//         force_meter_x1 = mouse_x;
//         force_meter_y1 = mouse_y;
//
//         force_meter_show = true;
//     }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_Mouse_53(_inst, _other) {
    {
        if (((!(global.gmlwin_popup_active > 0.5)) && (_inst.gmlfloor_started > 0.5))) {
            {
                var gmlclick_size = 70;
                var gmlmenu_x1 = (_inst.gmlworld_width_draw - 55);
                var gmlmenu_y1 = 5;
                var gmlmenu_x2 = (gmlmenu_x1 + gmlclick_size);
                var gmlmenu_y2 = (gmlmenu_y1 + gmlclick_size);
                if ((((((g_pBuiltIn.mouse_x > gmlmenu_x1)) && ((g_pBuiltIn.mouse_x < gmlmenu_x2)))) && ((((g_pBuiltIn.mouse_y > gmlmenu_y1)) && ((g_pBuiltIn.mouse_y < gmlmenu_y2)))))) {
                    {
                        instance_create(0, 0, 11);
                        global.gmlwin_popup_active = 1 ? 1 : 0;
                    };
                };
            };
        };
        if (((!(_inst.gmlgame_over > 0.5)) && (_inst.gmlfloor_ready > 0.5) && (!(global.gmlwin_popup_active > 0.5)))) {
            {
                _inst.gmlforce_meter_x1 = g_pBuiltIn.mouse_x;
                _inst.gmlforce_meter_y1 = g_pBuiltIn.mouse_y;
                _inst.gmlforce_meter_show = 1 ? 1 : 0;
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_WebAsyncEvent_1 1
// /// Process HTTP
// /*
// if ( ds_map_find_value(async_load, "id") == get ){
//
//     if ( ds_map_find_value(async_load, "status") == 0 ){
//
//         r_str = ds_map_find_value(async_load, "result");
//     }
//     else {
//
//         r_str = "null";
//     }
// }
// */
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_Other_62(_inst, _other) {
    {};
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_StartRoomEvent_1 1
// /// [ DISABLED ] Music Init
//
// // music_start_played = false;
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_Other_4(_inst, _other) {
    {};
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_DrawGUI_1 1
// /// [ DEBUG ] Draws
// /*
// draw_set_font(font_pixel_arial_12);
//
// draw_set_color(c_white);
//
// draw_set_halign(fa_left);
// draw_set_valign(fa_top);
//
// var x_pos = 15;
// var y_pos = 150;
//
// draw_text(x_pos,y_pos, "view_wview[0]: " + string(view_wview[0]));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "view_wport[0]: " + string(view_wport[0]));
//
// y_pos += 25;
//
//
// draw_text(x_pos,y_pos, "famobi_active: " + string(famobi_active));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "js_Pause_active: " + string(js_Pause_active));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "famobi_getJSpause: " + string(famobi_getJSpause()));
//
// y_pos += 25;
//
//
// draw_text(x_pos,y_pos, "world_grid_ratio: " + string(world_grid_ratio));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "fps: " + string(fps));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "fps real: " + string(floor(fps_real)));
//
// y_pos += 25;
//
//
// draw_text(x_pos,y_pos, "temp_var: " + string(global.temp_var));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "temp_string: " + string(global.temp_string));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "view[0]: " + string(view_wview[0]) + " x " + string(view_hview[0]));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "port[0]: " + string(view_wport[0]) + " x " + string(view_hport[0]));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "global.view: " + string(global.view_w) + " x " + string(global.view_h) );
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "global.win: " + string(global.win_w) + " x " + string(global.win_h) );
//
// y_pos += 25;
//
//
//
// draw_text(x_pos,y_pos, "global.platform_config: " + string(global.platform_config));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "global.platform_config_sub: " + string(global.platform_config_sub));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "global.game_lowres: " + string(global.game_lowres));
//
// y_pos += 25;
//
//
//
// if ( floor_ready ){
//
//     draw_text(x_pos,y_pos, "world_draw: " + string(world_width_draw) + " x " + string(world_height_draw));
//
//     y_pos += 25;
//
//     draw_text(x_pos,y_pos, "world_board: " + string(world_width_board) + " x " + string(world_height_board));
//
//     y_pos += 25;
// }
//
// draw_text(x_pos,y_pos, "global.game_lowres: " + string(global.game_lowres));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "win_h: " + string(global.puto1));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "win_h_base: " + string(global.puto2));
//
// y_pos += 25;
//
//
// if ( floor_started ){
//
//     draw_text(x_pos,y_pos, "draw_w_ratio: " + string(draw_w_ratio));
//
//     y_pos += 25;
// }
//
// draw_text(x_pos,y_pos, "game_hits_curr: " + string(game_hits_curr));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "force_meter_ready: " + string(force_meter_ready));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "board: " + string(global.board_w) + " x " + string(global.board_h));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "view: " + string(global.view_w) + " x " + string(global.view_h));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "win: " + string(global.win_w) + " x " + string(global.win_h));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "browser: " + string(browser_width) + " x " + string(browser_height));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "floor_point_lowest_y: " + string(floor_point_lowest_y));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "floor_point_highest_y: " + string(floor_point_highest_y));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "floor_point_mid_y: " + string(floor_point_mid_y));
//
// y_pos += 25;
//
//
// draw_text(x_pos,y_pos, "floor_build_animation: " + string(floor_build_animation));
//
// y_pos += 25;
//
// if ( floor_started ){
//
//     draw_text(x_pos,y_pos, "line_count_anim: " + string(line_count_anim));
//
//     y_pos += 25;
// }
//
// draw_text(x_pos,y_pos, "view: " + string(global.view_w) + " x " + string(global.view_h));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "win: " + string(global.win_w) + " x " + string(global.win_h));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "world_width_draw: " + string(world_width_draw));
//
// y_pos += 25;
//
//
// if ( ball_inst != 0 ){
//
//     draw_text(x_pos,y_pos, "ball_inst.x_draw: " + string(ball_inst.x_draw));
//
//     y_pos += 25;
// }
// */
//
// /*
// if ( force_meter_show ){
//
//     draw_text(x_pos,y_pos, "meter_lenght: " + string(floor(force_meter_lenght)));
//
//     y_pos += 25;
//
//     draw_text(x_pos,y_pos, "meter_angle_1: " + string(force_meter_angle_main));
//
//     y_pos += 25;
//
//     draw_text(x_pos,y_pos, "meter_lenght: " + string(force_meter_lenght));
//
//     y_pos += 25;
//
//     draw_text(x_pos,y_pos, "arrow_x1: " + string(force_meter_arrow_x1));
//
//     y_pos += 25;
//
//     draw_text(x_pos,y_pos, "arrow_y1: " + string(force_meter_arrow_y1));
//
//     y_pos += 25;
//
// }
// */
//
// /*
// draw_text(x_pos,y_pos, "game_ratio: " + string(obj_ctrl_board.game_ratio));
//
// y_pos += 25;
//
//
// if ( ball_inst != 0 ){
//
//     draw_text(x_pos,y_pos, "ball_size_radius: " + string(ball_inst.ball_size_radius));
//
//     y_pos += 25;
//
//     draw_text(x_pos,y_pos, "v1_speed: " + string(ball_inst.phy_speed));
//
//     y_pos += 25;
// }
//
// draw_text(x_pos,y_pos, "win_w: " + string(global.win_w));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "win_h: " + string(global.win_h));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "width: " + string(display_get_width()));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "time: " + string(current_time));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "ready: " + string(floor(floor_ready)));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "hole: " + string(floor(ball_in_hole)));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "force_meter_show: " + string(floor(force_meter_show)));
//
// y_pos += 25;
//  */
//
//
// /* */
// #line gml_Object_obj_ctrl_board_DrawGUI_2 1
// /// [ DISABLED ] Draw View
// /*
// if !surface_exists(surface_view){
//
//     draw_surface_stretched(surface_view, 25, 25, display_get_gui_width(), display_get_gui_height());
// }
// */
//
//
// /* */
// #line gml_Object_obj_ctrl_board_DrawGUI_3 1
// /// [ DISABLED ] Draw - Application Surface
//
//     // draw_surface(application_surface,0,0);
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_Draw_64(_inst, _other) {
    {};
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_DrawEvent_1 1
// /// Draw Floor
//
// // Background
//
//     draw_clear_alpha(bg_color,1);
//
//     // draw_rectangle_colour(-10,-10,view_wview[0],view_wview[0],bg_color,bg_color,bg_color,bg_color,false);
//
//
// // Floor
//
//     if ( floor_started ){
//
//         if ( floor_on_the_fly ){
//
//             scr_floor_draw(line_count_anim); // Draw On the Fly
//         }
//         else {
//
//             // if ( line_count_anim = line_count ){}
//
//             if ( surface_exists(surf_floor) ){ draw_surface(surf_floor,0,0); } // Surface Draw
//         }
//     }
//
//
// // [ Debug ]
//
//     if ( debug_draw_grid ){
//
//         // Grid
//         var draw_w_ratio = global.win_w / global.board_w;
//         var grid_x = 0;
//         var grid_y = 0;
//         var local_grid_size = 20 * draw_w_ratio;
//
//         for ( i=0; i<=(global.win_w/local_grid_size); i+=1 ){
//
//             draw_set_color(c_white);
//             draw_set_alpha(0.1);
//             draw_line(grid_x,0,grid_x,global.win_h);
//             grid_x += local_grid_size;
//             draw_set_alpha(1);
//         }
//         for ( i=0; i<=(global.win_h/local_grid_size); i+=1 ){
//
//             draw_set_color(c_white);
//             draw_set_alpha(0.1);
//             draw_line(0,grid_y,global.win_w,grid_y);
//             grid_y += local_grid_size;
//             draw_set_alpha(1);
//         }
//     }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_DrawEvent_2 1
// /// Draw Force Meter
//
//     if ( force_meter_show ){
//
//         // Meter : Body : Dashed
//
//             scr_meter_draw_body_dashed()
//
//
//         // Triangle Pointer
//
//             draw_triangle_colour(force_meter_tripointer_x1,force_meter_tripointer_y1,force_meter_tripointer_x2,force_meter_tripointer_y2,force_meter_tripointer_x3,force_meter_tripointer_y3,force_meter_color,force_meter_color,force_meter_color,false);
//
//
//         // Meter : Body : Saber
//         // scr_meter_draw_body_saber()
//
//         // Meter : Body : Arrow
//         // scr_meter_draw_body_arrow()
//
//         // Finger line ( gray )
//         // if ( !force_meter_ready ){ draw_line_width_colour(force_meter_pointer_x1,force_meter_pointer_y1,force_meter_pointer_x2,force_meter_pointer_y2,ceil(meter_line_gerth*game_ratio),force_meter_color,force_meter_color); }
//     }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_DrawEvent_3 1
// /// Draw Ball Marker
//
// if (( ball_inst != 0 ) and ( ball_marker_x != noone )){
//
//     draw_set_colour(c_white);
//
//     draw_triangle(ball_marker_x,5,ball_marker_x+10,15,ball_marker_x-10,15,false);
// }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_DrawEvent_4 1
// /// Draw Floor Flash
//
// if ( floor_flash_active ){
//
//     draw_rectangle_colour(-10,-10,(world_width_draw+10),(world_width_draw+10),flash_color,flash_color,flash_color,flash_color,false);
//
//     scr_floor_surface_v2(line_count,0,0,1,line_color,line_gerth,1,0);
//
//     scr_floor_surface_v2(line_count,0,0,1,line_color,(line_gerth/2)-1,3,0);
// }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_DrawEvent_5 1
// /// Draw Hole Arrow
//
// if ( floor_started ){
//
//     if ( floor_ready ){
//
//         var surf_x = ( floor( hole_x1 + floor(( hole_x2 - hole_x1 ) / 2 )) * obj_ctrl_board.draw_w_ratio ) - ( 128 / 2 );
//
//         var surf_y = ( floor(((hole_y1 - 10 ) + hole_triangle_move_count ) * obj_ctrl_board.draw_w_ratio )) - 120;
//
//         draw_surface(surf_hole_arrow,surf_x,surf_y);
//     }
// }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_DrawEvent_6 1
// /// Draw Circle Fade
//
// if ( circle_fade_draw ){
//
//     draw_circle_colour(circle_fade_x,circle_fade_y,circle_fade_size,bg_color_vis,bg_color_vis,false);
// }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_DrawEvent_7 1
// /// Draw Hits / Time
//
// if ( floor_started and !floor_flash_active ){ //  and !game_over
//
//     if (( global.game_mode == 1 ) or ( global.game_mode == 3 ) or ( global.game_mode == 4 )){
//
//         var hit_ratio = 1;
//
//         draw_set_font(font_score_1);
//         if ( world_grid_ratio > 1 ){ draw_set_font(font_score_2); var hit_ratio = 1.25; }
//         if ( world_grid_ratio > 2 ){ draw_set_font(font_score_3); var hit_ratio = 1.50; }
//
//         draw_set_valign(fa_middle);
//
//         if ( global.game_mode == 1 ){
//         // The 300
//
//             var text_string = game_levels_hits_total_vis;
//             var text_width = string_width(string(text_string));
//             var text_height = string_height(string(text_string));
//         }
//         else if ( global.game_mode == 3 ){
//         // Just in Time
//
//             var text_string = scr_time_convert(game_mode_3_time_left);
//             var text_height= string_height(string(text_string));
//         }
//         else if ( global.game_mode == 4 ){
//         // Don't Run Out
//
//             var text_string = string(game_mode_4_balls_left) + lang_text_course[0]; // " balls";
//             var text_height = string_height(string(text_string));
//         }
//
//         var rect_w = text_width + floor( 12 * hit_ratio ); // + 14
//         var rect_h = text_height + floor( 8 * hit_ratio ); // 30
//
//         var rect_x1 = 6;
//         var rect_y1 = 6;
//         var rect_x2 = rect_x1 + rect_w;
//         var rect_y2 = rect_y1 + rect_h;
//
//         var text1_x = rect_x1 + floor(( rect_x2 - rect_x1 ) / 2 );
//         var text1_y = rect_y1 + floor(( rect_y2 - rect_y1 ) / 2 ) + 1;
//
//         var text2_x = rect_x2 + 5;
//
//         // var hit_ratio = world_grid_ratio;
//         /*
//         rect_w = rect_w * hit_ratio;
//         rect_h = rect_h * hit_ratio;
//         rect_x1 = rect_x1 * hit_ratio;
//         rect_y1 = rect_y1 * hit_ratio;
//         rect_x2 = rect_x2 * hit_ratio;
//         rect_y2 = rect_y2 * hit_ratio;
//
//         text1_x = text1_x * hit_ratio;
//         text1_y = text1_y * hit_ratio;
//         text2_x = text2_x * hit_ratio;
//         */
//
//         if ( global.platform_config != 1 ){ texture_set_interpolation(false); }
//
//             draw_set_halign(fa_left);
//
//             if ( global.game_mode == 1 ){
//
//                 if ( game_hits_curr_vis > 0 ){
//
//                     if ( global.game_mode == 5 ){ text2_x = 8; } // Free Mode
//
//                     draw_set_color(c_white);
//
//                     draw_text(text2_x,text1_y,"+" + string(game_hits_curr_vis)); // hit_ratio
//                 }
//             }
//             else if ( global.game_mode == 3 ){
//
//                 if (( game_mode_3_time_add <= game_mode_3_time_add_max ) and ( game_mode_3_time_add != 0 )){
//
//                     draw_set_color(c_white);
//
//                     draw_text(text2_x,text1_y,"+" + string((game_mode_3_time_add/1000)) + lang_text_course[1]); // hit_ratio // " seconds"
//                 }
//             }
//
//             if (( global.game_mode == 1 ) or ( global.game_mode == 3 ) or ( global.game_mode == 4 )){
//             // The 300 / Just in Time
//
//                 draw_set_halign(fa_center);
//                 draw_set_color(c_black);
//
//                 draw_rectangle_colour(rect_x1,rect_y1,rect_x2,rect_y2,force_meter_color_on,force_meter_color_on,force_meter_color_on,force_meter_color_on,false);
//
//                 draw_text(text1_x,text1_y,string(text_string)); // hit_ratio
//
//                 draw_set_color(c_white);
//             }
//
//         if ( global.platform_config != 1 ){ texture_set_interpolation(true); }
//     }
// }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_DrawEvent_8 1
// /// Draw Explosion
//
// if ( ball_explosion_active ){
//
//     ball_explosion_step += 0.5;
//
//     if ( ball_explosion_step > ball_explosion_step_max - 1 ){
//
//         ball_explosion_active = false;
//     }
//
//     if ( ball_explosion_active ){
//
//         var expl_scale = obj_ctrl_board.draw_w_ratio * 0.75;
//
//         if ( global.platform_config != 1 ){ texture_set_interpolation(false); }
//
//             draw_sprite_ext(spr_ball_explosion,floor(ball_explosion_step),ball_explosion_x,ball_explosion_y,expl_scale,expl_scale,0,c_white,1); // world_grid_ratio
//
//         if ( global.platform_config != 1 ){ texture_set_interpolation(true); }
//     }
// }
//
//
//
//
// /* */
// #line gml_Object_obj_ctrl_board_DrawEvent_9 1
// /// Draw Game Over
//
// if ( game_over ){
//
//     draw_set_color(c_black);
//     draw_set_alpha(game_over_bg_alpha);
//
//     draw_rectangle(game_over_bg_x1,game_over_bg_y1,game_over_bg_x2,game_over_bg_y2,false);
//
//     draw_set_alpha(1);
//
//     if ( game_over_bg_alpha == game_over_bg_alpha_max ){
//
//         draw_set_font(font_beyond_sml);
//         draw_set_valign(fa_middle);
//
//         for ( var i=0; i<array_length_1d(game_over_text); i+=1 ){
//
//             draw_set_halign(game_over_text_halign[i]);
//
//             draw_set_color(c_black);
//             draw_text(game_over_text_x[i]+2,game_over_text_y[i]+2,game_over_text[i]);
//
//             draw_set_color(game_over_text_color[i]);
//             draw_text(game_over_text_x[i],game_over_text_y[i],game_over_text[i]);
//         }
//
//     }
// }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_DrawEvent_10 1
// /// Draw Pause Icon
//
// if ( floor_started and !game_over ){
//
//     // var line_w = 35;
//
//     var menu_x = ( world_width_draw - 55 );
//     var menu_y = 5;
//
//     draw_sprite_ext(spr_icon_pause,1,menu_x,menu_y,1,1,0,c_white,1);
//
//     /*
//     draw_line_width_colour(line_x,line_y,line_x-line_w,line_y,4,c_gray,c_gray);
//
//     line_y += 10;
//
//     draw_line_width_colour(line_x,line_y,line_x-line_w,line_y,4,c_gray,c_gray);
//
//     line_y += 10;
//
//     draw_line_width_colour(line_x,line_y,line_x-line_w,line_y,4,c_gray,c_gray);
//     */
// }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_DrawEvent_11 1
// /// Draw Mouse Hand
//
//     if ( mouse_hand ){ // or force_meter_show
//
//         draw_sprite(spr_pointer_hand,0,mouse_x,mouse_y);
//     }
//
//
// /* */
// #line gml_Object_obj_ctrl_board_DrawEvent_12 1
// /// [ HIDDEN ] Draw: Bezier
// /*
// draw_set_color(c_white);
//
// draw_bezier(0,0,640,0,0,480,640,480,0.005);
// */
//
// /* */
// #line gml_Object_obj_ctrl_board_DrawEvent_13 1
// /// [ DISABLED ] Screen Fade
// /*
// if ( screen_fade_alpha > 0 ){
//
//     draw_set_alpha(screen_fade_alpha);
//
//     draw_rectangle_colour(-10,-10,world_width_draw,world_height_draw,c_black,c_black,c_black,c_black,false);
//
//     screen_fade_alpha -= 0.01;
//
//     if ( screen_fade_alpha < 0 ){ screen_fade_alpha = 0; }
//
//     draw_set_alpha(1);
// }
// */
//
// /* */
// #line gml_Object_obj_ctrl_board_DrawEvent_14 1
// /// [ HIDDEN ] Draw Game Version
// /*
// draw_set_font(font_pixel_arial_12);
//
// draw_set_halign(fa_right);
// draw_set_valign(fa_bottom);
//
// draw_set_color(c_gray);
//
// draw_text(global.view_w-15,global.view_h-15,scr_game_version());
// */
//
// /* */
// #line gml_Object_obj_ctrl_board_DrawEvent_15 1
// /// [ HIDDEN ] Draw Level Score
// /*
// if ( floor_mode == 2 ){
//
//     draw_set_font(font_pixel_arial_12);
//
//     draw_set_halign(fa_left);
//     draw_set_valign(fa_top);
//
//     draw_set_color(c_gray);
//
//     draw_text(15,15,"score: " + string(level_score));
// }
// */
//
// /* */
// #line gml_Object_obj_ctrl_board_DrawEvent_16 1
// /// [ HIDDEN ] Draw Floor Code
// /*
// draw_set_font(font_pixel_arial_12);
//
// draw_set_halign(fa_left);
// draw_set_valign(fa_bottom);
//
// draw_set_color(c_gray);
//
// draw_text(15,global.view_h-15,string(floor_code));
// */
//
// /* */
// #line gml_Object_obj_ctrl_board_DrawEvent_17 1
// /// [ DISABLED ] View Surface ( Windows )
// /*
// if ( os_type == os_windows ){
//
//     if !surface_exists(surface_view){
//
//         surface_view = surface_create(view_wview[0], view_hview[0]);
//
//         view_surface_id[0] = surface_view;
//     }
// }
// */
//
// /* */
// #line gml_Object_obj_ctrl_board_DrawEvent_18 1
// /// [ DISABLED ] Draw Line - Version 1
// /*
//     bg_color = make_colour_rgb(34,21,33);
//
//     draw_clear_alpha(bg_color,1);
//
//     draw_surface_ext(surf_level,0,0,1,1,0,line_color,0.5);
//
//     draw_set_color(c_white);
//     draw_set_alpha(1);
//
//     draw_line_width_colour(line_x1,line_y1,line_x2,line_y2,2,line_color,line_color);
// */
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_Draw_0(_inst, _other) {
    {
        draw_clear_alpha(_inst.gmlbg_color, 1);
        if (_inst.gmlfloor_started > 0.5) {
            {
                if (_inst.gmlfloor_on_the_fly > 0.5) {
                    {
                        gml_Script_scr_floor_draw(_inst, _other, _inst.gmlline_count_anim);
                    };
                } else {
                    {
                        if (surface_exists(_inst.gmlsurf_floor) > 0.5) {
                            {
                                draw_surface(_inst.gmlsurf_floor, 0, 0);
                            };
                        };
                    };
                };
            };
        };
        if (_inst.gmldebug_draw_grid > 0.5) {
            {
                var gmldraw_w_ratio = (global.gmlwin_w / global.gmlboard_w);
                var gmlgrid_x = 0;
                var gmlgrid_y = 0;
                var gmllocal_grid_size = (20 * gmldraw_w_ratio);
                for (_inst.gmli = 0;
                    (_inst.gmli <= (global.gmlwin_w / gmllocal_grid_size)); _inst.gmli += 1) {
                    {
                        draw_set_color(16777215);
                        draw_set_alpha(0.1);
                        draw_line(gmlgrid_x, 0, gmlgrid_x, global.gmlwin_h);
                        gmlgrid_x += gmllocal_grid_size;
                        draw_set_alpha(1);
                    }
                };
                for (_inst.gmli = 0;
                    (_inst.gmli <= (global.gmlwin_h / gmllocal_grid_size)); _inst.gmli += 1) {
                    {
                        draw_set_color(16777215);
                        draw_set_alpha(0.1);
                        draw_line(0, gmlgrid_y, global.gmlwin_w, gmlgrid_y);
                        gmlgrid_y += gmllocal_grid_size;
                        draw_set_alpha(1);
                    }
                };
            };
        };
        if (_inst.gmlforce_meter_show > 0.5) {
            {
                gml_Script_scr_meter_draw_body_dashed(_inst, _other);
                draw_triangle_colour(_inst.gmlforce_meter_tripointer_x1, _inst.gmlforce_meter_tripointer_y1, _inst.gmlforce_meter_tripointer_x2, _inst.gmlforce_meter_tripointer_y2, _inst.gmlforce_meter_tripointer_x3, _inst.gmlforce_meter_tripointer_y3, _inst.gmlforce_meter_color, _inst.gmlforce_meter_color, _inst.gmlforce_meter_color, 0);
            };
        };
        if ((((_inst.gmlball_inst != 0)) && ((_inst.gmlball_marker_x != (-4))))) {
            {
                draw_set_colour(16777215);
                draw_triangle(_inst.gmlball_marker_x, 5, (_inst.gmlball_marker_x + 10), 15, (_inst.gmlball_marker_x - 10), 15, 0);
            };
        };
        if (_inst.gmlfloor_flash_active > 0.5) {
            {
                draw_rectangle_colour((-10), (-10), (_inst.gmlworld_width_draw + 10), (_inst.gmlworld_width_draw + 10), _inst.gmlflash_color, _inst.gmlflash_color, _inst.gmlflash_color, _inst.gmlflash_color, 0);
                gml_Script_scr_floor_surface_v2(_inst, _other, _inst.gmlline_count, 0, 0, 1, _inst.gmlline_color, _inst.gmlline_gerth, 1, 0);
                gml_Script_scr_floor_surface_v2(_inst, _other, _inst.gmlline_count, 0, 0, 1, _inst.gmlline_color, ((_inst.gmlline_gerth / 2) - 1), 3, 0);
            };
        };
        if (_inst.gmlfloor_started > 0.5) {
            {
                if (_inst.gmlfloor_ready > 0.5) {
                    {
                        var gmlsurf_x = ((floor((_inst.gmlhole_x1 + floor(((_inst.gmlhole_x2 - _inst.gmlhole_x1) / 2)))) * yyInst(2).gmldraw_w_ratio) - 64);
                        var gmlsurf_y = (floor((((_inst.gmlhole_y1 - 10) + _inst.gmlhole_triangle_move_count) * yyInst(2).gmldraw_w_ratio)) - 120);
                        draw_surface(_inst.gmlsurf_hole_arrow, gmlsurf_x, gmlsurf_y);
                    };
                };
            };
        };
        if (_inst.gmlcircle_fade_draw > 0.5) {
            {
                draw_circle_colour(_inst.gmlcircle_fade_x, _inst.gmlcircle_fade_y, _inst.gmlcircle_fade_size, _inst.gmlbg_color_vis, _inst.gmlbg_color_vis, 0);
            };
        };
        if (((_inst.gmlfloor_started > 0.5) && (!(_inst.gmlfloor_flash_active > 0.5)))) {
            {
                if ((((global.gmlgame_mode == 1)) || ((global.gmlgame_mode == 3)) || ((global.gmlgame_mode == 4)))) {
                    {
                        var gmlhit_ratio = 1;
                        draw_set_font(6);
                        if ((_inst.gmlworld_grid_ratio > 1)) {
                            {
                                draw_set_font(5);
                                var gmlhit_ratio = 1.25;
                            };
                        };
                        if ((_inst.gmlworld_grid_ratio > 2)) {
                            {
                                draw_set_font(4);
                                var gmlhit_ratio = 1.5;
                            };
                        };
                        draw_set_valign(1);
                        if ((global.gmlgame_mode == 1)) {
                            {
                                var gmltext_string = _inst.gmlgame_levels_hits_total_vis;
                                var gmltext_width = string_width(string(gmltext_string));
                                var gmltext_height = string_height(string(gmltext_string));
                            };
                        } else {
                            if ((global.gmlgame_mode == 3)) {
                                {
                                    var gmltext_string = gml_Script_scr_time_convert(_inst, _other, _inst.gmlgame_mode_3_time_left);
                                    var gmltext_height = string_height(string(gmltext_string));
                                };
                            } else {
                                if ((global.gmlgame_mode == 4)) {
                                    {
                                        var gmltext_string = (string(_inst.gmlgame_mode_4_balls_left) + _inst.gmllang_text_course[0]);
                                        var gmltext_height = string_height(string(gmltext_string));
                                    };
                                };
                            };
                        };
                        var gmlrect_w = (gmltext_width + floor((12 * gmlhit_ratio)));
                        var gmlrect_h = (gmltext_height + floor((8 * gmlhit_ratio)));
                        var gmlrect_x1 = 6;
                        var gmlrect_y1 = 6;
                        var gmlrect_x2 = (gmlrect_x1 + gmlrect_w);
                        var gmlrect_y2 = (gmlrect_y1 + gmlrect_h);
                        var gmltext1_x = (gmlrect_x1 + floor(((gmlrect_x2 - gmlrect_x1) / 2)));
                        var gmltext1_y = (gmlrect_y1 + floor(((gmlrect_y2 - gmlrect_y1) / 2)) + 1);
                        var gmltext2_x = (gmlrect_x2 + 5);
                        if ((global.gmlplatform_config != 1)) {
                            {
                                texture_set_interpolation(0);
                            };
                        };
                        draw_set_halign(0);
                        if ((global.gmlgame_mode == 1)) {
                            {
                                if ((_inst.gmlgame_hits_curr_vis > 0)) {
                                    {
                                        if ((global.gmlgame_mode == 5)) {
                                            {
                                                gmltext2_x = 8;
                                            };
                                        };
                                        draw_set_color(16777215);
                                        draw_text(gmltext2_x, gmltext1_y, ("+" + string(_inst.gmlgame_hits_curr_vis)));
                                    };
                                };
                            };
                        } else {
                            if ((global.gmlgame_mode == 3)) {
                                {
                                    if ((((_inst.gmlgame_mode_3_time_add <= _inst.gmlgame_mode_3_time_add_max)) && ((_inst.gmlgame_mode_3_time_add != 0)))) {
                                        {
                                            draw_set_color(16777215);
                                            draw_text(gmltext2_x, gmltext1_y, ("+" + string((_inst.gmlgame_mode_3_time_add / 1000)) + _inst.gmllang_text_course[1]));
                                        };
                                    };
                                };
                            };
                        };
                        if ((((global.gmlgame_mode == 1)) || ((global.gmlgame_mode == 3)) || ((global.gmlgame_mode == 4)))) {
                            {
                                draw_set_halign(1);
                                draw_set_color(0);
                                draw_rectangle_colour(gmlrect_x1, gmlrect_y1, gmlrect_x2, gmlrect_y2, _inst.gmlforce_meter_color_on, _inst.gmlforce_meter_color_on, _inst.gmlforce_meter_color_on, _inst.gmlforce_meter_color_on, 0);
                                draw_text(gmltext1_x, gmltext1_y, string(gmltext_string));
                                draw_set_color(16777215);
                            };
                        };
                        if ((global.gmlplatform_config != 1)) {
                            {
                                texture_set_interpolation(1);
                            };
                        };
                    };
                };
            };
        };
        if (_inst.gmlball_explosion_active > 0.5) {
            {
                _inst.gmlball_explosion_step += 0.5;
                if ((_inst.gmlball_explosion_step > (_inst.gmlball_explosion_step_max - 1))) {
                    {
                        _inst.gmlball_explosion_active = 0 ? 1 : 0;
                    };
                };
                if (_inst.gmlball_explosion_active > 0.5) {
                    {
                        var gmlexpl_scale = (yyInst(2).gmldraw_w_ratio * 0.75);
                        if ((global.gmlplatform_config != 1)) {
                            {
                                texture_set_interpolation(0);
                            };
                        };
                        draw_sprite_ext(_inst, 7, floor(_inst.gmlball_explosion_step), _inst.gmlball_explosion_x, _inst.gmlball_explosion_y, gmlexpl_scale, gmlexpl_scale, 0, 16777215, 1);
                        if ((global.gmlplatform_config != 1)) {
                            {
                                texture_set_interpolation(1);
                            };
                        };
                    };
                };
            };
        };
        if (_inst.gmlgame_over > 0.5) {
            {
                draw_set_color(0);
                draw_set_alpha(_inst.gmlgame_over_bg_alpha);
                draw_rectangle(_inst.gmlgame_over_bg_x1, _inst.gmlgame_over_bg_y1, _inst.gmlgame_over_bg_x2, _inst.gmlgame_over_bg_y2, 0);
                draw_set_alpha(1);
                if ((_inst.gmlgame_over_bg_alpha == _inst.gmlgame_over_bg_alpha_max)) {
                    {
                        draw_set_font(2);
                        draw_set_valign(1);
                        for (var gmli = 0;
                            (gmli < array_length_1d(_inst.gmlgame_over_text)); gmli += 1) {
                            {
                                draw_set_halign(_inst.gmlgame_over_text_halign[gmli]);
                                draw_set_color(0);
                                draw_text((_inst.gmlgame_over_text_x[gmli] + 2), (_inst.gmlgame_over_text_y[gmli] + 2), _inst.gmlgame_over_text[gmli]);
                                draw_set_color(_inst.gmlgame_over_text_color[gmli]);
                                draw_text(_inst.gmlgame_over_text_x[gmli], _inst.gmlgame_over_text_y[gmli], _inst.gmlgame_over_text[gmli]);
                            }
                        };
                    };
                };
            };
        };
        if (((_inst.gmlfloor_started > 0.5) && (!(_inst.gmlgame_over > 0.5)))) {
            {
                var gmlmenu_x = (_inst.gmlworld_width_draw - 55);
                var gmlmenu_y = 5;
                draw_sprite_ext(_inst, 26, 1, gmlmenu_x, gmlmenu_y, 1, 1, 0, 16777215, 1);
            };
        };
        if (_inst.gmlmouse_hand > 0.5) {
            {
                draw_sprite(_inst, 6, 0, g_pBuiltIn.mouse_x, g_pBuiltIn.mouse_y);
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_KeyPressed_S_1 1
// /// Resize Window
//
// if ( global.debug_me ){
//
//     scr_screen_init(true);
// }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_KeyPress_83(_inst, _other) {
    {
        if (global.gmldebug_me > 0.5) {
            {
                gml_Script_scr_screen_init(_inst, _other, 1);
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_KeyPressed_R_1 1
// /// Keyb - Level : Create Next
//
// if ( global.debug_me ){
//
//     scr_ball_destroy();
//
//     scr_level_create_v4();
// }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_KeyPress_82(_inst, _other) {
    {
        if (global.gmldebug_me > 0.5) {
            {
                gml_Script_scr_ball_destroy(_inst, _other);
                gml_Script_scr_level_create_v4(_inst, _other);
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_KeyPressed_M_1 1
// /// Mouse Hand: Toggle
//
// if ( global.debug_me ){
//
//     if ( mouse_hand ){
//
//         mouse_hand = false;
//
//         window_set_cursor(cr_default);
//     }
//     else {
//
//         mouse_hand = true;
//
//         window_set_cursor(cr_none);
//     }
// }
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_KeyPress_77(_inst, _other) {
    {
        if (global.gmldebug_me > 0.5) {
            {
                if (_inst.gmlmouse_hand > 0.5) {
                    {
                        _inst.gmlmouse_hand = 0 ? 1 : 0;
                        window_set_cursor(0);
                    };
                } else {
                    {
                        _inst.gmlmouse_hand = 1 ? 1 : 0;
                        window_set_cursor((-1));
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_KeyPressed_G_1 1
// /// Draw Grid : On/Off
//
// if ( global.debug_me ){
//
//     if ( debug_draw_grid ){ debug_draw_grid = false; } else  { debug_draw_grid = true; }
// }
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_KeyPress_71(_inst, _other) {
    {
        if (global.gmldebug_me > 0.5) {
            {
                if (_inst.gmldebug_draw_grid > 0.5) {
                    {
                        _inst.gmldebug_draw_grid = 0 ? 1 : 0;
                    };
                } else {
                    {
                        _inst.gmldebug_draw_grid = 1 ? 1 : 0;
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_KeyPressed_F_1 1
// /// Keyb - Change Fullscreen
//
// if ( global.debug_me ){
//
//     if ( window_get_fullscreen() ){
//
//         window_set_fullscreen(false);
//     }
//     else {
//
//         window_set_fullscreen(true);
//     }
//
//     scr_screen_init(false);
// }
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_KeyPress_70(_inst, _other) {
    {
        if (global.gmldebug_me > 0.5) {
            {
                if (window_get_fullscreen() > 0.5) {
                    {
                        window_set_fullscreen(0);
                    };
                } else {
                    {
                        window_set_fullscreen(1);
                    };
                };
                gml_Script_scr_screen_init(_inst, _other, 0);
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_KeyPressed_RIGHT_1 1
// /// Move View right
//
//     if ( global.debug_me ){ view_xview[0] += 20; }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_KeyPress_39(_inst, _other) {
    {
        if (global.gmldebug_me > 0.5) {
            {
                g_pBuiltIn.view_xview[0] += 20;
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_KeyPressed_LEFT_1 1
// /// Move View Left
//
//     if ( global.debug_me ){ view_xview[0] -= 20; }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_KeyPress_37(_inst, _other) {
    {
        if (global.gmldebug_me > 0.5) {
            {
                g_pBuiltIn.view_xview[0] -= 20;
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_board_KeyPressed_BACKSPACE_1 1
// /// Previous Room: Goto
//
//     if ( global.debug_me ){
//
//         room_goto_previous();
//     }
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_board_KeyPress_8(_inst, _other) {
    {
        if (global.gmldebug_me > 0.5) {
            {
                room_goto_previous();
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_html5_CreateEvent_1 1
// /// Variables Init
//
// // General
//
//     w = browser_width;
//     h = browser_height;
//
//     prev_w = w;
//     prev_h = h;
//
//
// // Orientation
//
//     // 0 = landscape
//     // 1 = portrait
//
//     or_ex = 0;
//
//
// // Window Centering
// // ** Use this instead of the global game setting
//
//     // 0 = Do not center the game in the browser window
//     // 1 = Do center the game in the browser window
//
//     centering = 1;
//
//     paused = 0;
//
//     orientation =  mhtml5_check_orientation();
//
//
// // Hide Address Bar
//
//     hide_address_bar_active = false;
//
//     if ( hide_address_bar_active ){
//
//         mhtml5_hide_addressbar();
//
//         alarm[2] = room_speed * 5; // Hide address bar every few seconds
//     }
//
// // Window Resize
//
//     /*
//     mhtml5_resize_screen(or_ex,1);
//
//     scale_canvas(global.win_w_base,global.win_h_base,browser_width,browser_height,true);
//
//     if ( centering == 1 ) { mhtml5_center_canvas(); } else { window_set_position(0,0); }
//
//     show_debug_message("resize: check");
//     */
//
//     alarm[1] = 1;
//
//
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_html5_Create_0(_inst, _other) {
    {
        _inst.gmlw = g_pBuiltIn.get_browser_width();
        _inst.gmlh = g_pBuiltIn.get_browser_height();
        _inst.gmlprev_w = _inst.gmlw;
        _inst.gmlprev_h = _inst.gmlh;
        _inst.gmlor_ex = 0;
        _inst.gmlcentering = 1;
        _inst.gmlpaused = 0;
        _inst.gmlorientation = gml_Script_mhtml5_check_orientation(_inst, _other);
        _inst.gmlhide_address_bar_active = 0 ? 1 : 0;
        if (_inst.gmlhide_address_bar_active > 0.5) {
            {
                gml_Script_mhtml5_hide_addressbar(_inst, _other);
                if (!(_inst.alarm instanceof Array)) {
                    _inst.alarm = [];
                    _inst.alarm.__yy_owner = 1584050178;
                } else if (_inst.alarm.__yy_owner !== 1584050178) {
                    _inst.alarm = _inst.alarm.slice(0);
                    _inst.alarm.__yy_owner = 1584050178;
                }
                _inst.alarm[2] = (g_pBuiltIn.room_speed * 5);
            };
        };
        if (!(_inst.alarm instanceof Array)) {
            _inst.alarm = [];
            _inst.alarm.__yy_owner = 1584050178;
        } else if (_inst.alarm.__yy_owner !== 1584050178) {
            _inst.alarm = _inst.alarm.slice(0);
            _inst.alarm.__yy_owner = 1584050178;
        }
        _inst.alarm[1] = 1;
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_html5_ObjAlarm2_1 1
// /// Hide address bar
//
// if ( hide_address_bar_active ){
//
//     // hide address bar & set alarm for the address bar to hide every 5 seconds.
//
//     mhtml5_hide_addressbar();
//
//     alarm[2] = room_speed * 5;
//
// }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_html5_Alarm_2(_inst, _other) {
    {
        if (_inst.gmlhide_address_bar_active > 0.5) {
            {
                gml_Script_mhtml5_hide_addressbar(_inst, _other);
                if (!(_inst.alarm instanceof Array)) {
                    _inst.alarm = [];
                    _inst.alarm.__yy_owner = 1584050178;
                } else if (_inst.alarm.__yy_owner !== 1584050178) {
                    _inst.alarm = _inst.alarm.slice(0);
                    _inst.alarm.__yy_owner = 1584050178;
                }
                _inst.alarm[2] = (g_pBuiltIn.room_speed * 5);
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_html5_ObjAlarm1_1 1
// /// Check Window Resize
//
//     if ( browser_width != prev_w ) or ( browser_height != prev_h ){
//
//         // Resize Screen
//
//         mhtml5_resize_screen(or_ex,1);
//
//         scale_canvas(global.win_w_base,global.win_h_base,browser_width,browser_height,true);
//
//         if ( centering == 1 ) { mhtml5_center_canvas(); } else { window_set_position(0,0); }
//     }
//
//     prev_w = browser_width;
//     prev_h = browser_height;
//
//     alarm[1] = room_speed;
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_html5_Alarm_1(_inst, _other) {
    {
        if ((((g_pBuiltIn.get_browser_width() != _inst.gmlprev_w)) || ((g_pBuiltIn.get_browser_height() != _inst.gmlprev_h)))) {
            {
                gml_Script_mhtml5_resize_screen(_inst, _other, _inst.gmlor_ex, 1);
                gml_Script_scale_canvas(_inst, _other, global.gmlwin_w_base, global.gmlwin_h_base, g_pBuiltIn.get_browser_width(), g_pBuiltIn.get_browser_height(), 1);
                if ((_inst.gmlcentering == 1)) {
                    {
                        gml_Script_mhtml5_center_canvas(_inst, _other);
                    };
                } else {
                    {
                        window_set_position(0, 0);
                    };
                };
            };
        };
        _inst.gmlprev_w = g_pBuiltIn.get_browser_width();
        _inst.gmlprev_h = g_pBuiltIn.get_browser_height();
        if (!(_inst.alarm instanceof Array)) {
            _inst.alarm = [];
            _inst.alarm.__yy_owner = 1584050178;
        } else if (_inst.alarm.__yy_owner !== 1584050178) {
            _inst.alarm = _inst.alarm.slice(0);
            _inst.alarm.__yy_owner = 1584050178;
        }
        _inst.alarm[1] = g_pBuiltIn.room_speed;
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_html5_StepNormalEvent_1 1
// /// Resize Canvas
//
//     // scale_canvas(global.win_w_base,global.win_h_base,browser_width,browser_height,true);
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_html5_Step_0(_inst, _other) {
    {};
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_html5_StartRoomEvent_1 1
// /// Resize Screen
//
// // resize the screen to match the window size
// // This should be called on the create, room_start and resize events
//
//     mhtml5_resize_screen(or_ex,1);
//
//     if ( centering == 1 ) { mhtml5_center_canvas(); } else { window_set_position(0,0); }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_html5_Other_4(_inst, _other) {
    {
        gml_Script_mhtml5_resize_screen(_inst, _other, _inst.gmlor_ex, 1);
        if ((_inst.gmlcentering == 1)) {
            {
                gml_Script_mhtml5_center_canvas(_inst, _other);
            };
        } else {
            {
                window_set_position(0, 0);
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_html5_DrawGUI_1 1
// /// [ DEBUG ] Draws
// /*
// draw_set_font(-1);
//
// draw_set_color(c_white);
//
// draw_set_halign(fa_left);
// draw_set_valign(fa_top);
//
// var x_pos = 15;
// var y_pos = 115;
//
// draw_text(15,y_pos,"browser_width: " + string(browser_width));
//
// y_pos += 25;
//
// draw_text(15,y_pos,"prev_w: " + string(prev_w));
//
// y_pos += 25;
//
//
//
// draw_text(15,y_pos,"current_time: " + string(current_time));
//
// y_pos += 25;
//
//
// draw_text(15,y_pos,"bw: " + string(bw));
//
// y_pos += 25;
//
// draw_text(15,y_pos,"bh: " + string(bh));
//
// y_pos += 25;
//
// draw_text(15,y_pos,"w: " + string(w));
//
// y_pos += 25;
//
// draw_text(15,y_pos,"h: " + string(h));
//
// y_pos += 25;
// */
//
// /* */
// #line gml_Object_obj_ctrl_html5_DrawGUI_2 1
// /// [ DISABLED ] Draw Warning
// /*
//     // Draw a warning telling the user to flip the screen back the right way
//
//     if (paused==1) {
//
//         mhtml5_draw_flipwarning(or_ex);
//     }
// */
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_html5_Draw_64(_inst, _other) {
    {};
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_level_process_CreateEvent_1 1
// /// Variables Init
//
// create_active = false;
//
// level_number = 0;
//
// seed_number = 0;
//
// floor_mode = 1;
//
// analysis_active = false;
//
// organize_active = false;
//
// level_score = 0;
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_level_process_Create_0(_inst, _other) {
    {
        _inst.gmlcreate_active = 0 ? 1 : 0;
        _inst.gmllevel_number = 0;
        _inst.gmlseed_number = 0;
        _inst.gmlfloor_mode = 1;
        _inst.gmlanalysis_active = 0 ? 1 : 0;
        _inst.gmlorganize_active = 0 ? 1 : 0;
        _inst.gmllevel_score = 0;
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_level_process_StepNormalEvent_1 1
// /// Level Creation
//
// if ( create_active ){
//
//     level_number += 1;
//
//     seed_number += 1;
//
//     random_set_seed(seed_number);
//
//     scr_floor_init(floor_mode);
//
//     scr_level_analyze();
//
//     file_text_write_string(file_level_storage, string(floor_code) + "$" + string(file_hole_x1) + "," + string(file_hole_y1) + "," + string(file_hole_x2) + "," + string(file_hole_y2) + "$" + string(level_score) ); // file: save level
//
//     if ( level_number == 600 ){
//
//         create_active = false;
//
//         file_text_close(file_level_storage); // file: close
//     }
//     else {
//
//         file_text_writeln(file_level_storage); // file: next line
//     }
// }
//
//
// /* */
// #line gml_Object_obj_ctrl_level_process_StepNormalEvent_2 1
// /// Level Analysis
//
// var pos;
//
// if ( analysis_active ){
//
//     level_analyzing += 1;
//
//     scr_floor_init(floor_mode); // scr_level_build_from_string(level_file_points[level_analyzing]);
//
//     scr_level_analyze();
//
//     if ( level_analyzing == level_count ){ analysis_active = false; }
// }
//
//
//
// /* */
// #line gml_Object_obj_ctrl_level_process_StepNormalEvent_3 1
// /// Level Organize
//
// var pos;
//
// if ( organize_active ){
//
//     level_organizing += 1;
//
//
//     // Level Variables
//
//         pos = string_pos("$",level_file_points[level_organizing]);
//
//             level_floor_points = string_copy(level_file_points[level_organizing],1,pos-1);
//
//         level_file_points[level_organizing] = string_copy(level_file_points[level_organizing],pos+1,string_length(level_file_points[level_organizing])-pos);
//
//         pos = string_pos("$",level_file_points[level_organizing]);
//
//             level_hole_points = string_copy(level_file_points[level_organizing],1,pos-1);
//
//             level_score = real(string_copy(level_file_points[level_organizing],pos+1,string_length(level_file_points[level_organizing])-pos));
//
//
//     // scr_floor_init(floor_mode); // scr_level_build_from_string(level_file_points[level_analyzing]);
//
//     score_tally[level_score] += 1;
//
//
//
//     // show_debug_message(string(level_organizing) + " - " + string(level_score) + " - " + string(highest_score));
//
//     if ( level_score > highest_score ){ highest_score = level_score; }
//
//     if ( level_organizing == level_count ){
//
//         organize_active = false;
//
//         // show_debug_message("---");
//
//         for ( i=0; i<=highest_score; i+=1 ){
//
//             // show_debug_message("score " + string(i) + ": " + string(score_tally[i]));
//         }
//     }
// }
//
//
// // file_text_write_string(file_level_order,
//
// // file_text_writeln(file_level_order);
//
// // file_text_close(file_level_order);
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_level_process_Step_0(_inst, _other) {
    {
        if (_inst.gmlcreate_active > 0.5) {
            {
                _inst.gmllevel_number += 1;
                _inst.gmlseed_number += 1;
                random_set_seed(_inst.gmlseed_number);
                gml_Script_scr_floor_init(_inst, _other, _inst.gmlfloor_mode);
                gml_Script_scr_level_analyze(_inst, _other);
                file_text_write_string(_inst.gmlfile_level_storage, (string(_inst.gmlfloor_code) + "$" + string(_inst.gmlfile_hole_x1) + "," + string(_inst.gmlfile_hole_y1) + "," + string(_inst.gmlfile_hole_x2) + "," + string(_inst.gmlfile_hole_y2) + "$" + string(_inst.gmllevel_score)));
                if ((_inst.gmllevel_number == 600)) {
                    {
                        _inst.gmlcreate_active = 0 ? 1 : 0;
                        file_text_close(_inst.gmlfile_level_storage);
                    };
                } else {
                    {
                        file_text_writeln(_inst.gmlfile_level_storage);
                    };
                };
            };
        };
        var gmlpos;
        if (_inst.gmlanalysis_active > 0.5) {
            {
                _inst.gmllevel_analyzing += 1;
                gml_Script_scr_floor_init(_inst, _other, _inst.gmlfloor_mode);
                gml_Script_scr_level_analyze(_inst, _other);
                if ((_inst.gmllevel_analyzing == _inst.gmllevel_count)) {
                    {
                        _inst.gmlanalysis_active = 0 ? 1 : 0;
                    };
                };
            };
        };
        var gmlpos;
        if (_inst.gmlorganize_active > 0.5) {
            {
                _inst.gmllevel_organizing += 1;
                gmlpos = string_pos("$", _inst.gmllevel_file_points[_inst.gmllevel_organizing]);
                _inst.gmllevel_floor_points = string_copy(_inst.gmllevel_file_points[_inst.gmllevel_organizing], 1, (gmlpos - 1));
                if (!(_inst.gmllevel_file_points instanceof Array)) {
                    _inst.gmllevel_file_points = [];
                    _inst.gmllevel_file_points.__yy_owner = 279264100;
                } else if (_inst.gmllevel_file_points.__yy_owner !== 279264100) {
                    _inst.gmllevel_file_points = _inst.gmllevel_file_points.slice(0);
                    _inst.gmllevel_file_points.__yy_owner = 279264100;
                }
                _inst.gmllevel_file_points[_inst.gmllevel_organizing] = string_copy(_inst.gmllevel_file_points[_inst.gmllevel_organizing], (gmlpos + 1), (string_length(_inst.gmllevel_file_points[_inst.gmllevel_organizing]) - gmlpos));
                gmlpos = string_pos("$", _inst.gmllevel_file_points[_inst.gmllevel_organizing]);
                _inst.gmllevel_hole_points = string_copy(_inst.gmllevel_file_points[_inst.gmllevel_organizing], 1, (gmlpos - 1));
                _inst.gmllevel_score = real(string_copy(_inst.gmllevel_file_points[_inst.gmllevel_organizing], (gmlpos + 1), (string_length(_inst.gmllevel_file_points[_inst.gmllevel_organizing]) - gmlpos)));
                if (!(_inst.gmlscore_tally instanceof Array)) {
                    _inst.gmlscore_tally = [];
                    _inst.gmlscore_tally.__yy_owner = 3805716001;
                } else if (_inst.gmlscore_tally.__yy_owner !== 3805716001) {
                    _inst.gmlscore_tally = _inst.gmlscore_tally.slice(0);
                    _inst.gmlscore_tally.__yy_owner = 3805716001;
                }
                _inst.gmlscore_tally[_inst.gmllevel_score] += 1;
                if ((_inst.gmllevel_score > _inst.gmlhighest_score)) {
                    {
                        _inst.gmlhighest_score = _inst.gmllevel_score;
                    };
                };
                if ((_inst.gmllevel_organizing == _inst.gmllevel_count)) {
                    {
                        _inst.gmlorganize_active = 0 ? 1 : 0;
                        for (_inst.gmli = 0;
                            (_inst.gmli <= _inst.gmlhighest_score); _inst.gmli += 1) {
                            {}
                        };
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_level_process_DrawEvent_1 1
// /// Draw Level Number
//
// if ( create_active ){
//
//     draw_set_font(font_pixel_arial_12);
//
//     draw_set_halign(fa_left);
//     draw_set_valign(fa_top);
//
//     draw_set_color(c_gray);
//
//     draw_text(15,15,string(seed_number) + ". " + string(floor_code));
// }
//
//
// /* */
// #line gml_Object_obj_ctrl_level_process_DrawEvent_2 1
// /// Draw Analysis
//
// if ( analysis_active ){
//
//     draw_set_font(font_pixel_arial_12);
//
//     draw_set_halign(fa_left);
//     draw_set_valign(fa_top);
//
//     draw_set_color(c_gray);
//
//     draw_text(15,15,string(level_analyzing) + "." + string(level_score) + "." + string(level_file_points[level_analyzing]));
// }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_level_process_Draw_0(_inst, _other) {
    {
        if (_inst.gmlcreate_active > 0.5) {
            {
                draw_set_font(0);
                draw_set_halign(0);
                draw_set_valign(0);
                draw_set_color(8421504);
                draw_text(15, 15, (string(_inst.gmlseed_number) + ". " + string(_inst.gmlfloor_code)));
            };
        };
        if (_inst.gmlanalysis_active > 0.5) {
            {
                draw_set_font(0);
                draw_set_halign(0);
                draw_set_valign(0);
                draw_set_color(8421504);
                draw_text(15, 15, (string(_inst.gmllevel_analyzing) + "." + string(_inst.gmllevel_score) + "." + string(_inst.gmllevel_file_points[_inst.gmllevel_analyzing])));
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_level_process_KeyPressed_O_1 1
// /// Start Level Organizing
//
// if ( global.debug_me ){
//
//     // organize_active = true;
//
//     file_level_storage = file_text_open_read("level_storage.txt");
//
//     level_count = -1;
//
//     while (!file_text_eoln(file_level_storage)){
//
//         level_count += 1;
//
//         level_file_points[level_count] = file_text_read_string(file_level_storage);
//
//         file_text_readln(file_level_storage);
//     }
//
//     file_text_close(file_level_storage);
//
//     score_tally[20] = 0;
//
//     highest_score = 0;
//
//     i = -1;
//
//     // --- //
//
//     curve_count_max = 10;
//
//     difficulty_curve_max = 5;
//
//     difficulty_file_count = 0;
//
//     cycle_count_max = 3;
//
//     level_score_pos[0] = 0;
//     level_score_pos[1] = 0;
//     level_score_pos[2] = 0;
//     level_score_pos[3] = 0;
//     level_score_pos[4] = 0;
//     level_score_pos[5] = 0;
//
//
//     var pos
//     var curr_diff
//
//     // Separate Level Variables
//
//     for ( i=0; i<=level_count; i+=1; ){
//
//         var temp_level_file_points = level_file_points[i]
//
//         pos = string_pos("$",temp_level_file_points);
//
//             level_floor_points[i] = string_copy(temp_level_file_points,1,pos-1);
//
//         temp_level_file_points = string_copy(temp_level_file_points,pos+1,string_length(temp_level_file_points)-pos);
//
//         pos = string_pos("$",temp_level_file_points);
//
//             level_hole_points[i] = string_copy(temp_level_file_points,1,pos-1);
//
//             level_score[i] = real(string_copy(temp_level_file_points,pos+1,string_length(temp_level_file_points)-pos));
//
//             curr_diff = level_score[i];
//
//             if ( curr_diff > 5 ){ curr_diff = 5; }
//
//         level_diff_array[curr_diff,level_score_pos[curr_diff]] = level_file_points[i];
//
//         // show_debug_message("level_diff_array[" + string(curr_diff) + "," + string(level_score_pos[curr_diff]) + "] = " + string(level_diff_array[curr_diff,level_score_pos[curr_diff]]))
//
//         level_score_pos[curr_diff] += 1;
//     }
//
//     level_score_pos[0] = 0;
//     level_score_pos[1] = 0;
//     level_score_pos[2] = 0;
//     level_score_pos[3] = 0;
//     level_score_pos[4] = 0;
//     level_score_pos[5] = 0;
//
//     file_level_order = file_text_open_write(working_directory + "\level_order.txt");
//
//     for ( curve=1; curve<=curve_count_max; curve+=1 ){
//
//         for ( diff=0; diff<=difficulty_curve_max; diff+=1 ){
//
//             for ( cycle=1; cycle<=cycle_count_max; cycle+=1 ){
//
//                 file_text_write_string(file_level_order,level_diff_array[diff,level_score_pos[diff]]);
//
//                 file_text_writeln(file_level_order);
//
//                 level_score_pos[diff] += 1;
//             }
//         }
//
//         for ( diff=difficulty_curve_max-1; diff>0; diff-=1 ){
//
//             for ( cycle=1; cycle<=cycle_count_max; cycle+=1 ){
//
//                 file_text_write_string(file_level_order,level_diff_array[diff,level_score_pos[diff]]);
//
//                 file_text_writeln(file_level_order);
//
//                 level_score_pos[diff] += 1;
//             }
//         }
//     }
//
//     file_text_close(file_level_order);
// }
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_level_process_KeyPress_79(_inst, _other) {
    {
        if (global.gmldebug_me > 0.5) {
            {
                _inst.gmlfile_level_storage = file_text_open_read("level_storage.txt");
                _inst.gmllevel_count = (-1);
                while (!(file_text_eoln(_inst.gmlfile_level_storage) > 0.5)) {
                    {
                        _inst.gmllevel_count += 1;
                        if (!(_inst.gmllevel_file_points instanceof Array)) {
                            _inst.gmllevel_file_points = [];
                            _inst.gmllevel_file_points.__yy_owner = 279264100;
                        } else if (_inst.gmllevel_file_points.__yy_owner !== 279264100) {
                            _inst.gmllevel_file_points = _inst.gmllevel_file_points.slice(0);
                            _inst.gmllevel_file_points.__yy_owner = 279264100;
                        }
                        _inst.gmllevel_file_points[_inst.gmllevel_count] = file_text_read_string(_inst.gmlfile_level_storage);
                        file_text_readln(_inst.gmlfile_level_storage);
                    }
                };
                file_text_close(_inst.gmlfile_level_storage);
                if (!(_inst.gmlscore_tally instanceof Array)) {
                    _inst.gmlscore_tally = [];
                    _inst.gmlscore_tally.__yy_owner = 3805716001;
                } else if (_inst.gmlscore_tally.__yy_owner !== 3805716001) {
                    _inst.gmlscore_tally = _inst.gmlscore_tally.slice(0);
                    _inst.gmlscore_tally.__yy_owner = 3805716001;
                }
                _inst.gmlscore_tally[20] = 0;
                _inst.gmlhighest_score = 0;
                _inst.gmli = (-1);
                _inst.gmlcurve_count_max = 10;
                _inst.gmldifficulty_curve_max = 5;
                _inst.gmldifficulty_file_count = 0;
                _inst.gmlcycle_count_max = 3;
                if (!(_inst.gmllevel_score_pos instanceof Array)) {
                    _inst.gmllevel_score_pos = [];
                    _inst.gmllevel_score_pos.__yy_owner = 1040527131;
                } else if (_inst.gmllevel_score_pos.__yy_owner !== 1040527131) {
                    _inst.gmllevel_score_pos = _inst.gmllevel_score_pos.slice(0);
                    _inst.gmllevel_score_pos.__yy_owner = 1040527131;
                }
                _inst.gmllevel_score_pos[0] = 0;
                _inst.gmllevel_score_pos[1] = 0;
                _inst.gmllevel_score_pos[2] = 0;
                _inst.gmllevel_score_pos[3] = 0;
                _inst.gmllevel_score_pos[4] = 0;
                _inst.gmllevel_score_pos[5] = 0;
                var gmlpos;
                var gmlcurr_diff;
                for (_inst.gmli = 0;
                    (_inst.gmli <= _inst.gmllevel_count); _inst.gmli += 1) {
                    {
                        var gmltemp_level_file_points = _inst.gmllevel_file_points[_inst.gmli];
                        gmlpos = string_pos("$", gmltemp_level_file_points);
                        if (!(_inst.gmllevel_floor_points instanceof Array)) {
                            _inst.gmllevel_floor_points = [];
                            _inst.gmllevel_floor_points.__yy_owner = 2170938639;
                        } else if (_inst.gmllevel_floor_points.__yy_owner !== 2170938639) {
                            _inst.gmllevel_floor_points = _inst.gmllevel_floor_points.slice(0);
                            _inst.gmllevel_floor_points.__yy_owner = 2170938639;
                        }
                        _inst.gmllevel_floor_points[_inst.gmli] = string_copy(gmltemp_level_file_points, 1, (gmlpos - 1));
                        gmltemp_level_file_points = string_copy(gmltemp_level_file_points, (gmlpos + 1), (string_length(gmltemp_level_file_points) - gmlpos));
                        gmlpos = string_pos("$", gmltemp_level_file_points);
                        if (!(_inst.gmllevel_hole_points instanceof Array)) {
                            _inst.gmllevel_hole_points = [];
                            _inst.gmllevel_hole_points.__yy_owner = 1597299249;
                        } else if (_inst.gmllevel_hole_points.__yy_owner !== 1597299249) {
                            _inst.gmllevel_hole_points = _inst.gmllevel_hole_points.slice(0);
                            _inst.gmllevel_hole_points.__yy_owner = 1597299249;
                        }
                        _inst.gmllevel_hole_points[_inst.gmli] = string_copy(gmltemp_level_file_points, 1, (gmlpos - 1));
                        if (!(_inst.gmllevel_score instanceof Array)) {
                            _inst.gmllevel_score = [];
                            _inst.gmllevel_score.__yy_owner = 7094256;
                        } else if (_inst.gmllevel_score.__yy_owner !== 7094256) {
                            _inst.gmllevel_score = _inst.gmllevel_score.slice(0);
                            _inst.gmllevel_score.__yy_owner = 7094256;
                        }
                        _inst.gmllevel_score[_inst.gmli] = real(string_copy(gmltemp_level_file_points, (gmlpos + 1), (string_length(gmltemp_level_file_points) - gmlpos)));
                        gmlcurr_diff = _inst.gmllevel_score[_inst.gmli];
                        if ((gmlcurr_diff > 5)) {
                            {
                                gmlcurr_diff = 5;
                            };
                        };
                        if (!(_inst.gmllevel_diff_array instanceof Array)) {
                            _inst.gmllevel_diff_array = [];
                            _inst.gmllevel_diff_array.__yy_owner = 3256982059;
                        } else if (_inst.gmllevel_diff_array.__yy_owner !== 3256982059) {
                            _inst.gmllevel_diff_array = _inst.gmllevel_diff_array.slice(0);
                            _inst.gmllevel_diff_array.__yy_owner = 3256982059;
                        }
                        array_set_2D(_inst.gmllevel_diff_array, gmlcurr_diff, _inst.gmllevel_score_pos[gmlcurr_diff], _inst.gmllevel_file_points[_inst.gmli]);
                        _inst.gmllevel_score_pos[gmlcurr_diff] += 1;
                    }
                };
                _inst.gmllevel_score_pos[0] = 0;
                _inst.gmllevel_score_pos[1] = 0;
                _inst.gmllevel_score_pos[2] = 0;
                _inst.gmllevel_score_pos[3] = 0;
                _inst.gmllevel_score_pos[4] = 0;
                _inst.gmllevel_score_pos[5] = 0;
                _inst.gmlfile_level_order = file_text_open_write((g_pBuiltIn.working_directory + "\\level_order.txt"));
                for (_inst.gmlcurve = 1;
                    (_inst.gmlcurve <= _inst.gmlcurve_count_max); _inst.gmlcurve += 1) {
                    {
                        for (_inst.gmldiff = 0;
                            (_inst.gmldiff <= _inst.gmldifficulty_curve_max); _inst.gmldiff += 1) {
                            {
                                for (_inst.gmlcycle = 1;
                                    (_inst.gmlcycle <= _inst.gmlcycle_count_max); _inst.gmlcycle += 1) {
                                    {
                                        file_text_write_string(_inst.gmlfile_level_order, _inst.gmllevel_diff_array[_inst.gmldiff][_inst.gmllevel_score_pos[_inst.gmldiff]]);
                                        file_text_writeln(_inst.gmlfile_level_order);
                                        _inst.gmllevel_score_pos[_inst.gmldiff] += 1;
                                    }
                                };
                            }
                        };
                        for (_inst.gmldiff = (_inst.gmldifficulty_curve_max - 1);
                            (_inst.gmldiff > 0); _inst.gmldiff -= 1) {
                            {
                                for (_inst.gmlcycle = 1;
                                    (_inst.gmlcycle <= _inst.gmlcycle_count_max); _inst.gmlcycle += 1) {
                                    {
                                        file_text_write_string(_inst.gmlfile_level_order, _inst.gmllevel_diff_array[_inst.gmldiff][_inst.gmllevel_score_pos[_inst.gmldiff]]);
                                        file_text_writeln(_inst.gmlfile_level_order);
                                        _inst.gmllevel_score_pos[_inst.gmldiff] += 1;
                                    }
                                };
                            }
                        };
                    }
                };
                file_text_close(_inst.gmlfile_level_order);
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_level_process_KeyPressed_C_1 1
// /// Start Level Creation
//
// if ( global.debug_me ){
//
//     create_active = true;
//
//     file_level_storage = file_text_open_write(working_directory + "\level_storage.txt");
// }
//
//
//
// /*
// var num = 0; while (!file_text_eoln(file)){
//
//     score_array[num] = file_text_read_real(file);
//
//     num++;
// }
//
// file_text_close(file);
// */
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_level_process_KeyPress_67(_inst, _other) {
    {
        if (global.gmldebug_me > 0.5) {
            {
                _inst.gmlcreate_active = 1 ? 1 : 0;
                _inst.gmlfile_level_storage = file_text_open_write((g_pBuiltIn.working_directory + "\\level_storage.txt"));
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_level_process_KeyPressed_A_1 1
// /// Start Level Analysis
//
// if ( global.debug_me ){
//
//     analysis_active = true;
//
//     file_level_storage = file_text_open_read("level_storage.txt");
//
//     level_count = -1;
//
//     while (!file_text_eoln(file_level_storage)){
//
//         level_count += 1;
//
//         level_file_points[level_count] = file_text_read_string(file_level_storage);
//
//         file_text_readln(file_level_storage);
//     }
//
//     file_text_close(file_level_storage);
//
//     level_analyzing = -1;
// }
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_level_process_KeyPress_65(_inst, _other) {
    {
        if (global.gmldebug_me > 0.5) {
            {
                _inst.gmlanalysis_active = 1 ? 1 : 0;
                _inst.gmlfile_level_storage = file_text_open_read("level_storage.txt");
                _inst.gmllevel_count = (-1);
                while (!(file_text_eoln(_inst.gmlfile_level_storage) > 0.5)) {
                    {
                        _inst.gmllevel_count += 1;
                        if (!(_inst.gmllevel_file_points instanceof Array)) {
                            _inst.gmllevel_file_points = [];
                            _inst.gmllevel_file_points.__yy_owner = 279264100;
                        } else if (_inst.gmllevel_file_points.__yy_owner !== 279264100) {
                            _inst.gmllevel_file_points = _inst.gmllevel_file_points.slice(0);
                            _inst.gmllevel_file_points.__yy_owner = 279264100;
                        }
                        _inst.gmllevel_file_points[_inst.gmllevel_count] = file_text_read_string(_inst.gmlfile_level_storage);
                        file_text_readln(_inst.gmlfile_level_storage);
                    }
                };
                file_text_close(_inst.gmlfile_level_storage);
                _inst.gmllevel_analyzing = (-1);
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ctrl_resolution_CreateEvent_1 1
// /// Variables Init
//
//     // Mobile ( Not Browser )
//
//     if ( global.platform_config = 3 ){
//
//         scr_world_ratio();
//     }
//
//
// /* */
// #line gml_Object_obj_ctrl_resolution_CreateEvent_2 1
// /// Screen: Init
//
//     // Mobile ( Not Browser )
//
//     if ( global.platform_config = 3 ){
//
//         scr_screen_init(false);
//     }
//
//
// /* */
// #line gml_Object_obj_ctrl_resolution_CreateEvent_3 1
// /// Next Room
//
//     room_goto(room_game);
//
// /* */
// /*  */ }
//
function gml_Object_obj_ctrl_resolution_Create_0(_inst, _other) {
    {
        if ((global.gmlplatform_config == 3)) {
            {
                gml_Script_scr_world_ratio(_inst, _other);
            };
        };
        if ((global.gmlplatform_config == 3)) {
            {
                gml_Script_scr_screen_init(_inst, _other, 0);
            };
        };
        room_goto(3);
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ball_CreateEvent_1 1
// /// Variables Init
//
// surface_ball = -1;
//
// ball_size_radius_base = 3;
//
// ball_size_radius = ceil( ball_size_radius_base * obj_ctrl_board.draw_w_ratio );
//
// prev_game_ratio = obj_ctrl_board.game_ratio;
//
// x_draw = x;
// y_draw = y;
//
// glow_timer = 15;
// glow_alpha = 0;
// glow_alpha_quot = 0.1;
// glow_size_base = 12;
// glow_size = glow_size_base;
// glow_ratio = 1;
//
// glare_draw = false;
// glare_size_base = 12;
//
// tint_color = make_colour_rgb(obj_ctrl_board.floor_color_r,obj_ctrl_board.floor_color_g,obj_ctrl_board.floor_color_b);
//
// // Trail
//
//     surface_trail = -1;
//
//     trail_length = 16; // length in frames
//
//     trail_init = false;
//
//     trail_alpha = 0;
//
//     phy_active_prev = true;
//
//
// // Sound
//
//     audio_glow_hit = sound_accent_contact_2;
//
//
//
// /* */
// #line gml_Object_obj_ball_CreateEvent_2 1
// /// Glare Init
//
// glare_sprite[0] = 3;
// glare_pos[0] = 0.05;
// glare_color[0] = make_colour_rgb(187,253,255);
//
// glare_sprite[1] = 1;
// glare_pos[1] = 0.20;
// glare_color[1] = make_colour_rgb(187,176,255);
//
// glare_sprite[2] = 0;
// glare_pos[2] = 0.23;
// glare_color[2] = make_colour_rgb(255,193,193);
//
// glare_sprite[3] = 2;
// glare_pos[3] = 0.26;
// glare_color[3] = c_white;
//
// glare_sprite[4] = 3;
// glare_pos[4] = 0.30;
// glare_color[4] = make_colour_rgb(255,193,193);
//
// glare_sprite[5] = 3;
// glare_pos[5] = 0.40;
// glare_color[5] = c_white;
//
//
// /* */
// #line gml_Object_obj_ball_CreateEvent_3 1
// /// Physics Init
//
//     scr_physics_ball_init();
// /*
// var game_ratio = 1; // obj_ctrl_board.game_ratio;
//
// var phys_circle_size = ball_size_radius;
//
// var phys_density = 0.6 * game_ratio; // real("0." + string( ceil( 2 * ball_size_radius ))); // 0.2 * ball_size_radius
//
// var phys_restitution = 0.4 * game_ratio; // real("0." + string( ceil( 3 * game_ratio ))); // 0.3
//
// var phys_linear_damping = 0.6 * game_ratio; // real("0." + string( ceil( 1 * game_ratio ))); // 0.1
//
// var phys_angular_damping = 0.8 * game_ratio; // game_ratio * 10; // ceil( 5 * game_ratio ); // 5
//
// var phys_friction = 1; // game_ratio * 0.2; // real("0." + string( ceil( 2 * game_ratio ))); // 0.2
//
// ball_fixture = physics_fixture_create()
//
//     physics_fixture_set_circle_shape(ball_fixture, phys_circle_size);
//     physics_fixture_set_density(ball_fixture, phys_density); // mass per unit volume
//     physics_fixture_set_restitution(ball_fixture, phys_restitution); // bounciness
//     physics_fixture_set_collision_group(ball_fixture, 0);
//     physics_fixture_set_linear_damping(ball_fixture, phys_linear_damping); // reduce the physics world velocity of an instance ( similar to friction )
//     physics_fixture_set_angular_damping(ball_fixture, phys_angular_damping); // rotation
//     physics_fixture_set_friction(ball_fixture, phys_friction); // collision between 2 objects
//     physics_fixture_set_awake(ball_fixture, true);
//     physics_fixture_set_sensor(ball_fixture, false);
//
// my_fix = physics_fixture_bind(ball_fixture, id);
//
// physics_fixture_delete(ball_fixture);
// */
//
// /* */
// #line gml_Object_obj_ball_CreateEvent_4 1
// ///  Particles Init
// /**/
//     // Explosion
//
//         var particle_size = ( obj_ctrl_board.draw_w_ratio * 0.75 );
//
//         if ( particle_size < 1 ){ particle_size = 1; }
//
//         // Particle System
//         partExplosion_sys = part_system_create();
//
//         // Particle
//         partExplosion = part_type_create();
//         part_type_sprite(partExplosion, spr_particle_square, false, false, true);
//         part_type_size(partExplosion,particle_size,particle_size,0,0);
//         part_type_color2(partExplosion,16777215,16777088);
//         // part_type_alpha2(partExplosion,1,0);
//         part_type_speed(partExplosion,3,5,0,0);
//         part_type_direction(partExplosion,0,359,0,0)
//         // part_type_gravity(partExplosion,0.02,270);
//         part_type_life(partExplosion,20,30);
//
//         // Particle Emitter
//         partExplosion_emit = part_emitter_create(partExplosion_sys);
//
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ball_Create_0(_inst, _other) {
    {
        _inst.gmlsurface_ball = (-1);
        _inst.gmlball_size_radius_base = 3;
        _inst.gmlball_size_radius = ceil((_inst.gmlball_size_radius_base * yyInst(2).gmldraw_w_ratio));
        _inst.gmlprev_game_ratio = yyInst(2).gmlgame_ratio;
        _inst.gmlx_draw = _inst.x;
        _inst.gmly_draw = _inst.y;
        _inst.gmlglow_timer = 15;
        _inst.gmlglow_alpha = 0;
        _inst.gmlglow_alpha_quot = 0.1;
        _inst.gmlglow_size_base = 12;
        _inst.gmlglow_size = _inst.gmlglow_size_base;
        _inst.gmlglow_ratio = 1;
        _inst.gmlglare_draw = 0 ? 1 : 0;
        _inst.gmlglare_size_base = 12;
        _inst.gmltint_color = make_colour_rgb(yyInst(2).gmlfloor_color_r, yyInst(2).gmlfloor_color_g, yyInst(2).gmlfloor_color_b);
        _inst.gmlsurface_trail = (-1);
        _inst.gmltrail_length = 16;
        _inst.gmltrail_init = 0 ? 1 : 0;
        _inst.gmltrail_alpha = 0;
        _inst.gmlphy_active_prev = 1 ? 1 : 0;
        _inst.gmlaudio_glow_hit = 5;
        if (!(_inst.gmlglare_sprite instanceof Array)) {
            _inst.gmlglare_sprite = [];
            _inst.gmlglare_sprite.__yy_owner = 667880959;
        } else if (_inst.gmlglare_sprite.__yy_owner !== 667880959) {
            _inst.gmlglare_sprite = _inst.gmlglare_sprite.slice(0);
            _inst.gmlglare_sprite.__yy_owner = 667880959;
        }
        _inst.gmlglare_sprite[0] = 3;
        if (!(_inst.gmlglare_pos instanceof Array)) {
            _inst.gmlglare_pos = [];
            _inst.gmlglare_pos.__yy_owner = 3585834310;
        } else if (_inst.gmlglare_pos.__yy_owner !== 3585834310) {
            _inst.gmlglare_pos = _inst.gmlglare_pos.slice(0);
            _inst.gmlglare_pos.__yy_owner = 3585834310;
        }
        _inst.gmlglare_pos[0] = 0.05;
        if (!(_inst.gmlglare_color instanceof Array)) {
            _inst.gmlglare_color = [];
            _inst.gmlglare_color.__yy_owner = 1401674574;
        } else if (_inst.gmlglare_color.__yy_owner !== 1401674574) {
            _inst.gmlglare_color = _inst.gmlglare_color.slice(0);
            _inst.gmlglare_color.__yy_owner = 1401674574;
        }
        _inst.gmlglare_color[0] = make_colour_rgb(187, 253, 255);
        _inst.gmlglare_sprite[1] = 1;
        _inst.gmlglare_pos[1] = 0.2;
        _inst.gmlglare_color[1] = make_colour_rgb(187, 176, 255);
        _inst.gmlglare_sprite[2] = 0;
        _inst.gmlglare_pos[2] = 0.23;
        _inst.gmlglare_color[2] = make_colour_rgb(255, 193, 193);
        _inst.gmlglare_sprite[3] = 2;
        _inst.gmlglare_pos[3] = 0.26;
        _inst.gmlglare_color[3] = 16777215;
        _inst.gmlglare_sprite[4] = 3;
        _inst.gmlglare_pos[4] = 0.3;
        _inst.gmlglare_color[4] = make_colour_rgb(255, 193, 193);
        _inst.gmlglare_sprite[5] = 3;
        _inst.gmlglare_pos[5] = 0.4;
        _inst.gmlglare_color[5] = 16777215;
        gml_Script_scr_physics_ball_init(_inst, _other);
        var gmlparticle_size = (yyInst(2).gmldraw_w_ratio * 0.75);
        if ((gmlparticle_size < 1)) {
            {
                gmlparticle_size = 1;
            };
        };
        _inst.gmlpartExplosion_sys = part_system_create();
        _inst.gmlpartExplosion = part_type_create();
        part_type_sprite(_inst.gmlpartExplosion, 1, 0, 0, 1);
        part_type_size(_inst.gmlpartExplosion, gmlparticle_size, gmlparticle_size, 0, 0);
        part_type_color2(_inst.gmlpartExplosion, 16777215, 16777088);
        part_type_speed(_inst.gmlpartExplosion, 3, 5, 0, 0);
        part_type_direction(_inst.gmlpartExplosion, 0, 359, 0, 0);
        part_type_life(_inst.gmlpartExplosion, 20, 30);
        _inst.gmlpartExplosion_emit = part_emitter_create(_inst.gmlpartExplosion_sys);
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ball_DestroyEvent_1 1
// /// [ DISABLED ] Destroy Particles
//
// part_particles_clear(partExplosion_sys);
//
// part_type_destroy(partExplosion_sys);
//
//
// /* */
// #line gml_Object_obj_ball_DestroyEvent_2 1
// /// Destroy: Surfaces
//
// surface_free(surface_trail);
//
// surface_free(surface_ball);
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ball_Destroy_0(_inst, _other) {
    {
        part_particles_clear(_inst.gmlpartExplosion_sys);
        part_type_destroy(_inst.gmlpartExplosion_sys);
        surface_free(_inst.gmlsurface_trail);
        surface_free(_inst.gmlsurface_ball);
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ball_ObjAlarm3_1 1
// action_effect( 1, x_draw, y_draw, 1, 16777215, 1 );
// #line gml_Object_obj_ball_ObjAlarm3_2 1
//
// // show_debug_message('explode');
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ball_Alarm_3(_inst, _other) {
    {
        action_effect(_inst, 1, _inst.gmlx_draw, _inst.gmly_draw, 1, 16777215, 1);
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ball_ObjAlarm2_1 1
// /// Ball Explode
//
// // if ( obj_ctrl_board.floor_build_animation ){}
//
//     visible = false;
//
//     with ( obj_ctrl_board ){
//
//         ball_explosion_step = 0;
//
//         ball_explosion_active = true;
//
//         ball_explosion_x = obj_ball.x_draw2;
//
//         ball_explosion_y = obj_ball.y_draw2;
//     }
//
//     // Shake Screen
//
//         timeline_index = timeline_shake_med;
//         timeline_position = 0;
//         timeline_running = true;
//
//     /* Explosion ( OLD )
//     if ( !global.game_lowfps ){
//
//         var part_x = x * obj_ctrl_board.draw_w_ratio;
//         var part_y = y * obj_ctrl_board.draw_w_ratio;
//
//         part_emitter_region(partExplosion_sys,partExplosion_emit,part_x,part_x,part_y,part_y,0,0);
//
//         part_emitter_burst(partExplosion_sys,partExplosion_emit,partExplosion,50);
//     }
//     else {
//
//         alarm[3] = 1;
//     }
//     */
//
//     scr_play_sound(sound_explosion_2,1,false);
//
//
// /* */
// #line gml_Object_obj_ball_ObjAlarm2_2 1
// /// Circle Fade
//
// with ( obj_ctrl_board ){
//
//     circle_fade_size = 0;
//
//     circle_fade_x = obj_ball.x_draw;
//
//     circle_fade_y = obj_ball.y_draw;
//
//     circle_fade_grow = true;
//
//     circle_fade_draw = true;
// }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_ball_Alarm_2(_inst, _other) {
    {
        _inst.visible = 0 ? 1 : 0; {
            var __yy__v94 = GetWithArray(2);
            for (var __yy__v95 in __yy__v94) {
                if (!__yy__v94.hasOwnProperty(__yy__v95)) continue;
                var __yy__v96 = __yy__v94[__yy__v95];
                if (__yy__v96.marked) continue;
                if (!__yy__v96.active) continue; {
                    __yy__v96.gmlball_explosion_step = 0;
                    __yy__v96.gmlball_explosion_active = 1 ? 1 : 0;
                    __yy__v96.gmlball_explosion_x = yyInst(6).gmlx_draw2;
                    __yy__v96.gmlball_explosion_y = yyInst(6).gmly_draw2;
                }
            }
        };
        _inst.timeline_index = 1;
        _inst.timeline_position = 0;
        _inst.set_timeline_running(1 ? 1 : 0);
        gml_Script_scr_play_sound(_inst, _other, 0, 1, 0); {
            var __yy__v97 = GetWithArray(2);
            for (var __yy__v98 in __yy__v97) {
                if (!__yy__v97.hasOwnProperty(__yy__v98)) continue;
                var __yy__v99 = __yy__v97[__yy__v98];
                if (__yy__v99.marked) continue;
                if (!__yy__v99.active) continue; {
                    __yy__v99.gmlcircle_fade_size = 0;
                    __yy__v99.gmlcircle_fade_x = yyInst(6).gmlx_draw;
                    __yy__v99.gmlcircle_fade_y = yyInst(6).gmly_draw;
                    __yy__v99.gmlcircle_fade_grow = 1 ? 1 : 0;
                    __yy__v99.gmlcircle_fade_draw = 1 ? 1 : 0;
                }
            }
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ball_ObjAlarm1_1 1
// /// Refresh Physics
//
// if ( obj_ctrl_board.game_ratio != prev_game_ratio ){
//
//     scr_physics_ball_init();
//
//     base_game_ratio = obj_ctrl_board.game_ratio;
// }
//
// /* */
// /*  */ }
//
function gml_Object_obj_ball_Alarm_1(_inst, _other) {
    {
        if ((yyInst(2).gmlgame_ratio != _inst.gmlprev_game_ratio)) {
            {
                gml_Script_scr_physics_ball_init(_inst, _other);
                _inst.gmlbase_game_ratio = yyInst(2).gmlgame_ratio;
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ball_StepEndEvent_1 1
// /// Trail Position
//
// if ( global.platform_config != 1 ){}
//
//     if ( !trail_init ){
//
//         var curr_alpha = 1;
//
//         for ( var i = 0; i < trail_length; i += 1; ) {
//
//             trail_length_x[i] = x_draw;
//             trail_length_y[i] = y_draw;
//             trail_alpha_step[i] = curr_alpha;
//
//             curr_alpha -= 0.05;
//         }
//
//         trail_init = true;
//     }
//     else {
//
//         for ( var i = (trail_length - 1); i > 0; i-- ) {
//
//             trail_length_x[i] = trail_length_x[i - 1];
//             trail_length_y[i] = trail_length_y[i - 1];
//             // trail_alpha_step[i] = trail_alpha_step[i - 1];
//         }
//
//         trail_length_x[0] = x_draw;
//         trail_length_y[0] = y_draw;
//         // trail_alpha_step[0] = trail_alpha;
//     }
//
//
// /* */
// #line gml_Object_obj_ball_StepEndEvent_2 1
// /// Trail Surface
//
// if ( global.platform_config != 1 ){
//
//     if ( !surface_exists(surface_trail) ){ surface_trail = surface_create(obj_ctrl_board.world_width_draw, obj_ctrl_board.world_height_draw); }
//
//     // Draw trail to surface
//     surface_set_target(surface_trail);
//
//         // Clear surface
//         draw_clear_alpha(c_black, 0);
//
//         for (var i = 0; i < trail_length; i += 1){
//
//             draw_surface_ext(surface_ball,trail_length_x[i], trail_length_y[i],1,1,0,c_white,trail_alpha_step[i]);
//         }
//         /*
//         draw_set_blend_mode(bm_subtract);
//
//             // Vertical grid
//
//                 var vgrid_count_horz = ceil( obj_ctrl_board.world_width_draw / 320 );
//                 var vgrid_count_vert = ceil( obj_ctrl_board.world_height_draw / 240 );
//
//                 for ( var h=0; h < vgrid_count_horz; h+=1; ){
//
//                     for ( var v=0; v < vgrid_count_vert; v+=1; ){
//
//                         draw_sprite(spr_lines_vert, -1,( h * 320 ),( v * 240 ));
//                     }
//                 }
//
//             // Randomly draw horizontal lines
//             for ( var i = 0; i < ( obj_ctrl_board.world_height_draw * 0.2 ); i += 1; ){
//
//                 if ( choose(0, 1)) {
//
//                     var randomY = irandom(obj_ctrl_board.world_height_draw);
//
//                     draw_line(0, randomY, obj_ctrl_board.world_width_draw, randomY);
//                 }
//             }
//
//         draw_set_blend_mode(bm_normal);
//         */
//
//     surface_reset_target();
// }
//
// /* */
// /*  */ }
//
function gml_Object_obj_ball_Step_2(_inst, _other) {
    {
        if ((global.gmlplatform_config != 1)) {
            {};
        };
        if (!(_inst.gmltrail_init > 0.5)) {
            {
                var gmlcurr_alpha = 1;
                for (var gmli = 0;
                    (gmli < _inst.gmltrail_length); gmli += 1) {
                    {
                        if (!(_inst.gmltrail_length_x instanceof Array)) {
                            _inst.gmltrail_length_x = [];
                            _inst.gmltrail_length_x.__yy_owner = 1659952768;
                        } else if (_inst.gmltrail_length_x.__yy_owner !== 1659952768) {
                            _inst.gmltrail_length_x = _inst.gmltrail_length_x.slice(0);
                            _inst.gmltrail_length_x.__yy_owner = 1659952768;
                        }
                        _inst.gmltrail_length_x[gmli] = _inst.gmlx_draw;
                        if (!(_inst.gmltrail_length_y instanceof Array)) {
                            _inst.gmltrail_length_y = [];
                            _inst.gmltrail_length_y.__yy_owner = 2079059905;
                        } else if (_inst.gmltrail_length_y.__yy_owner !== 2079059905) {
                            _inst.gmltrail_length_y = _inst.gmltrail_length_y.slice(0);
                            _inst.gmltrail_length_y.__yy_owner = 2079059905;
                        }
                        _inst.gmltrail_length_y[gmli] = _inst.gmly_draw;
                        if (!(_inst.gmltrail_alpha_step instanceof Array)) {
                            _inst.gmltrail_alpha_step = [];
                            _inst.gmltrail_alpha_step.__yy_owner = 3882215235;
                        } else if (_inst.gmltrail_alpha_step.__yy_owner !== 3882215235) {
                            _inst.gmltrail_alpha_step = _inst.gmltrail_alpha_step.slice(0);
                            _inst.gmltrail_alpha_step.__yy_owner = 3882215235;
                        }
                        _inst.gmltrail_alpha_step[gmli] = gmlcurr_alpha;
                        gmlcurr_alpha -= 0.05;
                    }
                };
                _inst.gmltrail_init = 1 ? 1 : 0;
            };
        } else {
            {
                for (var gmli = (_inst.gmltrail_length - 1);
                    (gmli > 0); gmli--) {
                    {
                        if (!(_inst.gmltrail_length_x instanceof Array)) {
                            _inst.gmltrail_length_x = [];
                            _inst.gmltrail_length_x.__yy_owner = 1659952768;
                        } else if (_inst.gmltrail_length_x.__yy_owner !== 1659952768) {
                            _inst.gmltrail_length_x = _inst.gmltrail_length_x.slice(0);
                            _inst.gmltrail_length_x.__yy_owner = 1659952768;
                        }
                        _inst.gmltrail_length_x[gmli] = _inst.gmltrail_length_x[(gmli - 1)];
                        if (!(_inst.gmltrail_length_y instanceof Array)) {
                            _inst.gmltrail_length_y = [];
                            _inst.gmltrail_length_y.__yy_owner = 2079059905;
                        } else if (_inst.gmltrail_length_y.__yy_owner !== 2079059905) {
                            _inst.gmltrail_length_y = _inst.gmltrail_length_y.slice(0);
                            _inst.gmltrail_length_y.__yy_owner = 2079059905;
                        }
                        _inst.gmltrail_length_y[gmli] = _inst.gmltrail_length_y[(gmli - 1)];
                    }
                };
                if (!(_inst.gmltrail_length_x instanceof Array)) {
                    _inst.gmltrail_length_x = [];
                    _inst.gmltrail_length_x.__yy_owner = 1659952768;
                } else if (_inst.gmltrail_length_x.__yy_owner !== 1659952768) {
                    _inst.gmltrail_length_x = _inst.gmltrail_length_x.slice(0);
                    _inst.gmltrail_length_x.__yy_owner = 1659952768;
                }
                _inst.gmltrail_length_x[0] = _inst.gmlx_draw;
                if (!(_inst.gmltrail_length_y instanceof Array)) {
                    _inst.gmltrail_length_y = [];
                    _inst.gmltrail_length_y.__yy_owner = 2079059905;
                } else if (_inst.gmltrail_length_y.__yy_owner !== 2079059905) {
                    _inst.gmltrail_length_y = _inst.gmltrail_length_y.slice(0);
                    _inst.gmltrail_length_y.__yy_owner = 2079059905;
                }
                _inst.gmltrail_length_y[0] = _inst.gmly_draw;
            };
        };
        if ((global.gmlplatform_config != 1)) {
            {
                if (!(surface_exists(_inst.gmlsurface_trail) > 0.5)) {
                    {
                        _inst.gmlsurface_trail = surface_create(yyInst(2).gmlworld_width_draw, yyInst(2).gmlworld_height_draw);
                    };
                };
                surface_set_target(_inst.gmlsurface_trail);
                draw_clear_alpha(0, 0);
                for (var gmli = 0;
                    (gmli < _inst.gmltrail_length); gmli += 1) {
                    {
                        draw_surface_ext(_inst.gmlsurface_ball, _inst.gmltrail_length_x[gmli], _inst.gmltrail_length_y[gmli], 1, 1, 0, 16777215, _inst.gmltrail_alpha_step[gmli]);
                    }
                };
                surface_reset_target();
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ball_StepNormalEvent_1 1
// /// Control - Ball Surface
//
// if ( !surface_exists(surface_ball)){
//
//     ball_size_radius = ceil( ball_size_radius_base * obj_ctrl_board.draw_w_ratio );
//
//     var ball_size = round( ball_size_radius * 2 );
//
//     surface_size = scr_power_of_two_convert(ball_size); // ( ceil( ball_size / 8 ) * 8 );
//
//     var ball_x = ( surface_size / 2 );
//     var ball_y = ball_x;
//
//     surface_ball = surface_create(surface_size, surface_size);
//
//     surface_set_target(surface_ball);
//
//         draw_clear_alpha(c_white, 0);
//
//         draw_set_alpha(1);
//
//         draw_circle_colour(ball_x,ball_y,ball_size_radius,c_white,c_white,false);
//
//     surface_reset_target();
//
//     // Glow Size
//     glow_size = (( ball_size_radius * 2 ) / glow_size_base );
//
//     // Glare Size
//     glare_size = (( ball_size_radius * 2 ) / glare_size_base );
// }
//
//
//
// /* */
// #line gml_Object_obj_ball_StepNormalEvent_2 1
// /// Draw Control
//
// pos_offset = surface_size / 2; // ball_size_radius_base * obj_ctrl_board.draw_w_ratio; // ( obj_ctrl_board.line_gerth / 2 ); // (( surface_size / 2 ) * obj_ctrl_board.draw_w_ratio );
//
// x_draw = ( x * obj_ctrl_board.draw_w_ratio ) - pos_offset;
//
// y_draw = ( y * obj_ctrl_board.draw_w_ratio ) - pos_offset;
//
// x_draw2 = ( x * obj_ctrl_board.draw_w_ratio );
//
// y_draw2 = ( y * obj_ctrl_board.draw_w_ratio );
//
//
// /* */
// #line gml_Object_obj_ball_StepNormalEvent_3 1
// /// Control - Glow
//
// if ( glow_alpha > 0 ){
//
//     glow_alpha -= glow_alpha_quot;
//
//     if ( glow_alpha < 0 ){ glow_alpha = 0; }
// }
//
// if ( glow_timer > 0 ){
//
//     glow_timer -= 1;
//
//     if ( glow_timer < 0 ){ glow_timer = 0; }
// }
//
//
//
//
// /* */
// #line gml_Object_obj_ball_StepNormalEvent_4 1
// /// Control - Glare
//
// if ( glow_alpha > 0 ){
//
//     var glare_anchor_x = (( obj_ctrl_board.world_width_board / 2 ) * obj_ctrl_board.draw_w_ratio );
//     var glare_anchor_y = ( obj_ctrl_board.world_height_board * obj_ctrl_board.draw_w_ratio );
//
//     var glare_angle = point_direction(x_draw2,y_draw2,glare_anchor_x,glare_anchor_y);
//     var glare_len = point_distance(x_draw2,y_draw2,glare_anchor_x,glare_anchor_y);
//
//     for ( i=0; i<array_length_1d(glare_sprite); i+=1 ){
//
//         glare_x[i] = x_draw2 + lengthdir_x(( glare_len * glare_pos[i] ),glare_angle);
//         glare_y[i] = y_draw2 + lengthdir_y(( glare_len * glare_pos[i] ),glare_angle);
//     }
//
//     glare_draw = true;
// }
// else {
//
//     glare_draw = false;
// }
//
//
// /* */
// #line gml_Object_obj_ball_StepNormalEvent_5 1
// /// Control: Trail
//
// if ( global.platform_config != 1 ){}
//
//     if ( phy_active ){
//
//         trail_alpha -= 0.05;
//
//         if ( trail_alpha < 0 ){ trail_alpha = 0; }
//     }
//
//
// /* */
// #line gml_Object_obj_ball_StepNormalEvent_6 1
// /// [ DISABLED ] Refresh Physics
// /*
// if ( obj_ctrl_board.game_ratio != prev_game_ratio ){
//
//     scr_physics_ball_init();
//
//     base_game_ratio = obj_ctrl_board.game_ratio;
// }
// */
//
// /* */
// /*  */ }
//
function gml_Object_obj_ball_Step_0(_inst, _other) {
    {
        if (!(surface_exists(_inst.gmlsurface_ball) > 0.5)) {
            {
                _inst.gmlball_size_radius = ceil((_inst.gmlball_size_radius_base * yyInst(2).gmldraw_w_ratio));
                var gmlball_size = round((_inst.gmlball_size_radius * 2));
                _inst.gmlsurface_size = gml_Script_scr_power_of_two_convert(_inst, _other, gmlball_size);
                var gmlball_x = (_inst.gmlsurface_size / 2);
                var gmlball_y = gmlball_x;
                _inst.gmlsurface_ball = surface_create(_inst.gmlsurface_size, _inst.gmlsurface_size);
                surface_set_target(_inst.gmlsurface_ball);
                draw_clear_alpha(16777215, 0);
                draw_set_alpha(1);
                draw_circle_colour(gmlball_x, gmlball_y, _inst.gmlball_size_radius, 16777215, 16777215, 0);
                surface_reset_target();
                _inst.gmlglow_size = ((_inst.gmlball_size_radius * 2) / _inst.gmlglow_size_base);
                _inst.gmlglare_size = ((_inst.gmlball_size_radius * 2) / _inst.gmlglare_size_base);
            };
        };
        _inst.gmlpos_offset = (_inst.gmlsurface_size / 2);
        _inst.gmlx_draw = ((_inst.x * yyInst(2).gmldraw_w_ratio) - _inst.gmlpos_offset);
        _inst.gmly_draw = ((_inst.y * yyInst(2).gmldraw_w_ratio) - _inst.gmlpos_offset);
        _inst.gmlx_draw2 = (_inst.x * yyInst(2).gmldraw_w_ratio);
        _inst.gmly_draw2 = (_inst.y * yyInst(2).gmldraw_w_ratio);
        if ((_inst.gmlglow_alpha > 0)) {
            {
                _inst.gmlglow_alpha -= _inst.gmlglow_alpha_quot;
                if ((_inst.gmlglow_alpha < 0)) {
                    {
                        _inst.gmlglow_alpha = 0;
                    };
                };
            };
        };
        if ((_inst.gmlglow_timer > 0)) {
            {
                _inst.gmlglow_timer -= 1;
                if ((_inst.gmlglow_timer < 0)) {
                    {
                        _inst.gmlglow_timer = 0;
                    };
                };
            };
        };
        if ((_inst.gmlglow_alpha > 0)) {
            {
                var gmlglare_anchor_x = ((yyInst(2).gmlworld_width_board / 2) * yyInst(2).gmldraw_w_ratio);
                var gmlglare_anchor_y = (yyInst(2).gmlworld_height_board * yyInst(2).gmldraw_w_ratio);
                var gmlglare_angle = point_direction(_inst.gmlx_draw2, _inst.gmly_draw2, gmlglare_anchor_x, gmlglare_anchor_y);
                var gmlglare_len = point_distance(_inst.gmlx_draw2, _inst.gmly_draw2, gmlglare_anchor_x, gmlglare_anchor_y);
                for (_inst.gmli = 0;
                    (_inst.gmli < array_length_1d(_inst.gmlglare_sprite)); _inst.gmli += 1) {
                    {
                        if (!(_inst.gmlglare_x instanceof Array)) {
                            _inst.gmlglare_x = [];
                            _inst.gmlglare_x.__yy_owner = 2571027066;
                        } else if (_inst.gmlglare_x.__yy_owner !== 2571027066) {
                            _inst.gmlglare_x = _inst.gmlglare_x.slice(0);
                            _inst.gmlglare_x.__yy_owner = 2571027066;
                        }
                        _inst.gmlglare_x[_inst.gmli] = (_inst.gmlx_draw2 + lengthdir_x((gmlglare_len * _inst.gmlglare_pos[_inst.gmli]), gmlglare_angle));
                        if (!(_inst.gmlglare_y instanceof Array)) {
                            _inst.gmlglare_y = [];
                            _inst.gmlglare_y.__yy_owner = 2149970747;
                        } else if (_inst.gmlglare_y.__yy_owner !== 2149970747) {
                            _inst.gmlglare_y = _inst.gmlglare_y.slice(0);
                            _inst.gmlglare_y.__yy_owner = 2149970747;
                        }
                        _inst.gmlglare_y[_inst.gmli] = (_inst.gmly_draw2 + lengthdir_y((gmlglare_len * _inst.gmlglare_pos[_inst.gmli]), gmlglare_angle));
                    }
                };
                _inst.gmlglare_draw = 1 ? 1 : 0;
            };
        } else {
            {
                _inst.gmlglare_draw = 0 ? 1 : 0;
            };
        };
        if ((global.gmlplatform_config != 1)) {
            {};
        };
        if (_inst.phy_active > 0.5) {
            {
                _inst.gmltrail_alpha -= 0.05;
                if ((_inst.gmltrail_alpha < 0)) {
                    {
                        _inst.gmltrail_alpha = 0;
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ball_DrawGUI_1 1
// /// [ DEBUG ] Draws
// /*
// draw_set_font(font_pixel_arial_12);
//
// draw_set_color(c_white);
//
// draw_set_halign(fa_left);
// draw_set_valign(fa_top);
//
// var x_pos = 15;
// var y_pos = 150;
//
// draw_text(x_pos,y_pos, "trail_length: " + string(trail_length));
//
// y_pos += 25;
// */
//
// /* */
// /*  */ }
//
function gml_Object_obj_ball_Draw_64(_inst, _other) {
    {};
}

// #####################################################################################################
// {
// #line gml_Object_obj_ball_DrawEvent_1 1
// /// Draw : Ball
//
//     // Ball Trail
//
//         if ( global.platform_config != 1 ){}
//
//             // Draw surface to screen
//             // draw_surface_ext(surface_trail, 0, 0,1,1,0,tint_color,trail_alpha);
//
//         if ( trail_alpha > 0 ){
//
//             for (var i = 0; i < trail_length; i += 1){
//
//                 draw_surface_ext(surface_ball,trail_length_x[i], trail_length_y[i],1,1,0,tint_color,trail_alpha_step[i]*(trail_alpha*0.5));
//             }
//         }
//
//
//
//     // Ball Glow
//
//         draw_sprite_ext(spr_ball_glow,0,x_draw2,y_draw2,glow_size,glow_size,0,c_white,glow_alpha);
//
//
//     // Ball
//
//         draw_surface(surface_ball,x_draw,y_draw);
//
//     // [ DEBUG ] draw_circle_colour(x_draw2,y_draw2,ball_size_radius,c_gray,c_gray,false);
//
//     // [ DEBUG ] draw_rectangle_colour(x,y,x+3,y+3,c_black,c_black,c_black,c_black,false); // marker: real position
//
//
// /* */
// #line gml_Object_obj_ball_DrawEvent_2 1
// /// Draw : Glare
//
// if ( glare_draw ){
//
//     for ( i=0; i<array_length_1d(glare_sprite); i+=1 ){
//
//         draw_sprite_ext(spr_ball_glare,glare_sprite[i],glare_x[i],glare_y[i],glare_size,glare_size,0,glare_color[i],glow_alpha);
//
//
//     }
// }
//
// /* */
// /*  */ }
//
function gml_Object_obj_ball_Draw_0(_inst, _other) {
    {
        if ((global.gmlplatform_config != 1)) {
            {};
        };
        if ((_inst.gmltrail_alpha > 0)) {
            {
                for (var gmli = 0;
                    (gmli < _inst.gmltrail_length); gmli += 1) {
                    {
                        draw_surface_ext(_inst.gmlsurface_ball, _inst.gmltrail_length_x[gmli], _inst.gmltrail_length_y[gmli], 1, 1, 0, _inst.gmltint_color, (_inst.gmltrail_alpha_step[gmli] * (_inst.gmltrail_alpha * 0.5)));
                    }
                };
            };
        };
        draw_sprite_ext(_inst, 2, 0, _inst.gmlx_draw2, _inst.gmly_draw2, _inst.gmlglow_size, _inst.gmlglow_size, 0, 16777215, _inst.gmlglow_alpha);
        draw_surface(_inst.gmlsurface_ball, _inst.gmlx_draw, _inst.gmly_draw);
        if (_inst.gmlglare_draw > 0.5) {
            {
                for (gmli = 0;
                    (gmli < array_length_1d(_inst.gmlglare_sprite)); gmli += 1) {
                    {
                        draw_sprite_ext(_inst, 3, _inst.gmlglare_sprite[gmli], _inst.gmlglare_x[gmli], _inst.gmlglare_y[gmli], _inst.gmlglare_size, _inst.gmlglare_size, 0, _inst.gmlglare_color[gmli], _inst.gmlglow_alpha);
                    }
                };
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_ball_CollisionEvent_9_1 1
// /// Friction - Stop Ball
//
// if ( phy_active and phy_speed < 0.05 ){ // and !obj_ctrl_board.force_meter_show
//
//     phy_active = false;
// }
//
// /* */
// #line gml_Object_obj_ball_CollisionEvent_9_2 1
// /// Glow Hit
//
// if (( glow_timer == 0 ) and ( phy_speed > 3 )){
//
//     glow_alpha = 1;
//
//     trail_alpha = 1;
//
//     if ( !sound_isplaying(audio_glow_hit) ){
//
//         var sound_chance = irandom_range(0,1);
//
//         if ( sound_chance == 0 ){
//
//             audio_glow_hit = sound_accent_contact_1;
//         }
//         else {
//
//             audio_glow_hit = sound_accent_contact_2;
//         }
//
//         scr_play_sound(audio_glow_hit,1,false);
//
//         // scr_play_sound(sound_hit_3,1,false);
//     }
// }
//
// glow_timer = 15;
//
//
// /* */
// #line gml_Object_obj_ball_CollisionEvent_9_3 1
// /// Shake Screen
//
//     if ( glow_alpha == 1 ){
//
//         timeline_index = timeline_shake_sml;
//         timeline_position = 0;
//         timeline_running = true;
//     }
//
// /* */
// /*  */ }
//
function gml_Object_obj_ball_Collision_9(_inst, _other) {
    {
        if (((_inst.phy_active > 0.5) && ((_inst.phy_speed < 0.05)))) {
            {
                _inst.set_physics_active(0 ? 1 : 0);
            };
        };
        if ((((_inst.gmlglow_timer == 0)) && ((_inst.phy_speed > 3)))) {
            {
                _inst.gmlglow_alpha = 1;
                _inst.gmltrail_alpha = 1;
                if (!(sound_isplaying(_inst.gmlaudio_glow_hit) > 0.5)) {
                    {
                        var gmlsound_chance = irandom_range(0, 1);
                        if ((gmlsound_chance == 0)) {
                            {
                                _inst.gmlaudio_glow_hit = 4;
                            };
                        } else {
                            {
                                _inst.gmlaudio_glow_hit = 5;
                            };
                        };
                        gml_Script_scr_play_sound(_inst, _other, _inst.gmlaudio_glow_hit, 1, 0);
                    };
                };
            };
        };
        _inst.gmlglow_timer = 15;
        if ((_inst.gmlglow_alpha == 1)) {
            {
                _inst.timeline_index = 0;
                _inst.timeline_position = 0;
                _inst.set_timeline_running(1 ? 1 : 0);
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_button_a_CreateEvent_1 1
// /// Variables Init
//
// btn_id = 0;
//
// btn_x = x;
// btn_y = y;
//
// btn_w = 2;
// btn_h = 2;
//
// btn_align_h = fa_center;
// btn_align_v = fa_middle;
//
// btn_color = c_lime;
//
// btn_font = font_beyond_sml;
//
// btn_text = "";
//
// btn_action = -1;
//
// btn_game_over = false;
//
// btn_active = false;
//
// btn_dimensions_chk = false;
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_button_a_Create_0(_inst, _other) {
    {
        _inst.gmlbtn_id = 0;
        _inst.gmlbtn_x = _inst.x;
        _inst.gmlbtn_y = _inst.y;
        _inst.gmlbtn_w = 2;
        _inst.gmlbtn_h = 2;
        _inst.gmlbtn_align_h = 1;
        _inst.gmlbtn_align_v = 1;
        _inst.gmlbtn_color = 65280;
        _inst.gmlbtn_font = 2;
        _inst.gmlbtn_text = "";
        _inst.gmlbtn_action = (-1);
        _inst.gmlbtn_game_over = 0 ? 1 : 0;
        _inst.gmlbtn_active = 0 ? 1 : 0;
        _inst.gmlbtn_dimensions_chk = 0 ? 1 : 0;
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_button_a_StepNormalEvent_1 1
// /// Control : Active / Visibility
//
// if ( btn_game_over ){
//
//     if ( obj_ctrl_board.game_over_btn_visible ){ btn_active = true; }
//     else { btn_active = false; }
// }
// else {
//
//     btn_active = true;
// }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_button_a_Step_0(_inst, _other) {
    {
        if (_inst.gmlbtn_game_over > 0.5) {
            {
                if (yyInst(2) && typeof yyInst(2) !== "undefined" && yyInst(2).gmlgame_over_btn_visible > 0.5) {
                    {
                        _inst.gmlbtn_active = 1 ? 1 : 0;
                    };
                } else {
                    {
                        _inst.gmlbtn_active = 0 ? 1 : 0;
                    };
                };
            };
        } else {
            {
                _inst.gmlbtn_active = 1 ? 1 : 0;
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_button_a_GlobalLeftButtonPressed_1 1
// /// Button: Check Click
//
// if ( btn_active ){
//
//     btn_clicked = false;
//
//     if ( btn_align_h == fa_center ){
//
//         if (( mouse_x > ( btn_x - ( btn_w / 2 )) and mouse_x < ( btn_x + ( btn_w / 2 ))) and ( mouse_y > btn_y and mouse_y < btn_y + btn_h )){
//
//             btn_clicked = true;
//         }
//     }
//     else if ( btn_align_h == fa_left ){
//
//         if ((( mouse_x > btn_x ) and ( mouse_x < ( btn_x + btn_w ))) and ( mouse_y > btn_y and mouse_y < btn_y + btn_h )){
//
//             btn_clicked = true;
//         }
//     }
//
//     if ( btn_clicked ){
//
//         scr_btn_action(btn_action);
//
//         // show_debug_message("action" + string(btn_action));
//     }
// }
//
// /* */
// /*  */ }
//
function gml_Object_obj_button_a_Mouse_53(_inst, _other) {
    {
        if (_inst.gmlbtn_active > 0.5) {
            {
                _inst.gmlbtn_clicked = 0 ? 1 : 0;
                if ((_inst.gmlbtn_align_h == 1)) {
                    {
                        if ((((((g_pBuiltIn.mouse_x > (_inst.gmlbtn_x - (_inst.gmlbtn_w / 2)))) && ((g_pBuiltIn.mouse_x < (_inst.gmlbtn_x + (_inst.gmlbtn_w / 2)))))) && ((((g_pBuiltIn.mouse_y > _inst.gmlbtn_y)) && ((g_pBuiltIn.mouse_y < (_inst.gmlbtn_y + _inst.gmlbtn_h))))))) {
                            {
                                _inst.gmlbtn_clicked = 1 ? 1 : 0;
                            };
                        };
                    };
                } else {
                    if ((_inst.gmlbtn_align_h == 0)) {
                        {
                            if ((((((g_pBuiltIn.mouse_x > _inst.gmlbtn_x)) && ((g_pBuiltIn.mouse_x < (_inst.gmlbtn_x + _inst.gmlbtn_w))))) && ((((g_pBuiltIn.mouse_y > _inst.gmlbtn_y)) && ((g_pBuiltIn.mouse_y < (_inst.gmlbtn_y + _inst.gmlbtn_h))))))) {
                                {
                                    _inst.gmlbtn_clicked = 1 ? 1 : 0;
                                };
                            };
                        };
                    };
                };
                if (_inst.gmlbtn_clicked > 0.5) {
                    {
                        gml_Script_scr_btn_action(_inst, _other, _inst.gmlbtn_action);
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_button_a_DrawEvent_1 1
// /// Draw Button
//
//     if ( btn_active ){
//
//         draw_set_font(btn_font);
//
//         draw_set_halign(btn_align_h);
//         draw_set_valign(btn_align_v);
//
//         if ( !btn_dimensions_chk ){
//
//             btn_w = string_width(btn_text);
//             btn_h = string_height(btn_text);
//
//             btn_dimensions_chk = true;
//         }
//
//         // debug : click area //
//         /* if ( btn_align_h == fa_center ){ draw_rectangle_colour(btn_x-(btn_w/2),btn_y,btn_x+(btn_w/2),btn_y+btn_h,c_gray,c_gray,c_gray,c_gray,false); }
//         else if ( btn_align_h == fa_left ){ draw_rectangle_colour(btn_x,btn_y,btn_x+btn_w,btn_y+btn_h,c_gray,c_gray,c_gray,c_gray,false); } */
//
//         draw_set_color(c_black);
//         draw_text_transformed(btn_x+2,(btn_y+(btn_h/2))+2,btn_text,1,1,0);
//
//         draw_set_color(btn_color);
//         draw_text_transformed(btn_x,btn_y+(btn_h/2),btn_text,1,1,0);
//     }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_button_a_Draw_0(_inst, _other) {
    {
        if (_inst.gmlbtn_active > 0.5) {
            {
                draw_set_font(_inst.gmlbtn_font);
                draw_set_halign(_inst.gmlbtn_align_h);
                draw_set_valign(_inst.gmlbtn_align_v);
                if (!(_inst.gmlbtn_dimensions_chk > 0.5)) {
                    {
                        _inst.gmlbtn_w = string_width(_inst.gmlbtn_text);
                        _inst.gmlbtn_h = string_height(_inst.gmlbtn_text);
                        _inst.gmlbtn_dimensions_chk = 1 ? 1 : 0;
                    };
                };
                draw_set_color(0);
                draw_text_transformed((_inst.gmlbtn_x + 2), ((_inst.gmlbtn_y + (_inst.gmlbtn_h / 2)) + 2), _inst.gmlbtn_text, 1, 1, 0);
                draw_set_color(_inst.gmlbtn_color);
                draw_text_transformed(_inst.gmlbtn_x, (_inst.gmlbtn_y + (_inst.gmlbtn_h / 2)), _inst.gmlbtn_text, 1, 1, 0);
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_menu_main_CreateEvent_1 1
// /// Variables Init
//
// // World
//
//     scr_world_ratio();
//
//     background_step = 1;
//
//     background_done = false;
//
//     global.first_bg_color = true;
//     global.first_bg_color_hue = 255 * ( irandom_range(1,360) / 360 );
//     scr_color_background(0);
//
//     alarm[0] = 2; // create backgroud
//
//
// // Buttons
//
//     btn_draw_ratio = draw_w_ratio;
//
//     if ( btn_draw_ratio > 2 ){ btn_draw_ratio = 2; }
//
//     btn_color_1 = c_aqua;
//     btn_color_2 = c_teal;
//
//     btn_color_1_active = c_yellow;
//     btn_color_2_active = c_olive;
//
//     btn_play_angle[0] = 0;
//     btn_play_angle[1] = 0;
//     btn_play_angle[2] = 0;
//     btn_play_angle[3] = 0;
//
//
// // Music
//
//     menu_music = music_background;
//
//
// // Background
//
//     surface_background = -1
//
//
// // Misc
//
//     cursor_on = false;
//
//     screen_type = 0;
//
//     global.win_popup_active = false;
//
//     alarm[1] = 30;
//
//     mouse_hand = false;
//     window_set_cursor(cr_default);
//
//     screen_fade_alpha = 1;
//
//     circle_fade_size = 0;
//     circle_fade_size_add = ( global.win_w / 30 );
//     circle_fade_grow = false;
//     circle_fade_draw = false;
//     circle_fade_x = 0;
//     circle_fade_y = 0;
//
//     // screen_fade_out = false;
//
// // Famobi
//
//     famobi_active = global.famobi_active;
//
//     if ( famobi_active ){
//
//         famobi_html5_w = 175;
//         famobi_html5_h = 74;
//
//         famobi_html5_x = ( world_width_draw - famobi_html5_w - 10 );
//         famobi_html5_y = ( world_height_draw - famobi_html5_h - 10 );
//
//         famobi_image_loaded = false;
//
//         // scr_famobi_MoreGamesButtonImage_load();
//     }
//
//
// /* */
// #line gml_Object_obj_menu_main_CreateEvent_2 1
// /// [ INI ] Load Progress Variables
//
//     if ( global.famobi_active ){
//     // famobi
//
//         scr_famobi_progress_load(1);
//     }
//     else {
//
//         scr_ini_progress_load(1);
//     }
//
//     with ( obj_menu_load ){ load_percent += irandom_range(5,10); }
//
//
// /* */
// #line gml_Object_obj_menu_main_CreateEvent_3 1
// /// Language : Load
//
//     scr_dialog_load();
//
//     with ( obj_menu_load ){ load_percent += irandom_range(5,10); }
//
//     // scr_language_load();
//
//
// /* */
// #line gml_Object_obj_menu_main_CreateEvent_4 1
// /// Screen: Set
//
//     // for ( var i=0; i<=9; i+=1 ){ scr_screen_set(i); }
//
//     if ( !global.first_run_menu ){
//
//         scr_screen_set(3);
//     }
//     else {
//
//         scr_screen_set(1);
//     }
//
//
// /* */
// #line gml_Object_obj_menu_main_CreateEvent_5 1
// /// HTML5 : Instance Check : Start
//
//     if ( os_browser != browser_not_a_browser ){
//
//         html_obj_check = 1;
//
//         alarm[5] = room_speed;
//     }
//
//
// /* */
// #line gml_Object_obj_menu_main_CreateEvent_6 1
// action_snap( 16, 16 );
// /*  */ }
//
function gml_Object_obj_menu_main_Create_0(_inst, _other) {
    {
        gml_Script_scr_world_ratio(_inst, _other);
        _inst.gmlbackground_step = 1;
        _inst.gmlbackground_done = 0 ? 1 : 0;
        global.gmlfirst_bg_color = 1 ? 1 : 0;
        global.gmlfirst_bg_color_hue = (255 * (irandom_range(1, 360) / 360));
        gml_Script_scr_color_background(_inst, _other, 0);
        if (!(_inst.alarm instanceof Array)) {
            _inst.alarm = [];
            _inst.alarm.__yy_owner = 1584050178;
        } else if (_inst.alarm.__yy_owner !== 1584050178) {
            _inst.alarm = _inst.alarm.slice(0);
            _inst.alarm.__yy_owner = 1584050178;
        }
        _inst.alarm[0] = 2;
        _inst.gmlbtn_draw_ratio = _inst.gmldraw_w_ratio;
        if ((_inst.gmlbtn_draw_ratio > 2)) {
            {
                _inst.gmlbtn_draw_ratio = 2;
            };
        };
        _inst.gmlbtn_color_1 = 16776960;
        _inst.gmlbtn_color_2 = 8421376;
        _inst.gmlbtn_color_1_active = 65535;
        _inst.gmlbtn_color_2_active = 32896;
        if (!(_inst.gmlbtn_play_angle instanceof Array)) {
            _inst.gmlbtn_play_angle = [];
            _inst.gmlbtn_play_angle.__yy_owner = 2677193649;
        } else if (_inst.gmlbtn_play_angle.__yy_owner !== 2677193649) {
            _inst.gmlbtn_play_angle = _inst.gmlbtn_play_angle.slice(0);
            _inst.gmlbtn_play_angle.__yy_owner = 2677193649;
        }
        _inst.gmlbtn_play_angle[0] = 0;
        _inst.gmlbtn_play_angle[1] = 0;
        _inst.gmlbtn_play_angle[2] = 0;
        _inst.gmlbtn_play_angle[3] = 0;
        _inst.gmlmenu_music = 10;
        _inst.gmlsurface_background = (-1);
        _inst.gmlcursor_on = 0 ? 1 : 0;
        _inst.gmlscreen_type = 0;
        global.gmlwin_popup_active = 0 ? 1 : 0;
        _inst.alarm[1] = 30;
        _inst.gmlmouse_hand = 0 ? 1 : 0;
        window_set_cursor(0);
        _inst.gmlscreen_fade_alpha = 1;
        _inst.gmlcircle_fade_size = 0;
        _inst.gmlcircle_fade_size_add = (global.gmlwin_w / 30);
        _inst.gmlcircle_fade_grow = 0 ? 1 : 0;
        _inst.gmlcircle_fade_draw = 0 ? 1 : 0;
        _inst.gmlcircle_fade_x = 0;
        _inst.gmlcircle_fade_y = 0;
        _inst.gmlfamobi_active = global.gmlfamobi_active;
        if (_inst.gmlfamobi_active > 0.5) {
            {
                _inst.gmlfamobi_html5_w = 175;
                _inst.gmlfamobi_html5_h = 74;
                _inst.gmlfamobi_html5_x = (_inst.gmlworld_width_draw - _inst.gmlfamobi_html5_w - 10);
                _inst.gmlfamobi_html5_y = (_inst.gmlworld_height_draw - _inst.gmlfamobi_html5_h - 10);
                _inst.gmlfamobi_image_loaded = 0 ? 1 : 0;
            };
        };
        if (global.gmlfamobi_active > 0.5) {
            {
                gml_Script_scr_famobi_progress_load(_inst, _other, 1);
            };
        } else {
            {
                gml_Script_scr_ini_progress_load(_inst, _other, 1);
            };
        }; {
            var __yy__v100 = GetWithArray(13);
            for (var __yy__v101 in __yy__v100) {
                if (!__yy__v100.hasOwnProperty(__yy__v101)) continue;
                var __yy__v102 = __yy__v100[__yy__v101];
                if (__yy__v102.marked) continue;
                if (!__yy__v102.active) continue; {
                    __yy__v102.gmlload_percent += irandom_range(5, 10);
                }
            }
        };
        gml_Script_scr_dialog_load(_inst, _other); {
            var __yy__v103 = GetWithArray(13);
            for (var __yy__v104 in __yy__v103) {
                if (!__yy__v103.hasOwnProperty(__yy__v104)) continue;
                var __yy__v105 = __yy__v103[__yy__v104];
                if (__yy__v105.marked) continue;
                if (!__yy__v105.active) continue; {
                    __yy__v105.gmlload_percent += irandom_range(5, 10);
                }
            }
        };
        if (!(global.gmlfirst_run_menu > 0.5)) {
            {
                gml_Script_scr_screen_set(_inst, _other, 3);
            };
        } else {
            {
                gml_Script_scr_screen_set(_inst, _other, 1);
            };
        };
        if ((g_pBuiltIn.get_os_browser() != (-1))) {
            {
                _inst.gmlhtml_obj_check = 1;
                _inst.alarm[5] = g_pBuiltIn.room_speed;
            };
        };
        action_snap(_inst, 16, 16);
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_menu_main_ObjAlarm5_1 1
// /// HTML5 Instance Check
//
//     if ( instance_exists(obj_ctrl_html5) == 0 ){
//
//         instance_create(0,0,obj_ctrl_html5);
//
//         html_obj_check = 30;
//     }
//
//     html_obj_check += 1;
//
//     // Check for 30 seconds
//     if ( html_obj_check < 30 ){
//
//         alarm[5] = room_speed;
//     }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_menu_main_Alarm_5(_inst, _other) {
    {
        if ((instance_exists(3) == 0)) {
            {
                instance_create(0, 0, 3);
                _inst.gmlhtml_obj_check = 30;
            };
        };
        _inst.gmlhtml_obj_check += 1;
        if ((_inst.gmlhtml_obj_check < 30)) {
            {
                if (!(_inst.alarm instanceof Array)) {
                    _inst.alarm = [];
                    _inst.alarm.__yy_owner = 1584050178;
                } else if (_inst.alarm.__yy_owner !== 1584050178) {
                    _inst.alarm = _inst.alarm.slice(0);
                    _inst.alarm.__yy_owner = 1584050178;
                }
                _inst.alarm[5] = g_pBuiltIn.room_speed;
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_menu_main_ObjAlarm4_1 1
// /// Room Goto Next
//
//     room_goto(room_resolution);
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_menu_main_Alarm_4(_inst, _other) {
    {
        room_goto(2);
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_menu_main_ObjAlarm3_1 1
// /// Control - Circle Fade
//
//     if ( circle_fade_size > ( circle_fade_x + floor( global.win_w * 0.25 ))){
//
//         alarm[4] = 5;
//     }
//     else {
//
//         circle_fade_size = floor( circle_fade_size + circle_fade_size_add );
//
//         alarm[3] = 1;
//     }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_menu_main_Alarm_3(_inst, _other) {
    {
        if ((_inst.gmlcircle_fade_size > (_inst.gmlcircle_fade_x + floor((global.gmlwin_w * 0.25))))) {
            {
                if (!(_inst.alarm instanceof Array)) {
                    _inst.alarm = [];
                    _inst.alarm.__yy_owner = 1584050178;
                } else if (_inst.alarm.__yy_owner !== 1584050178) {
                    _inst.alarm = _inst.alarm.slice(0);
                    _inst.alarm.__yy_owner = 1584050178;
                }
                _inst.alarm[4] = 5;
            };
        } else {
            {
                _inst.gmlcircle_fade_size = floor((_inst.gmlcircle_fade_size + _inst.gmlcircle_fade_size_add));
                if (!(_inst.alarm instanceof Array)) {
                    _inst.alarm = [];
                    _inst.alarm.__yy_owner = 1584050178;
                } else if (_inst.alarm.__yy_owner !== 1584050178) {
                    _inst.alarm = _inst.alarm.slice(0);
                    _inst.alarm.__yy_owner = 1584050178;
                }
                _inst.alarm[3] = 1;
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_menu_main_ObjAlarm1_1 1
// /// Cursor Blink
//
// if ( cursor_on ){
//
//     cursor_on = false;
//
//     alarm[1] = 15;
// }
// else {
//
//     cursor_on = true;
//
//     alarm[1] = 30;
// }
//
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_menu_main_Alarm_1(_inst, _other) {
    {
        if (_inst.gmlcursor_on > 0.5) {
            {
                _inst.gmlcursor_on = 0 ? 1 : 0;
                if (!(_inst.alarm instanceof Array)) {
                    _inst.alarm = [];
                    _inst.alarm.__yy_owner = 1584050178;
                } else if (_inst.alarm.__yy_owner !== 1584050178) {
                    _inst.alarm = _inst.alarm.slice(0);
                    _inst.alarm.__yy_owner = 1584050178;
                }
                _inst.alarm[1] = 15;
            };
        } else {
            {
                _inst.gmlcursor_on = 1 ? 1 : 0;
                if (!(_inst.alarm instanceof Array)) {
                    _inst.alarm = [];
                    _inst.alarm.__yy_owner = 1584050178;
                } else if (_inst.alarm.__yy_owner !== 1584050178) {
                    _inst.alarm = _inst.alarm.slice(0);
                    _inst.alarm.__yy_owner = 1584050178;
                }
                _inst.alarm[1] = 30;
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_menu_main_ObjAlarm0_1 1
// /// Create Background : Steps
//
//     if ( background_step == 1 ){
//
//         surface_background = surface_create(( world_width_board * draw_w_ratio ),( world_height_board * draw_w_ratio ));
//
//         surface_set_target(surface_background);
//
//             draw_clear_alpha(c_white, 0);
//
//             draw_set_alpha(1);
//
//         surface_reset_target();
//     }
//
//     surface_set_target(surface_background);
//
//         scr_draw_menu_background(background_step);
//
//     surface_reset_target();
//
//     background_step += 1;
//
//     with ( obj_menu_load ){ load_percent += irandom_range(20,25); }
//
//     if ( background_step == 5 ){
//
//         background_done = true;
//
//         global.first_run_menu = true;
//
//         scr_screen_set(1);
//     }
//     else {
//
//         alarm[0] = 2;
//     }
//
//
//
//
// /* */
// #line gml_Object_obj_menu_main_ObjAlarm0_2 1
// /// Destroy: Menu Loading
//
// if ( background_done ){
//
//     with ( obj_menu_load ){ instance_destroy(); }
// }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_menu_main_Alarm_0(_inst, _other) {
    {
        if ((_inst.gmlbackground_step == 1)) {
            {
                _inst.gmlsurface_background = surface_create((_inst.gmlworld_width_board * _inst.gmldraw_w_ratio), (_inst.gmlworld_height_board * _inst.gmldraw_w_ratio));
                surface_set_target(_inst.gmlsurface_background);
                draw_clear_alpha(16777215, 0);
                draw_set_alpha(1);
                surface_reset_target();
            };
        };
        surface_set_target(_inst.gmlsurface_background);
        gml_Script_scr_draw_menu_background(_inst, _other, _inst.gmlbackground_step);
        surface_reset_target();
        _inst.gmlbackground_step += 1; {
            var __yy__v106 = GetWithArray(13);
            for (var __yy__v107 in __yy__v106) {
                if (!__yy__v106.hasOwnProperty(__yy__v107)) continue;
                var __yy__v108 = __yy__v106[__yy__v107];
                if (__yy__v108.marked) continue;
                if (!__yy__v108.active) continue; {
                    __yy__v108.gmlload_percent += irandom_range(20, 25);
                }
            }
        };
        if ((_inst.gmlbackground_step == 5)) {
            {
                _inst.gmlbackground_done = 1 ? 1 : 0;
                global.gmlfirst_run_menu = 1 ? 1 : 0;
                gml_Script_scr_screen_set(_inst, _other, 1);
            };
        } else {
            {
                if (!(_inst.alarm instanceof Array)) {
                    _inst.alarm = [];
                    _inst.alarm.__yy_owner = 1584050178;
                } else if (_inst.alarm.__yy_owner !== 1584050178) {
                    _inst.alarm = _inst.alarm.slice(0);
                    _inst.alarm.__yy_owner = 1584050178;
                }
                _inst.alarm[0] = 2;
            };
        };
        if (_inst.gmlbackground_done > 0.5) {
            {
                {
                    var __yy__v109 = GetWithArray(13);
                    for (var __yy__v110 in __yy__v109) {
                        if (!__yy__v109.hasOwnProperty(__yy__v110)) continue;
                        var __yy__v111 = __yy__v109[__yy__v110];
                        if (__yy__v111.marked) continue;
                        if (!__yy__v111.active) continue; {
                            instance_destroy(__yy__v111);
                        }
                    }
                };
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_menu_main_StepNormalEvent_1 1
// /// Menu Music
//
// if ( !audio_is_playing(menu_music) ){
//
//     menu_music = scr_play_music(music_background,5,true,0.25);
//
//     audio_sound_gain(menu_music,0,0);
//
//     scr_audio_fade(menu_music,0.25,3000);
// }
//
//
// /* */
// #line gml_Object_obj_menu_main_StepNormalEvent_2 1
// /// FPS Check
//
//     scr_fps_check();
//
//
// /* */
// #line gml_Object_obj_menu_main_StepNormalEvent_3 1
// /// Control - Background Surface
//
// /*
// if ((( global.game_lowfps ) or ( global.platform_config == 1 )) and !surface_exists(surface_background)){
//
//     surface_background = surface_create(( world_width_board * draw_w_ratio ),( world_height_board * draw_w_ratio ));
//
//     surface_set_target(surface_background);
//
//         draw_clear_alpha(c_white, 0);
//
//         draw_set_alpha(1);
//
//         scr_draw_menu_background(background_step);
//
//     surface_reset_target();
// }
// */
//
// if ( background_done and !surface_exists(surface_background)){
//
//     surface_background = surface_create(( world_width_board * draw_w_ratio ),( world_height_board * draw_w_ratio ));
//
//     surface_set_target(surface_background);
//
//         draw_clear_alpha(c_white, 0);
//
//         draw_set_alpha(1);
//
//         scr_draw_menu_background(0);
//
//     surface_reset_target();
// }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_menu_main_Step_0(_inst, _other) {
    {
        if (!(audio_is_playing(_inst.gmlmenu_music) > 0.5)) {
            {
                _inst.gmlmenu_music = gml_Script_scr_play_music(_inst, _other, 10, 5, 1, 0.25);
                audio_sound_gain(_inst.gmlmenu_music, 0, 0);
                gml_Script_scr_audio_fade(_inst, _other, _inst.gmlmenu_music, 0.25, 3000);
            };
        };
        gml_Script_scr_fps_check(_inst, _other);
        if (((_inst.gmlbackground_done > 0.5) && (!(surface_exists(_inst.gmlsurface_background) > 0.5)))) {
            {
                _inst.gmlsurface_background = surface_create((_inst.gmlworld_width_board * _inst.gmldraw_w_ratio), (_inst.gmlworld_height_board * _inst.gmldraw_w_ratio));
                surface_set_target(_inst.gmlsurface_background);
                draw_clear_alpha(16777215, 0);
                draw_set_alpha(1);
                gml_Script_scr_draw_menu_background(_inst, _other, 0);
                surface_reset_target();
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_menu_main_GlobalLeftButtonPressed_1 1
// /// Button Click
//
// if ( !global.win_popup_active ){
//
//     var btn_clicked = -1;
//
//     for ( i=0; i<array_length_1d(btn_title); i+=1 ){
//
//         if ( btn_align[i] == fa_center ){
//
//             if (( mouse_x > ( btn_x[i] - ( btn_w[i] / 2 )) and mouse_x < ( btn_x[i] - ( btn_w[i] / 2 )) + btn_w[i] ) and ( mouse_y > btn_y[i] and mouse_y < btn_y[i] + btn_h[i] )){
//
//                 btn_clicked = i;
//             }
//         }
//         else if ( btn_align[i] == fa_left ){
//
//             if ((( mouse_x > btn_x[i] ) and ( mouse_x < ( btn_x[i] + btn_w[i] ))) and ( mouse_y > btn_y[i] and mouse_y < btn_y[i] + btn_h[i] )){
//
//                 btn_clicked = i;
//             }
//         }
//     }
//
//     if ( btn_clicked != -1 ){
//
//         scr_btn_action(btn_action[btn_clicked]);
//
//         cursor_on = true;
//     }
// }
//
// /* */
// #line gml_Object_obj_menu_main_GlobalLeftButtonPressed_2 1
// /// Course Button Click
//
// // btn_course_w
// // btn_course_h
// // btn_course_x[1]
// // btn_course_y[1]
//
// if ( screen_type == 1 ){
//
//     if ( famobi_active ){
//
//         if ((( mouse_x > famobi_html5_x ) and ( mouse_x < ( famobi_html5_x + famobi_html5_w ))) and (( mouse_y > famobi_html5_y ) and ( mouse_y < ( famobi_html5_y + famobi_html5_h )))){
//
//             famobi_moreGamesLink();
//         }
//     }
// }
// else if ( screen_type == 3 ){
//
//     // var btn_action;
//
//     btn_course_action[1] = 15; // 25h
//     btn_course_action[2] = 16; // 50h
//     btn_course_action[3] = 17; // 100h
//     btn_course_action[4] = 18; // 150h
//
//     for ( var i=1; i<=4; i+=1 ){
//
//         if ((( mouse_x > ( btn_course_x[i] - ( btn_course_w / 2 ))) and ( mouse_x < ( btn_course_x[i] + ( btn_course_w / 2 )))) and (( mouse_y > ( btn_course_y[i] - ( btn_course_h / 2 ))) and ( mouse_y < ( btn_course_y[i] + ( btn_course_h / 2 ))))){
//
//             scr_btn_action(btn_course_action[i]);
//         }
//     }
// }
//
//
// /* */
// #line gml_Object_obj_menu_main_GlobalLeftButtonPressed_3 1
// /// Go Back
//
// if ( screen_type != 1 ){
//
//     if ( screen_type == 8 ){
//     // Save Options
//
//         if ( global.famobi_active ){
//         // famobi
//
//             scr_famobi_options_save();
//         }
//         else {
//
//             scr_ini_options_save();
//         }
//     }
//
//     if (( mouse_x > btn_back_x1 and mouse_x < btn_back_x2 ) and ( mouse_y > btn_back_y1 and mouse_y < btn_back_y2 )){
//
//         scr_screen_set(1);
//
//         scr_sound_button();
//     }
// }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_menu_main_Mouse_53(_inst, _other) {
    {
        if (!(global.gmlwin_popup_active > 0.5)) {
            {
                var gmlbtn_clicked = (-1);
                for (_inst.gmli = 0;
                    (_inst.gmli < array_length_1d(_inst.gmlbtn_title)); _inst.gmli += 1) {
                    {
                        if ((_inst.gmlbtn_align[_inst.gmli] == 1)) {
                            {
                                if ((((((g_pBuiltIn.mouse_x > (_inst.gmlbtn_x[_inst.gmli] - (_inst.gmlbtn_w[_inst.gmli] / 2)))) && ((g_pBuiltIn.mouse_x < ((_inst.gmlbtn_x[_inst.gmli] - (_inst.gmlbtn_w[_inst.gmli] / 2)) + _inst.gmlbtn_w[_inst.gmli]))))) && ((((g_pBuiltIn.mouse_y > _inst.gmlbtn_y[_inst.gmli])) && ((g_pBuiltIn.mouse_y < (_inst.gmlbtn_y[_inst.gmli] + _inst.gmlbtn_h[_inst.gmli]))))))) {
                                    {
                                        gmlbtn_clicked = _inst.gmli;
                                    };
                                };
                            };
                        } else {
                            if ((_inst.gmlbtn_align[_inst.gmli] == 0)) {
                                {
                                    if ((((((g_pBuiltIn.mouse_x > _inst.gmlbtn_x[_inst.gmli])) && ((g_pBuiltIn.mouse_x < (_inst.gmlbtn_x[_inst.gmli] + _inst.gmlbtn_w[_inst.gmli]))))) && ((((g_pBuiltIn.mouse_y > _inst.gmlbtn_y[_inst.gmli])) && ((g_pBuiltIn.mouse_y < (_inst.gmlbtn_y[_inst.gmli] + _inst.gmlbtn_h[_inst.gmli]))))))) {
                                        {
                                            gmlbtn_clicked = _inst.gmli;
                                        };
                                    };
                                };
                            };
                        };
                    }
                };
                if ((gmlbtn_clicked != (-1))) {
                    {
                        gml_Script_scr_btn_action(_inst, _other, _inst.gmlbtn_action[gmlbtn_clicked]);
                        _inst.gmlcursor_on = 1 ? 1 : 0;
                    };
                };
            };
        };
        if ((_inst.gmlscreen_type == 1)) {
            {
                if (_inst.gmlfamobi_active > 0.5) {
                    {
                        if ((((((g_pBuiltIn.mouse_x > _inst.gmlfamobi_html5_x)) && ((g_pBuiltIn.mouse_x < (_inst.gmlfamobi_html5_x + _inst.gmlfamobi_html5_w))))) && ((((g_pBuiltIn.mouse_y > _inst.gmlfamobi_html5_y)) && ((g_pBuiltIn.mouse_y < (_inst.gmlfamobi_html5_y + _inst.gmlfamobi_html5_h))))))) {
                            {
                                famobi_moreGamesLink();
                            };
                        };
                    };
                };
            };
        } else {
            if ((_inst.gmlscreen_type == 3)) {
                {
                    if (!(_inst.gmlbtn_course_action instanceof Array)) {
                        _inst.gmlbtn_course_action = [];
                        _inst.gmlbtn_course_action.__yy_owner = 705194735;
                    } else if (_inst.gmlbtn_course_action.__yy_owner !== 705194735) {
                        _inst.gmlbtn_course_action = _inst.gmlbtn_course_action.slice(0);
                        _inst.gmlbtn_course_action.__yy_owner = 705194735;
                    }
                    _inst.gmlbtn_course_action[1] = 15;
                    _inst.gmlbtn_course_action[2] = 16;
                    _inst.gmlbtn_course_action[3] = 17;
                    _inst.gmlbtn_course_action[4] = 18;
                    for (var gmli = 1;
                        (gmli <= 4); gmli += 1) {
                        {
                            if ((((((g_pBuiltIn.mouse_x > (_inst.gmlbtn_course_x[gmli] - (_inst.gmlbtn_course_w / 2)))) && ((g_pBuiltIn.mouse_x < (_inst.gmlbtn_course_x[gmli] + (_inst.gmlbtn_course_w / 2)))))) && ((((g_pBuiltIn.mouse_y > (_inst.gmlbtn_course_y[gmli] - (_inst.gmlbtn_course_h / 2)))) && ((g_pBuiltIn.mouse_y < (_inst.gmlbtn_course_y[gmli] + (_inst.gmlbtn_course_h / 2)))))))) {
                                {
                                    gml_Script_scr_btn_action(_inst, _other, _inst.gmlbtn_course_action[gmli]);
                                };
                            };
                        }
                    };
                };
            };
        };
        if ((_inst.gmlscreen_type != 1)) {
            {
                if ((_inst.gmlscreen_type == 8)) {
                    {
                        if (global.gmlfamobi_active > 0.5) {
                            {
                                gml_Script_scr_famobi_options_save(_inst, _other);
                            };
                        } else {
                            {
                                gml_Script_scr_ini_options_save(_inst, _other);
                            };
                        };
                    };
                };
                if ((((((g_pBuiltIn.mouse_x > _inst.gmlbtn_back_x1)) && ((g_pBuiltIn.mouse_x < _inst.gmlbtn_back_x2)))) && ((((g_pBuiltIn.mouse_y > _inst.gmlbtn_back_y1)) && ((g_pBuiltIn.mouse_y < _inst.gmlbtn_back_y2)))))) {
                    {
                        window.famobi_analytics.trackScreen("SCREEN_HOME");
                        gml_Script_scr_screen_set(_inst, _other, 1);
                        gml_Script_scr_sound_button(_inst, _other);
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_menu_main_WebAsyncEvent_1 1
// /// [ DISABLED ] Process HTTP
// /*
// if ( ds_map_find_value(async_load, "id") == get ){
//
//     if ( ds_map_find_value(async_load, "status") == 0 ){
//
//         r_str = ds_map_find_value(async_load, "result");
//     }
//     else {
//
//         r_str = "null";
//     }
// }
// */
//
// /* */
// /*  */ }
//
function gml_Object_obj_menu_main_Other_62(_inst, _other) {
    {};
}

// #####################################################################################################
// {
// #line gml_Object_obj_menu_main_DrawGUI_1 1
// /// Draw Application Surface
//
// // draw_surface_ext(application_surface,0,0,1,1,0,c_white,1);
//
//
// /* */
// #line gml_Object_obj_menu_main_DrawGUI_2 1
// /// [ DEBUG ] Draws
// /*
// draw_set_font(font_pixel_arial_12);
//
// draw_set_color(c_white);
//
// draw_set_halign(fa_left);
// draw_set_valign(fa_top);
//
// var x_pos = 15;
// var y_pos = 150;
//
// draw_text(x_pos,y_pos, "hello");
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "global.platform_config: " + string(global.platform_config));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "world_grid_ratio: " + string(world_grid_ratio));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "circle_fade_size: " + string(circle_fade_size));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "fade ==: " + string(( circle_fade_x + floor( global.win_w * 0.25 ))));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "tempo_var_1: " + string(tempo_var_1));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "tempo_var_2: " + string(tempo_var_2));
//
// y_pos += 25;
//
//
// draw_text(x_pos,y_pos, "fps: " + string(fps));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "fps real: " + string(floor(fps_real)));
//
// y_pos += 25;
//
//
// draw_text(x_pos,y_pos, "dialog_string: " + string(dialog_string));
//
// y_pos += 25;
//
//
//
// draw_text(x_pos,y_pos, "ds_list_size(arrayList): " + string(ds_list_size(arrayList)));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "board: " + string(global.board_w) + " x " + string(global.board_h));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "view: " + string(global.view_w) + " x " + string(global.view_h));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "win: " + string(global.win_w) + " x " + string(global.win_h));
//
// y_pos += 25;
// */
//
// /* */
// /*  */ }
//
function gml_Object_obj_menu_main_Draw_64(_inst, _other) {
    {};
}

// #####################################################################################################
// {
// #line gml_Object_obj_menu_main_DrawEvent_1 1
// /// Draw Background
//
//     /*
//     if (( global.game_lowfps ) or ( global.platform_config == 1 )){
//
//         draw_surface(surface_background,0,0);
//     }
//     else {
//
//         scr_draw_menu_background();
//     }
//     */
//
//     if ( background_done ){
//
//         draw_surface(surface_background,0,0);
//     }
//
//     var rect_x1 = 0; // ( floor( world_width_draw / 2 ) - 481 );
//     var rect_y1 = 0; // ( floor( world_height_draw / 2 ) - 271 );
//     var rect_x2 = world_width_draw; // rect_x1 + 961;
//     var rect_y2 = world_height_draw; // rect_y1 + 541;
//
//     draw_set_alpha(0.7);
//
//     if ( screen_type == 1 ){ draw_set_alpha(0.4); }
//
//     draw_roundrect_colour_ext(rect_x1,rect_y1,rect_x2,rect_y2,6,6,c_black,c_black,false);
//
//     draw_set_alpha(1);
//
//     if ( screen_type == 1 ){
//
//         draw_sprite_ext(spr_logo_neon_golf_01,0,floor( world_width_draw / 2 ),floor(( world_height_draw / 2 ) - ( 53 * draw_w_ratio )),world_grid_ratio_capped,world_grid_ratio_capped,0,c_white,1);
//     }
//
//
// /* */
// #line gml_Object_obj_menu_main_DrawEvent_2 1
// /// Draw Progress
//
// if ( screen_type == 1 ){
//
//     var local_btn_x = btn_x[0];
//     var local_btn_x = btn_y[0];
//
//     btn_play_angle[0] += 0.5; if ( btn_play_angle[0] > 360 ){ btn_play_angle[0] -= 360; }
//     btn_play_angle[1] -= 0.5; if ( btn_play_angle[1] < -360 ){ btn_play_angle[0] += 360; }
//     btn_play_angle[2] += 0.35; if ( btn_play_angle[2] > 360 ){ btn_play_angle[0] -= 360; }
//
//     var local_btn_play_x = floor(btn_x[0]);
//     var local_btn_play_y = floor( btn_y[0] + 90 );
//
//     draw_sprite_ext(spr_icon_play,0,local_btn_play_x,local_btn_play_y,1,1,floor(btn_play_angle[0]),c_white,1);
//     draw_sprite_ext(spr_icon_play,1,local_btn_play_x,local_btn_play_y,1,1,floor(btn_play_angle[1]),c_white,1);
//     draw_sprite_ext(spr_icon_play,2,local_btn_play_x,local_btn_play_y,1,1,floor(btn_play_angle[2]),c_white,1);
//     draw_sprite_ext(spr_icon_play,3,local_btn_play_x,local_btn_play_y,1,1,0,c_white,1);
//
//     draw_sprite(spt_btn_options,0,btn_x[1],btn_y[1]);
//
//     draw_sprite(spr_btn_volume,global.volume_master,btn_x[2],btn_y[2]);
//
//     draw_sprite(spr_btn_info,0,btn_x[3],btn_y[3]);
//
// }
// else if ( screen_type == 3 ){
//
//     draw_set_font(font_beyond_tiny);
//     draw_set_valign(fa_middle);
//     draw_set_halign(fa_center);
//
//     draw_sprite(spr_mode_background,0,desc_bg_x,desc_bg_y);
//
//     /*
//     draw_text_colour(btn_course_x[1],btn_course_y[1],string("25h"),btn_course_color[1],btn_course_color[1],btn_course_color[1],btn_course_color[1],1);
//
//     draw_sprite_ext(spr_course_square,btn_course_active[1],btn_course_x[1],btn_course_y[1],1,1,0,btn_course_color[1],1);
//
//     draw_text_colour(btn_course_x[2],btn_course_y[2],string("50h"),btn_course_color[2],btn_course_color[2],btn_course_color[2],btn_course_color[2],1);
//
//     draw_sprite_ext(spr_course_square,btn_course_active[2],btn_course_x[2],btn_course_y[2],1,1,0,btn_course_color[2],1);
//
//     draw_text_colour(btn_course_x[3],btn_course_y[3],string("100h"),btn_course_color[3],btn_course_color[3],btn_course_color[3],btn_course_color[3],1);
//
//     draw_sprite_ext(spr_course_square,btn_course_active[3],btn_course_x[3],btn_course_y[3],1,1,0,btn_course_color[3],1);
//
//     draw_text_colour(btn_course_x[4],btn_course_y[4],string("150h"),btn_course_color[4],btn_course_color[4],btn_course_color[4],btn_course_color[4],1);
//
//     draw_sprite_ext(spr_course_square,btn_course_active[4],btn_course_x[4],btn_course_y[4],1,1,0,btn_course_color[4],1);
//     */
//
//     draw_sprite(spr_icon_play_sml,0,( btn_x[5] + 58 ),btn_y[5]);
//
//     // Game Mode : Button Backgrounds
//     draw_sprite(spr_btn_mode,btn_active[0],btn_x[0],btn_y[0]);
//     draw_sprite(spr_btn_mode,btn_active[1],btn_x[1],btn_y[1]);
//     draw_sprite(spr_btn_mode,btn_active[2],btn_x[2],btn_y[2]);
//     draw_sprite(spr_btn_mode,btn_active[3],btn_x[3],btn_y[3]);
//     draw_sprite(spr_btn_mode,btn_active[4],btn_x[4],btn_y[4]);
//
//     var screen_item_x = desc_bg_x;
//     var screen_item_y = desc_bg_y - 50;
//
//     if (( game_levels_curr != 1 ) or ( game_mode_1_best_score != 0 )){
//
//         draw_set_color(c_aqua);
//         draw_text(screen_item_x,screen_item_y,lang_text_progress[0]); // "PROGRESS"
//
//         screen_item_y += 50;
//
//         draw_rectangle(screen_item_x-206,screen_item_y-27,screen_item_x+206,screen_item_y+27,false);
//
//         draw_set_color(c_black);
//         draw_rectangle(screen_item_x-206+3,screen_item_y-27+3,screen_item_x+206-3,screen_item_y+27-3,false);
//
//         var level_progress = ( game_levels_curr / game_levels_max_level );
//
//         draw_set_color(c_teal);
//         draw_rectangle(screen_item_x-206+6,screen_item_y-27+6,floor(((screen_item_x-206+6)+(400*level_progress))),screen_item_y+27-6,false);
//
//         var progress_string = string(game_levels_curr) + lang_text_progress[1] + string(game_levels_max_level) + lang_text_progress[7]; // " of "
//
//         draw_set_color(c_black);
//         draw_text(screen_item_x,screen_item_y+2,progress_string);
//         draw_text(screen_item_x+2,screen_item_y+2,progress_string);
//
//         draw_set_color(c_white);
//         draw_text(screen_item_x,screen_item_y,progress_string);
//
//         screen_item_y += 55;
//
//         draw_set_halign(fa_left);
//         draw_text(screen_item_x-209,screen_item_y,lang_text_progress[2] + string(game_levels_hits_total)); // "HITS:"
//
//         if ( game_mode_1_best_score != 0 ){
//
//             draw_set_color(c_red);
//             draw_set_halign(fa_right);
//             draw_text(screen_item_x+209,screen_item_y,lang_text_progress[3] + string(game_mode_1_best_score)); //
//         }
//
//         // game_levels_hits_total
//         // game_mode_1_best_score
//
//         /*
//         var screen_item_x = (( world_width_draw / 2 ) + 191 );
//         var screen_item_y = (( world_height_draw / 2 ) - 20 ) + 26;
//
//         draw_set_font(font_beyond_tiny);
//         draw_set_valign(fa_middle);
//         draw_set_halign(fa_center);
//
//         draw_set_color(c_aqua);
//         draw_text(screen_item_x,screen_item_y,"PROGRESS");
//
//         var line_x1 = screen_item_x - 202;
//         var line_x2 = screen_item_x + 134;
//         var line_y1 = (( world_height_draw / 2 ) + 25 ) + 26;
//
//         draw_line_width(line_x1,line_y1,line_x2,line_y1,5);
//
//         draw_set_halign(fa_right);
//         draw_text(line_x1-5,line_y1,"1");
//
//         draw_set_halign(fa_left);
//         draw_text(line_x2+5,line_y1,string(game_levels_max_level));
//
//         var line_w = line_x2 - line_x1;
//         var line_section_w = ( game_levels_curr / game_levels_max_level );
//
//         line_x1 = ( line_x1 + floor(( line_section_w ) * line_w ));
//         line_y2 = ( line_y1 + 22 );
//
//         draw_set_color(c_white);
//         draw_line_width(line_x1,line_y1,line_x1,line_y2,5);
//
//         draw_circle(line_x1,line_y1,8,false);
//
//         draw_set_halign(fa_center);
//         draw_text(line_x1,line_y2+25,"HOLE:"+ string(game_levels_curr));
//
//         var text_string = "SCORE:" + string(game_levels_hits_total);
//
//         draw_set_color(c_aqua);
//         draw_text(line_x1,line_y2+60,text_string);
//
//         if ( game_mode_1_best_score != 0 ){
//
//             text_string = "BEST SCORE:" + string(game_mode_1_best_score);
//
//             draw_set_halign(fa_right);
//             draw_set_color(c_red);
//             draw_text(screen_item_x+222,line_y2+100,text_string);
//         }
//         */
//     }
//     else {
//
//         draw_set_valign(fa_top);
//         draw_set_color(c_aqua);
//
//         draw_text(screen_item_x,screen_item_y,lang_text_progress[4] + string(game_levels_max_level) + lang_text_progress[5]);
//     }
// }
// else if (( screen_type == 4 ) or ( screen_type == 5 ) or ( screen_type == 6 ) or ( screen_type == 7 )){
//
//     // var screen_item_x = (( world_width_draw / 2 ) + 140 );
//     // var screen_item_y = (( world_height_draw / 2 ) + 60 );
//
//     var screen_item_x = desc_bg_x;
//     var screen_item_y = desc_bg_y + 40;
//
//     draw_set_font(font_beyond_tiny);
//     draw_set_valign(fa_middle);
//     draw_set_halign(fa_center);
//     draw_set_color(c_red);
//
//     draw_sprite(spr_mode_background,0,desc_bg_x,desc_bg_y);
//
//     draw_sprite(spr_icon_play_sml,0,( btn_x[5] + 58 ),btn_y[5]);
//
//     // Game Mode : Button Backgrounds
//     draw_sprite(spr_btn_mode,btn_active[0],btn_x[0],btn_y[0]);
//     draw_sprite(spr_btn_mode,btn_active[1],btn_x[1],btn_y[1]);
//     draw_sprite(spr_btn_mode,btn_active[2],btn_x[2],btn_y[2]);
//     draw_sprite(spr_btn_mode,btn_active[3],btn_x[3],btn_y[3]);
//     draw_sprite(spr_btn_mode,btn_active[4],btn_x[4],btn_y[4]);
//
//     if (( screen_type == 4 ) and ( game_mode_2_holes_record != 0 )){
//
//         draw_text(screen_item_x,screen_item_y,lang_text_progress[6] + string(game_mode_2_holes_record)); // "BEST SCORE: "
//     }
//     else if (( screen_type == 5 ) and ( game_mode_3_holes_record != 0 )){
//
//         draw_text(screen_item_x,screen_item_y,lang_text_progress[6] + string(game_mode_3_holes_record)); // "BEST SCORE: "
//     }
//     else if (( screen_type == 6 ) and ( game_mode_4_holes_record != 0 )){
//
//         draw_text(screen_item_x,screen_item_y,lang_text_progress[6] + string(game_mode_4_holes_record));
//     }
// }
// else if ( screen_type == 8 ){
//
//     var screen_item_x = (( world_width_draw / 2 ) - 395 + 50 );
//     var screen_item_y = (( world_height_draw / 2 ) - 133 );
//
//     draw_set_font(font_beyond_sml);
//     draw_set_halign(fa_left);
//     draw_set_valign(fa_middle);
//
//     draw_set_color(c_aqua);
//
//     draw_text(screen_item_x,screen_item_y,lang_text_options[0]); // "MUSIC"
//
//     screen_item_y += 70;
//
//     draw_text(screen_item_x,screen_item_y,lang_text_options[1]); // "SOUND"
//
//     screen_item_y += 70;
//
//     draw_text(screen_item_x,screen_item_y,lang_text_options[6]); // TUTORIAL
//
//     draw_sprite(spr_checkbox,game_tutorial_1,screen_item_x+230,screen_item_y);
//
//     if ( multi_lang_support ){
//
//         screen_item_y += 100;
//
//         draw_text(screen_item_x,screen_item_y,lang_text_options[2]); // "LANGUAGE"
//     }
//
//     draw_set_color(c_white);
//     draw_set_halign(fa_center);
//
//     screen_item_x = (( world_width_draw / 2 ) - 115 + 50 );
//     screen_item_y = (( world_height_draw / 2 ) - 130 - 5 );
//
//     draw_text(screen_item_x,screen_item_y,string(round(global.game_volume_music*10)));
//
//
//     screen_item_x = (( world_width_draw / 2 ) - 115 + 50 );
//     screen_item_y = (( world_height_draw / 2 ) - 58 - 5 );
//
//     draw_text(screen_item_x,screen_item_y,string(round(global.game_volume_sound*10)));
//
//
//     // Language Marker
//
//     if ( multi_lang_support ){
//
//         if ( global.game_lang == 0 ){ screen_item_x = (( world_width_draw / 2 ) - 272 + 50 ); }
//         else if ( global.game_lang == 1 ){ screen_item_x = (( world_width_draw / 2 ) - 70 + 96 ); }
//
//         screen_item_y = (( world_height_draw / 2 ) + 190 );
//
//         draw_line_width_colour(screen_item_x-80,screen_item_y,screen_item_x+80,screen_item_y,5,c_aqua,c_aqua);
//     }
//
// }
// else if ( screen_type == 9 ){
// // CREDITS
//
//     var screen_item_x = (( world_width_draw / 2 ) - 365 );
//     var screen_item_y = (( world_height_draw / 2 ) - 153 );
//
//     draw_sprite(spr_logo_dogfire,0,screen_item_x,screen_item_y);
//
//     screen_item_y += 135;
//
//     draw_set_halign(fa_left);
//     draw_set_valign(fa_middle);
//
//     draw_set_font(font_beyond_tiny);
//     draw_set_color(c_white);
//     draw_text(screen_item_x,screen_item_y,lang_text_credits[1]);
//
//     screen_item_y += 35;
//
//     draw_set_font(font_beyond_sml);
//     draw_set_color(c_aqua);
//     draw_text(screen_item_x,screen_item_y,lang_text_credits[2]);
//
//     screen_item_y += 80;
//
//     draw_set_font(font_beyond_tiny);
//     draw_set_color(c_white);
//     draw_text(screen_item_x,screen_item_y,lang_text_credits[3]);
//
//     screen_item_y += 35;
//
//     draw_set_font(font_beyond_sml);
//     draw_set_color(c_aqua);
//     draw_text(screen_item_x,screen_item_y,lang_text_credits[4]);
// }
//
//
// /* */
// #line gml_Object_obj_menu_main_DrawEvent_3 1
// /// Draw: Buttons
//
// for ( i=0; i<array_length_1d(btn_title); i+=1 ){
//
//     btn_x_pos = btn_x[i];
//     btn_y_pos = btn_y[i];
//
//     btn_width = btn_w[i]; // 82 * btn_draw_ratio;
//     btn_height = btn_h[i]; // 30 * btn_draw_ratio;
//
//     btn_border_1 = 3;
//     btn_border_2 = 2;
//
//     // layer 1
//
//         if ( btn_align[i] == fa_center ){ lay_01_x1 = btn_x_pos - ( btn_width / 2 ); }
//         else if ( btn_align[i] == fa_left ){ lay_01_x1 = btn_x_pos; }
//
//         lay_01_y1 = btn_y_pos;
//         lay_01_x2 = lay_01_x1 + btn_width;
//         lay_01_y2 = lay_01_y1 + btn_height;
//
//
//     // layer 2
//     /* lay_02_x1 = lay_01_x1 + btn_border_1;
//     lay_02_y1 = lay_01_y1 + ( btn_border_1 + 0 );
//     lay_02_x2 = lay_01_x2 - btn_border_1;
//     lay_02_y2 = lay_01_y2 - ( btn_border_1 + 0 );
//
//     // layer 3
//     lay_03_x1 = lay_02_x1 + btn_border_2;
//     lay_03_y1 = lay_02_y1 + ( btn_border_2 + 0 );
//     lay_03_x2 = lay_02_x2 - btn_border_2;
//     lay_03_y2 = lay_02_y2 - ( btn_border_2 + 0 );
//
//     curr_color_1 = btn_color_1;
//     curr_color_2 = btn_color_2;
//
//     if ( btn_active[i] ){
//
//         curr_color_1 = btn_color_1_active;
//         curr_color_2 = btn_color_2_active;
//     }*/
//
//     // debug // draw_rectangle_colour(lay_01_x1,lay_01_y1,lay_01_x2,lay_01_y2,c_gray,c_gray,c_gray,c_gray,false);
//
//     // draw_rectangle_colour(lay_01_x1,lay_01_y1,lay_01_x2,lay_01_y2,curr_color_1,curr_color_1,curr_color_1,curr_color_1,false);
//
//     // draw_rectangle_colour(lay_02_x1,lay_02_y1,lay_02_x2,lay_02_y2,c_black,c_black,c_black,c_black,false);
//
//     // draw_rectangle_colour(lay_03_x1,lay_03_y1,lay_03_x2,lay_03_y2,curr_color_2,curr_color_2,curr_color_2,curr_color_2,false);
//
//     draw_set_font(font_beyond_sml);
//
//     /* if ( screen_type == 1 ){
//
//         if ( i = 0 ){ draw_set_font(font_beyond_tiny); } // "CREDITS"
//         else if ( i = 1 ){ draw_set_font(font_beyond_sml); } // "OPTIONS"
//         else if ( i = 2 ){ draw_set_font(font_beyond_med); } // "PLAY GAME"
//     } */
//
//     if ( screen_type >= 3 and screen_type <= 7 ){
//
//         if ( i <= 4 ){ draw_set_font(font_beyond_tiny); } // Game Mode Buttons
//     }
//
//     draw_set_valign(fa_middle);
//     draw_set_halign(btn_align[i]);
//     draw_set_color(c_white);
//
//     // if ( btn_active[i] ){ draw_set_color(c_white); }
//
//     draw_text(btn_x_pos,btn_y_pos+(btn_height/2),btn_title[i]);
//
//     // if (( btn_active[i] ) and ( cursor_on )){ draw_rectangle_colour(lay_01_x1-25,lay_01_y1+10,lay_01_x1-10,lay_01_y2-10,c_aqua,c_aqua,c_aqua,c_aqua,false); }
//
//     // draw_set_color(c_white);
// }
//
// // debug // draw_rectangle_colour(btn_back_x1,btn_back_y1,btn_back_x2,btn_back_y2,c_gray,c_gray,c_gray,c_gray,false);
//
//
// /* */
// #line gml_Object_obj_menu_main_DrawEvent_4 1
// /// Draw Screen Text
//
// if ( screen_title != "" ){
//
//     var title_x = ( world_width_draw / 2 );
//     var title_y = ( world_height_draw / 2 ) - 200;
//
//     draw_set_font(font_beyond_sml);
//     draw_set_valign(fa_bottom);
//     draw_set_halign(fa_center);
//     draw_set_color(c_white);
//
//     draw_text(title_x,title_y,screen_title);
//
//     /* line_x1 = title_x - 268;
//     line_x2 = title_x + 268;
//     line_y = title_y + 20;
//
//     draw_line_width_colour(line_x1,line_y,line_x2,line_y,3,c_aqua,c_aqua);*/
// }
//
// if ( screen_desc != "" ){
//
//     // var title_x = (( world_width_draw / 2 ) - 50 );
//     // var title_y = (( world_height_draw / 2 ) - 130 );
//
//     draw_set_font(font_beyond_tiny);
//     draw_set_valign(fa_top);
//     draw_set_halign(screen_desc_align);
//     draw_set_color(c_white);
//
//     draw_text_ext(desc_x,desc_y,screen_desc,-1,500);
//
//     draw_set_color(c_white);
// }
//
// /* */
// #line gml_Object_obj_menu_main_DrawEvent_5 1
// /// Draw : Back Button
//
// if ( screen_type != 1 ){
//
//     /*
//     var back_btn_x = ( floor( world_width_draw / 2 ) - 481 ) + 40;
//     var back_btn_y = ( floor( world_height_draw / 2 ) - 271 ) + 40;
//
//     draw_set_color(c_lime);
//     draw_circle(back_btn_x,back_btn_y,30,false);
//
//     draw_set_color(c_black);
//     draw_circle(back_btn_x,back_btn_y,27,false);
//
//     draw_set_color(c_lime);
//     draw_triangle(back_btn_x+10,back_btn_y-12,back_btn_x+10,back_btn_y+12,back_btn_x-14,back_btn_y,false);
//     */
//
//     draw_sprite(spr_btn_back,0,btn_back_x1,btn_back_y1 )
// }
//
//
// /* */
// #line gml_Object_obj_menu_main_DrawEvent_6 1
// /// Draw Game Version
//
// if ( screen_type == 1 ){
//
//     draw_set_font(font_pixel_arial_12);
//
//     draw_set_halign(fa_center);
//     draw_set_valign(fa_bottom);
//
//     draw_set_color(c_gray);
//
//     draw_text((world_width_draw/2),world_height_draw-15,( "v." + scr_game_version()));
// }
//
//
// /* */
// #line gml_Object_obj_menu_main_DrawEvent_7 1
// /// Draw Mouse Hand
//
//     if ( mouse_hand ){
//
//         draw_sprite(spr_pointer_hand,0,mouse_x,mouse_y);
//     }
//
//
// /* */
// #line gml_Object_obj_menu_main_DrawEvent_8 1
// /// [ famobi ] Draw Html5 Games
//
// if ( famobi_active and screen_type == 1 ){
//
//     draw_sprite_ext(spr_html5_games,0,famobi_html5_x,famobi_html5_y,0.28,0.28,0,c_white,1);
//
//     /* if ( famobi_image_loaded ){
//
//         draw_sprite_ext(famobi_MoreGamesButtonImage,0,famobi_html5_x,famobi_html5_y,0.28,0.28,0,c_white,1);
//     }*/
//
//     // debug // draw_rectangle(famobi_html5_x,famobi_html5_y,( famobi_html5_x + famobi_html5_w ),( famobi_html5_y + famobi_html5_h ),false);
// }
//
//
// /* */
// #line gml_Object_obj_menu_main_DrawEvent_9 1
// /// Screen Fade
//
// if ( screen_fade_alpha > 0 ){
//
//     draw_set_alpha(screen_fade_alpha);
//
//     draw_rectangle_colour(-10,-10,world_width_draw,world_height_draw,c_black,c_black,c_black,c_black,false);
//
//     if ( background_done ){ screen_fade_alpha -= 0.02; }
//
//     if ( screen_fade_alpha < 0 ){ screen_fade_alpha = 0; }
//
//     draw_set_alpha(1);
// }
//
//
// /* */
// #line gml_Object_obj_menu_main_DrawEvent_10 1
// /// Draw Circle Fade
//
// if ( circle_fade_draw ){
//
//     draw_circle_colour(circle_fade_x,circle_fade_y,circle_fade_size,bg_color_vis,bg_color_vis,false);
//
//     if ( floor(ball_explosion_step) < ball_explosion_step_max ){
//
//         var expl_scale = draw_w_ratio * 0.75;
//
//         draw_sprite_ext(spr_ball_explosion,floor(ball_explosion_step),circle_fade_x,circle_fade_y,expl_scale,expl_scale,0,c_white,1);
//
//         ball_explosion_step += 0.5;
//     }
// }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_menu_main_Draw_0(_inst, _other) {
    {
        if (_inst.gmlbackground_done > 0.5) {
            {
                draw_surface(_inst.gmlsurface_background, 0, 0);
            };
        };
        var gmlrect_x1 = 0;
        var gmlrect_y1 = 0;
        var gmlrect_x2 = _inst.gmlworld_width_draw;
        var gmlrect_y2 = _inst.gmlworld_height_draw;
        draw_set_alpha(0.7);
        if ((_inst.gmlscreen_type == 1)) {
            {
                draw_set_alpha(0.4);
            };
        };
        draw_roundrect_colour_ext(gmlrect_x1, gmlrect_y1, gmlrect_x2, gmlrect_y2, 6, 6, 0, 0, 0);
        draw_set_alpha(1);
        if ((_inst.gmlscreen_type == 1)) {
            {
                draw_sprite_ext(_inst, 5, 0, floor((_inst.gmlworld_width_draw / 2)), floor(((_inst.gmlworld_height_draw / 2) - (53 * _inst.gmldraw_w_ratio))), _inst.gmlworld_grid_ratio_capped, _inst.gmlworld_grid_ratio_capped, 0, 16777215, 1);
            };
        };
        if ((_inst.gmlscreen_type == 1)) {
            {
                var gmllocal_btn_x = _inst.gmlbtn_x[0];
                var gmllocal_btn_x = _inst.gmlbtn_y[0];
                if (!(_inst.gmlbtn_play_angle instanceof Array)) {
                    _inst.gmlbtn_play_angle = [];
                    _inst.gmlbtn_play_angle.__yy_owner = 2677193649;
                } else if (_inst.gmlbtn_play_angle.__yy_owner !== 2677193649) {
                    _inst.gmlbtn_play_angle = _inst.gmlbtn_play_angle.slice(0);
                    _inst.gmlbtn_play_angle.__yy_owner = 2677193649;
                }
                _inst.gmlbtn_play_angle[0] += 0.5;
                if ((_inst.gmlbtn_play_angle[0] > 360)) {
                    {
                        _inst.gmlbtn_play_angle[0] -= 360;
                    };
                };
                _inst.gmlbtn_play_angle[1] -= 0.5;
                if ((_inst.gmlbtn_play_angle[1] < (-360))) {
                    {
                        _inst.gmlbtn_play_angle[0] += 360;
                    };
                };
                _inst.gmlbtn_play_angle[2] += 0.35;
                if ((_inst.gmlbtn_play_angle[2] > 360)) {
                    {
                        _inst.gmlbtn_play_angle[0] -= 360;
                    };
                };
                var gmllocal_btn_play_x = floor(_inst.gmlbtn_x[0]);
                var gmllocal_btn_play_y = floor((_inst.gmlbtn_y[0] + 90));
                draw_sprite_ext(_inst, 11, 0, gmllocal_btn_play_x, gmllocal_btn_play_y, 1, 1, floor(_inst.gmlbtn_play_angle[0]), 16777215, 1);
                draw_sprite_ext(_inst, 11, 1, gmllocal_btn_play_x, gmllocal_btn_play_y, 1, 1, floor(_inst.gmlbtn_play_angle[1]), 16777215, 1);
                draw_sprite_ext(_inst, 11, 2, gmllocal_btn_play_x, gmllocal_btn_play_y, 1, 1, floor(_inst.gmlbtn_play_angle[2]), 16777215, 1);
                draw_sprite_ext(_inst, 11, 3, gmllocal_btn_play_x, gmllocal_btn_play_y, 1, 1, 0, 16777215, 1);
                draw_sprite(_inst, 20, 0, _inst.gmlbtn_x[1], _inst.gmlbtn_y[1]);
                draw_sprite(_inst, 18, global.gmlvolume_master, _inst.gmlbtn_x[2], _inst.gmlbtn_y[2]);
                draw_sprite(_inst, 22, 0, _inst.gmlbtn_x[3], _inst.gmlbtn_y[3]);
            };
        } else {
            if ((_inst.gmlscreen_type == 3)) {
                {
                    draw_set_font(3);
                    draw_set_valign(1);
                    draw_set_halign(1);
                    draw_sprite(_inst, 24, 0, _inst.gmldesc_bg_x, _inst.gmldesc_bg_y);
                    draw_sprite(_inst, 12, 0, (_inst.gmlbtn_x[5] + 58), _inst.gmlbtn_y[5]);
                    draw_sprite(_inst, 23, _inst.gmlbtn_active[0], _inst.gmlbtn_x[0], _inst.gmlbtn_y[0]);
                    draw_sprite(_inst, 23, _inst.gmlbtn_active[1], _inst.gmlbtn_x[1], _inst.gmlbtn_y[1]);
                    draw_sprite(_inst, 23, _inst.gmlbtn_active[2], _inst.gmlbtn_x[2], _inst.gmlbtn_y[2]);
                    draw_sprite(_inst, 23, _inst.gmlbtn_active[3], _inst.gmlbtn_x[3], _inst.gmlbtn_y[3]);
                    draw_sprite(_inst, 23, _inst.gmlbtn_active[4], _inst.gmlbtn_x[4], _inst.gmlbtn_y[4]);
                    var gmlscreen_item_x = _inst.gmldesc_bg_x;
                    var gmlscreen_item_y = (_inst.gmldesc_bg_y - 50);
                    if ((((_inst.gmlgame_levels_curr != 1)) || ((_inst.gmlgame_mode_1_best_score != 0)))) {
                        {
                            draw_set_color(16776960);
                            draw_text(gmlscreen_item_x, gmlscreen_item_y, _inst.gmllang_text_progress[0]);
                            gmlscreen_item_y += 50;
                            draw_rectangle((gmlscreen_item_x - 206), (gmlscreen_item_y - 27), (gmlscreen_item_x + 206), (gmlscreen_item_y + 27), 0);
                            draw_set_color(0);
                            draw_rectangle((gmlscreen_item_x - 206 + 3), (gmlscreen_item_y - 27 + 3), (gmlscreen_item_x + 206 - 3), (gmlscreen_item_y + 27 - 3), 0);
                            var gmllevel_progress = (_inst.gmlgame_levels_curr / _inst.gmlgame_levels_max_level);
                            draw_set_color(8421376);
                            draw_rectangle((gmlscreen_item_x - 206 + 6), (gmlscreen_item_y - 27 + 6), floor(((gmlscreen_item_x - 206 + 6) + (400 * gmllevel_progress))), (gmlscreen_item_y + 27 - 6), 0);
                            var gmlprogress_string = (string(_inst.gmlgame_levels_curr) + _inst.gmllang_text_progress[1] + string(_inst.gmlgame_levels_max_level) + _inst.gmllang_text_progress[7]);
                            draw_set_color(0);
                            draw_text(gmlscreen_item_x, (gmlscreen_item_y + 2), gmlprogress_string);
                            draw_text((gmlscreen_item_x + 2), (gmlscreen_item_y + 2), gmlprogress_string);
                            draw_set_color(16777215);
                            draw_text(gmlscreen_item_x, gmlscreen_item_y, gmlprogress_string);
                            gmlscreen_item_y += 55;
                            draw_set_halign(0);
                            draw_text((gmlscreen_item_x - 209), gmlscreen_item_y, (_inst.gmllang_text_progress[2] + string(_inst.gmlgame_levels_hits_total)));
                            if ((_inst.gmlgame_mode_1_best_score != 0)) {
                                {
                                    draw_set_color(255);
                                    draw_set_halign(2);
                                    draw_text((gmlscreen_item_x + 209), gmlscreen_item_y, (_inst.gmllang_text_progress[3] + string(_inst.gmlgame_mode_1_best_score)));
                                };
                            };
                        };
                    } else {
                        {
                            draw_set_valign(0);
                            draw_set_color(16776960);
                            draw_text(gmlscreen_item_x, gmlscreen_item_y, (_inst.gmllang_text_progress[4] + string(_inst.gmlgame_levels_max_level) + _inst.gmllang_text_progress[5]));
                        };
                    };
                };
            } else {
                if ((((_inst.gmlscreen_type == 4)) || ((_inst.gmlscreen_type == 5)) || ((_inst.gmlscreen_type == 6)) || ((_inst.gmlscreen_type == 7)))) {
                    {
                        var gmlscreen_item_x = _inst.gmldesc_bg_x;
                        var gmlscreen_item_y = (_inst.gmldesc_bg_y + 40);
                        draw_set_font(3);
                        draw_set_valign(1);
                        draw_set_halign(1);
                        draw_set_color(255);
                        draw_sprite(_inst, 24, 0, _inst.gmldesc_bg_x, _inst.gmldesc_bg_y);
                        draw_sprite(_inst, 12, 0, (_inst.gmlbtn_x[5] + 58), _inst.gmlbtn_y[5]);
                        draw_sprite(_inst, 23, _inst.gmlbtn_active[0], _inst.gmlbtn_x[0], _inst.gmlbtn_y[0]);
                        draw_sprite(_inst, 23, _inst.gmlbtn_active[1], _inst.gmlbtn_x[1], _inst.gmlbtn_y[1]);
                        draw_sprite(_inst, 23, _inst.gmlbtn_active[2], _inst.gmlbtn_x[2], _inst.gmlbtn_y[2]);
                        draw_sprite(_inst, 23, _inst.gmlbtn_active[3], _inst.gmlbtn_x[3], _inst.gmlbtn_y[3]);
                        draw_sprite(_inst, 23, _inst.gmlbtn_active[4], _inst.gmlbtn_x[4], _inst.gmlbtn_y[4]);
                        if ((((_inst.gmlscreen_type == 4)) && ((_inst.gmlgame_mode_2_holes_record != 0)))) {
                            {
                                draw_text(gmlscreen_item_x, gmlscreen_item_y, (_inst.gmllang_text_progress[6] + string(_inst.gmlgame_mode_2_holes_record)));
                            };
                        } else {
                            if ((((_inst.gmlscreen_type == 5)) && ((_inst.gmlgame_mode_3_holes_record != 0)))) {
                                {
                                    draw_text(gmlscreen_item_x, gmlscreen_item_y, (_inst.gmllang_text_progress[6] + string(_inst.gmlgame_mode_3_holes_record)));
                                };
                            } else {
                                if ((((_inst.gmlscreen_type == 6)) && ((_inst.gmlgame_mode_4_holes_record != 0)))) {
                                    {
                                        draw_text(gmlscreen_item_x, gmlscreen_item_y, (_inst.gmllang_text_progress[6] + string(_inst.gmlgame_mode_4_holes_record)));
                                    };
                                };
                            };
                        };
                    };
                } else {
                    if ((_inst.gmlscreen_type == 8)) {
                        {
                            var gmlscreen_item_x = ((_inst.gmlworld_width_draw / 2) - 395 + 50);
                            var gmlscreen_item_y = ((_inst.gmlworld_height_draw / 2) - 133);
                            draw_set_font(2);
                            draw_set_halign(0);
                            draw_set_valign(1);
                            draw_set_color(16776960);
                            draw_text(gmlscreen_item_x, gmlscreen_item_y, _inst.gmllang_text_options[0]);
                            gmlscreen_item_y += 70;
                            draw_text(gmlscreen_item_x, gmlscreen_item_y, _inst.gmllang_text_options[1]);
                            gmlscreen_item_y += 70;
                            draw_text(gmlscreen_item_x, gmlscreen_item_y, _inst.gmllang_text_options[6]);
                            draw_sprite(_inst, 15, _inst.gmlgame_tutorial_1, (gmlscreen_item_x + 230), gmlscreen_item_y);
                            if (_inst.gmlmulti_lang_support > 0.5) {
                                {
                                    gmlscreen_item_y += 100;
                                    draw_text(gmlscreen_item_x, gmlscreen_item_y, _inst.gmllang_text_options[2]);
                                };
                            };
                            draw_set_color(16777215);
                            draw_set_halign(1);
                            gmlscreen_item_x = ((_inst.gmlworld_width_draw / 2) - 115 + 50);
                            gmlscreen_item_y = ((_inst.gmlworld_height_draw / 2) - 130 - 5);
                            draw_text(gmlscreen_item_x, gmlscreen_item_y, string(round((global.gmlgame_volume_music * 10))));
                            gmlscreen_item_x = ((_inst.gmlworld_width_draw / 2) - 115 + 50);
                            gmlscreen_item_y = ((_inst.gmlworld_height_draw / 2) - 58 - 5);
                            draw_text(gmlscreen_item_x, gmlscreen_item_y, string(round((global.gmlgame_volume_sound * 10))));
                            if (_inst.gmlmulti_lang_support > 0.5) {
                                {
                                    if ((global.gmlgame_lang == 0)) {
                                        {
                                            gmlscreen_item_x = ((_inst.gmlworld_width_draw / 2) - 272 + 50);
                                        };
                                    } else {
                                        if ((global.gmlgame_lang == 1)) {
                                            {
                                                gmlscreen_item_x = ((_inst.gmlworld_width_draw / 2) - 70 + 96);
                                            };
                                        };
                                    };
                                    gmlscreen_item_y = ((_inst.gmlworld_height_draw / 2) + 190);
                                    draw_line_width_colour((gmlscreen_item_x - 80), gmlscreen_item_y, (gmlscreen_item_x + 80), gmlscreen_item_y, 5, 16776960, 16776960);
                                };
                            };
                        };
                    } else {
                        if ((_inst.gmlscreen_type == 9)) {
                            {
                                var gmlscreen_item_x = ((_inst.gmlworld_width_draw / 2) - 365);
                                var gmlscreen_item_y = ((_inst.gmlworld_height_draw / 2) - 153);
                                draw_sprite(_inst, 25, 0, gmlscreen_item_x, gmlscreen_item_y);
                                gmlscreen_item_y += 135;
                                draw_set_halign(0);
                                draw_set_valign(1);
                                draw_set_font(3);
                                draw_set_color(16777215);
                                draw_text(gmlscreen_item_x, gmlscreen_item_y, _inst.gmllang_text_credits[1]);
                                gmlscreen_item_y += 35;
                                draw_set_font(2);
                                draw_set_color(16776960);
                                draw_text(gmlscreen_item_x, gmlscreen_item_y, _inst.gmllang_text_credits[2]);
                                gmlscreen_item_y += 80;
                                draw_set_font(3);
                                draw_set_color(16777215);
                                draw_text(gmlscreen_item_x, gmlscreen_item_y, _inst.gmllang_text_credits[3]);
                                gmlscreen_item_y += 35;
                                draw_set_font(2);
                                draw_set_color(16776960);
                                draw_text(gmlscreen_item_x, gmlscreen_item_y, _inst.gmllang_text_credits[4]);
                            };
                        };
                    };
                };
            };
        };
        for (_inst.gmli = 0;
            (_inst.gmli < array_length_1d(_inst.gmlbtn_title)); _inst.gmli += 1) {
            {
                _inst.gmlbtn_x_pos = _inst.gmlbtn_x[_inst.gmli];
                _inst.gmlbtn_y_pos = _inst.gmlbtn_y[_inst.gmli];
                _inst.gmlbtn_width = _inst.gmlbtn_w[_inst.gmli];
                _inst.gmlbtn_height = _inst.gmlbtn_h[_inst.gmli];
                _inst.gmlbtn_border_1 = 3;
                _inst.gmlbtn_border_2 = 2;
                if ((_inst.gmlbtn_align[_inst.gmli] == 1)) {
                    {
                        _inst.gmllay_01_x1 = (_inst.gmlbtn_x_pos - (_inst.gmlbtn_width / 2));
                    };
                } else {
                    if ((_inst.gmlbtn_align[_inst.gmli] == 0)) {
                        {
                            _inst.gmllay_01_x1 = _inst.gmlbtn_x_pos;
                        };
                    };
                };
                _inst.gmllay_01_y1 = _inst.gmlbtn_y_pos;
                _inst.gmllay_01_x2 = (_inst.gmllay_01_x1 + _inst.gmlbtn_width);
                _inst.gmllay_01_y2 = (_inst.gmllay_01_y1 + _inst.gmlbtn_height);
                draw_set_font(2);
                if ((((_inst.gmlscreen_type >= 3)) && ((_inst.gmlscreen_type <= 7)))) {
                    {
                        if ((_inst.gmli <= 4)) {
                            {
                                draw_set_font(3);
                            };
                        };
                    };
                };
                draw_set_valign(1);
                draw_set_halign(_inst.gmlbtn_align[_inst.gmli]);
                draw_set_color(16777215);
                draw_text(_inst.gmlbtn_x_pos, (_inst.gmlbtn_y_pos + (_inst.gmlbtn_height / 2)), _inst.gmlbtn_title[_inst.gmli]);
            }
        };
        if ((_inst.gmlscreen_title != "")) {
            {
                var gmltitle_x = (_inst.gmlworld_width_draw / 2);
                var gmltitle_y = ((_inst.gmlworld_height_draw / 2) - 200);
                draw_set_font(2);
                draw_set_valign(2);
                draw_set_halign(1);
                draw_set_color(16777215);
                draw_text(gmltitle_x, gmltitle_y, _inst.gmlscreen_title);
            };
        };
        if ((_inst.gmlscreen_desc != "")) {
            {
                draw_set_font(3);
                draw_set_valign(0);
                draw_set_halign(_inst.gmlscreen_desc_align);
                draw_set_color(16777215);
                draw_text_ext(_inst.gmldesc_x, _inst.gmldesc_y, _inst.gmlscreen_desc, (-1), 500);
                draw_set_color(16777215);
            };
        };
        if ((_inst.gmlscreen_type != 1)) {
            {
                draw_sprite(_inst, 21, 0, _inst.gmlbtn_back_x1, _inst.gmlbtn_back_y1);
            };
        };
        if ((_inst.gmlscreen_type == 1)) {
            {
                draw_set_font(0);
                draw_set_halign(1);
                draw_set_valign(2);
                draw_set_color(8421504);
                draw_text((_inst.gmlworld_width_draw / 2), (_inst.gmlworld_height_draw - 15), ("v." + gml_Script_scr_game_version(_inst, _other)));
            };
        };
        if (_inst.gmlmouse_hand > 0.5) {
            {
                draw_sprite(_inst, 6, 0, g_pBuiltIn.mouse_x, g_pBuiltIn.mouse_y);
            };
        };
        if (((_inst.gmlfamobi_active > 0.5) && ((_inst.gmlscreen_type == 1)))) {
            {
                draw_sprite_ext(_inst, 17, 0, _inst.gmlfamobi_html5_x, _inst.gmlfamobi_html5_y, 0.28, 0.28, 0, 16777215, 1);
            };
        };
        if ((_inst.gmlscreen_fade_alpha > 0)) {
            {
                draw_set_alpha(_inst.gmlscreen_fade_alpha);
                draw_rectangle_colour((-10), (-10), _inst.gmlworld_width_draw, _inst.gmlworld_height_draw, 0, 0, 0, 0, 0);
                if (_inst.gmlbackground_done > 0.5) {
                    {
                        _inst.gmlscreen_fade_alpha -= 0.02;
                    };
                };
                if ((_inst.gmlscreen_fade_alpha < 0)) {
                    {
                        _inst.gmlscreen_fade_alpha = 0;
                    };
                };
                draw_set_alpha(1);
            };
        };
        if (_inst.gmlcircle_fade_draw > 0.5) {
            {
                draw_circle_colour(_inst.gmlcircle_fade_x, _inst.gmlcircle_fade_y, _inst.gmlcircle_fade_size, _inst.gmlbg_color_vis, _inst.gmlbg_color_vis, 0);
                if ((floor(_inst.gmlball_explosion_step) < _inst.gmlball_explosion_step_max)) {
                    {
                        var gmlexpl_scale = (_inst.gmldraw_w_ratio * 0.75);
                        draw_sprite_ext(_inst, 7, floor(_inst.gmlball_explosion_step), _inst.gmlcircle_fade_x, _inst.gmlcircle_fade_y, gmlexpl_scale, gmlexpl_scale, 0, 16777215, 1);
                        _inst.gmlball_explosion_step += 0.5;
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_menu_main_KeyPressed_V_1 1
// /// [ famobi ] More Games
//
// if ( global.debug_me ){
//
//     // famobi_alert();
//
//     // famobi_moreGamesLink();
//
//     // famobi_submitHighscore('0','1');
//
//     /*
//
//     function famobi_gameOver(){ famobi.gameOver(); }
//
//     function famobi_levelUp(){ famobi.levelUp(); }
//
//     function famobi_submitHighscore(level, score){ famobi.submitHighscore(level, score); }
//
//     function famobi_showAd(callback, force){ famobi.showAd(callback, force); }
//
//     function famobi___(key){ famobi.__(key); }
//
//     function famobi_forceAd(callback){ famobi.forceAd(callback); }
//
//     function famobi_getMoreGamesButtonImage(){ famobi.getMoreGamesButtonImage(); }
//
//     function famobi_moreGamesLink(){ famobi.moreGamesLink(); }
//
//     */
// }
//
// /* */
// /*  */ }
//
function gml_Object_obj_menu_main_KeyPress_86(_inst, _other) {
    {
        if (global.gmldebug_me > 0.5) {
            {};
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_menu_main_KeyPressed_R_1 1
// /// Restart Game
//
// if ( global.debug_me ){ game_restart(); }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_menu_main_KeyPress_82(_inst, _other) {
    {
        if (global.gmldebug_me > 0.5) {
            {
                game_restart();
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_menu_main_KeyPressed_M_1 1
// /// Mouse Hand: Toggle
//
// if ( global.debug_me ){
//
//     if ( mouse_hand ){
//
//         mouse_hand = false;
//
//         window_set_cursor(cr_default);
//     }
//     else {
//
//         mouse_hand = true;
//
//         window_set_cursor(cr_none);
//     }
// }
//
// /* */
// /*  */ }
//
function gml_Object_obj_menu_main_KeyPress_77(_inst, _other) {
    {
        if (global.gmldebug_me > 0.5) {
            {
                if (_inst.gmlmouse_hand > 0.5) {
                    {
                        _inst.gmlmouse_hand = 0 ? 1 : 0;
                        window_set_cursor(0);
                    };
                } else {
                    {
                        _inst.gmlmouse_hand = 1 ? 1 : 0;
                        window_set_cursor((-1));
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_menu_main_KeyPressed_L_1 1
// /// Load Famobi Image
//
//     scr_famobi_MoreGamesButtonImage_load()
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_menu_main_KeyPress_76(_inst, _other) {
    {
        gml_Script_scr_famobi_MoreGamesButtonImage_load(_inst, _other);
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_menu_main_KeyPressed_F_1 1
// /// Keyb - Change Fullscreen
//
// if ( global.debug_me ){
//
//     if ( window_get_fullscreen() ){
//
//         window_set_fullscreen(false);
//     }
//     else {
//
//         window_set_fullscreen(true);
//     }
//
//     scr_screen_init(false);
// }
//
// /* */
// /*  */ }
//
function gml_Object_obj_menu_main_KeyPress_70(_inst, _other) {
    {
        if (global.gmldebug_me > 0.5) {
            {
                if (window_get_fullscreen() > 0.5) {
                    {
                        window_set_fullscreen(0);
                    };
                } else {
                    {
                        window_set_fullscreen(1);
                    };
                };
                gml_Script_scr_screen_init(_inst, _other, 0);
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_phys_floor_CreateEvent_1 1
// /// Variables Init
//
//     floor_debug = false;
//
//     phys_active_buffer = 10;
//
//
// /* */
// #line gml_Object_obj_phys_floor_CreateEvent_2 1
// /// [ DISABLED ] Physics Fixture Init
// /*
// var floor_fixture = physics_fixture_create();
//
// physics_fixture_set_chain_shape(floor_fixture, false);
//
// for (var i = 0; i <= obj_ctrl_board.line_count; i++;){
//
//     physics_fixture_add_point(floor_fixture, obj_ctrl_board.line_x1[i], obj_ctrl_board.line_y1[i]);
// }
//
// physics_fixture_set_density(floor_fixture, 0);
// physics_fixture_set_restitution(floor_fixture, 0.1);
// physics_fixture_set_collision_group(floor_fixture, 0);
// physics_fixture_set_linear_damping(floor_fixture, 0.1);
// physics_fixture_set_angular_damping(floor_fixture, 0.1);
// physics_fixture_set_friction(floor_fixture, 0.2);
// physics_fixture_set_awake(floor_fixture, true);
// physics_fixture_set_sensor(floor_fixture, false);
//
// my_fix = physics_fixture_bind(floor_fixture, id);
//
// physics_fixture_delete(floor_fixture);
// */
//
// /* */
// /*  */ }
//
function gml_Object_obj_phys_floor_Create_0(_inst, _other) {
    {
        _inst.gmlfloor_debug = 0 ? 1 : 0;
        _inst.gmlphys_active_buffer = 10;
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_phys_floor_StepNormalEvent_1 1
// /// Control - Physics
//
// // Physics : Section On/Off
//
//     // phys_start_x, phys_start_y, phys_end_x, phys_end_y
//
//     if ( obj_ctrl_board.ball_inst != 0 ){
//
//         if (( obj_ctrl_board.ball_inst.x > ( phys_start_x - phys_active_buffer )) and ( obj_ctrl_board.ball_inst.x < ( phys_end_x + phys_active_buffer ))){
//         // On
//
//             phy_active = true;
//         }
//         else {
//         // Off
//
//             phy_active = false;
//         }
//     }
//     else {
//
//         phy_active = false;
//     }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_phys_floor_Step_0(_inst, _other) {
    {
        if ((yyInst(2).gmlball_inst != 0)) {
            {
                if ((((yyInst(yyInst(2).gmlball_inst).x > (_inst.gmlphys_start_x - _inst.gmlphys_active_buffer))) && ((yyInst(yyInst(2).gmlball_inst).x < (_inst.gmlphys_end_x + _inst.gmlphys_active_buffer))))) {
                    {
                        _inst.set_physics_active(1 ? 1 : 0);
                    };
                } else {
                    {
                        _inst.set_physics_active(0 ? 1 : 0);
                    };
                };
            };
        } else {
            {
                _inst.set_physics_active(0 ? 1 : 0);
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_phys_floor_DrawEvent_1 1
// /// [ DEBUG ] Draw Physics On
//
// if ( floor_debug ){
//
//     if ( phy_active ){
//
//         var physon_line_color = c_green;
//     }
//     else {
//
//         var physon_line_color = c_white;
//     }
//
//     if ( phys_start_y > phys_end_y ){ pos_y = phys_start_y + 10; }
//     else { pos_y = phys_end_y + 10; }
//
//     draw_line_colour(phys_start_x, pos_y, phys_end_x, pos_y, physon_line_color, physon_line_color);
// }
//
// /* */
// /*  */ }
//
function gml_Object_obj_phys_floor_Draw_0(_inst, _other) {
    {
        if (_inst.gmlfloor_debug > 0.5) {
            {
                if (_inst.phy_active > 0.5) {
                    {
                        var gmlphyson_line_color = 32768;
                    };
                } else {
                    {
                        var gmlphyson_line_color = 16777215;
                    };
                };
                if ((_inst.gmlphys_start_y > _inst.gmlphys_end_y)) {
                    {
                        _inst.gmlpos_y = (_inst.gmlphys_start_y + 10);
                    };
                } else {
                    {
                        _inst.gmlpos_y = (_inst.gmlphys_end_y + 10);
                    };
                };
                draw_line_colour(_inst.gmlphys_start_x, _inst.gmlpos_y, _inst.gmlphys_end_x, _inst.gmlpos_y, gmlphyson_line_color, gmlphyson_line_color);
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_phys_floor_CollisionEvent_6_1 1
// /*  */ }
//
function gml_Object_obj_phys_floor_Collision_6(_inst, _other) {
    {};
}

// #####################################################################################################
// {
// #line gml_Object_obj_win_reset_CreateEvent_1 1
// /// Language : Load
//
//     scr_dialog_load();
//
//     // scr_language_load();
//
//
// /* */
// #line gml_Object_obj_win_reset_CreateEvent_2 1
// /// Variables Init
//
// popup_type = 1;
//
// // World
//
//     scr_world_ratio();
//
//
// // Items Setup
//
//     if ( popup_type == 1 ){
//     // Main Courses: Reset Game
//
//         if (( obj_menu_main.game_mode_1_cp[global.game_submode,1] == 0 ) or ( global.game_submode == 1 )){
//         // No Checkpoint OR Course Selected is 25h
//
//             // title
//
//                 title_string[0] = lang_text_reset[4]; // "THIS WILL RESET YOUR#PROGRESS AND SCORE TO CERO##ARE YOU SURE?";
//                 title_x[0] = ( world_width_draw / 2 );
//                 title_y[0] = ( world_height_draw / 2 ) - 74;
//
//
//             // Buttons
//
//                 btn_title[0] = lang_text_reset[5]; // "GO BACK";
//                 btn_w[0] = 200;
//                 btn_h[0] = 50;
//                 btn_x[0] = ( world_width_draw / 2 ) - 135;
//                 btn_y[0] = ( world_height_draw / 2 ) + 50;
//                 btn_action[0] = 13;
//                 btn_active[0] = true;
//                 btn_align[0] = fa_center;
//
//                 btn_title[1] = lang_text_reset[6]; // "RESET";
//                 btn_w[1] = 200;
//                 btn_h[1] = 50;
//                 btn_x[1] = ( world_width_draw / 2 ) + 135;
//                 btn_y[1] = ( world_height_draw / 2 ) + 50;
//                 btn_action[1] = 14;
//                 btn_active[1] = true;
//                 btn_align[1] = fa_center;
//
//
//             // Screen
//
//                 screen_type = 1;
//         }
//         else {
//         // Checkpoint Selection
//
//             // title
//
//                 title_string[0] = lang_text_reset[7]; // "SELECT A CHECKPOINT#TO RESET YOUR GAME";
//                 title_x[0] = ( world_width_draw / 2 );
//                 title_y[0] = ( world_height_draw / 2 ) - 180;
//
//
//             // Buttons
//
//                 btn_title[0] = lang_text_reset[8]; // "GO BACK";
//                 btn_w[0] = 200;
//                 btn_h[0] = 50;
//                 btn_x[0] = ( world_width_draw / 2 ) - 135;
//                 btn_y[0] = ( world_height_draw / 2 ) + 190;
//                 btn_action[0] = 13;
//                 btn_active[0] = true;
//                 btn_align[0] = fa_center;
//
//                 btn_title[1] = lang_text_reset[6]; // "RESET";
//                 btn_w[1] = 200;
//                 btn_h[1] = 50;
//                 btn_x[1] = ( world_width_draw / 2 ) + 180;
//                 btn_y[1] = ( world_height_draw / 2 ) + 190;
//                 btn_action[1] = 14;
//                 btn_active[1] = true;
//                 btn_align[1] = fa_center;
//
//
//             // Screen
//
//                 screen_type = 2;
//
//                 screen_text_x = ( world_width_draw / 2 );
//                 screen_text_y = ( world_height_draw / 2 ) - 30;
//
//                 arrow_w = 36;
//                 arrow_h = 46;
//
//                 arrow_x1[0] = ( world_width_draw / 2 ) - 170 - arrow_w;
//                 arrow_y1[0] = ( world_height_draw / 2 ) - ( arrow_h / 2 ) - 30;
//                 arrow_x2[0] = arrow_x1[0] + arrow_w;
//                 arrow_y2[0] = arrow_y1[0] + arrow_h;
//
//                 arrow_x1[1] = ( world_width_draw / 2 ) + 170;
//                 arrow_y1[1] = ( world_height_draw / 2 ) - ( arrow_h / 2 ) - 30;
//                 arrow_x2[1] = arrow_x1[1] + arrow_w;
//                 arrow_y2[1] = arrow_y1[1] + arrow_h;
//
//
//             // Checkpoint Calc
//
//                 checkpoint_name[0] = "1";       checkpoint_score[0] = 0;
//
//                 if ( global.game_submode == 1 ){
//
//                     // checkpoint_name[1] = "25"; checkpoint_score[1] = obj_menu_main.game_mode_1_cp[1,1];
//                 }
//                 else if ( global.game_submode == 2 ){
//
//                     checkpoint_name[1] = "25"; checkpoint_score[1] = obj_menu_main.game_mode_1_cp[2,1];
//                     // checkpoint_name[2] = "50"; checkpoint_score[2] = obj_menu_main.game_mode_1_cp[2,2];
//                 }
//                 else if ( global.game_submode == 3 ){
//
//                     checkpoint_name[1] = "25";  checkpoint_score[1] = obj_menu_main.game_mode_1_cp[3,1];
//                     checkpoint_name[2] = "50";  checkpoint_score[2] = obj_menu_main.game_mode_1_cp[3,2];
//                     checkpoint_name[3] = "75";  checkpoint_score[3] = obj_menu_main.game_mode_1_cp[3,3];
//                     // checkpoint_name[4] = "100"; checkpoint_score[4] = obj_menu_main.game_mode_1_cp[3,4];
//                 }
//                 else if ( global.game_submode == 4 ){
//
//                     checkpoint_name[1] = "25";  checkpoint_score[1] = obj_menu_main.game_mode_1_cp[4,1];
//                     checkpoint_name[2] = "50";  checkpoint_score[2] = obj_menu_main.game_mode_1_cp[4,2];
//                     checkpoint_name[3] = "75";  checkpoint_score[3] = obj_menu_main.game_mode_1_cp[4,3];
//                     checkpoint_name[4] = "100"; checkpoint_score[4] = obj_menu_main.game_mode_1_cp[4,4];
//                     checkpoint_name[5] = "125"; checkpoint_score[5] = obj_menu_main.game_mode_1_cp[4,5];
//                     // checkpoint_name[6] = "150"; checkpoint_score[6] = obj_menu_main.game_mode_1_cp[4,6];
//                 }
//
//                 /*
//                 checkpoint_name[1] = "25";      checkpoint_score[1] = obj_menu_main.game_mode_1_checkpoint_025;
//                 checkpoint_name[2] = "50";      checkpoint_score[2] = obj_menu_main.game_mode_1_checkpoint_050;
//                 checkpoint_name[3] = "75";      checkpoint_score[3] = obj_menu_main.game_mode_1_checkpoint_075;
//                 checkpoint_name[4] = "100";     checkpoint_score[4] = obj_menu_main.game_mode_1_checkpoint_100;
//                 checkpoint_name[5] = "125";     checkpoint_score[5] = obj_menu_main.game_mode_1_checkpoint_125;
//                 checkpoint_name[6] = "150";     checkpoint_score[6] = obj_menu_main.game_mode_1_checkpoint_150;
//                 checkpoint_name[7] = "175";     checkpoint_score[7] = obj_menu_main.game_mode_1_checkpoint_175;
//                 checkpoint_name[8] = "200";     checkpoint_score[8] = obj_menu_main.game_mode_1_checkpoint_200;
//                 checkpoint_name[9] = "225";     checkpoint_score[9] = obj_menu_main.game_mode_1_checkpoint_225;
//                 checkpoint_name[10] = "250";    checkpoint_score[10] = obj_menu_main.game_mode_1_checkpoint_250;
//                 checkpoint_name[11] = "275";    checkpoint_score[11] = obj_menu_main.game_mode_1_checkpoint_275;
//                 */
//
//                 reset_checkpoint_id = 0;
//
//                 for ( var i=( array_length_1d(checkpoint_name) - 1 ); i>=0; i-=1; ){
//
//                     if ( checkpoint_score[i] != 0 ){
//
//                         reset_checkpoint_id = i;
//
//                         break;
//                     }
//                 }
//
//                 // If the last checkpoint is the same level the player is, disable reset button
//                 if ( checkpoint_name[reset_checkpoint_id] != "1" ){
//
//                     if ( real(checkpoint_name[reset_checkpoint_id]) == obj_menu_main.game_levels_curr ){ btn_active[1] = false; }
//
//                     // game_mode_1_best_score = game_mode_1_cp[game_submode,array_length_2d(game_mode_1_cp,game_submode)-1];
//
//                 }
//         }
//     }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_win_reset_Create_0(_inst, _other) {
    {
        gml_Script_scr_dialog_load(_inst, _other);
        _inst.gmlpopup_type = 1;
        gml_Script_scr_world_ratio(_inst, _other);
        if ((_inst.gmlpopup_type == 1)) {
            {
                if ((((yyInst(8).gmlgame_mode_1_cp[global.gmlgame_submode][1] == 0)) || ((global.gmlgame_submode == 1)))) {
                    {
                        if (!(_inst.gmltitle_string instanceof Array)) {
                            _inst.gmltitle_string = [];
                            _inst.gmltitle_string.__yy_owner = 3012062338;
                        } else if (_inst.gmltitle_string.__yy_owner !== 3012062338) {
                            _inst.gmltitle_string = _inst.gmltitle_string.slice(0);
                            _inst.gmltitle_string.__yy_owner = 3012062338;
                        }
                        _inst.gmltitle_string[0] = _inst.gmllang_text_reset[4];
                        if (!(_inst.gmltitle_x instanceof Array)) {
                            _inst.gmltitle_x = [];
                            _inst.gmltitle_x.__yy_owner = 3019425128;
                        } else if (_inst.gmltitle_x.__yy_owner !== 3019425128) {
                            _inst.gmltitle_x = _inst.gmltitle_x.slice(0);
                            _inst.gmltitle_x.__yy_owner = 3019425128;
                        }
                        _inst.gmltitle_x[0] = (_inst.gmlworld_width_draw / 2);
                        if (!(_inst.gmltitle_y instanceof Array)) {
                            _inst.gmltitle_y = [];
                            _inst.gmltitle_y.__yy_owner = 2867065897;
                        } else if (_inst.gmltitle_y.__yy_owner !== 2867065897) {
                            _inst.gmltitle_y = _inst.gmltitle_y.slice(0);
                            _inst.gmltitle_y.__yy_owner = 2867065897;
                        }
                        _inst.gmltitle_y[0] = ((_inst.gmlworld_height_draw / 2) - 74);
                        if (!(_inst.gmlbtn_title instanceof Array)) {
                            _inst.gmlbtn_title = [];
                            _inst.gmlbtn_title.__yy_owner = 1779252115;
                        } else if (_inst.gmlbtn_title.__yy_owner !== 1779252115) {
                            _inst.gmlbtn_title = _inst.gmlbtn_title.slice(0);
                            _inst.gmlbtn_title.__yy_owner = 1779252115;
                        }
                        _inst.gmlbtn_title[0] = _inst.gmllang_text_reset[5];
                        if (!(_inst.gmlbtn_w instanceof Array)) {
                            _inst.gmlbtn_w = [];
                            _inst.gmlbtn_w.__yy_owner = 3123904953;
                        } else if (_inst.gmlbtn_w.__yy_owner !== 3123904953) {
                            _inst.gmlbtn_w = _inst.gmlbtn_w.slice(0);
                            _inst.gmlbtn_w.__yy_owner = 3123904953;
                        }
                        _inst.gmlbtn_w[0] = 200;
                        if (!(_inst.gmlbtn_h instanceof Array)) {
                            _inst.gmlbtn_h = [];
                            _inst.gmlbtn_h.__yy_owner = 2003373863;
                        } else if (_inst.gmlbtn_h.__yy_owner !== 2003373863) {
                            _inst.gmlbtn_h = _inst.gmlbtn_h.slice(0);
                            _inst.gmlbtn_h.__yy_owner = 2003373863;
                        }
                        _inst.gmlbtn_h[0] = 50;
                        if (!(_inst.gmlbtn_x instanceof Array)) {
                            _inst.gmlbtn_x = [];
                            _inst.gmlbtn_x.__yy_owner = 1034624374;
                        } else if (_inst.gmlbtn_x.__yy_owner !== 1034624374) {
                            _inst.gmlbtn_x = _inst.gmlbtn_x.slice(0);
                            _inst.gmlbtn_x.__yy_owner = 1034624374;
                        }
                        _inst.gmlbtn_x[0] = ((_inst.gmlworld_width_draw / 2) - 135);
                        if (!(_inst.gmlbtn_y instanceof Array)) {
                            _inst.gmlbtn_y = [];
                            _inst.gmlbtn_y.__yy_owner = 615525431;
                        } else if (_inst.gmlbtn_y.__yy_owner !== 615525431) {
                            _inst.gmlbtn_y = _inst.gmlbtn_y.slice(0);
                            _inst.gmlbtn_y.__yy_owner = 615525431;
                        }
                        _inst.gmlbtn_y[0] = ((_inst.gmlworld_height_draw / 2) + 50);
                        if (!(_inst.gmlbtn_action instanceof Array)) {
                            _inst.gmlbtn_action = [];
                            _inst.gmlbtn_action.__yy_owner = 2901436203;
                        } else if (_inst.gmlbtn_action.__yy_owner !== 2901436203) {
                            _inst.gmlbtn_action = _inst.gmlbtn_action.slice(0);
                            _inst.gmlbtn_action.__yy_owner = 2901436203;
                        }
                        _inst.gmlbtn_action[0] = 13;
                        if (!(_inst.gmlbtn_active instanceof Array)) {
                            _inst.gmlbtn_active = [];
                            _inst.gmlbtn_active.__yy_owner = 1645586165;
                        } else if (_inst.gmlbtn_active.__yy_owner !== 1645586165) {
                            _inst.gmlbtn_active = _inst.gmlbtn_active.slice(0);
                            _inst.gmlbtn_active.__yy_owner = 1645586165;
                        }
                        _inst.gmlbtn_active[0] = 1 ? 1 : 0;
                        if (!(_inst.gmlbtn_align instanceof Array)) {
                            _inst.gmlbtn_align = [];
                            _inst.gmlbtn_align.__yy_owner = 1758933204;
                        } else if (_inst.gmlbtn_align.__yy_owner !== 1758933204) {
                            _inst.gmlbtn_align = _inst.gmlbtn_align.slice(0);
                            _inst.gmlbtn_align.__yy_owner = 1758933204;
                        }
                        _inst.gmlbtn_align[0] = 1;
                        _inst.gmlbtn_title[1] = _inst.gmllang_text_reset[6];
                        _inst.gmlbtn_w[1] = 200;
                        _inst.gmlbtn_h[1] = 50;
                        _inst.gmlbtn_x[1] = ((_inst.gmlworld_width_draw / 2) + 135);
                        _inst.gmlbtn_y[1] = ((_inst.gmlworld_height_draw / 2) + 50);
                        _inst.gmlbtn_action[1] = 14;
                        _inst.gmlbtn_active[1] = 1 ? 1 : 0;
                        _inst.gmlbtn_align[1] = 1;
                        _inst.gmlscreen_type = 1;
                    };
                } else {
                    {
                        if (!(_inst.gmltitle_string instanceof Array)) {
                            _inst.gmltitle_string = [];
                            _inst.gmltitle_string.__yy_owner = 3012062338;
                        } else if (_inst.gmltitle_string.__yy_owner !== 3012062338) {
                            _inst.gmltitle_string = _inst.gmltitle_string.slice(0);
                            _inst.gmltitle_string.__yy_owner = 3012062338;
                        }
                        _inst.gmltitle_string[0] = _inst.gmllang_text_reset[7];
                        if (!(_inst.gmltitle_x instanceof Array)) {
                            _inst.gmltitle_x = [];
                            _inst.gmltitle_x.__yy_owner = 3019425128;
                        } else if (_inst.gmltitle_x.__yy_owner !== 3019425128) {
                            _inst.gmltitle_x = _inst.gmltitle_x.slice(0);
                            _inst.gmltitle_x.__yy_owner = 3019425128;
                        }
                        _inst.gmltitle_x[0] = (_inst.gmlworld_width_draw / 2);
                        if (!(_inst.gmltitle_y instanceof Array)) {
                            _inst.gmltitle_y = [];
                            _inst.gmltitle_y.__yy_owner = 2867065897;
                        } else if (_inst.gmltitle_y.__yy_owner !== 2867065897) {
                            _inst.gmltitle_y = _inst.gmltitle_y.slice(0);
                            _inst.gmltitle_y.__yy_owner = 2867065897;
                        }
                        _inst.gmltitle_y[0] = ((_inst.gmlworld_height_draw / 2) - 180);
                        if (!(_inst.gmlbtn_title instanceof Array)) {
                            _inst.gmlbtn_title = [];
                            _inst.gmlbtn_title.__yy_owner = 1779252115;
                        } else if (_inst.gmlbtn_title.__yy_owner !== 1779252115) {
                            _inst.gmlbtn_title = _inst.gmlbtn_title.slice(0);
                            _inst.gmlbtn_title.__yy_owner = 1779252115;
                        }
                        _inst.gmlbtn_title[0] = _inst.gmllang_text_reset[8];
                        if (!(_inst.gmlbtn_w instanceof Array)) {
                            _inst.gmlbtn_w = [];
                            _inst.gmlbtn_w.__yy_owner = 3123904953;
                        } else if (_inst.gmlbtn_w.__yy_owner !== 3123904953) {
                            _inst.gmlbtn_w = _inst.gmlbtn_w.slice(0);
                            _inst.gmlbtn_w.__yy_owner = 3123904953;
                        }
                        _inst.gmlbtn_w[0] = 200;
                        if (!(_inst.gmlbtn_h instanceof Array)) {
                            _inst.gmlbtn_h = [];
                            _inst.gmlbtn_h.__yy_owner = 2003373863;
                        } else if (_inst.gmlbtn_h.__yy_owner !== 2003373863) {
                            _inst.gmlbtn_h = _inst.gmlbtn_h.slice(0);
                            _inst.gmlbtn_h.__yy_owner = 2003373863;
                        }
                        _inst.gmlbtn_h[0] = 50;
                        if (!(_inst.gmlbtn_x instanceof Array)) {
                            _inst.gmlbtn_x = [];
                            _inst.gmlbtn_x.__yy_owner = 1034624374;
                        } else if (_inst.gmlbtn_x.__yy_owner !== 1034624374) {
                            _inst.gmlbtn_x = _inst.gmlbtn_x.slice(0);
                            _inst.gmlbtn_x.__yy_owner = 1034624374;
                        }
                        _inst.gmlbtn_x[0] = ((_inst.gmlworld_width_draw / 2) - 135);
                        if (!(_inst.gmlbtn_y instanceof Array)) {
                            _inst.gmlbtn_y = [];
                            _inst.gmlbtn_y.__yy_owner = 615525431;
                        } else if (_inst.gmlbtn_y.__yy_owner !== 615525431) {
                            _inst.gmlbtn_y = _inst.gmlbtn_y.slice(0);
                            _inst.gmlbtn_y.__yy_owner = 615525431;
                        }
                        _inst.gmlbtn_y[0] = ((_inst.gmlworld_height_draw / 2) + 190);
                        if (!(_inst.gmlbtn_action instanceof Array)) {
                            _inst.gmlbtn_action = [];
                            _inst.gmlbtn_action.__yy_owner = 2901436203;
                        } else if (_inst.gmlbtn_action.__yy_owner !== 2901436203) {
                            _inst.gmlbtn_action = _inst.gmlbtn_action.slice(0);
                            _inst.gmlbtn_action.__yy_owner = 2901436203;
                        }
                        _inst.gmlbtn_action[0] = 13;
                        if (!(_inst.gmlbtn_active instanceof Array)) {
                            _inst.gmlbtn_active = [];
                            _inst.gmlbtn_active.__yy_owner = 1645586165;
                        } else if (_inst.gmlbtn_active.__yy_owner !== 1645586165) {
                            _inst.gmlbtn_active = _inst.gmlbtn_active.slice(0);
                            _inst.gmlbtn_active.__yy_owner = 1645586165;
                        }
                        _inst.gmlbtn_active[0] = 1 ? 1 : 0;
                        if (!(_inst.gmlbtn_align instanceof Array)) {
                            _inst.gmlbtn_align = [];
                            _inst.gmlbtn_align.__yy_owner = 1758933204;
                        } else if (_inst.gmlbtn_align.__yy_owner !== 1758933204) {
                            _inst.gmlbtn_align = _inst.gmlbtn_align.slice(0);
                            _inst.gmlbtn_align.__yy_owner = 1758933204;
                        }
                        _inst.gmlbtn_align[0] = 1;
                        _inst.gmlbtn_title[1] = _inst.gmllang_text_reset[6];
                        _inst.gmlbtn_w[1] = 200;
                        _inst.gmlbtn_h[1] = 50;
                        _inst.gmlbtn_x[1] = ((_inst.gmlworld_width_draw / 2) + 180);
                        _inst.gmlbtn_y[1] = ((_inst.gmlworld_height_draw / 2) + 190);
                        _inst.gmlbtn_action[1] = 14;
                        _inst.gmlbtn_active[1] = 1 ? 1 : 0;
                        _inst.gmlbtn_align[1] = 1;
                        _inst.gmlscreen_type = 2;
                        _inst.gmlscreen_text_x = (_inst.gmlworld_width_draw / 2);
                        _inst.gmlscreen_text_y = ((_inst.gmlworld_height_draw / 2) - 30);
                        _inst.gmlarrow_w = 36;
                        _inst.gmlarrow_h = 46;
                        if (!(_inst.gmlarrow_x1 instanceof Array)) {
                            _inst.gmlarrow_x1 = [];
                            _inst.gmlarrow_x1.__yy_owner = 253210470;
                        } else if (_inst.gmlarrow_x1.__yy_owner !== 253210470) {
                            _inst.gmlarrow_x1 = _inst.gmlarrow_x1.slice(0);
                            _inst.gmlarrow_x1.__yy_owner = 253210470;
                        }
                        _inst.gmlarrow_x1[0] = ((_inst.gmlworld_width_draw / 2) - 170 - _inst.gmlarrow_w);
                        if (!(_inst.gmlarrow_y1 instanceof Array)) {
                            _inst.gmlarrow_y1 = [];
                            _inst.gmlarrow_y1.__yy_owner = 3081488387;
                        } else if (_inst.gmlarrow_y1.__yy_owner !== 3081488387) {
                            _inst.gmlarrow_y1 = _inst.gmlarrow_y1.slice(0);
                            _inst.gmlarrow_y1.__yy_owner = 3081488387;
                        }
                        _inst.gmlarrow_y1[0] = ((_inst.gmlworld_height_draw / 2) - (_inst.gmlarrow_h / 2) - 30);
                        if (!(_inst.gmlarrow_x2 instanceof Array)) {
                            _inst.gmlarrow_x2 = [];
                            _inst.gmlarrow_x2.__yy_owner = 607845541;
                        } else if (_inst.gmlarrow_x2.__yy_owner !== 607845541) {
                            _inst.gmlarrow_x2 = _inst.gmlarrow_x2.slice(0);
                            _inst.gmlarrow_x2.__yy_owner = 607845541;
                        }
                        _inst.gmlarrow_x2[0] = (_inst.gmlarrow_x1[0] + _inst.gmlarrow_w);
                        if (!(_inst.gmlarrow_y2 instanceof Array)) {
                            _inst.gmlarrow_y2 = [];
                            _inst.gmlarrow_y2.__yy_owner = 2626067392;
                        } else if (_inst.gmlarrow_y2.__yy_owner !== 2626067392) {
                            _inst.gmlarrow_y2 = _inst.gmlarrow_y2.slice(0);
                            _inst.gmlarrow_y2.__yy_owner = 2626067392;
                        }
                        _inst.gmlarrow_y2[0] = (_inst.gmlarrow_y1[0] + _inst.gmlarrow_h);
                        _inst.gmlarrow_x1[1] = ((_inst.gmlworld_width_draw / 2) + 170);
                        _inst.gmlarrow_y1[1] = ((_inst.gmlworld_height_draw / 2) - (_inst.gmlarrow_h / 2) - 30);
                        _inst.gmlarrow_x2[1] = (_inst.gmlarrow_x1[1] + _inst.gmlarrow_w);
                        _inst.gmlarrow_y2[1] = (_inst.gmlarrow_y1[1] + _inst.gmlarrow_h);
                        if (!(_inst.gmlcheckpoint_name instanceof Array)) {
                            _inst.gmlcheckpoint_name = [];
                            _inst.gmlcheckpoint_name.__yy_owner = 2926097857;
                        } else if (_inst.gmlcheckpoint_name.__yy_owner !== 2926097857) {
                            _inst.gmlcheckpoint_name = _inst.gmlcheckpoint_name.slice(0);
                            _inst.gmlcheckpoint_name.__yy_owner = 2926097857;
                        }
                        _inst.gmlcheckpoint_name[0] = "1";
                        if (!(_inst.gmlcheckpoint_score instanceof Array)) {
                            _inst.gmlcheckpoint_score = [];
                            _inst.gmlcheckpoint_score.__yy_owner = 1628656526;
                        } else if (_inst.gmlcheckpoint_score.__yy_owner !== 1628656526) {
                            _inst.gmlcheckpoint_score = _inst.gmlcheckpoint_score.slice(0);
                            _inst.gmlcheckpoint_score.__yy_owner = 1628656526;
                        }
                        _inst.gmlcheckpoint_score[0] = 0;
                        if ((global.gmlgame_submode == 1)) {
                            {};
                        } else {
                            if ((global.gmlgame_submode == 2)) {
                                {
                                    _inst.gmlcheckpoint_name[1] = "25";
                                    _inst.gmlcheckpoint_score[1] = yyInst(8).gmlgame_mode_1_cp[2][1];
                                };
                            } else {
                                if ((global.gmlgame_submode == 3)) {
                                    {
                                        _inst.gmlcheckpoint_name[1] = "25";
                                        _inst.gmlcheckpoint_score[1] = yyInst(8).gmlgame_mode_1_cp[3][1];
                                        _inst.gmlcheckpoint_name[2] = "50";
                                        _inst.gmlcheckpoint_score[2] = yyInst(8).gmlgame_mode_1_cp[3][2];
                                        _inst.gmlcheckpoint_name[3] = "75";
                                        _inst.gmlcheckpoint_score[3] = yyInst(8).gmlgame_mode_1_cp[3][3];
                                    };
                                } else {
                                    if ((global.gmlgame_submode == 4)) {
                                        {
                                            _inst.gmlcheckpoint_name[1] = "25";
                                            _inst.gmlcheckpoint_score[1] = yyInst(8).gmlgame_mode_1_cp[4][1];
                                            _inst.gmlcheckpoint_name[2] = "50";
                                            _inst.gmlcheckpoint_score[2] = yyInst(8).gmlgame_mode_1_cp[4][2];
                                            _inst.gmlcheckpoint_name[3] = "75";
                                            _inst.gmlcheckpoint_score[3] = yyInst(8).gmlgame_mode_1_cp[4][3];
                                            _inst.gmlcheckpoint_name[4] = "100";
                                            _inst.gmlcheckpoint_score[4] = yyInst(8).gmlgame_mode_1_cp[4][4];
                                            _inst.gmlcheckpoint_name[5] = "125";
                                            _inst.gmlcheckpoint_score[5] = yyInst(8).gmlgame_mode_1_cp[4][5];
                                        };
                                    };
                                };
                            };
                        };
                        _inst.gmlreset_checkpoint_id = 0;
                        for (var gmli = (array_length_1d(_inst.gmlcheckpoint_name) - 1);
                            (gmli >= 0); gmli -= 1) {
                            {
                                if ((_inst.gmlcheckpoint_score[gmli] != 0)) {
                                    {
                                        _inst.gmlreset_checkpoint_id = gmli;
                                        break;
                                    };
                                };
                            }
                        };
                        if ((_inst.gmlcheckpoint_name[_inst.gmlreset_checkpoint_id] != "1")) {
                            {
                                if ((real(_inst.gmlcheckpoint_name[_inst.gmlreset_checkpoint_id]) == yyInst(8).gmlgame_levels_curr)) {
                                    {
                                        _inst.gmlbtn_active[1] = 0 ? 1 : 0;
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_win_reset_DestroyEvent_1 1
// /// On Destroy
//
//     global.win_popup_active = false;
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_win_reset_Destroy_0(_inst, _other) {
    {
        global.gmlwin_popup_active = 0 ? 1 : 0;
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_win_reset_GlobalLeftButtonPressed_1 1
// /// Button Click
//
// // Standard Buttons
//
//     var btn_clicked = -1;
//
//     for ( var i=0; i<array_length_1d(btn_title); i+=1 ){
//
//         if ( btn_align[i] == fa_center ){
//
//             if (( mouse_x > ( btn_x[i] - ( btn_w[i] / 2 )) and mouse_x < ( btn_x[i] - ( btn_w[i] / 2 )) + btn_w[i] ) and ( mouse_y > btn_y[i] and mouse_y < btn_y[i] + btn_h[i] )){
//
//                 btn_clicked = i;
//             }
//         }
//         else if ( btn_align[i] == fa_left ){
//
//             if ((( mouse_x > btn_x[i] ) and ( mouse_x < ( btn_x[i] + btn_w[i] ))) and ( mouse_y > btn_y[i] and mouse_y < btn_y[i] + btn_h[i] )){
//
//                 btn_clicked = i;
//             }
//         }
//     }
//
//     if ( btn_clicked != -1 ){
//
//         if ( btn_active[btn_clicked] ){
//
//             scr_btn_action(btn_action[btn_clicked]);
//         }
//     }
//
//
// // Special Buttons
//
// if ( screen_type == 2 ){
// // Checkpoint Selection
//
//     arrow_clicked = -1;
//
//     for ( var i=0; i<array_length_1d(arrow_x1); i+=1 ){
//
//         if ((( mouse_x > arrow_x1[i]-30 ) and ( mouse_x < arrow_x2[i]+30 )) and (( mouse_y > arrow_y1[i]-30 ) and ( mouse_y < arrow_y2[i]+30 ))) {
//
//             arrow_clicked = i;
//         }
//     }
//
//     if ( arrow_clicked != -1 ){
//
//         if ( arrow_clicked == 0 ){
//
//             reset_checkpoint_id -= 1;
//         }
//         else {
//
//             reset_checkpoint_id += 1;
//         }
//
//         if ( reset_checkpoint_id < 0 ){ reset_checkpoint_id = ( array_length_1d(checkpoint_name) - 1 ); }
//         else if ( reset_checkpoint_id > ( array_length_1d(checkpoint_name) - 1 )){ reset_checkpoint_id = 0; }
//
//         btn_active[1] = true;
//
//         if ( checkpoint_name[reset_checkpoint_id] != "1" ){
//
//             if (( checkpoint_score[reset_checkpoint_id] == 0 ) or ( real(checkpoint_name[reset_checkpoint_id]) == obj_menu_main.game_levels_curr )){ btn_active[1] = false; }
//         }
//     }
// }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_win_reset_Mouse_53(_inst, _other) {
    {
        var gmlbtn_clicked = (-1);
        for (var gmli = 0;
            (gmli < array_length_1d(_inst.gmlbtn_title)); gmli += 1) {
            {
                if ((_inst.gmlbtn_align[gmli] == 1)) {
                    {
                        if ((((((g_pBuiltIn.mouse_x > (_inst.gmlbtn_x[gmli] - (_inst.gmlbtn_w[gmli] / 2)))) && ((g_pBuiltIn.mouse_x < ((_inst.gmlbtn_x[gmli] - (_inst.gmlbtn_w[gmli] / 2)) + _inst.gmlbtn_w[gmli]))))) && ((((g_pBuiltIn.mouse_y > _inst.gmlbtn_y[gmli])) && ((g_pBuiltIn.mouse_y < (_inst.gmlbtn_y[gmli] + _inst.gmlbtn_h[gmli]))))))) {
                            {
                                gmlbtn_clicked = gmli;
                            };
                        };
                    };
                } else {
                    if ((_inst.gmlbtn_align[gmli] == 0)) {
                        {
                            if ((((((g_pBuiltIn.mouse_x > _inst.gmlbtn_x[gmli])) && ((g_pBuiltIn.mouse_x < (_inst.gmlbtn_x[gmli] + _inst.gmlbtn_w[gmli]))))) && ((((g_pBuiltIn.mouse_y > _inst.gmlbtn_y[gmli])) && ((g_pBuiltIn.mouse_y < (_inst.gmlbtn_y[gmli] + _inst.gmlbtn_h[gmli]))))))) {
                                {
                                    gmlbtn_clicked = gmli;
                                };
                            };
                        };
                    };
                };
            }
        };
        if ((gmlbtn_clicked != (-1))) {
            {
                if (_inst.gmlbtn_active[gmlbtn_clicked] > 0.5) {
                    {
                        gml_Script_scr_btn_action(_inst, _other, _inst.gmlbtn_action[gmlbtn_clicked]);
                    };
                };
            };
        };
        if ((_inst.gmlscreen_type == 2)) {
            {
                _inst.gmlarrow_clicked = (-1);
                for (var gmli = 0;
                    (gmli < array_length_1d(_inst.gmlarrow_x1)); gmli += 1) {
                    {
                        if ((((((g_pBuiltIn.mouse_x > (_inst.gmlarrow_x1[gmli] - 30))) && ((g_pBuiltIn.mouse_x < (_inst.gmlarrow_x2[gmli] + 30))))) && ((((g_pBuiltIn.mouse_y > (_inst.gmlarrow_y1[gmli] - 30))) && ((g_pBuiltIn.mouse_y < (_inst.gmlarrow_y2[gmli] + 30))))))) {
                            {
                                _inst.gmlarrow_clicked = gmli;
                            };
                        };
                    }
                };
                if ((_inst.gmlarrow_clicked != (-1))) {
                    {
                        if ((_inst.gmlarrow_clicked == 0)) {
                            {
                                _inst.gmlreset_checkpoint_id -= 1;
                            };
                        } else {
                            {
                                _inst.gmlreset_checkpoint_id += 1;
                            };
                        };
                        if ((_inst.gmlreset_checkpoint_id < 0)) {
                            {
                                _inst.gmlreset_checkpoint_id = (array_length_1d(_inst.gmlcheckpoint_name) - 1);
                            };
                        } else {
                            if ((_inst.gmlreset_checkpoint_id > (array_length_1d(_inst.gmlcheckpoint_name) - 1))) {
                                {
                                    _inst.gmlreset_checkpoint_id = 0;
                                };
                            };
                        };
                        if (!(_inst.gmlbtn_active instanceof Array)) {
                            _inst.gmlbtn_active = [];
                            _inst.gmlbtn_active.__yy_owner = 1645586165;
                        } else if (_inst.gmlbtn_active.__yy_owner !== 1645586165) {
                            _inst.gmlbtn_active = _inst.gmlbtn_active.slice(0);
                            _inst.gmlbtn_active.__yy_owner = 1645586165;
                        }
                        _inst.gmlbtn_active[1] = 1 ? 1 : 0;
                        if ((_inst.gmlcheckpoint_name[_inst.gmlreset_checkpoint_id] != "1")) {
                            {
                                if ((((_inst.gmlcheckpoint_score[_inst.gmlreset_checkpoint_id] == 0)) || ((real(_inst.gmlcheckpoint_name[_inst.gmlreset_checkpoint_id]) == yyInst(8).gmlgame_levels_curr)))) {
                                    {
                                        _inst.gmlbtn_active[1] = 0 ? 1 : 0;
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_win_reset_DrawEvent_1 1
// /// Draw Items
//
// // Background
//
//     draw_set_color(c_black);
//     draw_set_alpha(0.9);
//
//     draw_rectangle(-10,-10,world_width_draw+10,world_height_draw+10,false);
//
//     draw_set_alpha(1);
//
//
// // Title
//
//     draw_set_font(font_beyond_sml);
//     draw_set_halign(fa_center);
//     draw_set_valign(fa_middle);
//     draw_set_color(c_white);
//
//     for ( i=0; i<array_length_1d(title_string); i+=1 ){
//
//         draw_text(title_x[i],title_y[i],title_string[i]);
//     }
//
//
// // Buttons
//
//     for ( i=0; i<array_length_1d(btn_title); i+=1 ){
//
//         btn_x_pos = btn_x[i];
//         btn_y_pos = btn_y[i];
//
//         btn_width = btn_w[i];
//         btn_height = btn_h[i];
//
//         if ( btn_active[i] ){ draw_set_color(c_lime); }
//         else { draw_set_color(c_dkgray); }
//
//         draw_set_halign(btn_align[i]);
//
//         draw_text_transformed(btn_x_pos,btn_y_pos+(btn_height/2),btn_title[i],1,1,0);
//     }
//
// draw_set_color(c_white);
//
// if ( screen_type == 2 ){
// // Checkpoint Selection
//
//     draw_set_color(c_aqua);
//     draw_rectangle(( screen_text_x - 155 ),( screen_text_y - 85 ),( screen_text_x + 155 ),( screen_text_y + 85 ),false);
//
//     draw_set_color(c_black);
//     draw_rectangle(( screen_text_x - 150 ),( screen_text_y - 80 ),( screen_text_x + 150 ),( screen_text_y + 80 ),false);
//
//     draw_set_halign(fa_center);
//
//     draw_set_color(c_white);
//     draw_text(screen_text_x,( screen_text_y - 30 ),lang_text_reset[0] + string(checkpoint_name[reset_checkpoint_id])); // "LEVEL "
//
//     if ( checkpoint_name[reset_checkpoint_id] != "1" and checkpoint_score[reset_checkpoint_id] == 0 ){
//
//         draw_set_color(c_maroon);
//         draw_text(screen_text_x,( screen_text_y + 30 ),lang_text_reset[1]); // "NO SCORE"
//     }
//     else {
//
//         draw_set_color(c_aqua);
//         draw_text(screen_text_x,( screen_text_y + 30 ),lang_text_reset[2] + string(checkpoint_score[reset_checkpoint_id])); // "SCORE:"
//     }
//
//     draw_set_color(c_aqua);
//     draw_triangle(arrow_x1[1],arrow_y1[1],arrow_x1[1],arrow_y2[1],arrow_x2[1],arrow_y1[1]+(arrow_h/2),false);
//     draw_triangle(arrow_x2[0],arrow_y1[0],arrow_x2[0],arrow_y2[0],arrow_x1[0],arrow_y1[0]+(arrow_h/2),false);
//
//     draw_set_color(c_white);
//     draw_set_font(font_beyond_tiny);
//     draw_text(screen_text_x,( screen_text_y + 150 ),lang_text_reset[3]); // "WARNING: ALL CHECKPOINTS AFTER#THE SELECTED ONE WILL BE DELETED"
//
//     // debug // draw_rectangle(arrow_x1[0],arrow_y1[0],arrow_x2[0],arrow_y2[0],false);
//     // debug // draw_rectangle(arrow_x1[1],arrow_y1[1],arrow_x2[1],arrow_y2[1],false);
// }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_win_reset_Draw_0(_inst, _other) {
    {
        draw_set_color(0);
        draw_set_alpha(0.9);
        draw_rectangle((-10), (-10), (_inst.gmlworld_width_draw + 10), (_inst.gmlworld_height_draw + 10), 0);
        draw_set_alpha(1);
        draw_set_font(2);
        draw_set_halign(1);
        draw_set_valign(1);
        draw_set_color(16777215);
        for (_inst.gmli = 0;
            (_inst.gmli < array_length_1d(_inst.gmltitle_string)); _inst.gmli += 1) {
            {
                draw_text(_inst.gmltitle_x[_inst.gmli], _inst.gmltitle_y[_inst.gmli], _inst.gmltitle_string[_inst.gmli]);
            }
        };
        for (_inst.gmli = 0;
            (_inst.gmli < array_length_1d(_inst.gmlbtn_title)); _inst.gmli += 1) {
            {
                _inst.gmlbtn_x_pos = _inst.gmlbtn_x[_inst.gmli];
                _inst.gmlbtn_y_pos = _inst.gmlbtn_y[_inst.gmli];
                _inst.gmlbtn_width = _inst.gmlbtn_w[_inst.gmli];
                _inst.gmlbtn_height = _inst.gmlbtn_h[_inst.gmli];
                if (_inst.gmlbtn_active[_inst.gmli] > 0.5) {
                    {
                        draw_set_color(65280);
                    };
                } else {
                    {
                        draw_set_color(4210752);
                    };
                };
                draw_set_halign(_inst.gmlbtn_align[_inst.gmli]);
                draw_text_transformed(_inst.gmlbtn_x_pos, (_inst.gmlbtn_y_pos + (_inst.gmlbtn_height / 2)), _inst.gmlbtn_title[_inst.gmli], 1, 1, 0);
            }
        };
        draw_set_color(16777215);
        if ((_inst.gmlscreen_type == 2)) {
            {
                draw_set_color(16776960);
                draw_rectangle((_inst.gmlscreen_text_x - 155), (_inst.gmlscreen_text_y - 85), (_inst.gmlscreen_text_x + 155), (_inst.gmlscreen_text_y + 85), 0);
                draw_set_color(0);
                draw_rectangle((_inst.gmlscreen_text_x - 150), (_inst.gmlscreen_text_y - 80), (_inst.gmlscreen_text_x + 150), (_inst.gmlscreen_text_y + 80), 0);
                draw_set_halign(1);
                draw_set_color(16777215);
                draw_text(_inst.gmlscreen_text_x, (_inst.gmlscreen_text_y - 30), (_inst.gmllang_text_reset[0] + string(_inst.gmlcheckpoint_name[_inst.gmlreset_checkpoint_id])));
                if ((((_inst.gmlcheckpoint_name[_inst.gmlreset_checkpoint_id] != "1")) && ((_inst.gmlcheckpoint_score[_inst.gmlreset_checkpoint_id] == 0)))) {
                    {
                        draw_set_color(128);
                        draw_text(_inst.gmlscreen_text_x, (_inst.gmlscreen_text_y + 30), _inst.gmllang_text_reset[1]);
                    };
                } else {
                    {
                        draw_set_color(16776960);
                        draw_text(_inst.gmlscreen_text_x, (_inst.gmlscreen_text_y + 30), (_inst.gmllang_text_reset[2] + string(_inst.gmlcheckpoint_score[_inst.gmlreset_checkpoint_id])));
                    };
                };
                draw_set_color(16776960);
                draw_triangle(_inst.gmlarrow_x1[1], _inst.gmlarrow_y1[1], _inst.gmlarrow_x1[1], _inst.gmlarrow_y2[1], _inst.gmlarrow_x2[1], (_inst.gmlarrow_y1[1] + (_inst.gmlarrow_h / 2)), 0);
                draw_triangle(_inst.gmlarrow_x2[0], _inst.gmlarrow_y1[0], _inst.gmlarrow_x2[0], _inst.gmlarrow_y2[0], _inst.gmlarrow_x1[0], (_inst.gmlarrow_y1[0] + (_inst.gmlarrow_h / 2)), 0);
                draw_set_color(16777215);
                draw_set_font(3);
                draw_text(_inst.gmlscreen_text_x, (_inst.gmlscreen_text_y + 150), _inst.gmllang_text_reset[3]);
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_win_sidemenu_CreateEvent_1 1
// /// Language : Load
//
//     scr_dialog_load();
//
//     // scr_language_load();
//
//
// /* */
// #line gml_Object_obj_win_sidemenu_CreateEvent_2 1
// /// Variables Init
//
//     // World
//
//         scr_world_ratio();
//
//
//     // General
//
//         menu_w = 400;
//
//         click_ready = false;
//
//
//     // Menu Items
//
//         var item_id = 0;
//
//         var menu_item_x = world_width_draw - menu_w + 35; // game_mode_name
//         var menu_item_y = 40;
//
//         menu_title_x = menu_item_x + 60;
//         menu_title_y = menu_item_y;
//
//         menu_item_y += 100;
//
//         if ( global.game_mode == 1 ){
//
//             array_menu_item_x[item_id] = menu_item_x; // course name
//             array_menu_item_y[item_id] = menu_item_y;
//             array_menu_item_color[item_id] = c_aqua;
//
//             if ( global.game_submode == 1 ){ array_menu_item_string[item_id] = lang_text_modes[14]; }
//             else if ( global.game_submode == 2 ){ array_menu_item_string[item_id] = lang_text_modes[15]; }
//             else if ( global.game_submode == 3 ){ array_menu_item_string[item_id] = lang_text_modes[16]; }
//
//             // array_menu_item_string[item_id] = ( string(obj_ctrl_board.game_mode_1_max_level[global.game_submode]) + "h" ); // "COURSE " lang_text_side[0]
//
//             menu_item_x += 10;
//             menu_item_y += 55;
//
//             item_id += 1;
//
//             array_menu_item_x[item_id] = menu_item_x; // hole #
//             array_menu_item_y[item_id] = menu_item_y;
//             array_menu_item_color[item_id] = c_white;
//             array_menu_item_string[item_id] = "-" + ( lang_text_side[1] + string(obj_ctrl_board.game_levels_curr)); // "HOLE:"
//
//             menu_item_y += 45;
//
//             item_id += 1;
//
//             array_menu_item_x[item_id] = menu_item_x; // hits
//             array_menu_item_y[item_id] = menu_item_y;
//             array_menu_item_color[item_id] = c_white;
//             array_menu_item_string[item_id] = "-" + ( lang_text_side[2] + string(obj_ctrl_board.game_levels_hits_total)); // "HITS:"
//
//             menu_item_y += 45;
//
//             item_id += 1;
//
//             array_menu_item_x[item_id] = menu_item_x; // best hits
//             array_menu_item_y[item_id] = menu_item_y;
//             array_menu_item_color[item_id] = c_red;
//             array_menu_item_string[item_id] = "-" + ( lang_text_side[3] + string(obj_ctrl_board.game_mode_1_hits_best[global.game_submode])); // "BEST:"
//         }
//         else if (( global.game_mode == 2 ) or ( global.game_mode == 3 ) or ( global.game_mode == 4 )){
//
//             array_menu_item_x[item_id] = menu_item_x;
//             array_menu_item_y[item_id] = menu_item_y;
//             array_menu_item_color[item_id] = c_aqua;
//             array_menu_item_string[item_id] = scr_game_mode_name(global.game_mode);
//
//             item_id += 1;
//
//             menu_item_x += 10;
//             menu_item_y += 55;
//
//             array_menu_item_x[item_id] = menu_item_x; // best hits
//             array_menu_item_y[item_id] = menu_item_y;
//             array_menu_item_color[item_id] = c_red;
//
//             if ( global.game_mode == 2 ){
//
//                 array_menu_item_string[item_id] = "-" + ( lang_text_side[4] + string(obj_ctrl_board.game_mode_2_holes_record));
//             }
//             if ( global.game_mode == 3 ){
//
//                 array_menu_item_string[item_id] = "-" + ( lang_text_side[4] + string(obj_ctrl_board.game_mode_3_holes_record));
//             }
//             if ( global.game_mode == 4 ){
//
//                 array_menu_item_string[item_id] = "-" + ( lang_text_side[4] + string(obj_ctrl_board.game_mode_4_holes_record));
//             }
//         }
//         else {
//
//             array_menu_item_x[item_id] = menu_item_x + 30;
//             array_menu_item_y[item_id] = menu_item_y;
//             array_menu_item_color[item_id] = c_aqua;
//             array_menu_item_string[item_id] = scr_game_mode_name(global.game_mode);
//         }
//
//         menu_item_x = world_width_draw - menu_w + 35;
//         menu_item_y += 80;
//
//         // Buttons
//
//         btn_w[0] = 91;
//         btn_h[0] = 91;
//         btn_x[0] = world_width_draw - btn_w[0] - 15;
//         btn_y[0] = world_height_draw - btn_w[0] - 15;
//         btn_string[0] = ""; // "MAIN MENU";
//         btn_action[0] = 19;
//
//         menu_item_y += 55;
//
//         btn_w[1] = 91;
//         btn_h[1] = 91;
//         btn_x[1] = world_width_draw - btn_w[1] - 15;
//         btn_y[1] = 15;
//         btn_string[1] = "" // "RESUME";
//         btn_action[1] = 20;
//
//         menu_item_y += 55;
//
//         btn_w[2] = 91;
//         btn_h[2] = 91;
//         btn_x[2] = world_width_draw - btn_w[2] - btn_w[0] - 30;
//         btn_y[2] = world_height_draw - btn_w[2] - 15;
//         btn_string[2] = ""; // Mute;
//         btn_action[2] = 27;
//
//
//     // Pause Surface
//
//         surf_pause = surface_create(global.win_w,global.win_h);
//
//         surface_set_target(surf_pause);
//
//             draw_clear_alpha(c_white, 0);
//
//             draw_set_alpha(1);
//
//             draw_surface(application_surface,0,0);
//
//         surface_reset_target();
//
//
//     // Famobi
//
//         famobi_active = global.famobi_active;
//
//         js_Pause_active = obj_ctrl_board.js_Pause_active;
//
//         if ( famobi_active and js_Pause_active ){ click_ready = true; }
//
//
//     // Pause Game
//
//         physics_pause_enable(true);
//
//         instance_deactivate_all(true);
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_win_sidemenu_Create_0(_inst, _other) {
    window.famobi_analytics.trackScreen(global.gmlgame_submode === 0 ? "SCREEN_LEVELRESULT" : "SCREEN_PAUSE"); {
        gml_Script_scr_dialog_load(_inst, _other);
        gml_Script_scr_world_ratio(_inst, _other);
        _inst.gmlmenu_w = 400;
        _inst.gmlclick_ready = 0 ? 1 : 0;
        var gmlitem_id = 0;
        var gmlmenu_item_x = (_inst.gmlworld_width_draw - _inst.gmlmenu_w + 35);
        var gmlmenu_item_y = 40;
        _inst.gmlmenu_title_x = (gmlmenu_item_x + 60);
        _inst.gmlmenu_title_y = gmlmenu_item_y;
        gmlmenu_item_y += 100;
        if ((global.gmlgame_mode == 1)) {
            {
                if (!(_inst.gmlarray_menu_item_x instanceof Array)) {
                    _inst.gmlarray_menu_item_x = [];
                    _inst.gmlarray_menu_item_x.__yy_owner = 3623032499;
                } else if (_inst.gmlarray_menu_item_x.__yy_owner !== 3623032499) {
                    _inst.gmlarray_menu_item_x = _inst.gmlarray_menu_item_x.slice(0);
                    _inst.gmlarray_menu_item_x.__yy_owner = 3623032499;
                }
                _inst.gmlarray_menu_item_x[gmlitem_id] = gmlmenu_item_x;
                if (!(_inst.gmlarray_menu_item_y instanceof Array)) {
                    _inst.gmlarray_menu_item_y = [];
                    _inst.gmlarray_menu_item_y.__yy_owner = 3471321074;
                } else if (_inst.gmlarray_menu_item_y.__yy_owner !== 3471321074) {
                    _inst.gmlarray_menu_item_y = _inst.gmlarray_menu_item_y.slice(0);
                    _inst.gmlarray_menu_item_y.__yy_owner = 3471321074;
                }
                _inst.gmlarray_menu_item_y[gmlitem_id] = gmlmenu_item_y;
                if (!(_inst.gmlarray_menu_item_color instanceof Array)) {
                    _inst.gmlarray_menu_item_color = [];
                    _inst.gmlarray_menu_item_color.__yy_owner = 593185606;
                } else if (_inst.gmlarray_menu_item_color.__yy_owner !== 593185606) {
                    _inst.gmlarray_menu_item_color = _inst.gmlarray_menu_item_color.slice(0);
                    _inst.gmlarray_menu_item_color.__yy_owner = 593185606;
                }
                _inst.gmlarray_menu_item_color[gmlitem_id] = 16776960;
                if ((global.gmlgame_submode == 1)) {
                    {
                        if (!(_inst.gmlarray_menu_item_string instanceof Array)) {
                            _inst.gmlarray_menu_item_string = [];
                            _inst.gmlarray_menu_item_string.__yy_owner = 459280736;
                        } else if (_inst.gmlarray_menu_item_string.__yy_owner !== 459280736) {
                            _inst.gmlarray_menu_item_string = _inst.gmlarray_menu_item_string.slice(0);
                            _inst.gmlarray_menu_item_string.__yy_owner = 459280736;
                        }
                        _inst.gmlarray_menu_item_string[gmlitem_id] = _inst.gmllang_text_modes[14];
                    };
                } else {
                    if ((global.gmlgame_submode == 2)) {
                        {
                            if (!(_inst.gmlarray_menu_item_string instanceof Array)) {
                                _inst.gmlarray_menu_item_string = [];
                                _inst.gmlarray_menu_item_string.__yy_owner = 459280736;
                            } else if (_inst.gmlarray_menu_item_string.__yy_owner !== 459280736) {
                                _inst.gmlarray_menu_item_string = _inst.gmlarray_menu_item_string.slice(0);
                                _inst.gmlarray_menu_item_string.__yy_owner = 459280736;
                            }
                            _inst.gmlarray_menu_item_string[gmlitem_id] = _inst.gmllang_text_modes[15];
                        };
                    } else {
                        if ((global.gmlgame_submode == 3)) {
                            {
                                if (!(_inst.gmlarray_menu_item_string instanceof Array)) {
                                    _inst.gmlarray_menu_item_string = [];
                                    _inst.gmlarray_menu_item_string.__yy_owner = 459280736;
                                } else if (_inst.gmlarray_menu_item_string.__yy_owner !== 459280736) {
                                    _inst.gmlarray_menu_item_string = _inst.gmlarray_menu_item_string.slice(0);
                                    _inst.gmlarray_menu_item_string.__yy_owner = 459280736;
                                }
                                _inst.gmlarray_menu_item_string[gmlitem_id] = _inst.gmllang_text_modes[16];
                            };
                        };
                    };
                };
                gmlmenu_item_x += 10;
                gmlmenu_item_y += 55;
                gmlitem_id += 1;
                _inst.gmlarray_menu_item_x[gmlitem_id] = gmlmenu_item_x;
                _inst.gmlarray_menu_item_y[gmlitem_id] = gmlmenu_item_y;
                _inst.gmlarray_menu_item_color[gmlitem_id] = 16777215;
                if (!(_inst.gmlarray_menu_item_string instanceof Array)) {
                    _inst.gmlarray_menu_item_string = [];
                    _inst.gmlarray_menu_item_string.__yy_owner = 459280736;
                } else if (_inst.gmlarray_menu_item_string.__yy_owner !== 459280736) {
                    _inst.gmlarray_menu_item_string = _inst.gmlarray_menu_item_string.slice(0);
                    _inst.gmlarray_menu_item_string.__yy_owner = 459280736;
                }
                _inst.gmlarray_menu_item_string[gmlitem_id] = ("-" + (_inst.gmllang_text_side[1] + string(yyInst(2).gmlgame_levels_curr)));
                gmlmenu_item_y += 45;
                gmlitem_id += 1;
                _inst.gmlarray_menu_item_x[gmlitem_id] = gmlmenu_item_x;
                _inst.gmlarray_menu_item_y[gmlitem_id] = gmlmenu_item_y;
                _inst.gmlarray_menu_item_color[gmlitem_id] = 16777215;
                _inst.gmlarray_menu_item_string[gmlitem_id] = ("-" + (_inst.gmllang_text_side[2] + string(yyInst(2).gmlgame_levels_hits_total)));
                gmlmenu_item_y += 45;
                gmlitem_id += 1;
                _inst.gmlarray_menu_item_x[gmlitem_id] = gmlmenu_item_x;
                _inst.gmlarray_menu_item_y[gmlitem_id] = gmlmenu_item_y;
                _inst.gmlarray_menu_item_color[gmlitem_id] = 255;
                _inst.gmlarray_menu_item_string[gmlitem_id] = ("-" + (_inst.gmllang_text_side[3] + string(yyInst(2).gmlgame_mode_1_hits_best[global.gmlgame_submode])));
            };
        } else {
            if ((((global.gmlgame_mode == 2)) || ((global.gmlgame_mode == 3)) || ((global.gmlgame_mode == 4)))) {
                {
                    if (!(_inst.gmlarray_menu_item_x instanceof Array)) {
                        _inst.gmlarray_menu_item_x = [];
                        _inst.gmlarray_menu_item_x.__yy_owner = 3623032499;
                    } else if (_inst.gmlarray_menu_item_x.__yy_owner !== 3623032499) {
                        _inst.gmlarray_menu_item_x = _inst.gmlarray_menu_item_x.slice(0);
                        _inst.gmlarray_menu_item_x.__yy_owner = 3623032499;
                    }
                    _inst.gmlarray_menu_item_x[gmlitem_id] = gmlmenu_item_x;
                    if (!(_inst.gmlarray_menu_item_y instanceof Array)) {
                        _inst.gmlarray_menu_item_y = [];
                        _inst.gmlarray_menu_item_y.__yy_owner = 3471321074;
                    } else if (_inst.gmlarray_menu_item_y.__yy_owner !== 3471321074) {
                        _inst.gmlarray_menu_item_y = _inst.gmlarray_menu_item_y.slice(0);
                        _inst.gmlarray_menu_item_y.__yy_owner = 3471321074;
                    }
                    _inst.gmlarray_menu_item_y[gmlitem_id] = gmlmenu_item_y;
                    if (!(_inst.gmlarray_menu_item_color instanceof Array)) {
                        _inst.gmlarray_menu_item_color = [];
                        _inst.gmlarray_menu_item_color.__yy_owner = 593185606;
                    } else if (_inst.gmlarray_menu_item_color.__yy_owner !== 593185606) {
                        _inst.gmlarray_menu_item_color = _inst.gmlarray_menu_item_color.slice(0);
                        _inst.gmlarray_menu_item_color.__yy_owner = 593185606;
                    }
                    _inst.gmlarray_menu_item_color[gmlitem_id] = 16776960;
                    if (!(_inst.gmlarray_menu_item_string instanceof Array)) {
                        _inst.gmlarray_menu_item_string = [];
                        _inst.gmlarray_menu_item_string.__yy_owner = 459280736;
                    } else if (_inst.gmlarray_menu_item_string.__yy_owner !== 459280736) {
                        _inst.gmlarray_menu_item_string = _inst.gmlarray_menu_item_string.slice(0);
                        _inst.gmlarray_menu_item_string.__yy_owner = 459280736;
                    }
                    _inst.gmlarray_menu_item_string[gmlitem_id] = gml_Script_scr_game_mode_name(_inst, _other, global.gmlgame_mode);
                    gmlitem_id += 1;
                    gmlmenu_item_x += 10;
                    gmlmenu_item_y += 55;
                    _inst.gmlarray_menu_item_x[gmlitem_id] = gmlmenu_item_x;
                    _inst.gmlarray_menu_item_y[gmlitem_id] = gmlmenu_item_y;
                    _inst.gmlarray_menu_item_color[gmlitem_id] = 255;
                    if ((global.gmlgame_mode == 2)) {
                        {
                            _inst.gmlarray_menu_item_string[gmlitem_id] = ("-" + (_inst.gmllang_text_side[4] + string(yyInst(2).gmlgame_mode_2_holes_record)));
                        };
                    };
                    if ((global.gmlgame_mode == 3)) {
                        {
                            _inst.gmlarray_menu_item_string[gmlitem_id] = ("-" + (_inst.gmllang_text_side[4] + string(yyInst(2).gmlgame_mode_3_holes_record)));
                        };
                    };
                    if ((global.gmlgame_mode == 4)) {
                        {
                            _inst.gmlarray_menu_item_string[gmlitem_id] = ("-" + (_inst.gmllang_text_side[4] + string(yyInst(2).gmlgame_mode_4_holes_record)));
                        };
                    };
                };
            } else {
                {
                    if (!(_inst.gmlarray_menu_item_x instanceof Array)) {
                        _inst.gmlarray_menu_item_x = [];
                        _inst.gmlarray_menu_item_x.__yy_owner = 3623032499;
                    } else if (_inst.gmlarray_menu_item_x.__yy_owner !== 3623032499) {
                        _inst.gmlarray_menu_item_x = _inst.gmlarray_menu_item_x.slice(0);
                        _inst.gmlarray_menu_item_x.__yy_owner = 3623032499;
                    }
                    _inst.gmlarray_menu_item_x[gmlitem_id] = (gmlmenu_item_x + 30);
                    if (!(_inst.gmlarray_menu_item_y instanceof Array)) {
                        _inst.gmlarray_menu_item_y = [];
                        _inst.gmlarray_menu_item_y.__yy_owner = 3471321074;
                    } else if (_inst.gmlarray_menu_item_y.__yy_owner !== 3471321074) {
                        _inst.gmlarray_menu_item_y = _inst.gmlarray_menu_item_y.slice(0);
                        _inst.gmlarray_menu_item_y.__yy_owner = 3471321074;
                    }
                    _inst.gmlarray_menu_item_y[gmlitem_id] = gmlmenu_item_y;
                    if (!(_inst.gmlarray_menu_item_color instanceof Array)) {
                        _inst.gmlarray_menu_item_color = [];
                        _inst.gmlarray_menu_item_color.__yy_owner = 593185606;
                    } else if (_inst.gmlarray_menu_item_color.__yy_owner !== 593185606) {
                        _inst.gmlarray_menu_item_color = _inst.gmlarray_menu_item_color.slice(0);
                        _inst.gmlarray_menu_item_color.__yy_owner = 593185606;
                    }
                    _inst.gmlarray_menu_item_color[gmlitem_id] = 16776960;
                    if (!(_inst.gmlarray_menu_item_string instanceof Array)) {
                        _inst.gmlarray_menu_item_string = [];
                        _inst.gmlarray_menu_item_string.__yy_owner = 459280736;
                    } else if (_inst.gmlarray_menu_item_string.__yy_owner !== 459280736) {
                        _inst.gmlarray_menu_item_string = _inst.gmlarray_menu_item_string.slice(0);
                        _inst.gmlarray_menu_item_string.__yy_owner = 459280736;
                    }
                    _inst.gmlarray_menu_item_string[gmlitem_id] = gml_Script_scr_game_mode_name(_inst, _other, global.gmlgame_mode);
                };
            };
        };
        gmlmenu_item_x = (_inst.gmlworld_width_draw - _inst.gmlmenu_w + 35);
        gmlmenu_item_y += 80;
        if (!(_inst.gmlbtn_w instanceof Array)) {
            _inst.gmlbtn_w = [];
            _inst.gmlbtn_w.__yy_owner = 3123904953;
        } else if (_inst.gmlbtn_w.__yy_owner !== 3123904953) {
            _inst.gmlbtn_w = _inst.gmlbtn_w.slice(0);
            _inst.gmlbtn_w.__yy_owner = 3123904953;
        }
        _inst.gmlbtn_w[0] = 91;
        if (!(_inst.gmlbtn_h instanceof Array)) {
            _inst.gmlbtn_h = [];
            _inst.gmlbtn_h.__yy_owner = 2003373863;
        } else if (_inst.gmlbtn_h.__yy_owner !== 2003373863) {
            _inst.gmlbtn_h = _inst.gmlbtn_h.slice(0);
            _inst.gmlbtn_h.__yy_owner = 2003373863;
        }
        _inst.gmlbtn_h[0] = 91;
        if (!(_inst.gmlbtn_x instanceof Array)) {
            _inst.gmlbtn_x = [];
            _inst.gmlbtn_x.__yy_owner = 1034624374;
        } else if (_inst.gmlbtn_x.__yy_owner !== 1034624374) {
            _inst.gmlbtn_x = _inst.gmlbtn_x.slice(0);
            _inst.gmlbtn_x.__yy_owner = 1034624374;
        }
        _inst.gmlbtn_x[0] = (_inst.gmlworld_width_draw - _inst.gmlbtn_w[0] - 15);
        if (!(_inst.gmlbtn_y instanceof Array)) {
            _inst.gmlbtn_y = [];
            _inst.gmlbtn_y.__yy_owner = 615525431;
        } else if (_inst.gmlbtn_y.__yy_owner !== 615525431) {
            _inst.gmlbtn_y = _inst.gmlbtn_y.slice(0);
            _inst.gmlbtn_y.__yy_owner = 615525431;
        }
        _inst.gmlbtn_y[0] = (_inst.gmlworld_height_draw - _inst.gmlbtn_w[0] - 15);
        if (!(_inst.gmlbtn_string instanceof Array)) {
            _inst.gmlbtn_string = [];
            _inst.gmlbtn_string.__yy_owner = 649091954;
        } else if (_inst.gmlbtn_string.__yy_owner !== 649091954) {
            _inst.gmlbtn_string = _inst.gmlbtn_string.slice(0);
            _inst.gmlbtn_string.__yy_owner = 649091954;
        }
        _inst.gmlbtn_string[0] = "";
        if (!(_inst.gmlbtn_action instanceof Array)) {
            _inst.gmlbtn_action = [];
            _inst.gmlbtn_action.__yy_owner = 2901436203;
        } else if (_inst.gmlbtn_action.__yy_owner !== 2901436203) {
            _inst.gmlbtn_action = _inst.gmlbtn_action.slice(0);
            _inst.gmlbtn_action.__yy_owner = 2901436203;
        }
        _inst.gmlbtn_action[0] = 19;
        gmlmenu_item_y += 55;
        _inst.gmlbtn_w[1] = 91;
        _inst.gmlbtn_h[1] = 91;
        _inst.gmlbtn_x[1] = (_inst.gmlworld_width_draw - _inst.gmlbtn_w[1] - 15);
        _inst.gmlbtn_y[1] = 15;
        _inst.gmlbtn_string[1] = "";
        _inst.gmlbtn_action[1] = 20;
        gmlmenu_item_y += 55;
        _inst.gmlbtn_w[2] = 91;
        _inst.gmlbtn_h[2] = 91;
        _inst.gmlbtn_x[2] = (_inst.gmlworld_width_draw - _inst.gmlbtn_w[2] - _inst.gmlbtn_w[0] - 30);
        _inst.gmlbtn_y[2] = (_inst.gmlworld_height_draw - _inst.gmlbtn_w[2] - 15);
        _inst.gmlbtn_string[2] = "";
        _inst.gmlbtn_action[2] = 27;
        _inst.gmlsurf_pause = surface_create(global.gmlwin_w, global.gmlwin_h);
        surface_set_target(_inst.gmlsurf_pause);
        draw_clear_alpha(16777215, 0);
        draw_set_alpha(1);
        draw_surface(g_pBuiltIn.application_surface, 0, 0);
        surface_reset_target();
        _inst.gmlfamobi_active = global.gmlfamobi_active;
        _inst.gmljs_Pause_active = yyInst(2).gmljs_Pause_active;
        if (((_inst.gmlfamobi_active > 0.5) && (_inst.gmljs_Pause_active > 0.5))) {
            {
                _inst.gmlclick_ready = 1 ? 1 : 0;
            };
        };
        physics_pause_enable(1);
        instance_deactivate_all(_inst, 1);
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_win_sidemenu_DestroyEvent_1 1
// /// On Destroy
//
//     surface_free(surf_pause);
//
//     instance_activate_all();
//
//     physics_pause_enable(false);
//
//     global.win_popup_active = false;
//
//
//     if ( famobi_active ){
//
//         js_Pause_active = false;
//
//         with ( obj_ctrl_board ){ js_Pause_active = false; }
//
//         famobi_onResumeRequested();
//     }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_win_sidemenu_Destroy_0(_inst, _other) {
    {
        surface_free(_inst.gmlsurf_pause);
        instance_activate_all(_inst);
        physics_pause_enable(0);
        global.gmlwin_popup_active = 0 ? 1 : 0;
        if (_inst.gmlfamobi_active > 0.5) {
            {
                _inst.gmljs_Pause_active = 0 ? 1 : 0; {
                    var __yy__v112 = GetWithArray(2);
                    for (var __yy__v113 in __yy__v112) {
                        if (!__yy__v112.hasOwnProperty(__yy__v113)) continue;
                        var __yy__v114 = __yy__v112[__yy__v113];
                        if (__yy__v114.marked) continue;
                        if (!__yy__v114.active) continue; {
                            __yy__v114.gmljs_Pause_active = 0 ? 1 : 0;
                        }
                    }
                };
                famobi_onResumeRequested();
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_win_sidemenu_StepNormalEvent_1 1
// /// [ famobi ] Pause Request
//
//     if ( famobi_active and js_Pause_active ){
//
//         if ( !famobi_getJSpause() ){
//
//             // Resume
//
//             scr_btn_action(btn_action[1]);
//         }
//     }
//
// /* */
// /*  */ }
//
function gml_Object_obj_win_sidemenu_Step_0(_inst, _other) {
    {
        if (((_inst.gmlfamobi_active > 0.5) && (_inst.gmljs_Pause_active > 0.5))) {
            {
                if (!(famobi_getJSpause() > 0.5)) {
                    {
                        gml_Script_scr_btn_action(_inst, _other, _inst.gmlbtn_action[1]);
                    };
                };
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_win_sidemenu_GlobalLeftButtonReleased_1 1
// /// Button Click
//
// // Standard Buttons
//
//     if ( click_ready ){
//
//         var btn_clicked = -1;
//
//         for ( var i=0; i<array_length_1d(btn_x); i+=1 ){
//
//             if ((( mouse_x > btn_x[i] ) and ( mouse_x < ( btn_x[i] + btn_w[i] ))) and ( mouse_y > btn_y[i] and mouse_y < btn_y[i] + btn_h[i] )){
//
//                 btn_clicked = i;
//             }
//         }
//
//         if ( btn_clicked != -1 ){
//
//             scr_btn_action(btn_action[btn_clicked]);
//         }
//     }
//
//     click_ready = true;
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_win_sidemenu_Mouse_56(_inst, _other) {
    {
        if (_inst.gmlclick_ready > 0.5) {
            {
                var gmlbtn_clicked = (-1);
                for (var gmli = 0;
                    (gmli < array_length_1d(_inst.gmlbtn_x)); gmli += 1) {
                    {
                        if ((((((g_pBuiltIn.mouse_x > _inst.gmlbtn_x[gmli])) && ((g_pBuiltIn.mouse_x < (_inst.gmlbtn_x[gmli] + _inst.gmlbtn_w[gmli]))))) && ((((g_pBuiltIn.mouse_y > _inst.gmlbtn_y[gmli])) && ((g_pBuiltIn.mouse_y < (_inst.gmlbtn_y[gmli] + _inst.gmlbtn_h[gmli]))))))) {
                            {
                                gmlbtn_clicked = gmli;
                            };
                        };
                    }
                };
                if ((gmlbtn_clicked != (-1))) {
                    {
                        gml_Script_scr_btn_action(_inst, _other, _inst.gmlbtn_action[gmlbtn_clicked]);
                    };
                };
            };
        };
        _inst.gmlclick_ready = 1 ? 1 : 0;
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_win_sidemenu_DrawGUI_1 1
// /// [ DEBUG ] Draws
// /*
// draw_set_font(font_pixel_arial_12);
//
// draw_set_color(c_white);
//
// draw_set_halign(fa_left);
// draw_set_valign(fa_top);
//
// var x_pos = 15;
// var y_pos = 150;
//
// draw_text(x_pos,y_pos, "world_pause_ratio: " + string(world_pause_ratio));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "view_wview[0]: " + string(view_wview[0]));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "view_wport[0]: " + string(view_wport[0]));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "global.win_w: " + string(global.win_w));
//
// y_pos += 25;
//
//
// draw_text(x_pos,y_pos, "famobi_active: " + string(famobi_active));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "js_Pause_active: " + string(js_Pause_active));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "famobi_getJSpause: " + string(famobi_getJSpause()));
//
// y_pos += 25;
//
// draw_text(x_pos,y_pos, "click_ready: " + string(click_ready));
//
// y_pos += 25;
// */
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_win_sidemenu_Draw_64(_inst, _other) {
    {};
}

// #####################################################################################################
// {
// #line gml_Object_obj_win_sidemenu_DrawEvent_1 1
// /// Draw Items
//
//     // Background
//
//         draw_surface_ext(surf_pause,0,0,world_pause_ratio,world_pause_ratio,0,c_white,1);
//
//         draw_set_color(c_black);
//         draw_set_alpha(0.9);
//
//         draw_rectangle(world_width_draw-menu_w,-10,world_width_draw+10,world_height_draw+10,false);
//
//         draw_line_width_colour(world_width_draw-menu_w,-10,world_width_draw-menu_w,world_height_draw+10,3,c_dkgray,c_dkgray);
//
//         draw_set_alpha(1);
//
//
//     // Menu Items
//
//         draw_set_font(font_beyond_sml);
//         draw_set_valign(fa_top);
//         draw_set_halign(fa_left);
//         draw_set_color(c_white);
//
//         draw_text(menu_title_x,menu_title_y,lang_text_side[7]);
//
//         for ( var i=0; i<array_length_1d(array_menu_item_x); i+=1 ){
//
//             draw_set_color(array_menu_item_color[i]);
//
//             draw_text(array_menu_item_x[i],array_menu_item_y[i],array_menu_item_string[i]);
//         }
//
//
//
//     // Buttons
//
//         draw_sprite(spr_btn_home,0,btn_x[0],btn_y[0]) // Main Menu
//
//         draw_sprite(spr_icon_play_pause_png,0,btn_x[1],btn_y[1]) // Resume
//
//         draw_sprite(spr_btn_volume,global.volume_master,btn_x[2]+45,btn_y[2]) // Mute
//
//         /* for ( var i=0; i<array_length_1d(btn_x); i+=1 ){
//
//             draw_set_color(c_lime);
//
//             draw_text(btn_x[i],btn_y[i],btn_string[i]);
//         }*/
//
//         // draw_sprite(spr_icon_volume,global.volume_master,btn_x[2],btn_y[2]);
//
//         /*
//         var menu_item_x = world_width_draw - menu_w + 35;
//         var menu_item_y = 25;
//
//         draw_text(menu_item_x,menu_item_y,game_mode_name);
//
//         if ( global.game_mode == 1 ){
//
//             menu_item_y += 40;
//
//             draw_set_color(c_white);
//             draw_text(menu_item_x,menu_item_y,"COURSE " + string(obj_menu_main.game_mode_1_max_level[global.game_submode]) + "h");
//
//             menu_item_x += 25;
//             menu_item_y += 80;
//
//             draw_text(menu_item_x,menu_item_y,"HOLE:" + string(obj_menu_main.game_levels_curr));
//
//             menu_item_y += 45;
//
//             draw_text(menu_item_x,menu_item_y,"HITS:" + string(obj_menu_main.game_levels_hits_total));
//
//             menu_item_y += 45;
//
//             draw_set_color(c_red);
//             draw_text(menu_item_x,menu_item_y,"BEST:" + string(obj_menu_main.game_mode_1_hits_best[global.game_submode]));
//         }
//         */
//
//
//
// /* */
// #line gml_Object_obj_win_sidemenu_DrawEvent_2 1
// /// [ DEBUG ] Buttons
// /*
// draw_set_alpha(0.5);
//
// for ( var i=0; i<array_length_1d(btn_x); i+=1 ){
//
//     draw_rectangle_colour(btn_x[i],btn_y[i],btn_x[i]+btn_w[i],btn_y[i]+btn_h[i],c_gray,c_gray,c_gray,c_gray,false);
// }
//
// draw_set_alpha(1);
// */
//
// /* */
// /*  */ }
//
function gml_Object_obj_win_sidemenu_Draw_0(_inst, _other) {
    {
        draw_surface_ext(_inst.gmlsurf_pause, 0, 0, _inst.gmlworld_pause_ratio, _inst.gmlworld_pause_ratio, 0, 16777215, 1);
        draw_set_color(0);
        draw_set_alpha(0.9);
        draw_rectangle((_inst.gmlworld_width_draw - _inst.gmlmenu_w), (-10), (_inst.gmlworld_width_draw + 10), (_inst.gmlworld_height_draw + 10), 0);
        draw_line_width_colour((_inst.gmlworld_width_draw - _inst.gmlmenu_w), (-10), (_inst.gmlworld_width_draw - _inst.gmlmenu_w), (_inst.gmlworld_height_draw + 10), 3, 4210752, 4210752);
        draw_set_alpha(1);
        draw_set_font(2);
        draw_set_valign(0);
        draw_set_halign(0);
        draw_set_color(16777215);
        draw_text(_inst.gmlmenu_title_x, _inst.gmlmenu_title_y, _inst.gmllang_text_side[7]);
        for (var gmli = 0;
            (gmli < array_length_1d(_inst.gmlarray_menu_item_x)); gmli += 1) {
            {
                draw_set_color(_inst.gmlarray_menu_item_color[gmli]);
                draw_text(_inst.gmlarray_menu_item_x[gmli], _inst.gmlarray_menu_item_y[gmli], _inst.gmlarray_menu_item_string[gmli]);
            }
        };
        draw_sprite(_inst, 19, 0, _inst.gmlbtn_x[0], _inst.gmlbtn_y[0]);
        draw_sprite(_inst, 13, 0, _inst.gmlbtn_x[1], _inst.gmlbtn_y[1]);
        draw_sprite(_inst, 18, global.gmlvolume_master, (_inst.gmlbtn_x[2] + 45), _inst.gmlbtn_y[2]);
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_tutorial_pointer_CreateEvent_1 1
// /// Variables Init
//
//     tutorial_step = 0;
//
//     master_alpha = 0;
//
//     tutorial_ready = false;
//
//     cursor_alpha = 0;
//
//     cursor_step = 0;
//
//     // timeline_index = noone;
//
//     tutorial_draw = false;
//
//     tutorial_draw_prev = tutorial_draw;
//
//     help_count = 0;
//
//     cursor_time = 0;
//     cursor_time_run = false;
//
//     first_run = true;
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_tutorial_pointer_Create_0(_inst, _other) {
    {
        _inst.gmltutorial_step = 0;
        _inst.gmlmaster_alpha = 0;
        _inst.gmltutorial_ready = 0 ? 1 : 0;
        _inst.gmlcursor_alpha = 0;
        _inst.gmlcursor_step = 0;
        _inst.gmltutorial_draw = 0 ? 1 : 0;
        _inst.gmltutorial_draw_prev = _inst.gmltutorial_draw;
        _inst.gmlhelp_count = 0;
        _inst.gmlcursor_time = 0;
        _inst.gmlcursor_time_run = 0 ? 1 : 0;
        _inst.gmlfirst_run = 1 ? 1 : 0;
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_tutorial_pointer_ObjAlarm2_1 1
// /// Timeline Run
//
//     cursor_time = 0;
//     cursor_time_run = true;
//
//     /*
//     timeline_index = timeline_tutorial;
//     timeline_position = 0;
//     timeline_running = true;
//     */
//
// /* */
// /*  */ }
//
function gml_Object_obj_tutorial_pointer_Alarm_2(_inst, _other) {
    {
        _inst.gmlcursor_time = 0;
        _inst.gmlcursor_time_run = 1 ? 1 : 0;
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_tutorial_pointer_ObjAlarm1_1 1
// /// Cursor Tween
//
//     var path_distance = scr_tween_1(cursor_tween_step,cursor_tween_start,cursor_tween_end,cursor_tween_step_max);
//
//     // path_distance = ( cursor_tween_end / cursor_tween_step_max ) * cursor_tween_step
//
//     cursor_x = cursor_x_base + lengthdir_x(path_distance,cursor_path_angle);
//
//     cursor_y = cursor_y_base + lengthdir_y(path_distance,cursor_path_angle);
//
//     cursor_tween_step += 1;
//
//     if ( cursor_tween_step < cursor_tween_step_max ){
//
//         alarm[1] = 1;
//     }
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_tutorial_pointer_Alarm_1(_inst, _other) {
    {
        var gmlpath_distance = gml_Script_scr_tween_1(_inst, _other, _inst.gmlcursor_tween_step, _inst.gmlcursor_tween_start, _inst.gmlcursor_tween_end, _inst.gmlcursor_tween_step_max);
        _inst.gmlcursor_x = (_inst.gmlcursor_x_base + lengthdir_x(gmlpath_distance, _inst.gmlcursor_path_angle));
        _inst.gmlcursor_y = (_inst.gmlcursor_y_base + lengthdir_y(gmlpath_distance, _inst.gmlcursor_path_angle));
        _inst.gmlcursor_tween_step += 1;
        if ((_inst.gmlcursor_tween_step < _inst.gmlcursor_tween_step_max)) {
            {
                if (!(_inst.alarm instanceof Array)) {
                    _inst.alarm = [];
                    _inst.alarm.__yy_owner = 1584050178;
                } else if (_inst.alarm.__yy_owner !== 1584050178) {
                    _inst.alarm = _inst.alarm.slice(0);
                    _inst.alarm.__yy_owner = 1584050178;
                }
                _inst.alarm[1] = 1;
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_tutorial_pointer_StepNormalEvent_1 1
// /// Fade In
//
// if ( !tutorial_ready and tutorial_draw ){
//
//     master_alpha += 0.05;
//
//     if ( master_alpha > 1 ){
//
//         master_alpha = 1;
//
//         tutorial_ready = true;
//
//         if ( first_run ){
//
//             alarm[2] = 5; // Run Timeline
//
//             first_run = false;
//         }
//     }
// }
//
//
// /* */
// #line gml_Object_obj_tutorial_pointer_StepNormalEvent_2 1
// /// Ball in Hole
//
// if ( obj_ctrl_board.ball_inst != 0 ){
//
//     if ( obj_ctrl_board.ball_in_hole ){
//
//         scr_tutorial_destroy();
//
//         // master_alpha -= 0.05;
//         // if ( master_alpha < 0 ){}
//     }
// }
//
//
// /* */
// #line gml_Object_obj_tutorial_pointer_StepNormalEvent_3 1
// /// Cursor Steps
//
// if ( cursor_step == 1 ){
//
//     cursor_alpha += 0.02;
//
//     if ( cursor_alpha > 1 ){
//
//         cursor_alpha = 1;
//     }
// }
//
//
// /* */
// #line gml_Object_obj_tutorial_pointer_StepNormalEvent_4 1
// /// Tutorial : Draw Check
//
// if ( obj_ctrl_board.ball_inst != 0 ){
//
//     if ( obj_ctrl_board.ball_inst.phy_active ){
//
//         tutorial_draw = false;
//     }
//     else {
//
//         tutorial_draw = true;
//     }
// }
// else {
//
//     tutorial_draw = false;
// }
//
// if ( !tutorial_draw_prev and tutorial_draw ){
//
//     master_alpha = 0;
//
//     tutorial_ready = false;
//
//     help_count += 1;
//
//     /*
//     if ( cursor_time_run ){
//     // Timelin Reset
//
//         cursor_time_run = false;
//         cursor_time = 0;
//         cursor_tween_step = 0;
//         alarm[1] = -1;
//         alarm[2] = -1;
//     }*/
//
//     if ( help_count > 3 ){ scr_tutorial_destroy(); } // Help Count : Destroy
// }
//
// tutorial_draw_prev = tutorial_draw;
//
//
// /* */
// #line gml_Object_obj_tutorial_pointer_StepNormalEvent_5 1
// /// Timeline : Cursor
//
// if ( cursor_time_run ){
//
//     if ( cursor_time == 0 ){
//     // Variables Init
//
//         cursor_alpha = 0;
//
//         cursor_step = 0;
//
//         cursor_index = 0;
//
//         cursor_tween_step = 0;
//         cursor_tween_step_max = 60;
//         cursor_tween_start = 0;
//         cursor_tween_end = 250;
//
//         cursor_path_angle = 220;
//
//         cursor_x_base = floor( obj_ctrl_board.world_width_draw / 2 ) + 100;
//         cursor_y_base = floor( obj_ctrl_board.world_height_draw / 2 );
//
//         cursor_x = cursor_x_base;
//         cursor_y = cursor_y_base;
//
//     }
//     else if ( cursor_time == 15 ){
//     // Step 1
//
//         cursor_step = 1;
//     }
//     else if ( cursor_time == 30 ){
//     /// Simulate click
//
//         cursor_index = 1;
//
//         cursor_x_base -= 8;
//         cursor_y_base -= 8;
//         cursor_x = cursor_x_base;
//         cursor_y = cursor_y_base;
//     }
//     else if ( cursor_time == 45 ){
//     // Start Tween
//
//         alarm[1] = 1;
//
//         cursor_step = 2;
//     }
//     else if ( cursor_time == 115 ){
//     // Restart Timeline
//
//         alarm[2] = 1;
//
//         cursor_time_run = false;
//     }
//
//     cursor_time += 1;
// }
//
//
// /* */
// #line gml_Object_obj_tutorial_pointer_StepNormalEvent_6 1
// /// [ DISABLED ] Timeline Check
// /*
//     if ( tutorial_draw and timeline_index == noone ){
//
//         timeline_index = timeline_tutorial;
//         timeline_position = 0;
//         timeline_running = true;
//     }
// */
//
// /* */
// /*  */ }
//
function gml_Object_obj_tutorial_pointer_Step_0(_inst, _other) {
    {
        if (((!(_inst.gmltutorial_ready > 0.5)) && (_inst.gmltutorial_draw > 0.5))) {
            {
                _inst.gmlmaster_alpha += 0.05;
                if ((_inst.gmlmaster_alpha > 1)) {
                    {
                        _inst.gmlmaster_alpha = 1;
                        _inst.gmltutorial_ready = 1 ? 1 : 0;
                        if (_inst.gmlfirst_run > 0.5) {
                            {
                                if (!(_inst.alarm instanceof Array)) {
                                    _inst.alarm = [];
                                    _inst.alarm.__yy_owner = 1584050178;
                                } else if (_inst.alarm.__yy_owner !== 1584050178) {
                                    _inst.alarm = _inst.alarm.slice(0);
                                    _inst.alarm.__yy_owner = 1584050178;
                                }
                                _inst.alarm[2] = 5;
                                _inst.gmlfirst_run = 0 ? 1 : 0;
                            };
                        };
                    };
                };
            };
        };
        if ((yyInst(2).gmlball_inst != 0)) {
            {
                if (yyInst(2).gmlball_in_hole > 0.5) {
                    {
                        gml_Script_scr_tutorial_destroy(_inst, _other);
                    };
                };
            };
        };
        if ((_inst.gmlcursor_step == 1)) {
            {
                _inst.gmlcursor_alpha += 0.02;
                if ((_inst.gmlcursor_alpha > 1)) {
                    {
                        _inst.gmlcursor_alpha = 1;
                    };
                };
            };
        };
        if ((yyInst(2).gmlball_inst != 0)) {
            {
                if (yyInst(yyInst(2).gmlball_inst).phy_active > 0.5) {
                    {
                        _inst.gmltutorial_draw = 0 ? 1 : 0;
                    };
                } else {
                    {
                        _inst.gmltutorial_draw = 1 ? 1 : 0;
                    };
                };
            };
        } else {
            {
                _inst.gmltutorial_draw = 0 ? 1 : 0;
            };
        };
        if (((!(_inst.gmltutorial_draw_prev > 0.5)) && (_inst.gmltutorial_draw > 0.5))) {
            {
                _inst.gmlmaster_alpha = 0;
                _inst.gmltutorial_ready = 0 ? 1 : 0;
                _inst.gmlhelp_count += 1;
                if ((_inst.gmlhelp_count > 3)) {
                    {
                        gml_Script_scr_tutorial_destroy(_inst, _other);
                    };
                };
            };
        };
        _inst.gmltutorial_draw_prev = _inst.gmltutorial_draw;
        if (_inst.gmlcursor_time_run > 0.5) {
            {
                if ((_inst.gmlcursor_time == 0)) {
                    {
                        _inst.gmlcursor_alpha = 0;
                        _inst.gmlcursor_step = 0;
                        _inst.gmlcursor_index = 0;
                        _inst.gmlcursor_tween_step = 0;
                        _inst.gmlcursor_tween_step_max = 60;
                        _inst.gmlcursor_tween_start = 0;
                        _inst.gmlcursor_tween_end = 250;
                        _inst.gmlcursor_path_angle = 220;
                        _inst.gmlcursor_x_base = (floor((yyInst(2).gmlworld_width_draw / 2)) + 100);
                        _inst.gmlcursor_y_base = floor((yyInst(2).gmlworld_height_draw / 2));
                        _inst.gmlcursor_x = _inst.gmlcursor_x_base;
                        _inst.gmlcursor_y = _inst.gmlcursor_y_base;
                    };
                } else {
                    if ((_inst.gmlcursor_time == 15)) {
                        {
                            _inst.gmlcursor_step = 1;
                        };
                    } else {
                        if ((_inst.gmlcursor_time == 30)) {
                            {
                                _inst.gmlcursor_index = 1;
                                _inst.gmlcursor_x_base -= 8;
                                _inst.gmlcursor_y_base -= 8;
                                _inst.gmlcursor_x = _inst.gmlcursor_x_base;
                                _inst.gmlcursor_y = _inst.gmlcursor_y_base;
                            };
                        } else {
                            if ((_inst.gmlcursor_time == 45)) {
                                {
                                    if (!(_inst.alarm instanceof Array)) {
                                        _inst.alarm = [];
                                        _inst.alarm.__yy_owner = 1584050178;
                                    } else if (_inst.alarm.__yy_owner !== 1584050178) {
                                        _inst.alarm = _inst.alarm.slice(0);
                                        _inst.alarm.__yy_owner = 1584050178;
                                    }
                                    _inst.alarm[1] = 1;
                                    _inst.gmlcursor_step = 2;
                                };
                            } else {
                                if ((_inst.gmlcursor_time == 115)) {
                                    {
                                        if (!(_inst.alarm instanceof Array)) {
                                            _inst.alarm = [];
                                            _inst.alarm.__yy_owner = 1584050178;
                                        } else if (_inst.alarm.__yy_owner !== 1584050178) {
                                            _inst.alarm = _inst.alarm.slice(0);
                                            _inst.alarm.__yy_owner = 1584050178;
                                        }
                                        _inst.alarm[2] = 1;
                                        _inst.gmlcursor_time_run = 0 ? 1 : 0;
                                    };
                                };
                            };
                        };
                    };
                };
                _inst.gmlcursor_time += 1;
            };
        };
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_tutorial_pointer_GlobalLeftButtonReleased_1 1
// ///  Tutorial Step 0
//
// tutorial_step = 0;
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_tutorial_pointer_Mouse_56(_inst, _other) {
    {
        _inst.gmltutorial_step = 0;
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_tutorial_pointer_GlobalLeftButtonPressed_1 1
// ///  Tutorial Step 1
//
// tutorial_step = 1;
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_tutorial_pointer_Mouse_53(_inst, _other) {
    {
        _inst.gmltutorial_step = 1;
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_tutorial_pointer_DrawEvent_1 1
// /// Draw : Textbox
//
// if ( tutorial_draw ){
//
//     var text_box_h = 100;
//     var text_box_h_buffer = floor( text_box_h / 2 );
//
//     var text_string;
//
//     var text_color = make_colour_rgb(obj_ctrl_board.bg_color_r_vis,obj_ctrl_board.bg_color_g_vis,obj_ctrl_board.bg_color_b_vis);
//
//     draw_set_font(font_beyond_tiny);
//
//     draw_set_halign(fa_center);
//     draw_set_valign(fa_middle);
//     draw_set_alpha(master_alpha);
//
//     var click_word = obj_ctrl_board.lang_text_tutorial[0];
//
//     switch (os_type){
//
//         case os_winphone : click_word = obj_ctrl_board.lang_text_tutorial[1]; break;
//         case os_android : click_word = obj_ctrl_board.lang_text_tutorial[1]; break;
//         case os_ios : click_word = obj_ctrl_board.lang_text_tutorial[1]; break;
//     }
//
//     var text_x = ( obj_ctrl_board.world_width_draw / 2 );
//     var text_y = text_box_h_buffer + 1; // ( obj_ctrl_board.world_height_draw ) - text_box_h_buffer;
//
//     if ( tutorial_step == 0 ){
//
//         text_string = obj_ctrl_board.lang_text_tutorial[2] + click_word + obj_ctrl_board.lang_text_tutorial[3]; // obj_ctrl_board.lang_text_tutorial[2] + click_word + obj_ctrl_board.lang_text_tutorial[3];
//     }
//     else if ( tutorial_step == 1 ){
//
//         text_string = obj_ctrl_board.lang_text_tutorial[4];
//     }
//
//     // Rectangle Background
//
//         draw_set_alpha(master_alpha*0.6);
//         draw_set_color(c_black);
//         draw_rectangle(-10,text_y-text_box_h_buffer,obj_ctrl_board.world_width_draw+10,text_y+text_box_h_buffer,false);
//         draw_set_alpha(master_alpha);
//         draw_set_color(c_white);
//
//         draw_line_width_colour(-10,text_y-text_box_h_buffer,obj_ctrl_board.world_width_draw+10,text_y-text_box_h_buffer,3,c_lime,c_lime);
//         draw_line_width_colour(-10,text_y+text_box_h_buffer,obj_ctrl_board.world_width_draw+10,text_y+text_box_h_buffer,3,c_lime,c_lime);
//
//     // Tutorial Text
//
//         draw_set_color(text_color);
//         draw_text(text_x+2,text_y,text_string);
//
//         draw_set_color(text_color);
//         draw_text(text_x+2,text_y+2,text_string);
//
//         draw_set_color(text_color);
//         draw_text(text_x,text_y+2,text_string);
//
//         draw_set_color(text_color);
//         draw_text(text_x-2,text_y+2,text_string);
//
//         draw_set_color(text_color);
//         draw_text(text_x-2,text_y,text_string);
//
//         draw_set_color(text_color);
//         draw_text(text_x-2,text_y-2,text_string);
//
//         draw_set_color(text_color);
//         draw_text(text_x,text_y-2,text_string);
//
//         draw_set_color(c_white);
//         draw_text(text_x,text_y,text_string);
// }
//
// draw_set_alpha(1);
//
//
// /* */
// #line gml_Object_obj_tutorial_pointer_DrawEvent_2 1
// /// Draw : Cursor
// /**/
// if ( tutorial_draw ){
//
//     if ( tutorial_step = 0 ){
//
//         if ( cursor_step >= 1 ){
//
//             if ( cursor_step == 2 ){
//
//                 draw_line_width_colour(cursor_x_base,cursor_y_base,cursor_x,cursor_y,4,c_aqua,c_aqua);
//
//                 draw_circle_colour(cursor_x_base,cursor_y_base,10,c_aqua,c_aqua,false);
//             }
//
//             draw_sprite(spr_pointer_hand,cursor_index,cursor_x,cursor_y);
//         }
//     }
// }
//
//
// draw_set_alpha(1);
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_tutorial_pointer_Draw_0(_inst, _other) {
    {
        if (_inst.gmltutorial_draw > 0.5) {
            {
                var gmltext_box_h = 100;
                var gmltext_box_h_buffer = floor((gmltext_box_h / 2));
                var gmltext_string;
                var gmltext_color = make_colour_rgb(yyInst(2).gmlbg_color_r_vis, yyInst(2).gmlbg_color_g_vis, yyInst(2).gmlbg_color_b_vis);
                draw_set_font(3);
                draw_set_halign(1);
                draw_set_valign(1);
                draw_set_alpha(_inst.gmlmaster_alpha);
                var gmlclick_word = yyInst(2).gmllang_text_tutorial[0];
                switch (g_pBuiltIn.get_os_type()) {
                    case 7:
                        gmlclick_word = yyInst(2).gmllang_text_tutorial[1];
                        break;
                    case 4:
                        gmlclick_word = yyInst(2).gmllang_text_tutorial[1];
                        break;
                    case 3:
                        gmlclick_word = yyInst(2).gmllang_text_tutorial[1];
                        break;
                };
                var gmltext_x = (yyInst(2).gmlworld_width_draw / 2);
                var gmltext_y = (gmltext_box_h_buffer + 1);
                if ((_inst.gmltutorial_step == 0)) {
                    {
                        gmltext_string = (yyInst(2).gmllang_text_tutorial[2] + gmlclick_word + yyInst(2).gmllang_text_tutorial[3]);
                    };
                } else {
                    if ((_inst.gmltutorial_step == 1)) {
                        {
                            gmltext_string = yyInst(2).gmllang_text_tutorial[4];
                        };
                    };
                };
                draw_set_alpha((_inst.gmlmaster_alpha * 0.6));
                draw_set_color(0);
                draw_rectangle((-10), (gmltext_y - gmltext_box_h_buffer), (yyInst(2).gmlworld_width_draw + 10), (gmltext_y + gmltext_box_h_buffer), 0);
                draw_set_alpha(_inst.gmlmaster_alpha);
                draw_set_color(16777215);
                draw_line_width_colour((-10), (gmltext_y - gmltext_box_h_buffer), (yyInst(2).gmlworld_width_draw + 10), (gmltext_y - gmltext_box_h_buffer), 3, 65280, 65280);
                draw_line_width_colour((-10), (gmltext_y + gmltext_box_h_buffer), (yyInst(2).gmlworld_width_draw + 10), (gmltext_y + gmltext_box_h_buffer), 3, 65280, 65280);
                draw_set_color(gmltext_color);
                draw_text((gmltext_x + 2), gmltext_y, gmltext_string);
                draw_set_color(gmltext_color);
                draw_text((gmltext_x + 2), (gmltext_y + 2), gmltext_string);
                draw_set_color(gmltext_color);
                draw_text(gmltext_x, (gmltext_y + 2), gmltext_string);
                draw_set_color(gmltext_color);
                draw_text((gmltext_x - 2), (gmltext_y + 2), gmltext_string);
                draw_set_color(gmltext_color);
                draw_text((gmltext_x - 2), gmltext_y, gmltext_string);
                draw_set_color(gmltext_color);
                draw_text((gmltext_x - 2), (gmltext_y - 2), gmltext_string);
                draw_set_color(gmltext_color);
                draw_text(gmltext_x, (gmltext_y - 2), gmltext_string);
                draw_set_color(16777215);
                draw_text(gmltext_x, gmltext_y, gmltext_string);
            };
        };
        draw_set_alpha(1);
        if (_inst.gmltutorial_draw > 0.5) {
            {
                if ((_inst.gmltutorial_step == 0)) {
                    {
                        if ((_inst.gmlcursor_step >= 1)) {
                            {
                                if ((_inst.gmlcursor_step == 2)) {
                                    {
                                        draw_line_width_colour(_inst.gmlcursor_x_base, _inst.gmlcursor_y_base, _inst.gmlcursor_x, _inst.gmlcursor_y, 4, 16776960, 16776960);
                                        draw_circle_colour(_inst.gmlcursor_x_base, _inst.gmlcursor_y_base, 10, 16776960, 16776960, 0);
                                    };
                                };
                                draw_sprite(_inst, 6, _inst.gmlcursor_index, _inst.gmlcursor_x, _inst.gmlcursor_y);
                            };
                        };
                    };
                };
            };
        };
        draw_set_alpha(1);
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_menu_load_CreateEvent_1 1
// /// Variables Init
//
// alarm[0] = 5;
//
// load_percent = irandom_range(5,25);
//
// loading_x = ( view_wview[0] / 2 );
// loading_y = ( view_hview[0] / 2 );
//
// percent_x = loading_x;
// percent_y = loading_y + 25;
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_menu_load_Create_0(_inst, _other) {
    window.famobi.gameReady();
    window.famobi_analytics.trackScreen("SCREEN_HOME"); {
        if (!(_inst.alarm instanceof Array)) {
            _inst.alarm = [];
            _inst.alarm.__yy_owner = 1584050178;
        } else if (_inst.alarm.__yy_owner !== 1584050178) {
            _inst.alarm = _inst.alarm.slice(0);
            _inst.alarm.__yy_owner = 1584050178;
        }
        _inst.alarm[0] = 5;
        _inst.gmlload_percent = irandom_range(5, 25);
        _inst.gmlloading_x = (g_pBuiltIn.view_wview[0] / 2);
        _inst.gmlloading_y = (g_pBuiltIn.view_hview[0] / 2);
        _inst.gmlpercent_x = _inst.gmlloading_x;
        _inst.gmlpercent_y = (_inst.gmlloading_y + 25);
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_menu_load_ObjAlarm0_1 1
// /// Create Menu Object
//
// instance_create(0,0,obj_menu_main);
//
//
// /* */
// /*  */ }
//
function gml_Object_obj_menu_load_Alarm_0(_inst, _other) {
    {
        instance_create(0, 0, 8);
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_menu_load_DrawEvent_1 1
// /// Draw Loading
//
// if (( !global.first_run_menu ) and ( global.platform_config == 1 )){
//
//     draw_sprite(spr_loading,0,loading_x,loading_y);
//
//     draw_set_font(font_beyond_tiny);
//     draw_set_color(c_white);
//
//     draw_set_valign(fa_top);
//     draw_set_halign(fa_center);
//
//     if ( load_percent > 100 ){ load_percent = 100; }
//
//     draw_text(percent_x,percent_y,string(load_percent) + "%");
// }
//
// /* */
// /*  */ }
//
function gml_Object_obj_menu_load_Draw_0(_inst, _other) {
    {
        if (((!(global.gmlfirst_run_menu > 0.5)) && ((global.gmlplatform_config == 1)))) {
            {
                draw_sprite(_inst, 16, 0, _inst.gmlloading_x, _inst.gmlloading_y);
                draw_set_font(3);
                draw_set_color(16777215);
                draw_set_valign(0);
                draw_set_halign(1);
                if ((_inst.gmlload_percent > 100)) {
                    {
                        _inst.gmlload_percent = 100;
                    };
                };
                draw_text(_inst.gmlpercent_x, _inst.gmlpercent_y, (string(_inst.gmlload_percent) + "%"));
            };
        }
    };
}

// #####################################################################################################
// {
// #line gml_Object_obj_draw_app_surface_DrawGUI_1 1
// /// Draw App Surface
//
//     // draw_surface(application_surface,0,0);
//
//     // draw_rectangle_colour(0,0,25,25,c_white,c_white,c_white,c_white,false);
//
// /* */
// /*  */ }
//
function gml_Object_obj_draw_app_surface_Draw_64(_inst, _other) {
    {};
}

function _H(_I) {
    this._J = 0;
    this._K = false;
    this._L = null;
    this._M = null;
    this._N = null;
    this._O = null;
    this._P = null;
    this._Q = null;
    this._R = [];
    this._S(_I._Q);
};
_H.prototype._T = function() {
    var _U = new _H({
        _Q: this._Q
    });
    return _U;
};
_H.prototype._S = function(_V) {
    this._Q = _V;
    this._L = new _W._X(_V);
    this._P = new _W._Y(this._L.data);
    this._O = new _W._Z(this._P);
    if (_V.__.length > 0) {
        this._01(null);
    }
    this._11(null);
    this._M = new _W._21();
    var _31 = this._L._41();
    this._51 = [_31.scaleX, _31.scaleY];
};
_H.prototype._61 = function() {
    var _71 = _81 ? _81._91() : 30;
    return ~~((_71 * this._N.duration) + 0.5);
};
_H.prototype._01 = function(_a1) {
    this._b1(_a1, 0);
};
_H.prototype._b1 = function(_a1, _c1) {
    var _d1 = null;
    if (((_a1 === null) || (_a1 === undefined)) && (_c1 === 0)) {
        if (this._Q.__.length > 0) {
            _d1 = this._Q._e1(this._Q.__[0].name);
        }
    } else {
        _d1 = this._Q._e1(_a1);
    }
    if (_d1 !== null && _d1 !== undefined) {
        if (_c1 === 0) {
            this._J = 0;
            this._N = _d1;
        }
        this._O._f1(_c1, _d1, true);
    }
};
_H.prototype._11 = function(_g1) {
    if (_g1 === null || _g1 === undefined) {
        if (this._Q._h1) {
            this._L._i1(this._Q._h1.name);
        }
    } else {
        this._L._i1(_g1);
    }
    this._L._j1();
};
_H.prototype._k1 = function(_l1, _m1, _n1) {
    this._P._o1(_l1, _m1, _n1);
};
_H.prototype._p1 = function(_q1, _r1) {
    var _s1 = this._L._t1(_q1);
    if (_s1 !== null && _s1 !== undefined) {
        if (typeof(_r1) === 'number') {
            _s1._u1(null);
        } else {
            var _v1 = this._L._w1(_q1);
            for (var _x1 = 0; _x1 < this._Q._y1.length; _x1++) {
                var _z1 = this._Q._y1[_x1];
                var _A1 = _z1._B1(_v1, _r1);
                if (_A1) {
                    _s1._u1(_A1);
                    return;
                }
            }
            for (var _C1 = 0; _C1 < this._R.length; _C1++) {
                var _A1 = this._R[_C1]._A1;
                if (_A1.name === _r1) {
                    _s1._u1(_A1);
                    return;
                }
            }
        }
    }
};
_H.prototype._D1 = function(_r1,
    _E1, _F1, _G1, _H1, _I1, _J1, _K1) {
    var _L1 = _E1._M1[_F1 % _E1._N1()];
    var _O1 = _P1[_L1.tp];
    var _Q1 = new _W._R1();
    _Q1.name = _E1.pName;
    _Q1._S1 = _L1.tp;
    _Q1.width = _L1._T1.width;
    _Q1.height = _L1._T1.height;
    var _U1 = new _W._V1();
    _U1._Q1 = _Q1;
    _U1.name = _r1;
    _U1.x = 0;
    _U1.y = 0;
    _U1.width = _E1.width;
    _U1.height = _E1.height;
    _U1._W1 = _L1.x / _L1._T1.width;
    _U1._X1 = _L1.y / _L1._T1.height;
    _U1._Y1 = (_L1.x + _L1.w) / _L1._T1.width;
    _U1._Z1 = (_L1.y + _L1.h) / _L1._T1.height;
    _U1.__1 = 0;
    _U1._02 = 0;
    _U1._12 = _U1.width;
    _U1._22 = _U1.height;
    _U1.index = 0;
    _U1.rotate = 0;
    _U1._32 = null;
    _U1._42 = null;
    var _52 = new _W._62("");
    _52._72.push(_Q1);
    _52._82.push(_U1);
    var _92 = new _W._a2(_52);
    var _b2 = _92._c2(this._Q._y1[0], _r1, _r1);
    _b2.width = _U1.width;
    _b2.height = _U1.height;
    _b2.scaleX = _I1;
    _b2.scaleY = _J1;
    _b2.x = _G1;
    _b2.y = _H1;
    _b2.rotation = _K1;
    _b2._d2(_b2);
    this._R.push({
        _A1: _b2,
        _52: _52
    });
};
_H.prototype._e2 = function(_f2) {
    this._K = _f2;
};
_H.prototype._g2 = function(_F1, _h2, _i2, _j2, _k2, _l2, _m2) {
    var _n2 = this._L;
    _31 = this._L._41(), _o2 = this._J, _p2 = (_m2 !== undefined);
    var _q2 = Math.abs(_j2 * this._51[0]);
    var _r2 = Math.abs(_k2 * this._51[1]);
    if ((_o2 !== _F1) || (_n2.x !== _h2) || (_n2.y !== _i2) || (_31.scaleX !== _q2) || (_31.scaleY !== _r2) || (_31.rotation !== _l2)) {
        var _s2 = this._61();
        if (_s2 > 0) {
            var _t2 = _F1 % _s2,
                _u2 = this._J % _s2,
                duration = this._N.duration,
                _v2 = this._N._w2.length;
            if (_u2 > _t2) {
                _t2 += _s2;
            }
            var _x2 = (_t2 - _u2) / _s2;
            this._O._y2(_x2 * duration);
            this._O.apply(this._L);
        }
        this._J = _F1;
        _n2.x = _h2;
        _n2.y = _i2;
        _n2._z2 = ((_j2 * this._51[0]) < 0) ? 1 : 0;
        _n2._A2 = ((_k2 * this._51[1]) < 0) ? 1 : 0;
        _31.scaleX = _q2;
        _31.scaleY = _r2;
        _31.rotation = _l2;
        _p2 = true;
    }
    if (_p2) {
        if (_m2) {
            _m2._B2(_C2, 0, _m2,
                null);
        }
        _n2._p2();
        this._M._y2(this._L, 1);
    }
};
_H.prototype._D2 = function(_E2, _h2, _i2, _j2, _k2, _l2) {
    var _s2 = this._61();
    var _F2 = ~~(_s2 * (_E2 / this._N.duration) + 0.5);
    this._g2(_F2, _h2, _i2, _j2, _k2, _l2);
};
_H.prototype._G2 = function(_H2, _F1, _h2, _i2, _j2, _k2, _l2) {
    var _I2 = this._M;
    if (_I2._J2.length > 0) {
        this._g2(_F1, _h2, _i2, _j2, _k2, _l2);
        _H2.left = ~~(_I2._K2 + 0.5);
        _H2._L2 = ~~(_I2._M2 + 0.5);
        _H2.top = ~~(_I2._N2 + 0.5);
        _H2.bottom = ~~(_I2._O2 + 0.5);
        return true;
    }
    return false;
};
_H.prototype._P2 = function(_F1, _h2, _i2, _j2, _k2, _l2, _Q2, _R2, _S2,
    _T2, _U2, _V2, _W2) {
    this._g2(_F1, _h2, _i2, _j2, _k2, _l2);
    _Q2._g2(_R2, _S2, _T2, _U2, _V2, _W2);
    for (var _X2 = 0; _X2 < _Q2._M._Y2.length; _X2++) {
        var _Z2 = _Q2._M._Y2[_X2];
        var size = _Z2.length / 2;
        for (var __2 = 0; __2 < size; __2++) {
            var _03, _13, _23, _33;
            _03 = _Z2[(__2 * 2) + 0];
            _13 = _Z2[(__2 * 2) + 1];
            if (__2 === (size - 1)) {
                _23 = _Z2[0];
                _33 = _Z2[1];
            } else {
                _23 = _Z2[((__2 + 1) * 2) + 0];
                _33 = _Z2[((__2 + 1) * 2) + 1];
            }
            var _43 = this._M._53(_03, _13, _23, _33);
            if (_43 !== null) {
                return true;
            }
        }
    }
    return false;
};
_H.prototype._63 = function(_F1, _h2, _i2, _j2, _k2, _l2, _73, _83, _R2, _S2, _T2, _U2,
    _V2, _W2) {
    this._g2(_F1, _h2, _i2, _j2, _k2, _l2);
    if (_73 == null) {
        return false;
    }
    if (_73._93 <= 0) {
        return false;
    }
    if (_73._a3.length > 0) {
        _R2 = _R2 % _73._a3.length;
    }
    if (_R2 < 0) {
        _R2 = _R2 + _73._a3.length;
    }
    _U2 = 1.0 / _U2;
    _V2 = 1.0 / _V2;
    var _I2 = this._M;
    var _b3 = _c3(_I2._K2, _83.left);
    var _d3 = _e3(_I2._M2, _83._L2);
    var _f3 = _c3(_I2._N2, _83.top);
    var _g3 = _e3(_I2._O2, _83.bottom);
    var _h3 = Math.sin(-_W2 * (_i3 / 180.0));
    var _j3 = Math.cos(-_W2 * (_i3 / 180.0));
    for (var i = _b3; i <= _d3; i++) {
        for (var _k3 = _f3; _k3 <= _g3; _k3++) {
            var _l3 = ((_j3 * (i - _S2) + _h3 * (_k3 - _T2)) * _U2 + _73._m3);
            var _n3 = ((_j3 * (_k3 - _T2) - _h3 * (i - _S2)) * _V2 + _73._o3);
            if ((_l3 < 0) || (_l3 >= _73._p3)) {
                continue;
            }
            if ((_n3 < 0) || (_n3 >= _73._q3)) {
                continue;
            }
            if (_73._r3) {
                if (!_73._a3._s3[_R2]._s3[_l3 + (_n3 * _73._p3)]) {
                    continue;
                }
            }
            var _43 = _I2._t3(i, _k3);
            if (_43 !== null) {
                return true;
            }
        }
    }
    return false;
};
_H.prototype._u3 = function(_F1, _h2, _i2, _j2, _k2, _l2, _v3, _w3) {
    this._g2(_F1, _h2, _i2, _j2, _k2, _l2);
    var _43 = this._M._t3(_v3, _w3);
    if (_43 !== null) {
        return true;
    }
    return false;
};
_H.prototype._x3 = function(_F1, _h2, _i2, _j2, _k2, _l2, _v3, _w3, _S2, _T2) {
    this._g2(_F1,
        _h2, _i2, _j2, _k2, _l2);
    var _43 = this._M._53(_v3, _w3, _S2, _T2);
    if (_43 !== null) {
        return true;
    }
    return false;
};
_H.prototype._y3 = function(_F1, _h2, _i2, _j2, _k2, _l2, _v3, _w3, _S2, _T2) {
    this._g2(_F1, _h2, _i2, _j2, _k2, _l2);
    var _43 = null;
    var _I2 = this._M;
    var _43 = _I2._53(_v3, _w3, _S2, _T2);
    if (_43 !== null) {
        return true;
    }
    _43 = _I2._53(_v3, _w3, _S2, _w3);
    if (_43 !== null) {
        return true;
    }
    _43 = _I2._53(_S2, _w3, _S2, _T2);
    if (_43 !== null) {
        return true;
    }
    _43 = _I2._53(_S2, _T2, _v3, _T2);
    if (_43 !== null) {
        return true;
    }
    _43 = _I2._53(_v3, _T2, _v3, _w3);
    if (_43 !== null) {
        return true;
    }
    return false;
};
_H.prototype._z3 = function(_F1, _h2, _i2, _j2, _k2, _l2, _A3) {
    this._g2(_F1, _h2, _i2, _j2, _k2, _l2);
    var _I2 = this._M;
    var _n2 = this._L;
    var _b3 = _c3(_I2._K2, _A3.left);
    var _d3 = _e3(_I2._M2, _A3._L2);
    var _f3 = _c3(_I2._N2, _A3.top);
    var _g3 = _e3(_I2._O2, _A3.bottom);
    var _B3 = ((_A3._L2 + _A3.left) / 2);
    var _C3 = ((_A3.bottom + _A3.top) / 2);
    var _D3 = ((_A3._L2 - _A3.left) / 2);
    var _E3 = ((_A3.bottom - _A3.top) / 2);
    var _p3 = (_I2._M2 - _I2._K2);
    var _q3 = (_I2._O2 - _I2._N2);
    var _m3 = _n2.x - _I2._K2;
    var _o3 = _n2.y - _I2._N2;
    if ((_j2 == 1) && (_k2 == 1) && (Math.abs(_l2) < 0.0001)) {
        for (var i = _b3; i <= _d3; i++) {
            for (var _k3 = _f3; _k3 <= _g3; _k3++) {
                if (sqr((i - _B3) / _D3) + sqr((_k3 - _C3) / _E3) > 1) continue;
                var _l3 = i - _h2 + _m3;
                var _n3 = _k3 - _i2 + _o3;
                if ((_l3 < 0) || (_l3 >= _p3)) continue;
                if ((_n3 < 0) || (_n3 >= _q3)) continue;
                var _43 = _I2._t3(i, _k3);
                if (_43 !== null) {
                    return true;
                }
            }
        }
    } else {
        var _F3 = Math.sin(-_l2 * _i3 / 180.0);
        var _G3 = Math.cos(-_l2 * _i3 / 180.0);
        for (var i = _b3; i <= _d3; i++) {
            for (var _k3 = _f3; _k3 <= _g3; _k3++) {
                if (sqr((i - _B3) / _D3) + sqr((_k3 - _C3) / _E3) > 1) continue;
                var _l3 = Math.floor((_G3 * (i - _h2) + _F3 * (_k3 - _i2)) / _j2 + _m3);
                var _n3 = Math.floor((_G3 * (_k3 - _i2) - _F3 * (i - _h2)) / _k2 + _o3);
                if ((_l3 < 0) || (_l3 >= _p3)) continue;
                if ((_n3 < 0) || (_n3 >= _q3)) continue;
                var _43 = _I2._t3(i, _k3);
                if (_43 !== null) {
                    return true;
                }
            }
        }
    }
    return false;
};
_H.prototype._H3 = function(_I3, _J3) {
    var _K3 = this._L._L3(_I3);
    if (_K3) {
        var _M3 = _N3._O3(_J3);
        if (_M3) {
            _M3["length"] = _K3.data.length;
            _M3["x"] = _K3.data.x;
            _M3["y"] = _K3.data.y;
            _M3["angle"] = _K3.data.rotation;
            _M3["xscale"] = _K3.data.scaleX;
            _M3["yscale"] = _K3.data.scaleY;
            _M3["parent"] = _K3.data.parent.name;
            return true;
        }
    }
    return false;
};
_H.prototype._P3 = function(_I3, _J3) {
    var _K3 = this._L._L3(_I3);
    if (_K3) {
        var _M3 = _N3._O3(_J3);
        if (_M3) {
            _K3.data.length = (_M3["length"] !== undefined) ? _M3["length"] : _K3.data.length;
            _K3.data.x = (_M3["x"] !== undefined) ? _M3["x"] : _K3.data.x;
            _K3.data.y = (_M3["y"] !== undefined) ? _M3["y"] : _K3.data.y;
            _K3.data.rotation = (_M3["angle"] !== undefined) ? _M3["angle"] : _K3.data.rotation;
            _K3.data.scaleX = (_M3["xscale"] !== undefined) ? _M3["xscale"] : _K3.data.scaleX;
            _K3.data.scaleY = (_M3["yscale"] !== undefined) ? _M3["yscale"] : _K3.data.scaleY;
            return true;
        }
    }
    return false;
};
_H.prototype._Q3 = function(_I3, _J3) {
    var _K3 = this._L._L3(_I3);
    if (_K3) {
        var _M3 = _N3._O3(_J3);
        if (_M3) {
            _M3["x"] = _K3.x;
            _M3["y"] = _K3.y;
            _M3["angle"] = _K3.rotation;
            _M3["xscale"] = _K3.scaleX;
            _M3["yscale"] = _K3.scaleY;
            _M3["worldX"] = _K3._R3;
            _M3["worldY"] = _K3._S3;
            _M3["worldAngle"] = _K3._T3;
            _M3["worldScaleX"] = _K3._U3;
            _M3["worldScaleY"] = _K3._V3;
            _M3["parent"] = _K3.parent.data.name;
            return true;
        }
    }
    return false;
};
_H.prototype._W3 = function(_I3, _J3) {
    var _K3 = this._L._L3(_I3);
    if (_K3) {
        var _M3 = _N3._O3(_J3);
        if (_M3) {
            _K3.x = _M3["x"];
            _K3.y = _M3["y"];
            _K3.rotation = _M3["angle"];
            _K3.scaleX = _M3["xscale"];
            _K3.scaleY = _M3["yscale"];
            return true;
        }
    }
    return false;
};
_H.prototype._X3 = function() {
    if (this._L._z1) {
        return this._L._z1.name;
    }
    return "";
};
_H.prototype._Y3 = function(_c1) {
    if ((_c1 >= 0) && (_c1 < this._O._Z3.length) && (this._O._Z3[_c1]) && (this._O._Z3[_c1]._d1)) {
        return this._O._Z3[_c1]._d1.name;
    }
    return "";
};
_H.prototype.__3 = function(_c1) {
    if ((_c1 >= 0) && (_c1 < this._O._Z3.length)) {
        this._O._04(_c1);
    }
};
_H.prototype._14 = function(_24) {
    var _d1 = this._Q._e1(_24);
    if (_d1) {
        return _d1.duration;
    }
    return 0.0;
};
_H.prototype._34 = function(_q1) {
    var _s1 = this._L._t1(_q1);
    if (_s1 !== null && _s1 !== undefined) {
        if (_s1._A1) {
            return _s1._A1.name;
        }
    }
    return "";
};
var _44 = null;

function _54(_64) {
    _44 = _64;
};

function _74() {
    this._84 = [];
    this._94 = null;
    this._Q = null;
    this._a4 = null;
    if (_b4) {
        this._c4 = this._d4;
        this._e4 = this._f4;
    } else {
        this._c4 = this._g4;
        this._e4 = this._h4;
    }
};
_74.prototype._i4 = function(_a1, _j4, _k4, _l4) {
    this._84[_a1] = {
        _m4: [],
        _n4: 0,
        _o4: 32,
        _T1: _P1[_l4],
        x: 0,
        y: 0,
        w: _j4,
        h: _k4
    };
};
_74.prototype._p4 = function(_q4, _r4, _j4, _k4) {
    var width = _j4;
    var height = _k4;
    var self = this;
    var _s4 = function(_t4) {
        var _u4 = _t4;
        _u4.width = width;
        _u4.height = height;
        var _v4 = _w4(_x4 + _t4.name);
        _u4._S1 = _v4;
        _P1[_v4].onload = function(e) {
            self._i4(_u4.name, e.srcElement.width, e.srcElement.height, _v4);
        };
        _P1[_v4].onerror = function(e) {
            debug("ImageError: " + e.srcElement.src);
        };
        _P1[_v4].URL = _t4.name;
    };
    this._a4 = new _W._62(_r4, {
        load: _s4
    });
    this._94 = new _W._y4(new _W._a2(this._a4));
    this._Q = this._94._z4(JSON.parse(_q4));
};
_74.prototype._A4 = function(_B4, _g1, _F2, x, y, _C4, _D4, _E4, _F4, alpha) {
    if (this._Q === null || this._Q === undefined) return;
    _W._G4._H4 = true;
    var _I4 = new _H(this);
    _I4._01(_B4);
    _I4._11(_g1);
    _I4._g2(_F2, x, y, _C4, _D4, _E4);
    this._J4(_I4._L, _F4, alpha);
};
_74.prototype._K4 = function(_B4, _g1, _E2, x, y, _C4, _D4, _E4, _F4, alpha) {
    if (this._Q === null || this._Q === undefined) return;
    _W._G4._H4 = true;
    var _I4 = new _H(this);
    _I4._01(_B4);
    _I4._11(_g1);
    _I4._D2(_E2, x, y, _C4, _D4, _E4);
    this._J4(_I4._L, _F4, alpha);
};
_74.prototype._L4 = function(_F2, x, y, _C4, _D4, _E4, _F4, alpha) {
    if (!_44 || !_44._M4()) {
        this._A4(null, null, _F2, x, y, _C4, _D4, _E4, _F4, alpha);
    } else {
        _W._G4._H4 = true;
        var _N4 = _44._M4();
        _N4._g2(_F2, x, y, _C4, _D4, _E4, _44);
        this._J4(_N4._L, _F4, alpha);
        if (_N4._K) {
            this._O4(_N4._M);
        }
    }
};
_74.prototype._P4 = function(_B4, _Q4, x, y, _C4, _D4, _E4, _R4) {
    _W._G4._H4 = true;
    var _I4 = new _H(this);
    _I4._01(_B4);
    _I4._g2(_Q4, x, y, _C4, _D4, _E4);
    this._O4(_I4._M);
};
_74.prototype._J4 = function(_S4, _R4, alpha) {
    var _T4 = (_R4 & 0xff) / 255.0,
        _U4 = ((_R4 & 0xff00) >> 8) / 255.0,
        _V4 = ((_R4 & 0xff0000) >> 16) / 255.0;
    for (var i = 0, _X2 = _S4._W4.length; i < _X2; i++) {
        var _s1 = _S4._X4[i];
        if (!_s1._A1) continue;
        var _d3 = (_T4 * 255);
        var _Y4 = (_U4 * 255);
        var _g3 = (_V4 * 255);
        var _Z4 = (alpha * 255);
        if (_s1._n2 && _s1._n2.hasOwnProperty(_d3)) {
            _d3 *= _s1._n2._d3;
            _Y4 *= _s1._n2._Y4;
            _g3 *= _s1._n2._g3;
            _Z4 *= _s1._n2._Z4;
        }
        if (_s1.hasOwnProperty(_d3)) {
            _d3 *= _s1._d3;
            _Y4 *= _s1._Y4;
            _g3 *= _s1._g3;
            _Z4 *= _s1._Z4;
        }
        var _F4 = (_Z4 << 24) | (_d3 << 0) | (_Y4 << 8) | (_g3 << 16);
        switch (_s1._A1.type) {
            case _W.__4._U1:
                this._c4(_s1, _F4, alpha);
                break;
            case _W.__4._05:
            case _W.__4._15:
                this._e4(_s1, _F4, alpha);
                break;
        }
    }
};
_74.prototype._O4 = function(_25) {
    draw_line(_25._K2, _25._N2, _25._K2, _25._O2);
    draw_line(_25._K2, _25._O2, _25._M2, _25._O2);
    draw_line(_25._M2, _25._O2, _25._M2, _25._N2);
    draw_line(_25._M2, _25._N2, _25._K2, _25._N2);
    for (var _X2 = 0; _X2 < _25._Y2.length; _X2++) {
        var _Z2 = _25._Y2[_X2];
        var size = _Z2.length / 2;
        for (var __2 = 0; __2 < size; __2++) {
            var _03, _13, _23, _33;
            _03 = _Z2[(__2 * 2) + 0];
            _13 = _Z2[(__2 * 2) + 1];
            if (__2 == (size - 1)) {
                _23 = _Z2[0];
                _33 = _Z2[1];
            } else {
                _23 = _Z2[((__2 + 1) * 2) + 0];
                _33 = _Z2[((__2 + 1) * 2) + 1];
            }
            draw_line(_03, _13, _23, _33);
        }
    }
};
_74.prototype._g4 = function(_s1, _F4, alpha) {
    var _U1 = _s1._A1,
        _35 = [];
    var _45 = 0;
    var _55 = 0;
    if (_s1._n2) {
        _45 = _s1._n2.x;
        _55 = _s1._n2.y;
    } else if (_s1._K3._n2) {
        _45 = _s1._K3._n2.x;
        _55 = _s1._K3._n2.y;
    }
    _U1._65(_45, _55, _s1._K3, _35);
    var _75 = [];
    _75[0] = {};
    _75[0].x = _35[2];
    _75[0].y = _35[3];
    _75[0]._W1 = _U1._85[2];
    _75[0]._X1 = _U1._85[3];
    _75[1] = {};
    _75[1].x = _35[4];
    _75[1].y = _35[5];
    _75[1]._W1 = _U1._85[4];
    _75[1]._X1 = _U1._85[5];
    _75[2] = {};
    _75[2].x = _35[6];
    _75[2].y = _35[7];
    _75[2]._W1 = _U1._85[6];
    _75[2]._X1 = _U1._85[7];
    _75[3] = {};
    _75[3].x = _35[0];
    _75[3].y = _35[1];
    _75[3]._W1 = _U1._85[0];
    _75[3]._X1 = _U1._85[1];
    _95.globalAlpha = alpha;
    var _u4 = _U1._S1._Q1;
    var _v4 = _P1[_u4._S1];
    if (_F4 != _a5) {
        if (!this._84[_U1._S1._Q1.name]) {
            var _Q1 = _U1._S1._Q1;
            this._i4(_Q1.name, _Q1.width, _Q1.height, _U1._S1._Q1._S1);
        }
        _v4 = _b5(this._84[_U1._S1._Q1.name], _F4);
    }
    var _c5 = this._84[_u4.name];
    this._d5(_95, _v4, _75[0].x, _75[0].y, _75[1].x, _75[1].y, _75[2].x, _75[2].y, _75[0]._W1 * _c5.w, _75[0]._X1 * _c5.h, _75[1]._W1 * _c5.w, _75[1]._X1 * _c5.h, _75[2]._W1 * _c5.w, _75[2]._X1 * _c5.h);
    this._d5(_95, _v4, _75[2].x, _75[2].y, _75[3].x, _75[3].y, _75[0].x, _75[0].y, _75[2]._W1 * _c5.w, _75[2]._X1 * _c5.h, _75[3]._W1 * _c5.w, _75[3]._X1 * _c5.h, _75[0]._W1 * _c5.w, _75[0]._X1 * _c5.h);
};
_74.prototype._h4 = function(_s1,
    _F4, alpha) {
    var _05 = _s1._A1,
        _35 = [];
    _05._e5(_s1._K3._n2.x, _s1._K3._n2.y, _s1, _35);
    var _u4 = _05._S1._Q1;
    var _v4 = _P1[_u4._S1];
    if (_F4 != _a5) {
        if (!this._84[_05._S1._Q1.name]) {
            var _Q1 = _05._S1._Q1;
            this._i4(_Q1.name, _Q1.width, _Q1.height, _05._S1._Q1._S1);
        }
        _v4 = _b5(this._84[_05._S1._Q1.name], _F4);
    }
    for (var _X2 = 0; _X2 < _05._f5.length / 3; _X2++) {
        var _g5 = _X2 * 3;
        var _h5 = _05._f5[_g5++] * 2,
            _i5 = _05._f5[_g5++] * 2,
            _j5 = _05._f5[_g5++] * 2;
        var _75 = [];
        _75[0] = {};
        _75[0].x = _35[_h5];
        _75[0]._W1 = _05._85[_h5++];
        _75[0].y = _35[_h5];
        _75[0]._X1 = _05._85[_h5];
        _75[1] = {};
        _75[1].x = _35[_i5];
        _75[1]._W1 = _05._85[_i5++];
        _75[1].y = _35[_i5];
        _75[1]._X1 = _05._85[_i5];
        _75[2] = {};
        _75[2].x = _35[_j5];
        _75[2]._W1 = _05._85[_j5++];
        _75[2].y = _35[_j5];
        _75[2]._X1 = _05._85[_j5];
        var _c5 = this._84[_u4.name];
        this._d5(_95, _v4, _75[0].x, _75[0].y, _75[1].x, _75[1].y, _75[2].x, _75[2].y, _75[0]._W1 * _c5.w, _75[0]._X1 * _c5.h, _75[1]._W1 * _c5.w, _75[1]._X1 * _c5.h, _75[2]._W1 * _c5.w, _75[2]._X1 * _c5.h);
    }
};
_74.prototype._k5 = function(_s1, _F4, alpha) {
    var _05 = _s1._A1,
        _35 = [];
    var _45 = 0;
    var _55 = 0;
    if (_s1._n2) {
        _45 = _s1._n2.x;
        _55 = _s1._n2.y;
    } else if (_s1._K3._n2) {
        _45 = _s1._K3._n2.x;
        _55 = _s1._K3._n2.y;
    }
    _05._e5(_45, _55, _s1, _35);
    var _Q1 = _05._S1._Q1;
    var _v4 = _P1[_Q1._S1];
    if (_F4 != _a5) {
        if (!this._84[_Q1.name]) {
            this._i4(_Q1.name, _Q1.width, _Q1.height, _Q1._S1);
        }
        _v4 = _b5(this._84[_Q1.name], _F4);
    }
    for (var _X2 = 0; _X2 < _05._f5.length / 3; _X2++) {
        var _h5 = _05._f5[(_X2 * 3) + 0],
            _i5 = _05._f5[(_X2 * 3) + 1],
            _j5 = _05._f5[(_X2 * 3) + 2];
        var _75 = [];
        _75[0] = {};
        _75[0].x = _35[(_h5 * 2) + 0];
        _75[0].y = _35[(_h5 * 2) + 1];
        _75[0]._W1 = _05._85[(_h5 * 2) + 0];
        _75[0]._X1 = _05._85[(_h5 * 2) + 1];
        _75[1] = {};
        _75[1].x = _35[(_i5 * 2) + 0];
        _75[1].y = _35[(_i5 * 2) + 1];
        _75[1]._W1 = _05._85[(_i5 * 2) + 0];
        _75[1]._X1 = _05._85[(_i5 * 2) + 1];
        _75[2] = {};
        _75[2].x = _35[(_j5 * 2) + 0];
        _75[2].y = _35[(_j5 * 2) + 1];
        _75[2]._W1 = _05._85[(_j5 * 2) + 0];
        _75[2]._X1 = _05._85[(_j5 * 2) + 1];
        var _c5 = this._84[_Q1.name];
        this._d5(_95, _v4, _75[0].x, _75[0].y, _75[1].x, _75[1].y, _75[2].x, _75[2].y, _75[0]._W1 * _c5.w, _75[0]._X1 * _c5.h, _75[1]._W1 * _c5.w, _75[1]._X1 * _c5.h, _75[2]._W1 * _c5.w, _75[2]._X1 * _c5.h);
    }
};
_74.prototype._d5 = function(_l5, _m5, _n5, _o5, _03, _13, _23, _33, _p5, _q5, _r5,
    _s5, _t5, _u5) {
    _l5.save();
    _l5.beginPath();
    _l5.moveTo(_n5, _o5);
    _l5.lineTo(_03, _13);
    _l5.lineTo(_23, _33);
    _l5.closePath();
    _l5.clip();
    var _v5 = _p5 * (_u5 - _s5) - _r5 * _u5 + _t5 * _s5 + (_r5 - _t5) * _q5;
    if (_v5 == 0) {
        return;
    }
    var _w5 = -(_q5 * (_23 - _03) - _s5 * _23 + _u5 * _03 + (_s5 - _u5) * _n5) / _v5;
    var _x5 = (_s5 * _33 + _q5 * (_13 - _33) - _u5 * _13 + (_u5 - _s5) * _o5) / _v5;
    var _y5 = (_p5 * (_23 - _03) - _r5 * _23 + _t5 * _03 + (_r5 - _t5) * _n5) / _v5;
    var _z5 = -(_r5 * _33 + _p5 * (_13 - _33) - _t5 * _13 + (_t5 - _r5) * _o5) / _v5;
    var _A5 = (_p5 * (_u5 * _03 - _s5 * _23) + _q5 * (_r5 * _23 - _t5 * _03) + (_t5 * _s5 - _r5 * _u5) * _n5) / _v5;
    var _B5 = (_p5 * (_u5 * _13 - _s5 * _33) + _q5 * (_r5 * _33 - _t5 * _13) + (_t5 * _s5 - _r5 * _u5) * _o5) / _v5;
    _l5.transform(_w5, _x5, _y5, _z5, _A5, _B5);
    _l5.drawImage(_m5, 0, 0);
    _l5.restore();
};
_74.prototype._d4 = function(_s1, _F4, alpha) {
    var _U1 = _s1._A1,
        _35 = [];
    var _45 = 0;
    var _55 = 0;
    if (_s1._n2) {
        _45 = _s1._n2.x;
        _55 = _s1._n2.y;
    } else if (_s1._K3._n2) {
        _45 = _s1._K3._n2.x;
        _55 = _s1._K3._n2.y;
    }
    _U1._65(_45, _55, _s1._K3, _35);
    var _v4 = _P1[_U1._S1._Q1._S1];
    if (!_v4.complete) return;
    if (!_v4._C5) _D5({
        _T1: _v4
    });
    var _E5 = 6;
    var _F5 = _b4._G5(_H5._I5, _v4._C5, _b4._J5, _E5);
    var _K5 = _F5._L5() >> 2;
    var index = _K5 * _F5._M5;
    _F5._M5 += _E5;
    var _N5 = _F5._O5;
    var _P5 = _F5._Q5;
    var _R5 = _F5._S5;
    var _T5 = index;
    var _U5 = _T5 + _K5;
    var _Z1 = _U5 + _K5;
    var _V5 = _Z1 + _K5;
    var _W5 = _V5 + _K5;
    var _X5 = _W5 + _K5;
    _N5[_T5 + 0] = _N5[_X5 + 0] = _35[2];
    _N5[_T5 + 1] = _N5[_X5 + 1] = _35[3];
    _N5[_U5 + 0] = _35[4];
    _N5[_U5 + 1] = _35[5];
    _N5[_Z1 + 0] = _N5[_V5 + 0] = _35[6];
    _N5[_Z1 + 1] = _N5[_V5 + 1] = _35[7];
    _N5[_W5 + 0] = _35[0];
    _N5[_W5 + 1] = _35[1];
    _N5[_T5 + 2] = _N5[_U5 + 2] = _N5[_Z1 + 2] = _N5[_V5 + 2] = _N5[_W5 + 2] = _N5[_X5 + 2] = _Y5;
    _P5[_T5] = _P5[_U5] = _P5[_Z1] = _P5[_V5] = _P5[_W5] = _P5[_X5] = _F4;
    _R5[_T5 + 0] = _R5[_X5 + 0] = _U1._85[2];
    _R5[_T5 + 1] = _R5[_X5 + 1] = _U1._85[3];
    _R5[_U5 + 0] = _U1._85[4];
    _R5[_U5 + 1] = _U1._85[5];
    _R5[_Z1 + 0] = _R5[_V5 + 0] = _U1._85[6];
    _R5[_Z1 + 1] = _R5[_V5 + 1] = _U1._85[7];
    _R5[_W5 + 0] = _U1._85[0];
    _R5[_W5 + 1] = _U1._85[1];
};
_74.prototype._f4 = function(_s1, _F4, alpha) {
    var _05 = _s1._A1,
        _35 = [];
    var _45 = 0;
    var _55 = 0;
    if (_s1._n2) {
        _45 = _s1._n2.x;
        _55 = _s1._n2.y;
    } else if (_s1._K3._n2) {
        _45 = _s1._K3._n2.x;
        _55 = _s1._K3._n2.y;
    }
    _05._e5(_45, _55, _s1, _35);
    var _v4 = _P1[_05._S1._Q1._S1];
    if (!_v4.complete) return;
    if (!_v4._C5) _D5({
        _T1: _v4
    });
    var _E5 = _05._f5.length;
    var _F5 = _b4._G5(_H5._I5,
        _v4._C5, _b4._J5, _E5);
    var _K5 = _F5._L5() >> 2;
    var index = _K5 * _F5._M5;
    _F5._M5 += _E5;
    var _N5 = _F5._O5;
    var _P5 = _F5._Q5;
    var _R5 = _F5._S5;
    var _T5 = index;
    for (var _X2 = 0; _X2 < _E5; _X2++, _T5 += _K5) {
        var _h5 = _05._f5[_X2];
        _N5[_T5 + 0] = _35[(_h5 * 2) + 0];
        _N5[_T5 + 1] = _35[(_h5 * 2) + 1];
        _N5[_T5 + 2] = _Y5;
        _P5[_T5 + 0] = _P5[_T5 + 1] = _F4;
        _R5[_T5 + 0] = _05._85[(_h5 * 2) + 0];
        _R5[_T5 + 1] = _05._85[(_h5 * 2) + 1];
    }
};
_74.prototype._Z5 = function(__5) {
    for (var _X2 = 0; _X2 < this._Q.__.length; _X2++) {
        ds_list_add(__5, this._Q.__[_X2].name);
    }
};
_74.prototype._06 = function(__5) {
    for (var _X2 = 0; _X2 < this._Q._y1.length; _X2++) {
        ds_list_add(__5, this._Q._y1[_X2].name);
    }
};
_74.prototype._16 = function(__5) {
    for (var _X2 = 0; _X2 < this._Q._W4.length; _X2++) {
        var _26 = this._Q._W4[_X2];
        var map = ds_map_create();
        ds_map_add(map, "name", _26.name);
        ds_map_add(map, "bone", _26._36.name);
        ds_map_add(map, "attachment", _26._46 ? _26._46 : "(none)");
        ds_list_add(__5, map);
    }
};

function draw_primitive_begin(kind) {
    _56("draw_primitive_begin()");
}

function draw_primitive_begin_texture(kind, _66) {
    _56("draw_primitive_begin_texture()");
}

function draw_vertex(x,
    y) {
    _56("draw_vertex()");
}

function draw_vertex_color(x, y, _F4, alpha) {
    _56("draw_vertex_color()");
}
var draw_vertex_colour = draw_vertex_color;

function draw_vertex_texture(x, y, _76, _86) {
    _56("draw_vertex_texture()");
}

function draw_vertex_texture_color(x, y, _76, _86, _F4, alpha) {
    _56("draw_vertex_texture_color()");
}
var draw_vertex_texture_colour = draw_vertex_texture_color;

function draw_primitive_end() {
    _56("draw_primitive_end()");
}

function d3d_primitive_begin(kind) {
    _56("d3d_primitive_begin()");
}

function d3d_primitive_begin_texture(kind,
    _66) {
    _56("d3d_primitive_begin_texture()");
}

function d3d_vertex(x, y, _96) {
    _56("d3d_vertex()");
}

function d3d_vertex_color(x, y, _96, _F4, alpha) {
    _56("d3d_vertex_color()");
}
var d3d_vertex_colour = d3d_vertex_color;

function d3d_vertex_texture(x, y, _96, _76, _86) {
    _56("d3d_vertex_texture()");
}

function d3d_vertex_texture_color(x, y, _96, _76, _86, _F4, alpha) {
    _56("d3d_vertex_texture_color()");
}
var d3d_vertex_texture_colour = d3d_vertex_texture_color;

function d3d_vertex_normal(x, y, _96, _a6, _b6, _c6) {
    _56("d3d_vertex_normal()");
}

function d3d_vertex_normal_color(x,
    y, _96, _a6, _b6, _c6, _F4, alpha) {
    _56("d3d_vertex_normal_color()");
}
var d3d_vertex_normal_colour = d3d_vertex_normal_color;

function d3d_vertex_normal_texture(x, y, _96, _a6, _b6, _c6, _76, _86) {
    _56("d3d_vertex_normal_texture()");
}

function d3d_vertex_normal_texture_color(x, y, _96, _a6, _b6, _c6, _76, _86, _F4, alpha) {
    _56("d3d_vertex_normal_texture_color()");
}
var d3d_vertex_normal_texture_colour = d3d_vertex_normal_texture_color;

function d3d_primitive_end() {
    _56("d3d_primitive_end()");
}
var _d6 = null;
var _e6 = 0,
    _f6 = -1,
    _g6 = null,
    _h6 = null;
var _i6 = 1,
    _j6 = 2,
    _k6 = 3,
    _l6 = 4,
    _m6 = 5,
    _n6 = 6,
    _o6 = 7;

function _p6() {
    draw_primitive_begin = _q6;
    draw_primitive_begin_texture = _r6;
    draw_vertex = _s6;
    draw_vertex_color = _t6;
    draw_vertex_colour = _t6;
    draw_vertex_texture = _u6;
    draw_vertex_texture_color = _v6;
    draw_vertex_texture_colour = _v6;
    draw_primitive_end = _w6;
    d3d_primitive_begin = _x6;
    d3d_primitive_begin_texture = _y6;
    d3d_vertex = _z6;
    d3d_vertex_color = _A6;
    d3d_vertex_colour = _A6;
    d3d_vertex_texture = _B6;
    d3d_vertex_texture_color = _C6;
    d3d_vertex_texture_colour = _C6;
    d3d_vertex_normal = _D6;
    d3d_vertex_normal_color = _E6;
    d3d_vertex_normal_colour = _E6;
    d3d_vertex_normal_texture = _F6;
    d3d_vertex_normal_texture_color = _G6;
    d3d_vertex_normal_texture_colour = _G6;
    d3d_primitive_end = _H6;
}

function _I6(_J6) {
    switch (_J6) {
        case _i6:
            return _H5._K6;
        case _j6:
            return _H5._L6;
        case _k6:
            return _H5._M6;
        case _l6:
            return _H5._I5;
        case _m6:
            return _H5._N6;
        case _n6:
            return _H5._O6;
        case _o6:
            return _H5._I5;
    }
    return -1;
}

function _P6() {
    _e6 = 0;
    _f6 = -1;
    _g6 = null;
    _h6 = null;
}

function _q6(_Q6) {
    _r6(_Q6, -1);
}

function _r6(_Q6, _l4) {
    _e6 = _Q6;
    _f6 = null;
    _g6 = null;
    if (typeof(_l4) == "object") {
        _f6 = _l4._R6;
        _g6 = _l4._S6;
    } else if ((_l4 != -1) && _P1[_l4]) {
        _f6 = _P1[_l4];
    }
    if (_f6 && !_f6._C5) {
        _D5({
            _T1: _f6
        });
    }
    _h6 = new _T6(_U6, _b4._V6(_b4._J5), false);
}

function _s6(_h2, _i2) {
    var _K5 = _h6._L5() >> 2;
    var index = _h6._M5 * _K5;
    _h6._W6(1);
    _h6._O5[index + 0] = _h2;
    _h6._O5[index + 1] = _i2;
    _h6._O5[index + 2] = _Y5;
    _h6._S5[index + 0] = 0;
    _h6._S5[index + 1] = 0;
    _h6._Q5[index] = ((_X6 * 255.0) << 24) | (_Y6 & 0x00ffffff);
}

function _t6(_h2, _i2, _Z6, __6) {
    var _K5 = _h6._L5() >> 2;
    var index = _h6._M5 * _K5;
    _h6._W6(1);
    _h6._O5[index + 0] = _h2;
    _h6._O5[index + 1] = _i2;
    _h6._O5[index + 2] = _Y5;
    _h6._S5[index + 0] = 0;
    _h6._S5[index + 1] = 0;
    _h6._Q5[index] = ((__6 * 255.0) << 24) | _07(_Z6);
}

function _u6(_h2, _i2, _17, _27) {
    var _K5 = _h6._L5() >> 2;
    var index = _h6._M5 * _K5;
    _h6._W6(1);
    _h6._O5[index + 0] = _h2;
    _h6._O5[index + 1] = _i2;
    _h6._O5[index + 2] = _Y5;
    var _37 = _47(_17, _27);
    _h6._S5[index + 0] = _37._W1;
    _h6._S5[index + 1] = _37._X1;
    _h6._Q5[index] = ((_X6 * 255.0) << 24) | (_Y6 & 0x00ffffff);
}

function _v6(_h2, _i2, _17, _27, _Z6, __6) {
    var _K5 = _h6._L5() >> 2;
    var index = _h6._M5 * _K5;
    _h6._W6(1);
    _h6._O5[index + 0] = _h2;
    _h6._O5[index + 1] = _i2;
    _h6._O5[index + 2] = _Y5;
    var _37 = _47(_17, _27);
    _h6._S5[index + 0] = _37._W1;
    _h6._S5[index + 1] = _37._X1;
    _h6._Q5[index] = ((__6 * 255.0) << 24) | _07(_Z6);
}

function _w6() {
    var _57 = _I6(_e6);
    if (_57 == -1) {
        return;
    }
    var _67 = _h6._77.subarray(0, _h6._M5 * _h6._L5());
    var _87 = _f6 ? _f6._C5 : null;
    var _F5 = _b4._G5(_57, _87, _b4._J5, _h6._M5);
    _F5._77.set(_67, _F5._M5 * _F5._L5());
    _F5._M5 += _h6._M5;
}

function _x6(kind) {
    d3d_primitive_begin_texture(kind, -1);
}

function _y6(_Q6, _l4) {
    _e6 = _Q6;
    _f6 = null;
    _g6 = null;
    if (typeof(_l4) == "object") {
        _f6 = _l4._R6;
        _g6 = _l4._S6;
    } else if ((_l4 != -1) && _P1[_l4]) {
        _f6 = _P1[_l4];
    }
    if (_f6 && !_f6._C5) {
        _D5({
            _T1: _f6
        });
    }
    _h6 = new _T6(_U6, _b4._V6(_b4._97), false);
}

function _47(_17, _27) {
    if (_g6 && _f6) {
        return ({
            _W1: (_g6.x + (_17 * _g6.CropWidth)) / _f6._a7,
            _X1: (_g6.y + (_27 * _g6.CropHeight)) / _f6._b7
        });
    } else {
        return ({
            _W1: _17,
            _X1: _27
        });
    }
};

function _z6(_h2, _i2, _c7) {
    var _K5 = _h6._L5() >> 2;
    var index = _h6._M5 * _K5;
    _h6._W6(1);
    _h6._O5[index + 0] = _h2;
    _h6._O5[index + 1] = _i2;
    _h6._O5[index + 2] = _c7;
    _h6._d7[index + 0] = 0;
    _h6._d7[index + 1] = 0;
    _h6._d7[index + 2] = 0;
    _h6._S5[index + 0] = 0;
    _h6._S5[index + 1] = 0;
    _h6._Q5[index] = ((_X6 * 255.0) << 24) | (_Y6 & 0x00ffffff);
}

function _A6(_h2, _i2, _c7, _e7, __6) {
    var _K5 = _h6._L5() >> 2;
    var index = _h6._M5 * _K5;
    _h6._W6(1);
    _h6._O5[index + 0] = _h2;
    _h6._O5[index + 1] = _i2;
    _h6._O5[index + 2] = _c7;
    _h6._d7[index + 0] = 0;
    _h6._d7[index + 1] = 0;
    _h6._d7[index + 2] = 0;
    _h6._S5[index + 0] = 0;
    _h6._S5[index + 1] = 0;
    _h6._Q5[index] = ((__6 * 255.0) << 24) | _07(_e7);
}

function _B6(_h2, _i2, _c7, _f7, _g7) {
    var _K5 = _h6._L5() >> 2;
    var index = _h6._M5 * _K5;
    _h6._W6(1);
    _h6._O5[index + 0] = _h2;
    _h6._O5[index + 1] = _i2;
    _h6._O5[index + 2] = _c7;
    _h6._d7[index + 0] = 0;
    _h6._d7[index + 1] = 0;
    _h6._d7[index + 2] = 0;
    var _37 = _47(_f7,
        _g7);
    _h6._S5[index + 0] = _37._W1;
    _h6._S5[index + 1] = _37._X1;
    _h6._Q5[index] = ((_X6 * 255.0) << 24) | (_Y6 & 0x00ffffff);
}

function _C6(_h2, _i2, _c7, _f7, _g7, _e7, __6) {
    var _K5 = _h6._L5() >> 2;
    var index = _h6._M5 * _K5;
    _h6._W6(1);
    _h6._O5[index + 0] = _h2;
    _h6._O5[index + 1] = _i2;
    _h6._O5[index + 2] = _c7;
    _h6._d7[index + 0] = 0;
    _h6._d7[index + 1] = 0;
    _h6._d7[index + 2] = 0;
    var _37 = _47(_f7, _g7);
    _h6._S5[index + 0] = _37._W1;
    _h6._S5[index + 1] = _37._X1;
    _h6._Q5[index] = ((__6 * 255.0) << 24) | _07(_e7);
}

function _D6(_h2, _i2, _c7, _h7, _i7, _j7) {
    var _K5 = _h6._L5() >> 2;
    var index = _h6._M5 * _K5;
    _h6._W6(1);
    _h6._O5[index + 0] = _h2;
    _h6._O5[index + 1] = _i2;
    _h6._O5[index + 2] = _c7;
    _h6._d7[index + 0] = _h7;
    _h6._d7[index + 1] = _i7;
    _h6._d7[index + 2] = _j7;
    _h6._S5[index + 0] = 0;
    _h6._S5[index + 1] = 0;
    _h6._Q5[index] = ((_X6 * 255.0) << 24) | (_Y6 & 0x00ffffff);
}

function _E6(_h2, _i2, _c7, _h7, _i7, _j7, _e7, __6) {
    var _K5 = _h6._L5() >> 2;
    var index = _h6._M5 * _K5;
    _h6._W6(1);
    _h6._O5[index + 0] = _h2;
    _h6._O5[index + 1] = _i2;
    _h6._O5[index + 2] = _c7;
    _h6._d7[index + 0] = _h7;
    _h6._d7[index + 1] = _i7;
    _h6._d7[index + 2] = _j7;
    _h6._S5[index + 0] = 0;
    _h6._S5[index + 1] = 0;
    _h6._Q5[index] = ((__6 * 255.0) << 24) | _07(_e7);
}

function _F6(_h2, _i2, _c7, _h7, _i7, _j7, _f7, _g7) {
    var _K5 = _h6._L5() >> 2;
    var index = _h6._M5 * _K5;
    _h6._W6(1);
    _h6._O5[index + 0] = _h2;
    _h6._O5[index + 1] = _i2;
    _h6._O5[index + 2] = _c7;
    _h6._d7[index + 0] = _h7;
    _h6._d7[index + 1] = _i7;
    _h6._d7[index + 2] = _j7;
    var _37 = _47(_f7, _g7);
    _h6._S5[index + 0] = _37._W1;
    _h6._S5[index + 1] = _37._X1;
    _h6._Q5[index] = ((_X6 * 255.0) << 24) | (_Y6 & 0x00ffffff);
}

function _G6(_h2, _i2, _c7, _h7, _i7, _j7, _f7, _g7, _e7, __6) {
    var _K5 = _h6._L5() >> 2;
    var index = _h6._M5 * _K5;
    _h6._W6(1);
    _h6._O5[index + 0] = _h2;
    _h6._O5[index + 1] = _i2;
    _h6._O5[index + 2] = _c7;
    _h6._d7[index + 0] = _h7;
    _h6._d7[index + 1] = _i7;
    _h6._d7[index + 2] = _j7;
    var _37 = _47(_f7, _g7);
    _h6._S5[index + 0] = _37._W1;
    _h6._S5[index + 1] = _37._X1;
    _h6._Q5[index] = ((__6 * 255.0) << 24) | _07(_e7);
}

function _H6() {
    var _57 = _I6(_e6);
    if (_57 == -1) {
        return;
    }
    var _67 = _h6._77.subarray(0, _h6._M5 * _h6._L5());
    var _87 = _f6 ? _f6._C5 : null;
    var _F5 = _b4._G5(_57, _87, _b4._97, _h6._M5);
    _F5._77.set(_67, _F5._M5 * _F5._L5());
    _F5._M5 += _h6._M5;
}

function _k7(_l7) {
    var _m7 = null,
        _n7 = null,
        _o7 = null,
        _p7 = false,
        _q7 = null,
        _r7;
    var _s7 = 0,
        _t7 = 0,
        _u7 = 0,
        _v7 = 0;
    (function() {
        _m7 = new ArrayBuffer(_l7);
        _n7 = new DataView(_m7);
    })();

    function _w7(_x7, _y7) {
        var _z7 = false;
        var _A7 = _q7._B7;
        for (var i = 0; i < _A7.length; i++) {
            var _C7 = _A7[i];
            if (((_x7 == -1) || (_C7._D7 == _x7)) && (_C7.type == _y7)) {
                _z7 = true;
                if ((_C7._E7 & _s7) === 0) {
                    var _F7 = (_v7 + _C7.offset);
                    _s7 |= _C7._E7;
                    if (_q7._G7 === _s7) {
                        _s7 = 0;
                        _t7++;
                        _v7 += _q7._H7;
                        if ((_v7 + _q7._H7) >= _m7.byteLength) {
                            this._I7(_m7.byteLength * 2);
                        }
                    }
                    return _F7;
                }
            }
        }
        if (_z7) {
            debug("VERTEX BUILDER: element already written, must write the whole vertex first\n\n", true);
            return -1;
        }
        debug("VERTEX BUILDER: Vertex format does not contain selected type.\n\n",
            true);
        return -1;
    };
    this._I7 = function(_l7) {
        var _J7 = new ArrayBuffer(_l7);
        var _K7 = new Int8Array(_m7);
        var _L7 = new Int8Array(_J7);
        _L7.set(_K7);
        _m7 = _J7;
        _n7 = new DataView(_m7);
    };
    this._M7 = function(_N7) {
        _s7 = 0;
        _t7 = 0;
        _u7 = 0;
        _v7 = 0;
        _r7 = _N7;
        _q7 = _b4._V6(_N7);
        if (_q7._H7 > _m7.byteLength) {
            this._I7(_q7._H7 * 36);
        }
    };
    this._O7 = function() {};
    this._P7 = function(x, y) {
        var _F7 = _w7(_H5._Q7, _H5._R7);
        if (_F7 >= 0) {
            _n7.setFloat32(_F7, x, true);
            _n7.setFloat32(_F7 + 4, y, true);
        }
    };
    this._S7 = function(x, y, _96) {
        var _F7 = _w7(_H5._Q7, _H5._T7);
        if (_F7 >= 0) {
            _n7.setFloat32(_F7,
                x, true);
            _n7.setFloat32(_F7 + 4, y, true);
            _n7.setFloat32(_F7 + 8, _96, true);
        }
    };
    this._U7 = function(_e7, __6) {
        var _F7 = _w7(_H5._V7, _H5._W7);
        if (_F7 >= 0) {
            var _X7 = ((__6 * 255.0) << 24) | _07(_e7);
            _n7.setUint32(_F7, _X7, true);
        }
    };
    this._Y7 = function(_Z7) {
        var _F7 = _w7(_H5._V7, _H5._W7);
        if (_F7 >= 0) {
            var _F4 = ((_Z7 & 0xff) << 24) | ((_Z7 & 0xff00) << 8) | ((_Z7 & 0xff0000) >> 8) | ((_Z7 & 0xff000000) >> 24);
            _n7.setUint32(_F7, _F4, true);
        }
    };
    this.__7 = function(_08) {
        var _F7 = _w7(_H5._V7, _H5._W7);
        if (_F7 >= 0) {
            var _F4 = (_08 & 0xff000000) | ((_08 & 0xff) << 16) | (_08 & 0xff00) | ((_08 & 0xff0000) >> 16);
            _n7.setUint32(_F7, _F4, true);
        }
    };
    this._18 = function(_W1, _X1) {
        var _F7 = _w7(_H5._28, _H5._R7);
        if (_F7 >= 0) {
            _n7.setFloat32(_F7, _W1, true);
            _n7.setFloat32(_F7 + 4, _X1, true);
        }
    };
    this._38 = function(x, y, _96) {
        var _F7 = _w7(_H5._48, _H5._T7);
        if (_F7 >= 0) {
            _n7.setFloat32(_F7, x, true);
            _n7.setFloat32(_F7 + 4, y, true);
            _n7.setFloat32(_F7 + 8, _96, true);
        }
    };
    this._58 = function(x) {
        var _F7 = _w7(-1, _H5._68);
        if (_F7 >= 0) {
            _n7.setFloat32(_F7, x, true);
        }
    };
    this._78 = function(x, y) {
        var _F7 = _w7(-1, _H5._R7);
        if (_F7 >= 0) {
            _n7.setFloat32(_F7, x, true);
            _n7.setFloat32(_F7 + 4,
                y, true);
        }
    };
    this._88 = function(x, y, _96) {
        var _F7 = _w7(-1, _H5._T7);
        if (_F7 >= 0) {
            _n7.setFloat32(_F7, x, true);
            _n7.setFloat32(_F7 + 4, y, true);
            _n7.setFloat32(_F7 + 8, _96, true);
        }
    };
    this._98 = function(x, y, _96, w) {
        var _F7 = _w7(-1, _H5._a8);
        if (_F7 >= 0) {
            _n7.setFloat32(_F7, x, true);
            _n7.setFloat32(_F7 + 4, y, true);
            _n7.setFloat32(_F7 + 8, _96, true);
            _n7.setFloat32(_F7 + 12, w, true);
        }
    };
    this._b8 = function(x, y, _96, w) {
        var _F7 = _w7(-1, _H5._c8);
        if (_F7 >= 0) {
            _n7.setUint8(_F7, x, true);
            _n7.setUint8(_F7 + 1, y, true);
            _n7.setUint8(_F7 + 2, _96, true);
            _n7.setUint8(_F7 + 3,
                w, true);
        }
    };
    this._d8 = function() {
        var _e8 = new _T6(_t7, _q7, false);
        var _f8 = _t7 * _q7._H7;
        var _g8 = new Int8Array(_m7, 0, _f8);
        _e8._77.set(_g8);
        _e8._M5 += _t7;
        _e8._d8();
        _o7 = _e8;
        _p7 = true;
        _m7 = null;
        _n7 = null;
    };
    this._h8 = function(_i8, _j8) {
        if (_p7) {
            _b4._k8(_i8, _j8._R6._C5, _o7, 0);
        } else {
            var _F5;
            if (_j8 == -1) {
                _F5 = _b4._G5(_i8, null, _r7, _t7);
            } else {
                _F5 = _b4._G5(_i8, _j8._R6._C5, _r7, _t7);
            }
            var _l8 = _F5._M5 * _q7._H7;
            var _g8 = new Int8Array(_m7, 0, _t7 * _q7._H7);
            _F5._77.set(_g8, _l8);
            _F5._M5 += _t7;
        }
    };
}
var _m8 = null;

function _n8(_o8) {
    var _p8 = 0,
        _q8 = 0.5;
    var _r8 = _o8;
    var _s8 = [];
    var _t8 = [];
    var _u8 = [];
    var _v8 = _p8;
    var _w8 = _q8;
    Object.defineProperties(this, {
        _x8: {
            get: function() {
                return _v8;
            },
            set: function(_y8) {
                _v8 = _y8;
            }
        },
        _z8: {
            get: function() {
                return _w8;
            },
            set: function(_y8) {
                _w8 = _y8;
            }
        }
    });
    this._A8 = function() {
        _t8 = _s8.slice();
        _u8 = _r8.axes.slice();
        var _B8 = _r8.buttons;
        if (_B8) {
            for (var _g3 in _B8) {
                if (!_B8.hasOwnProperty(_g3)) continue;
                if (typeof(_B8[_g3]) === "object") {
                    _s8[_g3] = _B8[_g3].value;
                } else {
                    _s8[_g3] = _B8[_g3];
                }
            }
        }
    };
    this._C8 = function() {
        if (_r8) {
            return _r8.id || "";
        }
        return "";
    };
    this._D8 = function() {
        if (_s8) {
            return _s8.length;
        }
        return 0;
    };
    this._E8 = function(_F8) {
        var _G8 = _s8[_F8];
        var _H8 = _t8[_F8];
        if ((_G8 !== undefined) && (_H8 !== undefined)) {
            return ((_G8 >= _w8) && (_H8 < _w8));
        }
        return false;
    };
    this._I8 = function(_F8) {
        var _G8 = _s8[_F8];
        var _H8 = _t8[_F8];
        if ((_G8 !== undefined) && (_H8 !== undefined)) {
            return ((_G8 < _w8) && (_H8 >= _w8));
        }
        return false;
    };
    this._J8 = function(_F8) {
        var _G8;
        if (typeof(_s8[_F8]) === "object") {
            _G8 = _s8[_F8].value;
        } else {
            _G8 = _s8[_F8];
        }
        if (_G8 !== undefined) {
            return (_G8 >= _w8);
        }
        return false;
    };
    this._K8 = function(_F8) {
        var _G8;
        if (typeof(_s8[_F8]) === "object") {
            _G8 = _s8[_F8].value;
        } else {
            _G8 = _s8[_F8];
        }
        return _G8 || 0.0;
    };
    this._L8 = function() {
        if (_u8) {
            return _u8.length;
        }
        return 0;
    };
    this._M8 = function(_N8, _O8) {
        var _P8 = _u8[_N8] || 0;
        if (_v8 > 0.0) {
            var _Q8 = Math.abs(_P8);
            if (_Q8 < _v8) {
                _P8 = 0.0;
            } else {
                var sign = (_P8 >= 0) ? 1.0 : -1.0;
                _P8 = ((_Q8 - _v8) / (_O8 - _v8)) * sign;
            }
        }
        return _P8;
    };
}

function _R8() {
    var _S8 = 1.0,
        _T8 = 1.0;
    var _U8 = 0,
        _V8 = 1,
        _W8 = 2;
    var _X8 = 0x8000,
        _Y8 = 0x8001,
        _Z8 = 0x8002,
        __8 = 0x8003,
        _09 = 0x8004,
        _19 = 0x8005,
        _29 = 0x8006,
        _39 = 0x8007,
        _49 = 0x8008,
        _59 = 0x8009,
        _69 = 0x800A,
        _79 = 0x800B,
        _89 = 0x800C,
        _99 = 0x800D,
        _a9 = 0x800E,
        _b9 = 0x800F,
        _c9 = 0x8010,
        _d9 = 0x8011,
        _e9 = 0x8012,
        _f9 = 0x8013,
        _g9 = 0x8014;
    var _h9 = 0,
        _i9 = 1,
        _j9 = 2,
        _k9 = 3,
        _l9 = 4,
        _m9 = 5,
        _n9 = 6,
        _o9 = 7,
        _p9 = 8,
        _q9 = 9,
        _r9 = 10,
        _s9 = 11,
        _t9 = 12,
        _u9 = 13,
        _v9 = 14,
        _w9 = 15;
    var _x9 = 0,
        _y9 = 1,
        _z9 = 2,
        _A9 = 3;

    function _B9() {
        return !!navigator["getGamepads"] || !!navigator["webkitGetGamepads"] || !!navigator["webkitGamepads"];
    }
    var _C9 = _B9() ? _V8 : _U8;
    var _D9 = [];

    function _E9() {
        if (navigator["getGamepads"]) {
            return navigator["getGamepads"]();
        }
        if (navigator["webkitGetGamepads"]) {
            return navigator["webkitGetGamepads"]();
        }
        if (navigator["webkitGamepads"]) {
            return navigator["webkitGamepads"]();
        }
        return null;
    }

    function _F9() {
        var i = 0;
        for (i = 0; i < _D9.length; i++) {
            _D9[i]._A8();
        }
    }

    function _G9() {
        var _H9 = 0;
        var gamepads = _E9();
        if (gamepads !== null) {
            for (_H9 = 0; _H9 < gamepads.length; ++_H9) {
                var _I9 = gamepads[_H9];
                if (!_I9) {
                    if (_D9[_H9]) {
                        _D9.splice(_H9, 1);
                    }
                } else {
                    if (!_D9[_H9]) {
                        _D9[_H9] = new _n8(_I9);
                    }
                }
            }
        }
    }

    function _J9(_F8) {
        if (_F8 < _X8) {
            return _F8;
        }
        switch (_F8) {
            case _Y8:
                return _h9;
            case _Z8:
                return _i9;
            case __8:
                return _j9;
            case _09:
                return _k9;
            case _19:
                return _l9;
            case _29:
                return _m9;
            case _39:
                return _n9;
            case _49:
                return _o9;
            case _59:
                return _p9;
            case _69:
                return _q9;
            case _79:
                return _r9;
            case _89:
                return _s9;
            case _99:
                return _t9;
            case _a9:
                return _u9;
            case _b9:
                return _v9;
            case _c9:
                return _w9;
        }
        return 0;
    }

    function _K9(_N8) {
        if (_N8 < _X8) {
            return _N8;
        }
        switch (_N8) {
            case _d9:
                return _x9;
            case _e9:
                return _y9;
            case _f9:
                return _z9;
            case _g9:
                return _A9;
        }
        return 0;
    }

    function _R8() {}
    this._L9 = function() {
        return _D9.length;
    };
    this._M9 = function(_N9) {
        var _O9 = _D9[_N9];
        if (_O9) {
            return _O9._C8();
        }
        return "";
    };
    this._P9 = function() {
        return (_C9 !== _U8);
    };
    this._z8 = function(_N9) {
        var _O9 = _D9[_N9];
        if (_O9) {
            return _O9._z8;
        }
        return 0.0;
    };
    this._Q9 = function(_N9, _R9) {
        var _O9 = _D9[_N9];
        if (_O9) {
            if ((_R9 >= 0.0) && (_R9 <= _S8)) {
                _O9._z8 = _R9;
            }
        }
    };
    this._x8 = function(_N9) {
        var _O9 = _D9[_N9];
        if (_O9) {
            return _O9._x8;
        }
        return 0.0;
    };
    this._S9 = function(_N9, _T9) {
        var _O9 = _D9[_N9];
        if (_O9) {
            if ((_T9 >= 0.0) && (_T9 <= _T8)) {
                _O9._x8 = _T9;
            }
        }
    };
    this._U9 = function() {
        _D9 = [];
    };
    this._V9 = function() {
        switch (_C9) {
            case _V8:
                _G9();
                _F9();
                break;
            case _W8:
                _F9();
                break;
            case _U8:
            default:
                return;
        }
    };
    this._W9 = function(_N9) {
        if (_D9[_N9] !== null && _D9[_N9] !== undefined) {
            return true;
        }
        return false;
    };
    this._D8 = function(_N9) {
        var _O9 = _D9[_N9];
        if (_O9) {
            return _O9._D8();
        }
        return 0;
    };
    this._L8 = function(_N9) {
        var _O9 = _D9[_N9];
        if (_O9) {
            return _O9._L8();
        }
        return 0;
    };
    this._J8 = function(_N9, _F8) {
        var _O9 = _D9[_N9];
        if (_O9) {
            return _O9._J8(_J9(_F8), _O9._z8);
        }
        return false;
    };
    this._E8 = function(_N9, _F8) {
        var _O9 = _D9[_N9];
        if (_O9) {
            return _O9._E8(_J9(_F8), _O9._z8);
        }
        return false;
    };
    this._I8 = function(_N9, _F8) {
        var _O9 = _D9[_N9];
        if (_O9) {
            return _O9._I8(_J9(_F8), _O9._z8);
        }
        return false;
    };
    this._K8 = function(_N9, _F8) {
        var _O9 = _D9[_N9];
        if (_O9) {
            return _O9._K8(_J9(_F8));
        }
        return 0;
    };
    this._M8 = function(_N9, _N8) {
        var _O9 = _D9[_N9];
        if (_O9) {
            return _O9._M8(_K9(_N8), _T8);
        }
        return 0;
    };
};
var _X9 = [];
var _Y9 = "None";
var _Z9 = 0;
var __9 = 0;

function _0a() {
    this.x = 0;
    this.y = 0;
    this._J8 = 0;
    this._E8 = 0;
    this._I8 = 0;
    this._1a = 0;
};
_0a.prototype._U9 = function() {
    this._J8 = 0;
    this._E8 = 0;
    this._I8 = 0;
    this._1a = 0;
};
_0a.prototype._2a = function(_h2, _i2) {
    if (_81) {
        var _3a;
        if (!_81._4a) {
            _3a = _5a;
        } else {
            _3a = _81._6a;
        }
        for (_X1 = 0; _X1 < _3a.length; _X1++) {
            _7a = _3a[_X1];
            if (_7a.visible) {
                _8a(canvas, _9a);
                if (((_h2 - _9a.left) >= _7a._aa) && ((_h2 - _9a.left) < _7a._ba) && ((_i2 - _9a.top) >= _7a._ca) && ((_i2 - _9a.top) < _7a._da)) {
                    this.x = _7a._ea(_h2);
                    this.y = _7a._fa(_i2);
                    return;
                }
            }
        }
    }
    this.x = _h2;
    this.y = _i2;
};

function _ga(_ha, _h2, _i2) {
    this.id = _ha;
    this.x = _h2;
    this.y = _i2;
}

function log(_ia) {
    setTimeout(function() {
        throw new _ja(_ia);
    }, 0);
}

function _ka(_la) {
    for (var i = 0; i < _X9.length; i++) {
        if (_X9[i] === _la) {
            return i;
        }
    }
    return -1;
}

function _ma(_la) {
    var _na = -1;
    for (var i = 0; i < _X9.length; i++) {
        if ((_X9[i] === _la) || (_X9[i] === -1)) {
            _na = i;
            break;
        }
    }
    if (_na == -1) {
        _na = _X9.length;
    }
    _X9[_na] = _la;
    _oa[_na] = new _0a();
    return _na;
}
var _pa = false;

function _qa(event) {
    if (!_pa && (_ra == _sa)) {
        _ta();
        _pa = true;
    }
    for (var _ua = 0; _ua < event.changedTouches.length; _ua++) {
        var _va = event.changedTouches[_ua];
        var type = "";
        var _na = -1;
        _Y9 = event.type;
        switch (event.type) {
            case "touchstart":
                _na = _ma(_va["identifier"]);
                break;
            case "touchend":
            case "touchcancel":
                _na = _ka(_va["identifier"]);
                _X9[_na] = -1;
                break;
            case "touchmove":
                _na = _ka(_va["identifier"]);
                break;
            default:
                return;
        }
        var _wa;
        var _xa;
        if (_ya) {
            var _za = {
                x: 0,
                y: 0
            };
            _ya(_va, _za);
            _wa = _za.x;
            _xa = _za.y;
        } else {
            _wa = _va.pageX;
            _xa = _va.pageY;
        }
        if (_na == 0) {
            if (_Aa != null) {
                _Ba = _wa;
                _Ca = _xa;
            }
            switch (event.type) {
                case "touchstart":
                    _Da = 1;
                    break;
                case "touchmove":
                    _Da = 1;
                    break;
                case "touchcancel":
                case "touchend":
                    _Da = 0;
                    break;
            }
        }
        _oa[_na]._2a(_wa, _xa);
        _Ea[_na].x = _wa;
        _Ea[_na].y = _xa;
        switch (event.type) {
            case "touchstart":
                _oa[_na]._J8 = 1;
                _Ea[_na]._Fa = _Ga | _Ha | _Ia;
                break;
            case "touchcancel":
            case "touchend":
                _oa[_na]._J8 = 0;
                _Ea[_na]._Fa = 0;
                break;
            case "touchmove":
            default:
                break;
        }
        event.preventDefault();
    }
}

function _Ja() {
    canvas.ontouchstart = _qa;
    canvas.ontouchmove = _qa;
    canvas.ontouchend = _qa;
    canvas.ontouchcancel = _qa;
}
var _Ka, _La, _Ma, _Na, _Oa, _Pa, _Qa;

function ds_set_precision(_Ra) {
    _Sa = _Ra;
}

function _Ta() {
    this.width = 0;
    this.height = 0;
    this.body = [];
}

function _Ua(_Va, _Wa) {
    this._Xa = [];
    this._a7 = _Va;
    this._b7 = _Wa;
    var _f3 = _Va * _Wa;
    for (var i = 0; i < _f3; i++) {
        this._Xa[i] = 0;
    }
}
_Ua.prototype._Ya = function(_Za) {
    this._a7 = _Za._a7;
    this._b7 = _Za._b7;
    this._Xa = _Za._Xa.slice();
};

function ds_grid_create(_Va, _Wa) {
    if (_Va < 0 || _Wa < 0) {
        _ja("Error: Invalid ds_grid size: (" + _Va + "," + _Wa + ")");
    }
    var __a = new _Ua(_Va, _Wa);
    var id = _0b._1b(__a);
    return id;
}

function ds_grid_destroy(_ha) {
    _0b._2b(_ha);
}

function ds_grid_copy(_ha,
    _3b) {
    var _4b = _0b._O3(_ha);
    if (!_4b) {
        _ja("Error: invalid dest ds_grid(copy)");
        return;
    }
    var _5b = _0b._O3(_3b);
    if (!_5b) {
        _ja("Error: invalid source ds_grid(copy)");
        return;
    }
    _4b._Ya(_5b);
}

function ds_grid_resize(_ha, _Va, _Wa) {
    if (_Va < 1 || _Wa < 1) {
        _ja("Error: Can't resize grid to 0 (" + string(_Va) + "," + string(_Wa) + ")");
        return;
    }
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid dest ds_grid(copy)");
        return;
    }
    var _6b = new _Ua(_Va, _Wa);
    var i = _0b._1b(_6b);
    ds_grid_set_grid_region(i, _ha, 0, 0, __a._a7 - 1, __a._b7 - 1, 0, 0);
    _0b._2b(i);
    _0b._7b(_ha,
        _6b);
}

function ds_grid_width(_ha) {
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_width)");
        return;
    }
    return __a._a7;
}

function ds_grid_height(_ha) {
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_height)");
        return;
    }
    return __a._b7;
}

function ds_grid_clear(_ha, _f2) {
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_height)");
        return;
    }
    for (var i = 0; i < __a._Xa.length; i++) {
        __a._Xa[i] = _f2;
    }
}
var ds_grid_set = _8b;

function _8b(_ha, _h2, _i2, _f2) {
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_set)");
        return;
    }
    if (_h2 < 0 || _h2 >= __a._a7 || _i2 < 0 || _i2 >= __a._b7) {
        _ja("Error: grid out of bounds(set) - GridID: " + _ha + "  size[" + __a._a7 + "," + __a._b7 + "]  at  (" + _h2 + "," + _i2 + ")");
        return;
    }
    __a._Xa[_h2 + (_i2 * __a._a7)] = _f2;
}

function _9b(_ha, _h2, _i2, _f2) {
    var __a = _0b._O3(_ha);
    if ((_h2 < 0) || (_h2 >= __a._a7) || (_i2 < 0) || (_i2 >= __a._b7)) {
        return;
    }
    __a._Xa[_h2 + (_i2 * __a._a7)] = _f2;
}
var ds_grid_set_pre = _ab;

function _ab(_ha, _h2, _i2, _f2) {
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_set)");
        return _f2;
    }
    if (_h2 < 0 || _h2 >= __a._a7 || _i2 < 0 || _i2 >= __a._b7) {
        _ja("Error: grid out of bounds(set) - GridID: " + _ha + "  size[" + __a._a7 + "," + __a._b7 + "]  at  (" + _h2 + "," + _i2 + ")");
        return _f2;
    }
    __a._Xa[_h2 + (_i2 * __a._a7)] = _f2;
    return _f2;
}

function _bb(_ha, _h2, _i2, _f2) {
    var __a = _0b._O3(_ha);
    if ((_h2 < 0) || (_h2 >= __a._a7) || (_i2 < 0) || (_i2 >= __a._b7)) {
        return _f2;
    }
    __a._Xa[_h2 + (_i2 * __a._a7)] = _f2;
    return _f2;
}
var ds_grid_set_post = _cb;

function _cb(_ha, _h2, _i2, _f2) {
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_set)");
        return _f2;
    }
    if (_h2 < 0 || _h2 >= __a._a7 || _i2 < 0 || _i2 >= __a._b7) {
        _ja("Error: grid out of bounds(set) - GridID: " + _ha + "  size[" + __a._a7 + "," + __a._b7 + "]  at  (" + _h2 + "," + _i2 + ")");
        return _f2;
    }
    var _db = __a._Xa[_h2 + (_i2 * __a._a7)];
    __a._Xa[_h2 + (_i2 * __a._a7)] = _f2;
    return _db;
}

function _eb(_ha, _h2, _i2, _f2) {
    var __a = _0b._O3(_ha);
    if ((_h2 < 0) || (_h2 >= __a._a7) || (_i2 < 0) || (_i2 >= __a._b7)) {
        return _f2;
    }
    var _db = __a._Xa[_h2 + (_i2 * __a._a7)];
    __a._Xa[_h2 + (_i2 * __a._a7)] = _f2;
    return _db;
}

function ds_grid_add(_ha, _h2, _i2, _f2) {
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_add)");
        return;
    }
    if (_h2 < 0 || _h2 >= __a._a7 || _i2 < 0 || _i2 >= __a._b7) {
        _ja("Error: grid out of bounds(ds_grid_add): " + _ha + " (" + _h2 + "," + _i2 + ")");
        return;
    }
    __a._Xa[_h2 + (_i2 * __a._a7)] += _f2;
}

function ds_grid_multiply(_ha, _h2, _i2, _f2) {
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_multiply)");
        return;
    }
    if (_h2 < 0 || _h2 >= __a._a7 || _i2 < 0 || _i2 >= __a._b7) {
        _ja("Error: grid out of bounds(ds_grid_multiply): " + _ha + " (" + _h2 + "," + _i2 + ")");
        return;
    }
    __a._Xa[_h2 + (_i2 * __a._a7)] *= _f2;
}

function ds_grid_set_region(_ha, _v3, _w3, _S2, _T2, _f2) {
    if (_v3 > _S2) {
        var _f3 = _v3;
        _v3 = _S2;
        _S2 = _f3;
    }
    if (_w3 > _T2) {
        var _f3 = _w3;
        _w3 = _T2;
        _T2 = _f3;
    }
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_set_region)");
        return;
    }
    if ((_v3 < 0 || _v3 >= __a._a7 || _w3 < 0 || _w3 >= __a._b7) || (_S2 < 0 || _S2 >= __a._a7 || _T2 < 0 || _T2 >= __a._b7)) {
        _ja("Error: region out of bounds(ds_grid_set_region): " + _ha);
    }
    for (var y = _w3; y <= _T2; y++) {
        var index = (y * __a._a7) + _v3;
        for (var x = _v3; x <= _S2; x++) {
            __a._Xa[index] = _f2;
            index++;
        }
    }
}

function ds_grid_add_region(_ha,
    _v3, _w3, _S2, _T2, _f2) {
    if (_v3 > _S2) {
        var _f3 = _v3;
        _v3 = _S2;
        _S2 = _f3;
    }
    if (_w3 > _T2) {
        var _f3 = _w3;
        _w3 = _T2;
        _T2 = _f3;
    }
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_add_region)");
        return;
    }
    if ((_v3 < 0 || _v3 >= __a._a7 || _w3 < 0 || _w3 >= __a._b7) || (_S2 < 0 || _S2 >= __a._a7 || _T2 < 0 || _T2 >= __a._b7)) {
        _ja("Error: region out of bounds(ds_grid_add_region): " + _ha);
    }
    for (var y = _w3; y <= _T2; y++) {
        var index = (y * __a._a7) + _v3;
        for (var x = _v3; x <= _S2; x++) {
            __a._Xa[index] += _f2;
            index++;
        }
    }
}

function ds_grid_multiply_region(_ha, _v3, _w3, _S2, _T2,
    _f2) {
    if (_v3 > _S2) {
        var _f3 = _v3;
        _v3 = _S2;
        _S2 = _f3;
    }
    if (_w3 > _T2) {
        var _f3 = _w3;
        _w3 = _T2;
        _T2 = _f3;
    }
    var __a = _0b._O3(_ha);
    if (__a == null || __a == undefined) {
        _ja("Error: invalid ds_grid ID (ds_grid_multiply_region)");
        return;
    }
    if ((_v3 < 0 || _v3 >= __a._a7 || _w3 < 0 || _w3 >= __a._b7) || (_S2 < 0 || _S2 >= __a._a7 || _T2 < 0 || _T2 >= __a._b7)) {
        _ja("Error: region out of bounds(ds_grid_multiply_region): " + _ha);
    }
    for (var y = _w3; y <= _T2; y++) {
        var index = (y * __a._a7) + _v3;
        for (var x = _v3; x <= _S2; x++) {
            __a._Xa[index] *= _f2;
            index++;
        }
    }
}

function ds_grid_set_disk(_ha, _h2, _i2,
    _fb, _f2) {
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_set_disk)");
        return;
    }
    var _03 = 0;
    var _13 = 0;
    var _23 = 0;
    var _33 = 0;
    var i = 0;
    var _k3 = 0;
    _03 = ~~(_c3(0.0, Math.floor(_h2 - _fb)));
    _23 = ~~(_e3(this._a7 - 1, Math.ceil(_h2 + _fb)));
    _13 = ~~(_c3(0, Math.floor(_i2 - _fb)));
    _33 = ~~(_e3(this._b7 - 1, Math.ceil(_i2 + _fb)));
    _fb = _fb * _fb;
    var w = __a._a7;
    for (i = _03; i <= _23; i++) {
        var _gb = (i - _h2) * (i - _h2);
        for (_k3 = _13; _k3 <= _33; _k3++) {
            var _hb = _k3 - _i2;
            if (_gb + (_hb * _hb) <= _fb) {
                if (i >= 0 && i < __a._a7 && _k3 >= 0 && _k3 < __a._b7) {
                    __a._Xa[i + (_k3 * w)] = _f2;
                }
            }
        }
    }
}

function ds_grid_add_disk(_ha, _h2, _i2, _fb, _f2) {
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_set_disk)");
        return;
    }
    var _03 = 0;
    var _13 = 0;
    var _23 = 0;
    var _33 = 0;
    var i = 0;
    var _k3 = 0;
    _03 = ~~(_c3(0.0, Math.floor(_h2 - _fb)));
    _23 = ~~(_e3(this._a7 - 1, Math.ceil(_h2 + _fb)));
    _13 = ~~(_c3(0, Math.floor(_i2 - _fb)));
    _33 = ~~(_e3(this._b7 - 1, Math.ceil(_i2 + _fb)));
    _fb = _fb * _fb;
    var w = __a._a7;
    for (i = _03; i <= _23; i++) {
        var _gb = (i - _h2) * (i - _h2);
        for (_k3 = _13; _k3 <= _33; _k3++) {
            var _hb = _k3 - _i2;
            if (_gb + (_hb * _hb) <= _fb) {
                if (i >= 0 && i < __a._a7 && _k3 >= 0 && _k3 < __a._b7) {
                    __a._Xa[i + (_k3 * w)] += _f2;
                }
            }
        }
    }
}

function ds_grid_multiply_disk(_ha, _h2, _i2, _fb, _f2) {
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_set_disk)");
        return;
    }
    var _03 = 0;
    var _13 = 0;
    var _23 = 0;
    var _33 = 0;
    var i = 0;
    var _k3 = 0;
    _03 = ~~(_c3(0.0, Math.floor(_h2 - _fb)));
    _23 = ~~(_e3(this._a7 - 1, Math.ceil(_h2 + _fb)));
    _13 = ~~(_c3(0, Math.floor(_i2 - _fb)));
    _33 = ~~(_e3(this._b7 - 1, Math.ceil(_i2 + _fb)));
    _fb = _fb * _fb;
    var w = __a._a7;
    for (i = _03; i <= _23; i++) {
        var _gb = (i - _h2) * (i - _h2);
        for (_k3 = _13; _k3 <= _33; _k3++) {
            var _hb = _k3 - _i2;
            if (_gb + (_hb * _hb) <= _fb) {
                if (i >= 0 && i < __a._a7 && _k3 >= 0 && _k3 < __a._b7) {
                    __a._Xa[i + (_k3 * w)] *= _f2;
                }
            }
        }
    }
}

function _ib(_ha, _3b, _v3, _w3, _S2, _T2, _jb, _kb, _lb) {
    if (_v3 > _S2) {
        var _f3 = _v3;
        _v3 = _S2;
        _S2 = _f3;
    }
    if (_w3 > _T2) {
        var _f3 = _w3;
        _w3 = _T2;
        _T2 = _f3;
    }
    var _5b = _0b._O3(_3b);
    if (!_5b) {
        _ja("Error: invalid ds_grid ID (ds_grid_set_grid_region)");
        return;
    }
    var _4b = _0b._O3(_ha);
    if (!_4b) {
        _ja("Error: invalid ds_grid ID (ds_grid_set_grid_region)");
        return;
    }
    var _mb = _v3 + (_5b._a7 * _w3);
    var _nb = _jb + (_4b._a7 * _kb);
    if (_mb >= _nb) {
        for (var y = _w3; y <= _T2; y++) {
            var _ob = _jb;
            var index = (y * _5b._a7) + _v3;
            for (var x = _v3; x <= _S2; x++) {
                if ((x >= 0 && x < _5b._a7 && y >= 0 && y < _5b._b7) && (_ob >= 0 && _ob < _4b._a7 && _kb >= 0 && _kb < _4b._b7)) {
                    _lb(_4b, (_ob + (_kb * _4b._a7)), _5b, index);
                }
                index++;
                _ob++;
            }
            _kb++;
        }
    } else {
        _kb += _T2 - _w3;
        _jb += _S2 - _v3;
        for (var y = _T2; y >= _w3; y--) {
            var _ob = _jb;
            var index = (y * _5b._a7) + _S2;
            for (var x = _S2; x >= _v3; x--) {
                if ((x >= 0 && x < _5b._a7 && y >= 0 && y < _5b._b7) && (_ob >= 0 && _ob < _4b._a7 && _kb >= 0 && _kb < _4b._b7)) {
                    _lb(_4b, (_ob + (_kb * _4b._a7)), _5b, index);
                }
                index--;
                _ob--;
            }
            _kb--;
        }
    }
}

function ds_grid_set_grid_region(_ha, _3b, _v3, _w3, _S2, _T2, _jb, _kb) {
    _ib(_ha, _3b, _v3, _w3, _S2, _T2, _jb, _kb, function _pb(_qb, _rb, _sb, _tb) {
        _qb._Xa[_rb] = _sb._Xa[_tb];
    });
}

function ds_grid_add_grid_region(_ha, _3b, _v3, _w3, _S2, _T2, _jb, _kb) {
    _ib(_ha, _3b, _v3, _w3, _S2, _T2, _jb, _kb, function _pb(_qb, _rb, _sb, _tb) {
        _qb._Xa[_rb] += _sb._Xa[_tb];
    });
}

function ds_grid_multiply_grid_region(_ha, _3b, _v3, _w3, _S2, _T2, _jb, _kb, _f2) {
    _ib(_ha, _3b, _v3, _w3, _S2, _T2, _jb, _kb, function _pb(_qb, _rb, _sb, _tb) {
        _qb._Xa[_rb] *= _sb._Xa[_tb];
    });
}
var ds_grid_get = _ub;

function _ub(_ha, _h2, _i2) {
    var __a = _0b._O3(_ha),
        x = _vb(_h2),
        y = _vb(_i2);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_get)");
        return undefined;
    }
    if (x < 0 || x >= __a._a7 || y < 0 || y >= __a._b7) {
        _ja("Error: grid out of bounds(get) - GridID: " + _ha + "  size[" + __a._a7 + "," + __a._b7 + "]  at  (" + x + "," + y + ")");
        return undefined;
    }
    return __a._Xa[x + (y * __a._a7)];
}

function _wb(_ha, _h2, _i2) {
    var __a = _0b._O3(_ha),
        x = _vb(_h2),
        y = _vb(_i2);
    if ((x < 0) || (x >= __a._a7) || (y < 0) || (y >= __a._b7)) {
        return undefined;
    }
    return __a._Xa[x + (y * __a._a7)];
}

function _xb(_ha, _v3, _w3, _S2, _T2) {
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_get_sum)");
        return 0;
    }
    if (_v3 > _S2) {
        var _f3 = _v3;
        _v3 = _S2;
        _S2 = _f3;
    }
    if (_v3 < 0) _v3 = 0;
    if (_v3 >= __a._a7) _v3 = __a._a7 - 1;
    if (_S2 < 0) _S2 = 0;
    if (_S2 >= __a._a7) _S2 = __a._a7 - 1;
    if (_w3 > _T2) {
        var _f3 = _w3;
        _w3 = _T2;
        _T2 = _f3;
    }
    if (_w3 < 0) _w3 = 0;
    if (_w3 >= __a._b7) _w3 = __a._b7 - 1;
    if (_T2 < 0) _T2 = 0;
    if (_T2 >= __a._b7) _T2 = __a._b7 - 1;
    _La = _Ka = _Ma = _Na = 0;
    var first = true;
    var _n4 = 0;
    for (var y = _w3; y <= _T2; y++) {
        var index = (y * __a._a7) + _v3;
        for (var x = _v3; x <= _S2; x++) {
            var _X1 = __a._Xa[index];
            if (first) {
                _Ka = _La = _X1;
                first = false;
            } else {
                if (_Ka > _X1) _Ka = _X1;
                if (_La < _X1) _La = _X1;
            }
            if (typeof _X1 !== "string") {
                _Ma += _X1;
            }
            _n4++;
            index++;
        }
    }
    _Na = _Ma / _n4;
}

function ds_grid_get_sum(_ha, _v3, _w3, _S2, _T2) {
    _xb(_ha, _v3, _w3, _S2, _T2);
    return _Ma;
}

function ds_grid_get_max(_ha, _v3, _w3, _S2, _T2) {
    _xb(_ha, _v3, _w3, _S2, _T2);
    return _La;
}

function ds_grid_get_min(_ha, _v3, _w3, _S2, _T2) {
    _xb(_ha, _v3, _w3, _S2, _T2);
    return _Ka;
}

function ds_grid_get_mean(_ha, _v3, _w3, _S2, _T2) {
    _xb(_ha, _v3, _w3, _S2, _T2);
    return _Na;
}

function _yb(_ha, _h2, _i2, _fb) {
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_set_disk)");
        return;
    }
    var _03 = 0;
    var _13 = 0;
    var _23 = 0;
    var _33 = 0;
    var i = 0;
    var _k3 = 0;
    _03 = ~~(_c3(0.0, Math.floor(_h2 - _fb)));
    _23 = ~~(_e3(this._a7 - 1, Math.ceil(_h2 + _fb)));
    _13 = ~~(_c3(0, Math.floor(_i2 - _fb)));
    _33 = ~~(_e3(this._b7 - 1, Math.ceil(_i2 + _fb)));
    var first = true;
    var _n4 = 0;
    _La = _Ka = _Ma = 0;
    _fb = _fb * _fb;
    var w = __a._a7;
    for (i = _03; i <= _23; i++) {
        var _gb = (i - _h2) * (i - _h2);
        for (_k3 = _13; _k3 <= _33; _k3++) {
            var _hb = _k3 - _i2;
            if (_gb + (_hb * _hb) <= _fb) {
                if (i >= 0 && i < __a._a7 && _k3 >= 0 && _k3 < __a._b7) {
                    var _X1 = __a._Xa[i + (_k3 * w)];
                    if (first) {
                        _Ka = _La = _X1;
                        first = false;
                    } else {
                        if (_Ka > _X1) _Ka = _X1;
                        if (_La < _X1) _La = _X1;
                    }
                    if (typeof _X1 !== "string") {
                        _Ma += _X1;
                    }
                    _n4++;
                }
            }
        }
    }
    _Na = _Ma / _n4;
}

function ds_grid_get_disk_sum(_ha, _h2, _i2, _fb) {
    _yb(_ha, _h2, _i2, _fb);
    return _Ma;
}

function ds_grid_get_disk_max(_ha, _h2, _i2, _fb) {
    _yb(_ha, _h2, _i2, _fb);
    return _La;
}

function ds_grid_get_disk_min(_ha, _h2, _i2, _fb) {
    _yb(_ha, _h2, _i2, _fb);
    return _Ka;
}

function ds_grid_get_disk_mean(_ha, _h2, _i2, _fb) {
    _yb(_ha, _h2, _i2, _fb);
    return _Na;
}

function _zb(_ha, _v3, _w3, _S2, _T2, _f2) {
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_get_sum)");
        return 0;
    }
    if (_v3 > _S2) {
        var _f3 = _v3;
        _v3 = _S2;
        _S2 = _f3;
    }
    if (_v3 < 0) _v3 = 0;
    if (_v3 >= __a._a7) _v3 = __a._a7 - 1;
    if (_S2 < 0) _S2 = 0;
    if (_S2 >= __a._a7) _S2 = __a._a7 - 1;
    if (_w3 > _T2) {
        var _f3 = _w3;
        _w3 = _T2;
        _T2 = _f3;
    }
    if (_w3 < 0) _w3 = 0;
    if (_w3 >= __a._b7) _w3 = __a._b7 - 1;
    if (_T2 < 0) _T2 = 0;
    if (_T2 >= __a._b7) _T2 = __a._b7 - 1;
    _Oa = false;
    _Pa = -1;
    _Qa = -1;
    for (var y = _w3; y <= _T2; y++) {
        var index = (y * __a._a7) + _v3;
        for (var x = _v3; x <= _S2; x++) {
            var _X1 = __a._Xa[index];
            if ((typeof(_f2) == "number" && typeof(_X1) == "number")) {
                if (_Sa > abs(_f2 - _X1)) {
                    _Oa = true;
                    _Pa = x;
                    _Qa = y;
                }
            } else {
                if (_f2 == _X1) {
                    _Oa = true;
                    _Pa = x;
                    _Qa = y;
                }
            }
            index++;
        }
    }
    return false;
}

function ds_grid_value_exists(_ha, _v3, _w3, _S2, _T2, _f2) {
    _zb(_ha, _v3, _w3, _S2, _T2, _f2);
    return _Oa;
}

function ds_grid_value_x(_ha, _v3, _w3, _S2, _T2, _f2) {
    _zb(_ha, _v3, _w3, _S2, _T2, _f2);
    return _Pa;
}

function ds_grid_value_y(_ha, _v3, _w3, _S2, _T2, _f2) {
    _zb(_ha, _v3, _w3, _S2, _T2, _f2);
    return _Qa;
}

function _Ab(_ha, _h2, _i2, _fb, _f2) {
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_set_disk)");
        return;
    }
    var _03 = 0;
    var _13 = 0;
    var _23 = 0;
    var _33 = 0;
    var i = 0;
    var _k3 = 0;
    _03 = ~~(_c3(0.0, Math.floor(_h2 - _fb)));
    _23 = ~~(_e3(this._a7 - 1, Math.ceil(_h2 + _fb)));
    _13 = ~~(_c3(0, Math.floor(_i2 - _fb)));
    _33 = ~~(_e3(this._b7 - 1, Math.ceil(_i2 + _fb)));
    _Pa = _Qa = -1;
    _Oa = false;
    _fb = _fb * _fb;
    var w = __a._a7;
    for (i = _03; i <= _23; i++) {
        var _gb = (i - _h2) * (i - _h2);
        for (_k3 = _13; _k3 <= _33; _k3++) {
            var _hb = _k3 - _i2;
            if (_gb + (_hb * _hb) <= _fb) {
                if (i >= 0 && i < __a._a7 && _k3 >= 0 && _k3 < __a._b7) {
                    var _X1 = __a._Xa[i + (_k3 * w)];
                    if ((typeof(_f2) == "number" && typeof(_X1) == "number")) {
                        if (_Sa > abs(_f2 - _X1)) {
                            _Pa = i;
                            _Qa = _k3;
                            _Oa = true;
                            return;
                        }
                    } else {
                        if (_X1 == _f2) {
                            _Pa = i;
                            _Qa = _k3;
                            _Oa = true;
                            return;
                        }
                    }
                }
            }
        }
    }
}

function ds_grid_value_disk_exists(_ha, _h2, _i2, _fb, _f2) {
    _Ab(_ha, _h2, _i2, _fb, _f2);
    return _Oa;
}

function ds_grid_value_disk_x(_ha, _h2, _i2, _fb, _f2) {
    _Ab(_ha, _h2, _i2, _fb, _f2);
    return _Pa;
}

function ds_grid_value_disk_y(_ha, _h2, _i2, _fb, _f2) {
    _Ab(_ha, _h2, _i2, _fb, _f2);
    return _Qa;
}

function ds_grid_shuffle(_ha) {
    var __a = _0b._O3(_ha);
    if (__a == null || __a == undefined) {
        _ja("Error: invalid ds_grid ID (ds_grid_shuffle)");
        return;
    }
    __a._Xa.sort(function() {
        return 0.5 - Math.random()
    });
}

function ds_grid_write(_ha) {
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_write)");
        return;
    }
    var _Bb = new _Ta();
    _Bb.width = __a._a7;
    _Bb.height = __a._b7;
    _Bb.body = __a._Xa;
    _Cb = JSON.stringify(_Bb);
    return _Cb;
}

function ds_grid_read(_ha, _Db) {
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_read)");
        return;
    }
    var _Eb = JSON.parse(_Db);
    if ((_Eb != null) && (_Eb != undefined) && (typeof(_Eb.body) == "object") && (typeof(_Eb.width) == "number") && (typeof(_Eb.height) == "number")) {
        __a._a7 = _Eb.width;
        __a._b7 = _Eb.height;
        __a._Xa = _Eb.body;
    }
}

function ds_grid_sort(_ha,
    _Fb, _Gb) {
    var __a = _0b._O3(_ha);
    if (!__a) {
        _ja("Error: invalid ds_grid ID (ds_grid_read)");
        return;
    }
    var _Hb = [];
    for (var y = 0; y < __a._b7; y++) {
        _Hb[y] = ds_grid_get(_ha, _Fb, y);
    }
    _Hb.sort(function(_Z4, _g3) {
        if (_Gb) {
            return _Z4 - _g3;
        } else {
            return _g3 - _Z4;
        }
    });
    var _Ib = [];
    var _Jb = [];
    for (var y = 0; y < _Hb.length; y++) {
        _Jb[y] = false;
    }
    for (var y = 0; y < _Hb.length; y++) {
        var _Kb = _Hb[y];
        for (var _k3 = 0; _k3 < _Hb.length; _k3++) {
            var _Lb = _Gb ? _k3 : (_Hb.length - 1 - _k3);
            if (_Jb[_Lb]) {
                continue;
            }
            var _Mb = ds_grid_get(_ha, _Fb, _Lb);
            if (_Mb == _Kb) {
                for (var x = 0; x < __a._a7; x++) {
                    _Ib[x + (__a._a7 * y)] = ds_grid_get(_ha, x, _Lb);
                }
                _Jb[_Lb] = true;
                break;
            }
        }
    }
    __a._Xa = _Ib;
}

function ds_list_create() {
    var _b3 = new _Nb();
    _b3._Ob = true;
    return _Pb._1b(_b3);
}

function ds_list_destroy(_ha) {
    _Pb._2b(_ha);
}

function ds_list_clear(_ha) {
    var _Qb = _Pb._O3(_ha);
    if (_Qb) {
        _Qb._U9();
        return;
    }
    _ja("Error: invalid ds_list ID (ds_list_clear)");
}

function ds_list_copy(_ha, _3b) {
    var _Rb = _Pb._O3(_ha);
    if (!_Rb) {
        _ja("Error: invalid DEST ds_list ID (ds_list_copy)");
        return;
    }
    var _Sb = _Pb._O3(_3b);
    if (!_Sb) {
        _ja("Error: invalid SOURCE ds_list ID (ds_list_copy)");
        return;
    }
    _Rb._Ya(_Sb);
    _Pb._7b(_ha, _Rb);
}

function ds_list_size(_ha) {
    var _Qb = _Pb._O3(_ha);
    if (_Qb) return _Qb.length;
    _ja("Error: invalid ds_list ID (ds_list_size)");
    return 0;
}

function ds_list_empty(_ha) {
    var _Qb = _Pb._O3(_ha);
    if (_Qb) {
        if (_Qb.length !== 0) return false;
        else return true;
    }
    _ja("Error: invalid ds_list ID (ds_list_empty)");
    return true;
}

function ds_list_add() {
    var _Tb = ds_list_add.arguments;
    var _Ub = ds_list_add.arguments.length;
    var _Qb = _Pb._O3(_Tb[0]);
    if (!_Qb) {
        _ja("Error: invalid ds_list ID (ds_list_add)");
        return;
    }
    for (var i = 1; i < _Ub; i++) {
        _Qb._1b(_Tb[i]);
    }
    return;
}

function _Vb(_ha, _f2) {
    return ds_list_add(_ha, new _Wb(_Xb, _f2));
}

function _Yb(_ha, _f2) {
    return ds_list_add(_ha, new _Wb(_Zb, _f2));
}

function ds_list_set(_ha, _tb, _f2) {
    var _Qb = _Pb._O3(_ha);
    if (_Qb) {
        _Qb.__b(_tb, _f2);
    } else {
        _ja("Error: invalid ds_list ID (ds_list_set)");
    }
}

function ds_list_set_pre(_ha, _tb, _f2) {
    var _Qb = _Pb._O3(_ha);
    if (_Qb) {
        _Qb.__b(_tb, _f2);
    } else {
        _ja("Error: invalid ds_list ID (ds_list_set)");
    }
    return _f2;
}

function ds_list_set_post(_ha, _tb, _f2) {
    var _db = _f2;
    var _Qb = _Pb._O3(_ha);
    if (_Qb) {
        _db = _Qb.__b(_tb, _f2);
    } else {
        _ja("Error: invalid ds_list ID (ds_list_set)");
    }
    return _db;
}

function ds_list_insert(_ha, _0c, _f2) {
    var _Qb = _Pb._O3(_ha);
    if (_Qb) {
        return _Qb._1c(_0c, _f2);
    }
    _ja("Error: invalid ds_list ID (ds_list_insert)");
    return -1;
}

function _2c(_ha, _0c, _f2) {
    return ds_list_insert(_ha, _0c, new _Wb(_Xb, _f2));
}

function _3c(_ha, _0c, _f2) {
    return ds_list_insert(_ha, _0c, new _Wb(_Zb, _f2));
}

function ds_list_replace(_ha, _0c, _f2) {
    var _Qb = _Pb._O3(_ha);
    if (_Qb) {
        return _Qb._7b(_0c, _f2);
    }
    _ja("Error: invalid ds_list ID (ds_list_replace)");
    return -1;
}

function ds_list_delete(_ha, _0c) {
    var _Qb = _Pb._O3(_ha);
    if (_Qb) {
        return _Qb._2b(_0c);
    }
}

function ds_list_find_index(_ha, _f2) {
    var _Qb = _Pb._O3(_ha);
    if (_Qb) {
        var _db = -1;
        for (var _b3 = 0; _b3 < _Qb._4c.length; _b3++) {
            var _Z4 = _Qb._4c[_b3];
            if (((typeof(_Z4) == "object") && (_Z4.Object == _f2)) || (_Z4 == _f2)) {
                _db = _b3;
                break;
            }
        }
        return _db;
    }
    _ja("Error: invalid ds_list ID (ds_list_find_index)");
    return -1;
}

function ds_list_find_value(_ha, _0c) {
    var _X1, _5c = _vb(_0c),
        _Qb = _Pb._O3(_vb(_ha));
    if (_Qb) {
        if (_5c >= 0 && _5c < _Qb._4c.length) {
            _X1 = _Qb._4c[_5c];
            if (typeof(_X1) == "object") {
                if (_X1 instanceof Array) {
                    return _X1;
                } else {
                    return _X1.Object;
                }
            }
            if (_X1 != undefined) return _X1;
        }
        _ja("Error: invalid ds_list position (ds_list_find_value)");
        return 0;
    }
    _ja("Error: invalid ds_list ID (ds_list_find_value)");
    return -1;
}

function ds_list_sort(_ha, _6c) {
    var _Qb = _Pb._O3(_ha);
    if (_Qb) {
        if (_6c) {
            _Qb._4c.sort(function(_Z4, _g3) {
                var _7c = _Z4;
                if ((typeof(_Z4) == "object") && !(_Z4 instanceof Array)) _7c = _Z4.Object;
                var _8c = _g3;
                if ((typeof(_g3) == "object") && !(_g3 instanceof Array)) _8c = _g3.Object;
                return _7c - _8c;
            });
        } else {
            _Qb._4c.sort(function(_Z4, _g3) {
                var _7c = _Z4;
                if ((typeof(_Z4) == "object") && !(_Z4 instanceof Array)) _7c = _Z4.Object;
                var _8c = _g3;
                if ((typeof(_g3) == "object") && !(_g3 instanceof Array)) _8c = _g3.Object;
                return _8c - _7c;
            });
        }
        return 0;
    }
    _ja("Error: invalid ds_list ID (ds_list_sort)");
    return 0;
}

function ds_list_shuffle(_ha) {
    var _Qb = _Pb._O3(_ha);
    if (_Qb) {
        _Qb._9c();
        return 0;
    }
    _ja("Error: invalid ds_list ID (ds_list_shuffle)");
    return 0;
}

function ds_list_write(_ha) {
    var _Qb = _Pb._O3(_ha);
    if (!_Qb) {
        _ja("Error: invalid ds_list ID (ds_list_write)");
        return "";
    }
    return JSON.stringify(_Qb._4c);
}

function ds_list_read(_ha, _Db) {
    var _Qb = _Pb._O3(_ha);
    if (!_Qb) {
        _ja("Error: invalid ds_list ID (ds_list_read)");
        return;
    }
    var _ac = JSON.parse(_Db);
    _Qb._4c = _ac;
    _Qb.length = _ac.length;
    _Qb._n4 = _ac.length;
}

function _bc(_ha, _0c) {
    var _Qb = _Pb._O3(_ha);
    if (!_Qb) {
        _ja("Error: invalid ds_list ID");
        return undefined;
    }
    var _5c = _vb(_0c);
    var _X1, _y8;
    if (_5c >= 0 && _5c < _Qb._4c.length) {
        _X1 = _Qb._4c[_5c];
        if (typeof(_X1) == "object") {
            _y8 = _X1.Object;
        } else {
            _y8 = _X1;
        }
        return _y8;
    }
    return undefined;
}

function ds_list_mark_as_map(_ha,
    _0c) {
    var _y8 = _bc(_ha, _0c);
    if (_y8 != undefined) {
        ds_list_replace(_ha, _0c, new _Wb(_Xb, _y8));
    }
}

function ds_list_mark_as_list(_ha, _0c) {
    var _y8 = _bc(_ha, _0c);
    if (_y8 != undefined) {
        ds_list_replace(_ha, _0c, new _Wb(_Zb, _y8));
    }
}
var _Xb = 1,
    _Zb = 2;

function _Wb(_y7, _cc) {
    this._dc = _y7;
    this.Object = _cc;
}

function ds_map_create() {
    var _M3 = {};
    var id = _N3._1b(_M3);
    return id;
}

function ds_map_destroy(_ha) {
    _N3._2b(_ha);
}

function ds_map_clear(_ha) {
    var _M3 = _N3._O3(_ha);
    if (_M3) {
        var _ec = {};
        _N3._7b(_ha, _ec);
    }
}

function ds_map_copy(_fc, _3b) {
    var _Rb = _N3._O3(_fc);
    var _Sb = _N3._O3(_3b);
    if (_Rb && _Sb) {
        _Rb = {};
        for (var _X1 in _Sb) {
            if (_Sb.hasOwnProperty(_X1)) {
                _Rb[_X1] = _Sb[_X1];
            }
        }
        _N3._7b(_fc, _Rb);
    }
}

function ds_map_size(_ha) {
    var _M3 = _N3._O3(_ha);
    if (_M3) {
        var _n4 = 0;
        for (var i in _M3) {
            if (_M3.hasOwnProperty(i) && (_M3[i] != undefined)) {
                _n4++;
            }
        }
        return _n4;
    }
    return 0;
}

function ds_map_empty(_ha) {
    return (ds_map_size(_ha) === 0);
}

function ds_map_replace(_ha, _gc, _f2) {
    var _M3 = _N3._O3(_ha);
    if (_M3) {
        if (_M3[_gc] === undefined) {
            _ja("Error: Key(" + _gc + ") NOT present in ds_map[" + _ha + "], you must add a key before replacing it.");
        }
        _M3[_gc] = _f2;
    }
}

function ds_map_delete(_ha, _gc) {
    var _M3 = _N3._O3(_ha);
    if (_M3) {
        if (_M3[_gc] !== undefined) {
            _M3[_gc] = undefined;
        }
    }
}

function ds_map_exists(_ha, _gc) {
    var _M3 = _N3._O3(_ha);
    if (_M3) {
        if (_M3[_gc] !== undefined) {
            return true;
        }
    }
    return false;
}

function ds_map_add(_ha, _gc, _f2) {
    var _M3 = _N3._O3(_ha);
    if (_M3) {
        if (_M3[_gc] !== undefined) {
            _ja("Error: KEY(" + _gc + ") already present in ds_map[" + _ha + "], you can not add a key twice.");
        }
        _M3[_gc] = _f2;
    }
}

function ds_map_add_map(_ha, _gc, _f2) {
    ds_map_add(_ha, _gc, new _Wb(_Xb, _f2));
}

function ds_map_add_list(_ha,
    _gc, _f2) {
    ds_map_add(_ha, _gc, new _Wb(_Zb, _f2));
}

function ds_map_set(_ha, _gc, _f2) {
    var _M3 = _N3._O3(_ha);
    if (_M3) {
        _M3[_gc] = _f2;
    }
}

function ds_map_set_pre(_ha, _gc, _f2) {
    var _M3 = _N3._O3(_ha);
    if (_M3) {
        _M3[_gc] = _f2;
    }
    return _f2;
}

function ds_map_set_post(_ha, _gc, _f2) {
    var _db = _f2;
    var _M3 = _N3._O3(_ha);
    if (_M3) {
        _db = _M3[_gc];
        _M3[_gc] = _f2;
    }
    return _db;
}

function ds_map_find_value(_ha, _gc) {

    var help = window.famobi.__(_gc);
    if (help) return help;

    var _M3 = _N3._O3(_ha);
    if (_M3) {
        var _hc = _M3[_gc];
        if (_hc !== undefined) {
            if ((typeof(_hc) === "string") || (typeof(_hc) === "number") || (_hc instanceof Array)) {
                return _hc;
            } else if ((typeof(_hc) === "boolean")) {
                return _hc ? 1 : 0;
            }
            return _hc.Object;
        }
    }
    _ja("Error: Key (" + _gc + ") not found in ds_map[" + _ha + "]");
    return 0;
}

function ds_map_find_previous(_ha, _gc) {
    var _ic = -1;
    var _M3 = _N3._O3(_ha);
    for (var _jc in _M3) {
        if (_M3.hasOwnProperty(_jc) && _M3[_jc] !== undefined) {
            if (_jc == _gc) {
                return _ic;
            }
            _ic = _jc;
        }
    }
    return _ic;
}

function ds_map_find_next(_ha, _gc) {
    var _kc = false;
    var _M3 = _N3._O3(_ha);
    for (var _jc in _M3) {
        if (_M3.hasOwnProperty(_jc) && _M3[_jc] !== undefined) {
            if (_kc) {
                return _jc;
            }
            if (_jc == _gc) {
                _kc = true;
            }
        }
    }
    return -1;
}

function _lc(_gc) {
    if (typeof(_gc) !== "string") return true;
    var _mc = 0;
    var _b3 = _gc.length;
    for (var i = 0; i < _b3; i++) {
        if ((_gc[i] < '0') || (_gc[i] > '9')) {
            return true;
        }
        if (_gc[i] == '.') _mc++;
    }
    if (_mc > 1) return true;
    return false;
}

function ds_map_find_first(_ha) {
    var _M3 = _N3._O3(_ha);
    for (var _jc in _M3) {
        if (_M3.hasOwnProperty(_jc) && _M3[_jc] !== undefined) {
            return _jc;
        }
    }
    return -1;
}

function ds_map_find_last(_ha) {
    var _ic = -1;
    var _M3 = _N3._O3(_ha);
    for (var _jc in _M3) {
        if (_M3.hasOwnProperty(_jc) && _M3[_jc] !== undefined) {
            _ic = _jc;
        }
    }
    return _ic;
}

function ds_map_write(_ha) {
    var map = _N3._O3(_ha);
    if (map == null) {
        _ja("Error: invalid ds_map ID (ds_list_write)");
        return "";
    }
    return JSON.stringify(map);
}

function _nc(_oc, _pc) {
    var _qc = 0x7ff0000000000001;
    var sign = (_oc >> 31) * 2 + 1;
    var _rc = (_oc >>> 20) & 0x7FF;
    _oc &= 0xFFFFF;
    if (_rc === 0x7FF) return (_oc + _pc) ? _qc : sign / 0;
    _rc ? (_rc -= 1023, _oc |= 0x100000) : _rc = -1022;
    var _sc = _pc + (_oc * 4294967296.0);
    return sign * _sc * Math.pow(2, _rc - 52);
}
var _tc = 0;
var _uc = null;

function _vc() {
    var size = _uc.length;
    var _n4 = 64 - 8;
    var _pc = 0;
    var _oc = 0;
    while (_tc < size) {
        var _Z4;
        var c = _uc[_tc++];
        if (c == ',' || c == ':') {
            _tc--;
            break;
        }
        if (c >= 'A') {
            _Z4 = ((c.charCodeAt() - 65) + 10) << 4;
        } else {
            _Z4 = ((c.charCodeAt() - 48) << 4);
        }
        c = _uc[_tc++];
        if (c >= 'A') {
            _Z4 |= (~~(c.charCodeAt() - 65)) + 10;
        } else {
            _Z4 |= ~~(c.charCodeAt() - 48);
        }
        if (_n4 > 32) {
            _oc |= _Z4 << (_n4 - 32);
        } else {
            _pc |= _Z4 << (_n4 - 32);
        }
        _n4 -= 8;
    }
    return _nc(_oc, _pc);
}

function _wc() {
    var size = _uc.length;
    var _xc = "";
    while (_tc < size) {
        var _Z4;
        var c = _uc[_tc++];
        if (c == ',' || c == ':') {
            _tc--;
            break;
        }
        if (c >= 'A') {
            _Z4 = ((c.charCodeAt() - 65) + 10) << 4;
        } else {
            _Z4 = ((c.charCodeAt() - 48) << 4);
        }
        c = _uc[_tc++];
        if (c >= 'A') {
            _Z4 |= (c.charCodeAt() - 65) + 10;
        } else {
            _Z4 |= (c.charCodeAt() - 48);
        }
        _xc += String.fromCharCode(_Z4);
    }
    return _xc;
}

function _yc(_zc, _Ac) {
    _tc = 0;
    _uc = _Ac;
    var _Bc, _Cc, _Dc, _Ec, _Fc, value;
    var size = _Ac.length;
    while (_tc < size) {
        _Ec = (_Ac[_tc] - '0');;
        _tc += 2;
        if (_Ec & 1) {
            _Fc = _wc();
        } else {
            _Fc = _vc();
        }
        _tc++;
        if (_Ec & 2) {
            value = _wc();
        } else {
            value = _vc();
        }
        _tc++;
        _zc[_Fc] = value;
    }
}
var _Gc = false;

function ds_map_read(_ha, _Db) {
    var _M3 = _N3._O3(_ha);
    if (_M3 == null) {
        _ja("Error: invalid ds_map ID (ds_list_read)");
        return;
    }
    var _Bc = _Db[0];
    var _Cc = _Db[1];
    if ((_Bc >= '0' && _Bc <= '9') && (_Cc == ':')) {
        ds_map_clear(_ha);
        _yc(_M3, _Db);
        _N3._7b(_ha, _M3);
    } else {
        if (null == _Db) {
            _M3 = JSON.parse(_Db);
            _N3._7b(_ha, _M3);
        } else {
            _N3._7b(_ha, '');
        }
    }
}

function ds_map_secure_save(_ha, _Hc) {
    if (_Hc != null) {
        var _Ic = _Jc();
        var _Kc = json_encode(_ha);
        var _Lc = base64_encode(_Kc);
        _Mc(_Hc, _Ic + _Lc);
    }
}

function ds_map_secure_load(_Hc) {
    var _Nc = -1;
    try {
        var _Oc = _Jc();
        var data = _Pc(_Hc, true);
        var _Qc = data.substring(0, _Oc.length);
        var _Lc = data.substring(_Oc.length, data.length);
        if (_Qc == _Oc) {
            var _Kc = base64_decode(_Lc);
            return json_decode(_Kc);
        }
    } catch (e) {
        debug(e.message);
    }
    return -1;
}

function _Rc() {
    var id = 0xF35065da3bb79cac7;
    return id.toString();
}

function _Jc() {
    var _Ic = _Rc();
    var _Sc = sha1_string_utf8(_Ic.split("").reverse().join(""));
    return sha1_string_utf8(_Sc);
}

function _Tc(_Uc, _cc) {
    this.sub = _Uc;
    this.data = _cc;
}

function _Vc(_Uc, _cc) {
    this.depth = _Uc;
    this._Wc = _cc;
}

function ds_priority_create() {
    var _Qb = new _Xc();
    return _Yc._1b(_Qb);
}

function ds_priority_destroy(_ha) {
    _Yc._2b(_ha);
}

function ds_priority_clear(_ha) {
    var _Zc = _Yc._O3(_ha);
    if (_Zc == null || _Zc == undefined) {
        _ja("Error: invalid dest priority queue ds_priority_clear()");
        return;
    }
    _Zc._U9();
}

function ds_priority_copy(_ha, _3b) {
    var __c = _Yc._O3(_ha);
    if (__c == null || __c == undefined) {
        _ja("Error: invalid dest priority queue ds_priority_copy()");
        return;
    }
    var _0d = _Yc._O3(_3b);
    if (_0d == null || _0d == undefined) {
        _ja("Error: invalid source priority queue ds_priority_copy()");
        return;
    }
    __c._Ya(_0d);
    _Yc._7b(_ha, __c);
}

function ds_priority_size(_ha) {
    var _Zc = _Yc._O3(_ha);
    if (_Zc == null || _Zc == undefined) {
        _ja("Error: invalid priority queue ds_priority_size()");
        return 0;
    }
    return _Zc.length;
}

function ds_priority_empty(_ha) {
    if (ds_priority_size(_ha) == 0) return true;
    else return false;
}

function ds_priority_add(_ha, _f2, _1d) {
    var _Zc = _Yc._O3(_ha);
    if (_Zc == null || _Zc == undefined) {
        _ja("Error: invalid priority queue ds_priority_add()");
        return;
    }
    var _2d = new _Vc(_1d, _f2);
    _Zc._1b(_2d);
}

function ds_priority_change_priority(_ha, _f2, _1d) {
    var _Zc = _Yc._O3(_ha);
    if (_Zc == null || _Zc == undefined) {
        _ja("Error: invalid priority queue ds_priority_change_priority()");
        return;
    }
    var i = 0;
    while (i < _Zc.length) {
        var _3d = _Zc._O3(i);
        if (_3d != null) {
            var _X1 = _3d._Wc;
            if (typeof(_f2) == "number" && typeof(_X1) == "number") {
                if (_Sa > abs(_X1 - _f2)) {
                    _Zc._4d(_3d);
                    _3d.depth = _1d;
                    _Zc._1b(_3d);
                    return;
                }
            } else {
                if (_X1 == _f2) {
                    _Zc._4d(_3d);
                    _3d.depth = _1d;
                    _Zc._1b(_3d);
                    return;
                }
            }
        }
        i++;
    }
}

function ds_priority_find_priority(_ha, _f2) {
    var _Zc = _Yc._O3(_ha);
    if (_Zc == null || _Zc == undefined) {
        _ja("Error: invalid priority queue ds_priority_find_priority()");
        return;
    }
    var i = 0;
    while (i < _Zc.length) {
        var _3d = _Zc._O3(i);
        if (_3d != null) {
            var _X1 = _3d._Wc;
            if (typeof(_f2) == "number" && typeof(_X1) == "number") {
                if (_Sa > abs(_X1 - _f2)) return _3d.depth;
            } else {
                if (_X1 == _f2) return _3d.depth;
            }
        }
        i++;
    }
    return 0;
}

function ds_priority_delete_value(_ha, _f2) {
    var _Zc = _Yc._O3(_ha);
    if (_Zc == null || _Zc == undefined) {
        _ja("Error: invalid priority queue ds_priority_delete_value()");
        return;
    }
    var i = 0;
    while (i < _Zc.length) {
        var _3d = _Zc._O3(i);
        if (_3d != null) {
            var _X1 = _3d._Wc;
            if (typeof(_f2) == "number" && typeof(_X1) == "number") {
                if (_Sa > abs(_X1 - _f2)) {
                    _Zc._4d(_3d);
                    return;
                }
            } else {
                if (_X1 == _f2) {
                    _Zc._4d(_3d);
                }
            }
        }
        i++;
    }
    return 0;
}

function ds_priority_delete_min(_ha) {
    var _Zc = _Yc._O3(_ha);
    if (_Zc == null || _Zc == undefined) {
        _ja("Error: invalid priority queue ds_priority_delete_min()");
        return;
    }
    if (_Zc.length <= 0) return 0;
    var _3d = _Zc._O3(0);
    _Zc._4d(_3d);
    return _3d._Wc;
}

function ds_priority_find_min(_ha) {
    var _Zc = _Yc._O3(_ha);
    if (_Zc == null || _Zc == undefined) {
        _ja("Error: invalid priority queue ds_priority_find_min()");
        return;
    }
    if (_Zc.length <= 0) return 0;
    var _3d = _Zc._O3(0);
    return _3d._Wc;
}

function ds_priority_delete_max(_ha) {
    var _Zc = _Yc._O3(_ha);
    if (_Zc == null || _Zc == undefined) {
        _ja("Error: invalid priority queue ds_priority_delete_max()");
        return;
    }
    if (_Zc.length <= 0) return 0;
    var _3d = _Zc._O3(_Zc.length - 1);
    _Zc._4d(_3d);
    return _3d._Wc;
}

function ds_priority_find_max(_ha) {
    var _Zc = _Yc._O3(_ha);
    if (_Zc == null || _Zc == undefined) {
        _ja("Error: invalid priority queue ds_priority_find_max()");
        return;
    }
    if (_Zc.length <= 0) return 0;
    var _3d = _Zc._O3(_Zc.length - 1);
    return _3d._Wc;
}

function ds_priority_write(_ha) {
    var _Qb = _Yc._O3(_ha);
    if (_Qb == null) {
        _ja("Error: invalid ds_priority ID (ds_priority_write)");
        return "";
    }
    var _s3 = [];
    for (var index = 0; index < _Qb._4c.length; index++) {
        var _5d = _Qb._4c[index];
        if (_5d) {
            var _6d = new _Tc(_5d.depth, _5d._Wc);
            _s3.push(_6d);
        }
    }
    return JSON.stringify(_s3);
}

function ds_priority_read(_ha, _Db) {
    var _7d = _Yc._O3(_ha);
    if (_7d == null) {
        _ja("Error: invalid ds_priority ID (ds_priority_read)");
        return;
    }
    var _Qb = JSON.parse(_Db);
    _7d._U9();
    for (var index = 0; index < _Qb.length; index++) {
        var _ac = _Qb[index];
        ds_priority_add(_ha, _ac.data, _ac.sub);
    }
}

function ds_queue_create() {
    var _8d = [];
    return _9d._1b(_8d);
}

function ds_queue_destroy(_ha) {
    _9d._2b(_ha);
}

function ds_queue_clear(_ha) {
    var _8d = _9d._O3(_ha);
    if (!_8d) {
        _ja("Error: invalid ds_queue ID (ds_queue_clear)");
        return;
    }
    _8d = [];
    _9d._7b(_ha, _8d);
}

function ds_queue_copy(_fc, _3b) {
    var _Rb = _9d._O3(_fc);
    if (_Rb == null) {
        _ja("Error: invalid DEST ds_queue ID (ds_queue_copy)");
        return;
    }
    var _Sb = _9d._O3(_3b);
    if (_Sb == null) {
        _ja("Error: invalid SOURCE ds_queue ID (ds_queue_copy)");
        return;
    }
    _Rb = _Sb.slice();
    _9d._7b(_fc, _Rb);
}

function ds_queue_size(_ha) {
    var _8d = _9d._O3(_ha);
    if (_8d == null) {
        _ja("Error: invalid ds_queue ID (ds_queue_size)");
        return 0;
    }
    return _8d.length;
}

function ds_queue_empty(_ha) {
    return (ds_queue_size(_ha) == 0);
}

function ds_queue_enqueue() {
    var _Tb = ds_queue_enqueue.arguments;
    var _Ub = ds_queue_enqueue.arguments.length;
    var _7d = _9d._O3(_Tb[0]);
    if (!_7d) {
        _ja("Error: invalid ds_queue ID (ds_queue_enqueue)");
        return;
    }
    for (var i = 1; i < _Ub; i++) {
        _7d[_7d.length] = _Tb[i];
    }
    return;
}

function ds_queue_dequeue(_ha) {
    var _8d = _9d._O3(_ha);
    if (_8d == null) {
        _ja("Error: invalid ds_queue ID (ds_queue_dequeue)");
        return 0;
    }
    if (_8d.length == 0) return 0;
    _X1 = _8d.splice(0, 1);
    return _X1[0];
}

function ds_queue_head(_ha) {
    var _8d = _9d._O3(_ha);
    if (_8d == null) {
        _ja("Error: invalid ds_queue ID (ds_queue_head)");
        return 0;
    }
    if (_8d.length == 0) return 0;
    return _8d[0];
}

function ds_queue_tail(_ha) {
    var _8d = _9d._O3(_ha);
    if (_8d == null) {
        _ja("Error: invalid ds_queue ID (ds_queue_tail)");
        return 0;
    }
    if (_8d.length == 0) return 0;
    return _8d[_8d.length - 1];
}

function ds_queue_write(_ha) {
    var _7d = _9d._O3(_ha);
    if (_7d == null) {
        _ja("Error: invalid ds_queue ID (ds_queue_write)");
        return "";
    }
    return JSON.stringify(_7d);
}

function ds_queue_read(_ha, _Db) {
    var _7d = _9d._O3(_ha);
    if (_7d == null) {
        _ja("Error: invalid ds_queue ID (ds_list_read)");
        return;
    }
    _7d = JSON.parse(_Db);
    _9d._7b(_ha, _7d);
}

function ds_stack_create() {
    var _8d = [];
    return _ad._1b(_8d);
}

function ds_stack_destroy(_ha) {
    _ad._2b(_ha);
}

function ds_stack_clear(_ha) {
    var _8d = _ad._O3(_ha);
    if (_8d == null) {
        _ja("Error: invalid ds_stack ID (ds_stack_clear)");
        return;
    }
    _8d = [];
    _ad._7b(_ha, _8d);
}

function ds_stack_copy(_ha, _3b) {
    var _Rb = _ad._O3(_ha);
    if (_Rb == null) {
        _ja("Error: invalid DEST ds_stack ID (ds_stack_clear)");
        return;
    }
    var _Sb = _ad._O3(_3b);
    if (_Sb == null) {
        _ja("Error: invalid SOURCE ds_stack ID (ds_stack_clear)");
        return;
    }
    _Rb = _Sb.slice();
    _ad._7b(_ha, _Rb);
}

function ds_stack_size(_ha) {
    var _8d = _ad._O3(_ha);
    if (_8d == null) {
        _ja("Error: invalid ds_stack ID (ds_stack_size)");
        return 0;
    }
    return _8d.length;
}

function ds_stack_empty(_ha) {
    var _8d = _ad._O3(_ha);
    if (_8d == null) {
        _ja("Error: invalid ds_stack ID (ds_stack_empty)");
        return true;
    }
    if (_8d.length == 0) return true;
    else return false;
}

function ds_stack_push(_ha, _f2) {
    var _Tb = ds_stack_push.arguments;
    var _Ub = ds_stack_push.arguments.length;
    var _bd = _ad._O3(_Tb[0]);
    if (!_bd) {
        _ja("Error: invalid ds_stack ID (ds_stack_push)");
        return;
    }
    for (var i = 1; i < _Ub; i++) {
        _bd.push(_Tb[i]);
    }
}

function ds_stack_pop(_ha) {
    var _8d = _ad._O3(_ha);
    if (_8d == null) {
        _ja("Error: invalid ds_stack ID (ds_stack_pop)");
        return 0;
    }
    if (_8d.length == 0) {
        _ja("Error: invalid stack is empty (ds_stack_pop)");
        return 0;
    }
    return _8d.pop();
}

function ds_stack_top(_ha) {
    var _8d = _ad._O3(_ha);
    if (_8d == null) {
        _ja("Error: invalid ds_stack ID (ds_stack_pop)");
        return 0;
    }
    if (_8d.length == 0) {
        _ja("Error: invalid stack is empty (ds_stack_pop)");
        return 0;
    }
    return _8d[_8d.length - 1];
}

function ds_stack_write(_ha) {
    var _8d = _ad._O3(_ha);
    if (_8d == null) {
        _ja("Error: invalid ds_stack ID (ds_stack_write)");
        return;
    }
    return JSON.stringify(_8d);
}

function ds_stack_read(_ha, _Db) {
    var _8d = _ad._O3(_ha);
    if (_8d == null) {
        _ja("Error: invalid ds_stack ID (ds_stack_read)");
        return;
    }
    _8d = JSON.parse(_Db);
    _ad._7b(_ha, _8d);
}
var _cd = false;
var _dd = 'Trying to stop non-existing sound.',
    _ed = 'Trying to draw a non-existing sprite.',
    _fd = 'Trying to draw a non-existing background.',
    _gd = 'Cannot compare arguments.',
    _hd = 'Trying to replace non-existing resource.',
    _id = 'File does not exist.',
    _jd = 'The particle emitter must first be created.';
var _kd = -1,
    _ld = [],
    _md = [];

function action_execute_script() {
    _56("action_execute_script()");
}

function action_show_info() {
    _56("action_show_info()");
}

function action_show_video() {
    _56("action_show_video()");
}

function _nd() {}

function action_path_old() {
    _nd();
}

function action_draw_font() {
    _nd();
}

function action_draw_font_old() {
    _nd();
}

function action_fill_color() {
    _nd();
}

function action_line_color() {
    _nd();
}

function action_highscore() {
    _nd();
}

function action_if_question(_od) {
    return show_question(_od);
}

function action_set_relative(_pd) {
    _cd = (_pd < 0.5) ? false : true;
}

function action_set_cursor(_73, _qd) {
    window_set_cursor(_73);
    _rd = _73;
    if (!_qd) {
        _sd(false);
    } else {
        _sd(true);
    }
}

function action_set_sprite(_td, _73, _ud) {
    var _vd = _vb(_73);
    if (sprite_exists(_vd)) {
        _td.sprite_index = _vd;
    }
    if (_ud > 0) {
        _td.image_xscale = _ud;
        _td.image_yscale = _ud;
    }
}

function action_set_motion(_td, _wd, _f2) {
    if (true == _cd) {
        _td._xd(_wd, _f2);
    } else {
        _td.setdirection(_wd);
        _td.setspeed(_f2);
    }
}

function action_set_hspeed(_td, _yd) {
    if (_cd) {
        _td.sethspeed(_td.hspeed + _yd);
    } else {
        _td.sethspeed(_yd);
    }
}

function action_set_vspeed(_td, _yd) {
    if (_cd) {
        _td.setvspeed(_td.vspeed + _yd);
    } else {
        _td.setvspeed(_yd);
    }
}

function action_set_gravity(_td, _zd, _Ad) {
    if (true == _cd) {
        _td.gravity_direction += _zd;
        _td.gravity += _Ad;
    } else {
        _td.gravity_direction = _zd;
        _td.gravity = _Ad;
    }
}

function action_set_friction(_td, _Bd) {
    if (true == _cd) {
        _td.friction += _Bd;
    } else {
        _td.friction = _Bd;
    }
}

function action_move(_td, direction, size) {
    var _g3 = false;
    var _Cd = 0;
    if (direction.length != 9) {
        debug("Incorrect argument for action_move()");
        return;
    }
    for (_Cd = 0; _Cd < 9; _Cd++) {
        _g3 = ((true == _g3) || (direction[_Cd] == '1')) ? true : false;
    }
    if (true != _g3) {
        return;
    }
    if (true == _cd) {
        _td.setspeed(_td.speed + size);
    } else {
        _td.setspeed(size);
    }
    do {
        _Cd = floor(_Dd(9));
    } while (!(direction[_Cd] == '1'));
    switch (_Cd) {
        case 0:
            _td.setdirection(225);
            break;
        case 1:
            _td.setdirection(270);
            break;
        case 2:
            _td.setdirection(315);
            break;
        case 3:
            _td.setdirection(180);
            break;
        case 4:
            {
                _td.setdirection(0);
                _td.setspeed(0);
                break;
            }
        case 5:
            _td.setdirection(0);
            break;
        case 6:
            _td.setdirection(135);
            break;
        case 7:
            _td.setdirection(90);
            break;
        case 8:
            _td.setdirection(45);
            break;
    }
}

function action_move_point(_td, _h2, _i2, _yd) {
    if (true == _cd) {
        move_towards_point(_td, _h2 + _td.x, _i2 + _td.y, _yd);
    } else {
        move_towards_point(_td, _h2, _i2, _yd);
    }
}

function action_move_to(_td, _h2, _i2) {
    if (true == _cd) {
        _td._P7(_h2 + _td.x, _i2 + _td.y);
    } else {
        _td._P7(_h2, _i2);
    }
}

function action_move_start(_td) {
    _td._P7(_td.xstart, _td.ystart);
}

function action_move_random(_td, _Ed, _Fd) {
    move_random(_td, _Ed, _Fd);
}

function action_snap(_td, _Gd, _Hd) {
    move_snap(_td, _Gd, _Hd);
}

function action_wrap(_td,
    _Id) {
    var _Jd = _vb(_Id);
    _td._Jd((_Jd == 0) || (_Jd == 2) ? true : false, (_Jd == 1) || (_Jd == 2) ? true : false);
}

function action_reverse_xdir(_td) {
    _td.sethspeed(-_td.hspeed);
}

function action_reverse_ydir(_td) {
    _td.setvspeed(-_td.vspeed);
}

function action_move_contact(_td, _wd, _Kd, _Ld) {
    move_contact(_td, _wd, _Kd, _Ld);
}

function action_bounce(_td, _Md, _Ld) {
    _Nd(_td, (_Md >= 0.5) ? true : false, (_Ld == 1) ? true : false);
}

function action_kill_object(_td) {
    instance_destroy(_td);
}

function action_create_object(_td, _Od, _h2, _i2) {
    var _Pd = _vb(_Od);
    if (true != object_exists(_Pd)) {
        debug("Creating existence for non-existent object: " + _Pd.toString());
        return;
    }
    var _Qd = null;
    if (true == _cd) {
        _Qd = _81._Rd(_h2 + _td.x, _i2 + _td.y, _Pd);
    } else {
        _Qd = _81._Rd(_h2, _i2, _Pd);
    }
    _Qd._B2(_Sd, 0, _Qd, _Qd);
    _Qd._Td = true;
}

function action_create_object_motion(_td, _Od, _h2, _i2, _yd, _wd) {
    var _Pd = _vb(_Od);
    if (true != object_exists(_Pd)) {
        debug("Creating instance for non-existent object: " + _Pd);
        return;
    }
    var _Qd = null;
    if (true == _cd) {
        _Qd = _81._Rd(_h2 + _td.x, _i2 + _td.y, _Pd);
    } else {
        _Qd = _81._Rd(_h2, _i2, _Pd);
    }
    _Qd.setspeed(_yd);
    _Qd.setdirection(_wd);
    _Qd._B2(_Sd, 0, _Qd, _Qd);
    _Qd._Td = true;
}

function action_create_object_random(_td, _Ud, _Vd, _Wd, _Xd, _h2, _i2) {
    if (!object_exists(_Ud | 0) && !object_exists(_Vd | 0) && !object_exists(_Wd | 0) && !object_exists(_Xd | 0)) {
        return;
    }
    while (true) {
        var _X2 = ~~_Dd(4);
        var id = arguments[_X2 + 1] | 0;
        if (!object_exists(id)) {
            continue;
        }
        var _Qd;
        if (true == _cd) {
            _Qd = _81._Rd(_h2 + _td.x, _i2 + _td.y, id);
        } else {
            _Qd = _81._Rd(_h2, _i2, id);
        }
        _Qd._B2(_Sd, 0, _Qd, _Qd);
        _Qd._Td = true;
        return;
    }
}

function action_sprite_set(_td, _73, _Yd, _Zd) {
    var _vd = _vb(_73);
    if (sprite_exists(_vd)) {
        _td.sprite_index = _vd;
    }
    if (_Yd >= 0) {
        _td.image_index = _Yd;
    }
    _td.image_speed = _Zd;
}

function action_sprite_color(_td, _e7, __6) {
    _td.set_imageblend(_vb(_e7));
    _td.image_alpha = __6;
}
var action_sprite_colour = action_sprite_color;

function action_sound(__d, _0e) {
    if (_ra == _sa) {
        var _1e = _vb(__d);
        audio_play_sound(_1e, 1, _0e >= 0.5 ? true : false);
    } else {
        var _1e = _vb(__d);
        if (_0e >= 0.5) {
            _2e._3e(_1e);
        }
        _2e._4e(_1e);
    }
}

function action_set_alarm(_td, _E2, _5e) {
    var alarm = _vb(_5e);
    var _6e = _vb(_E2);
    if (!_cd || (_td.get_timer(alarm) < 0)) {
        _td._7e(alarm, _6e);
    } else {
        _td._7e(alarm, _td.get_timer(alarm) + _6e);
    }
}

function action_end_game() {
    game_end();
}

function action_restart_game() {
    game_restart();
}

function action_if_dice(_od) {
    var _8e;
    if (_od <= 1) {
        _8e = 1;
    } else {
        _8e = (_Dd(_vb(1000 * _od)) <= 1000) ? 1 : 0;
    }
    return _8e;
}

function action_if_variable() {
    var _d3 = 0;
    if (typeof(arguments[0]) != typeof(arguments[1])) {
        if ((typeof(arguments[0] == "boolean") && (typeof(arguments[1]) == "number"))) {
            _d3 = (arguments[0] == true) ? (1 - arguments[1]) : (0 - arguments[1]);
        } else if ((typeof(arguments[1] == "boolean") && (typeof(arguments[0]) == "number"))) {
            _d3 = (arguments[1] == true) ? (arguments[0] - 1) : (arguments[0] - 0);
        } else {
            debug(_gd);
            return;
        }
    } else {
        if (typeof(arguments[0]) == "string") {
            _d3 = (arguments[0] == arguments[1]) ? 0 : 1;
        } else {
            _d3 = arguments[0] - arguments[1];
        }
    }
    var _9e;
    if (_vb(arguments[2]) == 1) {
        _9e = (_d3 < 0) ? 1 : 0;
    } else if (_vb(arguments[2]) == 2) {
        _9e = (_d3 > 0) ? 1 : 0;
    } else if (_vb(arguments[2]) == 3) {
        _9e = (_d3 <= 0) ? 1 : 0;
    } else if (_vb(arguments[2]) == 4) {
        _9e = (_d3 >= 0) ? 1 : 0;
    } else {
        _9e = (_d3 == 0) ? 1 : 0;
    }
    return _9e;
}

function action_draw_variable(_td, _ae, _h2, _i2) {
    var _xc = "";
    if (typeof(arguments[0]) == "number") {
        if (_ae == _vb(_ae)) {
            _xc = (_vb(_ae) | 0).toString();
        } else {
            _xc = _ae.toFixed(2).toString();
        }
    } else {
        _xc = _ae.toString();
    }
    if (_cd) {
        draw_text(_h2 + _td.x, _i2 + _td.y, _xc);
    } else {
        draw_text(_h2, _i2, _xc);
    }
}

function action_set_score(_be) {
    if (_cd) {
        g_pBuiltIn.score += _vb(_be);
    } else {
        g_pBuiltIn.score = _vb(_be);
    }
}

function action_if_score() {
    var _9e;
    if (_vb(arguments[1]) == 1) {
        _9e = (g_pBuiltIn.score < arguments[0]) ? 1 : 0;
    } else if (_vb(arguments[1]) == 2) {
        _9e = (g_pBuiltIn.score > arguments[0]) ? 1 : 0;
    } else {
        _9e = (g_pBuiltIn.score == arguments[0]) ? 1 : 0;
    }
    return _9e;
}

function action_draw_score(_td, _h2, _i2, _ce) {
    var _de = "";
    if (_ce) {
        _de = _ce;
    }
    var score = _de + g_pBuiltIn.score.toString();
    if (_cd) {
        draw_text(_h2 + _td.x, _i2 + _td.y, score);
    } else {
        draw_text(_h2, _i2, score);
    }
}

function action_set_life(_ee) {
    var _fe = g_pBuiltIn.lives;
    if (true == _cd) {
        g_pBuiltIn.lives += _vb(_ee);
    } else {
        g_pBuiltIn.lives = _vb(_ee);
    }
    if ((_fe > 0) && (g_pBuiltIn.lives <= 0)) {
        _ge._B2(_he, 0);
    }
}

function action_if_life() {
    var _9e;
    if (_vb(arguments[1]) == 1) {
        _9e = (g_pBuiltIn.lives < arguments[0]) ? 1 : 0;
    } else if (_vb(arguments[1]) == 2) {
        _9e = (g_pBuiltIn.lives > arguments[0]) ? 1 : 0;
    } else {
        _9e = (g_pBuiltIn.lives == arguments[0]) ? 1 : 0;
    }
    return _9e;
}

function action_draw_life(_td, _h2, _i2, _ie) {
    var _je = _ie;
    if (!_je) {
        _je = "";
    }
    var lives = _je + g_pBuiltIn.lives.toString();
    if (_cd) {
        draw_text(_h2 + _td.x, _i2 + _td.y, lives);
    } else {
        draw_text(_h2, _i2, lives);
    }
}

function action_draw_life_images(_td, _h2, _i2, _73) {
    if (sprite_exists(_vb(_73))) {
        var _ke = _le._O3(_vb(_73));
        var w = _ke.width;
        for (var i = 0; i < g_pBuiltIn.lives; i++) {
            if (_cd) {
                _ke._L4(0, _h2 + _td.x + (i * w), _i2 + _td.y, 1, 1, 0, _me, 1);
            } else {
                _ke._L4(0, _h2 + (i * w), _i2, 1, 1, 0, _me, 1);
            }
        }
    }
}

function action_set_health(_td, _ne) {
    var _oe = 0.0;
    _oe = g_pBuiltIn.health;
    if (true == _cd) {
        g_pBuiltIn.health += _ne;
    } else {
        g_pBuiltIn.health = _ne;
    }
    if ((_oe > 0) && (g_pBuiltIn.health <= 0)) {
        _ge._B2(_pe, 0);
    }
}

function action_if_health(_td, _qe, _re) {
    var _9e;
    _re = ~~_re;
    if (_re == 1) {
        _9e = (g_pBuiltIn.health < _qe) ? 1 : 0;
    } else if (_re == 2) {
        _9e = (g_pBuiltIn.health > _qe) ? 1 : 0;
    } else {
        _9e = (g_pBuiltIn.health == _qe) ? 1 : 0;
    }
    return _9e;
}

function action_set_caption(_se, _te, _ue, _ve, _we, _xe) {
    g_pBuiltIn.show_score = _vb(_se) == 1 ? true : false;
    g_pBuiltIn.caption_score = _te;
    g_pBuiltIn.show_lives = _vb(_ue) == 1 ? true : false;
    g_pBuiltIn.caption_lives = _ve;
    g_pBuiltIn.show_health = _vb(_we) == 1 ? true : false;
    g_pBuiltIn.caption_health = _xe;
}

function action_draw_sprite(_td, _73, _h2, _i2, _Yd) {
    if (!sprite_exists(_vb(_73))) {
        debug(_ed);
        return;
    }
    var _ye;
    if (_Yd < 0) {
        _ye = _td.image_index;
    } else {
        _ye = Math.floor(_Yd);
    }
    var _ke = _le._O3(_vb(_73));
    if (_cd) {
        _ke._L4(_ye, _h2 + _td.x, _i2 + _td.y, 1, 1, 0, _me, 1);
    } else {
        _ke._L4(_ye, _h2, _i2, 1, 1, 0, _me, 1);
    }
}

function action_draw_background(_td, _ze, _h2, _i2, _Ae) {
    if (true != _Be(_vb(_Ce[0]._y8))) {
        debug(_fd);
        return;
    }
    var _De = _Ee._O3(_vb(_ze));
    var _Fe = (_Ae >= 0.5) ? true : false;
    if (_cd) {} else {}
}

function action_draw_text(_td, _Ge, _h2, _i2) {
    if (_cd) {
        draw_text(_h2 + _td.x, _i2 + _td.y, _Ge);
    } else {
        draw_text(_h2, _i2, _Ge);
    }
}

function action_draw_text_transformed(_td, _He, _h2, _i2, _Ie, _Je, _K1) {
    if (_cd) {
        draw_text_transformed(_h2 + _td.x, _i2 + _td.y, _He, _Ie, _Je, _K1);
    } else {
        draw_text_transformed(_h2, _i2, _He, _Ie, _Je, _K1);
    }
}

function action_draw_rectangle(_td, _h2, _i2, _S2, _T2, _Ke) {
    if (_cd) {
        draw_rectangle(_h2 + _td.x, _i2 + _td.y, _S2 + _td.x,
            _T2 + _td.y, (_Ke >= 0.5) ? true : false);
    } else {
        draw_rectangle(_h2, _i2, _S2, _T2, (_Ke >= 0.5) ? true : false);
    }
}

function action_draw_line(_td, _h2, _i2, _S2, _T2) {
    if (_cd) {
        draw_line(_h2 + _td.x, _i2 + _td.y, _S2 + _td.x, _T2 + _td.y);
    } else {
        draw_line(_h2, _i2, _S2, _T2);
    }
}

function action_color(_e7) {
    draw_set_color(_e7);
}
var action_colour = action_color;

function action_font(_Le, _Me) {
    draw_set_font(_Le);
    draw_set_halign(_Me);
}

function action_draw_health(_td, _h2, _i2, _S2, _T2, _e7, _Ne) {
    var _Oe = _Pe = _Qe = _Re = 0;
    switch (_vb(_e7)) {
        case 0:
            _Oe = _Se;
            break;
        case 1:
            _Oe = _Se;
            break;
        case 2:
            _Oe = _Te;
            break;
        case 3:
            _Oe = _Ue;
            break;
        case 4:
            _Oe = _me;
            break;
        case 5:
            _Oe = _Ve;
            break;
        case 6:
            _Oe = _We;
            break;
        case 7:
            _Oe = _Xe;
            break;
        case 8:
            _Oe = _Ye;
            break;
        case 9:
            _Oe = _Ze;
            break;
        case 10:
            _Oe = __e;
            break;
        case 11:
            _Oe = _0f;
            break;
        case 12:
            _Oe = _1f;
            break;
        case 13:
            _Oe = _2f;
            break;
        case 14:
            _Oe = _3f;
            break;
        case 15:
            _Oe = _4f;
            break;
        case 16:
            _Oe = _5f;
            break;
    }
    switch (_vb(_Ne)) {
        case 0:
            {
                _Pe = _0f;
                _Qe = _2f;
                _Re = _1f;
            }
            break;
        case 1:
            {
                _Pe = _Se;
                _Qe = _Te;
                _Re = _me;
            }
            break;
        case 2:
            _Pe = _Se;
            break;
        case 3:
            _Pe = _Te;
            break;
        case 4:
            _Pe = _Ue;
            break;
        case 5:
            _Pe = _me;
            break;
        case 6:
            _Pe = _Ve;
            break;
        case 7:
            _Pe = _We;
            break;
        case 8:
            _Pe = _Xe;
            break;
        case 9:
            _Pe = _Ye;
            break;
        case 10:
            _Pe = _Ze;
            break;
        case 11:
            _Pe = __e;
            break;
        case 12:
            _Pe = _0f;
            break;
        case 13:
            _Pe = _1f;
            break;
        case 14:
            _Pe = _2f;
            break;
        case 15:
            _Pe = _3f;
            break;
        case 16:
            _Pe = _4f;
            break;
        case 17:
            _Pe = _5f;
            break;
    }
    if (_vb(_Ne) > 1) {
        _Qe = _Pe;
        _Re = _Pe;
    }
    if (_cd) {
        _6f(_h2 + _td.x, _i2 + _td.y, _S2 + _td.x, _T2 + _td.y, g_pBuiltIn.health, _Oe, _Pe, _Qe, _Re, 0, (_e7 >= 0.5) ? true : false, true);
    } else {
        _6f(_h2, _i2, _S2, _T2, g_pBuiltIn.health, _Oe, _Pe, _Qe, _Re, 0, (_e7 >= 0.5) ? true : false, true);
    }
}

function action_another_room(_7f,
    _8f) {
    room_goto(_vb(_7f));
}

function action_current_room() {
    room_restart();
}

function action_previous_room() {
    room_goto_previous();
}

function action_next_room() {
    room_goto_next();
}

function action_if_previous_room() {
    return ((g_pBuiltIn.get_current_room() != g_pBuiltIn.room_first) ? 1 : 0);
}

function action_if_next_room() {
    return ((g_pBuiltIn.get_current_room() != g_pBuiltIn.room_last) ? 1 : 0);
}

function action_partsyst_create(_Uc) {
    if (_kd < 0) {
        _kd = _9f();
    }
    _af(_kd);
    _bf(_kd, _vb(_Uc));
    _ld = new Array(16);
    _md = new Array(16);
    for (var i = 0; i < 16; i++) {
        _ld[i] = -1;
        _md[i] = -1;
    }
}

function action_partsyst_destroy() {
    if (_kd >= 0) {
        _cf(_kd);
    }
    _kd = -1;
}

function action_partsyst_clear() {
    if (_kd >= 0) {
        _df(_kd);
    }
}

function action_parttype_create_old(_y7, _ef, _ff, _gf, _hf, _if) {
    var type = _vb(_y7);
    var _jf = _vb(_ef);
    var _kf = _vb(_hf);
    var _lf = _vb(_if);
    if (_kd < 0) {
        _kd = _9f();
    }
    if (_ld[type] < 0) {
        _ld[type] = _mf();
    }
    var _nf = _ld[type];
    _of(_nf, _jf);
    _pf(_nf, _ff, _gf, 0, 0);
    _qf(_nf, _kf, _lf);
}

function action_parttype_create(_y7, _ef, _73, _ff, _gf, _rf) {
    var type = _vb(_y7);
    var _jf = _vb(_ef);
    var _ke = _vb(_73);
    if (_kd < 0) {
        _kd = _9f();
    }
    if (_ld[type] < 0) {
        _ld[type] = _mf();
    }
    var _nf = _ld[type];
    _of(_nf, _jf);
    _sf(_nf, _ke, true, false, false);
    _pf(_nf, _ff, _gf, _rf, 0);
}

function action_parttype_color(_y7, _tf, _hf, _if, _uf, _vf) {
    var type = _vb(_y7);
    var _wf = _vb(_tf);
    var _kf = _vb(_hf);
    var _lf = _vb(_if);
    if (_kd < 0) {
        _kd = _9f();
    }
    if (_ld[type] < 0) {
        _ld[type] = _mf();
    }
    var _nf = _ld[type];
    if (_wf == 0) {
        _xf(_nf, _kf, _lf);
    } else {
        _qf(_nf, _kf, _lf);
    }
    _yf(_nf, _uf, _vf);
}
var action_parttype_colour = action_parttype_color;

function action_parttype_life(_y7, _zf, _Af) {
    var type = _vb(_y7);
    var _Bf = _vb(_zf);
    var _Cf = _vb(_Af);
    if (_kd < 0) {
        _kd = _9f();
    }
    if (_ld[type] < 0) {
        _ld[type] = _mf();
    }
    var _nf = _ld[type];
    _Df(_nf, _Bf, _Cf);
}

function action_parttype_speed(_y7, _Ef, _Ff, _Gf, _Hf, _If) {
    var type = _vb(_y7);
    if (_kd < 0) {
        _kd = _9f();
    }
    if (_ld[type] < 0) {
        _ld[type] = _mf();
    }
    var _nf = _ld[type];
    _Jf(_nf, _Ef, _Ff, -_If, 0);
    _Kf(_nf, _Gf, _Hf, 0, 0);
}

function action_parttype_gravity(_y7, _Lf, _Mf) {
    var type = _vb(_y7);
    if (_kd < 0) {
        _kd = _9f();
    }
    if (_ld[type] < 0) {
        _ld[type] = _mf();
    }
    var _nf = _ld[type];
    _Nf(_nf, _Lf, _Mf);
}

function action_parttype_secondary(_y7, _Of, _Pf, _Qf, _Rf) {
    var type = _vb(_y7);
    var _Sf = _vb(_Pf);
    var _Tf = _vb(_Of);
    var _Uf = _vb(_Rf);
    var _Vf = _vb(_Qf);
    if (_kd < 0) {
        _kd = _9f();
    }
    if (_ld[type] < 0) {
        _ld[type] = _mf();
    }
    var _nf = _ld[type];
    _Wf(_nf, _Sf, _ld[_Tf]);
    _Xf(_nf, _Uf, _ld[_Vf]);
}

function action_partemit_create(_Yf, _ef, _Zf, __f, _0g, _1g) {
    var _2g = _vb(_Yf);
    var _jf = _vb(_ef);
    if (_kd < 0) {
        _kd = _9f();
    }
    if (_md[_2g] < 0) {
        _md[_2g] = _3g(_kd);
    }
    var _4g = _md[_2g];
    _5g(_kd, _4g, _Zf, __f, _0g, _1g, _jf, _6g);
}

function action_partemit_destroy(_Yf) {
    var _2g = _vb(_Yf);
    if (_kd < 0) {
        _kd = _9f();
    }
    if (_md[_2g] < 0) {
        return;
    }
    var _4g = _md[_2g];
    _7g(_kd, _4g);
}

function action_partemit_burst(_Yf, _y7, _8g) {
    var _2g = _vb(_Yf);
    var type = _vb(_y7);
    var _9g = _vb(_8g);
    if (_kd < 0) {
        _kd = _9f();
    }
    if (_md[_2g] < 0) {
        debug(_jd);
        return;
    }
    var _4g = _md[_2g];
    _ag(_kd, _4g, _ld[type], _9g);
}

function action_partemit_stream(_Yf, _y7, _8g) {
    var _2g = _vb(_Yf);
    var type = _vb(_y7);
    var _9g = _vb(_8g);
    if (_kd < 0) {
        _kd = _9f();
    }
    if (_md[_2g] < 0) {
        debug(_jd);
        return;
    }
    var _4g = _md[_2g];
    _bg(_kd, _4g, _ld[type], _9g);
}

function action_draw_gradient_hor(_td, _h2, _i2, _S2, _T2, _cg, _Ne) {
    if (_cd) {
        _dg(_h2 + _td.x, _i2 + _td.y, _S2 + _td.x,
            _T2 + _td.y, _cg, _Ne, false, false);
    } else {
        _dg(_h2, _i2, _S2, _T2, _cg, _Ne, false, false);
    }
}

function action_draw_gradient_vert(_td, _h2, _i2, _S2, _T2, _cg, _Ne) {
    if (_cd) {
        _dg(_h2 + _td.x, _i2 + _td.y, _S2 + _td.x, _T2 + _td.y, _cg, _Ne, true, false);
    } else {
        _dg(_h2, _i2, _S2, _T2, _cg, _Ne, true, false);
    }
}

function action_draw_arrow(_td, _h2, _i2, _S2, _T2, _l7) {
    if (_cd) {
        draw_arrow(_h2 + _td.x, _i2 + _td.y, _S2 + _td.x, _T2 + _td.y, _l7);
    } else {
        draw_arrow(_h2, _i2, _S2, _T2, _l7);
    }
}

function action_if_empty(_td, _eg, _fg, _gg) {
    var _hg = _eg;
    var _ig = _fg;
    if (_cd) {
        _hg += _td.x;
        _ig += _td.y;
    }
    if (_vb(_gg) == 0) {
        return place_free(_td, _hg, _ig) ? 1 : 0;
    }
    return place_empty(_td, _hg, _ig) ? 1 : 0;
}

function action_if_collision(_td, _eg, _fg, _gg) {
    var _hg = _eg;
    var _ig = _fg;
    if (_cd) {
        _hg += _td.x;
        _ig += _td.y;
    }
    if (_vb(_gg) == 0) {
        return !place_free(_td, _hg, _ig) ? 1 : 0;
    }
    return !place_empty(_td, _hg, _ig) ? 1 : 0;
}

function action_if(_eg) {
    return _eg;
}

function action_if_number(_eg, _fg, _gg) {
    var _X2 = instance_number(_vb(_eg));
    var _9e;
    if (_vb(_gg) == 1) {
        _9e = (_X2 < _fg) ? 1 : 0;
    } else if (_vb(_gg) == 2) {
        _9e = (_X2 > _fg) ? 1 : 0;
    } else {
        _9e = (_X2 == _fg) ? 1 : 0;
    }
    return _9e;
}

function action_if_object(_td, _cc, _h2, _i2) {
    if (_cd) {
        return place_meeting(_td, _h2 + _td.x, _i2 + _td.y, _vb(_cc)) ? 1 : 0;
    }
    return place_meeting(_td, _h2, _i2, _vb(_cc)) ? 1 : 0;
}

function action_if_mouse(_eg) {
    var _9e;
    switch (_vb(_eg)) {
        case 1:
            _9e = (_Aa._jg(1) || _Aa._kg(1)) ? 1 : 0;
            break;
        case 2:
            _9e = (_Aa._jg(2) || _Aa._kg(2)) ? 1 : 0;
            break;
        case 3:
            _9e = (_Aa._jg(3) || _Aa._kg(3)) ? 1 : 0;
            break;
        default:
            _9e = (_Aa._lg() == 0) ? 1 : 0;
    }
    return _9e;
}

function action_if_aligned(_td, _h2, _i2) {
    if (_h2 > 0) {
        if (Math.abs(_td.x - _h2 * _vb(_td.x / _h2)) >= 0.001) {
            return 0;
        }
    }
    if (_i2 > 0) {
        if (Math.abs(_td.y - _i2 * _vb(_td.y / _i2)) >= 0.001) {
            return 0;
        }
    }
    return 1;
}

function action_path(_td, _mg, _yd, _ng, _og) {
    _td._pg(_vb(_mg), _yd, 1, 0, (_og >= 0.5) ? true : false, _vb(_ng));
}

function action_path_end(_td) {
    _td._pg(-1, 0, 1, 0, false, 0);
}

function action_path_position(_td, _0c) {
    if (_cd) {
        _td.path_position += _0c;
    } else {
        _td.path_position = _0c;
    }
}

function action_path_speed(_td, _yd) {
    if (_cd) {
        _td.path_speed = _td.path_speed + _yd;
    } else {
        _td.path_speed = _yd;
    }
}

function action_linear_step(_td, _h2, _i2, _qg, _rg) {
    if (_cd) {
        mp_linear_step(_td, _h2 + _td.x,
            _i2 + _td.y, _qg, (_rg >= 0.5) ? true : false);
    } else {
        mp_linear_step(_td, _h2, _i2, _qg, (_rg >= 0.5) ? true : false);
    }
}

function action_potential_step(_td, _h2, _i2, _qg, _rg) {
    if (_cd) {
        mp_potential_step(_td, _h2 + _td.x, _i2 + _td.y, _qg, (_rg >= 0.5) ? true : false);
    } else {
        mp_potential_step(_td, _h2, _i2, _qg, (_rg >= 0.5) ? true : false);
    }
}

function action_inherited(_td, _sg) {
    if (!_td) return;
    event_inherited(_td, _sg);
}

function action_change_object(_td, _tg, _ug) {
    instance_change(_td, _tg | 0, (_ug >= 0.5) ? true : false);
}

function action_kill_position(_td, _h2, _i2) {
    if (_cd) {
        position_destroy(_h2 + _td.x, _i2 + _td.y);
    } else {
        position_destroy(_h2, _i2);
    }
}

function action_end_sound(__d) {
    if (_ra == _sa) {
        var _1e = _vb(__d);
        audio_stop_sound(_1e);
    } else {
        var _1e = _2e._O3(_vb(__d));
        if ((_1e != null) && (_1e != undefined)) {
            _2e._vg(__d);
        } else {
            debug(_dd);
        }
    }
}

function action_if_sound(__d) {
    if (_ra == _sa) {
        var _1e = _vb(__d);
        return audio_is_playing(_1e);
    } else {
        var _1e = _2e._O3(_vb(__d));
        if ((_1e != null) && (_1e != undefined)) {
            return (_2e._wg(__d) ? 1 : 0);
        }
        return 0;
    }
}

function action_effect(_td, _Q6, _h2, _i2, _l7, _e7, _xg) {
    if (_cd) {
        _yg((_xg < 0.5) ? true : false, _vb(_Q6), _h2 + _td.x, _i2 + _td.y, _vb(_l7), _vb(_e7));
    } else {
        _yg((_xg < 0.5) ? true : false, _vb(_Q6), _h2, _i2, _vb(_l7), _vb(_e7));
    }
}

function action_message(_zg) {
    alert(_zg);
}

function action_sprite_transform(_td, _Ed, _Fd, _l2, _wd) {
    _td.image_xscale = _Ed;
    _td.image_yscale = _Fd;
    _td.image_angle = _l2;
    if ((_wd == 1) || (_wd == 3)) {
        _td.image_xscale = -_td.image_xscale;
    }
    if ((_wd == 2) || (_wd == 3)) {
        _td.image_yscale = -_td.image_yscale;
    }
}

function action_sleep(_Ag, _Bg) {
    if (_Bg >= 0.5) {
        _81._L4();
    }
    _Cg(_Ag);
}

function action_snapshot(_Dg) {
    surface_save(0, _Dg);
}

function action_replace_sprite(_73, _Dg, _Eg) {
    if (!sprite_exists(_vb(_73))) {
        debug(_hd);
        return;
    }
    if (!file_exists(_Dg)) {
        debug(_id);
        return;
    }
    var _ke = _le._O3(_vb(_73));
    sprite_replace(_vb(_73), _Dg, _vb(_Eg), _ke._Fg, _ke.transparent, _ke.smooth, _ke.preload, _ke.xOrigin, _ke.yOrigin);
}

function action_replace_sound(__d, _Dg) {
    if (!sound_exists(_vb(__d))) {
        debug(_hd);
        return;
    }
    if (true != file_exists(_Dg)) {
        debug(_id);
        return;
    }
    var _1e = _2e._O3(_vb(__d));
    sound_replace(_vb(__d), _Dg, _1e.kind, _1e.preload);
}

function action_replace_background(_ze,
    _Dg) {
    if (!background_exists(_vb(_ze))) {
        debug(_hd);
        return;
    }
    if (!_Gg(_Dg)) {
        debug(_id);
        return;
    }
    var _Hg = _Ee._O3(_vb(_ze));
    background_replace(_vb(_ze), _Dg, _Hg.transparent, _Hg.smooth, _Hg.preload);
}

function action_set_timeline(_td, _tb, _0c) {
    action_timeline_set(_td, _tb, _0c, 0, 0);
}

function action_timeline_set(_td, _tb, _0c, _Ig, _0e) {
    _td.timeline_index = _tb;
    _td.timeline_position = _0c;
    _td._Jg = _Ig;
    _td._Kg = _0e;
}

function action_set_timeline_position(_td, _0c) {
    if (_cd) {
        _td.timeline_position += _0c;
    } else {
        _td.timeline_position = _0c;
    }
}

function action_set_timeline_speed(_td, _yd) {
    if (_cd) {
        _td.timeline_speed += _yd;
    } else {
        _td.timeline_speed = _yd;
    }
}

function action_timeline_start(_td) {
    _td._Jg = false
}

function action_timeline_stop(_td) {
    _td._Jg = true;
    _td.timeline_position = 0;
}

function action_timeline_pause(_td) {
    _td._Jg = true;
}

function action_draw_ellipse(_td, _h2, _i2, _S2, _T2, _Ke) {
    if (_cd) {
        draw_ellipse(_h2 + _td.x, _i2 + _td.y, _S2 + _td.x, _T2 + _td.y, (_Ke >= 0.5) ? true : false);
    } else {
        draw_ellipse(_h2, _i2, _S2, _T2, (_Ke >= 0.5) ? true : false);
    }
}

function action_draw_ellipse_gradient(_td,
    _h2, _i2, _S2, _T2, _cg, _Ne) {
    if (_cd) {
        _Lg(_h2 + _td.x, _i2 + _td.y, _S2 + _td.x, _T2 + _td.y, _cg, _Ne, false);
    } else {
        _Lg(_h2, _i2, _S2, _T2, _cg, _Ne, false);
    }
}

function action_splash_web(_Mg) {
    YoYo_OpenURL(_Mg);
}

function action_webpage(_Mg) {
    YoYo_OpenURL(_Mg);
}

function action_highscore_show(_Ng, _Og, _cg, _Ne, _Pg, _Qg, _Rg) {
    var x, y;
    x = (g_pBuiltIn.room_width / 2) - 100;
    y = (g_pBuiltIn.room_height / 2) - 100;
    draw_highscore(x, y, x + 200, y + 200);
}

function action_highscore_clear() {
    highscore_clear();
    _Sg();
}

function action_fullscreen(_Tg) {}

function background_exists(_Ug) {
    var _De = _Ee._Vg(_Ug);
    if ((_De === null) || (_De === undefined)) {
        return false;
    }
    return true;
}

function background_get_name(_Ug) {
    var _Wg = _Ee._Vg(_Ug);
    if (!_Wg) return "";
    return _Wg.pName;
}

function background_name(_Ug) {
    return background_get_name(_Ug);
}

function background_get_width(_Ug) {
    var _Wg = _Ee._Vg(_Ug);
    if (!_Wg) return 0;
    return _Wg._Xg.w;
}

function background_get_height(_Ug) {
    var _Wg = _Ee._Vg(_Ug);
    if (!_Wg) return 0;
    return _Wg._Xg.h;
}

function background_create_from_screen(_h2, _i2, _Va, _Wa, _Yg, _Zg) {
    var __g = surface_create(_Va, _Wa);
    var _Rb = _0h._O3(__g);
    var _1h = _Rb.getContext('2d');
    _1h.drawImage(canvas, -_h2, -_i2);
    if (_Yg) {
        _2h(_1h, _Va, _Wa);
    }
    var _3h = new _4h();
    var _L1 = new _5h();
    _3h._Xg = _L1;
    _L1.x = 0;
    _L1.y = 0;
    _L1.w = _Va;
    _L1.h = _Wa;
    _L1.XOffset = 0;
    _L1.YOffset = 0;
    _L1.CropWidth = _L1.w;
    _L1.CropHeight = _L1.h;
    _L1.ow = _L1.w;
    _L1.oh = _L1.h;
    _L1.tp = __g;
    _L1._T1 = _Rb;
    return _Ee._6h(_3h);
}

function background_create_from_surface(_ha, _h2, _i2, _Va, _Wa, _Yg, _Zg) {
    var _Sb = _0h._O3(_ha);
    var __g = surface_create(_Va, _Wa);
    var _Rb = _0h._O3(__g);
    var _1h = _Rb.getContext('2d');
    _1h.drawImage(_Sb, -_h2, -_i2);
    if (_Yg) {
        _2h(_1h, _Va, _Wa);
    }
    var _3h = new _4h();
    var _L1 = new _5h();
    _3h._Xg = _L1;
    _L1.x = 0;
    _L1.y = 0;
    _L1.w = _Va;
    _L1.h = _Wa;
    _L1.XOffset = 0;
    _L1.YOffset = 0;
    _L1.CropWidth = _L1.w;
    _L1.CropHeight = _L1.h;
    _L1.ow = _L1.w;
    _L1.oh = _L1.h;
    _L1.tp = __g;
    _L1._T1 = _Rb;
    return _Ee._6h(_3h);
}

function background_create_color(_Va, _Wa, _Z6) {
    var _7h = surface_create(_Va, _Wa);
    var _8h = _0h._O3(_7h);
    var _1h = _8h.getContext('2d');
    _1h.globalAlpha = 1.0;
    _1h.fillStyle = _9h(_07(_Z6), 1);
    _1h.fillRect(0, 0, _Va, _Wa);
    var _3h = new _4h();
    var _L1 = new _5h();
    _3h._Xg = _L1;
    _L1.x = 0;
    _L1.y = 0;
    _L1.w = _Va;
    _L1.h = _Wa;
    _L1.XOffset = 0;
    _L1.YOffset = 0;
    _L1.CropWidth = _L1.w;
    _L1.CropHeight = _L1.h;
    _L1.ow = _L1.w;
    _L1.oh = _L1.h;
    _L1.tp = _7h;
    _L1._T1 = _8h;
    return _Ee._6h(_3h);
}
var background_create_colour = background_create_color;

function background_create_gradient(_Va, _Wa, _cg, _Ne, _Q6) {
    var _7h = surface_create(_Va, _Wa);
    var _8h = _0h._O3(_7h);
    var _1h = _8h.getContext('2d');
    _1h.globalAlpha = 1.0;
    var _ah;
    if (_Q6 == 0) {
        _ah = _1h.createLinearGradient(0, 0, _Va, 0);
    } else {
        _ah = _1h.createLinearGradient(0, 0, 0, _Wa);
    }
    _ah.addColorStop("0", _9h(_07(_cg),
        1));
    _ah.addColorStop("1.0", _9h(_07(_Ne), 1));
    _1h.fillStyle = _ah;
    _1h.fillRect(0, 0, _Va, _Wa);
    var _3h = new _4h();
    var _L1 = new _5h();
    _3h._Xg = _L1;
    _L1.x = 0;
    _L1.y = 0;
    _L1.w = _Va;
    _L1.h = _Wa;
    _L1.XOffset = 0;
    _L1.YOffset = 0;
    _L1.CropWidth = _L1.w;
    _L1.CropHeight = _L1.h;
    _L1.ow = _L1.w;
    _L1.oh = _L1.h;
    _L1.tp = _7h;
    _L1._T1 = _8h;
    return _Ee._6h(_3h);
}

function background_delete(_F1) {
    return _Ee._bh(_F1);
}

function background_duplicate(_ch) {
    var _Wg = _Ee._Vg(_ch);
    if (_Wg != null && _Wg != undefined) {
        var _dh = _eh(_Wg._Xg);
        var _3h = new _4h();
        _3h.pName = _Wg.pName;
        _3h.transparent = _Wg.transparent;
        _3h.smooth = _Wg.smooth;
        _3h.preload = _Wg.preload;
        _3h._fh = true;
        var _L1 = _3h._Xg = new _5h();
        _L1._fh(_Wg._Xg);
        _L1.tp = _gh(_dh);
        _L1._T1 = _P1[_L1.tp];
        _L1.x = 0;
        _L1.y = 0;
        return _Ee._6h(_3h);
    }
    return -1;
}

function background_assign(_fc, _Za) {
    var _Rb = _Ee._Vg(_fc);
    var _Sb = _Ee._Vg(_Za);
    if (_Rb != null && _Rb != undefined && _Sb != null && _Sb != undefined) {
        var _dh = _eh(_Sb._Xg);
        var _3h = new _4h();
        _3h.pName = _Sb.pName;
        _3h.transparent = _Sb.transparent;
        _3h.smooth = _Sb.smooth;
        _3h.preload = _Sb.preload;
        _3h._Xg = new _5h();
        _3h._Xg._fh(_Sb._Xg);
        _3h._Xg.tp = _gh(_dh);
        _3h._Xg._T1 = _P1[_3h._Xg.tp];
        _3h._Xg.x = 0;
        _3h._Xg.y = 0;
        return _Ee._hh(_fc, _3h);
    }
}

function draw_background(_ch, _h2, _i2) {
    var _dh = _Ee._Vg(_ch);
    if (!_dh) return;
    _ih(_dh._Xg, _h2, _i2, _X6);
}

function draw_background_stretched(_ch, _h2, _i2, _Va, _Wa) {
    var _dh = _Ee._Vg(_ch);
    if (!_dh) return;
    _jh(_dh._Xg, _h2, _i2, _Va, _Wa, 0xffffff, _X6);
}

function draw_background_tiled(_ch, _h2, _i2) {
    var _dh = _Ee._Vg(_ch);
    if (!_dh) return;
    _kh(_dh._Xg, _h2, _i2, 1, 1, true, true, 0xffffff, _X6);
}

function draw_background_part(_ch, _lh, _mh, _j4, _k4, _h2, _i2) {
    var _dh = _Ee._Vg(_ch);
    if (!_dh) return;
    _nh(_dh._Xg, _lh, _mh, _j4, _k4, _h2, _i2, 1, 1, _me, _X6);
}

function draw_background_ext(_ch, _h2, _i2, _Ie, _Je, _K1, _oh, __6) {
    var _dh = _Ee._Vg(_ch);
    if (!_dh) return;
    var c = _07(_oh);
    _ph(_dh._Xg, 0, 0, _h2, _i2, _Ie, _Je, _K1 * Math.PI / 180.0, c, c, c, c, __6);
}

function draw_background_stretched_ext(_ch, _h2, _i2, _Va, _Wa, _oh, __6) {
    var _dh = _Ee._Vg(_ch);
    if (!_dh) return;
    _oh = _07(_oh);
    _jh(_dh._Xg, _h2, _i2, _Va, _Wa, _oh, __6);
}

function draw_background_tiled_ext(_ch, _h2, _i2, _Ie, _Je, _oh, __6) {
    var _dh = _Ee._Vg(_ch);
    if (!_dh) return;
    _oh = _07(_oh);
    _kh(_dh._Xg, _h2, _i2, _Ie, _Je, true, true, _oh, __6);
}

function draw_background_part_ext(_ch, _lh, _mh, _j4, _k4, _h2, _i2, _Ie, _Je, _oh, __6) {
    var _dh = _Ee._Vg(_ch);
    if (!_dh) return;
    _oh = _07(_oh);
    _nh(_dh._Xg, _lh, _mh, _j4, _k4, _h2, _i2, _Ie, _Je, _oh, __6);
}

function draw_background_general(_ch, _lh, _mh, _j4, _k4, _h2, _i2, _Ie, _Je, _K1, _qh, _rh, _sh, _th, __6) {
    var _Wg = _Ee._Vg(_ch);
    if (!_Wg) return;
    _qh = _07(_qh);
    _rh = _07(_rh);
    _sh = _07(_sh);
    _th = _07(_th);
    _uh(_Wg._Xg, _lh, _mh, _j4, _k4, _h2, _i2, _Ie, _Je, _K1 * Math.PI / 180.0, _qh, _rh, _sh, _th, __6);
}

function background_set_alpha_from_background(_F1,
    _ch) {
    var _Rb = _Ee._Vg(_F1);
    var _Sb = _Ee._Vg(_ch);
    if (!_Rb || !_Sb) return;
    if (!_Rb._fh) {
        var _dh = _eh(_Rb._Xg);
        var _3h = new _4h();
        _Rb._Xg.tp = _gh(_dh);
        _Rb._Xg._T1 = _P1[_Wg._Xg.tp];
        _Rb._Xg.x = 0;
        _Rb._Xg.y = 0;
        _Rb._fh = true;
    }
    _vh(_Rb._Xg, _Sb._Xg);
}

function background_add(_Hc, _Yg, _Zg) {
    var _3h = new _4h();
    _3h.pName = "";
    _3h.transparent = _Yg;
    _3h.smooth = _Zg;
    _3h.preload = true;
    var _wh = _Ee._6h(_3h);
    if (_Hc.substring(0, 5) == "file:") return -1;
    var _xh = _Hc;
    var _yh = _w4(_xh);
    _P1[_yh].onload = _zh;
    _P1[_yh].onerror = _Ah;
    _Bh._1b(_wh, _Hc, _Ch, _P1[_yh]);
    var _L1 = new _5h();
    _3h._Xg = _L1;
    _L1.x = 0;
    _L1.y = 0;
    _L1.w = 0;
    _L1.h = 0;
    _L1.XOffset = 0;
    _L1.YOffset = 0;
    _L1.CropWidth = _L1.w;
    _L1.CropHeight = _L1.h;
    _L1.ow = _L1.w;
    _L1.oh = _L1.h;
    _L1.tp = _yh;
    _L1._T1 = _P1[_L1.tp];
    return _wh;
}

function background_replace(_F1, _Hc, _Yg, _Zg) {
    var _3h = _Ee._Vg(_F1);
    _3h.transparent = _Yg;
    _3h.smooth = _Zg;
    if (_Hc.substring(0, 5) == "file:") return -1;
    var _xh = _Hc;
    var _Dh = _3h._Xg._T1._C5;
    var _yh = _w4(_xh);
    _P1[_yh]._C5 = _Dh;
    _P1[_yh].onload = _zh;
    _P1[_yh].onerror = _Ah;
    _Bh._1b(_F1, _Hc, _Ch, _P1[_yh]);
    var _L1 = _3h._Xg;
    _L1.x = 0;
    _L1.y = 0;
    _L1.w = 0;
    _L1.h = 0;
    _L1.XOffset = 0;
    _L1.YOffset = 0;
    _L1.CropWidth = _L1.w;
    _L1.CropHeight = _L1.h;
    _L1.ow = _L1.w;
    _L1.oh = _L1.h;
    _L1._Eh = null;
    _L1._Fh = 0;
    _L1.tp = _yh;
    _L1._T1 = _P1[_L1.tp];
    return _F1;
}

function background_get_texture(_F1) {
    var _Rb = _Ee._Vg(_F1);
    if (_Rb) {
        return ({
            _R6: _Rb._Xg._T1,
            _S6: _Rb._Xg
        });
    }
    return null;
}

function background_get_uvs(_F1) {
    var _Rb = _Ee._Vg(_F1);
    if (_Rb) {
        var _L1 = _Rb._Xg;
        var _T1 = _L1._T1;
        var _Gh = 1.0 / _T1._a7;
        var _Hh = 1.0 / _T1._b7;
        var _Ih = [];
        _Ih.push(_L1.x * _Gh, _L1.y * _Hh, (_L1.x + _L1.CropWidth) * _Gh, (_L1.y + _L1.CropHeight) * _Hh);
        return _Ih;
    }
    return null;
}
var _Jh = [];
var _Kh = 0;

function _Lh(target) {
    if (typeof target.onselectstart != "undefined") {
        target.onselectstart = function() {
            return false;
        };
    } else if (typeof target.style._Mh != "undefined") {
        target.style._Mh = "none";
    } else {
        target.onmousedown = function() {
            return false;
        };
    }
    target.style.cursor = "default"
}

function _Nh(_h2, _i2, _Oh, _Ph, _Qh, _Rh) {
    var _Sh = document.getElementById("canvas").parentNode;
    var _Th = document.getElementById("canvas");
    var _Uh = document.createElement("div");
    _Uh.style.cssText = "-moz-user-select: -moz-none;-khtml-user-select: none;-webkit-user-select: none;-ms-user-select: none;user-select: none;";
    _Uh._Vh = false;
    _Uh.setAttribute("id", "gamemaker_image");
    _Uh.style.position = "absolute";
    _Uh._c5 = _Oh;
    var left = _h2 + _Oh.tpe_XOffset;
    var top = _i2 + _Oh.tpe_YOffset;
    _Uh.style.left = left + "px";
    _Uh.style.top = top + "px";
    _Uh.style.width = _Oh.tpe_CropWidth + "px";
    _Uh.style.height = _Oh.tpe_CropHeight + "px";
    _Uh.style.padding = "0px";
    _Uh.style.margin = "0px";
    _Uh.style.border = "0px";
    _Lh(_Uh);
    _Uh._E4 = 0;
    _Uh.x = _h2;
    _Uh.y = _i2;
    var _Wh = document.createElement('button');
    _Wh.onmousemove = _Xh;
    _Wh.type = "button";
    _Wh.style.cursor = _Uh.style.cursor = _Th.style.cursor;
    _Wh.style.width = _Oh.tpe_CropWidth + "px";
    _Wh.style.height = _Oh.tpe_CropHeight + "px";
    _Wh.style.opacity = "1.0";
    _Wh.style.backgroundColor = "rgba(0, 0, 0, 0.0)";
    _Wh.style.border = "0px";
    _Wh.style.backgroundImage = "url(" + _Oh.tpe_texture.src + ")";
    _Wh.style.backgroundPosition = (-_Oh.tpe_x) + "px " + (-_Oh.tpe_y) + "px";
    _Wh.onclick = function() {
        if ((_Ph.substring(0, 6) == "http:/") || (_Ph.substring(0, 6) == "https:")) {
            _Yh = window.open(_Ph, _Qh, _Rh);
            return false;
        } else {
            var pFunc = eval("gml_Script_" + _Ph);
            if (pFunc) pFunc(null, null, _Qh, _Rh);
            return false;
        }
    };
    _Uh.insertBefore(_Wh, null);
    _Sh.insertBefore(_Uh, null);
    return _Uh;
}

function clickable_add(_h2, _i2, _Oh, _Ph, _Qh, _Rh) {
    _Jh[_Kh] = _Nh(_h2, _i2, _Oh, _Ph, _Qh, _Rh);
    return _Kh++;
}

function clickable_add_ext(_h2, _i2, _Oh, _Ph, _Qh, _Rh, _ud, __6) {
    _Jh[_Kh] = _Nh(_h2, _i2, _Oh, _Ph, _Qh, _Rh);
    clickable_change_ext(_Kh, _Oh, _h2, _i2, __6, _ud);
    return _Kh++;
}

function clickable_exists(_ha) {
    var _Zh = _Jh[_ha];
    if (_Zh) {
        return true;
    } else {
        return false;
    }
}

function clickable_delete(_ha) {
    var _Zh = _Jh[_ha];
    if (_Zh) {
        _Zh.parentNode.removeChild(_Zh);
        _Jh[_ha] = undefined;
    }
}

function clickable_change(_ha, _Oh, _h2, _i2) {
    var _Zh = _Jh[_ha];
    if (_Zh) {
        if (_Zh.firstChild) {
            var __h = _Zh.firstChild;
            var left = _h2 + _Oh.tpe_XOffset;
            var top = _i2 + _Oh.tpe_YOffset;
            _Zh.style.left = left + "px";
            _Zh.style.top = top + "px";
            _Zh.style.width = (_Oh.tpe_CropWidth) + "px";
            _Zh.style.height = (_Oh.tpe_CropHeight) + "px";
            __h.style.left = _Zh.style.left;
            __h.style._L2 = _Zh.style.top;
            __h.style.width = _Zh.style.width;
            __h.style.height = _Zh.style.height;
            __h.style.backgroundPosition = (-_Oh.tpe_x) + "px " + (-_Oh.tpe_y) + "px";
            var _0i = true;
            var _1i = "url(" + _Oh.tpe_texture.src + ")";
            if (typeof(__h.style.backgroundImage) != undefined) {
                if (__h.style.backgroundImage == _1i) {
                    _0i = false;
                }
            }
            if (_0i == true) {
                __h.style.backgroundImage = _1i;
            }
        }
    }
}

function clickable_change_ext(_ha, _Oh, _h2, _i2, _ud, __6) {
    clickable_change(_ha, _Oh, _h2, _i2);
    var _Zh = _Jh[_ha];
    if (_Zh) {
        var __h = _Zh.firstChild;
        if (_Zh.x != _h2) {
            _Zh.style.left = _h2 + "px";
            _Zh.x = _h2;
        }
        if (_Zh.y != _i2) {
            _Zh.style.top = _i2 + "px";
            _Zh.y = _i2;
        }
        if (__h) {
            __h.style.width = _Zh.style.width = (_Oh.tpe_CropWidth * _ud) + "px";
            __h.style.height = _Zh.style.height = (_Oh.tpe_CropHeight * _ud) + "px";
            var _2i = (_ud * _Oh.tpe_texture.width * 100) / (_Oh.tpe_CropWidth);
            __h.style.backgroundSize = (_ud * _Oh.tpe_texture.width) + "px " + (_ud * _Oh.tpe_texture.height) + "px";
            var _3i = (-_Oh.tpe_x * _ud);
            var _4i = (-_Oh.tpe_y * _ud);
            __h.style.backgroundPosition = _3i + "px " + _4i + "px";
            if (__h.style.opacity != __6) __h.style.opacity = __6;
        }
    }
}

function clickable_set_style(_5i, _6i) {
    var _Zh = _Jh[_5i];
    var _M3 = _N3._O3(_6i);
    if (_Zh && _M3) {
        var __h = _Zh.firstChild;
        if (__h) {
            for (var _Fc in _M3) {
                if (!_M3.hasOwnProperty(_Fc)) continue;
                __h.style[_Fc] = _M3[_Fc];
            }
        }
    }
}

function collision_point(_7i,
    _h2, _i2, _cc, _Ra, _8i) {
    return _9i(_7i, Math.floor(_cc), _8i, _ai, _h2, _i2, _Ra, function(_bi) {
        var _ci = _bi._di(_h2, _i2, _Ra);
        if (!_ci) {
            return _ai;
        }
        return _bi.id;
    });
}

function collision_rectangle(_7i, _v3, _w3, _S2, _T2, _cc, _Ra, _8i) {
    return _9i(_7i, Math.floor(_cc), _8i, _ai, _v3, _w3, _S2, _T2, _Ra, function(_bi) {
        var _ci = _bi._ei(_v3, _w3, _S2, _T2, _Ra);
        if (!_ci) {
            return _ai;
        }
        return _bi.id;
    });
}

function collision_circle(_7i, _fi, _gi, _hi, _cc, _Ra, _8i) {
    return collision_ellipse(_7i, _fi - _hi, _gi - _hi, _fi + _hi, _gi + _hi, _cc, _Ra, _8i);
}

function collision_ellipse(_7i,
    _v3, _w3, _S2, _T2, _cc, _Ra, _8i) {
    return _9i(_7i, Math.floor(_cc), _8i, _ai, _v3, _w3, _S2, _T2, _Ra, function(_bi) {
        var _ci = _bi._ii(_v3, _w3, _S2, _T2, _Ra);
        if (!_ci) {
            return _ai;
        }
        return _bi.id;
    });
}

function collision_line(_7i, _v3, _w3, _S2, _T2, _cc, _Ra, _8i) {
    var _ji = (_Ra >= 0.5) ? true : false;
    var _ki = (_8i >= 0.5) ? true : false;
    return _9i(_7i, Math.floor(_cc), _ki, _ai, _v3, _w3, _S2, _T2, _ji, function(_bi) {
        var _ci = _bi._li(_v3, _w3, _S2, _T2, _ji);
        if (!_ci) {
            return _ai;
        }
        return _bi.id;
    });
}

function point_in_rectangle(_mi, _ni, _v3, _w3, _S2, _T2) {
    if ((_mi >= _v3 && _mi <= _S2) && (_ni >= _w3 && _ni <= _T2)) {
        return true;
    }
    return false;
}

function rectangle_in_rectangle(_oi, _pi, _qi, _ri, _v3, _w3, _S2, _T2) {
    var _si = 0;
    if ((_oi >= _v3 && _oi <= _S2) && (_pi >= _w3 && _pi <= _T2)) _si |= 1;
    if ((_qi >= _v3 && _qi <= _S2) && (_pi >= _w3 && _pi <= _T2)) _si |= 2;
    if ((_qi >= _v3 && _qi <= _S2) && (_ri >= _w3 && _ri <= _T2)) _si |= 4;
    if ((_oi >= _v3 && _oi <= _S2) && (_ri >= _w3 && _ri <= _T2)) _si |= 8;
    if (_si == 15) {
        return 1.0;
    } else if (_si == 0) {
        return 0.0;
    } else {
        return 2.0;
    }
}

function _ti(_ui, _vi, _03, _13, _23, _33, _wi, _xi) {
    var _yi = _wi - _03;
    var _zi = _23 - _03;
    var _Ai = _ui - _03;
    var _Bi = _xi - _13;
    var _Ci = _33 - _13;
    var _Di = _vi - _13;
    var _Ei = (_yi * _yi) + (_Bi * _Bi);
    var _Fi = (_yi * _zi) + (_Bi * _Ci);
    var _Gi = (_yi * _Ai) + (_Bi * _Di);
    var _Hi = (_zi * _zi) + (_Ci * _Ci);
    var _Ii = (_zi * _Ai) + (_Ci * _Di);
    var _Ji = 1.0 / (_Ei * _Hi - _Fi * _Fi);
    var _W1 = (_Hi * _Gi - _Fi * _Ii) * _Ji;
    var _X1 = (_Ei * _Ii - _Fi * _Gi) * _Ji;
    return ((_W1 >= 0.0) && (_X1 >= 0.0) && (_W1 + _X1 < 1.0));
}

function point_in_triangle(_mi, _ni, _v3, _w3, _S2, _T2, _Ki, _Li) {
    return _ti(_mi, _ni, _v3, _w3, _S2, _T2, _Ki, _Li);
}

function _Mi(_mi, _ni, _Ni, _Oi, _Pi) {
    var _Cd = (((_mi - _Ni) * (_mi - _Ni)) + ((_ni - _Oi) * (_ni - _Oi)));
    if (_Cd <= _Pi) return true;
    return false;
}

function point_in_circle(_mi,
    _ni, _Ni, _Oi, _Qi) {
    return _Mi(_mi, _ni, _Ni, _Oi, _Qi * _Qi);
}

function rectangle_in_circle(_Ri, _Si, _Ti, _Ui, _Ni, _Oi, _Qi) {
    var _03, _13, _23, _33, _Vi, _Wi, _Xi, _Yi, _Zi;
    _03 = _Ri;
    _13 = _Si;
    _23 = _Ti;
    _33 = _Ui;
    _Vi = _Ni;
    _Wi = _Oi;
    _Xi = _Qi;
    var __i = _Xi * _Xi;
    _Yi = _Vi;
    _Zi = _Wi;
    if (_Yi < _03) _Yi = _03;
    if (_Yi > _23) _Yi = _23;
    if (_Zi < _13) _Zi = _13;
    if (_Zi > _33) _Zi = _33;
    var _0j = (_Yi - _Vi) * (_Yi - _Vi) + (_Zi - _Wi) * (_Zi - _Wi);
    var _8e = 0.0;
    if (_0j <= __i) {
        _8e = 2.0;
        if ((_Mi(_03, _13, _Vi, _Wi, __i)) && (_Mi(_23, _13, _Vi, _Wi, __i)) && (_Mi(_23, _33, _Vi, _Wi, __i)) && (_Mi(_03, _33, _Vi, _Wi, __i))) {
            _8e = 1.0;
        }
    }
    return _8e;
}

function _1j(_Ri, _Si, _Ti, _Ui, _Ni, _Oi, _Qi) {
    var _03, _13, _23, _33, _Vi, _Wi, _Xi, _Yi, _Zi;
    _03 = _Ri;
    _13 = _Si;
    _23 = _Ti;
    _33 = _Ui;
    _Vi = _Ni;
    _Wi = _Oi;
    _Xi = _Qi;
    var __i = _Xi * _Xi;
    _Yi = _Vi;
    _Zi = _Wi;
    if (_Yi < _03) _Yi = _03;
    if (_Yi > _23) _Yi = _23;
    if (_Zi < _13) _Zi = _13;
    if (_Zi > _33) _Zi = _33;
    var _0j = (_Yi - _Vi) * (_Yi - _Vi) + (_Zi - _Wi) * (_Zi - _Wi);
    var _8e = 0.0;
    if (_0j <= __i) {
        _8e = 2.0;
        if ((Math.abs(_Vi - _03) > _Xi) && (Math.abs(_Vi - _23) > _Xi) && (Math.abs(_Wi - _13) > _Xi) && (Math.abs(_Wi - _33) > _Xi)) {
            _8e = 1.0;
        }
    }
    return _8e;
}

function rectangle_in_triangle(_Ri,
    _Si, _Ti, _Ui, _v3, _w3, _S2, _T2, _Ki, _Li) {
    var _si = 0;
    if (_ti(_Ri, _Si, _v3, _w3, _S2, _T2, _Ki, _Li)) _si |= 1;
    if (_ti(_Ti, _Si, _v3, _w3, _S2, _T2, _Ki, _Li)) _si |= 2;
    if (_ti(_Ti, _Ui, _v3, _w3, _S2, _T2, _Ki, _Li)) _si |= 4;
    if (_ti(_Ri, _Ui, _v3, _w3, _S2, _T2, _Ki, _Li)) _si |= 8;
    if (_si == 15) {
        return 1.0;
    } else if (_si == 0) {
        return 0.0;
    } else {
        return 2.0;
    }
}

function d3d_start() {
    _56("d3d_start()");
}

function d3d_end() {
    _56("d3d_end()");
}

function d3d_set_hidden(enable) {
    _56("d3d_set_hidden()");
}

function d3d_set_culling(_2j) {
    _56("d3d_set_culling()");
}

function d3d_set_shading(smooth) {
    _56("d3d_set_shading()");
}

function d3d_set_zwriteenable(_3j) {
    _56("d3d_set_zwriteenable()");
}

function d3d_set_depth(depth) {
    _56("d3d_set_depth()");
}

function draw_set_color_write_enable(_4j, _5j, _6j, alpha) {
    _56("draw_set_color_write_enable()");
}
var draw_set_colour_write_enable = draw_set_color_write_enable;

function d3d_set_lighting(enable) {
    _56("d3d_set_shading()");
}

function d3d_light_define_direction(_Q4, _A5, _B5, _7j, _F4) {
    _56("d3d_light_define_direction()");
}

function d3d_light_define_point(_Q4, x, y, _96, _8j, _F4) {
    _56("d3d_light_define_point()");
}

function d3d_light_enable(_Q4, enable) {
    _56("d3d_light_enable()");
}

function d3d_light_define_ambient(colour) {
    _56("d3d_light_define_ambient()");
}

function d3d_set_fog(enable, _R4, start, end) {
    _56("d3d_set_fog()");
}

function d3d_draw_floor(_03, _13, _9j, _23, _33, _aj, _66, _bj, _cj) {
    _56("d3d_draw_floor()");
}

function d3d_draw_ellipsoid(_03, _13, _9j, _23, _33, _aj, _66, _bj, _cj, _dj) {
    _56("d3d_draw_ellipsoid()");
}

function d3d_draw_block(_03, _13, _9j, _23, _33, _aj, _66, _bj, _cj) {
    _56("d3d_draw_block()");
}

function d3d_draw_cylinder(_03, _13, _9j, _23, _33, _aj, _66, _bj, _cj, closed, _dj) {
    _56("d3d_draw_cylinder()");
}

function d3d_draw_cone(_03, _13, _9j, _23, _33, _aj, _66, _bj, _cj, closed, _dj) {
    _56("d3d_draw_cone()");
}

function d3d_draw_wall(_03, _13, _9j, _23, _33, _aj, _66, _bj, _cj) {
    _56("d3d_draw_wall()");
}

function d3d_model_create() {
    _56("d3d_model_create()");
}

function d3d_model_destroy(_Q4) {
    _56("d3d_model_destroy()");
}

function d3d_model_clear(_Q4) {
    _56("d3d_model_clear()");
}

function d3d_model_save(_Q4, _ej) {
    _56("d3d_model_save()");
}

function d3d_model_load(_Q4, _ej) {
    _56("d3d_model_load()");
}

function d3d_model_draw(_Q4, x, y, _96, _66) {
    _56("d3d_model_draw()");
}

function d3d_model_primitive_begin(_Q4, kind) {
    _56("d3d_model_primitive_begin()");
}

function d3d_model_vertex(_Q4, x, y, _96) {
    _56("d3d_model_vertex()");
}

function d3d_model_vertex_color(_Q4, x, y, _96, _F4, alpha) {
    _56("d3d_model_vertex_color()");
}

function d3d_model_vertex_texture(_Q4, x, y, _96, _76, _86) {
    _56("d3d_model_vertex_texture()");
}

function d3d_model_vertex_texture_color(_Q4, x, y, _96, _76, _86,
    _F4, alpha) {
    _56("d3d_model_vertex_texture_color()");
}

function d3d_model_vertex_normal(_Q4, x, y, _96, _a6, _b6, _c6) {
    _56("d3d_model_vertex_normal()");
}

function d3d_model_vertex_normal_color(_Q4, x, y, _96, _a6, _b6, _c6, _F4, alpha) {
    _56("d3d_model_vertex_normal_color()");
}

function d3d_model_vertex_normal_texture(_Q4, x, y, _96, _a6, _b6, _c6, _76, _86) {
    _56("d3d_model_vertex_normal_texture()");
}

function d3d_model_vertex_normal_texture_color(_Q4, x, y, _96, _a6, _b6, _c6, _76, _86, _F4, alpha) {
    _56("d3d_model_vertex_normal_texture_color()");
}

function d3d_model_primitive_end(_Q4) {
    _56("d3d_model_primitive_end()");
}

function d3d_model_block(_Q4, _03, _13, _9j, _23, _33, _aj, _bj, _cj) {
    _56("d3d_model_block()");
}

function d3d_model_cylinder(_Q4, _03, _13, _9j, _23, _33, _aj, _bj, _cj, closed, _dj) {
    _56("d3d_model_cylinder()");
}

function d3d_model_cone(_Q4, _03, _13, _9j, _23, _33, _aj, _bj, _cj, closed, _dj) {
    _56("d3d_model_cone()");
}

function d3d_model_ellipsoid(_Q4, _03, _13, _9j, _23, _33, _aj, _bj, _cj, _dj) {
    _56("d3d_model_ellipsoid()");
}

function d3d_model_wall(_Q4, _03, _13, _9j, _23,
    _33, _aj, _bj, _cj) {
    _56("d3d_model_wall()");
}

function d3d_model_floor(_Q4, _03, _13, _9j, _23, _33, _aj, _bj, _cj) {
    _56("d3d_model_floor()");
}

function d3d_set_perspective(enable) {
    _56("d3d_set_perspective()");
}

function d3d_set_projection(_fj, _gj, _hj, _ij, _jj, _kj, _lj, _mj, _nj) {
    _56("d3d_set_projection()");
}

function d3d_set_projection_ext(_fj, _gj, _hj, _ij, _jj, _kj, _lj, _mj, _nj, _E4, _oj, _pj, _qj) {
    _56("d3d_set_projection_ext()");
}

function d3d_set_projection_ortho(x, y, w, h, _E4) {
    _56("d3d_set_projection_ortho()");
}

function d3d_set_projection_perspective(x,
    y, w, h, _E4) {
    _56("d3d_set_projection_perspective()");
}

function d3d_transform_set_identity() {
    _56("d3d_transform_set_identity()");
}

function d3d_transform_set_translation(_rj, _sj, _tj) {
    _56("d3d_transform_set_translation()");
}

function d3d_transform_set_scaling(_C4, _D4, _uj) {
    _56("d3d_transform_set_scaling()");
}

function d3d_transform_set_rotation_x(_E4) {
    _56("d3d_transform_set_rotation_x()");
}

function d3d_transform_set_rotation_y(_E4) {
    _56("d3d_transform_set_rotation_y()");
}

function d3d_transform_set_rotation_z(_E4) {
    _56("d3d_transform_set_rotation_z()");
}

function d3d_transform_set_rotation_axis(_vj, _wj, _xj, _E4) {
    _56("d3d_transform_set_rotation_axis()");
}

function d3d_transform_add_translation(_rj, _sj, _tj) {
    _56("d3d_transform_add_translation()");
}

function d3d_transform_add_scaling(_C4, _D4, _uj) {
    _56("d3d_transform_add_scaling()");
}

function d3d_transform_add_rotation_x(_E4) {
    _56("d3d_transform_add_rotation_x()");
}

function d3d_transform_add_rotation_y(_E4) {
    _56("d3d_transform_add_rotation_y()");
}

function d3d_transform_add_rotation_z(_E4) {
    _56("d3d_transform_add_rotation_axis()");
}

function d3d_transform_add_rotation_axis(_vj, _wj, _xj, _E4) {
    _56("d3d_transform_add_rotation_z()");
}

function d3d_transform_vertex(_h2, _i2, _c7) {
    _56("d3d_transform_vertex()");
}

function matrix_get(_y7) {
    _56("matrix_get()");
}

function matrix_set(_y7, _yj) {
    _56("matrix_set()");
}

function matrix_build(_h2, _i2, _c7, _zj, _Aj, _Bj, _Ie, _Je, _Cj) {
    _56("matrix_build()");
}

function matrix_multiply(_Dj, _Ej) {
    _56("matrix_multiply()");
}

function d3d_transform_stack_clear() {
    _56("d3d_transform_stack_clear()");
}

function d3d_transform_stack_empty() {
    _56("d3d_transform_stack_empty()");
}

function d3d_transform_stack_push() {
    _56("d3d_transform_stack_push()");
}

function d3d_transform_stack_pop() {
    _56("d3d_transform_stack_pop()");
}

function d3d_transform_stack_top() {
    _56("d3d_transform_stack_top()");
}

function d3d_transform_stack_discard() {
    _56("d3d_transform_stack_discard()");
}
var _Fj = [];

function _Gj() {
    if (!_b4) {
        return;
    }
    d3d_start = _Hj;
    d3d_end = _Ij;
    d3d_set_culling = _Jj;
    d3d_set_shading = _Kj;
    d3d_set_zwriteenable = _Lj;
    d3d_set_depth = _Mj;
    d3d_set_hidden = _Nj;
    draw_set_color_write_enable = _Oj;
    draw_set_colour_write_enable = _Oj;
    d3d_set_perspective = _Pj;
    d3d_set_projection = _Qj;
    d3d_set_projection_ext = _Rj;
    d3d_set_projection_ortho = _Sj;
    d3d_set_projection_perspective = _Tj;
    d3d_transform_set_identity = _Uj;
    d3d_transform_set_translation = _Vj;
    d3d_transform_set_scaling = _Wj;
    d3d_transform_set_rotation_x = _Xj;
    d3d_transform_set_rotation_y = _Yj;
    d3d_transform_set_rotation_z = _Zj;
    d3d_transform_set_rotation_axis = __j;
    d3d_transform_add_translation = _0k;
    d3d_transform_add_scaling = _1k;
    d3d_transform_add_rotation_x = _2k;
    d3d_transform_add_rotation_y = _3k;
    d3d_transform_add_rotation_z = _4k;
    d3d_transform_add_rotation_axis = _5k;
    d3d_transform_vertex = _6k;
    d3d_transform_stack_clear = _7k;
    d3d_transform_stack_empty = _8k;
    d3d_transform_stack_push = _9k;
    d3d_transform_stack_pop = _ak;
    d3d_transform_stack_top = _bk;
    d3d_transform_stack_discard = _ck;
    d3d_draw_floor = _dk;
    d3d_draw_ellipsoid = _ek;
    d3d_draw_block = _fk;
    d3d_draw_cylinder = _gk;
    d3d_draw_cone = _hk;
    d3d_draw_wall = _ik;
    d3d_set_lighting = _jk;
    d3d_light_define_direction = _kk;
    d3d_light_define_point = _lk;
    d3d_light_enable = _mk;
    d3d_light_define_ambient = _nk;
    d3d_set_fog = _ok;
    d3d_model_create = _pk;
    d3d_model_destroy = _qk;
    d3d_model_clear = _rk;
    d3d_model_save = _sk;
    d3d_model_load = _tk;
    d3d_model_draw = _uk;
    d3d_model_primitive_begin = _vk;
    d3d_model_vertex = _wk;
    d3d_model_vertex_color = _xk;
    d3d_model_vertex_colour = _xk;
    d3d_model_vertex_texture = _yk;
    d3d_model_vertex_texture_color = _zk;
    d3d_model_vertex_texture_colour = _zk;
    d3d_model_vertex_normal = _Ak;
    d3d_model_vertex_normal_color = _Bk;
    d3d_model_vertex_normal_texture = _Ck;
    d3d_model_vertex_normal_texture_color = _Dk;
    d3d_model_primitive_end = _Ek;
    d3d_model_block = _Fk;
    d3d_model_cylinder = _Gk;
    d3d_model_cone = _Hk;
    d3d_model_ellipsoid = _Ik;
    d3d_model_wall = _Jk;
    d3d_model_floor = _Kk;
    matrix_get = _Lk;
    matrix_set = _Mk;
    matrix_build = _Nk;
    matrix_multiply = _Ok;
}

function _Hj() {
    _Pk = true;
    _b4._Qk(_Rk);
    _b4._Sk(_Tk);
    _b4._Uk(_Vk);
}

function _Ij() {
    _Pk = false;
    _b4._Qk(false);
    _b4._Sk(false);
    _b4._Uk(false);
}

function _Jj(_Wk) {
    _Vk = _Wk > 0.5;
    _b4._Uk(_Vk);
}

function _Kj(_Zg) {}

function _Lj(_Xk) {
    _Tk = (_Xk > 0.5);
    _b4._Sk(_Tk);
}

function _Mj(_Yk) {
    if (_Pk) {
        _Y5 = Math.min(16000.0, Math.max(-16000.0, _Yk));
    } else {
        _Y5 = 0.0;
    }
}

function _Nj(_Zk) {
    _Rk = (_Zk > 0.5);
    _b4._Qk(_Rk);
}

function _Oj(_4j, _5j, _6j, alpha) {
    __k._4j = (_4j >= 0.5);
    __k._5j = (_5j >= 0.5);
    __k._6j = (_6j >= 0.5);
    __k.alpha = (alpha >= 0.5);
    _b4._0l(__k._4j, __k._5j, __k._6j, __k.alpha);
}

function _Pj(enable) {}

function _jk(_1l) {
    if (_2l != _1l) {
        _2l = _1l;
        _b4._3l(_4l());
    }
}

function _Qj(_fj, _gj, _hj, _ij, _jj, _kj, _lj, _mj, _nj) {
    var _5l = new _6l();
    var _5c = new _7l(_fj, _gj, _hj);
    var _8l = new _7l(_ij, _jj, _kj);
    var _9l = new _7l(_lj,
        _mj, _nj);
    _5l._al(_5c, _8l, _9l);
    _b4._bl(_5l);
}

function _Rj(_fj, _gj, _hj, _ij, _jj, _kj, _lj, _mj, _nj, _E4, _oj, _cl, _dl) {
    var _5l = new _6l();
    var _5c = new _7l(_fj, _gj, _hj);
    var _8l = new _7l(_ij, _jj, _kj);
    var _9l = new _7l(_lj, _mj, _nj);
    _5l._al(_5c, _8l, _9l);
    var _el = new _6l();
    _el._fl(_E4, _oj, _cl, _dl);
    _el.__2[_gl] *= _hl;
    _b4._bl(_5l);
    _b4._il(_el);
    _b4._jl((_hl < 0) ? _H5._kl : _H5._ll);
}

function _Sj(x, y, w, h, _E4) {
    var _5l = new _6l();
    var _U5 = new _7l(x + (w / 2.0), y + (h / 2.0), -w);
    var _Z1 = new _7l(x + (w / 2.0), y + (h / 2.0), 0.0);
    var _V5 = new _7l(Math.sin(-_E4 * (Math.PI / 180.0)),
        Math.cos(-_E4 * (Math.PI / 180.0)), 0.0);
    _5l._al(_U5, _Z1, _V5);
    var _ml = new _6l();
    _ml._nl(w, -h * _hl, 1.0, 32000.0);
    _b4._bl(_5l);
    _b4._il(_ml);
    _b4._jl((_hl < 0) ? _H5._kl : _H5._ll);
}

function _Tj(x, y, w, h, _E4) {
    var _5l = new _6l();
    var _U5 = new _7l(x + (w / 2.0), y + (h / 2.0), -w);
    var _Z1 = new _7l(x + (w / 2.0), y + (h / 2.0), 0.0);
    var _V5 = new _7l(Math.sin(-_E4 * (Math.PI / 180.0)), Math.cos(-_E4 * (Math.PI / 180.0)), 0.0);
    _5l._al(_U5, _Z1, _V5);
    var _el = new _6l();
    _el._ol(1.0, (w / h), 1.0, 32000.0);
    _el.__2[_gl] *= _hl;
    _b4._bl(_5l);
    _b4._il(_el);
    _b4._jl((_hl < 0) ? _H5._kl : _H5._ll);
}

function _dk(_03, _13, _9j, _23, _33, _aj, _66, _bj, _cj) {
    var _pl = _ql();
    texture_set_repeat(true);
    d3d_primitive_begin_texture(_n6, _66); {
        d3d_vertex_normal_texture(_03, _13, _9j, 0, 0, 1, 0, 0);
        d3d_vertex_normal_texture(_03, _33, _9j, 0, 0, 1, 0, _cj);
        d3d_vertex_normal_texture(_23, _33, _aj, 0, 0, 1, _bj, _cj);
        d3d_vertex_normal_texture(_23, _13, _aj, 0, 0, 1, _bj, 0);
    }
    d3d_primitive_end();
    texture_set_repeat(_pl);
}

function _ek(_03, _13, _9j, _23, _33, _aj, _66, _rl, _sl, _dj) {
    var _pl = _ql();
    texture_set_repeat(true);
    if (_dj < 3) {
        _dj = 3;
    }
    if (_dj > 128) {
        _dj = 128;
    }
    var _G3 = [];
    var _F3 = [];
    for (var i = 0; i <= _dj; i++) {
        _G3[i] = Math.cos(i * 2.0 * Math.PI / _dj);
        _F3[i] = Math.sin(i * 2.0 * Math.PI / _dj);
    }
    var _B3 = (_23 + _03) / 2,
        _C3 = (_33 + _13) / 2,
        _tl = (_aj + _9j) / 2,
        _ul = (_23 - _03) / 2,
        _vl = (_33 - _13) / 2,
        _wl = (_aj - _9j) / 2;
    var _xl = (_dj + 1) / 2;
    for (var _k3 = 0; _k3 < _xl; _k3++) {
        var _yl = Math.cos(_k3 * Math.PI / _xl),
            _zl = Math.sin(_k3 * Math.PI / _xl),
            _Al = Math.cos((_k3 + 1) * Math.PI / _xl),
            _Bl = Math.sin((_k3 + 1) * Math.PI / _xl);
        d3d_primitive_begin_texture(_m6, _66);
        for (var i = 0; i <= _dj; i++) {
            d3d_vertex_normal_texture(_B3 + _ul * _zl * _G3[i], _C3 + _vl * _zl * _F3[i],
                _tl + _wl * _yl, _zl * _G3[i], _zl * _F3[i], _yl, _rl * i / _dj, _k3 * _sl / _xl);
            d3d_vertex_normal_texture(_B3 + _ul * _Bl * _G3[i], _C3 + _vl * _Bl * _F3[i], _tl + _wl * _Al, _Bl * _G3[i], _Bl * _F3[i], _Al, _rl * i / _dj, (_k3 + 1) * _sl / _xl);
        }
        d3d_primitive_end();
    }
    texture_set_repeat(_pl);
}

function _fk(_03, _13, _9j, _23, _33, _aj, _66, _rl, _sl) {
    var _pl = _ql();
    texture_set_repeat(true);
    d3d_primitive_begin_texture(_l6, _66); {
        d3d_vertex_normal_texture(_03, _13, _9j, 0, 0, -1, 0, 0);
        d3d_vertex_normal_texture(_03, _33, _9j, 0, 0, -1, 0, _sl);
        d3d_vertex_normal_texture(_23, _33, _9j,
            0, 0, -1, _rl, _sl);
        d3d_vertex_normal_texture(_23, _33, _9j, 0, 0, -1, _rl, _sl);
        d3d_vertex_normal_texture(_23, _13, _9j, 0, 0, -1, _rl, 0);
        d3d_vertex_normal_texture(_03, _13, _9j, 0, 0, -1, 0, 0);
    } {
        d3d_vertex_normal_texture(_03, _13, _aj, 0, 0, 1, 0, 0);
        d3d_vertex_normal_texture(_23, _13, _aj, 0, 0, 1, _rl, 0);
        d3d_vertex_normal_texture(_23, _33, _aj, 0, 0, 1, _rl, _sl);
        d3d_vertex_normal_texture(_23, _33, _aj, 0, 0, 1, _rl, _sl);
        d3d_vertex_normal_texture(_03, _33, _aj, 0, 0, 1, 0, _sl);
        d3d_vertex_normal_texture(_03, _13, _aj, 0, 0, 1, 0, 0);
    } {
        d3d_vertex_normal_texture(_03,
            _33, _9j, 0, 1, 0, 0, 0);
        d3d_vertex_normal_texture(_03, _33, _aj, 0, 1, 0, 0, _sl);
        d3d_vertex_normal_texture(_23, _33, _aj, 0, 1, 0, _rl, _sl);
        d3d_vertex_normal_texture(_23, _33, _aj, 0, 1, 0, _rl, _sl);
        d3d_vertex_normal_texture(_23, _33, _9j, 0, 1, 0, _rl, 0);
        d3d_vertex_normal_texture(_03, _33, _9j, 0, 1, 0, 0, 0);
    } {
        d3d_vertex_normal_texture(_23, _33, _9j, 1, 0, 0, 0, 0);
        d3d_vertex_normal_texture(_23, _33, _aj, 1, 0, 0, 0, _sl);
        d3d_vertex_normal_texture(_23, _13, _aj, 1, 0, 0, _rl, _sl);
        d3d_vertex_normal_texture(_23, _13, _aj, 1, 0, 0, _rl, _sl);
        d3d_vertex_normal_texture(_23,
            _13, _9j, 1, 0, 0, _rl, 0);
        d3d_vertex_normal_texture(_23, _33, _9j, 1, 0, 0, 0, 0);
    } {
        d3d_vertex_normal_texture(_23, _13, _9j, 0, -1, 0, 0, 0);
        d3d_vertex_normal_texture(_23, _13, _aj, 0, -1, 0, 0, _sl);
        d3d_vertex_normal_texture(_03, _13, _aj, 0, -1, 0, _rl, _sl);
        d3d_vertex_normal_texture(_03, _13, _aj, 0, -1, 0, _rl, _sl);
        d3d_vertex_normal_texture(_03, _13, _9j, 0, -1, 0, _rl, 0);
        d3d_vertex_normal_texture(_23, _13, _9j, 0, -1, 0, 0, 0);
    } {
        d3d_vertex_normal_texture(_03, _13, _9j, -1, 0, 0, 0, 0);
        d3d_vertex_normal_texture(_03, _13, _aj, -1, 0, 0, 0, _sl);
        d3d_vertex_normal_texture(_03,
            _33, _aj, -1, 0, 0, _rl, _sl);
        d3d_vertex_normal_texture(_03, _33, _aj, -1, 0, 0, _rl, _sl);
        d3d_vertex_normal_texture(_03, _33, _9j, -1, 0, 0, _rl, 0);
        d3d_vertex_normal_texture(_03, _13, _9j, -1, 0, 0, 0, 0);
    }
    d3d_primitive_end();
    texture_set_repeat(_pl);
}

function _gk(_03, _13, _9j, _23, _33, _aj, _66, _rl, _sl, closed, _dj) {
    var _G3 = [];
    var _F3 = [];
    var _pl = _ql();
    texture_set_repeat(true);
    if (_dj < 3) {
        _dj = 3;
    }
    if (_dj > 128) {
        _dj = 128;
    }
    for (var i = 0; i <= _dj; i++) {
        _G3[i] = Math.cos(i * 2.0 * Math.PI / _dj);
        _F3[i] = Math.sin(i * 2.0 * Math.PI / _dj);
    }
    var _B3 = (_23 + _03) / 2.0;
    var _C3 = (_33 + _13) / 2.0;
    var _ul = (_23 - _03) / 2.0;
    var _vl = (_33 - _13) / 2.0;
    if (true == closed) {
        d3d_primitive_begin_texture(_n6, _66);
        d3d_vertex_normal_texture(_B3, _C3, _aj, 0, 0, 1, 0, _sl);
        for (var i = 0; i <= _dj; i++) {
            d3d_vertex_normal_texture(_B3 + _G3[i] * _ul, _C3 + _F3[i] * _vl, _aj, 0, 0, 1, 0, _sl);
        }
        d3d_primitive_end();
    }
    d3d_primitive_begin_texture(_m6, _66);
    for (var i = 0; i <= _dj; i++) {
        d3d_vertex_normal_texture(_B3 + _G3[i] * _ul, _C3 + _F3[i] * _vl, _aj, _G3[i], _F3[i], 0, _rl * i / _dj, _sl);
        d3d_vertex_normal_texture(_B3 + _G3[i] * _ul, _C3 + _F3[i] * _vl, _9j, _G3[i], _F3[i], 0, _rl * i / _dj,
            0);
    }
    d3d_primitive_end();
    if (true == closed) {
        d3d_primitive_begin_texture(_n6, _66);
        d3d_vertex_normal_texture(_B3, _C3, _9j, 0, 0, -1, 0, 0);
        for (var i = _dj; i >= 0; i--) {
            d3d_vertex_normal_texture(_B3 + _G3[i] * _ul, _C3 + _F3[i] * _vl, _9j, 0, 0, -1, 0, 0);
        }
        d3d_primitive_end();
    }
    texture_set_repeat(_pl);
}

function _hk(_03, _13, _9j, _23, _33, _aj, _66, _rl, _sl, closed, _dj) {
    var _G3 = [];
    var _F3 = [];
    var _pl = _ql();
    texture_set_repeat(true);
    if (_dj < 3) {
        _dj = 3;
    }
    if (_dj > 128) {
        _dj = 128;
    }
    for (var i = 0; i <= _dj; i++) {
        _G3[i] = Math.cos(i * 2.0 * Math.PI / _dj);
        _F3[i] = Math.sin(i * 2.0 * Math.PI / _dj);
    }
    var _B3 = (_23 + _03) / 2.0;
    var _C3 = (_33 + _13) / 2.0;
    var _ul = (_23 - _03) / 2.0;
    var _vl = (_33 - _13) / 2.0;
    d3d_primitive_begin_texture(_m6, _66);
    for (var i = 0; i <= _dj; i++) {
        d3d_vertex_normal_texture(_B3, _C3, _aj, 0, 0, 1, _rl * i / _dj, _sl);
        d3d_vertex_normal_texture(_B3 + _G3[i] * _ul, _C3 + _F3[i] * _vl, _9j, _G3[i], _F3[i], 0, _rl * i / _dj, 0);
    }
    d3d_primitive_end();
    if (true == closed) {
        d3d_primitive_begin_texture(_n6, _66);
        d3d_vertex_normal_texture(_B3, _C3, _9j, 0, 0, -1, 0, 0);
        for (var i = _dj; i >= 0; i--) {
            d3d_vertex_normal_texture(_B3 + _G3[i] * _ul, _C3 + _F3[i] * _vl, _9j,
                0, 0, -1, 0, 0);
        }
        d3d_primitive_end();
    }
    texture_set_repeat(_pl);
}

function _ik(_03, _13, _9j, _23, _33, _aj, _66, _rl, _sl) {
    var _pl = _ql();
    texture_set_repeat(true);
    var _b3 = Math.sqrt(_Cl(_23 - _03) + _Cl(_33 - _13));
    if (_b3 == 0.0) {
        return;
    }
    var _a6 = (_33 - _13) / _b3;
    var _b6 = -(_23 - _03) / _b3;
    d3d_primitive_begin_texture(_n6, _66); {
        d3d_vertex_normal_texture(_03, _13, _9j, _a6, _b6, 0, 0, 0);
        d3d_vertex_normal_texture(_23, _33, _9j, _a6, _b6, 0, _rl, 0);
        d3d_vertex_normal_texture(_23, _33, _aj, _a6, _b6, 0, _rl, _sl);
        d3d_vertex_normal_texture(_03, _13, _aj, _a6, _b6,
            0, 0, _sl);
    }
    d3d_primitive_end();
    texture_set_repeat(_pl);
}

function _kk(_Q4, _A5, _B5, _7j, _F4) {
    var _Dl = new _7l(_A5, _B5, _7j);
    _Dl._El();
    var _Fl = _Q4 * 4;
    _Gl[_Fl + 0] = _Dl._Hl;
    _Gl[_Fl + 1] = _Dl._Il;
    _Gl[_Fl + 2] = _Dl._Jl;
    _Gl[_Fl + 3] = 0.0;
    _Kl[_Fl + 0] = (_F4 & 0xff) / 255.0;
    _Kl[_Fl + 1] = ((_F4 >> 8) & 0xff) / 255.0;
    _Kl[_Fl + 2] = ((_F4 >> 16) & 0xff) / 255.0;
    _Kl[_Fl + 3] = ((_F4 >> 24) & 0xff) / 255.0;
    _Ll[_Fl + 0] = 0;
    _Ll[_Fl + 1] = 0;
    _Ll[_Fl + 2] = 0;
    _Ll[_Fl + 3] = 0;
    _b4._Ml(_Q4, _Ll.subarray(_Q4 * 4, (_Q4 + 1) * 4), _Gl.subarray(_Q4 * 4, (_Q4 + 1) * 4), _Kl.subarray(_Q4 * 4, (_Q4 + 1) * 4));
}

function _lk(_Q4,
    x, y, _96, _8j, _F4) {
    var _Fl = _Q4 * 4;
    _Ll[_Fl + 0] = x;
    _Ll[_Fl + 1] = y;
    _Ll[_Fl + 2] = _96;
    _Ll[_Fl + 3] = _8j;
    _Kl[_Fl + 0] = (_F4 & 0xff) / 255.0;
    _Kl[_Fl + 1] = ((_F4 >> 8) & 0xff) / 255.0;
    _Kl[_Fl + 2] = ((_F4 >> 16) & 0xff) / 255.0;
    _Kl[_Fl + 3] = ((_F4 >> 24) & 0xff) / 255.0;
    _Gl[_Fl + 0] = 0;
    _Gl[_Fl + 1] = 0;
    _Gl[_Fl + 2] = 0;
    _Gl[_Fl + 3] = 0;
    _b4._Ml(_Q4, _Ll.subarray(_Q4 * 4, (_Q4 + 1) * 4), _Gl.subarray(_Q4 * 4, (_Q4 + 1) * 4), _Kl.subarray(_Q4 * 4, (_Q4 + 1) * 4));
}

function _mk(_Q4, enable) {
    _Nl[_Q4] = enable;
    _b4._Ol(_Q4, enable, _Kl.subarray(_Q4 * 4, (_Q4 + 1) * 4));
}

function _nk(colour) {
    _Pl[0] = (colour & 0xff) / 255.0;
    _Pl[1] = ((colour >> 8) & 0xff) / 255.0;
    _Pl[2] = ((colour >> 16) & 0xff) / 255.0;
    _Pl[3] = ((colour >> 24) & 0xff) / 255.0;
    _b4._Ql(_Pl);
}

function _ok(enable, colour, start, end) {
    if (_Rl == null) {
        _Rl = new Float32Array(8);
    }
    _Rl[0] = enable;
    var _8j = end - start;
    _Rl[1] = (_8j == 0.0) ? 0.0 : (1.0 / _8j);
    _Rl[2] = end;
    _Rl[3] = 0.0;
    _Rl[4] = (colour & 0xff) / 255.0;
    _Rl[5] = ((colour >> 8) & 0xff) / 255.0;
    _Rl[6] = ((colour >> 16) & 0xff) / 255.0;
    _Rl[7] = ((colour >> 24) & 0xff) / 255.0;
    _b4._Sl(_Rl);
}

function _pk() {
    return (_Fj.push(new _Tl()) - 1);
}

function _qk(_Q4) {
    if (_Fj[_Q4]) {
        _Fj[_Q4] = null;
    }
}

function _rk(_Q4) {
    if (_Fj[_Q4]) {
        _Fj[_Q4]._U9();
    }
}

function _sk(_Q4, _ej) {
    if (_Fj[_Q4]) {
        _Fj[_Q4]._Ul(_ej);
    }
}

function _tk(_Q4, _ej) {
    if (_Fj[_Q4]) {
        _Fj[_Q4]._p4(_ej);
    }
}

function _uk(_Q4, x, y, _96, _66) {
    if (_Fj[_Q4]) {
        _Fj[_Q4]._L4(x, y, _96, _66);
    }
}

function _vk(_Q4, kind) {
    if (_Fj[_Q4]) {
        _Fj[_Q4]._M7(kind);
    }
}

function _wk(_Q4, x, y, _96) {
    if (_Fj[_Q4]) {
        _Fj[_Q4].Vertex(x, y, _96);
    }
}

function _xk(_Q4, x, y, _96, _F4, alpha) {
    if (_Fj[_Q4]) {
        _Fj[_Q4]._Vl(x, y, _96, _F4, alpha);
    }
}

function _yk(_Q4, x, y, _96, _76, _86) {
    if (_Fj[_Q4]) {
        _Fj[_Q4]._Wl(x, y, _96, _76,
            _86);
    }
}

function _zk(_Q4, x, y, _96, _76, _86, _F4, alpha) {
    if (_Fj[_Q4]) {
        _Fj[_Q4]._Xl(x, y, _96, _76, _86, _F4, alpha);
    }
}

function _Ak(_Q4, x, y, _96, _a6, _b6, _c6) {
    if (_Fj[_Q4]) {
        _Fj[_Q4]._Yl(x, y, _96, _a6, _b6, _c6);
    }
}

function _Bk(_Q4, x, y, _96, _a6, _b6, _c6, _F4, alpha) {
    if (_Fj[_Q4]) {
        _Fj[_Q4]._Zl(x, y, _96, _a6, _b6, _c6, _F4, alpha);
    }
}

function _Ck(_Q4, x, y, _96, _a6, _b6, _c6, _76, _86) {
    if (_Fj[_Q4]) {
        _Fj[_Q4].__l(x, y, _96, _a6, _b6, _c6, _76, _86);
    }
}

function _Dk(_Q4, x, y, _96, _a6, _b6, _c6, _76, _86, _F4, alpha) {
    if (_Fj[_Q4]) {
        _Fj[_Q4]._0m(x, y, _96, _a6, _b6, _c6,
            _76, _86, _F4, alpha);
    }
}

function _Ek(_Q4) {
    if (_Fj[_Q4]) {
        _Fj[_Q4]._O7();
    }
}

function _Fk(_Q4, _03, _13, _9j, _23, _33, _aj, _bj, _cj) {
    if (_Fj[_Q4]) {
        _Fj[_Q4]._1m(_03, _13, _9j, _23, _33, _aj, _bj, _cj);
    }
}

function _Gk(_Q4, _03, _13, _9j, _23, _33, _aj, _bj, _cj, closed, _dj) {
    if (_Fj[_Q4]) {
        _Fj[_Q4]._2m(_03, _13, _9j, _23, _33, _aj, _bj, _cj, closed, _dj);
    }
}

function _Hk(_Q4, _03, _13, _9j, _23, _33, _aj, _bj, _cj, closed, _dj) {
    if (_Fj[_Q4]) {
        _Fj[_Q4]._3m(_03, _13, _9j, _23, _33, _aj, _bj, _cj, closed, _dj);
    }
}

function _Ik(_Q4, _03, _13, _9j, _23, _33, _aj, _bj, _cj, _dj) {
    if (_Fj[_Q4]) {
        _Fj[_Q4]._4m(_03, _13, _9j, _23, _33, _aj, _bj, _cj, _dj);
    }
}

function _Jk(_Q4, _03, _13, _9j, _23, _33, _aj, _bj, _cj) {
    if (_Fj[_Q4]) {
        _Fj[_Q4]._5m(_03, _13, _9j, _23, _33, _aj, _bj, _cj);
    }
}

function _Kk(_Q4, _03, _13, _9j, _23, _33, _aj, _bj, _cj) {
    if (_Fj[_Q4]) {
        _Fj[_Q4]._6m(_03, _13, _9j, _23, _33, _aj, _bj, _cj);
    }
}

function _Uj() {
    _7m(_8m, new _6l());
}

function _Vj(_rj, _sj, _tj) {
    var __2 = new _6l();
    __2._9m(_rj, _sj, _tj);
    _7m(_8m, __2);
}

function _Wj(_C4, _D4, _uj) {
    var __2 = new _6l();
    __2._am(_C4, _D4, _uj);
    _7m(_8m, __2);
}

function _Xj(_E4) {
    var __2 = new _6l();
    __2._bm(_E4);
    _7m(_8m, __2);
}

function _Yj(_E4) {
    var __2 = new _6l();
    __2._cm(_E4);
    _7m(_8m, __2);
}

function _Zj(_E4) {
    var __2 = new _6l();
    __2._dm(_E4);
    _7m(_8m, __2);
}

function __j(_vj, _wj, _xj, _E4) {
    var __2 = new _6l();
    __2._em(new _7l(_vj, _wj, _xj), -_E4);
    _7m(_8m, __2);
}

function _0k(_rj, _sj, _tj) {
    var _fm = new _6l();
    _fm._9m(_rj, _sj, _tj);
    var _gm = _hm(_8m);
    var __2 = new _6l();
    __2._im(_gm, _fm);
    _7m(_8m, __2);
}

function _1k(_C4, _D4, _uj) {
    var _jm = new _6l();
    _jm._am(_C4, _D4, _uj);
    var _gm = _hm(_8m);
    var __2 = new _6l();
    __2._im(_gm, _jm);
    _7m(_8m, __2);
}

function _2k(_E4) {
    var _km = new _6l();
    _km._bm(_E4);
    var _gm = _hm(_8m);
    var __2 = new _6l();
    __2._im(_gm, _km);
    _7m(_8m, __2);
}

function _3k(_E4) {
    var _km = new _6l();
    _km._cm(_E4);
    var _gm = _hm(_8m);
    var __2 = new _6l();
    __2._im(_gm, _km);
    _7m(_8m, __2);
}

function _4k(_E4) {
    var _km = new _6l();
    _km._dm(_E4);
    var _gm = _hm(_8m);
    var __2 = new _6l();
    __2._im(_gm, _km);
    _7m(_8m, __2);
}

function _5k(_vj, _wj, _xj, _E4) {
    var _km = new _6l();
    _km._em(new _7l(_vj, _wj, _xj), -_E4);
    var _gm = _hm(_8m);
    var __2 = new _6l();
    __2._im(_gm, _km);
    _7m(_8m, __2);
}

function _6k(_h2, _i2, _c7) {
    var _gm = _hm(_8m);
    var _l3 = (_gm.__2[_lm] * _h2) + (_gm.__2[_mm] * _i2) + (_gm.__2[_nm] * _c7) + _gm.__2[_om];
    var _n3 = (_gm.__2[_pm] * _h2) + (_gm.__2[_gl] * _i2) + (_gm.__2[_qm] * _c7) + _gm.__2[_rm];
    var _sm = (_gm.__2[_tm] * _h2) + (_gm.__2[_um] * _i2) + (_gm.__2[_vm] * _c7) + _gm.__2[_wm];
    var _d3 = [];
    _d3[0] = _l3;
    _d3[1] = _n3;
    _d3[2] = _sm;
    return _d3;
}

function _7k() {
    _xm();
}

function _8k() {
    return _ym();
}

function _9k() {
    var _gm = _hm(_8m);
    return _zm(_gm);
}

function _ak() {
    return _Am();
}

function _bk() {
    return _Bm();
}

function _ck() {
    return _Cm();
}

function _Lk(_y7) {
    var __2 = [];
    if (_y7 < 0 || _y7 > 2) {
        _ja('ERROR: Invalid matrix type (matrix_get)');
        for (var i = 0; i < 16; i++) {
            __2[i] = 0;
        }
        return __2;
    }
    var _Dm = _Em[_y7];
    for (var i = 0; i < 16; i++) {
        __2[i] = _Dm.__2[i];
    }
    return __2;
}

function _Mk(_y7, _yj) {
    var __2 = [];
    if (_y7 < 0 || _y7 > 2) {
        _ja('ERROR: Invalid matrix type (matrix_get)');
        for (var i = 0; i < 16; i++) {
            __2[i] = 0;
        }
        return __2;
    }
    var __2 = new _6l();
    var _Dm = _Em[_y7];
    for (var i = 0; i < 16; i++) {
        __2.__2[i] = _yj[i];
    }
    _7m(_y7, __2);
}

function _Nk(_h2, _i2, _c7, _zj, _Aj, _Bj, _Ie, _Je, _Cj) {
    var __2 = new _6l();
    var _Fm = (Math.PI / 180.0);
    _zj = (_Fm * -_zj);
    _Aj = (_Fm * -_Aj);
    _Bj = (_Fm * -_Bj);
    __2._Gm(_h2, _i2, _c7, _zj, _Aj, _Bj, _Ie, _Je, _Cj);
    var _Dm = [];
    for (var i = 0; i < 16; i++) {
        _Dm[i] = __2.__2[i];
    }
    return _Dm;
}

function _Ok(_Hm, _Im) {
    var _Jm = new _6l();
    var _Km = new _6l();
    var _Lm = new _6l();
    for (var i = 0; i < 16; i++) {
        _Jm.__2[i] = _Hm[i];
        _Km.__2[i] = _Im[i];
    }
    _Lm._im(_Jm, _Km);
    var _Dm = [];
    for (var i = 0; i < 16; i++) {
        _Dm[i] = _Lm.__2[i];
    }
    return _Dm;
}
var _Mm = 1970;
var _Nm = 0;
var _Om = 1;
var _Pm = 365.25;
var _Qm = 30.4375;
var _Rm = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var _Sm = [];
var _Tm = (86400.0);
var _Um = (_Tm * 30);
var _Vm = true;
var _Wm = 0;
var _Xm = 1;

function _Ym(_Zm) {
    if (_Zm < __m) {
        return _Zm * _0n;
    } else {
        return (_Zm - __m) * _0n;
    }
}

function _1n(_2n) {
    return _2n % 400 == 0 || (_2n % 100 != 0 && _2n % 4 == 0);
}

function _3n(_2n) {
    var _4n = _Rm.slice();;
    if (_1n(_2n)) {
        _4n[1] = 29;
    }
    return _4n;
}

function _5n(_2n, _6n, _7n, _8n, _9n, _an, _bn) {
    if (typeof(_2n) == "string") return 0;
    if (typeof(_6n) == "string") return 0;
    if (typeof(_7n) == "string") return 0;
    if (typeof(_8n) == "string") return 0;
    if (typeof(_9n) == "string") return 0;
    if (typeof(_an) == "string") return 0;
    if ((~~_2n) != _2n) return 0;
    if ((~~_6n) != _6n) return 0;
    if ((~~_7n) != _7n) return 0;
    if ((~~_8n) != _8n) return 0;
    if ((~~_9n) != _9n) return 0;
    if ((~~_an) != _an) return 0;
    if ((~~_bn) != _bn) return 0;
    if ((_2n >= 0) && (_6n >= 1) && (_6n <= 12) && (_7n >= 1) && (_7n <= 31) && (_8n >= 0) && (_8n <= 23) && (_9n >= 0) && (_9n <= 59) && (_an >= 0) && (_an <= 59) && (_bn >= 0) && (_bn <= 999)) {
        if (_7n > 28) {
            switch (_6n) {
                case 2:
                    if (!_1n(_2n) || (_7n > 29)) {
                        _cn = false;
                    }
                    break;
                case 4:
                case 6:
                case 9:
                case 11:
                    if (_7n > 30) {
                        return 0;
                    }
                    break;
            }
        }
    } else {
        return 0;
    }
    return 1;
}
var _0n = 86400000.0;
var __m = 25569;

function date_current_datetime() {
    var _Cd = new Date();
    var _f3 = _Cd.getTime();
    return (_f3 / _0n) + __m;
}

function date_current_date() {
    var _Cd = new Date();
    return (~~(_Cd.getTime() / _0n)) + __m;
}

function date_current_time() {
    var _Cd = new Date();
    _Cd.setFullYear(_Mm, _Nm, _Om);
    var _dn = (_Cd.getTime() / _0n) + __m;
    return (_dn - (~~_dn));
}

function date_create_date(_en, _fn, _gn) {
    var _Cd = new Date();
    if (_Vm) _Cd.setFullYear(_en, _fn - 1, _gn - 1);
    else _Cd.setUTCFullYear(_en, _fn - 1, _gn - 1);
    return (_Cd.getTime() / _0n) + __m;
}

function date_create_datetime(_en, _fn, _gn, _hn, _in, _jn) {
    var _Cd = new Date();
    if (_Vm) {
        _Cd.setFullYear(_en, _fn - 1, _gn);
        _Cd.setHours(_hn, _in, _jn, 10);
    } else {
        _Cd.setUTCFullYear(_en, _fn - 1, _gn);
        _Cd.setUTCHours(_hn, _in, _jn, 10);
    }
    return (_Cd.getTime() / _0n) + __m;
}

function date_create_time(_hn, _in, _jn) {
    var _Cd = new Date();
    if (_Vm) {
        _Cd.setFullYear(_Mm, _Nm, _Om);
        _Cd.setHours(_hn, _in, _jn, 0);
    } else {
        _Cd.setUTCFullYear(_Mm, _Nm, _Om);
        _Cd.setUTCHours(_hn, _in, _jn, 0);
    }
    return (_Cd.getTime() / _0n) + __m;
}

function date_get_year(_E2) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_E2));
    return (_Vm) ? _Cd.getFullYear() : _Cd.getUTCFullYear();
}

function date_get_month(_E2) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_E2));
    return (_Vm) ? (_Cd.getMonth()) + 1 : (_Cd.getUTCMonth()) + 1;
}

function date_get_day(_E2) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_E2));
    return (_Vm) ? _Cd.getDate() : _Cd.getUTCDate();
}

function date_get_weekday(_E2) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_E2));
    return (_Vm) ? _Cd.getDay() : _Cd.getUTCDay();
}

function date_get_hour(_E2) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_E2));
    return (_Vm) ? _Cd.getHours() : _Cd.getUTCHours();
}

function date_get_minute(_E2) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_E2));
    return (_Vm) ? _Cd.getMinutes() : _Cd.getUTCMinutes();
}

function date_get_second(_E2) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_E2));
    return (_Vm) ? _Cd.getSeconds() : _Cd.getUTCSeconds();
}

function _kn(_ln) {
    var _7n = 0;
    if (_Vm) {
        var _mn = _3n(_ln.getFullYear());
        for (var i = 0; i < _ln.getMonth(); i++) {
            _7n += _mn[i];
        }
        _7n += _ln.getDate()
    } else {
        var _mn = _3n(_ln.getUTCFullYear());
        for (var i = 0; i < _ln.getUTCMonth(); i++) {
            _7n += _mn[i];
        }
        _7n += _ln.getUTCDate();
    }
    return _7n;
}

function date_get_week(_E2) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_E2));
    var w = _kn(_Cd);
    return floor(w / 7);
}

function date_valid_datetime(_en, _fn, _gn, _hn, _in, _jn) {
    return _5n(_en, _fn, _gn, _hn, _in, _jn, 0);
}

function date_valid_date(_en, _fn, _gn) {
    return _5n(_en - 1900, _fn - 1,
        _gn - 1, 0, 0, 0, 0);
}

function date_valid_time(_hn, _in, _jn) {
    return _5n(_Mm, _Nm, _Om, _hn, _in, _jn, 0);
}

function date_inc_year(_ln, _nn) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_ln));
    _Cd.setUTCFullYear(_Cd.getUTCFullYear() + _vb(_nn), _Cd.getUTCMonth(), _Cd.getUTCDate());
    return (_Cd.getTime() / _0n) + __m;
}

function date_inc_month(_ln, _nn) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_ln));
    _Cd.setUTCFullYear(_Cd.getUTCFullYear(), _Cd.getUTCMonth() + _vb(_nn), _Cd.getUTCDate());
    return (_Cd.getTime() / _0n) + __m;
}

function date_inc_week(_ln, _nn) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_ln));
    _Cd.setUTCFullYear(_Cd.getUTCFullYear(), _Cd.getUTCMonth(), _Cd.getUTCDate() + (_vb(_nn) * 7));
    return (_Cd.getTime() / _0n) + __m;
}

function date_inc_day(_ln, _nn) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_ln));
    _Cd.setUTCFullYear(_Cd.getUTCFullYear(), _Cd.getUTCMonth(), _Cd.getUTCDate() + _vb(_nn));
    return (_Cd.getTime() / _0n) + __m;
}

function date_inc_hour(_ln, _nn) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_ln));
    _Cd.setUTCHours(_Cd.getUTCHours() + _vb(_nn), _Cd.getUTCMinutes(), _Cd.getUTCSeconds(), _Cd.getUTCMilliseconds());
    return (_Cd.getTime() / _0n) + __m;
}

function date_inc_minute(_ln, _nn) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_ln));
    _Cd.setUTCHours(_Cd.getUTCHours(), _Cd.getUTCMinutes() + _vb(_nn), _Cd.getUTCSeconds(), _Cd.getUTCMilliseconds());
    return (_Cd.getTime() / _0n) + __m;
}

function date_inc_second(_E2, _nn) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_E2));
    _Cd.setUTCHours(_Cd.getUTCHours(), _Cd.getUTCMinutes(), _Cd.getUTCSeconds() + _vb(_nn), _Cd.getUTCMilliseconds());
    return (_Cd.getTime() / _0n) + __m;
}

function date_get_day_of_year(_E2) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_E2));
    var _on = _kn(_Cd);
    return _on;
}

function date_get_hour_of_year(_E2) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_E2));
    var _on = _kn(_Cd);
    var _pn = (_on - 1) * 24;
    if (_Vm) _pn += _Cd.getHours();
    else _pn += _Cd.getUTCHours();
    return _pn;
}

function date_get_minute_of_year(_E2) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_E2));
    var _on = _kn(_Cd);
    var _qn = (_on - 1) * 24 * 60;
    if (_Vm) {
        _qn += _Cd.getHours() * 60;
        _qn += _Cd.getMinutes();
    } else {
        _qn += _Cd.getUTCHours() * 60;
        _qn += _Cd.getUTCMinutes();
    }
    return _qn;
}

function date_get_second_of_year(_E2) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_E2));
    var _on = _kn(_Cd);
    var _rn = (_on - 1) * 24 * 60 * 60;
    if (_Vm) {
        _rn += _Cd.getHours() * 60 * 60;
        _rn += _Cd.getMinutes() * 60;
        _rn += _Cd.getSeconds();
    } else {
        _rn += _Cd.getUTCHours() * 60 * 60;
        _rn += _Cd.getUTCMinutes() * 60;
        _rn += _Cd.getUTCSeconds();
    }
    return _rn;
}

function date_year_span(_sn, _tn) {
    var _Cd = new Date();
    var _un = _Cd.setTime(_Ym(_sn));
    var _vn = _Cd.setTime(_Ym(_tn));
    var _wn = (_vn - _un);
    return Math.abs((_wn / 1000) / 60 / 60 / 24 / _Pm);
}

function date_month_span(_sn, _tn) {
    var _Cd = new Date();
    var _un = _Cd.setTime(_Ym(_sn));
    var _vn = _Cd.setTime(_Ym(_tn));
    var _wn = (_vn - _un);
    return Math.abs((_wn / 1000) / 60 / 60 / 24 / _Qm);
}

function date_week_span(_sn, _tn) {
    var _Cd = new Date();
    var _un = _Cd.setTime(_Ym(_sn));
    var _vn = _Cd.setTime(_Ym(_tn));
    var _wn = (_vn - _un);
    return Math.abs((_wn / 1000) / 60 / 60 / 24 / 7);
}

function date_day_span(_sn, _tn) {
    var _Cd = new Date();
    var _un = _Cd.setTime(_Ym(_sn));
    var _vn = _Cd.setTime(_Ym(_tn));
    var _wn = (_vn - _un);
    return Math.abs((_wn / 1000) / 60 / 60 / 24);
}

function date_hour_span(_sn, _tn) {
    var _Cd = new Date();
    var _un = _Cd.setTime(_Ym(_sn));
    var _vn = _Cd.setTime(_Ym(_tn));
    var _wn = (_vn - _un);
    return Math.abs((_wn / 1000) / 60 / 60);
}

function date_minute_span(_sn, _tn) {
    var _Cd = new Date();
    var _un = _Cd.setTime(_Ym(_sn));
    var _vn = _Cd.setTime(_Ym(_tn));
    var _wn = (_vn - _un);
    return Math.abs((_wn / 1000) / 60);
}

function date_second_span(_sn, _tn) {
    var _Cd = new Date();
    var _un = _Cd.setTime(_Ym(_sn));
    var _vn = _Cd.setTime(_Ym(_tn));
    var _wn = (_vn - _un);
    return Math.abs(_wn / 1000);
}

function _xn(_ln) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_ln));
    return (_Cd.getHours() - _Cd.getUTCHours()) * 60 * 60 * 1000;
}

function date_compare_datetime(_sn, _tn) {
    if (_sn < _tn) {
        return -1;
    } else if (_tn > _sn) {
        return 1;
    }
    return 0;
}

function date_compare_date(_sn, _tn) {
    if (_sn < _tn) {
        return -1;
    } else if (_tn > _sn) {
        return 1;
    }
    return 0;
}

function date_compare_time(_sn, _tn) {
    var _yn = _sn - _tn;
    if (_yn < 0) {
        return -1;
    } else if (_yn > 0) {
        return 1;
    }
    return 0;
}

function date_date_of(_ln) {
    var _Cd = new Date();
    _Cd.setTime(_ln);
    if (_Vm) _Cd.setHours(0, 0, 0, 0);
    else _Cd.setUTCHours(0, 0, 0, 0);
    return _Cd.getTime();
}

function date_time_of(_ln) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_ln));
    if (_Vm) _Cd.setFullYear(_Mm, _Nm, _Mm);
    else _Cd.setUTCFullYear(_Mm,
        _Nm, _Mm);
    return _Cd.getTime();
}

function _zn(_8g) {
    return ((_8g < 10) ? "0" : "") + _8g.toString();
}

function date_datetime_string(_ln) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_ln));
    var _xc;
    if (_Vm) {
        _xc = _zn(_Cd.getDate()) + "/" + _zn(_Cd.getMonth() + 1) + "/" + _Cd.getFullYear() + " " + _zn(_Cd.getHours()) + ":" + _zn(_Cd.getMinutes()) + ":" + _zn(_Cd.getSeconds());
    } else {
        _xc = _zn(_Cd.getUTCDate()) + "/" + _zn(_Cd.getUTCMonth() + 1) + "/" + _Cd.getUTCFullYear() + " " + _zn(_Cd.getUTCHours()) + ":" + _zn(_Cd.getUTCMinutes()) + ":" + _zn(_Cd.getUTCSeconds());
    }
    return _xc;
}

function date_date_string(_ln) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_ln));
    var _xc;
    if (_Vm) {
        _xc = _zn(_Cd.getDate()) + "/" + _zn(_Cd.getMonth() + 1) + "/" + _Cd.getFullYear();
    } else {
        _xc = _zn(_Cd.getUTCDate()) + "/" + _zn(_Cd.getUTCMonth() + 1) + "/" + _Cd.getUTCFullYear();
    }
    return _xc;
}

function date_time_string(_ln) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_ln));
    var _xc;
    if (_Vm) {
        _xc = _zn(_Cd.getHours()) + ":" + _zn(_Cd.getMinutes()) + ":" + _zn(_Cd.getSeconds());
    } else {
        _xc = _zn(_Cd.getUTCHours()) + ":" + _zn(_Cd.getUTCMinutes()) + ":" + _zn(_Cd.getUTCSeconds());
    }
    return _xc;
}

function date_days_in_month(_ln) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_ln));
    if (_Vm) {
        var _mn = _3n(_Cd.getFullYear());
        return _mn[_Cd.getMonth()];
    }
    var _mn = _3n(_Cd.getUTCFullYear());
    return _mn[_Cd.getUTCMonth()];
}

function date_days_in_year(_ln) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_ln));
    var _on = 0;
    var _mn;
    if (_Vm) _mn = _3n(_Cd.getFullYear());
    else _mn = _3n(_Cd.getUTCFullYear());
    for (var i = 0; i < _mn.length; i++) {
        _on += _mn[i];
    }
    return _on;
}

function date_leap_year(_ln) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_ln));
    if (_Vm) return _1n(_Cd.getFullYear());
    return _1n(_Cd.getUTCFullYear());
}

function date_is_today(_ln) {
    var _Cd = new Date();
    _Cd.setTime(_Ym(_ln));
    var _An = new Date();
    if (_Vm) {
        if ((_Cd.getFullYear() == _An.getFullYear()) && (_Cd.getMonth() == _An.getMonth()) && (_Cd.getDate() == _An.getDate())) {
            return true;
        }
    } else {
        if ((_Cd.getUTCFullYear() == _An.getUTCFullYear()) && (_Cd.getUTCMonth() == _An.getUTCMonth()) && (_Cd.getUTCDate() == _An.getUTCDate())) {
            return true;
        }
    }
    return false;
}

function date_set_timezone(_Bn) {
    _Vm = (_Bn == _Wm);
}

function date_get_timezone() {
    if (_Vm) return _Wm;
    return _Xm;
}
var _Cn = [];
var _Dn = [];
var _En = [];
var _Fn = Date.now();
var _Gn = 0;
var _Hn = 1;
var _In = 2;
var _Jn = 3;
var _Kn = function(text) {
    if (!text) return;
    if (_Ln) {
        if (!_Mn) return;
        var _C7 = _Mn.document.getElementById('debug_console');
        if (!_C7) return;
        var _Nn = String.fromCharCode(0x0a);
        text = text.replace('<b>', '').replace('</b>', '');
        var _yn = Date.now() - _Fn;
        if (!_C7) {
            alert(text);
        } else {
            _C7.value += text + _Nn;
            var _On = _C7.textLength;
        }
        _Fn = Date.now();
    }
    if (_Pn != undefined) {
        if (_Pn.Options.outputDebugToConsole) window.famobi.log(text);
    }
};

function debug() {
    var index;
    for (index = 0; index < arguments.length; ++index) {
        _Kn(arguments[index]);
    }
}

function _ja() {
    var index;
    for (index = 0; index < arguments.length; ++index) {
        _Kn(arguments[index]);
    }
}

function _Qn(_He) {
    if (!_En[_He]) {
        _En[_He] = true;
        _Rn(_He);
    }
}

function _56(_He) {
    if (!_Cn[_He]) {
        _Cn[_He] = true;
        var _Sn = "Error: function " + _He + " is not supported.";
        debug(_Sn);
    }
}

function _Tn(_He) {
    if (!_Cn[_He]) {
        _Cn[_He] = true;
        var _Sn = "Error: " + _He + " is not supported.";
        debug(_Sn);
    }
}

function _Un(_He) {
    if (!_Cn[_He]) {
        _Cn[_He] = true;
        var _Sn = "Error: function " + _He + " is not yet implemented";
        debug(_Sn);
    }
}

function _Vn(_He) {
    if (!_Dn[_He]) {
        _Dn[_He] = true;
        var _Sn = "Warning: function " + _He;
        debug(_Sn);
    }
}

function _Wn(_Xn) {
    var _Yn = _Zn.__n(_Xn, -1);
    var _Nn = String.fromCharCode(0x0a);
    var _Cb = "";
    for (var i = 0; i < _Yn.length; i++) {
        if (i != 0) _Cb = _Cb + _Nn;
        _Cb += _Yn[i];
    }
    return _Cb;
}

function _0o(_1o) {
    if (!_1o) return;
    alert(_1o);
}

function _2o(_1o, _3o) {
    if (!_1o) return;
    alert(_Wn(_1o));
}

function show_debug_message(_Xn) {
    var _ia = _Xn;
    if (typeof _Xn == "number") {
        _ia = String(_Xn);
    }
    if (!_ia) return;
    debug(_Wn(_ia));
}

function show_debug_overlay(_4o) {}

function show_message_async(_Xn) {
    _5o(_6o, _Jn, [_Xn]);
    return _6o++;
}

function show_message(_Xn) {
    var _ia = _Xn;
    if (typeof _Xn == "number") {
        _ia = String(_Xn);
    }
    if (!_ia) return;
    alert(_Wn(_ia));
}

function show_error(_Ge, _7o) {
    if (!_Ge) return;
    alert(_Wn(_Ge));
}

function show_message_ext(_Xn, _8o, _9o, _ao) {
    _56("show_message_ext()");
    return 2;
}

function show_question_async(_Ge) {
    _5o(_6o, _In, [_Ge]);
    return _6o++;
}

function show_question(_Ge) {
    if (!_Ge) {
        _Ge = "";
    }
    if (window.confirm) {
        return confirm(_Wn(_Ge)) ? 1.0 : 0.0;
    }
    _56("show_question()");
    return 0;
}

function get_integer_async(_Ge, _bo) {
    _5o(_6o, _Hn, [_Ge, _bo]);
    return _6o++;
}

function get_integer(_Ge, _bo) {
    return parseFloat(prompt(_Ge, string(_bo)));
}

function message_background(_ch) {}

function message_alpha(__6) {}

function _co(_do) {
    var _31 = document.getElementById(_eo);
    var _fo = _31.parentNode;
    var _go = document.createElement("div");
    _ho = "gm4html5_login_ID";
    _go.setAttribute("class", "gm4html5_login");
    _go.setAttribute("id", _ho);
    _fo.insertBefore(_go, _31.nextSibling);
    _go.innerHTML = "<div class=\"gm4html5_login_header\">Login</div>" + "<table>" + "<tr>" + "<td><label for=\"username\" id=\"gm4html5_login_label_username_id\">Username:</label></td>" + "<td><input type=\"text\" id=\"gm4html5_login_username_id\" value=\"username\" /></td>" + "</tr>" + "<tr>" + "<td><label for=\"password\" id=\"gm4html5_login_label_password_id\">Password:</label></td>" + "<td><input type=\"password\" id=\"gm4html5_login_password_id\" value=\"password\" /></td>" + "</tr>" + "</table>" + "<div class=\"gm4html5_login_button\"><input type=\"button\" value=\"Login\" id=\"gm4html5_login_button_id\"/></div>" + "<div class=\"gm4html5_cancel_button\"><input type=\"button\" value=\"Cancel\" id=\"gm4html5_cancel_button_id\" /></div>";
    _io();
    _jo = true;
    var login = document.getElementById("gm4html5_login_button_id");
    var _ko = document.getElementById("gm4html5_login_username_id");
    var _lo = document.getElementById("gm4html5_login_password_id");
    _ko.value = _do._mo[0];
    _lo.value = _do._mo[1];
    login.onmouseup = function() {
        var _no = _ko.value;
        var _oo = _lo.value;
        var _po = _qo(_ho);
        if (!_po) return;
        _po._no = _no;
        _po._oo = _oo;
        _po.value = 0;
        _po._9e = "";
        _po._ro = true;
        _po._so = _to;
        _fo.removeChild(_go);
        _jo = false;
        _uo();
        _vo(_do.id);
    };
    var _wo = document.getElementById("gm4html5_cancel_button_id");
    _wo.onmouseup = function() {
        _fo.removeChild(_go);
        _jo = false;
        var _po = _qo(_ho);
        if (!_po) return;
        _po._no = "";
        _po._oo = "";
        _po.value = 0;
        _po._9e = "";
        _po._ro = true;
        _po._so = _xo;
        _uo();
        _vo(_do.id);
    };
    _yo();
    _Bh._1b(_do.id, null, _zo, _ho);
}

function _Ao(_do) {
    var _31 = document.getElementById(_eo);
    var _fo = _31.parentNode;
    var _go = document.createElement("div");
    _ho = "gm4html5_input_ID";
    _go.setAttribute("class", "gm4html5_login");
    _go.setAttribute("id", _ho);
    _fo.insertBefore(_go, _31.nextSibling);
    _go.innerHTML = "<table>" + "<tr>" + "<td><label for=\"username\" id=\"gm4html5_input_message_id\">Message</label></td>" + "</tr>" + "<tr>" + "<td><input type=\"text\" id=\"gm4html5_input_text_id\" value=\"text\" /></td>" + "</tr>" + "</table>" + "<div class=\"gm4html5_login_button\"><input type=\"button\" value=\"OK\" id=\"gm4html5_input_ok_button_id\"/></div>" + "<div class=\"gm4html5_cancel_button\"><input type=\"button\" value=\"Cancel\" id=\"gm4html5_input_cancel_button_id\" /></div>";
    _io();
    _jo = true;
    var _Bo = document.getElementById("gm4html5_input_message_id");
    var _Co = document.getElementById("gm4html5_input_text_id");
    _Bo.innerHTML = _do._mo[0];
    _Co.value = _do._mo[1];
    var _Do = document.getElementById("gm4html5_input_ok_button_id");
    _Do.onmouseup = function() {
        var text = _Co.value;
        var _po = _qo(_ho);
        if (!_po) return;
        _po._no = "";
        _po._oo = "";
        _po.value = parseFloat(text);
        _po._9e = text;
        _po._ro = true;
        _po._so = _to;
        _fo.removeChild(_go);
        _jo = false;
        _uo();
        _vo(_do.id);
    };
    var _wo = document.getElementById("gm4html5_input_cancel_button_id");
    _wo.onmouseup = function() {
        _fo.removeChild(_go);
        _jo = false;
        var _po = _qo(_ho);
        if (!_po) return;
        _po._no = "";
        _po._oo = "";
        _po.value = 0;
        _po._9e = "";
        _po._ro = true;
        _po._so = _xo;
        _uo();
        _vo(_do.id);
    };
    _yo();
    _Bh._1b(_do.id, null, _zo, _ho);
}

function _Eo(_do) {
    var _31 = document.getElementById(_eo);
    var _fo = _31.parentNode;
    var _go = document.createElement("div");
    _ho = "gm4html5_question_ID";
    _go.setAttribute("class", "gm4html5_login");
    _go.setAttribute("id", _ho);
    _fo.insertBefore(_go, _31.nextSibling);
    _go.innerHTML = "<table>" + "<tr>" + "<td><label for=\"username\" id=\"gm4html5_question_message_id\">Message</label></td>" + "</tr>" + "</table>" + "<div class=\"gm4html5_login_button\"><input type=\"button\" value=\"Yes\" id=\"gm4html5_question_yes_button_id\"/></div>" + "<div class=\"gm4html5_cancel_button\"><input type=\"button\" value=\"No\" id=\"gm4html5_question_no_button_id\" /></div>";
    _io();
    _jo = true;
    var _Fo = document.getElementById("gm4html5_question_message_id");
    _Fo.innerHTML = _do._mo[0];
    var _Do = document.getElementById("gm4html5_question_yes_button_id");
    _Do.onmouseup = function() {
        var _po = _qo(_ho);
        if (!_po) return;
        _po._no = "";
        _po._oo = "";
        _po.value = 1;
        _po._9e = "1";
        _po._ro = true;
        _po._so = _to;
        _fo.removeChild(_go);
        _jo = false;
        _uo();
        _vo(_do.id);
    };
    var _wo = document.getElementById("gm4html5_question_no_button_id");
    _wo.onmouseup = function() {
        _fo.removeChild(_go);
        _jo = false;
        var _po = _qo(_ho);
        if (!_po) return;
        _po._no = "";
        _po._oo = "";
        _po.value = 0;
        _po._9e = "0";
        _po._ro = true;
        _po._so = _xo;
        _uo();
        _vo(_do.id);
    };
    _yo();
    _Bh._1b(_do.id, null, _zo, _ho);
}

function _Go(_do) {
    var _31 = document.getElementById(_eo);
    var _fo = _31.parentNode;
    var _go = document.createElement("div");
    _ho = "gm4html5_message_ID";
    _go.setAttribute("class", "gm4html5_login");
    _go.setAttribute("id", _ho);
    _fo.insertBefore(_go, _31.nextSibling);
    _go.innerHTML = "<table>" + "<tr>" + "<td><label for=\"username\" id=\"gm4html5_message_message_id\">Message</label></td>" + "</tr>" + "</table>" + "<div class=\"gm4html5_login_button\"><input type=\"button\" value=\"OK\" id=\"gm4html5_message_ok_button_id\"/></div>";
    _io();
    _jo = true;
    var _Fo = document.getElementById("gm4html5_message_message_id");
    _Fo.innerHTML = _do._mo[0];
    var _Do = document.getElementById("gm4html5_message_ok_button_id");
    _Do.onmouseup = function() {
        var _po = _qo(_ho);
        if (!_po) return;
        _po._no = "";
        _po._oo = "";
        _po.value = 1;
        _po._9e = "1";
        _po._ro = true;
        _po._so = 1;
        _fo.removeChild(_go);
        _jo = false;
        _uo();
        _vo(_do.id);
    };
    _yo();
    _Bh._1b(_do.id, null, _zo, _ho);
}

function _Ho(_ha, _y7, _Io) {
    this.id = _ha;
    this.type = _y7;
    this._mo = _Io;
}

function _Jo() {
    if (_Ko.length > 0) {
        switch (_Ko[0].type) {
            case _Gn:
                _co(_Ko[0]);
                break;
            case _Hn:
                _Ao(_Ko[0]);
                break;
            case _In:
                _Eo(_Ko[0]);
                break;
            case _Jn:
                _Go(_Ko[0]);
                break;
        }
    }
}

function _Lo(_Io) {
    for (var i = 0; i < _Io.length; ++i) {
        var _xc = _Io[i];
        if (typeof(_xc) == 'string') {
            var _Mo = "";
            for (var _X2 = 0; _X2 < _xc.length; _X2++) {
                var chr = _xc[_X2];
                switch (chr) {
                    case '&':
                        _Mo = _Mo + '&amp;';
                        break;
                    case '<':
                        _Mo = _Mo + '&lt;';
                        break;
                    case '>':
                        _Mo = _Mo + '&gt;';
                        break;
                    default:
                        _Mo = _Mo + chr;
                        break;
                }
            }
            _xc = _Mo;
            var _No = String.fromCharCode(13) + String.fromCharCode(10);
            _xc = _xc.split('#').join('<br>');
            _xc = _xc.split(_No).join('<br>');
            _Io[i] = _xc;
        }
    }
}

function _5o(_ha, _y7, _Io) {
    _Lo(_Io);
    var _Cd = new _Ho(_ha, _y7, _Io);
    _Ko.push(_Cd);
    if (_Ko.length == 1) {
        _Jo();
    }
}

function _vo(_ha) {
    var index = -1;
    for (var i = 0; i < _Ko.length; ++i) {
        if (_Ko[i].id == _ha) {
            index = i;
            break;
        }
    }
    if (index >= 0) {
        _Ko.splice(index, 1);
    }
    _Jo();
}

function get_login_async(_Oo, _Po) {
    _5o(_6o, _Gn, [_Oo, _Po]);
    return _6o++;
}

function get_string_async(_Ge, _bo) {
    _5o(_6o, _Hn, [_Ge, _bo]);
    return _6o++;
}

function get_string(_Ge, _bo) {
    return prompt(_Wn(_Ge), string(_bo));
}

function _yo() {
    if (_jo) {
        var login = document.getElementById(_ho);
        var w = login.offsetWidth;
        var h = login.offsetHeight;
        var _l3 = (canvas.width - w) / 2;
        var _n3 = (canvas.height - h) / 2;
        _9a = new _Qo();
        _8a(canvas, _9a);
        login.style.left = ~~(_l3 + _9a.left) + "px";
        login.style.top = ~~(_n3 + _9a.top) + "px";
    }
}

function _Ro(_So) {
    return _So.substr(0, _So.indexOf("("));
}

function _Rn(_To) {
    var _dn = arguments.callee.caller;
    var _xc = "Error: " + _To + chr(13) + "--------------------------------------------------------------------" + chr(13);
    while (_dn) {
        var name = chr(9) + _Ro(_dn.toString());
        _xc += name + '(';
        for (var i = 0; i < _dn.arguments.length; i++) {
            if (i != 0) {
                _xc += ', ';
            }
            if (typeof _dn.arguments[i] == "string") {
                _xc += '"' + _dn.arguments[i].toString() + '"';
            } else if (typeof _dn.arguments[i] == "number") {
                _xc += _dn.arguments[i].toString();
            } else {
                if (_dn.arguments[i] == undefined) {
                    _xc += "[undefined]";
                } else if (_dn.arguments[i] == null) {
                    _xc += "[null]";
                } else if (_dn.arguments[i].__type) {
                    _xc += _dn.arguments[i].__type;
                } else {
                    _xc += "[unknown]";
                }
            }
        }
        _xc += ')' + chr(13);
        _dn = _dn.caller;
    }
    debug(_xc);
}

function _Uo() {
    if (!_Mn) return;
    var _Vo = _Mn.document.getElementById('debug_instances');
    if (!_Vo) return;
    var _Wo = [];
    var options = _Vo.options;
    for (var index in options) {
        if (!options.hasOwnProperty(index)) continue;
        if (index != "selectedIndex" && index != "length") {
            var _Xo = options[index];
            if (_Xo && _Xo.text) {
                _Wo[_Wo.length] = _Xo.text;
            }
        }
    }
    var _Yo = [];
    for (var index in _ge._Zo) {
        if (!_ge._Zo.hasOwnProperty(index)) continue;
        var _Qd = _ge._Zo[index];
        if (_Qd !== undefined && _Qd !== null) {
            var _Cb = _Qd.id.toString();
            var i;
            for (i = 0; i < _Wo.length; i++) {
                if (_Wo[i] == _Cb) break;
            }
            if (i >= _Wo.length) {
                _Yo[_Yo.length] = _Cb;
            } else {
                _Wo.splice(i, 1);
            }
        }
    }
    for (var index in _Wo) {
        if (!_Wo.hasOwnProperty(index)) continue;
        for (var _Xo in options) {
            if (!options.hasOwnProperty(_Xo)) continue;
            if (options[_Xo].text = index) {
                _Vo.removeChild(options[_Xo]);
                break;
            }
        }
    }
    for (var index = 0; index < _Yo.length; index++) {
        var _Qd = _Yo[index];
        var option = document.createElement("option");
        option.text = "" + _Qd;
        _Vo.add(option, null);
    }
}
var __o = 3;
var _0p = -1;

function _1p() {
    if (!_Mn) return;
    var _Vo = _Mn.document.getElementById('debug_instances');
    var _2p = _Mn.document.getElementById('debug_Instance_Data');
    if (!_Vo || !_2p) return;
    var _3p = _Vo.selectedIndex;
    if (_3p < 0) {
        return;
    }
    if (_3p == undefined) return;
    _3p = parseInt(_Vo.options[_3p].text);
    var _4p = _ge._Zo[_3p];
    if (!_4p) return;
    var _Cb = [];
    _Cb[_Cb.length] = '<table ALIGN="left" VALIGN="top" style="border-spacing:0px; border-collapse:collapse; border:0px; margin:0px;">';
    _Cb[_Cb.length] = '<tr bgcolor="#f0f0f0" "><td style="width:130px;"><b>Object</b></td><td style="width:270px;"><b>' + _4p._5p._6p + '</b></td></tr>';
    _Cb[_Cb.length] = '<tr><td>x</td><td>' + _4p.x.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>y</td><td>' + _4p.y.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>depth</td><td>' + _4p.depth.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>visible</td><td>' + _4p.visible + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>persistent</td><td>' + _4p.persistent + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>vspeed</td><td>' + _4p.vspeed.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>direction</td><td>' + _4p.direction.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>speed</td><td>' + _4p.speed.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>friction</td><td>' + _4p.friction.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>gravity</td><td>' + _4p.gravity.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>gravity_direction</td><td>' + _4p.gravity_direction.toFixed(__o) + '</td></tr>';
    var _7p = _le._O3(_4p.sprite_index);
    if (!_7p) {
        _Cb[_Cb.length] = '<tr><td>sprite_index</td><td><none></td></tr>';
    } else {
        var _8p = _4p.image_index;
        if (_8p < 0 || _8p > _7p._M1.length) _8p = 0;
        var _L1 = _7p._M1[~~_8p];
        _Cb[_Cb.length] = '<tr><td>sprite_index</td><td height="' + (_L1.oh + 32) + 'px">' + _7p.pName + '<br>' + '<div style="padding:0px; margin:0px; border:0px; overflow: hidden; ' + 'width:' + _L1.CropWidth + 'px; height:' + _L1.CropHeight + 'px; ' + 'background: url(' + _L1._T1.src + ') ' + -_L1.x + 'px ' + -_L1.y + 'px;" />' + '</td></tr>';
    }
    _Cb[_Cb.length] = '<tr><td>image_index</td><td>' + _4p.image_index.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>image_speed </td><td>' + _4p.image_speed.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>image_blend</td><td>' + ~~_4p.image_blend + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>image_alpha</td><td>' + _4p.image_alpha.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>image_xscale</td><td>' + _4p.image_xscale.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>image_yscale</td><td>' + _4p.image_yscale.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>mask_index</td><td>' + _4p.mask_index.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>path_index</td><td>' + _4p.path_index.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>path_position</td><td>' + _4p.path_position.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>path_speed</td><td>' + _4p.path_speed.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>path_scale</td><td>' + _4p.path_scale.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>path_orientation</td><td>' + _4p.path_orientation.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>path_endaction</td><td>' + _4p.path_endaction.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>path_end</td><td>' + _4p.path_end.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>path_xstart</td><td>' + _4p._9p.toFixed(__o) + '</td></tr>';
    _Cb[_Cb.length] = '<tr><td>path_ystart</td><td>' + _4p._ap.toFixed(__o) + '</td></tr>';
    for (var _bp = 0; _bp < 12; _bp++) {
        _Cb[_Cb.length] = '<tr><td>alarm[' + _bp + ']</td><td>' + ~~_4p.alarm[_bp] + '</td></tr>';
    }
    _Cb[_Cb.length] = '</table>';
    _2p.innerHTML = _Cb.join("");
}

function UpdateDebugWindow() {
    _Uo();
    _1p();
}
var _cp = "IDLE";
var _dp = "PROCESSING";
var _ep = "AUTHORISED";
var _fp = "FAILED";
var _gp = [];
var _hp;
var _ip = 0;
var g_fbOAuthToken = "";

function facebook_accesstoken() {
    return g_fbOAuthToken;
}

function _jp() {
    FB.api('/me/permissions', function(response) {
        debug("fbQueryPermissions response:");
        try {
            var text = JSON.stringify(response);
            debug(text);
        } catch (e) {}
        _gp = [];
        var data = response["data"];
        if (data != undefined) {
            var length = data.length;
            for (i = 0; i < length; i++) {
                var _jc = data[i];
                var _kp = _jc["permission"];
                var status = _jc["status"];
                if (_kp != undefined && status == "granted") {
                    _gp.push(_kp);
                }
            }
        }
        debug("current permissions: " + _gp);
    });
}

function _lp(response) {
    try {
        var text = JSON.stringify(response);
        debug("facebook login response:");
        debug(text);
    } catch (e) {}
    if (response.status === 'connected') {
        _mp = response.authResponse.userID;
        g_fbOAuthToken = response.authResponse.accessToken;
        _np = _ep;
        _jp();
    } else if (response.status === 'not_authorized') {
        _np = 'DENIED';
    } else {
        _np = _fp;
    }
}
var _op = {
    appId: 0,
    status: true,
    cookie: true,
    xfbml: true,
    version: 'v2.0'
};

function _pp() {
    _op.appId = g_fbAppId;
    FB.init(_op);
    FB.getLoginStatus(_lp);
    FB.Canvas.setAutoGrow(100);
    if (_Pn.Options && _Pn.Options.debugMode && _Pn.Options.CreateDebugConsole_ref) {
        _Pn.Options.CreateDebugConsole_ref();
    }
}

function _qp(_Cd) {
    var _rp, id = 'facebook-jssdk',
        _sp = _Cd.getElementsByTagName('script')[0];
    if (_Cd.getElementById(id)) {
        return;
    }
    _rp = _Cd.createElement('script');
    _rp.id = id;
    _rp._tp = true;
    _rp.src = "//connect.facebook.net/en_US/sdk.js";
    _sp.parentNode.insertBefore(_rp, _sp);
}

function _up(_vp) {
    if (typeof(_Pn.Options.GenerateSpotifyApp) != "undefined") {} else {
        var _31 = document.getElementById(_eo);
        var _fo = _31.parentNode;
        var _go = document.createElement("div");
        _go.setAttribute("id", "fb-root");
        _fo.insertBefore(_go, _31.nextSibling);
        g_fbAppId = _vp;
        window.fbAsyncInit = _pp;
        _qp(document);
    }
}

function _wp(_xp) {
    var _yp = 'https://graph.facebook.com/me';
    var _zp = _yp + '?access_token=' + g_fbOAuthToken;
    var _Ap = new XMLHttpRequest();
    _Ap.open('GET', _zp);
    _Ap.ontimeout = function(_Bp) {
        _np = 'FAILED';
    };
    _Ap.onerror = function(_Bp) {
        _np = 'FAILED';
    };
    _Ap.onreadystatechange = function() {
        if (_Ap.readyState != 4) return;
        var data = JSON.parse(_Ap.responseText);
        _Cp(data);
        var pFunc = eval(_xp);
        if (pFunc) {
            pFunc(data);
        }
    };
    _Ap.send(null);
}

function _Cp(data) {
    _mp = data.id;
    _np = 'AUTHORISED';
}

function facebook_user_id() {
    if (typeof(_mp) == "undefined") return "0";
    return _mp;
}

function _Dp(_xp) {
    if (typeof(getSpotifyApi) != "undefined") {
        var _Ep = getSpotifyApi(1);
        var _Fp = _Ep.require('sp://import/scripts/api/auth');
        var _Gp = ['user_about_me', 'publish_stream'];
        var _Hp = _Pn.Options.Facebook;
        _np = 'PROCESSING';
        _Fp.authenticateWithFacebook(_Hp, _Gp, {
            onSuccess: function(accessToken,
                _Ip) {
                g_fbOAuthToken = accessToken;
                _wp(_xp);
            },
            onFailure: function(error) {
                window.famobi.log('Authentication failed with error: ' + error);
                _np = 'FAILED';
            },
            onComplete: function() {}
        });
    }
}

function facebook_send_invite(_Jp, _ia, _Kp, _Lp, _Mp) {
    var _Sh = {
        method: 'apprequests',
        filters: ['app_non_users']
    };
    _Sh.title = _Jp;
    _Sh.message = _ia;
    _Sh.picture = _Kp;
    if (_Lp.toString().length > 0) {
        _Sh.redirect_uri = _Lp;
    }
    if (_Mp != -1) {
        ds_map_clear(_Mp);
    }
    FB.ui(_Sh, function(response) {
        _Np(response, _Mp);
    });
}

function facebook_launch_offerwall(_zp) {
    var _Sh = {
        method: 'pay',
        action: 'earn_currency'
    };
    _Sh.product = _zp;
    FB.ui(_Sh, _Op);
}

function _Op(data) {
    if (data['order_id']) {
        debug("callback with order id" + data['order_id']);
    }
    if (data['error_code']) {
        debug("callback with error code " + data['error_code']);
    } else {}
}

function _Pp(data) {
    debug("facebook_post_message result:");
    try {
        var text = JSON.stringify(data);
        debug(text);
    } catch (e) {}
}

function facebook_post_message(title, caption, message, _Kp, _Lp, _Qp, _Rp) {
    var _Sh = {};
    _Sh.name = title;
    _Sh.link = _Lp;
    _Sh.caption = caption;
    _Sh.message = message;
    _Sh.picture = _Kp;
    var action = {};
    if (_Qp.toString().length > 0 && _Rp.toString().length > 0) {
        action.name = _Qp;
        action.link = _Rp;
        var _Sp = [];
        _Sp[0] = action;
        _Sh.actions = _Sp;
    }
    FB.api('/me/feed', 'post', _Sh, _Pp);
}

function facebook_login(_Tp) {
    if (typeof(_Pn.Options.GenerateSpotifyApp) == "undefined") {
        if (typeof(FB) == 'undefined') {
            window.famobi.log("Facebook initialisation has not completed");
            return;
        }
    }
    _np = _dp;
    if (typeof(_Pn.Options.GenerateSpotifyApp) != "undefined") {
        _Dp(_Tp);
    } else {
        var _On = 0;
        var _Up = '';
        if (_Tp >= 0) {
            _On = ds_list_size(_Tp);
            for (var i = 0; i < _On; i++) {
                var _xc = ds_list_find_value(_Tp, i);
                _Up += _xc;
                if (i < _On - 1) {
                    _Up += ',';
                }
            }
            FB.login(_lp, {
                scope: _Up
            });
        } else {
            FB.login(_lp);
        }
    }
}

function facebook_check_permission(_Vp) {
    var i;
    for (i = 0; i < _gp.length; ++i) {
        if (_gp[i] == _Vp) {
            return true;
        }
    }
    return false;
}

function facebook_request_read_permissions(_Wp) {
    return _Xp(_Wp);
}

function facebook_request_publish_permissions(_Wp) {
    return _Xp(_Wp);
}

function _Xp(_Wp) {
    ++_ip;
    var _Yp = _ip;
    var _Up = '';
    if (_Wp >= 0) {
        _On = ds_list_size(_Wp);
        for (var i = 0; i < _On; i++) {
            var _xc = ds_list_find_value(_Wp, i);
            _Up += _xc;
            if (i < _On - 1) {
                _Up += ',';
            }
        }
    }
    var _Zp = _Up.split(',');
    FB.login(function(response) {
        debug("facebook permissions request response:");
        try {
            var text = JSON.stringify(response);
            debug(text);
        } catch (e) {}
        var map = ds_map_create();
        g_pBuiltIn.async_load = map;
        ds_map_add(map, "type", "facebook_permission_request");
        ds_map_add(map, "requestId", _Yp);
        if (response.authResponse) {
            var __p = response.authResponse["grantedScopes"];
            if (__p != undefined) {
                var _0q = __p.split(',');
                var i;
                var _1q = true;
                _gp = _0q;
                debug("updated permissions: " + _gp);
                for (i = 0; i < _Zp.length;
                    ++i) {
                    if (_0q.indexOf(_Zp[i]) == -1) {
                        _1q = false;
                    }
                }
                if (_1q) {
                    ds_map_add(map, "result", "granted");
                } else {
                    ds_map_add(map, "result", "denied");
                }
            } else {
                ds_map_add(map, "result", "denied");
            }
        } else {
            ds_map_add(map, "result", "error");
            try {
                var text = JSON.stringify(response);
                ds_map_add(map, "error", text);
            } catch (e) {}
        }
        _2q._3q(_4q, 0);
        ds_map_destroy(map);
        g_pBuiltIn.async_load = -1;
    }, {
        scope: _Up,
        return_scopes: true
    });
    return _Yp;
}

function facebook_graph_request(_5q, _6q, _7q, _Mp) {
    var _Sh = {};
    if (_7q != -1) {
        var _8q = ds_map_find_first(_7q);
        while (ds_map_exists(_7q,
                _8q)) {
            var _9q = ds_map_find_value(_7q, _8q);
            _Sh[_8q] = _9q;
            _8q = ds_map_find_next(_7q, _8q);
        }
    }
    _aq = _Mp;
    if (_Mp != -1) {
        ds_map_clear(_Mp);
    }
    FB.api(_5q, _6q, _Sh, _bq);
}

function _bq(data) {
    if (_aq != -1) {
        _cq(data, _aq);
        try {
            var text = JSON.stringify(data);
            ds_map_add(_aq, "response_text", text);
        } catch (e) {}
    }
    debug("response received from facebook_graph_request");
}

function facebook_dialog(_5q, _7q, _Mp) {
    var _Sh = {};
    _Sh.method = _5q;
    if (_7q != -1) {
        var _8q = ds_map_find_first(_7q);
        while (ds_map_exists(_7q, _8q)) {
            var _9q = ds_map_find_value(_7q, _8q);
            _Sh[_8q] = _9q;
            _8q = ds_map_find_next(_7q, _8q);
        }
    }
    if (_Mp != -1) {
        ds_map_clear(_Mp);
    }
    FB.ui(_Sh, function(response) {
        _Np(response, _Mp);
    });
    return 1;
}

function _Np(data, _dq) {
    if (_dq != -1) {
        _cq(data, _dq);
    }
    debug("response received from facebook_dialog:");
    try {
        var text = JSON.stringify(data);
        debug(text);
    } catch (e) {}
}

function _eq() {
    this._fq = "";
    this._gq = 0;
    this._hq = false;
    this._iq = false;
    this._jq = ""
}
_eq.prototype._kq = function() {
    var _xc;
    var i = this._gq;
    var _Cb = this._fq;
    while (i < _Cb.length) {
        var c = _Cb.charCodeAt(i);
        if (c == 0x0d || c == 0x0a) {
            i++;
        } else {
            break;
        }
    }
    this._gq = i;
};
_eq.prototype._lq = function() {
    var _xc;
    var i = this._gq;
    var _Cb = this._fq;
    while (i < _Cb.length) {
        var c = _Cb.charCodeAt(i);
        if (c == 0x0d || c == 0x0a) {
            i++;
            c = _Cb.charCodeAt(i);
            if (c == 0x0d || c == 0x0a) {
                i++;
            }
            break;
        } else {
            i++;
        }
    }
    this._gq = i;
};
_eq.prototype._mq = function() {
    var _xc;
    var i = this._gq;
    var _Cb = this._fq;
    while (i < _Cb.length) {
        var c = _Cb.charCodeAt(i);
        if (c == 0x0d || c == 0x0a || c == 0x09 || c == 0x20) {
            i++;
        } else {
            break;
        }
    }
    this._gq = i;
};

function file_text_open_from_string(_nq) {
    _oq = new _eq();
    _oq._fq = _nq;
    _oq._gq = 0;
    _oq._jq = null;
    return _pq._1b(_oq);
}

function file_text_open_read(_Dg) {
    var _qq = _Pc(_Dg, true);
    if (_qq == null) _qq = _Pc(_Dg, false);
    if (_qq == null) return -1;
    _oq = new _eq();
    _oq._fq = _qq;
    _oq._gq = 0;
    _oq._jq = _Dg;
    return _pq._1b(_oq);
}

function file_text_close(_rq) {
    var _oq = _pq._O3(_rq);
    if (!_oq) {
        _ja("Error: Illegal file handle");
        return;
    }
    if (_oq._jq != null) {
        if (_oq._iq) {
            _Mc(_oq._jq, _oq._fq);
        }
    }
    _pq._2b(_rq);
}

function file_text_open_write(_Dg) {
    _oq = new _eq();
    _oq._jq = _Dg;
    _oq._fq = "";
    _oq._gq = 0;
    _oq._sq = true;
    return _pq._1b(_oq);
}

function file_text_open_append(_Dg) {
    var _dn = file_text_open_read(_Dg);
    if (_dn < 0) {
        return file_text_open_write(_Dg);
    }
    var _oq = _pq._O3(_dn);
    _oq._sq = true;
    _oq._gq = _oq._fq.length;
    return _dn;
}

function file_text_write_string(_rq, _Ge) {
    var _oq = _pq._O3(_rq);
    if (!_oq) {
        _ja("Error: Illegal file handle");
        return;
    }
    if (!_oq._sq) {
        _ja("Error: File " + _oq._jq + " has not been opened with WRITE permisions");
        return;
    }
    _oq._fq += _Yn = _Wn(_Ge);
    _oq._iq = true;
    _oq._gq = _oq._fq.length;
}

function file_text_write_real(_rq, _h2) {
    var _oq = _pq._O3(_rq);
    if (!_oq) {
        _ja("Error: Illegal file handle");
        return;
    }
    if (!_oq._sq) {
        _ja("Error: File " + _oq._jq + " has not been opened with WRITE permisions");
        return;
    }
    _oq._fq += _h2;
    _oq._iq = true;
    _oq._gq = _oq._fq.length;
}

function file_text_writeln(_rq) {
    var _oq = _pq._O3(_rq);
    if (!_oq) {
        _ja("Error: Illegal file handle");
        return;
    }
    if (!_oq._sq) {
        _ja("Error: File " + _oq._jq + " has not been opened with WRITE permisions");
        return;
    }
    _oq._fq += String.fromCharCode(0x0d);
    _oq._fq += String.fromCharCode(0x0a);
    _oq._gq = _oq._fq.length;
}

function file_text_read_string(_rq) {
    var _oq = _pq._O3(_rq);
    if (!_oq) {
        _ja("Error: Illegal file handle");
        return;
    }
    var _xc = "";
    var i = _oq._gq;
    var _Cb = _oq._fq;
    while (i < _Cb.length) {
        var c = _Cb.charCodeAt(i);
        if (c == 0x0d || c == 0x0a) {
            break;
        } else {
            _xc += _Cb[i++];
        }
    }
    _oq._gq = i;
    return _xc;
}

function file_text_read_real(_rq) {
    var _oq = _pq._O3(_rq);
    if (!_oq) {
        _ja("Error: Illegal file handle");
        return;
    }
    _oq._mq();
    var _xc = "";
    var i = _oq._gq;
    var _Cb = _oq._fq;
    while (i < _Cb.length) {
        var c = _Cb[i];
        if ((c == '-') && (_xc == "")) {
            _xc += _Cb[i++];
        } else if ((c >= '0' && c <= '9') || (c == '.')) {
            _xc += _Cb[i++];
        } else {
            break;
        }
    }
    _oq._gq = i;
    return parseFloat(_xc);
}

function file_text_readln(_rq) {
    var _oq = _pq._O3(_rq);
    if (!_oq) {
        _ja("Error: Illegal file handle");
        return;
    }
    _oq._lq();
}

function file_text_eof(_rq) {
    var _oq = _pq._O3(_rq);
    if (!_oq) {
        _ja("Error: Illegal file handle");
        return;
    }
    if (_oq._gq >= _oq._fq.length) return true;
    return false;
}

function file_text_eoln(_rq) {
    var _oq = _pq._O3(_rq);
    if (!_oq) {
        _ja("Error: Illegal file handle");
        return;
    }
    var c = _oq._fq.charCodeAt(_oq._gq);
    if (c == 0x0a || c == 0x0d) return true;
    return false;
}

function file_exists(_Dg) {
    var _tq = _uq(_Dg, true);
    if (_tq == true) return true;
    return _uq(_Dg, false);
}

function file_delete(_Dg) {
    if (_vq) {
        try {
            localStorage['removeItem'](_wq(_Dg));
        } catch (_xq) {
            return false;
        }
    }
}

function file_rename(_yq, _zq) {
    file_copy(_yq, _zq);
    file_delete(_yq);
}

function file_copy(_Dg, _zq) {
    if (true === file_exists(_zq)) file_delete(_zq);
    if (false === file_exists(_Dg)) return false;
    var _Aq = file_text_open_read(_Dg);
    var _Bq = file_text_open_write(_zq);
    while (false === file_text_eof(_Aq)) {
        var _Cq = file_text_read_string(_Aq);
        file_text_write_string(_Bq, _Cq);
    }
    file_text_close(_Aq);
    file_text_close(_Bq);
}

function directory_exists(_Dq) {
    _56("directory_exists()");
    return true;
}

function directory_create(_Dq) {
    _56("directory_create()");
    return true;
}

function directory_destroy(_Dq) {
    _56("directory_destroy()");
    return true;
}

function file_find_first(_Eq, _Fq) {
    _56("file_find_first()");
    return -1;
}

function file_find_next() {
    _56("file_find_next()");
}

function file_find_close() {
    _56("file_find_close()");
}

function file_attributes(_Dg, _Fq) {
    _56("file_attributes()");
    return true;
}

function filename_name(_Dg) {
    _Un("filename_name()");
}

function filename_path(_Dg) {
    _Un("filename_path()");
}

function filename_dir(_Dg) {
    _Un("filename_dir()");
}

function filename_drive(_Dg) {
    _Un("filename_drive()");
}

function filename_change_ext(_Dg, _Gq) {
    _Un("filename_change_ext()");
}

function file_bin_open(_Dg, _Hq) {
    _56("file_bin_open()");
}

function file_bin_rewrite(_rq) {
    _56("file_bin_rewrite()");
}

function file_bin_close(_rq) {
    _56("file_bin_close()");
}

function file_bin_size(_rq) {
    _56("file_bin_size()");
}

function file_bin_position(_rq) {
    _56("file_bin_position()");
}

function file_bin_seek(_rq, _0c) {
    _56("file_bin_seek()");
}

function file_bin_write_byte(_rq, _Iq) {
    _56("file_bin_write_byte()");
}

function file_bin_read_byte(_rq) {
    _56("file_bin_read_byte()");
}

function export_include_file(_Dg) {
    _56("export_include_file()");
}

function export_include_file_location(_Dg, _Jq) {
    _56("export_include_file_location()");
}

function discard_include_file(_Dg) {
    _56("discard_include_file()");
}

function environment_get_variable(_a1) {
    _56("environment_get_variable()");
}

function _Kq(_Lq) {
    _56("disk_size()");
}

function _Mq(_Lq) {
    _56("disk_free()");
}

function filename_ext(_Hc) {
    var _Nq = _Hc.lastIndexOf(".");
    var _Oq = _Hc.lastIndexOf("\\");
    if (_Oq > _Nq) return "";
    return _Hc.substr(_Nq,
        _Hc.length);
}

function _Pq(_Qq) {
    var _db;
    switch (typeof(_Qq)) {
        case "object":
            if (_Qq instanceof Array) {
                _db = new _Wb(_Zb, _Rq(_Qq));
            } else {
                _db = new _Wb(_Xb, _Sq(_Qq));
            }
            break;
        case "boolean":
            _db = _Qq ? 1 : 0;
            break;
        case "number":
        case "string":
            _db = _Qq;
            break;
        default:
            _db = _Qq.toString();
            break;
    }
    return _db;
}

function _Rq(_cc) {
    var _db = ds_list_create();
    for (var i = 0; i < _cc.length; ++i) {
        var _X1 = _Pq(_cc[i]);
        ds_list_add(_db, _X1);
    }
    return _db;
}

function _Sq(_cc) {
    var _db = ds_map_create();
    for (var _Xo in _cc) {
        var _Z4 = _cc[_Xo];
        var _X1 = _Pq(_Z4);
        ds_map_add(_db, _Xo,
            _X1);
    }
    return _db;
}

function json_decode(_Tq) {
    var _xc = _Tq;
    var _Uq = false;
    try {
        for (var _Vq = 0; _Vq < _xc.length; _Vq++) {
            if (_xc.charAt(_Vq) == "\"") {
                if (!_Uq) {
                    _Uq = true;
                } else if (_Vq == 0 || _xc.charAt(_Vq - 1) != "\\") {
                    _Uq = false;
                }
            }
            if (!_Uq && _xc.charAt(_Vq) == "#") {
                _xc = _xc.substring(0, _Vq) + _xc.substring(_Vq + 1, _xc.length);
                _Vq--;
            }
        }
    } catch (_ja) {}
    var _Wq = {};
    try {
        _Wq = JSON.parse(_xc);
        if (_Wq instanceof Array) {
            _xc = "{ \"default\" : " + _xc + "}";
        }
        _Wq = JSON.parse(_xc);
    } catch (err) {
        _xc = "{ \"default\" : \"" + _xc.toString() + "\"}";
        try {
            _Wq = JSON.parse(_xc);
        } catch (err) {}
    }
    return _Sq(_Wq);
}

function _Xq(_Qq) {
    var _db;
    switch (typeof(_Qq)) {
        case "object":
            switch (_Qq._dc) {
                case _Zb:
                    _db = _Yq(_Qq.Object);
                    break;
                case _Xb:
                    _db = _Zq(_Qq.Object);
                    break;
                default:
                    _db = _Qq.toString();
                    break;
            }
            break;
        case "number":
        case "string":
            _db = _Qq;
            break;
        default:
            _db = _Qq.toString();
            break;
    }
    return _db;
}

function _Yq(__5) {
    var _db = [];
    var _ac = _Pb._O3(__5);
    if (_ac) {
        for (var i = 0; i < _ac._4c.length; ++i) {
            if (_ac._4c[i] != undefined) _db.push(_Xq(_ac._4c[i]));
        }
    }
    return _db;
}

function _Zq(_J3) {
    var _db = {};
    var _M3 = _N3._O3(_J3);
    if (_M3) {
        for (var i in _M3) {
            if (!_M3.hasOwnProperty(i)) continue;
            if (_M3[i] != undefined) _db[i] = _Xq(_M3[i]);
        }
    }
    return _db;
}

function json_encode(_J3) {
    var _Sh = _Zq(_J3);
    return JSON.stringify(_Sh);
}

function draw_set_halign(__q) {
    _Zn._0r = __q;
}

function draw_set_valign(__q) {
    _Zn._1r = __q;
}

function draw_set_font(_Le) {
    _Zn._2r = _Le;
}

function draw_text(_h2, _i2, _He) {
    _Zn._3r(_He.toString(), _h2, _i2, -1, -1, 0, 1, 1);
}
var draw_text_colour = draw_text_color;

function draw_text_color(_h2, _i2, _He, _qh, _rh, _sh, _th, __6) {
    _Vn("draw_text_color() only uses the 1st colour");
    var _4r = _X6;
    var _5r = _6r;
    _X6 = __6;
    draw_set_color(_qh);
    _Zn._3r(_He.toString(), _h2, _i2, -1, -1, 0, 1, 1);
    _X6 = _4r;
    draw_set_color(_5r);
}
var draw_text_ext_colour = draw_text_ext_color;

function draw_text_ext_color(_h2, _i2, _He, _7r, _Va, _qh, _rh, _sh, _th, __6) {
    _Vn("draw_text_ext_color() only uses the 1st colour");
    var _4r = _X6;
    var _5r = _6r;
    _X6 = __6;
    draw_set_color(_qh);
    _Zn._3r(_He.toString(), _h2, _i2, _7r, _Va, 0, 1, 1);
    _X6 = _4r;
    draw_set_color(_5r);
}

function draw_text_ext(_h2, _i2, _He, _7r, _Va) {
    _Zn._3r(_He.toString(), _h2, _i2, _7r, _Va, 0, 1,
        1);
}

function draw_text_transformed(_h2, _i2, _He, _Ie, _Je, _l2) {
    _Zn._3r(_He.toString(), _h2, _i2, -1, -1, _l2, _Ie, _Je);
}

function draw_text_ext_transformed(_h2, _i2, _He, _7r, _Va, _Ie, _Je, _l2) {
    _Zn._3r(_He.toString(), _h2, _i2, _7r, _Va, _l2, _Ie, _Je);
}
var draw_text_ext_transformed_colour = draw_text_ext_transformed_color;

function draw_text_ext_transformed_color(_h2, _i2, _He, _7r, _Va, _Ie, _Je, _l2, _qh, _rh, _sh, _th, __6) {
    _Vn("draw_text_ext_transformed_color() only uses the 1st colour");
    var _4r = _X6;
    var _5r = _6r;
    _X6 = __6;
    draw_set_color(_qh);
    _Zn._3r(_He.toString(), _h2, _i2, _7r, _Va, _l2, _Ie, _Je);
    _X6 = _4r;
    draw_set_color(_5r);
}
var draw_text_transformed_colour = draw_text_transformed_color;

function draw_text_transformed_color(_h2, _i2, _He, _Ie, _Je, _l2, _qh, _rh, _sh, _th, __6) {
    _Vn("draw_text_transformed_color() only uses the 1st colour");
    var _4r = _X6;
    var _5r = _6r;
    _X6 = __6;
    draw_set_color(_qh);
    _Zn._3r(_He.toString(), _h2, _i2, -1, -1, _l2, _Ie, _Je);
    _X6 = _4r;
    draw_set_color(_5r);
}

function string_height(_He) {
    _Zn._8r();
    var _9r = 1;
    for (var i = 0; i < _He.length; i++) {
        if (_He[i] == '#') _9r++;
    }
    return _Zn._ar._br(_He) * _9r;
}

function string_width(_He) {
    _Zn._8r();
    return _Zn._ar._cr(_He);
}

function string_width_ext(_Tq, _7r, _Va) {
    _Zn._8r();
    _Zn._dr(_Tq, 0, 0, _7r, _Va, 0);
    return _er;
}

function string_height_ext(_Tq, _7r, _Va) {
    _Zn._8r();
    _Zn._dr(_Tq, 0, 0, _7r, _Va, 0);
    return _fr;
}

function font_exists(_ha) {
    if (_Zn._O3(_ha)) return true;
    else return false;
}

function font_get_bold(_ha) {
    var _gr = _Zn._O3(_ha);
    if (!_gr) return false;
    return _gr.bold;
}

function font_get_fontname(_ha) {
    var _gr = _Zn._O3(_ha);
    if (!_gr) return "";
    return _gr._hr;
}

function font_get_name(_ha) {
    var _gr = _Zn._O3(_ha);
    if (!_gr) return "";
    return _gr.pName;
}

function font_get_italic(_ha) {
    var _gr = _Zn._O3(_ha);
    if (!_gr) return false;
    return _gr.italic;
}

function font_get_first(_ha) {
    var _gr = _Zn._O3(_ha);
    if (!_gr) return 0;
    return _gr.first;
}

function font_get_last(_ha) {
    var _gr = _Zn._O3(_ha);
    if (!_gr) return 255;
    return _gr.last;
}

function font_get_size(_ha) {
    var _gr = _Zn._O3(_ha);
    if (!_gr) return 0;
    return _gr.size;
}

function _ir(_a1, _l7, _jr, _kr, _lr, _mr, _nr) {
    var _gr = new _or();
    _gr._pr = true;
    _gr.pName = "fnt_" + _a1;
    _gr._hr = _a1;
    _gr.size = _l7;
    _gr.bold = _jr;
    _gr.italic = _kr;
    _gr.first = _lr;
    _gr.last = _mr;
    _gr._qr = false;
    if (_a1.toLowerCase().lastIndexOf(".ttf") != -1) {
        _gr._rr = new _sr();
        _gr._rr.onload = function() {
            _gr._qr = true;
        };
        _gr._rr.onerror = function(err) {
            alert(err);
        };
        _gr._rr.src = "html5game/" + _a1;
        _gr._tr = _l7 + "px " + _gr._rr._ur + " ";
    } else {
        _gr._tr = _l7 + "px " + _a1 + " ";
        _gr._qr = true;
    }
    if (_jr) _gr._tr = _gr._tr + "bold ";
    if (_kr) _gr._tr = _gr._tr + "Italic ";
    if (_nr) {
        return _Zn._vr(_gr);
    } else {
        return _gr;
    }
}

function font_add(_a1, _l7, _jr, _kr, _lr, _mr) {
    return _ir(_a1, _l7, _jr, _kr, _lr, _mr, true);
}

function font_add_sprite(_73, _lr, _wr, _7r) {
    var _gr = new _or();
    _gr._xr(_73, _lr, _wr, _7r, null);
    return _Zn._vr(_gr);
}

function font_add_sprite_ext(_73, _yr, _wr, _7r) {
    var _gr = new _or();
    _gr._xr(_73, _yr.charCodeAt(0), _wr, _7r, _yr);
    return _Zn._vr(_gr);
}

function font_replace_sprite(_ha, _73, _lr, _wr, _7r) {
    var _gr = _Zn._O3(_ha);
    _gr._xr(_73, _lr, _wr, _7r, null);
    return _ha;
}

function font_set_cache_size(_F1, _zr) {
    var _gr = _Zn._O3(_F1);
    if (!_gr) {
        _ja("Trying to adjust the cache on a non-existant font (" + string(_F1) + ")");
        return false;
    }
    if (_gr._Ar) {
        _ja("Trying to adjust the cache on a SPRITE font (" + string(_F1) + ")");
        return false;
    }
    var _M1 = _gr._Xg;
    if (_M1._o4 > _zr) {
        _M1._m4 = [];
        _M1._n4 = 0;
    }
    _M1._o4 = _zr;
}

function font_get_texture(_F1) {
    var _gr = _Zn._O3(_F1);
    if (!_gr) {
        _ja("Trying to adjust the cache on a non-existant font (" + string(_F1) + ")");
        return false;
    }
    if (_gr._Ar) {
        _ja("Trying to adjust the cache on a SPRITE font (" + string(_F1) + ")");
        return false;
    }
    var _L1 = _gr._Xg;
    if (_L1) {
        return ({
            _R6: _L1._T1,
            _S6: _L1
        });
    }
    return null;
}

function font_get_uvs(_F1) {
    var _gr = _Zn._O3(_F1);
    if (!_gr) {
        _ja("Trying to adjust the uvs on a non-existent font (" + string(_F1) + ")");
        return null;
    }
    var _L1 = _gr._Xg;
    var _T1 = _L1._T1;
    var _Gh = 1.0 / _T1._a7;
    var _Hh = 1.0 / _T1._b7;
    var _Ih = [];
    _Ih.push(_L1.x * _Gh, _L1.y * _Hh, (_L1.x + _L1.CropWidth) * _Gh, (_L1.y + _L1.CropHeight) * _Hh);
    return _Ih;
}
var _Br = 0,
    _Cr = 1,
    _Dr = 2,
    _Er = 3,
    _Fr = 4,
    _Gr = 5,
    _Hr = 6,
    _Ir = 7,
    _Jr = 8,
    _Kr = 9;

function sleep(_E2) {
    _Cg(_E2 * 1000);
}

function instance_number(_cc) {
    return _2q._O3(_cc)._Lr.length;
}

function _Mr(_qe, _a1) {
    this.name = _a1;
    this.value = _qe;
}

function _Nr() {
    var _Or = _Pc("hiscores_data_",
        true);
    if (_Or != null) {
        _Pr = JSON.parse(_Or);
        var i;
        for (i = 0; i < _Qr; i++) {
            _Rr[i] = _Pr[i].name;
            _Sr[i] = _Pr[i].value;
        }
    }
}

function _Sg() {
    var _Pr = {};
    var i;
    for (i = 0; i < _Qr; i++) {
        _Pr[i] = new _Mr(_Sr[i], _Rr[i]);
    }
    var _Or = JSON.stringify(_Pr);
    _Mc("hiscores_data_", _Or);
}

function highscore_show(_Tr) {
    if (_Tr != -1) highscore_add(null, _Tr);
    var _xc = "";
    for (var i = 0; i < _Qr; i++) {
        var _Ur = 30;
        var _Vr;
        _Vr = _Sr[i].toString();
        _xc = _xc + _Vr;
        _Ur -= _Vr.length;
        while (_Ur > 0) {
            _xc = _xc + " ";
            _Ur--;
        }
        _xc = _xc + _Rr[i] + chr(13) + chr(10);
    }
    alert(_xc);
}

function highscore_set_background(_ch) {
    _Wr = _ch;
}

function highscore_show_ext(_Tr, _ch, _Og, _cg, _Ne, _a1, _l7) {
    highscore_set_border(_Og);
    _Xr = _a1;
    _Yr = _l7;
    highscore_set_colors(_ch, _cg, _Ne);
    highscore_show(_Tr);
}

function draw_highscore(_v3, _w3, _S2, _T2) {
    var _0r = _Zn._0r;
    var _B5 = (_T2 - _w3) / _Qr;
    for (var i = 0; i < _Qr; i++) {
        _Zn._0r = 0;
        draw_text(_v3, _w3, _Rr[i]);
        _Zn._0r = 2;
        draw_text(_S2, _w3, _Sr[i].toString());
        _w3 += _B5;
    }
    _Zn._0r = _0r;
}

function highscore_set_border(_qd) {
    _Zr = _qd;
}

function highscore_set_font(_a1, _l7, __r) {
    _Xr = _a1;
    _Yr = _l7;
    _0s = __r;
}

function highscore_set_colors(_ch,
    _1s, _sg) {
    _2s = _ch;
    _3s = _1s;
    _4s = _sg;
}

function highscore_set_strings(_5s, _6s, _7s) {
    _8s = _5s;
    _9s = _6s;
    _as = _7s;
}

function highscore_clear() {
    _Sr[0] = _Sr[1] = _Sr[2] = _Sr[3] = _Sr[4] = _Sr[5] = _Sr[6] = _Sr[7] = _Sr[8] = _Sr[9] = 0;
    _Rr[0] = _Rr[1] = _Rr[2] = _Rr[3] = _Rr[4] = _Rr[5] = _Rr[6] = _Rr[7] = _Rr[8] = _Rr[9] = _9s;
}

function highscore_add(_Ge, _Tr) {
    var _bs = _Ge;
    if (!_bs) {
        _bs = "";
    }
    for (var i = 0; i < _Qr; i++) {
        if (_Tr > _Sr[i]) {
            _Sr.splice(i, 0, _Tr);
            _Rr.splice(i, 0, _bs);
            _Sr.splice(10, 1);
            _Rr.splice(10, 1);
            _Sg();
            return;
        }
    }
}

function highscore_add_current() {
    highscore_add(_9s,
        _cs);
}

function highscore_value(_ds) {
    if (_ds < 1 || _ds > _Qr) return -1;
    return _Sr[_ds - 1];
}

function highscore_name(_ds) {
    if (_ds < 1 || _ds > _Qr) return "";
    return _Rr[_ds - 1];
}

function _es(_cg, _Ne, _qe) {
    var _fs, _gs, _hs, _is, _js, _ks;
    _fs = (_cg >> 16) & 0xff;
    _hs = (_cg >> 8) & 0xff;
    _js = (_cg & 0xff);
    _gs = (_Ne >> 16) & 0xff;
    _is = (_Ne >> 8) & 0xff;
    _ks = (_Ne & 0xff);
    var _ig = 1.0 - _qe;
    var _d3 = _vb(_fs * _ig + _gs * _qe);
    var _Y4 = _vb(_hs * _ig + _is * _qe);
    var _g3 = _vb(_js * _ig + _ks * _qe);
    var _F4 = ((_d3 & 0xff) << 16) | ((_Y4 & 0xff) << 8) | (_g3 & 0xff);
    return _F4;
}

function _ls(_cg, _Ne, _qe) {
    return _es(_cg,
        _Ne, _qe);
}

function event_perform(_7i, _ms, _Bp, _ns) {
    var _os = _ps;
    _ps = true;
    var event = _qs(_Bp, _ns);
    var _rs = _ss(_Bp, _ns);
    _7i._B2(event, _rs, _7i, _ms);
    _ps = _os;
}

function _ts(_7i, _sg, _us, _vs) {
    var _ws = _xs._O3(_us);
    if ((_ws != null) && (_ws != undefined)) {
        var _ys = _ws.Events[_vs];
        if ((_ys != null) && (_ys != undefined)) {
            _ys.Event(_7i, _7i);
        }
    }
}

function event_perform_object(_7i, _ms, _cc, _Bp, _ns) {
    var event = _qs(_Bp, _ns);
    var _rs = _ss(_Bp, _ns);
    var _5p = _2q._O3(_cc);
    if (!_5p) {
        _ja("Error: undefined object id passed to event_perform_object: " + _cc);
    } else {
        _5p._B2(event, _rs, _7i, _ms);
    }
}
var _zs = true;

function event_user(_7i, _ms, _ns) {
    if (_ns < 0 || _ns > 15) {
        _ja("Error: illegal user event ID: " + _ns);
    }
    _ns += _As;
    event_perform(_7i, _ms, _Bs, _ns);
}

function event_inherited(_7i, _ms) {
    _7i._Cs(_Ds, _Es, _ms);
}

function parameter_count() {
    return _Fs;
}

function parameter_string(_tb) {
    if (_tb < 0 || _tb > _Fs) return "";
    var _Cb = _Gs[_tb];
    if (_Hs[_tb] != null) _Cb = _Cb + "=" + _Hs[_tb];
    return _Cb;
}

function set_application_title(_Is) {
    document.title = _Is;
}

function clipboard_get_text() {
    return "";
}
var clipboard_set_text = debug;

function _Js() {
    var _Ks = "en";
    if (navigator["language"]) {
        _Ks = navigator["language"];
    } else if (navigator["userLanguage"]) {
        _Ks = navigator["userLanguage"];
    }
    return _Ks;
}

function os_get_language() {
    var _Ks = _Js();
    var _Ls = _Ks.indexOf("-");
    if (_Ls >= 0) {
        _Ks = _Ks.substring(0, _Ls);
    }
    return _Ks;
}

function os_get_region() {
    var _U1 = "";
    var _Ks = _Js();
    var _Ls = _Ks.indexOf("-");
    if (_Ls >= 0) {
        _U1 = _Ks.substring(_Ls + 1, _Ks.length);
    }
    return _U1;
}

function device_mouse_dbclick_enable(_1l) {}

function base64_encode(data) {
    var _Ms = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var _Ns, _Os, _Ps, _Qs, _Rs, _Ss, _Ts, _Us;
    var i = 0;
    var _Vs = 0;
    var _Ws = "";
    var _Xs = [];
    if (!data) {
        return data;
    }
    do {
        _Ns = data.charCodeAt(i++);
        _Os = data.charCodeAt(i++);
        _Ps = data.charCodeAt(i++);
        _Us = _Ns << 16 | _Os << 8 | _Ps;
        _Qs = _Us >> 18 & 0x3f;
        _Rs = _Us >> 12 & 0x3f;
        _Ss = _Us >> 6 & 0x3f;
        _Ts = _Us & 0x3f;
        _Xs[_Vs++] = _Ms.charAt(_Qs) + _Ms.charAt(_Rs) + _Ms.charAt(_Ss) + _Ms.charAt(_Ts);
    } while (i < data.length);
    _Ws = _Xs.join('');
    var _d3 = data.length % 3;
    return (_d3 ? _Ws.slice(0, _d3 - 3) : _Ws) + '==='.slice(_d3 || 3);
}

function base64_decode(data) {
    var _Ms = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var _Ns, _Os, _Ps, _Qs, _Rs, _Ss, _Ts, _Us;
    var i = 0;
    var _Vs = 0;
    var _Ys = "";
    var _Xs = [];
    if (!data) {
        return data;
    }
    data += '';
    do {
        _Qs = _Ms.indexOf(data.charAt(i++));
        _Rs = _Ms.indexOf(data.charAt(i++));
        _Ss = _Ms.indexOf(data.charAt(i++));
        _Ts = _Ms.indexOf(data.charAt(i++));
        _Us = _Qs << 18 | _Rs << 12 | _Ss << 6 | _Ts;
        _Ns = _Us >> 16 & 0xff;
        _Os = _Us >> 8 & 0xff;
        _Ps = _Us & 0xff;
        if (_Ss == 64) {
            _Xs[_Vs++] = String.fromCharCode(_Ns);
        } else if (_Ts == 64) {
            _Xs[_Vs++] = String.fromCharCode(_Ns, _Os);
        } else {
            _Xs[_Vs++] = String.fromCharCode(_Ns, _Os, _Ps);
        }
    } while (i < data.length);
    _Ys = _Xs.join('');
    return _Ys;
}

function md5_string_unicode(string) {
    return _Zs(__s(string));
}

function md5_string_utf8(string) {
    return _Zs(string);
}

function md5_file(_ej) {
    return "unsupported";
}

function os_is_network_connected() {
    if (navigator != null && navigator != undefined) {
        return navigator["onLine"] ? 1.0 : 0.0;
    }
    return 1.0;
}

function os_powersave_enable(enable) {}

function os_lock_orientation(enable) {}

function analytics_event(_Bp) {
    if (_Pn.Options.TrackingID) {
        _gaq.push(['_trackEvent', 'GMEvent', _Bp]);
    } else if (_Pn.Options.FlurryId) {
        FlurryAgent.logEvent(_Bp);
    }
}

function analytics_event_ext(_Bp) {
    var arguments = analytics_event_ext.arguments;
    if (_Pn.Options.TrackingID) {
        if (arguments.length >= 3) {
            _gaq.push(['_trackEvent', 'GMEvent', _Bp, arguments[1], arguments[2]]);
        } else {
            _gaq.push(['_trackEvent', 'GMEvent', _Bp]);
        }
    } else if (_Pn.Options.FlurryId) {
        if ((arguments.length >= 3) && (arguments.length & 1) == 1) {
            var _0t = {};
            var _1t = arguments.length - 1;
            if (_1t > 10) {
                _1t = 10;
            }
            for (var i = 0; i < _1t; i += 2) {
                _0t[arguments[i + 1]] = arguments[i + 2].toString();
            }
            FlurryAgent.logEvent(_Bp, _0t);
        } else {
            FlurryAgent.logEvent(_Bp);
        }
    }
}

function sha1_string_unicode(_Tq) {
    return _2t(__s(_Tq));
}

function sha1_string_utf8(_Tq) {
    return _2t(_Tq);
}

function sha1_file(_Dg) {
    return "unsupported";
}

function os_powersave_enable(_1l) {}
var _3t = 0;
var _4t = "";

function _Zs(_Cb) {
    return _5t(_6t(_7t(_Cb)));
}

function _8t(_Cb) {
    return _9t(_6t(_7t(_Cb)));
}

function _at(_Cb, e) {
    return _bt(_6t(_7t(_Cb)), e);
}

function _ct(_dt, _Cd) {
    return _5t(_et(_7t(_dt), _7t(_Cd)));
}

function _ft(_dt, _Cd) {
    return _9t(_et(_7t(_dt), _7t(_Cd)));
}

function _gt(_dt, _Cd, e) {
    return _bt(_et(_7t(_dt), _7t(_Cd)),
        e);
}

function _ht() {
    return _Zs("abc").toLowerCase() == "900150983cd24fb0d6963f7d28e17f72";
}

function _6t(_Cb) {
    return _it(_jt(_kt(_Cb), _Cb.length * 8));
}

function _et(_Fc, data) {
    var _lt = _kt(_Fc);
    if (_lt.length > 16) _lt = _jt(_lt, _Fc.length * 8);
    var _mt = Array(16),
        _nt = Array(16);
    for (var i = 0; i < 16; i++) {
        _mt[i] = _lt[i] ^ 0x36363636;
        _nt[i] = _lt[i] ^ 0x5C5C5C5C;
    }
    var _ot = _jt(_mt.concat(_kt(data)), 512 + data.length * 8);
    return _it(_jt(_nt.concat(_ot), 512 + 128));
}

function _5t(_pt) {
    try {
        _3t
    } catch (e) {
        _3t = 0;
    }
    var _qt = _3t ? "0123456789ABCDEF" : "0123456789abcdef";
    var _rt = "";
    var x;
    for (var i = 0; i < _pt.length; i++) {
        x = _pt.charCodeAt(i);
        _rt += _qt.charAt((x >>> 4) & 0x0F) + _qt.charAt(x & 0x0F);
    }
    return _rt;
}

function _9t(_pt) {
    try {
        _4t
    } catch (e) {
        _4t = '';
    }
    var _Ur = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    var _rt = "";
    var _On = _pt.length;
    for (var i = 0; i < _On; i += 3) {
        var _st = (_pt.charCodeAt(i) << 16) | (i + 1 < _On ? _pt.charCodeAt(i + 1) << 8 : 0) | (i + 2 < _On ? _pt.charCodeAt(i + 2) : 0);
        for (var _k3 = 0; _k3 < 4; _k3++) {
            if (i * 8 + _k3 * 6 > _pt.length * 8) _rt += _4t;
            else _rt += _Ur.charAt((_st >>> 6 * (3 - _k3)) & 0x3F);
        }
    }
    return _rt;
}

function _bt(_pt, _tt) {
    var _ut = _tt.length;
    var i, _k3, _vt, x, _wt;
    var _xt = Array(Math.ceil(_pt.length / 2));
    for (i = 0; i < _xt.length; i++) {
        _xt[i] = (_pt.charCodeAt(i * 2) << 8) | _pt.charCodeAt(i * 2 + 1);
    }
    var _yt = Math.ceil(_pt.length * 8 / (Math.log(_tt.length) / Math.log(2)));
    var _zt = Array(_yt);
    for (_k3 = 0; _k3 < _yt; _k3++) {
        _wt = Array();
        x = 0;
        for (i = 0; i < _xt.length; i++) {
            x = (x << 16) + _xt[i];
            _vt = Math.floor(x / _ut);
            x -= _vt * _ut;
            if (_wt.length > 0 || _vt > 0) _wt[_wt.length] = _vt;
        }
        _zt[_k3] = x;
        _xt = _wt;
    }
    var _rt = "";
    for (i = _zt.length - 1; i >= 0; i--) _rt += _tt.charAt(_zt[i]);
    return _rt;
}

function _7t(_pt) {
    var _rt = "";
    var i = -1;
    var x, y;
    while (++i < _pt.length) {
        x = _pt.charCodeAt(i);
        y = i + 1 < _pt.length ? _pt.charCodeAt(i + 1) : 0;
        if (0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF) {
            x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);
            i++;
        }
        if (x <= 0x7F) _rt += String.fromCharCode(x);
        else if (x <= 0x7FF) _rt += String.fromCharCode(0xC0 | ((x >>> 6) & 0x1F), 0x80 | (x & 0x3F));
        else if (x <= 0xFFFF) _rt += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F), 0x80 | ((x >>> 6) & 0x3F), 0x80 | (x & 0x3F));
        else if (x <= 0x1FFFFF) _rt += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),
            0x80 | ((x >>> 12) & 0x3F), 0x80 | ((x >>> 6) & 0x3F), 0x80 | (x & 0x3F));
    }
    return _rt;
}

function __s(_pt) {
    var _rt = "";
    for (var i = 0; i < _pt.length; i++) _rt += String.fromCharCode(_pt.charCodeAt(i) & 0xFF, (_pt.charCodeAt(i) >>> 8) & 0xFF);
    return _rt;
}

function _At(_pt) {
    var _rt = "";
    for (var i = 0; i < _pt.length; i++) _rt += String.fromCharCode((_pt.charCodeAt(i) >>> 8) & 0xFF, _pt.charCodeAt(i) & 0xFF);
    return _rt;
}

function _kt(_pt) {
    var _rt = Array(_pt.length >> 2);
    for (var i = 0; i < _rt.length; i++) _rt[i] = 0;
    for (var i = 0; i < _pt.length * 8; i += 8) _rt[i >> 5] |= (_pt.charCodeAt(i / 8) & 0xFF) << (i % 32);
    return _rt;
}

function _it(_pt) {
    var _rt = "";
    for (var i = 0; i < _pt.length * 32; i += 8) _rt += String.fromCharCode((_pt[i >> 5] >>> (i % 32)) & 0xFF);
    return _rt;
}

function _jt(x, _On) {
    x[_On >> 5] |= 0x80 << ((_On) % 32);
    x[(((_On + 64) >>> 9) << 4) + 14] = _On;
    var _Z4 = 1732584193;
    var _g3 = -271733879;
    var c = -1732584194;
    var _Cd = 271733878;
    for (var i = 0; i < x.length; i += 16) {
        var _Bt = _Z4;
        var _Ct = _g3;
        var _Dt = c;
        var _Et = _Cd;
        _Z4 = _Ft(_Z4, _g3, c, _Cd, x[i + 0], 7, -680876936);
        _Cd = _Ft(_Cd, _Z4, _g3, c, x[i + 1], 12, -389564586);
        c = _Ft(c, _Cd, _Z4, _g3, x[i + 2], 17, 606105819);
        _g3 = _Ft(_g3, c, _Cd, _Z4,
            x[i + 3], 22, -1044525330);
        _Z4 = _Ft(_Z4, _g3, c, _Cd, x[i + 4], 7, -176418897);
        _Cd = _Ft(_Cd, _Z4, _g3, c, x[i + 5], 12, 1200080426);
        c = _Ft(c, _Cd, _Z4, _g3, x[i + 6], 17, -1473231341);
        _g3 = _Ft(_g3, c, _Cd, _Z4, x[i + 7], 22, -45705983);
        _Z4 = _Ft(_Z4, _g3, c, _Cd, x[i + 8], 7, 1770035416);
        _Cd = _Ft(_Cd, _Z4, _g3, c, x[i + 9], 12, -1958414417);
        c = _Ft(c, _Cd, _Z4, _g3, x[i + 10], 17, -42063);
        _g3 = _Ft(_g3, c, _Cd, _Z4, x[i + 11], 22, -1990404162);
        _Z4 = _Ft(_Z4, _g3, c, _Cd, x[i + 12], 7, 1804603682);
        _Cd = _Ft(_Cd, _Z4, _g3, c, x[i + 13], 12, -40341101);
        c = _Ft(c, _Cd, _Z4, _g3, x[i + 14], 17, -1502002290);
        _g3 = _Ft(_g3, c, _Cd, _Z4, x[i + 15], 22, 1236535329);
        _Z4 = _Gt(_Z4, _g3, c, _Cd, x[i + 1], 5, -165796510);
        _Cd = _Gt(_Cd, _Z4, _g3, c, x[i + 6], 9, -1069501632);
        c = _Gt(c, _Cd, _Z4, _g3, x[i + 11], 14, 643717713);
        _g3 = _Gt(_g3, c, _Cd, _Z4, x[i + 0], 20, -373897302);
        _Z4 = _Gt(_Z4, _g3, c, _Cd, x[i + 5], 5, -701558691);
        _Cd = _Gt(_Cd, _Z4, _g3, c, x[i + 10], 9, 38016083);
        c = _Gt(c, _Cd, _Z4, _g3, x[i + 15], 14, -660478335);
        _g3 = _Gt(_g3, c, _Cd, _Z4, x[i + 4], 20, -405537848);
        _Z4 = _Gt(_Z4, _g3, c, _Cd, x[i + 9], 5, 568446438);
        _Cd = _Gt(_Cd, _Z4, _g3, c, x[i + 14], 9, -1019803690);
        c = _Gt(c, _Cd, _Z4, _g3, x[i + 3],
            14, -187363961);
        _g3 = _Gt(_g3, c, _Cd, _Z4, x[i + 8], 20, 1163531501);
        _Z4 = _Gt(_Z4, _g3, c, _Cd, x[i + 13], 5, -1444681467);
        _Cd = _Gt(_Cd, _Z4, _g3, c, x[i + 2], 9, -51403784);
        c = _Gt(c, _Cd, _Z4, _g3, x[i + 7], 14, 1735328473);
        _g3 = _Gt(_g3, c, _Cd, _Z4, x[i + 12], 20, -1926607734);
        _Z4 = _Ht(_Z4, _g3, c, _Cd, x[i + 5], 4, -378558);
        _Cd = _Ht(_Cd, _Z4, _g3, c, x[i + 8], 11, -2022574463);
        c = _Ht(c, _Cd, _Z4, _g3, x[i + 11], 16, 1839030562);
        _g3 = _Ht(_g3, c, _Cd, _Z4, x[i + 14], 23, -35309556);
        _Z4 = _Ht(_Z4, _g3, c, _Cd, x[i + 1], 4, -1530992060);
        _Cd = _Ht(_Cd, _Z4, _g3, c, x[i + 4], 11, 1272893353);
        c = _Ht(c,
            _Cd, _Z4, _g3, x[i + 7], 16, -155497632);
        _g3 = _Ht(_g3, c, _Cd, _Z4, x[i + 10], 23, -1094730640);
        _Z4 = _Ht(_Z4, _g3, c, _Cd, x[i + 13], 4, 681279174);
        _Cd = _Ht(_Cd, _Z4, _g3, c, x[i + 0], 11, -358537222);
        c = _Ht(c, _Cd, _Z4, _g3, x[i + 3], 16, -722521979);
        _g3 = _Ht(_g3, c, _Cd, _Z4, x[i + 6], 23, 76029189);
        _Z4 = _Ht(_Z4, _g3, c, _Cd, x[i + 9], 4, -640364487);
        _Cd = _Ht(_Cd, _Z4, _g3, c, x[i + 12], 11, -421815835);
        c = _Ht(c, _Cd, _Z4, _g3, x[i + 15], 16, 530742520);
        _g3 = _Ht(_g3, c, _Cd, _Z4, x[i + 2], 23, -995338651);
        _Z4 = _It(_Z4, _g3, c, _Cd, x[i + 0], 6, -198630844);
        _Cd = _It(_Cd, _Z4, _g3, c, x[i + 7], 10,
            1126891415);
        c = _It(c, _Cd, _Z4, _g3, x[i + 14], 15, -1416354905);
        _g3 = _It(_g3, c, _Cd, _Z4, x[i + 5], 21, -57434055);
        _Z4 = _It(_Z4, _g3, c, _Cd, x[i + 12], 6, 1700485571);
        _Cd = _It(_Cd, _Z4, _g3, c, x[i + 3], 10, -1894986606);
        c = _It(c, _Cd, _Z4, _g3, x[i + 10], 15, -1051523);
        _g3 = _It(_g3, c, _Cd, _Z4, x[i + 1], 21, -2054922799);
        _Z4 = _It(_Z4, _g3, c, _Cd, x[i + 8], 6, 1873313359);
        _Cd = _It(_Cd, _Z4, _g3, c, x[i + 15], 10, -30611744);
        c = _It(c, _Cd, _Z4, _g3, x[i + 6], 15, -1560198380);
        _g3 = _It(_g3, c, _Cd, _Z4, x[i + 13], 21, 1309151649);
        _Z4 = _It(_Z4, _g3, c, _Cd, x[i + 4], 6, -145523070);
        _Cd = _It(_Cd,
            _Z4, _g3, c, x[i + 11], 10, -1120210379);
        c = _It(c, _Cd, _Z4, _g3, x[i + 2], 15, 718787259);
        _g3 = _It(_g3, c, _Cd, _Z4, x[i + 9], 21, -343485551);
        _Z4 = _Jt(_Z4, _Bt);
        _g3 = _Jt(_g3, _Ct);
        c = _Jt(c, _Dt);
        _Cd = _Jt(_Cd, _Et);
    }
    return Array(_Z4, _g3, c, _Cd);
}

function _Kt(_vt, _Z4, _g3, x, _Cb, _f3) {
    return _Jt(_Lt(_Jt(_Jt(_Z4, _vt), _Jt(x, _f3)), _Cb), _g3);
}

function _Ft(_Z4, _g3, c, _Cd, x, _Cb, _f3) {
    return _Kt((_g3 & c) | ((~_g3) & _Cd), _Z4, _g3, x, _Cb, _f3);
}

function _Gt(_Z4, _g3, c, _Cd, x, _Cb, _f3) {
    return _Kt((_g3 & _Cd) | (c & (~_Cd)), _Z4, _g3, x, _Cb, _f3);
}

function _Ht(_Z4, _g3, c, _Cd,
    x, _Cb, _f3) {
    return _Kt(_g3 ^ c ^ _Cd, _Z4, _g3, x, _Cb, _f3);
}

function _It(_Z4, _g3, c, _Cd, x, _Cb, _f3) {
    return _Kt(c ^ (_g3 | (~_Cd)), _Z4, _g3, x, _Cb, _f3);
}

function _Jt(x, y) {
    var _Mt = (x & 0xFFFF) + (y & 0xFFFF);
    var _Nt = (x >> 16) + (y >> 16) + (_Mt >> 16);
    return (_Nt << 16) | (_Mt & 0xFFFF);
}

function _Lt(_Vr, _Ot) {
    return (_Vr << _Ot) | (_Vr >>> (32 - _Ot));
}

function _2t(_Cb) {
    return _5t(_Pt(_7t(_Cb)));
}

function _Qt(_Cb) {
    return _9t(_Pt(_7t(_Cb)));
}

function _Rt(_Cb, e) {
    return _bt(_Pt(_7t(_Cb)), e);
}

function _St(_dt, _Cd) {
    return _5t(_Tt(_7t(_dt), _7t(_Cd)));
}

function _Ut(_dt,
    _Cd) {
    return _9t(_Tt(_7t(_dt), _7t(_Cd)));
}

function _Vt(_dt, _Cd, e) {
    return _bt(_Tt(_7t(_dt), _7t(_Cd)), e);
}

function _Wt() {
    return _2t("abc").toLowerCase() == "a9993e364706816aba3e25717850c26c9cd0d89d";
}

function _Pt(_Cb) {
    return _Xt(_Yt(_Zt(_Cb), _Cb.length * 8));
}

function _Tt(_Fc, data) {
    var _lt = _Zt(_Fc);
    if (_lt.length > 16) _lt = _Yt(_lt, _Fc.length * 8);
    var _mt = Array(16),
        _nt = Array(16);
    for (var i = 0; i < 16; i++) {
        _mt[i] = _lt[i] ^ 0x36363636;
        _nt[i] = _lt[i] ^ 0x5C5C5C5C;
    }
    var _ot = _Yt(_mt.concat(_Zt(data)), 512 + data.length * 8);
    return _Xt(_Yt(_nt.concat(_ot),
        512 + 160));
}

function _Zt(_pt) {
    var _rt = Array(_pt.length >> 2);
    for (var i = 0; i < _rt.length; i++) _rt[i] = 0;
    for (var i = 0; i < _pt.length * 8; i += 8) _rt[i >> 5] |= (_pt.charCodeAt(i / 8) & 0xFF) << (24 - i % 32);
    return _rt;
}

function _Xt(_pt) {
    var _rt = "";
    for (var i = 0; i < _pt.length * 32; i += 8) _rt += String.fromCharCode((_pt[i >> 5] >>> (24 - i % 32)) & 0xFF);
    return _rt;
}

function _Yt(x, _On) {
    x[_On >> 5] |= 0x80 << (24 - _On % 32);
    x[((_On + 64 >> 9) << 4) + 15] = _On;
    var w = Array(80);
    var _Z4 = 1732584193;
    var _g3 = -271733879;
    var c = -1732584194;
    var _Cd = 271733878;
    var e = -1009589776;
    for (var i = 0; i < x.length; i += 16) {
        var _Bt = _Z4;
        var _Ct = _g3;
        var _Dt = c;
        var _Et = _Cd;
        var __t = e;
        for (var _k3 = 0; _k3 < 80; _k3++) {
            if (_k3 < 16) w[_k3] = x[i + _k3];
            else w[_k3] = _Lt(w[_k3 - 3] ^ w[_k3 - 8] ^ w[_k3 - 14] ^ w[_k3 - 16], 1);
            var _f3 = _Jt(_Jt(_Lt(_Z4, 5), _0u(_k3, _g3, c, _Cd)), _Jt(_Jt(e, w[_k3]), _1u(_k3)));
            e = _Cd;
            _Cd = c;
            c = _Lt(_g3, 30);
            _g3 = _Z4;
            _Z4 = _f3;
        }
        _Z4 = _Jt(_Z4, _Bt);
        _g3 = _Jt(_g3, _Ct);
        c = _Jt(c, _Dt);
        _Cd = _Jt(_Cd, _Et);
        e = _Jt(e, __t);
    }
    return Array(_Z4, _g3, c, _Cd, e);
}

function _0u(_f3, _g3, c, _Cd) {
    if (_f3 < 20) return (_g3 & c) | ((~_g3) & _Cd);
    if (_f3 < 40) return _g3 ^ c ^ _Cd;
    if (_f3 < 60) return (_g3 & c) | (_g3 & _Cd) | (c & _Cd);
    return _g3 ^ c ^ _Cd;
}

function _1u(_f3) {
    return (_f3 < 20) ? 1518500249 : (_f3 < 40) ? 1859775393 : (_f3 < 60) ? -1894007588 : -899497514;
}

function _2u(_a1, _3u) {
    for (var index = 0; index < _3u.length; index++) {
        var _4u = _3u[index];
        if (_4u.pName == _a1) {
            return index;
        }
    }
    return -1;
}

function asset_get_index(_a1) {
    if (_2u(_a1, _Pn.GMObjects) >= 0) {
        return _2u(_a1, _Pn.GMObjects);
    }
    if (_2u(_a1, _Pn.GMRooms) >= 0) {
        return _2u(_a1, _Pn.GMRooms);
    }
    if (_2u(_a1, _Pn.Sprites) >= 0) {
        return _2u(_a1, _Pn.Sprites);
    }
    if (_2u(_a1, _Pn.Sounds) >= 0) {
        return _2u(_a1, _Pn.Sounds);
    }
    if (_2u(_a1,
            _Pn.Backgrounds) >= 0) {
        return _2u(_a1, _Pn.Backgrounds);
    }
    if (_2u(_a1, _Pn.Paths) >= 0) {
        return _2u(_a1, _Pn.Paths);
    }
    if (_2u(_a1, _Pn.Fonts) >= 0) {
        return _2u(_a1, _Pn.Fonts);
    }
    if (_2u(_a1, _Pn.Timelines) >= 0) {
        return _2u(_a1, _Pn.Timelines);
    }
    if (_2u(_a1, _Pn.Shaders) >= 0) {
        return _2u(_a1, _Pn.Shaders);
    }
    var _5u = Object.getOwnPropertyNames(g_pBuiltIn);
    for (var i = 0; i > _5u; i++) {
        if (_5u[i] == _a1) {
            return i;
        }
    }
    return -1;
}

function asset_get_type(_a1) {
    if (_2u(_a1, _Pn.GMObjects) >= 0) {
        return _Br;
    }
    if (_2u(_a1, _Pn.GMRooms) >= 0) {
        return _Er;
    }
    if (_2u(_a1, _Pn.Sprites) >= 0) {
        return _Cr;
    }
    if (_2u(_a1, _Pn.Sounds) >= 0) {
        return _Dr;
    }
    if (_2u(_a1, _Pn.Backgrounds) >= 0) {
        return _Fr;
    }
    if (_2u(_a1, _Pn.Paths) >= 0) {
        return _Gr;
    }
    if (_2u(_a1, _Pn.Fonts) >= 0) {
        return _Ir;
    }
    if (_2u(_a1, _Pn.Timelines) >= 0) {
        return _Jr;
    }
    if (_2u(_a1, _Pn.Shaders) >= 0) {
        return _Kr;
    }
    return -1;
}

function gamepad_is_supported() {
    return _m8._P9();
}

function gamepad_get_device_count() {
    return _m8._L9();
}

function gamepad_is_connected(_N9) {
    return _m8._W9(_N9);
}

function gamepad_get_button_threshold(_N9) {
    return _m8._z8(_N9);
}

function gamepad_set_button_threshold(_N9,
    _R9) {
    _m8._Q9(_N9, _R9);
}

function gamepad_get_axis_deadzone(_N9) {
    return _m8._x8(_N9);
}

function gamepad_set_axis_deadzone(_N9, _T9) {
    _m8._S9(_N9, _T9);
}

function gamepad_get_description(_N9) {
    return _m8._M9(_N9);
}

function gamepad_button_count(_N9) {
    return _m8._D8(_N9);
}

function gamepad_button_check(_N9, _F8) {
    return _m8._J8(_N9, _F8);
}

function gamepad_button_check_pressed(_N9, _F8) {
    return _m8._E8(_N9, _F8);
}

function gamepad_button_check_released(_N9, _F8) {
    return _m8._I8(_N9, _F8);
}

function gamepad_button_value(_N9, _F8) {
    return _m8._K8(_N9,
        _F8);
}

function gamepad_axis_count(_N9) {
    return _m8._L8(_N9);
}

function gamepad_axis_value(_N9, _N8) {
    return _m8._M8(_N9, _N8);
}

function gamepad_set_vibration(_N9, _6u, _7u) {}

function gamepad_set_color(_N9, _oh) {}

function gamepad_set_colour(_N9, _Z6) {}
var _8u = 1,
    _9u = 2,
    _au = 3,
    _bu = 4,
    _cu = 5,
    _du = 6,
    _eu = 7,
    _fu = 8,
    _gu = 9,
    _hu = 10,
    _iu = 11;

function display_get_gui_height() {
    var _ju = _ku;
    if (_ju < 0) _ju = window_get_height();
    return _ju;
}

function display_get_gui_width() {
    var _lu = _mu;
    if (_lu < 0) _lu = window_get_width();
    return _lu;
}

function display_set_gui_size(_j4,
    _k4) {
    _mu = _j4;
    _ku = _k4;
    _nu = false;
    _ou = 0;
    _pu = 0;
    _qu = 1;
    _ru = 1;
    if (_su) {
        _tu();
    }
}

function display_set_gui_maximise(_Ie, _Je, _uu, _vu) {
    _nu = true;
    _ou = 0;
    _pu = 0;
    _qu = 1;
    _ru = 1;
    _mu = -1;
    _ku = -1;
    if (_Ie != undefined) _qu = _Ie;
    if (_Je != undefined) _ru = _Je;
    if (_uu != undefined) _ou = _uu;
    if (_vu != undefined) _pu = _vu;
    if (_su) {
        _tu();
    }
}
var _wu = 96;

function display_get_dpi_x() {
    return _wu;
}
var _xu = 96;

function display_get_dpi_y() {
    return _xu;
}

function display_get_width() {
    return _yu();
}

function display_get_height() {
    return _zu()
}

function display_get_orientation() {
    return 0;
}

function draw_clear(_e7) {
    _Au(_07(_e7));
}
var draw_clear_alpha = _Bu;

function _Bu(_e7, __6) {
    _95._Cu();
    var _Du = [];
    _Du[0] = 1;
    _Du[1] = 0;
    _Du[2] = 0;
    _Du[3] = 1;
    _Du[4] = 0;
    _Du[5] = 0;
    _95._Eu(_Du[0], _Du[1], _Du[2], _Du[3], _Du[4], _Du[5]);
    if (!_95.clearRect || _e7 != 0 || __6 != 0) {
        _95.globalAlpha = __6;
        _95.fillStyle = _9h(_07(_e7), __6);
        _95.globalCompositeOperation = 'copy';
        _95.fillRect(_Fu, _Gu, _Hu, _Iu);
    } else {
        _95.clearRect(_Fu, _Gu, _Hu, _Iu);
    }
    _95._Ju();
}

function make_color_rgb(_Ku, _Lu, _Mu) {
    return (~~_Ku) | (_Lu << 8) | (_Mu << 16);
}

function make_color(_fb,
    _Nu, _Ou) {
    return make_color_rgb(_fb, _Nu, _Ou);
}
var make_colour_rgb = make_color_rgb;
var make_colour = make_colour;

function color_get_blue(_e7) {
    return (_e7 >> 16) & 0xff;
}
var colour_get_blue = color_get_blue;

function color_get_green(_e7) {
    return (_e7 >> 8) & 0xff;
}
var colour_get_green = color_get_green;

function color_get_red(_e7) {
    return (_e7 & 0xff);
}
var colour_get_red = color_get_red;

function _Pu(_e7) {
    var _Qu = 0.0;
    var _Ru = 0.0;
    var _8c = 0.0;
    var _E3 = 0.0;
    var _F3 = 0.0;
    var _Su = 0.0;
    var _Cd = 0.0;
    var __2 = 0.0;
    _Qu = (_e7 & 0xff) / 255.0;
    _Ru = ((_e7 >> 8) & 0xff) / 255.0;
    _8c = ((_e7 >> 16) & 0xff) / 255.0;
    __2 = _e3(_e3(_Qu, _Ru), _8c);
    _Su = _c3(_c3(_Qu, _Ru), _8c);
    _Cd = _Su - __2;
    if (_Su == 0) _F3 = 0.0;
    else _F3 = 1.0 * _Cd / _Su;
    if (_F3 == 0) _E3 = 0.0;
    else if (_Qu == _Su) _E3 = 60.0 * (_Ru - _8c) / _Cd;
    else if (_Ru == _Su) _E3 = 120.0 + 60.0 * (_8c - _Qu) / _Cd;
    else _E3 = 240.0 + 60.0 * (_Qu - _Ru) / _Cd;
    if (_E3 < 0) _E3 = _E3 + 360.0;
    var _X1 = (Math.floor(_Su * 255.0) & 0xff) << 16;
    var _Cb = (Math.floor(_F3 * 255.0) & 0xff) << 8;
    var h = (Math.floor(_E3 * 255.0 / 360.0)) & 0xff;
    return (_X1 | _Cb | h);
}

function color_get_hue(_e7) {
    return _Pu(_e7) & 0xff;
}
var colour_get_hue = color_get_hue;

function color_get_saturation(_e7) {
    return (_Pu(_e7) >> 8) & 0xff;
}
var colour_get_saturation = color_get_saturation;

function color_get_value(_e7) {
    return (_Pu(_e7) >> 16) & 0xff;
}
var colour_get_value = color_get_value;

function merge_color(_cg, _Ne, _nn) {
    var _fs = (_cg >> 16) & 0xff;
    var _hs = (_cg >> 8) & 0xff;
    var _js = _cg & 0xff;
    var _gs = (_Ne >> 16) & 0xff;
    var _is = (_Ne >> 8) & 0xff;
    var _ks = _Ne & 0xff;
    var _Tu = 1.0 - _nn;
    var _d3 = ~~(_fs * _Tu + _gs * _nn);
    var _Y4 = ~~(_hs * _Tu + _is * _nn);
    var _g3 = ~~(_js * _Tu + _ks * _nn);
    return ((_d3 << 16) & 0xff0000) | ((_Y4 << 8) & 0xff00) | (_g3 & 0xff);
}
var merge_colour = merge_color;

function make_color_hsv(_Uu, _Vu, _qe) {
    var _Qu = 0.0;
    var _Ru = 0.0;
    var _8c = 0.0;
    var _E3 = 0.0;
    var _F3 = 0.0;
    var _Su = 0.0;
    var _dn = 0.0;
    var _6d = 0.0;
    var _vt = 0.0;
    var _f3 = 0.0;
    var i = 0;
    var _8e;
    _E3 = _Uu * 360.0 / 255.0;
    if (_E3 == 360.0) _E3 = 0.0;
    _F3 = _Vu / 255.0;
    _Su = _qe / 255.0;
    if (_F3 == 0) {
        _Qu = _Su;
        _Ru = _Su;
        _8c = _Su;
    } else {
        _E3 = _E3 / 60.0;
        i = Math.floor(_E3);
        _dn = _E3 - i;
        _6d = _Su * (1.0 - _F3);
        _vt = _Su * (1.0 - (_F3 * _dn));
        _f3 = _Su * (1.0 - (_F3 * (1.0 - _dn)));
        switch (i) {
            case 0:
                {
                    _Qu = _Su;
                    _Ru = _f3;
                    _8c = _6d;
                }
                break;
            case 1:
                {
                    _Qu = _vt;
                    _Ru = _Su;
                    _8c = _6d;
                }
                break;
            case 2:
                {
                    _Qu = _6d;
                    _Ru = _Su;
                    _8c = _f3;
                }
                break;
            case 3:
                {
                    _Qu = _6d;
                    _Ru = _vt;
                    _8c = _Su;
                }
                break;
            case 4:
                {
                    _Qu = _f3;
                    _Ru = _6d;
                    _8c = _Su;
                }
                break;
            default:
                {
                    _Qu = _Su;
                    _Ru = _6d;
                    _8c = _vt;
                }
        }
    }
    _8e = Math.floor(_Qu * 255.0) | (Math.floor(_Ru * 255.0) << 8) | (Math.floor(_8c * 255.0) << 16);
    return _8e;
}
var make_colour_hsv = make_color_hsv;

function draw_set_alpha(__6) {
    if (__6 < 0) {
        __6 = 0;
    }
    if (__6 > 1) {
        __6 = 1;
    }
    _X6 = __6;
    _Wu = _9h(_Y6, _X6);
}

function draw_get_alpha() {
    return _X6;
}

function draw_get_color() {
    return _6r;
}
var draw_get_colour = draw_get_color;

function draw_set_color(_Z6) {
    _6r = _Z6;
    _Y6 = _07(_Z6);
    _Xu = _Yu(_Y6);
    _Wu = _9h(_Y6, _X6);
}
var draw_set_colour = draw_set_color;

function draw_roundrect(_v3, _w3, _S2, _T2, _Ke) {
    draw_roundrect_color_ext(_v3, _w3, _S2, _T2, 10, 10, _6r, _6r, _Ke);
}

function draw_roundrect_ext(_v3, _w3, _S2, _T2, _Zu, __u, _Ke) {
    draw_roundrect_color_ext(_v3, _w3, _S2, _T2, _Zu, __u, _6r, _6r, _Ke);
}

function draw_roundrect_color(_v3, _w3, _S2, _T2, _cg, _Ne, _Ke) {
    draw_roundrect_color_ext(_v3, _w3, _S2, _T2, 10, 10, _cg, _Ne, _Ke);
}
var draw_roundrect_colour = draw_roundrect_color;
var draw_roundrect_color_ext = _0v;
var draw_roundrect_colour_ext = _0v;

function _0v(_v3, _w3, _S2, _T2, _Zu, __u, _cg, _Ne, _Ke) {
    if (_T2 < _w3) {
        var _1v = _w3;
        _w3 = _T2;
        _T2 = _1v;
    }
    if (_S2 < _v3) {
        var _1v = _v3;
        _v3 = _S2;
        _S2 = _1v;
    }
    var width = _S2 - _v3;
    var height = _T2 - _w3;
    _2v = _Zu;
    _3v = __u;
    var _F4 = _95.globalAlpha = _X6;
    _95.beginPath();
    _95.moveTo(_v3 + _2v, _w3);
    _95.lineTo(_v3 + width - _2v, _w3);
    _95.quadraticCurveTo(_v3 + width, _w3, _v3 + width, _w3 + _3v);
    _95.lineTo(_v3 + width, _w3 + height - _3v);
    _95.quadraticCurveTo(_v3 + width, _w3 + height, _v3 + width - _2v, _w3 + height);
    _95.lineTo(_v3 + _2v, _w3 + height);
    _95.quadraticCurveTo(_v3, _w3 + height,
        _v3, _w3 + height - _3v);
    _95.lineTo(_v3, _w3 + _3v);
    _95.quadraticCurveTo(_v3, _w3, _v3 + _2v, _w3);
    _95.closePath();
    if (_Ke) {
        _95.strokeStyle = _9h(_07(_cg), 1.0);
        _95.stroke();
    } else {
        _95.fillStyle = _9h(_07(_cg), 1.0);
        _95.fill();
    }
}
var draw_rectangle = _4v;

function _4v(_v3, _w3, _S2, _T2, _Ke) {
    _v3 = ~~_v3;
    _w3 = ~~_w3;
    _S2 = ~~_S2;
    _T2 = ~~_T2;
    _95.globalAlpha = _X6;
    if (_Ke) {
        _95.lineWidth = 1;
        _95.strokeStyle = _Wu;
        _95._5v(_v3 + 0.5, _w3 + 0.5, (_S2 - _v3), (_T2 - _w3));
    } else {
        _95.fillStyle = _Wu;
        _95._6v(_v3, _w3, _S2 - _v3 + 1, _T2 - _w3 + 1);
    }
}
var draw_rectangle_color = _7v;
var draw_rectangle_colour = _7v;

function _7v(_v3, _w3, _S2, _T2, _cg, _Ne, _8v, _9v, _Ke) {
    var _F4 = _9h(_07(_cg), 1.0);
    _95.globalAlpha = _X6;
    if (_Ke) {
        _95.lineWidth = 1;
        _95.strokeStyle = _F4;
        _95._5v(_v3 + 0.5, _w3 + 0.5, (_S2 - _v3), (_T2 - _w3));
    } else {
        _95.fillStyle = _F4;
        _95._6v(_v3 + 0.5, _w3 + 0.5, (_S2 - _v3), (_T2 - _w3));
    }
}
var _dg = _av;

function _av(_v3, _w3, _S2, _T2, _cg, _Ne, _bv, _Ke) {
    _95.globalAlpha = _X6;
    _95.lineWidth = 1;
    var _Oe = _9h(_07(_cg), 1.0);
    var _Pe = _9h(_07(_Ne), 1.0);
    var _cv;
    if (_bv) {
        _cv = _95.createLinearGradient(_v3, _w3, _v3, _T2);
    } else {
        _cv = _95.createLinearGradient(_v3,
            _w3, _S2, _w3);
    }
    _cv.addColorStop(0, _Oe);
    _cv.addColorStop(1, _Pe);
    if (_Ke) {
        _95.strokeStyle = _cv;
        _95._5v(_v3 + 0.5, _w3 + 0.5, _S2 - _v3, _T2 - _w3);
    } else {
        _95.fillStyle = _cv;
        _95._6v(_v3 + 0.5, _w3 + 0.5, _S2 - _v3, _T2 - _w3);
    }
}
var draw_point = _dv;

function _dv(_h2, _i2) {
    _95.globalAlpha = _X6;
    _95.fillStyle = _Wu;
    _95._6v(_h2, _i2, 1, 1);
}

function draw_line_width(_v3, _w3, _S2, _T2, _Va) {
    _95.globalAlpha = _X6;
    _95.strokeStyle = _Xu;
    _95.lineWidth = _Va;
    _95._ev();
    _95._fv(_v3 + 0.5, _w3 + 0.5);
    _95._gv(_S2 + 0.5, _T2 + 0.5);
    _95._hv();
    _95._iv();
    _95._6v(_S2, _T2, 1, 1);
}

function draw_line(_v3, _w3, _S2, _T2) {
    draw_line_width(_v3, _w3, _S2, _T2, 1);
}
var draw_getpixel = _jv;
var draw_getpixel_ext = _kv;

function _jv(_h2, _i2) {
    return _kv(_h2, _i2) & 0x00ffffff;
}

function _kv(_h2, _i2) {
    var _lv = canvas.width / _mv;
    var _nv = canvas.height / _ov;
    var _F4 = _pv(canvas, _h2 * _lv, _i2 * _nv);
    return _F4;
}
var draw_triangle = _qv;

function _qv(_v3, _w3, _S2, _T2, _Ki, _Li, _Ke) {
    _v3 += 0.5;
    _w3 += 0.5;
    _S2 += 0.5;
    _T2 += 0.5;
    _Ki += 0.5;
    _Li += 0.5;
    _95.globalAlpha = _X6;
    _95.lineWidth = 1;
    if (_Ke) {
        _95.strokeStyle = _Wu;
        _95._ev();
        _95._fv(_v3, _w3);
        _95._gv(_S2,
            _T2);
        _95._gv(_Ki, _Li);
        _95._gv(_v3, _w3);
        _95._iv();
        _95._hv();
    } else {
        _95.strokeStyle = _Wu;
        _95.lineJoin = "bevel";
        _95.fillStyle = _Wu;
        _95._ev();
        _95._fv(_v3, _w3);
        _95._gv(_S2, _T2);
        _95._gv(_Ki, _Li);
        _95._gv(_v3, _w3);
        _95._rv();
        _95._iv();
        _95._hv();
        _95.lineJoin = "miter";
    }
}
var draw_triangle_color = _sv;
var draw_triangle_colour = _sv;

function _sv(_v3, _w3, _S2, _T2, _Ki, _Li, _cg, _Ne, _8v, _Ke) {
    var _Oe = _Yu(_07(_cg) | 0xff000000);
    _v3 += 0.5;
    _w3 += 0.5;
    _S2 += 0.5;
    _T2 += 0.5;
    _Ki += 0.5;
    _Li += 0.5;
    _95.globalAlpha = _X6;
    _95.lineWidth = 1;
    if (_Ke) {
        _95.strokeStyle = _Oe;
        _95._ev();
        _95._fv(_v3, _w3);
        _95._gv(_S2, _T2);
        _95._gv(_Ki, _Li);
        _95._gv(_v3, _w3);
        _95._iv();
        _95._hv();
    } else {
        _95.strokeStyle = _Oe;
        _95.lineJoin = "bevel";
        _95.fillStyle = _Oe;
        _95._ev();
        _95._fv(_v3, _w3);
        _95._gv(_S2, _T2);
        _95._gv(_Ki, _Li);
        _95._gv(_v3, _w3);
        _95._rv();
        _95._iv();
        _95._hv();
        _95.lineJoin = "miter";
    }
}
var _6f = _tv;

function _tv(_v3, _w3, _S2, _T2, _nn, _uv, _vv, _wv, _xv, _yv, _zv, _Av) {
    var _Bv;
    var _Cv;
    var _Dv;
    var _Ev;
    var _F4;
    if (_zv) {
        draw_rectangle_color(_v3, _w3, _S2, _T2, _uv, _uv, _uv, _uv, false);
        if (_Av) {
            draw_rectangle_color(_v3,
                _w3, _S2, _T2, _Se, _Se, _Se, _Se, true);
        }
    }
    if (_nn < 0) {
        _nn = 0;
    }
    if (_nn > 100) {
        _nn = 100;
    }
    var _Fv = _nn / 100;
    switch (_yv) {
        case 0:
            _Bv = _v3;
            _Dv = _w3;
            _Cv = _v3 + _Fv * (_S2 - _v3);
            _Ev = _T2;
            break;
        case 1:
            _Bv = _S2 - _Fv * (_S2 - _v3);
            _Dv = _w3;
            _Cv = _S2;
            _Ev = _T2;
            break;
        case 2:
            _Bv = _v3;
            _Dv = _w3;
            _Cv = _S2;
            _Ev = _w3 + _Fv * (_T2 - _w3);
            break;
        case 3:
            _Bv = _v3;
            _Dv = _T2 - _Fv * (_T2 - _w3);
            _Cv = _S2;
            _Ev = _T2;
            break;
        default:
            _Bv = _v3;
            _Dv = _w3;
            _Cv = _v3 + _Fv * (_S2 - _v3);
            _Ev = _T2;
            break;
    }
    if (_nn > 50) {
        _F4 = _es(_wv, _xv, (_nn - 50.0) / 50.0);
    } else {
        _F4 = _es(_vv, _wv, _nn / 50.0);
    }
    draw_rectangle_color(_Bv, _Dv,
        _Cv, _Ev, _F4, _F4, _F4, _F4, false);
    if (_Av) {
        draw_rectangle_color(_Bv, _Dv, _Cv, _Ev, _Se, _Se, _Se, _Se, true);
    }
}

function draw_healthbar(_v3, _w3, _S2, _T2, _nn, _uv, _vv, _xv, _yv, _zv, _Av) {
    var _F4 = merge_color(_vv, _xv, 0.5);
    _6f(_v3, _w3, _S2, _T2, _nn, _uv, _vv, _F4, _xv, _yv, _zv, _Av);
}

function draw_set_circle_precision(_Gv) {}
var draw_arrow = _Hv;

function _Hv(_03, _13, _23, _33, size) {
    var _Iv = Math.sqrt(((_23 - _03) * (_23 - _03)) + ((_33 - _13) * (_33 - _13)));
    if (_Iv != 0) {
        if (size > _Iv) {
            size = _Iv;
        }
        var _l3 = size * (_23 - _03) / _Iv;
        var _n3 = size * (_33 - _13) / _Iv;
        draw_line(_03,
            _13, _23, _33);
        draw_triangle(_23 - _l3 - _n3 / 3.0, _33 - _n3 + _l3 / 3.0, _23, _33, _23 - _l3 + _n3 / 3.0, _33 - _n3 - _l3 / 3.0, false);
    }
}

function draw_ellipse(_v3, _w3, _S2, _T2, _Ke) {
    draw_ellipse_color(_v3, _w3, _S2, _T2, _6r, _6r, _Ke);
}
var draw_ellipse_color = _Jv;
var draw_ellipse_colour = _Jv;

function _Jv(x, y, _03, _13, _cg, _Ne, _Kv) {
    var w = _03 - x;
    var h = _13 - y;
    var _Lv = 0.5522848;
    _Mv = (w / 2) * _Lv, _Nv = (h / 2) * _Lv, _Ov = x + w, _Pv = y + h, _Qv = x + w / 2, _Rv = y + h / 2;
    _95.beginPath();
    _95.moveTo(x, _Rv);
    _95.bezierCurveTo(x, _Rv - _Nv, _Qv - _Mv, y, _Qv, y);
    _95.bezierCurveTo(_Qv + _Mv, y, _Ov,
        _Rv - _Nv, _Ov, _Rv);
    _95.bezierCurveTo(_Ov, _Rv + _Nv, _Qv + _Mv, _Pv, _Qv, _Pv);
    _95.bezierCurveTo(_Qv - _Mv, _Pv, x, _Rv + _Nv, x, _Rv);
    _95.closePath();
    var _Oe = _9h(_07(_cg), 1.0);
    var _Pe = _9h(_07(_Ne), 1.0);
    if (w <= 0) w *= -1;
    if (h <= 0) h *= -1;
    var _cv = _95.createRadialGradient(_Qv, _Rv, 0, _Qv, _Rv, min(w / 2, h / 2));
    _cv.addColorStop(0, _Oe);
    _cv.addColorStop(1, _Pe);
    _95.globalAlpha = _X6;
    if (_Kv) {
        _95.lineWidth = 1;
        _95.strokeStyle = _cv;
        _95.stroke();
    } else {
        _95.fillStyle = _cv;
        _95.fill();
    }
}
var draw_circle_color = _Sv;
var draw_circle_colour = _Sv;

function _Sv(_h2,
    _i2, _fb, _cg, _Ne, _Ke) {
    _95.globalAlpha = _X6;
    var _Oe = _9h(_07(_cg), 1.0);
    var _Pe = _9h(_07(_Ne), 1.0);
    var _cv = _95.createRadialGradient(_h2, _i2, 0, _h2, _i2, _fb);
    _cv.addColorStop(0, _Oe);
    _cv.addColorStop(1, _Pe);
    _95._ev();
    if (_Ke) {
        _95.lineWidth = 1;
        _95.strokeStyle = _cv;
        _95._Tv(_h2, _i2, _fb, 0, Math.PI * 2, true);
        _95._iv();
    } else {
        _95.fillStyle = _cv;
        _95._Tv(_h2, _i2, _fb, 0, Math.PI * 2, false);
        _95._rv();
    }
    _95._hv();
}

function draw_circle(_h2, _i2, _fb, _Ke) {
    draw_circle_color(_h2, _i2, _fb, _6r, _6r, _Ke);
}
var draw_point_color = _Uv;
var draw_point_colour = _Uv;

function _Uv(_h2, _i2, _e7) {
    var _Oe = _9h(_07(_e7), 1.0);
    _95.globalAlpha = _X6;
    _95.fillStyle = _Oe;
    _95._6v(_h2, _i2, 1, 1);
}
var draw_line_width_color = _Vv;
var draw_line_width_colour = _Vv;

function _Vv(_v3, _w3, _S2, _T2, _Va, _cg, _Ne) {
    _95.globalAlpha = _X6;
    var _Oe = _9h(_07(_cg), 1.0);
    var _Pe = _9h(_07(_Ne), 1.0);
    var _cv = _95.createLinearGradient(_v3, _w3, _S2, _T2);
    _cv.addColorStop(0, _Oe);
    _cv.addColorStop(1, _Pe);
    _95.strokeStyle = _cv;
    _95._ev();
    _95._fv(_v3 + 0.5, _w3 + 0.5);
    _95._gv(_S2 + 0.5, _T2 + 0.5);
    _95.lineWidth = _Va;
    _95._iv();
    _95._hv();
}

function draw_line_color(_v3,
    _w3, _S2, _T2, _cg, _Ne) {
    draw_line_width_color(_v3, _w3, _S2, _T2, 1, _cg, _Ne);
}
var draw_line_colour = draw_line_color;

function draw_button(_v3, _w3, _S2, _T2, _Wv) {
    _v3 += 1.5;
    _w3 += 1.5;
    _S2 -= 0.5;
    _T2 -= 0.5;
    if (_Wv) {
        draw_line_width_color(_v3, _w3, _S2, _w3, 2, 0xffffff, 0xffffff);
        draw_line_width_color(_v3, _w3, _v3, _T2, 2, 0xffffff, 0xffffff);
        draw_line_width_color(_S2, _w3, _S2, _T2, 2, 0x404040, 0x404040);
        draw_line_width_color(_S2, _T2, _v3, _T2, 2, 0x404040, 0x404040);
    } else {
        draw_line_width_color(_v3, _w3, _S2, _w3, 2, 0x404040, 0x404040);
        draw_line_width_color(_v3,
            _w3, _v3, _T2, 2, 0x404040, 0x404040);
        draw_line_width_color(_S2, _w3, _S2, _T2, 2, 0xffffff, 0xffffff);
        draw_line_width_color(_S2, _T2, _v3, _T2, 2, 0xffffff, 0xffffff);
    }
    draw_rectangle_color(_v3, _w3, _S2, _T2, _6r, _6r, _6r, _6r, false);
}

function _Lg(x, y, _03, _13, _Oe, _Pe, _Kv) {
    draw_ellipse_color(x, y, _03, _13, _Oe, _Pe, _Kv);
}

function draw_set_blend_mode(_Xv) {
    switch (_Xv) {
        case 1:
            draw_set_blend_mode_ext(_cu, _9u);
            break;
        case 2:
            draw_set_blend_mode_ext(_cu, _bu);
            break;
        case 3:
            draw_set_blend_mode_ext(_8u, _bu);
            break;
        default:
            draw_set_blend_mode_ext(_cu,
                _du);
            break;
    }
}
var draw_set_blend_mode_ext = _Yv;

function _Yv(src, _Zv) {
    _56("Blend modes only available in WebGL mode.");
}

function draw_texture_flush() {}

function draw_enable_drawevent(_Xk) {
    __v = _Xk;
}

function skeleton_animation_set(_td, _a1) {
    var _0w = _td._M4();
    if (_0w) {
        _0w._01(_a1);
        _td.image_index = 0;
    }
}

function skeleton_animation_mix(_td, _1w, _2w, _n1) {
    var _0w = _td._M4();
    if (_0w) {
        _0w._k1(_1w, _2w, _n1);
    }
}

function skeleton_animation_set_ext(_td, _24, _c1) {
    var _0w = _td._M4();
    if (_0w) {
        _0w._b1(_24, _c1);
    }
}

function skeleton_animation_get_ext(_td,
    _c1) {
    var _0w = _td._M4();
    if (_0w) {
        return _0w._Y3(_c1);
    }
    return "";
}

function skeleton_attachment_set(_td, _3w, _4w) {
    var _0w = _td._M4();
    if (_0w) {
        _0w._p1(_3w, _4w);
    }
}

function skeleton_attachment_get(_td, _3w) {
    var _0w = _td._M4();
    if (_0w) {
        return _0w._34(_3w);
    }
    return "";
}

function skeleton_attachment_create(_td, _a1, _5w, _F1, _G1, _H1, _I1, _J1, _K1) {
    var _0w = _td._M4();
    if (_0w) {
        if (sprite_exists(_5w) && (_F1 >= 0)) {
            var _7p = _le._O3(_5w);
            _0w._D1(_a1, _7p, _F1, _G1, _H1, _I1, _J1, _K1);
        }
    }
}

function skeleton_skin_set(_td, _a1) {
    var _0w = _td._M4();
    if (_0w) {
        _0w._11(_a1);
    }
}

function skeleton_skin_get(_td) {
    var _0w = _td._M4();
    if (_0w) {
        return _0w._X3();
    }
    return "";
}

function skeleton_animation_get(_td) {
    return skeleton_animation_get_ext(_td, 0);
}

function skeleton_animation_get_duration(_td, _B4) {
    var _0w = _td._M4();
    if (_0w) {
        return _0w._14(_B4);
    }
    return 0.0;
}

function skeleton_animation_clear(_td, _c1) {
    var _0w = _td._M4();
    if (_0w) {
        _0w.__3(_c1);
    }
}

function skeleton_collision_draw_set(_td, _f2) {
    var _0w = _td._M4();
    if (_0w) {
        _0w._e2(_f2 > 0.5 ? true : false);
    }
}

function skeleton_bone_data_get(_td, _I3, _J3) {
    var _0w = _td._M4();
    if (_0w) {
        _0w._H3(_I3, _J3);
    }
}

function skeleton_bone_data_set(_td, _I3, _J3) {
    var _0w = _td._M4();
    if (_0w) {
        _0w._P3(_I3, _J3);
    }
}

function skeleton_bone_state_get(_td, _I3, _J3) {
    var _0w = _td._M4();
    if (_0w) {
        _0w._Q3(_I3, _J3);
    }
}

function skeleton_bone_state_set(_td, _I3, _J3) {
    var _0w = _td._M4();
    if (_0w) {
        _0w._W3(_I3, _J3);
    }
}

function draw_skeleton(_5w, _6w, _7w, _8w, _h2, _i2, _Ie, _Je, _K1, _Z6, __6) {
    var _7p = _le._O3(_5w);
    if (_7p != null && _7p != undefined) {
        if (_7p._9w) {
            _7p._9w._A4(_6w, _7w, _8w, _h2, _i2, _Ie, _Je, _K1, _Z6, __6);
        }
    }
}

function draw_skeleton_time(_5w,
    _6w, _7w, _E2, _h2, _i2, _Ie, _Je, _K1, _Z6, __6) {
    var _7p = _le._O3(_5w);
    if (_7p != null && _7p != undefined) {
        if (_7p._9w) {
            _7p._9w._K4(_6w, _7w, _E2, _h2, _i2, _Ie, _Je, _K1, _Z6, __6);
        }
    }
}

function draw_skeleton_collision(_5w, _6w, _8w, _h2, _i2, _Ie, _Je, _K1, _Z6) {
    var _7p = _le._O3(_5w);
    if (_7p != null && _7p != undefined) {
        if (_7p._9w) {
            _7p._9w._P4(_6w, _8w, _h2, _i2, _Ie, _Je, _K1, _Z6);
        }
    }
}

function skeleton_animation_list(_5w, __5) {
    var _7p = _le._O3(_5w);
    if (_7p != null && _7p != undefined) {
        if (_7p._9w) {
            _7p._9w._Z5(__5);
        }
    }
}

function skeleton_skin_list(_5w, __5) {
    var _7p = _le._O3(_5w);
    if (_7p != null && _7p != undefined) {
        if (_7p._9w) {
            _7p._9w._06(__5);
        }
    }
}

function skeleton_slot_data(_5w, __5) {
    var _7p = _le._O3(_5w);
    if (_7p != null && _7p != undefined) {
        if (_7p._9w) {
            _7p._9w._16(__5);
        }
    }
}

function _aw(_bw) {
    _cw = (_bw > 0.5) ? true : false;
}

function _dw(_ew) {
    _fw = _ew;
}

function _gw() {
    return _fw;
}

function _hw(_iw, _jw) {
    if ((_iw.status < 200) || (_iw.status >= 300)) {
        _jw._so = _kw;
        _jw._lw = "";
    } else {
        _jw._so = _mw;
        try {
            _jw._lw = _iw.responseText;
        } catch (e) {
            _jw._lw = "";
        }
    }
}

function _nw(_iw, _jw) {
    _jw._so = _mw;
    try {
        _jw._lw = _iw.responseText;
    } catch (e) {
        _jw._lw = "";
    }
}

function _ow(_iw, _pw) {
    if (_iw.readyState != 4) return;
    var _oq = _qo(_iw);
    if (_oq) {
        _oq._qw = _iw.status;
        _oq._ro = true;
        _oq._rw = ds_map_create();
        var _sw = _iw.getAllResponseHeaders().split("\r\n");
        for (var _X2 in _sw) {
            if (!_sw.hasOwnProperty(_X2)) continue;
            var _tw = _sw[_X2].split(": ");
            if (_tw.length == 2) {
                ds_map_add(_oq._rw, _tw[0], _tw[1]);
            }
        }
        if (_pw) {
            _pw(_iw, _oq);
        }
    }
}

function _uw(_Mg) {
    var _vw = {};
    _Bh._1b(_ww, _Mg, _xw, _vw);
    setTimeout(function() {
            var _oq = _qo(_vw);
            if (_oq) {
                _oq._qw = 404;
                _oq._ro = true;
                _oq._so = _kw;
                _oq._lw = "";
            }
        },
        500);
    return _ww++;
}

function _yw(_y7, _Mg, _zw, _Rh, _pw, _Aw) {
    try {
        var _Bw = _Cw(_Mg, _zw);
        _Bh._1b(_ww, _Mg, _xw, _Bw._Dw);
        if (_Aw !== undefined) {
            _Bw._Dw.responseType = _Aw;
        }
        if (_Bw._Ew) {
            _Fw(_y7, _Mg, _zw, _Rh, _Bw._Dw, _Bw._Gw, _pw);
        } else {
            _Hw(_y7, _Mg, _zw, _Rh, _Bw._Dw, _pw);
        }
    } catch (e) {
        return _uw(_Mg);
    }
    return _ww++;
}

function _Cw(_Mg, _zw) {
    var _Bw = {
        _Dw: null,
        _Gw: true,
        _Ew: false
    };
    if ((_Mg.substring(0, 7) != "http://") && (_Mg.substring(0, 8) != "https://")) {
        _Bw._Gw = false;
    } else {
        var _Iw = "";
        if (_Mg.substring(0, 7) == "http://") {
            _Iw = _Mg.substring(7);
        }
        if (_Mg.substring(0, 8) == "https://") {
            _Iw = _Mg.substring(8);
        }
        if (_Iw.substring(0, document.domain.length) == document.domain) {
            _Bw._Gw = false;
        }
    }
    if ((_Bw._Gw) && (window.XDomainRequest)) {
        _Bw._Dw = new XDomainRequest();
        _Bw._Gw = true;
        _Bw._Ew = true;
    } else {
        if (window.XMLHttpRequest) {
            _Bw._Dw = new XMLHttpRequest();
            _Bw._Gw = false;
            _Bw._Ew = (_Jw == _Kw) && (_Lw._Mw <= 9.0);
        } else if (window.ActiveXObject) {
            if (new ActiveXObject("Microsoft.XMLHTTP")) {
                _Bw._Dw = new ActiveXObject("Microsoft.XMLHTTP");
            } else {
                _Bw._Dw = new ActiveXObject("Msxml2.XMLHTTP");
            }
        }
    }
    return _Bw;
}

function _Hw(_y7, _Mg, _zw, _Rh, _iw, _pw) {
    try {
        _iw.open(_y7, _Mg, true);
        if (_zw !== null) {
            for (var _tw in _zw) {
                if (!_zw.hasOwnProperty(_tw)) continue;
                try {
                    _iw.setRequestHeader(_zw[_tw]._Fc, _zw[_tw].value);
                } catch (e) {
                    debug("Unable to set request header " + _zw[_tw]._Fc + ":" + _zw[_tw].value + " " + e.message);
                }
            }
        } else if (_y7 == "POST") {
            _iw.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        }
        _iw.onreadystatechange = function() {
            _ow(_iw, _pw);
        };
        _iw.send(_Rh);
    } catch (e) {
        debug(e.message);
    }
}

function _Fw(_y7,
    _Mg, _zw, _Rh, _iw, _Nw, _pw) {
    _iw.open(_y7, _Mg);
    _iw.ontimeout = function(_Bp) {
        _Ow(_Bp, _iw);
    };
    _iw.onerror = function(_Bp) {
        _Ow(_Bp, _iw);
    };
    if (_Nw) {
        _iw.onload = function(_Bp) {
            _Pw(_Bp, _iw, 200);
        };
    } else {
        _iw.onload = function(_Bp) {};
        _iw.onreadystatechange = function() {
            if (_iw.readyState == 4) {
                _Pw(null, _iw, _iw.status);
            }
        }
    }
    if (_zw !== null) {
        for (var _tw in _zw) {
            if (!_zw.hasOwnProperty(_tw)) continue;
            try {
                _iw.setRequestHeader(_zw[_tw]._Fc, _zw[_tw].value);
            } catch (e) {
                debug("Unable to set request header " + _zw[_tw]._Fc + ":" + _zw[_tw].value + " " + e.message);
            }
        }
    }
    _iw._Qw = function() {};
    _iw.send(_Rh);
}

function _Pw(_Bp, _iw, _Rw) {
    var _oq = _qo(_iw);
    if (_oq) {
        _oq._ro = true;
        if ((_Rw >= 200) && (_Rw < 300)) {
            _oq._so = _mw;
            _oq._qw = _Rw;
        } else {
            _oq._so = _kw;
            _oq._qw = 404;
        }
        _oq._lw = _iw.responseText;
        _oq._rw = -1;
    }
}

function _Ow(_Bp, _iw) {
    var _oq = _qo(_iw);
    if (_oq) {
        _oq._ro = true;
        _oq._so = _kw;
        _oq._lw = "";
        _oq._qw = 404;
        _oq._rw = -1;
    }
}

function http_get(_Mg) {
    return _yw("GET", _Mg, null, "", _hw);
}

function http_get_file(_Mg, _Sw) {
    var _Tw = function(_iw, _jw) {
        if (_iw.response) {
            try {
                var _Uw = String.fromCharCode.apply(null, new Uint8Array(_iw.response));
                _Mc(_Sw, _Uw);
                _jw._so = _mw;
                _jw._lw = _Sw;
            } catch (e) {
                debug(e.message);
                _jw._so = _kw;
            }
        } else {
            _jw._so = _kw;
        }
    };
    return _yw("GET", _Mg, null, "", _Tw, 'arraybuffer');
}

function http_post_string(_Mg, _Tq) {
    if (!_Tq) _Tq = "";
    return _yw('POST', _Mg, null, _Tq, _hw);
}

function http_request(_Mg, _Vw, _Ww, _Xw) {
    var _Yw = [];
    var _M3 = _N3._O3(_Ww);
    for (var _Fc in _M3) {
        if (_M3.hasOwnProperty(_Fc)) {
            _Yw.push({
                _Fc: _Fc,
                value: _M3[_Fc]
            });
        }
    }
    if (typeof(_Xw) === 'number') {
        return _Zw(_Mg, _Vw, _Yw, _Xw);
    } else {
        if (!_Xw) {
            _Xw = "";
        }
        return _yw(_Vw, _Mg, _Yw, _Xw, _nw);
    }
}

function _Zw(_Mg,
    _Vw, _zw, _Xw) {
    var _F5 = __w._O3(_vb(_Xw));
    if (!_F5) {
        return _uw(_Mg);
    } else if (_F5._0x != 0) {
        var _1x = new Uint8Array(_F5._2x, 0, _F5._0x);
        return _yw(_Vw, _Mg, _zw, _1x, _nw);
    } else {
        var _3x = function(_iw, _jw) {
            _jw._lw = _F5._0x;
            if (_iw.response) {
                _jw._so = _mw;
                var _Ih = new Uint8Array(_iw.response);
                for (var i = 0, _On = _Ih.length; i < _On; ++i) {
                    _F5._4x(_5x, _Ih[i]);
                }
                _jw._lw = _Ih.length;
            } else {
                _jw._so = _kw;
            }
        };
        return _yw(_Vw, _Mg, _zw, _Xw, _3x, 'arraybuffer');
    }
};
var _6x = -1,
    _7x = 0,
    _8x = 1,
    _9x = 2,
    _ax = 3,
    _bx = 4;
var _cx = -3,
    _dx = -2,
    _ex = -1,
    _fx = 0,
    _gx = 1,
    _hx = 2;
var _ix = -2,
    _jx = -1,
    _kx = 0,
    _lx = 1,
    _mx = 2,
    _nx = 3;
var _ox = 0,
    _px = 1,
    _qx = 2,
    _rx = 3,
    _sx = 4;
var _tx = -1,
    _ux = 0;

function iap_store_status() {
    return iap_status();
}

function iap_event_queue() {
    _56("iap_event_queue()");
}

function iap_product_status() {
    _56("iap_product_status()");
}

function iap_is_purchased() {
    _56("iap_is_purchased()");
}

function iap_is_downloaded() {
    _56("iap_is_downloaded()");
}

function iap_product_files() {
    _56("iap_product_files()");
}

function iap_files_purchased() {
    _56("iap_files_purchased()");
}
var _vx = [];
var _wx = [];
var _xx = [];
var _yx = [];
var _zx = _ix;

function _Ax() {
    _Bx({
        type: _ox,
        status: _tx
    });
};

function _Cx() {
    _Bx({
        type: _sx,
        _9e: 0
    });
};

function _Dx() {
    return -1;
}

function _Ex() {
    return 0;
}

function _Fx() {
    return 0;
}

function _Gx() {
    this.type = _6x;
    this.data = null;
};

function _Hx(_J3) {
    this._Ix = "";
    this.title = "";
    this.description = "";
    this._Jx = "";
    this.type = "";
    this._Kx = _dx;
    this._Lx = false;
    if ((_J3 != null) && (_J3 != undefined)) {
        var id = ds_map_find_value(_J3, "id");
        var title = ds_map_find_value(_J3, "title");
        var description = ds_map_find_value(_J3, "description");
        var _Jx = ds_map_find_value(_J3,
            "price");
        var type = ds_map_find_value(_J3, "type");
        if (id) {
            this._Ix = id;
        }
        if (title) {
            this.title = title;
        }
        if (description) {
            this.description = description;
        }
        if (_Jx) {
            this._Jx = _Jx;
        }
        if (type) {
            this.type = type;
        }
    }
};
_Hx.prototype._Mx = function(_Nx) {
    var id = _Nx["id"];
    var title = _Nx["title"];
    var description = _Nx["description"];
    var _Jx = _Nx["price"];
    var type = _Nx["type"] || _Nx["itemType"];
    if (id) {
        this._Ix = id;
    }
    if (title) {
        this.title = title;
    }
    if (description) {
        this.description = description;
    }
    if (_Jx) {
        this._Jx = _Jx;
    }
    if (type) {
        this.type = type;
    }
};
_Hx.prototype._Ox = function(_J3) {
    ds_map_add(_J3, "id", this._Ix);
    ds_map_add(_J3, "title", this.title);
    ds_map_add(_J3, "description", this.description);
    ds_map_add(_J3, "price", this._Jx);
    ds_map_add(_J3, "type", this.type);
    ds_map_add(_J3, "verified", (this._Lx == true) ? 1.0 : 0.0);
};

function _Px() {
    this._Qx = "";
    this._Ix = "";
    this._Rx = "";
    this._Sx = "";
    this._Tx = "";
    this._Ux = 0;
    this._Vx = 0;
    this._Kx = _dx;
};
_Px.prototype._Ox = function(_J3) {
    ds_map_add(_J3, "product", this._Ix);
    ds_map_add(_J3, "order", this._Qx);
    ds_map_add(_J3, "receipt", this._Rx);
    ds_map_add(_J3, "token",
        this._Sx);
    ds_map_add(_J3, "payload", this._Tx);
    ds_map_add(_J3, "status", this._Kx);
    ds_map_add(_J3, "time", this._Vx);
    ds_map_add(_J3, "response", this._Ux);
};

function _Wx(_Xx) {
    switch (_Xx.type) {
        case _7x:
            {
                _zx = _kx;
                _Ax(_vx);
            }
            break;
        case _8x:
            {
                _zx = _nx;
                _Cx();
            }
            break;
        case _9x:
            {
                _zx = _mx;
                _Dx(_Xx.product, _Xx._Yx);
            }
            break;
        case _ax:
            {
                _zx = _mx;
                _Ex(_Xx.product);
            }
            break;
        case _bx:
            {
                _zx = _mx;
                _Fx(_Xx.product);
            }
            break;
        default:
            {
                _zx = _lx;
            }
            break;
    }
}

function _Zx(_Xx) {
    switch (_zx) {
        case _ix:
        case _jx:
            if (_Xx.type == _7x) {
                _Wx(_Xx);
            } else {
                debug("BILLING: Request ignored; Store is not available\n");
            }
            break;
        case _kx:
        case _mx:
            {
                debug("BILLING: Request deferred, store isn't available right now\n");
                _yx.push(_Xx);
            }
            break;
        case _lx:
            if (_Xx.type == _7x) {
                debug("BILLING: Activate request ignored; Store has already loaded\n");
            } else {
                _Wx(_Xx);
            }
            break;
    }
}

function _Bx(_Bp) {
    _xx.push(_Bp);
}

function __x(_Bp) {
    _Bp.map = ds_map_create();
    ds_map_add(_Bp.map, "type", _ox);
    ds_map_add(_Bp.map, "status", _Bp.status);
}

function _0y(_Bp) {
    _Bp.map = ds_map_create();
    ds_map_add(_Bp.map, "type", _sx);
    ds_map_add(_Bp.map, "result", _Bp._9e);
}

function _1y(_Bp) {
    var product = null;
    var _2y = -1;
    var _Lc = JSON.parse(_Bp._Kc);
    _2y = _3y(_Lc["productId"]);
    if (_2y < 0) {
        product = new _Hx();
        product._Ix = _Lc["productId"];
        _vx.push(product);
        _2y = _vx.length - 1;
    } else {
        product = _vx[_2y];
    }
    product._Lx = true;
    product._Kx = _ex;
    if (_Lc["title"]) {
        product.title = _Lc["title"];
    }
    if (_Lc["price"]) {
        product._Jx = _Lc["price"];
    }
    if (_Lc["type"]) {}
    if (_Lc["description"]) {
        product.description = _Lc["description"];
    }
    if (_Lc["price_currency_code"]) {}
    _Bp.map = ds_map_create();
    ds_map_add(_Bp.map, "type", _px);
    ds_map_add(_Bp.map,
        "product", product._Ix);
    ds_map_add(_Bp.map, "index", _2y);
}

function _4y(_Bp) {
    var _Lc = JSON.parse(_Bp._Kc);
    var _Yx = -1;
    if ((_Lc["purchaseIndex"] != null) && (_Lc["purchaseIndex"] != undefined)) {
        _Yx = _Lc["purchaseIndex"];
    }
    var _5y = null;
    if (_Yx != -1) {
        _5y = _wx[_Yx];
    } else {
        _5y = new _Px();
        _wx.push(_5y);
        _Yx = _wx.length - 1;
    }
    if (_Lc["orderId"]) {
        _5y._Qx = _Lc["orderId"];
    }
    if (_Lc["productId"]) {
        _5y._Ix = _Lc["productId"];
    }
    if (_Lc["purchaseTime"]) {
        _5y._Vx = _Lc["purchaseTime"];
    }
    if ((_Lc["purchaseState"] != null) && (_Lc["purchaseState"] != undefined)) {
        _5y._Kx = _Lc["purchaseState"];
    }
    if (_Lc["purchaseToken"]) {
        _5y._Sx = _Lc["purchaseToken"];
    }
    if (_Lc["response"]) {
        _5y._Ux = _Lc["response"];
    }
    if (_Lc["receipt"]) {
        _5y._Rx = _Lc["receipt"];
    }
    _Bp.map = ds_map_create();
    ds_map_add(_Bp.map, "type", _qx);
    ds_map_add(_Bp.map, "index", _Yx);
    ds_map_add(_Bp.map, "response", _5y._Ux);
}

function _6y(_Bp) {
    var _Lc = JSON.parse(_Bp._Kc);
    var _7y = null;
    var _Sx = null;
    var _8y = 0.0;
    if (_Lc["productId"]) {
        _7y = _Lc["productId"];
    }
    if (_Lc["token"]) {
        _Sx = _Lc["token"];
    }
    if (_Lc["consumed"]) {
        if (typeof(_Lc["consumed"]) == "string") {
            _8y = (_Lc["consumed"] == "false") ? 0.0 : 1.0;
        } else {
            _8y = _Lc["consumed"];
        }
    }
    if ((_7y != null) && (_8y == true)) {
        for (var _X2 = 0; _X2 < _wx.length; _X2++) {
            var _5y = _wx[_X2];
            if ((_5y._7y == _7y) && (_5y._Sx == _Sx)) {
                _wx[_X2] = null;
            }
        }
    }
    _Bp.map = ds_map_create();
    ds_map_add(_Bp.map, "type", _rx);
    ds_map_add(_Bp.map, "product", _7y);
    ds_map_add(_Bp.map, "consumed", _8y ? 1.0 : 0.0);
}

function _9y(_Bp) {
    var _ay = false;
    if ((_Bp.type != null) && (_Bp.type != undefined)) {
        switch (_Bp.type) {
            case _ox:
                {
                    __x(_Bp);
                    if (_Bp.status == _ux) {
                        _zx = _lx;
                        _ay = true;
                    } else {
                        _zx = _jx;
                    }
                }
                break;
            case _px:
                {
                    _1y(_Bp);
                    if (_zx != _kx) {
                        _zx = _lx;
                        _ay = true;
                    }
                }
                break;
            case _qx:
                {
                    _4y(_Bp);
                    if ((_zx != _kx) && (_zx != _nx)) {
                        _zx = _lx;
                        _ay = true;
                    }
                }
                break;
            case _rx:
                {
                    _6y(_Bp);
                    _zx = _lx;
                    _ay = true;
                }
                break;
            case _sx:
                {
                    _0y(_Bp);
                    _zx = _lx;
                    _ay = true;
                }
                break;
        }
    }
    if (_ay && (_yx.length != 0)) {
        var _by = _yx.shift();
        _Wx(_by);
    }
}

function _cy() {
    while (_xx.length > 0) {
        var _dy = _xx.shift();
        _9y(_dy);
        g_pBuiltIn._ey = _dy.map;
        _ge._B2(_fy, 0);
        ds_map_destroy(_dy.map);
    }
}

function _3y(_gy) {
    var _hy = -1;
    if (typeof(_gy) == "string") {
        for (var _X2 = 0; _X2 < _vx.length; _X2++) {
            var product = _vx[_X2];
            if (product._Ix.toLowerCase() == _gy.toLowerCase()) {
                _hy = _X2;
                break;
            }
        }
    } else {
        _hy = ~~_gy;
    }
    return _hy;
}

function _iy(_jy) {
    var _Yx = -1;
    if (typeof(_jy) == "string") {
        for (var _X2 = 0; _X2 < _wx.length; _X2++) {
            var _5y = _wx[_X2];
            if (_5y._Ix.toLowerCase() == _jy.toLowerCase()) {
                _hy = _X2;
                break;
            }
        }
    } else {
        _Yx = ~~_jy;
    }
    return _Yx;
}

function iap_activate(_f2) {
    if ((_f2 != null) && (_f2 != undefined)) {
        if (typeof(_f2) == "number") {
            for (var _X2 = 0; _X2 < ds_list_size(_f2); _X2++) {
                var map = ds_list_find_value(_f2, _X2);
                var product = new _Hx(map);
                _vx.push(product);
            }
        } else if (typeof(_f2) == "string") {
            var _ky = JSON.parse(_f2);
            for (var id in _ky) {
                var product = new _Hx();
                _vx.push(product);
                product._Ix = id;
                product._Mx(_ky[id]);
            }
        }
        _Zx({
            type: _7x
        });
    }
}

function iap_status() {
    return _zx;
}

function iap_acquire(_gy, _ly) {
    var _5y = new _Px();
    _5y._Ix = _gy;
    var _Yx = _wx.push(_5y) - 1;
    _Zx({
        type: _9x,
        product: _gy,
        _Yx: _Yx
    });
    return _Yx;
}

function iap_consume(_gy) {
    _Zx({
        type: _ax,
        product: _gy
    });
}

function iap_is_purchased(_my) {
    for (var _X2 = 0; _X2 < _wx.length; _X2++) {
        var _5y = _wx[_X2];
        if ((_5y._Ix == _my) && (_5y._Kx == _fx)) {
            return 1.0;
        }
    }
    return 0.0;
}

function iap_restore_all() {
    _Zx({
        type: _8x
    });
}

function iap_enumerate_products(__5) {
    for (var _X2 = 0; _X2 < _vx.length; _X2++) {
        ds_list_add(__5, _vx[_X2]._Ix);
    }
}

function iap_product_details(_gy, _J3) {
    var _hy = _3y(_gy);
    if ((_hy >= 0) && (_vx[_hy])) {
        _vx[_hy]._Ox(_J3);
        if (_vx[_hy]._Lx == false) {
            _Zx({
                type: _bx,
                product: _vx[_hy]._Ix
            });
        }
        return 1;
    }
    return 0;
}

function iap_purchase_details(_jy, _J3) {
    var _Yx = _iy(_jy);
    if ((_Yx >= 0) && (_wx[_Yx])) {
        _wx[_Yx]._Ox(_J3);
        return 1;
    }
    return 0;
}
var _ny = null;

function ini_open_from_string(_oy) {
    if (_ny) {
        ini_close();
    }
    _ny = _py(_oy);
}

function ini_open(_qy) {
    if (_ny) {
        ini_close();
    }
    var _ry = null;
    if (_vq) {
        _ry = _sy(_qy, true);
    }
    if (_ry == null) {
        _ry = _sy(_qy, false);
    }
    if (_ry == null) {
        _ry = new _ty(_qy);
    }
    _ny = _ry;
}

function ini_close() {
    if (!_ny) return;
    var _Or = _ny._uy();
    _ny = null;
    return _Or;
}

function ini_read_string(_vy, _gc, _wy) {
    if (!_ny) return _wy;
    return _ny._xy(_vy, _gc, _wy);
}

function ini_read_real(_vy, _gc, _wy) {
    if (!_ny) return _wy;
    return _ny._yy(_vy, _gc, _wy);
}

function ini_write_string(_vy, _gc, _qe) {
    if (!_ny) return false;
    _ny._zy(_vy, _gc, _qe);
    return true;
}

function ini_write_real(_vy, _gc, _qe) {
    if (!_ny) return false;
    _ny._zy(_vy, _gc, "" + real(_qe));
    return true;
}

function ini_key_exists(_vy, _gc) {
    if (!_ny) return false;
    var _Ay = _ny._By(_vy, _gc);
    if (_Ay != null && _Ay != undefined) return true;
    return false;
}

function ini_section_exists(_vy) {
    if (!_ny) return false;
    var _Cy = _ny._Dy[_vy];
    if (_Cy != null && _Cy != undefined) return true;
    return false;
}

function ini_key_delete(_vy, _gc) {
    if (!_ny) return false;
    return _ny._Ey(_vy, _gc);
}

function ini_section_delete(_vy) {
    if (!_ny) return false;
    return _ny._Fy(_vy);
}

function instance_find(_cc, _Gy) {
    var _Hy = GetWithArray(_cc);
    if (_Hy == null) return _ai;
    if (_Gy >= _Hy.length) return _ai;
    return _Hy[_Gy].id;
}

function instance_exists(_cc) {
    var _Wq = GetWithArray(_cc);
    if (_Wq != null && _Wq.length > 0) {
        for (var _Qd = 0; _Qd < _Wq.length; _Qd++) {
            _4p = _Wq[_Qd];
            if (!_4p.marked && _4p.active) return true;
        }
    }
    return false;
}

function instance_number(_cc) {
    var _Hy = GetWithArray(_cc);
    if (_Hy == null) return 0;
    var _n4 = 0;
    for (var i = 0; i < _Hy.length; i++) {
        if (!_Hy[i].marked) _n4++;
    }
    return _n4;
}

function instance_position(_h2, _i2, _cc) {
    return _9i(null, Math.floor(_cc), false, _ai, _h2, _i2, function(_bi) {
        if (_bi._di(_h2, _i2, true)) return _bi.id;
        else return _ai;
    });
}

function instance_nearest(_td, _h2, _i2, _cc) {
    var _0j = 10000000000;
    var i = _ai;
    var _Iy = _Jy(null, Math.floor(_cc), false, _ai, _h2, _i2, function(_bi) {
        var _l3 = _h2 - _bi.x;
        var _n3 = _i2 - _bi.y;
        var _Cd = Math.sqrt(_l3 * _l3 + _n3 * _n3);
        if (_Cd < _0j) {
            i = _bi.id;
            _0j = _Cd;
        }
    });
    return i;
}

function instance_furthest(_td, _h2, _i2, _cc) {
    var _0j = -10000000000;
    var i = _ai;
    var _Iy = _Jy(null, Math.floor(_cc), false, _ai, _h2, _i2, function(_bi) {
        var _l3 = _h2 - _bi.x;
        var _n3 = _i2 - _bi.y;
        var _Cd = Math.sqrt(_l3 * _l3 + _n3 * _n3);
        if (_Cd > _0j) {
            i = _bi.id;
            _0j = _Cd;
        }
    });
    return i;
}

function instance_place(_7i, _h2, _i2, _cc) {
    var _l3 = _7i.x;
    var _n3 = _7i.y;
    _7i._P7(_h2, _i2);
    var id = _9i(null, Math.floor(_cc), false, _ai, _h2, _i2, function(_bi) {
        if (_bi._Ky(_7i, true)) {
            return _bi.id;
        } else {
            return _ai;
        }
    });
    _7i._P7(_l3, _n3);
    return id;
}

function instance_create(_h2, _i2, _cc) {
    var _Xo = _2q._O3(_cc);
    if (!_Xo) {
        _ja("Error: Trying to create an instance using non-existent object type (" + _cc + ")");
        return _ai;
    }
    var _4p = _81._Rd(_h2, _i2, _cc);
    _4p._B2(_Sd, 0, _4p, _4p);
    return _4p.id;
}

function instance_destroy(_7i) {
    _7i._B2(_Ly, 0, _7i, _7i);
    _7i.marked = true;
}

function position_destroy(_td, _h2, _i2) {
    var bottom, top;
    var _My = [];
    var _Ny = _81._Oy;
    for (var i = 0; i < _Ny._4c.length; i++) {
        var _4p = _Ny._4c[i];
        if (_4p._Py) _4p._Qy();
        var _Ry = _4p._Ry;
        if (!((_h2 > _Ry._L2) || (_h2 < _Ry.left) || (_i2 > _Ry.bottom) || (_i2 < _Ry.top))) {
            _My[_My.length] = _4p;
        }
    }
    var _Ny = _81._Oy;
    for (var i = 0; i < _My.length; i++) {
        instance_destroy(_My[i]);
    }
}

function position_change(_h2, _i2, _Sy, _Ty) {
    var bottom, top;
    var _My = [];
    var _Ny = _81._Oy;
    for (var i = 0; i < _Ny._4c.length; i++) {
        var _4p = _Ny._4c[i];
        if (_4p._Py) _4p._Qy();
        var _Ry = _4p._Ry;
        if (!((_h2 > _Ry._L2) || (_h2 < _Ry.left) || (_i2 > _Ry.bottom) || (_i2 < _Ry.top))) {
            _My[_My.length] = _4p;
        }
    }
    var _Ny = _81._Oy;
    for (var i = 0; i < _My.length; i++) {
        instance_change(_My[i], _Sy, _Ty)
    }
}

function motion_set(_td, _wd, _yd) {
    _td.setdirection(_wd);
    _td.setspeed(_yd);
}

function motion_add(_td, _wd, _yd) {
    _td._xd(_wd, _yd);
}

function instance_copy(_td, _Uy) {
    var _Vy = new _Wy(0, 0, _Xy++, _td.object_index, true);
    var _Yy = _Vy.id;
    _Vy._Zy(_td, true);
    _Vy.id = _Yy;
    var _4p = _81.__y(_Vy);
    if (_Uy) {
        _Vy._B2(_Sd, 0, _Vy, _Vy);
    }
    return _Vy.id;
}

function _0z(_td,
    _Sy, _Ty) {
    if (_Ty) _td._B2(_Ly, 0, _td, _td);
    _td._1z(_Sy, true, false);
    _td._2z(_td._5p._3z);
    _td._4z(_81);
    if (_Ty) _td._B2(_Sd, 0, _td, _td);
}

function _5z(_td, _Sy, _Ty) {
    if (!_2q._6z(_Sy)) {
        debug("Error: Trying to change an instance to an nonexistent object type.");
        return;
    }
    _0z(_td, _Sy, _Ty);
}
var instance_change = _5z;

function instance_deactivate_all(_td, _8i) {
    var _Qb = [];
    _Qb = _81._Oy._4c;
    _81._Oy._U9();
    var _7z = _81._8z;
    for (var i = 0; i < _Qb.length; i++) {
        if (_Qb[i] == _td) {
            if (_8i == false) {
                _81._9z(_Qb[i]);
            } else {
                _81._Oy._az(_Qb[i]);
            }
        } else {
            _81._9z(_Qb[i]);
        }
    }
}

function instance_activate_all(_td) {
    var _Qb = [];
    _Qb = _81._8z._4c;
    _81._8z._U9();
    var _Ny = _81._Oy;
    for (var i = 0; i < _Qb.length; i++) {
        _81._bz(_Qb[i]);
    }
}

function _cz(_cc, _dz) {
    if (_cc._ez >= 0) {
        var _fz = _2q._O3(_cc._ez);
        if (_fz) {
            if (_fz._gz == _dz) {
                return true;
            } else {
                return _cz(_fz, _dz);
            }
        }
    }
    return false;
};

function instance_activate_object(_td, _Sy) {
    var i;
    var _My = [];
    var _7z = _81._8z;
    if (_Sy == _hz) {
        for (var i = 0; i < _7z._4c; i++) {
            var _4p = _7z._4c[i];
            _My[_My.length] = _4p;
        }
    } else {
        for (var i = 0; i < _7z._4c.length; i++) {
            var _4p = _7z._4c[i];
            if (_4p.object_index == _Sy || _4p.id == _Sy) {
                _My[_My.length] = _4p;
            } else if (_cz(_2q._O3(_4p.object_index), _Sy)) {
                _My[_My.length] = _4p;
            }
        }
    }
    var _Ny = _81._Oy;
    for (i = 0; i < _My.length; i++) {
        _81._bz(_My[i]);
    }
}

function instance_deactivate_object(_td, _Sy) {
    var i;
    var _My = [];
    var _Ny = _81._Oy;
    if (_Sy == _hz) {
        for (var i = 0; i < _Ny._4c.length; i++) {
            var _4p = _Ny._4c[i];
            _My[_My.length] = _4p;
        }
    } else {
        for (var i = 0; i < _Ny._4c.length; i++) {
            var _4p = _Ny._4c[i];
            if (_4p.object_index == _Sy || _4p.id == _Sy) {
                _My[_My.length] = _4p;
            } else if (_cz(_2q._O3(_4p.object_index), _Sy)) {
                _My[_My.length] = _4p;
            }
        }
    }
    var _7z = _81._8z;
    for (i = 0; i < _My.length; i++) {
        _81._9z(_My[i]);
    }
}

function instance_deactivate_region(_td, _lh, _mh, _j4, _k4, _iz, _8i) {
    var bottom, top;
    var _My = [];
    var _Ny = _81._Oy;
    _L2 = _lh + _j4 - 1;
    bottom = _mh + _k4 - 1;
    for (var i = 0; i < _Ny._4c.length; i++) {
        var _jz = false;
        var _4p = _Ny._4c[i];
        if (_4p._Py) _4p._Qy();
        var _Ry = _4p._Ry;
        if ((_Ry) && ((_4p.sprite_index >= 0) || (_4p.mask_index >= 0))) {
            if ((_lh > _Ry._L2) || (_L2 < _Ry.left) || (_mh > _Ry.bottom) || (bottom < _Ry.top)) {
                _jz = true;
            }
        } else {
            if ((_4p.x > _L2) || (_4p.x < _lh) || (_4p.y > bottom) || (_4p.y < _mh)) {
                _jz = true;
            }
        }
        if (_jz != _iz) _My[_My.length] = _4p;
    }
    var _7z = _81._8z;
    for (i = 0; i < _My.length; i++) {
        if (_td == _My[i]) {
            if (!_8i) {
                _81._9z(_My[i]);
            }
        } else {
            _81._9z(_My[i]);
        }
    }
}

function instance_activate_region(_td, _lh, _mh, _j4, _k4, _iz) {
    var i;
    var bottom, top;
    var _My = [];
    var _7z = _81._8z;
    _L2 = _lh + _j4 - 1;
    bottom = _mh + _k4 - 1;
    for (var i = 0; i < _7z._4c.length; i++) {
        var _jz = false;
        var _4p = _7z._4c[i];
        if (_4p._Py) _4p._Qy();
        var _Ry = _4p._Ry;
        if ((_4p.sprite_index >= 0) || (_4p.mask_index >= 0)) {
            if (_Ry._L2 < _lh || _Ry.left > _L2 || _Ry.bottom < _mh || _Ry.top > bottom) {
                _jz = true;
            }
        } else {
            if ((_4p.x > _L2) || (_4p.x < _lh) || (_4p.y > bottom) || (_4p.y < _mh)) {
                _jz = true;
            }
        }
        if (_jz != _iz) _My[_My.length] = _4p;
    }
    var _Ny = _81._Oy;
    for (i = 0; i < _My.length; i++) {
        if (_td == _My[i]) {
            if (!_8i) {
                _81._bz(_My[i]);
            }
        } else {
            _81._bz(_My[i]);
        }
    }
}

function keyboard_key_press(_gc) {
    if (_kz[_gc]) {
        return;
    }
    _kz[_gc] = 1;
    _lz[_gc] = 1;
    _mz = _gc;
}

function keyboard_key_release(_gc) {
    _nz[_gc] = 1;
    _kz[_gc] = 0;
}

function _oz(_pz) {
    with(_Aa) {
        switch (_pz) {
            case 0:
                if (_qz == 0) return 0;
                else return 1;
            case 1:
                if ((_qz & 1) == 0) return 0;
                else return 1;
            case 2:
                if ((_qz & 2) == 0) return 0;
                else return 1;
            case 3:
                if ((_qz & 4) == 0) return 0;
                else return 1;
            case -1:
                if (_qz == 0) return 1;
                else return 0;
        }
    }
    return 0;
}

function mouse_check_button(_pz) {
    with(_Aa) {
        switch (_pz) {
            case 0:
                if (_J8[0] || _J8[1] || _J8[2]) return 0;
                else return 1;
            case 1:
                if (_J8[0]) return 1;
                else return 0;
            case 2:
                if (_J8[1]) return 1;
                else return 0;
            case 3:
                if (_J8[2]) return 1;
                else return 0;
            case -1:
                if (_J8[0] || _J8[1] || _J8[2]) return 1;
                else return 0;
        }
    }
    return 0;
}

function mouse_check_button_pressed(_pz) {
    with(_Aa) {
        switch (_pz) {
            case 0:
                if (_E8[0] || _E8[1] || _E8[2]) return 0;
                else return 1;
            case 1:
                if (_E8[0]) return 1;
                else return 0;
            case 2:
                if (_E8[1]) return 1;
                else return 0;
            case 3:
                if (_E8[2]) return 1;
                else return 0;
            case -1:
                if (_E8[0] || _E8[1] || _E8[2]) return 1;
                else return 0;
        }
    }
    return 0;
}

function mouse_check_button_released(_pz) {
    with(_Aa) {
        switch (_pz) {
            case 0:
                if (_I8[0] || _I8[1] || _I8[2]) return 0;
                else return 1;
            case 1:
                if (_I8[0]) return 1;
                else return 0;
            case 2:
                if (_I8[1]) return 1;
                else return 0;
            case 3:
                if (_I8[2]) return 1;
                else return 0;
            case -1:
                if (_I8[0] || _I8[1] || _I8[2]) return 1;
                else return 0;
        }
        return 0;
    }
}

function mouse_wheel_up() {
    return _rz;
}

function mouse_wheel_down() {
    return _sz;
}

function mouse_clear(_5i) {
    if (_5i >= 1 && _5i <= 3) {
        _Aa._E8[_5i] = 0;
    }
}

function io_clear() {
    _Aa._U9();
}

function keyboard_check(_gc) {
    return _Aa._tz[_gc];
}

function keyboard_check_pressed(_gc) {
    return _Aa._uz[_gc];
}

function keyboard_clear(_gc) {
    _Aa._tz[_gc] = false;
    _Aa._uz[_gc] = false;
    _Aa._vz[_gc] = false;
}

function keyboard_check_released(_gc) {
    return _Aa._vz[_gc];
}

function keyboard_check_direct(_gc) {
    return _Aa._tz[_gc];
}

function display_mouse_get_x() {
    return (_Aa._wz - _9a.left);
}

function display_mouse_get_y() {
    return (_Aa._xz - _9a.top);
}

function keyboard_set_map(_l1, _m1) {
    if ((_l1 < 0) || (_l1 > _yz)) return 0;
    if ((_m1 < 0) || (_m1 > _yz)) return 0;
    _Aa._zz[_l1] = _m1;
}

function keyboard_get_map(_gc) {
    if ((_gc < 0) || (_gc > _yz)) return 0;
    return _Aa._zz[_gc];
}

function keyboard_unset_map() {
    for (var _b3 = 0; _b3 < _yz; _b3++) {
        this._zz[_b3] = _b3;
    }
}
var _Az = 0x7fff;
var floor = Math.floor;

function _Bz(_Cz) {
    var i = _Cz & 0xffffffff;
    var _dn = _Cz - i;
    if ((i & 1) == 1) {
        if (_dn >= 0.5) {
            return i + 1;
        } else {
            return i;
        }
    } else {
        if (_dn <= 0.5) {
            return i;
        } else {
            return i + 1;
        }
    }
}

function _Dz(_Cz) {
    return ~~_Cz;
}
var round = _Bz;
var _vb = _Bz;
var abs = Math.abs;

function cos(_Cz) {
    var _h2 = Math.cos(_Cz);
    var _f3 = ~~(_h2 * 0x1000000);
    _h2 = _f3 / 0x1000000;
    return _h2;
}

function dcos(_Cz) {
    return cos(_Cz * 0.0174532925);
}

function sin(_Cz) {
    var _h2 = Math.sin(_Cz);
    var _f3 = ~~(_h2 * 0x1000000);
    _h2 = _f3 / 0x1000000;
    return _h2;
}

function dsin(_Cz) {
    return sin(_Cz * 0.0174532925);
}

function tan(_Cz) {
    var _h2 = Math.tan(_Cz);
    var _f3 = ~~(_h2 * 0x1000000);
    _h2 = _f3 / 0x1000000;
    return _h2;
}

function dtan(_Cz) {
    return tan(_Cz * 0.0174532925);
}

function lengthdir_x(_Ez, _wd) {
    var _X1 = (_Ez * Math.cos(_wd * _i3 / 180.0));
    var _Fz = Math.round(_X1);
    var frac = _X1 - _Fz;
    if (Math.abs(frac) < 0.0001) return _Fz;
    return _X1;
}

function lengthdir_y(_Ez, _wd) {
    var _X1 = -(_Ez * Math.sin(_wd * _i3 / 180.0));
    var _Fz = Math.round(_X1);
    var frac = _X1 - _Fz;
    if (Math.abs(frac) < 0.0001) return _Fz;
    return _X1;
}

function point_direction(_v3, _w3, _S2, _T2) {
    var x = _S2 - _v3;
    var y = _T2 - _w3;
    if (x === 0) {
        if (y > 0) return 270.0;
        else if (y < 0) return 90.0;
        else return 0.0;
    } else {
        var _Iv = 180.0 * Math.atan2(y, x) / _i3;
        _Iv = (~~round(_Iv * 1000000)) / 1000000.0;
        if (_Iv <= 0.0) {
            return -_Iv;
        } else {
            return (360.0 - _Iv);
        }
    }
    return _8e;
}

function _Gz(_v3, _w3,
    _S2, _T2) {
    return point_direction(_v3, _w3, _S2, _T2);
}

function point_distance(_v3, _w3, _S2, _T2) {
    var _A5 = _S2 - _v3;
    var _B5 = _T2 - _w3;
    return Math.sqrt(_A5 * _A5 + _B5 * _B5);
}

function point_distance_3d(_v3, _w3, _Hz, _S2, _T2, _Iz) {
    return Math.sqrt(_Cl(_S2 - _v3) + _Cl(_T2 - _w3) + _Cl(_Iz - _Hz));
}

function _e3(_Cz, _Ou) {
    if (_Cz < _Ou) return _Cz;
    else return _Ou;
}

function _c3(_Cz, _Ou) {
    if (_Cz > _Ou) return _Cz;
    else return _Ou;
}
var max = Math.max;

function max3(_Cz, _Ou, _Jz) {
    return max(_Cz, _Ou, _h2);
}
var min = Math.min;

function min3(_Cz, _Ou, _Jz) {
    return min(_Cz, _Ou,
        _h2);
}
var _Kz = [];
var index = 0;
var _Lz = _Mz(0);

function _Mz(_Nz) {
    var _Cb = _Nz;
    for (i = 0; i < 16; i++) {
        _Cb = (((_Cb * 214013 + 2531011) >> 16) & _Az) | 0;
        _Kz[i] = ~~_Cb;
    }
    index = 0;
    _Lz = _Nz;
    return _Lz;
}

function _Oz() {
    var _Z4, _g3, c, _Cd;
    _Z4 = _Kz[index];
    c = _Kz[(index + 13) & 15];
    _g3 = _Z4 ^ c ^ (_Z4 << 16) ^ (c << 15);
    c = _Kz[(index + 9) & 15];
    c ^= (c >> 11);
    _Z4 = _Kz[index] = _g3 ^ c;
    _Cd = _Z4 ^ ((_Z4 << 5) & 0xDA442D20);
    index = (index + 15) & 15;
    _Z4 = _Kz[index];
    _Kz[index] = _Z4 ^ _g3 ^ _Cd ^ (_Z4 << 2) ^ (_g3 << 18) ^ (c << 28);
    return ((_Kz[index] & 0x7fffffff) / 2147483647.0);
}

function random(_27) {
    var _d3 = _Oz();
    return _d3 * _27;
}

function irandom(_27) {
    var _d3 = _Oz() * (_27 + 1);
    _Oz();
    return ~~_d3;
}

function random_range(_Pz, _hg) {
    if (_Pz == _hg) {
        return _Pz;
    }
    var _Qz, _Rz;
    if (_Pz > _hg) {
        _Qz = _hg;
        _Rz = _Pz;
    } else {
        _Qz = _Pz;
        _Rz = _hg;
    }
    var _Sz = _Oz();
    _9e = _Qz + (_Sz * (_Rz - _Qz));
    _Oz();
    return _9e;
}

function random_set_seed(_f2) {
    _Mz(~~_f2);
}

function randomize() {
    var _Cd = new Date();
    var _f3 = _Cd.getMilliseconds();
    _f3 = (_f3 & 0xffffffff) ^ ((_f3 >> 16) & 0xffff) ^ ((_f3 << 16) & 0xffff0000);
    _Mz(_f3);
}

function irandom_range(_Pz, _hg) {
    var _Qz, _Rz;
    if (_Pz > _hg) {
        _Qz = _hg;
        _Rz = _Pz;
    } else {
        _Qz = _Pz;
        _Rz = _hg;
    }
    var _03 = _Qz | 0;
    var _23 = _Rz | 0;
    var _9e = _03 + random(_23 - _03 + 1);
    return (_9e | 0);
}

function random_get_seed() {
    return _Lz;
}

function choose() {
    var _Tb = choose.arguments;
    var _Ub = choose.arguments.length;
    var index = Math.floor(random(_Ub));
    return _Tb[index];
}

function sign(_h2) {
    if (_h2 == 0) return 0;
    if (_h2 < 0) return -1;
    return 1;
}
var ceil = Math.ceil;

function frac(_h2) {
    return _h2 - ~~_h2;
}

function sqrt(_h2) {
    if (_h2 >= 0) return Math.sqrt(_h2);
    else _ja("Cannot apply sqrt to negative number.");
}

function sqr(_h2) {
    return _h2 * _h2;
}
var power = Math.pow;
var exp = Math.exp;
var ln = Math.log;

function log2(_h2) {
    return Math.log(_h2) / Math.LN2;
}

function log10(_h2) {
    return Math.log(_h2) / Math.LN10;
}

function logn(_Gy, _h2) {
    return Math.log(_h2) / Math.log(_Gy);
}
var arcsin = Math.asin;

function darcsin(_h2) {
    return Math.asin(_h2) * 57.2957795;
}
var arccos = Math.acos;

function darccos(_h2) {
    return Math.acos(_h2) * 57.2957795;
}
var arctan = Math.atan;

function darctan(_h2) {
    return Math.atan(_h2) * 57.2957795;
}
var arctan2 = Math.atan2;

function darctan2(_i2, _h2) {
    return Math.atan2(_i2, _h2) * 57.2957795;
}

function degtorad(_h2) {
    return _h2 * 0.0174532925;
}

function radtodeg(_h2) {
    return _h2 * 57.2957795;
}

function mean() {
    var _Tb = mean.arguments;
    var _Ub = mean.arguments.length;
    var __2 = _Tb[0];
    for (var i = 1; i < _Ub; i++) {
        __2 += _Tb[i];
    }
    return (__2 / _Ub);
}

function median() {
    var arguments = median.arguments;
    if (arguments.length == 0) {
        return 0;
    }
    var i, _k3, _9e;
    for (i = 0; i < arguments.length; i++) {
        var _Tz = 0;
        var _Uz = 0;
        for (_k3 = 0; _k3 < arguments.length; _k3++) {
            if (arguments[_k3] < arguments[i]) {
                _Tz = _Tz + 1;
            }
            if (arguments[_k3] <= arguments[i]) {
                _Uz = _Uz + 1;
            }
        }
        if ((_Tz < (arguments.length / 2)) && (_Uz >= (arguments.length / 2))) {
            return arguments[i];
        }
    }
    debug("Error: was not able to successfully find the median value");
    return 0;
}

function dot_product(_v3, _w3, _S2, _T2) {
    return (_v3 * _S2 + _w3 * _T2);
}

function dot_product_3d(_v3, _w3, _Hz, _S2, _T2, _Iz) {
    return (_v3 * _S2 + _w3 * _T2 + _Hz * _Iz);
}

function math_set_epsilon(_Vz) {}

function math_get_epsilon() {
    return 0.0;
}

function dot_product_normalised(_v3, _w3, _S2, _T2) {
    var _Wz = Math.sqrt(_v3 * _v3 + _w3 * _w3);
    var _Xz = Math.sqrt(_S2 * _S2 + _T2 * _T2);
    return (_v3 * _S2 + _w3 * _T2) / (_Wz * _Xz);
}

function dot_product_3d_normalised(_v3, _w3,
    _9j, _S2, _T2, _Iz) {
    var _Wz = _Yz(_v3 * _v3 + _w3 * _w3 + _Hz * _Hz);
    var _Xz = _Yz(_S2 * _S2 + _T2 * _T2 + _Iz * _Iz);
    return (_v3 * _S2 + _w3 * _T2 + _Hz * _Iz) / (_Wz * _Xz);
}

function is_real(_h2) {
    if (typeof(_h2) == "boolean") return 1;
    else if (typeof(_h2) == "number") return 1;
    else return 0;
}

function is_undefined(_h2) {
    if (typeof(_h2) == "undefined") return 1;
    else return 0;
}

function is_int32(_h2) {
    if (typeof(_h2) == "number") return 1;
    else return 0;
}

function is_int64(_h2) {
    if (typeof(_h2) == "number") return 1;
    else return 0;
}

function is_ptr(_h2) {
    if (typeof(_h2) == "number") return 1;
    else return 0;
}

function is_vec3(_h2) {
    return 0;
}

function is_vec4(_h2) {
    return 0;
}

function is_matrix(_h2) {
    return 0;
}

function is_string(_h2) {
    if (typeof(_h2) == "string") return 1;
    else return 0;
}

function is_array(_h2) {
    if (_h2 instanceof Array) return 1;
    else return 0;
}

function array_length_1d(_h2) {
    var _db = 0;
    if (_h2 instanceof Array) _db = _h2.length;
    return _db;
}

function array_length_2d(_h2, _Vz) {
    var _db = 0;
    if ((_h2 instanceof Array) && (_h2[_Vz] instanceof Array)) _db = _h2[_Vz].length;
    return _db;
}

function array_height_2d(_h2) {
    var _db = 0;
    if ((_h2 instanceof Array)) _db = _h2.length;
    return _db;
}

function clamp(_qe, _Zz, _zr) {
    if (_qe < _Zz) _qe = _Zz;
    else if (_qe > _zr) _qe = _zr;
    return _qe;
}

function lerp(__z, _0A, _nn) {
    return __z + ((_0A - __z) * _nn);
}

function angle_difference(_Za, _fc) {
    var _Z4 = _Za,
        _g3 = _fc;
    return ((((_Z4 - _g3) % 360.0) + 540.0) % 360.0) - 180.0;
}
var _1A = 30,
    _2A = 10,
    _3A = 3,
    _4A = true;

function _5A(_6A, _7A) {
    var _8e = 0.0;
    while (_6A <= 0.0) {
        _6A = _6A + 360;
    }
    while (_6A >= 360.0) {
        _6A = _6A - 360;
    }
    while (_7A < 0.0) {
        _7A = _7A + 360;
    }
    while (_7A >= 360.) {
        _7A = _7A - 360;
    }
    _8e = _7A - _6A;
    if (_8e < 0) {
        _8e = -_8e;
    }
    if (_8e > 180) {
        _8e = 360 - _8e;
    }
    return _8e;
}

function _8A(_7i,
    _h2, _i2, _9A, _rg) {
    if (_9A == _hz) {
        if (_rg) {
            return place_empty(_7i, _h2, _i2);
        } else {
            return place_free(_7i, _h2, _i2);
        }
    } else {
        return (instance_place(_7i, _h2, _i2, _9A) == _ai);
    }
}

function _aA(_7i, _h2, _i2, _qg, _9A, _rg) {
    var _8e = false;
    var _0j = 0.0;
    var _bA = 0.0;
    var _cA = 0.0;
    if ((_7i.x == _h2) && (_7i.y == _i2)) return true;
    _0j = sqrt(_Cl(_7i.x - _h2) + _Cl(_7i.y - _i2));
    if (_0j <= _qg) {
        _bA = _h2;
        _cA = _i2;
        _8e = true;
    } else {
        _bA = _7i.x + _qg * (_h2 - _7i.x) / _0j;
        _cA = _7i.y + _qg * (_i2 - _7i.y) / _0j;
        _8e = false;
    }
    if (!_8A(_7i, _bA, _cA, _9A, _rg)) {
        return _8e;
    }
    _7i.setdirection(point_direction(_7i.x,
        _7i.y, _bA, _cA));
    _7i._P7(_bA, _cA);
    return _8e;
}

function mp_linear_step(_7i, _h2, _i2, _qg, _rg) {
    return _aA(_7i, _h2, _i2, _qg, _hz, _rg);
}

function mp_linear_step_object(_7i, _h2, _i2, _qg, _cc) {
    return _aA(_7i, _h2, _i2, _qg, _cc, true);
}

function _dA(_wd, _7i, _yd, _9A, _rg) {
    var _8e = false;
    var _eA = 0.0;
    var _fA = 0.0;
    if (_5A(_wd, _7i.direction) > _1A) {
        return _8e;
    }
    _eA = _7i.x + _yd * _3A * cos(_i3 * _wd / 180);
    _fA = _7i.y - _yd * _3A * sin(_i3 * _wd / 180);
    if (true != _8A(_7i, _eA, _fA, _9A, _rg)) {
        return _8e;
    }
    _eA = _7i.x + _yd * cos(_i3 * _wd / 180);
    _fA = _7i.y - _yd * sin(_i3 * _wd / 180);
    if (true != _8A(_7i, _eA, _fA, _9A, _rg)) {
        return _8e;
    }
    _7i.setdirection(_wd);
    _7i._P7(_eA, _fA);
    _8e = true;
    return _8e;
}

function _gA(_7i, _h2, _i2, _qg, _Sy, _rg) {
    var _8e = false;
    var _0j = 0.0;
    var _hA = 0.0;
    var _iA = 0.0;
    if ((_7i.x == _h2) && (_7i.y == _i2)) {
        _8e = true;
        return _8e;
    }
    _0j = sqrt(_Cl(_7i.x - _h2) + _Cl(_7i.y - _i2));
    if (_0j <= _qg) {
        if (_8A(_7i, _h2, _i2, _Sy, _rg)) {
            _7i.setdirection(_Gz(_7i.x, _7i.y, _h2, _i2));
            _7i._P7(_h2, _i2);
        }
        _8e = true;
        return _8e;
    }
    _hA = _Gz(_7i.x, _7i.y, _h2, _i2);
    _iA = 0;
    _8e = false;
    while (_iA < 180) {
        if (_dA(_hA - _iA, _7i, _qg, _Sy, _rg)) {
            return _8e;
        }
        if (_dA(_hA + _iA, _7i, _qg, _Sy, _rg)) {
            return _8e;
        }
        _iA = _iA + _2A;
    }
    if (_4A) {
        _7i.setdirection(_7i.direction + _1A);
    }
    return _8e;
}

function mp_potential_step(_7i, _h2, _i2, _qg, _rg) {
    return _gA(_7i, _h2, _i2, _qg, _hz, _rg);
}

function mp_potential_step_object(_7i, _h2, _i2, _qg, _cc) {
    return _gA(_7i, _h2, _i2, _qg, _cc, true);
}

function mp_potential_settings(_7i, _jA, _kA, _lA, _mA) {
    _1A = _c3(1, _jA);
    _2A = _c3(1, _kA);
    _3A = _lA;
    _4A = _mA;
}

function mp_linear_path(_7i, _mg, _nA, _oA, _qg, _rg) {
    _Un("mp_linear_path()");
}

function mp_linear_path_object(_7i, _mg, _nA,
    _oA, _qg, _cc) {
    _Un("mp_linear_path_object()");
}

function mp_potential_path(_7i, _mg, _nA, _oA, _qg, _pA, _rg) {
    _Un("mp_potential_path()");
}

function mp_potential_path_object(_7i, _mg, _nA, _oA, _qg, _pA, _cc) {
    _Un("mp_potential_path_object()");
}

function _qA(_lh, _mh, _rA, _sA, _tA, _uA) {
    this._vA = _lh;
    this._wA = _mh;
    this._xA = ~~_rA;
    this._yA = ~~_sA;
    this._zA = _tA;
    this._AA = _uA;
    this._BA = [];
    this._U9();
};
_qA.prototype._U9 = function() {
    var _CA = this._xA * this._yA;
    for (var i = 0; i < _CA; i++) {
        this._BA[i] = 0;
    }
};
_qA.prototype._DA = function(_h2, _i2, _f2) {
    if (_h2 < 0 || _h2 >= this._xA) return;
    if (_i2 < 0 || _i2 >= this._yA) return;
    this._BA[(_h2 * this._yA) + _i2] = _f2;
};
_qA.prototype._EA = function(_h2, _i2) {
    if (_h2 < 0 || _h2 >= this._xA) return;
    if (_i2 < 0 || _i2 >= this._yA) return;
    return this._BA[(_h2 * this._yA) + _i2];
};
_qA.prototype._FA = function(_v3, _w3, _S2, _T2, _f2) {
    var _Bv = ~~((_e3(_v3, _S2) - this._vA) / this._zA);
    if (_Bv < 0) _Bv = 0;
    var _Cv = ~~((_c3(_v3, _S2) - this._vA) / this._zA);
    if (_Cv >= this._xA) _Cv = this._xA - 1;
    _Dv = ~~((_e3(_w3, _T2) - this._wA) / this._AA);
    if (_Dv < 0) _Dv = 0;
    _Ev = ~~((_c3(_w3, _T2) - this._wA) / this._AA);
    if (_Ev >= this._yA) _Ev = this._yA - 1;
    for (var i = _Bv; i <= _Cv; i++) {
        var index = i * this._yA;
        for (var _k3 = _Dv; _k3 <= _Ev; _k3++) {
            this._BA[index + _k3] = _f2;
        }
    }
};

function mp_grid_create(_lh, _mh, _GA, _HA, _tA, _uA) {
    var _b3 = new _qA(_lh, _mh, _GA, _HA, _tA, _uA);
    return _IA._1b(_b3);
}

function mp_grid_destroy(_ha) {
    _IA._2b(_ha);
}

function mp_grid_clear_all(_ha) {
    var _JA = _IA._O3(_ha);
    if (_JA) {
        _JA._U9();
        return;
    }
    _ja("Error: invalid mp_grid ID (mp_grid_clear_all)");
}

function mp_grid_clear_cell(_ha, _Wa, _27) {
    var _JA = _IA._O3(_ha);
    if (_JA) {
        _JA._DA(_Wa, _27,
            0);
        return;
    }
    _ja("Error: invalid mp_grid ID (mp_grid_clear_cell)");
}

function mp_grid_clear_rectangle(_ha, _v3, _w3, _S2, _T2) {
    var _JA = _IA._O3(_ha);
    if (_JA) {
        _JA._FA(_v3, _w3, _S2, _T2, 0);
        return;
    }
    _ja("Error: invalid mp_grid ID (mp_grid_clear_rectangle)");
}

function mp_grid_add_cell(_ha, _h2, _i2) {
    var _JA = _IA._O3(_ha);
    if (_JA) {
        _JA._DA(_h2, _i2, -1);
        return;
    }
    _ja("Error: invalid mp_grid ID (mp_grid_add_cell)");
}

function mp_grid_get_cell(_ha, _h2, _i2) {
    var _JA = _IA._O3(_ha);
    if (_JA) {
        return _JA._EA(_h2, _i2);
    }
    return -1;
}

function mp_grid_add_rectangle(_ha,
    _v3, _w3, _S2, _T2) {
    var _JA = _IA._O3(_ha);
    if (_JA) {
        _JA._FA(_v3, _w3, _S2, _T2, -1);
        return;
    }
    _ja("Error: invalid mp_grid ID (mp_grid_add_rectangle)");
}

function mp_grid_add_instances(_td, _ha, _cc, _Ra) {
    var _JA = _IA._O3(_ha);
    if (_JA) {
        var _KA = GetWithArray(_cc);
        for (var _LA = 0; _LA < _KA.length; _LA++) {
            var _4p = _KA[_LA];
            if (_4p._Py) _4p._Qy();
            var _Bv = ~~((_4p._Ry.left - _JA._vA) / _JA._zA);
            if (_Bv < 0) _Bv = 0;
            _Cv = ~~((_4p._Ry._L2 - _JA._vA) / _JA._zA);
            if (_Cv >= _JA._xA) _Cv = _JA._xA - 1;
            _Dv = ~~((_4p._Ry.top - _JA._wA) / _JA._AA);
            if (_Dv < 0) _Dv = 0;
            _Ev = ~~((_4p._Ry.bottom - _JA._wA) / _JA._AA);
            if (_Ev >= _JA._yA) _Ev = _JA._yA - 1;
            for (var i = _Bv; i <= _Cv; i++) {
                for (var _k3 = _Dv; _k3 <= _Ev; _k3++) {
                    if (!_Ra) {
                        _JA._BA[i * _JA._yA + _k3] = -1;
                        continue;
                    }
                    if (_JA._BA[i * _JA._yA + _k3] < 0) continue;
                    if (_4p._ei(_JA._vA + i * _JA._zA, _JA._wA + _k3 * _JA._AA, _JA._vA + (i + 1) * _JA._zA - 1, _JA._wA + (_k3 + 1) * _JA._AA - 1, true)) {
                        _JA._BA[i * _JA._yA + _k3] = -1;
                    }
                }
            }
        }
        return;
    }
    _ja("Error: invalid mp_grid ID (mp_grid_add_instances)");
}
var mp_grid_draw = _MA;

function _MA(_ha) {
    var _JA = _IA._O3(_ha);
    if (_JA) {
        _95.globalAlpha = _X6;
        var _4j = _9h(0xff0000, 1.0);
        var _5j = _9h(0x00ff00,
            1.0);
        for (var x = 0; x < _JA._xA; x++) {
            for (var y = 0; y < _JA._yA; y++) {
                var _F4 = _5j;
                if (_JA._BA[x * _JA._yA + y] < 0) {
                    _F4 = _4j;
                }
                _95.fillStyle = _F4;
                _95._6v((_JA._vA + x * _JA._zA), (_JA._wA + y * _JA._AA), _JA._zA, _JA._AA);
            }
        }
        return;
    }
    _ja("Error: invalid mp_grid ID (mp_grid_draw)");
}

function mp_grid_path(_7i, _ha, _mg, _NA, _OA, _PA, _QA, _RA) {
    var _SA, _TA, _UA, _VA, i, _k3, _y8, _Cd, _l3, _n3, _WA, _XA, _YA, _ZA, __A, _0B, _1B, _2B, _3B;
    var _8e = false;
    var _JA = _IA._O3(_ha);
    var _4B = _5B.Paths[_mg];
    if (!_4B || !_JA) {
        if (!_4B) _ja("Error: invalid path ID (mp_grid_path)");
        if (!_JA) _ja("Error: invalid mp_grid ID (mp_grid_path)");
        return _8e;
    }
    if ((_NA < _JA._vA) || (_NA >= (_JA._vA + _JA._xA * _JA._zA))) {
        _ja("Error: invalid xstart position, not on grid. (mp_grid_path)");
        return _8e;
    }
    if ((_OA < _JA._wA) || (_OA >= _JA._wA + _JA._yA * _JA._AA)) {
        _ja("Error: invalid ystart position, not on grid. (mp_grid_path)");
        return _8e;
    }
    _SA = ~~((_NA - _JA._vA) / _JA._zA);
    _TA = ~~((_OA - _JA._wA) / _JA._AA);
    if (_JA._BA[_SA * _JA._yA + _TA] < 0) {
        _ja("Error: Can't START path in a blocked grid position. (mp_grid_path)");
        return _8e;
    }
    if ((_PA < _JA._vA) || (_PA >= _JA._vA + _JA._xA * _JA._zA)) {
        _ja("Error: invalid xgoal position, not on grid. (mp_grid_path)");
        return _8e;
    }
    if ((_QA < _JA._wA) || (_QA >= _JA._wA + _JA._yA * _JA._AA)) {
        _ja("Error: invalid ygoal position, not on grid. (mp_grid_path)");
        return _8e;
    }
    _UA = ~~((_PA - _JA._vA) / _JA._zA);
    _VA = ~~((_QA - _JA._wA) / _JA._AA);
    if (_JA._BA[_UA * _JA._yA + _VA] < 0) {
        _ja("Error: Can't END path in a blocked grid position. (mp_grid_path)");
        return _8e;
    }
    _JA._BA[_SA * _JA._yA + _TA] = 1;
    _3B = new _6B();
    _3B._7B((_SA * _JA._yA + _TA));
    while (_3B._8B(1)) {
        _y8 = _3B._9B();
        _l3 = ~~(_y8 / _JA._yA);
        _n3 = ~~(_y8 % _JA._yA);
        if ((_l3 == _UA) && (_n3 == _VA)) {
            _8e = true;
            break;
        }
        _Cd = _JA._BA[_y8] + 1;
        _WA = (_l3 > 0) && (_n3 < _JA._yA - 1) && (_JA._BA[(_l3 - 1) * _JA._yA + (_n3 + 1)] == 0);
        _XA = (_n3 < _JA._yA - 1) && (_JA._BA[(_l3) * _JA._yA + (_n3 + 1)] == 0);
        _YA = (_l3 < _JA._xA - 1) && (_n3 < _JA._yA - 1) && (_JA._BA[(_l3 + 1) * _JA._yA + (_n3 + 1)] == 0);
        _ZA = (_l3 > 0) && (_JA._BA[(_l3 - 1) * _JA._yA + (_n3)] == 0);
        __A = (_l3 < _JA._xA - 1) && (_JA._BA[(_l3 + 1) * _JA._yA + (_n3)] == 0);
        _0B = (_l3 > 0) && (_n3 > 0) && (_JA._BA[(_l3 - 1) * _JA._yA + (_n3 - 1)] == 0);
        _1B = (_n3 > 0) && (_JA._BA[(_l3) * _JA._yA + (_n3 - 1)] == 0);
        _2B = (_l3 < _JA._xA - 1) && (_n3 > 0) && (_JA._BA[(_l3 + 1) * _JA._yA + (_n3 - 1)] == 0);
        if (_ZA) {
            _JA._BA[(_l3 - 1) * _JA._yA + _n3] = _Cd;
            _3B._7B(~~((_l3 - 1) * _JA._yA + _n3));
        }
        if (__A) {
            _JA._BA[(_l3 + 1) * _JA._yA + _n3] = _Cd;
            _3B._7B(~~((_l3 + 1) * _JA._yA + _n3));
        }
        if (_1B) {
            _JA._BA[_l3 * _JA._yA + _n3 - 1] = _Cd;
            _3B._7B(~~(_l3 * _JA._yA + _n3 - 1));
        }
        if (_XA) {
            _JA._BA[_l3 * _JA._yA + _n3 + 1] = _Cd;
            _3B._7B(~~(_l3 * _JA._yA + _n3 + 1));
        }
        if (_RA && _WA && _XA && _ZA) {
            _JA._BA[(_l3 - 1) * _JA._yA + _n3 + 1] = _Cd;
            _3B._7B(~~((_l3 - 1) * _JA._yA + _n3 + 1));
        }
        if (_RA && _0B && _1B && _ZA) {
            _JA._BA[(_l3 - 1) * _JA._yA + _n3 - 1] = _Cd;
            _3B._7B(~~((_l3 - 1) * _JA._yA + _n3 - 1));
        }
        if (_RA && _YA && _XA && __A) {
            _JA._BA[(_l3 + 1) * _JA._yA + _n3 + 1] = _Cd;
            _3B._7B(~~((_l3 + 1) * _JA._yA + _n3 + 1));
        }
        if (_RA && _2B && _1B && __A) {
            _JA._BA[(_l3 + 1) * _JA._yA + _n3 - 1] = _Cd;
            _3B._7B(~~((_l3 + 1) * _JA._yA + _n3 - 1));
        }
    }
    _3B = undefined;
    if (_8e) {
        _4B._U9();
        _4B._aB = _bB;
        _4B.closed = false;
        _4B._cB(_PA, _QA, 100);
        _l3 = _UA;
        _n3 = _VA;
        while ((_l3 != _SA) || (_n3 != _TA)) {
            _y8 = _JA._BA[_l3 * _JA._yA + _n3];
            _WA = (_l3 > 0) && (_n3 < _JA._yA - 1) && (_JA._BA[(_l3 - 1) * _JA._yA + (_n3 + 1)] == _y8 - 1);
            _XA = (_n3 < _JA._yA - 1) && (_JA._BA[(_l3) * _JA._yA + (_n3 + 1)] == _y8 - 1);
            _YA = (_l3 < _JA._xA - 1) && (_n3 < _JA._yA - 1) && (_JA._BA[(_l3 + 1) * _JA._yA + (_n3 + 1)] == _y8 - 1);
            _ZA = (_l3 > 0) && (_JA._BA[(_l3 - 1) * _JA._yA + (_n3)] == _y8 - 1);
            __A = (_l3 < _JA._xA - 1) && (_JA._BA[(_l3 + 1) * _JA._yA + (_n3)] == _y8 - 1);
            _0B = (_l3 > 0) && (_n3 > 0) && (_JA._BA[(_l3 - 1) * _JA._yA + (_n3 - 1)] == _y8 - 1);
            _1B = (_n3 > 0) && (_JA._BA[(_l3) * _JA._yA + (_n3 - 1)] == _y8 - 1);
            _2B = (_l3 < _JA._xA - 1) && (_n3 > 0) && (_JA._BA[(_l3 + 1) * _JA._yA + (_n3 - 1)] == _y8 - 1);
            if (_ZA) _l3 = _l3 - 1;
            else if (__A) _l3 = _l3 + 1;
            else if (_1B) _n3 = _n3 - 1;
            else if (_XA) _n3 = _n3 + 1;
            else if (_RA && _WA) {
                _l3 = _l3 - 1;
                _n3 = _n3 + 1;
            } else if (_RA && _YA) {
                _l3 = _l3 + 1;
                _n3 = _n3 + 1;
            } else if (_RA && _0B) {
                _l3 = _l3 - 1;
                _n3 = _n3 - 1;
            } else if (_RA && _2B) {
                _l3 = _l3 + 1;
                _n3 = _n3 - 1;
            };
            if ((_l3 != _SA) || (_n3 != _TA)) {
                _4B._cB(~~(_JA._vA + _l3 * _JA._zA + _JA._zA / 2), ~~(_JA._wA + _n3 * _JA._AA + _JA._AA / 2), 100);
            }
        };
        _4B._cB(_NA, _OA, 100);
        _4B._dB();
    };
    for (i = 0; i < _JA._xA; i++) {
        for (_k3 = 0; _k3 < _JA._yA; _k3++) {
            if (_JA._BA[i * _JA._yA + _k3] > 0) _JA._BA[i * _JA._yA + _k3] = 0;
        }
    }
    return _8e;
}

function place_free(_7i, _h2, _i2) {
    var _l3, _n3, _8e, _eB;
    _8e = true;
    _l3 = _7i.x;
    _n3 = _7i.y;
    _7i._P7(_h2, _i2);
    var _4c = _81._fB();
    for (var _Qd = 0; _Qd < _4c.length; _Qd++) {
        _eB = _4c[_Qd];
        if (_eB.solid) {
            if (_7i._Ky(_eB, true)) {
                _8e = false;
                break;
            }
        }
    }
    _7i._P7(_l3, _n3);
    return _8e;
}

function place_empty(_7i, _h2, _i2) {
    var _l3, _n3, _8e, _eB;
    _8e = true;
    _l3 = _7i.x;
    _n3 = _7i.y;
    _7i._P7(_h2, _i2);
    var _4c = _81._fB();
    for (var _Qd = 0; _Qd < _4c.length; _Qd++) {
        _eB = _4c[_Qd];
        if (_7i._Ky(_eB, true)) {
            _8e = false;
            break;
        }
    }
    _7i._P7(_l3, _n3);
    return _8e;
}

function place_meeting(_7i, _h2, _i2, _cc) {
    var _l3, _n3, _8e, _eB;
    _8e = false;
    _l3 = _7i.x;
    _n3 = _7i.y;
    _7i._P7(_h2, _i2);
    var _4c = GetWithArray(_cc);
    for (var _Qd = 0; _Qd < _4c.length; _Qd++) {
        _eB = _4c[_Qd];
        if (_7i._Ky(_eB, true)) {
            _8e = true;
            break;
        }
    }
    _7i._P7(_l3, _n3);
    return _8e;
}

function place_snapped(_td, _Gd, _Hd) {
    if (_Gd > 0) {
        if (Math.abs(_td.x - _Gd * _vb(_td.x / _Gd)) >= 0.001) {
            return false;
        }
    }
    if (_Hd > 0) {
        if (Math.abs(_td.y - _Hd * _vb(_td.y / _Hd)) >= 0.001) {
            return false;
        }
    }
    return true;
}

function move_random(_td, _Gd, _Hd) {
    var i = 0;
    var x = 0.0;
    var y = 0.0;
    var _gB;
    var _hB;
    var _iB;
    var _jB;
    var _kB = 0;
    var _lB = 0;
    _gB = 0;
    _hB = _81._mB();
    _iB = 0;
    _jB = _81._nB();
    if (true == sprite_exists(_td.sprite_index) || true == sprite_exists(_td.mask_index)) {
        var _oB = _td._pB();
        _gB = _vb(_td.x - _oB.left);
        _hB = _vb(_hB + _td.x - _oB._L2);
        _iB = _vb(_td.y - _oB.top);
        _jB = _vb(_jB + _td.y - _oB.bottom);
    }
    _kB = _vb(_Gd);
    _lB = _vb(_Hd);
    for (i = 1; i < 100; i++) {
        x = _gB + _Dd(_hB - _gB);
        if (_kB > 0) {
            x = _kB * floor(x / _kB);
        }
        y = _iB + _Dd(_jB - _iB);
        if (_lB > 0) {
            y = _lB * floor(y / _lB);
        }
        if (true == place_free(_td, x, y)) {
            _td._P7(x, y);
            return;
        }
    }
}

function move_snap(_7i, _Gd, _Hd) {
    _7i.x = _vb(_7i.x / _Gd) * _Gd;
    _7i.y = _vb(_7i.y / _Hd) * _Hd;
    _7i._Py = true;
}

function move_wrap(_td, _qB, _bv, _rB) {
    if (_qB >= 0.5) {
        if (_td.x < -_rB) {
            _td._P7(_td.x + _81._mB() + 2 * _rB, _td.y);
        }
        if (_td.x > _81._mB() + _rB) {
            _td._P7(_td.x - _81._mB() - 2 * _rB, _td.y);
        }
    }
    if (_bv >= 0.5) {
        if (_td.y < -_rB) {
            _td._P7(_td.x, _td.y + _81._nB() + 2 * _rB);
        }
        if (_td.y > _81._nB() + _rB) {
            _td._P7(_td.x, _td.y - _81._nB() - 2 * _rB);
        }
    }
}

function move_towards_point(_7i, _h2, _i2, _yd) {
    _7i.sethspeed(_h2 - _7i.x);
    _7i.setvspeed(_i2 - _7i.y);
    _7i.setspeed(_yd);
}

function _sB(_7i, _h2, _i2, _Ld) {
    if (_Ld) {
        return place_empty(_7i, _h2, _i2);
    } else {
        return place_free(_7i, _h2, _i2);
    }
}

function _Nd(_7i, _tB, _Ld) {
    var i, _X2;
    var _l3, _n3, _uB, _vB, _wB, _xB, _yB;
    var _zB, _AB, _BB, _CB;
    _CB = false;
    if (_sB(_7i, _7i.x, _7i.y,
            _Ld) == false) {
        _7i._P7(_7i.xprevious, _7i.yprevious);
        _CB = true;
    }
    _l3 = _7i.x;
    _n3 = _7i.y;
    if (_tB) {
        _X2 = 18;
        _yB = 10.0 * Math.round(_7i.direction / 10.0);
        _wB = _yB;
        _xB = _yB;
        for (i = 1; i < 2 * _X2; i++) {
            _wB = _wB - 180 / _X2;
            _uB = _l3 + _7i.speed * Math.cos(_wB * _i3 / 180);
            _vB = _n3 - _7i.speed * Math.sin(_wB * _i3 / 180);
            if (_sB(_7i, _uB, _vB, _Ld)) {
                break;
            } else {
                _CB = true;
            }
        }
        for (i = 1; i < 2 * _X2; i++) {
            _xB = _xB + 180 / _X2;
            _uB = _l3 + _7i.speed * Math.cos(_xB * _i3 / 180);
            _vB = _n3 - _7i.speed * Math.sin(_xB * _i3 / 180);
            if (_sB(_7i, _uB, _vB, _Ld)) {
                break;
            } else {
                _CB = true;
            }
        }
        if (_CB == true) {
            _7i.setdirection(180 + (_wB + _xB) - _yB);
        }
    } else {
        _zB = _sB(_7i, _7i.x + _7i.hspeed, _7i.y, _Ld);
        _AB = _sB(_7i, _7i.x, _7i.y + _7i.vspeed, _Ld);
        _BB = _sB(_7i, _7i.x + _7i.hspeed, _7i.y + _7i.vspeed, _Ld);
        if ((_zB == false) && (_AB == false)) {
            _7i.sethspeed(-_7i.hspeed);
            _7i.setvspeed(-_7i.vspeed);
        } else if ((_zB == true) && (_AB == true) && (_BB == false)) {
            _7i.sethspeed(-_7i.hspeed);
            _7i.setvspeed(-_7i.vspeed);
        } else if (_zB == false) _7i.sethspeed(-_7i.hspeed);
        else if (_AB == false) _7i.setvspeed(-_7i.vspeed);
    }
}

function move_bounce_solid(_7i, _Md) {
    _Nd(_7i, _Md, false);
}

function move_bounce_all(_7i,
    _Md) {
    _Nd(_7i, _Md, true);
}

function _DB(_td, _h2, _i2, _Ld) {
    if (_Ld) return place_empty(_td, _h2, _i2);
    else return place_free(_td, _h2, _i2);
}

function move_contact(_td, _wd, _Kd, _Ld) {
    var _dj;
    if (_Kd <= 0) _dj = 1000;
    else _dj = _vb(_Kd);
    _A5 = Math.cos(_wd * Math.PI / 180);
    _B5 = -Math.sin(_wd * Math.PI / 180);
    if (_DB(_td, _td.x, _td.y, _Ld) == false) return;
    for (var i = 1; i <= _dj; i++) {
        if (_DB(_td, _td.x + _A5, _td.y + _B5, _Ld)) _td._P7(_td.x + _A5, _td.y + _B5);
        else return;
    }
}

function move_contact_solid(_7i, _wd, _Kd) {
    move_contact(_7i, _wd, _Kd, false);
}

function move_contact_all(_td,
    _wd, _Kd) {
    move_contact(_td, _wd, _Kd, true);
}

function _EB(_td, _wd, _Kd, _Ld) {
    var _dj;
    if (_Kd <= 0) _dj = 1000;
    else _dj = _vb(_Kd);
    var _A5 = Math.cos(_wd * Math.PI / 180);
    var _B5 = -sin(_wd * Math.PI / 180);
    if (_DB(_td, _td.x, _td.y, _Ld)) return;
    for (var i = 1; i <= _dj; i++) {
        _td._P7(_td.x + _A5, _td.y + _B5);
        if (_DB(_td, _td.x, _td.y, _Ld)) return;
    }
}

function move_outside_solid(_td, _wd, _Kd) {
    _EB(_td, _wd, _Kd, false);
}

function move_outside_all(_td, _wd, _Kd) {
    _EB(_td, _wd, _Kd, true);
}

function distance_to_point(_td, _h2, _i2) {
    if (_td._Py) _td._Qy();
    var _d3 = _td._Ry;
    var _FB = 0.0;
    var _GB = 0.0;
    if (_h2 > _d3._L2) {
        _FB = _h2 - _d3._L2;
    }
    if (_h2 < _d3.left) {
        _FB = _h2 - _d3.left;
    }
    if (_i2 > _d3.bottom) {
        _GB = _i2 - _d3.bottom;
    }
    if (_i2 < _d3.top) {
        _GB = _i2 - _d3.top;
    }
    return Math.sqrt((_FB * _FB) + (_GB * _GB));
}

function distance_to_object(_td, _cc) {
    var _0j = 10000000000;
    var i = 0;
    var _0j = _Jy(_td, Math.floor(_cc), false, _0j, function(_bi) {
        if (_td._Py) _td._Qy();
        if (_bi._Py) _bi._Qy();
        var _d3 = _bi._Ry;
        var _Cb = _td._Ry;
        var _FB = 0,
            _GB = 0;
        if (_d3.left > _Cb._L2) _FB = _d3.left - _Cb._L2;
        if (_d3._L2 < _Cb.left) _FB = _d3._L2 - _Cb.left;
        if (_d3.top > _Cb.bottom) _GB = _d3.top - _Cb.bottom;
        if (_d3.bottom < _Cb.top) _GB = _d3.bottom - _Cb.top;
        return Math.sqrt(_FB * _FB + _GB * _GB);
    });
    return _0j;
}

function position_empty(_td, _h2, _i2) {
    var _0j = 10000000000;
    var i = 0;
    var _HB = _9i(_td, _hz, false, false, function(_bi) {
        return _bi._di(_h2, _i2, true);
    });
    return !_HB;
}

function position_meeting(_7i, _h2, _i2, _cc) {
    var _8e, _eB;
    _8e = false;
    if (_cc == _IB) _cc = _td.id;
    var _4c = GetWithArray(_cc);
    for (var _Qd = 0; _Qd < _4c.length; _Qd++) {
        _eB = _4c[_Qd];
        if (_eB._di(_h2, _i2, true)) {
            _8e = true;
            break;
        }
    }
    return _8e;
}

function network_create_server(_y7, _JB, _KB) {
    return -1;
}

function network_create_server_raw(_y7, _JB, _KB) {
    return -1;
}

function network_create_socket(_y7, _JB, _KB) {
    return -1;
}

function network_connect(_LB, _Mg, _JB) {
    return -1;
}

function network_connect_raw(_LB, _Mg, _JB) {
    return -1;
}

function network_resolve(_Mg) {
    return "127.0.0.1";
}

function network_send_broadcast(_LB, _JB, _MB, _l7) {
    return -1;
}

function network_send_packet(_LB, _MB, _l7) {
    return -1;
}

function network_send_raw(_LB, _MB, _l7) {
    return -1;
}

function network_send_udp(_LB, _Mg, _JB, _MB, _l7) {
    return -1;
}

function network_send_udp_raw(_LB,
    _Mg, _JB, _MB, _l7) {
    return -1;
}

function network_destroy(_NB) {
    return 0;
}

function object_exists(_F1) {
    if (!_2q._O3(_F1)) return false;
    return true;
}

function object_get_name(_F1) {
    var _Wq = _2q._O3(_F1);
    if (!_Wq) return "";
    return _Wq._6p;
}

function object_get_sprite(_F1) {
    var _Wq = _2q._O3(_F1);
    if (!_Wq) return -1;
    return _Wq._3z;
}

function object_get_solid(_F1) {
    var _Wq = _2q._O3(_F1);
    if (!_Wq) return false;
    return _Wq._OB;
}

function object_get_visible(_F1) {
    var _Wq = _2q._O3(_F1);
    if (!_Wq) return false;
    return _Wq._PB;
}

function object_get_depth(_F1) {
    var _Wq = _2q._O3(_F1);
    if (!_Wq) return 0;
    return _Wq._QB;
}

function object_get_persistent(_F1) {
    var _Wq = _2q._O3(_F1);
    if (!_Wq) return false;
    return _Wq._RB;
}

function object_get_mask(_F1) {
    var _Wq = _2q._O3(_F1);
    if (!_Wq) return -1;
    return _Wq._SB;
}

function object_get_parent(_F1) {
    var _Wq = _2q._O3(_F1);
    if (!_Wq) return -1;
    return _Wq._ez;
}

function object_get_physics(_F1) {
    var _Wq = _2q._O3(_F1);
    if (!_Wq) return -1;
    return (_Wq._TB.physicsObject ? 1.0 : 0.0);
}

function object_set_sprite(_F1, _73) {
    var _Wq = _2q._O3(_F1);
    if (!_Wq) return;
    _Wq._3z = _73;
}

function object_set_solid(_F1,
    _UB) {
    var _Wq = _2q._O3(_F1);
    if (!_Wq) return;
    _Wq._OB = _UB;
}

function object_set_visible(_F1, _VB) {
    var _Wq = _2q._O3(_F1);
    if (!_Wq) return;
    _Wq._PB = _VB;
}

function object_set_depth(_F1, _Uc) {
    var _Wq = _2q._O3(_F1);
    if (!_Wq) return;
    _Wq._QB = _Uc;
}

function object_set_persistent(_F1, _WB) {
    var _Wq = _2q._O3(_F1);
    if (!_Wq) return;
    _Wq._RB = _WB;
}

function object_set_mask(_F1, _73) {
    var _Wq = _2q._O3(_F1);
    if (!_Wq) return;
    _Wq._SB = _73;
}

function object_set_parent(_F1, _XB) {
    var _Wq = _2q._O3(_F1);
    if (!_Wq) return;
    _Wq._ez = _XB;
    _Wq._fo = _2q._O3(_XB);
}

function object_is_ancestor(_YB,
    _R2) {
    var _Wq = _2q._O3(_YB);
    if (!_Wq) return 0;
    _Wq = _Wq._fo;
    while (_Wq !== null && _Wq !== undefined) {
        if (_Wq._gz === _R2) return 1;
        _Wq = _Wq._fo;
    }
    return 0;
}
var part_system_create = _9f;
var part_system_destroy = _cf;
var part_system_exists = _ZB;
var part_system_clear = _af;
var part_system_draw_order = __B;
var part_system_depth = _bf;
var part_system_position = _0C;
var part_system_automatic_update = _1C;
var part_system_automatic_draw = _2C;
var part_system_update = _3C;
var part_system_drawit = _4C;
var part_particles_create = _5C;
var part_particles_create_color = _6C;
var part_particles_create_colour = _6C;
var part_particles_clear = _df;
var part_particles_count = _7C;
var part_type_create = _mf;
var part_type_destroy = _8C;
var part_type_exists = _9C;
var part_type_clear = _aC;
var part_type_shape = _of;
var part_type_sprite = _sf;
var part_type_size = _pf;
var part_type_scale = _bC;
var part_type_blend = _cC;
var part_type_color1 = _dC;
var part_type_colour1 = _dC;
var part_type_color2 = _qf;
var part_type_colour2 = _qf;
var part_type_color3 = _eC;
var part_type_colour3 = _eC;
var part_type_color = _eC;
var part_type_colour = _eC;
var part_type_color_mix = _xf;
var part_type_colour_mix = _xf;
var part_type_color_rgb = _fC;
var part_type_colour_rgb = _fC;
var part_type_color_hsv = _gC;
var part_type_colour_hsv = _gC;
var part_type_alpha1 = _hC;
var part_type_alpha2 = _yf;
var part_type_alpha3 = _iC;
var part_type_life = _Df;
var part_type_step = _Wf;
var part_type_death = _Xf;
var part_type_orientation = _jC;
var part_type_speed = _Jf;
var part_type_direction = _Kf;
var part_type_gravity = _Nf;
var part_emitter_create = _3g;
var part_emitter_destroy = _7g;
var part_emitter_destroy_all = _kC;
var part_emitter_exists = _lC;
var part_emitter_clear = _mC;
var part_emitter_region = _5g;
var part_emitter_burst = _ag;
var part_emitter_stream = _bg;

function effect_create_below(_Q6, _h2, _i2, _l7, _oh) {
    _yg(true, _Q6, _h2, _i2, _l7, _oh);
}

function effect_create_above(_Q6, _h2, _i2, _l7, _oh) {
    _yg(false, _Q6, _h2, _i2, _l7, _oh);
}

function effect_clear() {
    if (_ZB(_nC)) {
        _cf(_nC);
        _nC = -1;
    }
    if (_ZB(_oC)) {
        _cf(_oC);
        _oC = -1;
    }
}

function path_exists(_F1) {
    if (_5B.Paths[_F1]) return true;
    return false;
}

function path_get_name(_F1) {
    if (!_5B.Paths[_F1]) return "";
    return _5B.Paths[_F1].name;
}

function path_get_length(_F1) {
    if (!_5B.Paths[_F1]) return 0;
    return _5B.Paths[_F1].length;
}

function path_get_kind(_F1) {
    if (!_5B.Paths[_F1]) return 0;
    return _5B.Paths[_F1].kind;
}

function path_get_closed(_F1) {
    if (!_5B.Paths[_F1]) return true;
    return _5B.Paths[_F1].closed;
}

function path_get_precision(_F1) {
    if (!_5B.Paths[_F1]) return 8;
    return _5B.Paths[_F1].precision;
}

function path_get_number(_F1) {
    var _4B = _5B.Paths[_F1];
    if (!_4B) return 0;
    if (!_4B.points) return 0;
    return _4B.points.length;
}

function path_get_point_x(_F1, _Gy) {
    if (_Gy < 0) return 0;
    var _4B = _5B.Paths[_F1];
    if (!_4B) return 0;
    if (!_4B.points) return 0;
    if (_4B.points._pC >= _Gy) return 0;
    return _4B.points[_Gy].x;
}

function path_get_point_y(_F1, _Gy) {
    if (_Gy < 0) return 0;
    var _4B = _5B.Paths[_F1];
    if (!_4B) return 0;
    if (!_4B.points) return 0;
    if (_4B.points._pC >= _Gy) return 0;
    return _4B.points[_Gy].y;
}

function path_get_point_speed(_F1, _Gy) {
    if (_Gy < 0) return 0;
    var _4B = _5B.Paths[_F1];
    if (!_4B) return 0;
    if (!_4B.points) return 0;
    if (_4B.points._pC >= _Gy) return 0;
    return _4B.points[_Gy].speed;
}

function path_get_x(_F1, _0c) {
    var _4B = _5B.Paths[_F1];
    if (!_4B) return -1;
    return _4B._qC(_0c);
}

function path_get_y(_F1, _0c) {
    var _4B = _5B.Paths[_F1];
    if (!_4B) return -1;
    return _4B._rC(_0c);
}

function path_get_speed(_F1, _0c) {
    var _4B = _5B.Paths[_F1];
    if (!_4B) return -1;
    return _4B._sC(_0c);
}

function path_set_kind(_F1, _Q6) {
    var _4B = _5B.Paths[_F1];
    if (!_4B) return -1;
    _4B._tC(_Q6);
}

function path_set_closed(_F1, _uC) {
    var _4B = _5B.Paths[_F1];
    if (!_4B) return -1;
    _4B._vC(_uC);
}

function path_set_precision(_F1, _Ra) {
    var _4B = _5B.Paths[_F1];
    if (!_4B) return -1;
    _4B._wC(_Ra);
}

function path_add() {
    var _4B = new _xC();
    _5B._1b(_4B);
    return _4B.id;
}

function path_duplicate(_F1) {
    var _4B = _5B.Paths[_F1];
    if (!_4B) return -1;
    _yC = new _xC();
    _5B._1b(_yC);
    _yC._Zy(_4B);
    return _yC.id;
}

function path_assign(_F1, _mg) {
    var _zC = _5B.Paths[_F1];
    if (!_zC) return;
    var _AC = _5B.Paths[_mg];
    if (!_AC) return;
    _zC._Zy(_AC);
}

function path_start(_td, _mg, _yd, _BC, _CC) {
    _td._pg(_mg, _yd, 1, 0, _CC, _BC);
}

function path_end(_td) {
    _td._pg(-1, 0, 1, 0, false, 0);
}
var draw_path = _DC;

function _DC(_ha, _EC, _FC, _CC) {
    var _4B = _5B.Paths[_ha];
    if (!_4B) return;
    _95.globalAlpha = _X6;
    _95.strokeStyle = _Wu;
    var _l3,
        _n3, _Ep;
    var _GC = 0;
    var _HC = _4B._IC(0);
    if (!_CC) {
        _EC = _EC - _HC.x;
        _FC = _FC - _HC.y;
    } else {
        _EC = 0;
        _FC = 0;
    }
    _GC = _vb(_4B.length / 4.0);
    if (_GC == 0) return;
    var first = true;
    _95._ev();
    for (var i = 0; i <= _GC; i++) {
        _HC = _4B._IC(i / _GC);
        if (first) {
            _95._fv(_EC + _HC.x, _FC + _HC.y);
            first = false;
        } else {
            _95._gv(_EC + _HC.x, _FC + _HC.y);
        }
    }
    _95._iv();
    _95._hv();
}

function path_shift(_ha, _EC, _FC) {
    var _4B = _5B.Paths[_ha];
    if (!_4B) return;
    _4B._JC(_EC, _FC);
}

function path_rescale(_ha, _Ie, _Je) {
    var _4B = _5B.Paths[_ha];
    if (!_4B) return;
    _4B._KC(_Ie, _Je);
}

function path_rotate(_ha,
    _l2) {
    var _4B = _5B.Paths[_ha];
    if (!_4B) return;
    _4B._LC(_l2);
}

function path_reverse(_ha) {
    var _4B = _5B.Paths[_ha];
    if (!_4B) return;
    _4B._dB();
}

function path_flip(_ha) {
    var _4B = _5B.Paths[_ha];
    if (!_4B) return;
    _4B._MC();
}

function path_mirror(_ha) {
    var _4B = _5B.Paths[_ha];
    if (!_4B) return;
    _4B._NC();
}

function path_change_point(_ha, _F1, _OC, _PC, _yd) {
    var _4B = _5B.Paths[_ha];
    if (!_4B) return;
    _4B._QC(_F1, _OC, _PC, _yd);
}

function path_delete(_F1) {
    var _4B = _5B.Paths[_F1];
    if (!_4B) return;
    _5B._4d(_4B);
}

function path_append(_F1, _mg) {
    var _Rb = _5B.Paths[_F1];
    if (!_Rb) return;
    var _Sb = _5B.Paths[_mg];
    if (!_Sb) return;
    _Rb._RC(_Sb);
}

function path_add_point(_F1, _h2, _i2, _yd) {
    var _4B = _5B.Paths[_F1];
    if (!_4B) return 0;
    _4B._cB(_h2, _i2, _yd);
}

function path_insert_point(_F1, _Gy, _h2, _i2, _yd) {
    var _4B = _5B.Paths[_F1];
    if (!_4B) return 0;
    _4B._SC(_Gy, _h2, _i2, _yd);
}

function path_delete_point(_F1, _Gy) {
    var _4B = _5B.Paths[_F1];
    if (!_4B) return 0;
    _4B._TC(_Gy);
}

function path_clear_points(_F1) {
    var _4B = _5B.Paths[_F1];
    if (!_4B) return 0;
    _4B._U9();
}
var _UC = new _VC();
var _WC = new _VC();
var _XC = new _VC();

function physics_world_create(_YC) {
    if (_81._ZC) {
        _81._ZC.__C(_YC);
        _81._ZC._0D(_81._91());
    } else {
        var physicsWorld = new _1D(_YC, _81._91());
        _81._ZC = physicsWorld;
    }
}

function physics_world_draw_debug(_2D) {
    _81._ZC._3D(_2D);
}

function physics_world_gravity(_4D, _5D) {
    _81._ZC._6D(_4D, _5D);
}

function physics_world_update_speed(_yd) {
    _81._ZC._0D(_yd);
}

function physics_world_update_iterations(_7D) {
    _81._ZC._8D(_7D);
}

function physics_pause_enable(_9D) {
    if (_9D) {
        _81._ZC._aD();
    } else {
        _81._ZC._bD();
    }
}

function physics_fixture_create() {
    var _cD = _UC._1b(new _dD(_cD));
    return _cD;
}

function physics_fixture_set_kinematic(_eD) {
    var _fD = _UC._O3(_eD);
    _fD._gD();
}

function physics_fixture_set_density(_eD, _hD) {
    var _fD = _UC._O3(_eD);
    _fD._iD(_hD);
}

function physics_fixture_set_restitution(_eD, _jD) {
    var _fD = _UC._O3(_eD);
    _fD._kD(_jD);
}

function physics_fixture_set_friction(_eD, _Bd) {
    var _fD = _UC._O3(_eD);
    _fD._lD(_Bd);
}

function physics_fixture_set_collision_group(_eD, _mD) {
    var _fD = _UC._O3(_eD);
    _fD._nD(_mD);
}

function physics_fixture_set_sensor(_eD, _oD) {
    var _fD = _UC._O3(_eD);
    _fD._pD((_oD > 0.5) ? true : false);
}

function physics_fixture_set_linear_damping(_eD,
    _qD) {
    var _fD = _UC._O3(_eD);
    _fD._rD(_qD);
}

function physics_fixture_set_angular_damping(_eD, _qD) {
    var _fD = _UC._O3(_eD);
    _fD._sD(_qD);
}

function physics_fixture_set_awake(_eD, _tD) {
    var _fD = _UC._O3(_eD);
    _fD._uD(_tD);
}

function physics_fixture_set_circle_shape(_eD, _vD) {
    var _fD = _UC._O3(_eD);
    _fD._wD(_vD * _81._ZC._xD);
}

function physics_fixture_set_box_shape(_eD, _yD, _zD) {
    var _fD = _UC._O3(_eD);
    var scale = _81._ZC._xD;
    _fD._AD(_yD * scale, _zD * scale);
}

function physics_fixture_set_edge_shape(_eD, _zi, _Ci, _Ai, _Di) {
    var _fD = _UC._O3(_eD);
    var scale = _81._ZC._xD;
    _fD._BD(_zi * scale, _Ci * scale, _Ai * scale, _Di * scale);
}

function physics_fixture_set_polygon_shape(_eD) {
    var _fD = _UC._O3(_eD);
    _fD._CD();
}

function physics_fixture_set_chain_shape(_eD, _0e) {
    var _fD = _UC._O3(_eD);
    _fD._DD(_0e);
}

function physics_fixture_add_point(_eD, _ED, _FD) {
    var _fD = _UC._O3(_eD);
    var scale = _81._ZC._xD;
    _fD._GD(_ED * scale, _FD * scale);
}

function physics_fixture_bind_ext(_td, _eD, _ha, _G1, _H1) {
    var _HD = -1;
    var _fD = _UC._O3(_eD);
    var _cc = Math.floor(_ha);
    if (_cc == _IB) {
        _cc = _td.id;
    }
    if (_cc == _hz) {
        var _4c = _ge._fB();
        for (var _Qd = 0; _Qd < _4c.length; _Qd++) {
            var _4p = _4c[_Qd];
            if (_4p._ID) continue;
            _HD = _81._ZC._JD(_fD, _4p, _G1, _H1);
        }
    } else if (_cc < 100000) {
        var _Wq = _2q._O3(_cc);
        if (_Wq === null) {
            return _KD;
        }
        var _4c = _Wq._LD();
        for (var _Qd = 0; _Qd < _4c.length; _Qd++) {
            var _4p = _4c[_Qd];
            if (_4p._ID) continue;
            _HD = _81._ZC._JD(_fD, _4p, _G1, _H1);
        }
    } else {
        var _4p = _ge._O3(_cc);
        _HD = _81._ZC._JD(_fD, _4p, _G1, _H1);
    }
    return _HD;
}

function physics_fixture_bind(_td, _eD, _ha, _MD, _ND) {
    if (_MD !== undefined && _ND !== undefined) {
        return physics_fixture_bind_ext(_td, _eD, _ha, _MD, _ND);
    } else {
        return physics_fixture_bind_ext(_td, _eD, _ha, 0.0, 0.0);
    }
}

function physics_fixture_delete(_eD) {
    _UC._2b(_eD);
}

function physics_joint_distance_create(_OD, _PD, _QD, _RD, _SD, _TD, _UD) {
    var _VD = _ge._O3(_OD);
    var _WD = _ge._O3(_PD);
    var _XD = _81._ZC._YD(_VD._ZD, _WD._ZD, _QD, _RD, _SD, _TD, (_UD > 0.5) ? true : false);
    if (_XD != -1) {
        return _XC._1b(_XD);
    }
    return -1;
}

function physics_joint_rope_create(_OD, _PD, _QD, _RD, _SD, _TD, __D, _UD) {
    var _VD = _ge._O3(_OD);
    var _WD = _ge._O3(_PD);
    var _XD = _81._ZC._0E(_VD._ZD, _WD._ZD, _QD, _RD, _SD, _TD, __D, (_UD > 0.5) ? true : false);
    if (_XD != -1) {
        return _XC._1b(_XD);
    }
    return -1;
}

function physics_joint_revolute_create(_OD, _PD, _1E, _2E, _3E, _4E, _5E, _6E, _7E, _8E, _UD) {
    var _VD = _ge._O3(_OD);
    var _WD = _ge._O3(_PD);
    var _XD = _81._ZC._9E(_VD._ZD, _WD._ZD, _1E, _2E, (_3E * Math.PI) / 180.0, (_4E * Math.PI) / 180.0, (_5E > 0.5) ? true : false, _6E, _7E, (_8E > 0.5) ? true : false, (_UD > 0.5) ? true : false);
    if (_XD != -1) {
        return _XC._1b(_XD);
    }
    return -1;
}

function physics_joint_prismatic_create(_OD, _PD, _1E, _2E, _aE, _bE, _cE, _dE, _5E, _eE, _7E, _8E, _UD) {
    var _VD = _ge._O3(_OD);
    var _WD = _ge._O3(_PD);
    var _XD = _81._ZC._fE(_VD._ZD,
        _WD._ZD, _1E, _2E, _aE, _bE, _cE, _dE, (_5E > 0.5) ? true : false, _eE, _7E, (_8E > 0.5) ? true : false, (_UD > 0.5) ? true : false);
    if (_XD != -1) {
        return _XC._1b(_XD);
    }
    return -1;
}

function physics_joint_pulley_create(_OD, _PD, _QD, _RD, _SD, _TD, _gE, _hE, _iE, _jE, _kE, _UD) {
    var _VD = _ge._O3(_OD);
    var _WD = _ge._O3(_PD);
    var _XD = _81._ZC._lE(_VD._ZD, _WD._ZD, _QD, _RD, _SD, _TD, _gE, _hE, _iE, _jE, _kE, (_UD > 0.5) ? true : false);
    if (_XD != -1) {
        return _XC._1b(_XD);
    }
    return -1;
}

function physics_joint_wheel_create(_OD, _PD, _mE, _nE, _oE, _pE, _qE, _6E, _7E, _rE, _sE, _UD) {
    var _VD = _ge._O3(_OD);
    var _WD = _ge._O3(_PD);
    var _XD = _81._ZC._tE(_VD._ZD, _WD._ZD, _mE, _nE, _oE, _pE, (_qE > 0.5) ? true : false, _6E, _7E, _rE, _sE, (_UD > 0.5) ? true : false);
    if (_XD != -1) {
        return _XC._1b(_XD);
    }
    return -1;
}

function physics_joint_weld_create(_OD, _PD, _mE, _nE, _uE, _rE, _sE, _UD) {
    var _VD = _ge._O3(_OD);
    var _WD = _ge._O3(_PD);
    var _XD = _81._ZC._vE(_VD._ZD, _WD._ZD, _mE, _nE, _uE, _rE, _sE, (_UD > 0.5) ? true : false);
    if (_XD != -1) {
        return _XC._1b(_XD);
    }
    return -1;
}

function physics_joint_friction_create(_OD, _PD, _mE, _nE, _wE, _xE, _UD) {
    var _VD = _ge._O3(_OD);
    var _WD = _ge._O3(_PD);
    var _XD = _81._ZC._yE(_VD._ZD, _WD._ZD, _mE, _nE, _wE, _xE, (_UD > 0.5) ? true : false);
    if (_XD != -1) {
        return _XC._1b(_XD);
    }
    return -1;
}

function physics_joint_gear_create(_OD, _PD, _zE, _AE, _kE) {
    var _VD = _ge._O3(_OD);
    var _WD = _ge._O3(_PD);
    var _BE = _XC._O3(_zE);
    var _CE = _XC._O3(_AE);
    var _XD = _81._ZC._DE(_VD._ZD, _WD._ZD, _BE, _CE, _kE);
    if (_XD != -1) {
        return _XC._1b(_XD);
    }
    return -1;
}

function physics_joint_enable_motor(_EE, _FE) {
    var _GE = _XC._O3(_EE);
    _GE._HE(_FE);
}

function physics_joint_get_value(_EE, _IE) {
    var _GE = _XC._O3(_EE);
    return _GE._JE(_IE);
}

function physics_joint_set_value(_EE,
    _IE, _qe) {
    var _GE = _XC._O3(_EE);
    return _GE._KE(_IE, _qe);
}

function physics_joint_delete(_LE) {
    _81._ZC._ME(_XC._O3(_LE));
    _XC._2b(_LE);
}

function physics_apply_force(_7i, _jb, _kb, _NE, _OE) {
    var scale = _81._ZC._xD;
    var _PE = _jb * scale;
    var _QE = _kb * scale;
    _7i._ZD._RE(_PE, _QE, _NE, _OE);
}

function physics_apply_impulse(_7i, _jb, _kb, _SE, _TE) {
    var scale = _81._ZC._xD;
    var _PE = _jb * scale;
    var _QE = _kb * scale;
    _7i._ZD._UE(_PE, _QE, _SE, _TE);
}

function physics_apply_local_force(_7i, _VE, _WE, _XE, _YE) {
    var scale = _81._ZC._xD;
    var _ZE = _VE * scale;
    var __E = _WE * scale;
    _7i._ZD._0F(_ZE, __E, _XE, _YE);
}

function physics_apply_local_impulse(_7i, _VE, _WE, _1F, _2F) {
    var scale = _81._ZC._xD;
    var _ZE = _VE * scale;
    var __E = _WE * scale;
    _7i._ZD._3F(_ZE, __E, _1F, _2F);
}

function physics_apply_angular_impulse(_7i, _4F) {
    _7i._ZD._5F(_4F);
}

function physics_apply_torque(_7i, _6F) {
    _7i._ZD._7F(_6F);
}

function physics_mass_properties(_7i, _8F, _9F, _aF, _bF) {
    var scale = _81._ZC._xD;
    _7i._ZD._cF(_8F, _9F * scale, _aF * scale, _bF);
}

function physics_draw_debug(_7i) {
    if ((_7i._ZD != null) && (_7i._ZD != undefined)) {
        _7i._ZD._3D(1.0 / _81._ZC._xD);
    }
}

function physics_test_overlap(_td, _h2, _i2, _l2, _cc) {
    if (_cc == _IB) {
        _cc = _7i.id;
    }
    var x = _h2 * _81._ZC._xD;
    var y = _i2 * _81._ZC._xD;
    var _E4 = (_l2 * Math.PI) / 180.0;
    if (_cc == _hz) {
        var _4c = _ge._fB();
        for (var _Qd = 0; _Qd < _4c.length; _Qd++) {
            var _4p = _4c[_Qd];
            if (_4p._ID) continue;
            if (_81._ZC._dF(_td, _4p, x, y, _E4)) {
                return true;
            }
        }
    } else if (_cc < 100000) {
        var _Wq = _2q._O3(_cc);
        if (_Wq === null) {
            return false;
        }
        var _4c = _Wq._LD();
        for (var _Qd = 0; _Qd < _4c.length; _Qd++) {
            var _4p = _4c[_Qd];
            if (_4p._ID) continue;
            if (_81._ZC._dF(_td, _4p, x, y, _E4)) {
                return true;
            }
        }
    } else {
        var _4p = _ge._O3(_cc);
        return _81._ZC._dF(_td, _4p, x, y, _E4);
    }
}

function physics_remove_fixture(_td, _eF) {
    var _cc = Math.floor(_td);
    if (_cc == _IB) {
        _cc = _td.id;
    }
    if (_cc == _hz) {
        var _4c = _ge._fB();
        for (var _Qd = 0; _Qd < _4c.length; _Qd++) {
            var _4p = _4c[_Qd];
            if (_4p._ID) continue;
            if (_4p._ZD) {
                _4p._ZD._fF(_eF);
            }
        }
    } else if (_cc < 100000) {
        var _Wq = _2q._O3(_cc);
        if (_Wq === null) {
            return _KD;
        }
        var _4c = _Wq._LD();
        for (var _Qd = 0; _Qd < _4c.length; _Qd++) {
            var _4p = _4c[_Qd];
            if (_4p._ID) continue;
            if (_4p._ZD) {
                _4p._ZD._fF(_eF);
            }
        }
    } else {
        var _4p = _ge._O3(_cc);
        if (_4p._ZD) {
            _4p._ZD._fF(_eF);
        }
    }
}

function physics_get_friction(_td, _eF) {
    if (_td._ZD) {
        return _td._ZD._gF(_eF);
    }
    return 0.0;
}

function physics_get_density(_td, _eF) {
    if (_td._ZD) {
        return _td._ZD._hF(_eF);
    }
    return 0.0;
}

function physics_get_restitution(_td, _eF) {
    if (_td._ZD) {
        return _td._ZD._iF(_eF);
    }
    return 0.0;
}

function physics_set_friction(_td, _eF, _f2) {
    if (_td._ZD) {
        _td._ZD._lD(_eF, _f2);
    }
}

function physics_set_density(_td, _eF, _f2) {
    if (_td._ZD) {
        _td._ZD._iD(_eF, _f2);
    }
}

function physics_set_restitution(_td, _eF, _f2) {
    if (_td._ZD) {
        _td._ZD._kD(_eF,
            _f2);
    }
}

function physics_particle_create(_jF, x, y, _kF, _lF, _F4, alpha, _mF) {
    return _81._ZC._nF(_jF, x, y, _kF, _lF, _F4, alpha, _mF);
}

function physics_particle_delete(_Q4) {
    _81._ZC._oF(_Q4);
}

function physics_particle_delete_region_circle(x, y, _pF) {
    _81._ZC._qF(x, y, _pF);
}

function physics_particle_delete_region_box(x, y, _rF, _sF) {
    _81._ZC._tF(x, y, _rF, _sF);
}

function physics_particle_delete_region_poly(_uF) {
    var points = [];
    for (var _X2 = 0; _X2 < ds_list_size(_uF); _X2++) {
        points.push(ds_list_find_value(_uF, _X2));
    }
    _81._ZC._vF(points, points.length >> 1);
}

function physics_particle_group_begin(_jF, _wF, x, y, _xF, _kF, _lF, _yF, _F4, alpha, _zF, _mF) {
    _81._ZC._AF(_jF, _wF, x, y, _xF, _kF, _lF, _yF, _F4, alpha, _zF, _mF);
}

function physics_particle_group_circle(_pF) {
    _81._ZC._BF(_pF);
}

function physics_particle_group_box(_rF, _sF) {
    _81._ZC._CF(_rF, _sF);
}

function physics_particle_group_polygon() {
    _81._ZC._DF();
}

function physics_particle_group_add_point(x, y) {
    _81._ZC._EF(x, y);
}

function physics_particle_group_end() {
    return _81._ZC._FF();
}

function physics_particle_group_join(_GF, _HF) {
    _81._ZC._IF(_GF,
        _HF);
}

function physics_particle_group_delete(_Q4) {
    _81._ZC._JF(_Q4);
}

function physics_particle_draw(_KF, _mF, _LF, _ye) {
    var _7p = _le._O3(_LF);
    if (_7p !== null) {
        _81._ZC._MF(_KF, _mF, _7p, _ye);
    }
}

function physics_particle_draw_ext(_KF, _mF, _LF, _ye, _NF, _OF, _E4, _F4, alpha) {
    var _7p = _le._O3(_LF);
    if (_7p !== null) {
        _81._ZC._PF(_KF, _mF, _7p, _ye, _NF, _OF, _E4, _F4, alpha);
    }
}

function physics_particle_count() {
    return _81._ZC._QF();
}

function physics_particle_get_data(buffer, _RF) {
    var _F5 = __w._O3(buffer);
    if (_F5) {
        _81._ZC._SF(_F5, _RF);
    }
}

function physics_particle_get_max_count() {
    return _81._ZC._TF();
}

function physics_particle_get_radius() {
    return _81._ZC._UF();
}

function physics_particle_get_density() {
    return _81._ZC._VF();
}

function physics_particle_get_damping() {
    return _81._ZC._WF();
}

function physics_particle_get_gravity_scale() {
    return _81._ZC._XF();
}

function physics_particle_set_max_count(_n4) {
    _81._ZC._YF(_n4);
}

function physics_particle_set_radius(_pF) {
    _81._ZC._ZF(_pF);
}

function physics_particle_set_density(__F) {
    _81._ZC._0G(__F);
}

function physics_particle_set_damping(_1G) {
    _81._ZC._2G(_1G);
}

function physics_particle_set_gravity_scale(scale) {
    _81._ZC._3G(scale);
}

function physics_particle_set_flags(_F1, _4G) {
    _81._ZC._5G(_F1, _4G);
}

function physics_particle_set_category_flags(_6G, _4G) {
    _81._ZC._7G(_6G, _4G);
}

function physics_particle_set_group_flags(_mD, _2D) {
    _81._ZC._8G(_mD, _2D);
}

function physics_particle_get_group_flags(_mD) {
    return _81._ZC._9G(_mD);
}

function physics_particle_get_data_particle(_Q4, buffer, _RF) {
    var _F5 = __w._O3(buffer);
    if (_F5) {
        _81._ZC._aG(_Q4, _F5, _RF);
    }
}

function physics_particle_group_count(_bG) {
    return _81._ZC._cG(_bG);
}

function physics_particle_group_get_data(_bG, buffer, _RF) {
    var _F5 = __w._O3(buffer);
    if (_F5) {
        _81._ZC._dG(_bG, _F5, _RF);
    }
}

function physics_particle_group_get_mass(_bG) {
    return _81._ZC._eG(_bG);
}

function physics_particle_group_get_inertia(_bG) {
    return _81._ZC._fG(_bG);
}

function physics_particle_group_get_centre_x(_bG) {
    return _81._ZC._gG(_bG);
}

function physics_particle_group_get_centre_y(_bG) {
    return _81._ZC._hG(_bG);
}

function physics_particle_group_get_vel_x(_bG) {
    return _81._ZC._iG(_bG);
}

function physics_particle_group_get_vel_y(_bG) {
    return _81._ZC._jG(_bG);
}

function physics_particle_group_get_ang_vel(_bG) {
    return _81._ZC._kG(_bG);
}

function physics_particle_group_get_x(_bG) {
    return _81._ZC._lG(_bG);
}

function physics_particle_group_get_y(_bG) {
    return _81._ZC._mG(_bG);
}

function physics_particle_group_get_angle(_bG) {
    return _81._ZC._nG(_bG);
}

function room_exists(_F1) {
    var room = _oG._O3(_F1);
    if ((room === null) || (room == undefined)) {
        return false;
    }
    return true;
}

function room_get_name(_F1) {
    var _pG = _oG._O3(_F1);
    if (_pG === null) return "";
    return _pG._qG;
}

function room_name(_F1) {
    return room_get_name(_F1);
}

function room_set_width(_F1, _Va) {
    var _pG = _oG._O3(_F1);
    if (_pG === null) return;
    _pG._rG = _Va;
    _pG._sG.width = _Va;
}

function room_set_height(_F1, _Wa) {
    var _pG = _oG._O3(_F1);
    if (_pG === null) return;
    _pG._tG = _Wa;
    _pG._sG.height = _Wa;
}

function room_set_caption(_F1, _Ge) {
    var _pG = _oG._O3(_F1);
    if (_pG === null) return;
    _pG._uG = _Ge;
}

function room_set_persistent(_F1, _f2) {
    var _pG = _oG._O3(_F1);
    if (_pG === null) return;
    var persistent = (_f2 >= 0.5) ? true : false;
    _pG._sG.persistent = persistent;
}

function room_set_code(_F1, _Ge) {
    var _pG = _oG._O3(_F1);
    if (_pG) {
        _pG._vG = _Ge;
    }
}

function room_set_background_color(_F1, _Z6, _qd) {
    var _pG = _oG._O3(_F1);
    if (_pG === null) return;
    var _wG = _pG._sG;
    _wG.colour = _Z6;
    _wG.showColour = _qd;
}
var room_set_background_colour = room_set_background_color;

function room_set_background(_F1, _xG, _VB, _yG, _ch, _h2, _i2, _zG, _AG, _BG, _CG, __6) {
    var _pG = _oG._O3(_F1);
    if (_VB > 0.5) _VB = true;
    else _VB = false;
    var _wG = _pG._sG;
    if (_wG.backgrounds[_xG] != null) {
        _wG.backgrounds[_xG].visible = _VB;
        _wG.backgrounds[_xG].foreground = _yG;
        _wG.backgrounds[_xG].index = _ch;
        _wG.backgrounds[_xG].x = _h2;
        _wG.backgrounds[_xG].y = _i2;
        _wG.backgrounds[_xG].htiled = _zG;
        _wG.backgrounds[_xG].vtiled = _AG;
        _wG.backgrounds[_xG].hspeed = _BG;
        _wG.backgrounds[_xG].vspeed = _CG;
        _wG.backgrounds[_xG].alpha = __6;
    }
}

function room_set_view(_F1, _DG, _VB, _EG, _FG, _GG, _HG, _IG, _JG, _KG, _LG, _MG, _NG, _BG, _CG, _cc) {
    var _pG = _oG._O3(_F1);
    if (_pG == null) return;
    var _7a = _pG._6a[_DG];
    _7a.visible = (_VB > 0.5) ? true : false;
    _7a._OG = _EG;
    _7a._PG = _FG;
    _7a._QG = _GG;
    _7a._RG = _HG;
    _7a._SG = _IG;
    _7a._TG = _JG;
    _7a._UG = _KG;
    _7a._VG = _LG;
    _7a.hborder = _MG;
    _7a.vborder = _NG;
    _7a.hspeed = _BG;
    _7a.vspeed = _CG;
    _7a._Pd = _cc;
    var _wG = _pG._sG;
    if (_wG.views[_DG] != null) {
        _wG.views[_DG].visible = (_VB > 0.5) ? true : false;
        _wG.views[_DG].xview = _EG;
        _wG.views[_DG].yview = _FG;
        _wG.views[_DG].wview = _GG;
        _wG.views[_DG].hview = _HG;
        _wG.views[_DG].xport = _IG;
        _wG.views[_DG].yport = _JG;
        _wG.views[_DG].wport = _KG;
        _wG.views[_DG].hport = _LG;
        _wG.views[_DG].hborder = _MG;
        _wG.views[_DG].vborder = _NG;
        _wG.views[_DG].hspeed = _BG;
        _wG.views[_DG].vspeed = _CG;
        _wG.views[_DG].index = _cc;
    }
}

function room_set_view_enabled(_F1,
    _f2) {
    var _pG = _oG._O3(_F1);
    if (_pG) {
        _pG.enableViews = _f2;
        _pG._sG.enableViews = _f2;
    }
}

function room_add() {
    var _pG = new _WG();
    _pG._XG();
    _oG._1b(_pG);
    return _pG.id;
}

function room_duplicate(_F1) {
    var _pG = _oG._O3(_F1);
    if (!_pG) {
        debug("Trying to duplicate non-existent room.");
        return 0;
    }
    return _oG._YG(_F1);
}

function room_assign(_F1, _7f) {
    if (_oG._O3(_F1) && _oG._O3(_7f)) {
        _oG._ZG(_F1, _7f);
        return true;
    }
    return false;
}

function room_instance_add(_F1, _h2, _i2, _cc) {
    var _pG = _oG._O3(_F1);
    if (_pG) {
        var instance_id = _Xy++;
        var __G = _pG._sG.pInstances.length;
        _pG._sG.pInstances[__G] = {
            x: _h2,
            y: _i2,
            index: _cc,
            id: instance_id
        };
        return instance_id;
    }
    return 0;
}

function room_instance_clear(_F1) {
    var _pG = _oG._O3(_F1);
    if (_pG) {
        _pG._0H();
    }
}

function room_tile_add(_F1, _ch, _lh, _mh, _j4, _k4, _h2, _i2, _Uc) {
    var _pG = _oG._O3(_F1);
    if (_pG) {
        var _1H = _pG._sG.tiles.length;
        _pG._sG.tiles[_1H] = {
            x: _h2,
            y: _i2,
            index: _ch,
            xo: _lh,
            yo: _mh,
            w: _j4,
            h: _k4,
            depth: _Uc,
            id: _Xy++
        };
    }
}

function room_tile_add_ext(_F1, _ch, _lh, _mh, _j4, _k4, _h2, _i2, _Uc, _Ie, _Je, __6) {
    var _pG = _oG._O3(_F1);
    if (_pG) {
        var _1H = _pG._sG.tiles.length;
        var _F4 = 0xffffff | ((__6 * 255) << 24);
        _pG._sG.tiles[_1H] = {
            x: _h2,
            y: _i2,
            index: _ch,
            xo: _lh,
            yo: _mh,
            w: _j4,
            h: _k4,
            depth: _Uc,
            scaleX: _Ie,
            scaleY: _Je,
            colour: _F4,
            id: _Xy++
        };
    }
}

function room_tile_clear(_F1) {
    var _pG = _oG._O3(_F1);
    if (_pG) {
        _pG._2H();
    }
}

function room_goto_next() {
    if ((_81._3H + 1) >= _oG._4H.length) return;
    _5H = _oG._6H(_81._3H + 1).id;
}

function room_restart() {
    global.repeated = true;
    _5H = _81.id;
}

function room_goto(_7f) {
    var _7H = _oG._O3(_7f);
    if ((_7H == null) || (_7H == undefined)) {
        _Qn("Error: Room " + _7f + " is not a valid room index");
    } else {
        _5H = _7f;
    }
}

function room_goto_previous() {
    if ((_81._3H - 1) < 0) return;
    _5H = _oG._6H(_81._3H - 1).id;
}

function room_previous(_Tr) {
    var _ic = -1;
    for (var i = 0; i < _oG._8H.length; i++) {
        if (_oG._8H[i] == _Tr) return _ic;
        _ic = _oG._8H[i];
    }
    return -1;
}

function room_next(_Tr) {
    for (var i = 0; i < (_oG._8H.length - 1); i++) {
        if (_oG._8H[i] == _Tr) {
            return _oG._8H[i + 1];
        }
    }
    return -1;
}

function game_end() {
    room_goto(_9H);
}

function game_restart() {
    g_pBuiltIn.score = 0;
    g_pBuiltIn.lives = 0;
    g_pBuiltIn.health = 100;
    _5H = _aH;
}
var _bH = function() {
    _56("yy_texture_get_texel_width()");
};
var _cH = function() {
    _56("yy_texture_get_texel_height()");
};
var _dH = function() {
    _56("texture_set_stage()");
};
var _eH = function() {
    _56("shader_is_compiled()");
};
var _fH = function() {
    _56("shader_set()");
};
var _gH = function() {
    _56("shader_get_uniform()");
};
var _hH = function() {
    _56("shader_set_uniform_i()");
};
var _iH = function() {
    _56("shader_set_uniform_f()");
};
var _jH = function() {
    _56("shader_set_uniform_matrix()");
};
var _kH = function() {
    _56("shader_set_uniform_matrix()");
};
var _lH = function() {
    _56("shader_enable_corner_id()");
};
var _mH = function() {
    _56("shader_set_uniform_array_i()");
};
var _nH = function() {
    _56("shader_set_uniform_array_f()");
};
var _oH = function() {
    _56("shader_set_uniform_matrix_array()");
};

function texture_get_texel_width(_l4) {
    return _bH(_l4);
}

function texture_get_texel_height(_l4) {
    return _cH(_l4);
}

function texture_set_stage(_pH, _j8) {
    _dH(_pH, _j8);
}

function shaders_are_supported() {
    return 0;
}

function shader_is_compiled(_qH) {
    return _eH(_qH);
}

function shader_set(_qH) {
    _fH(_qH);
}

function shader_reset() {
    _fH(-1);
}

function shader_get_uniform(_qH, _rH) {
    return _gH(_qH, _rH);
}

function shader_set_uniform_i() {
    var _Cp = arguments[0];
    var _sH = [].splice.call(arguments, 1, arguments.length);
    _hH(_Cp, _sH);
}

function shader_set_uniform_f() {
    var _Cp = arguments[0];
    var _sH = [].splice.call(arguments, 1, arguments.length);
    _iH(_Cp, _sH);
}

function shader_set_uniform_i1() {
    var _Cp = arguments[0];
    var _sH = [];
    _sH[0] = arguments[1];
    _hH(_Cp, _sH);
}

function shader_set_uniform_matrix() {
    var _Cp = arguments[0];
    _jH(_Cp);
}

function shader_get_sampler_index(_qH, _j8) {
    return _kH(_qH, _j8);
}

function shader_enable_corner_id(_tH) {
    _lH(_tH);
}

function shader_set_uniform_i_array(_uH,
    _3u) {
    _mH(_uH, _3u);
}

function shader_set_uniform_f_array(_uH, _3u) {
    _nH(_uH, _3u);
}

function shader_set_uniform_matrix_array(_uH, _3u) {
    _oH(_uH, _3u);
}
var _vH = [];
var _wH = 300000;
var _xH = _wH;
var _yH = [];
var _zH = 0;
var audio_sampledata = [];
var _AH = false;
var _BH = 0;
var _CH = 128;
var _DH = 100000;
var _EH = [];
var _FH = [];
var _GH = 0;
var _HH = 200000;
var _IH = [];
var _JH = [];
var _KH = 0;
var _LH = 0;
var _MH = [];
var _NH = {
    _OH: 0,
    _PH: 1,
    _QH: 2,
    _RH: 3,
    _SH: 4,
    _TH: 5,
    _UH: 6
};
var _VH = {
    _WH: 0,
    _XH: 1,
    _YH: 2
};
var _ZH = 0;
var __H = 1.0;
var _0I = 0;

function _1I() {
    if (_ra != _sa) return;
    _BH++;
}
var _2I;

function _3I() {
    if (_ra != _sa) {
        return;
    }
    _4I = g_WebAudioContext.createGainNode();
    _4I.connect(g_WebAudioContext.destination);
    audio_falloff_set_model(_NH._PH);
    var _5I;
    if (typeof document.hidden !== "undefined") {
        _2I = "hidden";
        _5I = "visibilitychange";
    } else if (typeof document.mozHidden !== "undefined") {
        _2I = "mozHidden";
        _5I = "mozvisibilitychange";
    } else if (typeof document.msHidden !== "undefined") {
        _2I = "msHidden";
        _5I = "msvisibilitychange";
    } else if (typeof document.webkitHidden !== "undefined") {
        _2I = "webkitHidden";
        _5I = "webkitvisibilitychange";
    }
    document.addEventListener(_5I, _6I, false);
    g_WebAudioContext.listener._5c = new _7l(0, 0, 0);
    g_WebAudioContext.listener._7I = new _7l(0, 0, 0);
    g_WebAudioContext.listener._8I = new Array(0, 0, 0, 0, 0, 0);
    audio_listener_position(0, 0, 0);
    audio_listener_orientation(0, 0, 1.0, 0, 1.0, 0.0);
    _9I();
    _aI();
}

function _bI() {
    this.buffer = null;
    this.gain = 1.0;
    this._cI = 1.0;
    this._dI = 1.0;
    this.duration = 0.0;
    this._eI = 0.0;
    this.groupId = 0;
    this.kind = 0;
}

function _fI(_gI, _hI, _iI) {
    this._jI = g_WebAudioContext.createGainNode();
    this._kI = null;
    this._Cp = 0;
    this._lI(_gI,
        _hI, _iI);
}
_fI.prototype._lI = function(_gI, _hI, _iI) {
    this._mI = false;
    this._nI = g_WebAudioContext.currentTime;
    this.playbackpoint = 0;
    this._oI = null;
    this._jI.disconnect();
    this.gain = 1.0;
    this._jI.gain.value = 1;
    if (this._kI != null) {
        this._kI.disconnect();
        this._kI = null;
    }
    this.paused = false;
    this._pI = _gI;
    this._qI = _iI;
    this._rI = false;
    this._sI = _hI;
    this._tI = false;
    this._uI = false;
    this._vI = false;
    this._wI = null;
    this._xI = null;
    if (_gI >= 0) {
        this._tI = _yI(_gI);
        this._uI = _zI(_gI);
        this._vI = _AI(_gI);
        if (!this._uI && !this._vI) {
            this._jI.gain.value = audio_sampledata[_gI].gain;
            if (this._Cp >= _wH) {
                _MH[this._Cp - _wH] = null;
            }
            this._Cp = _xH;
            _MH[_xH - _wH] = this;
            ++_xH;
        }
    }
};

function _BI(_uH) {
    if (_uH < _wH || _uH >= _xH) {
        debug("Error: invalid sound handle " + _uH);
        return null;
    }
    var _CI = _MH[_uH - _wH];
    if (_CI == undefined) {
        return null;
    }
    return _CI;
}

function _yI(_pI) {
    if (_pI >= 0 && _pI < _Pn.Sounds.length) {
        if (_Pn.Sounds[_pI].kind == 1) {
            return true;
        }
    } else if (_pI < _DH) {
        debug("IsSoundStreamed - Error: soundid " + _pI + " not found");
    }
    return false;
}

function _zI(_pI) {
    if (_pI >= _DH && _pI < _HH) {
        return true;
    }
    return false;
}

function _AI(_pI) {
    if (_pI >= _HH && _pI < _wH) {
        return true;
    }
    return false;
}

function _DI(_gI) {
    var _CI = _Pn.Sounds[_gI];
    var _zp = _x4 + _CI.origName;
    var _EI = _CI.extension;
    _zp = _FI(_zp);
    var index = _zp.indexOf(_EI);
    if (index > 0) {
        _zp = _zp.substr(0, index);
    }
    if (_GI) {
        _EI = "ogg";
    } else if (_HI) {
        _EI = "mp3";
    } else {
        _EI = "ogg";
    }
    _zp = _zp + "." + _EI;
    return _zp;
}

function _II(_JI, _gI, _KI) {
    var _LI = _MI(_gI);
    var _NI = _LI._eI;
    if (_LI._Kz == 'loading') {
        _LI._OI.push(["Audio_Play", _JI, _gI, _KI]);
        return;
    }
    if (_JI._tI) _PI(_JI, _gI, _KI, _NI);
    else _QI(_JI, _gI, _KI, _NI);
    _JI._mI = true;
}

function _PI(_JI,
    _gI, _KI, _RI) {
    var _SI = _DI(_gI);
    try {
        if (_JI._wI != null) {
            document.body.removeChild(_JI._wI);
        }
        _JI._wI = new Audio();
        var _wI = _JI._wI;
        _wI.controls = false;
        _wI.autoplay = true;
        _wI.preload = "none";
        _wI.loop = (_KI) != 0 ? true : false;
        _wI.src = _SI;
        document.body.appendChild(_wI);
        if (_RI > 0) {
            _wI.addEventListener('loadedmetadata', function() {
                _JI._wI.currentTime = _RI;
            }, false);
        }
        _wI.load();
        try {
            _wI.play();
        } catch (_TI) {
            debug("audio_tag.play() exception: " + _TI);
        }
        _JI._pI = _gI;
        _JI._xI = g_WebAudioContext.createMediaElementSource(_wI);
        _JI._xI.connect(_JI._jI);
    } catch (_TI) {
        debug("Audio_PlayStreamed exception: " + _TI);
    }
}

function _ta() {
    var _CI = g_WebAudioContext.createBufferSource();
    var gain = g_WebAudioContext.createGainNode();
    _CI.connect(gain);
    gain.connect(g_WebAudioContext.destination);
    gain.gain.value = 0;
    _CI.noteOn(0);
}

function _QI(_JI, _gI, _UI, _RI) {
    _JI._pI = _gI;
    try {
        var _VI = null;
        var _WI = false;
        if (_gI >= _HH && _gI < (_HH + _KH)) {
            _WI = true;
            var _XI = _gI - _HH;
            _IH[_XI]._YI.connect(_JI._jI);
            _IH[_XI].gainnode = _JI._jI;
            _VI = _IH[_XI]._YI;
        } else {
            var _LI = _MI(_gI);
            var _dI = _LI._dI;
            if (_JI._kI != null) {
                _dI *= _JI._kI._dI;
            }
            _JI._oI = g_WebAudioContext.createBufferSource();
            _JI._oI.playbackRate.value = _dI;
            _JI._oI.loop = _UI;
            _JI._oI.buffer = _LI.buffer;
            _JI._oI.connect(_JI._jI);
            _VI = _JI._oI;
        }
        _JI._nI = g_WebAudioContext.currentTime;
        _VI.onended = function(event) {
            _JI._mI = false;
            if (true === _JI._oI.loop) _QI(_JI, _gI, _UI, _RI);
        };
        if (!_WI) {
            if (_RI != undefined) {
                _VI.start(0, _RI);
                _JI.playbackpoint = _RI;
            } else {
                _VI.noteOn(0);
                _JI.playbackpoint = 0;
            }
        }
    } catch (_TI) {
        debug("Audio_PlayUnstreamed exception: " + _TI);
    }
}

function _ZI(_JI) {
    if (_JI._mI) {
        if (_JI._tI) __I(_JI);
        else _0J(_JI);
        _JI._pI = -1;
        _JI._mI = false;
    }
}

function __I(_JI) {
    if (_JI._wI != null) {
        try {
            _JI._wI.pause();
            _JI._xI.disconnect();
            if (_JI._jI != null) _JI._jI.disconnect();
            if (_JI._kI != null) {
                _JI._kI.disconnect();
                _JI._kI = null;
            }
        } catch (_TI) {
            debug("Audio_StopStreamed exception: " + _TI);
        }
    }
}

function _0J(_JI) {
    try {
        if (_JI._pI >= _HH && _JI._pI < (_HH + _KH)) {
            var _1J = _JI._pI - _HH;
            _IH[_1J]._YI.onended = null;
            _IH[_1J]._YI.disconnect();
        } else if (_JI._oI != null) {
            _JI._oI.onended = null;
            _JI._oI.loop = false;
            _JI._oI.noteOff(0);
            _JI._oI.disconnect();
        }
        if (_JI._jI != null) _JI._jI.disconnect();
        if (_JI._kI != null) {
            _JI._kI.disconnect();
            _JI._kI = null;
        }
    } catch (_TI) {
        debug("Audio_StopUnstreamed exception: " + _TI);
    }
}

function _2J(_JI) {
    if (!_JI.paused) {
        if (_JI._tI) _3J(_JI);
        else _4J(_JI);
        _JI.paused = true;
    }
}

function _3J(_JI) {
    try {
        _JI._wI.pause();
    } catch (_TI) {
        debug("Audio_PauseStreamed exception: " + _TI);
    }
}

function _4J(_JI) {
    try {
        if (_JI._pI >= _HH && _JI._pI < (_HH + _KH)) {
            var _1J = _JI._pI - _HH;
            _IH[_1J]._YI.disconnect(0);
            _IH[_1J]._YI.onended = null;
        } else {
            _JI._oI.onended = null;
            _JI._oI.noteOff(0);
            _JI.playbackpoint += g_WebAudioContext.currentTime - _JI._nI;
        }
    } catch (_TI) {
        debug("Audio_PauseUnstreamed exception: " + _TI);
    }
}

function _5J(_JI) {
    if (_JI.paused) {
        if (_JI._tI) _6J(_JI);
        else _7J(_JI);
        _JI.paused = false;
    }
}

function _6J(_JI) {
    if (_JI.paused) {
        try {
            _JI._wI.play();
        } catch (_TI) {
            debug("Audio_ResumeStreamed exception: " + _TI);
        }
    }
}

function _7J(_JI) {
    try {
        if (_JI._pI >= _HH && _JI._pI < (_HH + _KH)) {
            var _1J = _JI._pI - _HH;
            _IH[_1J]._YI.connect(_JI._jI);
            _IH[_1J]._YI.onended = function(event) {
                _JI._mI = false;
            };
        } else {
            _JI._oI = g_WebAudioContext.createBufferSource();
            _JI._nI = g_WebAudioContext.currentTime;
            _JI._jI = g_WebAudioContext.createGainNode();
            var _8J = _MI(_JI._pI);
            _JI._jI.gain.value = _JI.gain * _8J.gain;
            _JI._oI.connect(_JI._jI);
            _JI._oI.onended = function(event) {
                _JI._mI = false;
            };
            if (_JI._kI != null) {
                _JI._jI.connect(_JI._kI);
            } else {
                _JI._jI.connect(_4I);
            }
            _JI._oI.buffer = _8J.buffer;
            if (_JI._qI > 0) _JI._oI.loop = true; {
                var _9J = Math.floor(_JI.playbackpoint / _JI._oI.buffer.duration);
                var _aJ = _JI.playbackpoint - _9J * _JI._oI.buffer.duration;
                _JI._oI.noteGrainOn(0, _aJ, _JI._oI.buffer.duration - _aJ);
            }
        }
    } catch (_TI) {
        debug("Audio_ResumeUnstreamed exception: " + _TI);
    }
}

function _bJ(_JI) {
    var _cJ = false;
    if (_JI._mI) {
        return _JI.paused;
    }
    return false;
}

function _dJ(_JI) {
    var _eJ = false;
    if (_JI._mI) {
        if (_JI._tI) _eJ = _fJ(_JI);
        else _eJ = _gJ(_JI);
    }
    return _eJ;
}

function _gJ(_JI) {
    if (_JI._oI != null) {
        if ((_JI._oI.playbackState == undefined || _JI._oI.playbackState != _JI._oI.FINISHED_STATE) || _JI.paused) {
            return true;
        }
    }
    return false;
}

function _fJ(_JI) {
    if (_JI._wI != null) {
        if (!_JI._wI.ended) {
            return true;
        }
    }
    return false;
}

function _hJ(_gI, _hI, _iI) {
    if (_ra != _sa) return null;
    var i;
    var _CI;
    for (i = 0; i < _LH; ++i) {
        _CI = _vH[i];
        if (!_CI._mI) {
            _CI._lI(_gI, _hI, _iI);
            return _CI;
        } else {
            var _iJ = false;
            if (_CI._tI && _CI._wI != null) {
                _iJ = _CI._wI.ended;
            } else {
                _iJ = ((_CI._oI.playbackState != undefined && _CI._oI.playbackState == _CI._oI.FINISHED_STATE) && !_CI.paused);
            }
            if (_iJ) {
                _CI._lI(_gI, _hI, _iI);
                return _CI;
            }
        }
    }
    if (_LH < _CH) {
        var _jJ = new _fI(_gI, _hI, _iI);
        _vH[_LH] = _jJ;
        ++_LH;
        return _jJ;
    }
    var _kJ = _hI;
    var _lJ = -1;
    for (i = 0; i < _LH; ++i) {
        _CI = _vH[i];
        if (_CI._sI < _kJ) {
            _lJ = i;
            _kJ = _CI._sI
        }
    }
    if (_lJ >= 0) {
        debug("killing sound on channel " + _lJ);
        var _mJ = _vH[_lJ];
        _ZI(_mJ);
        _mJ._lI(_gI, _hI, _iI);
        return _mJ;
    }
    debug("reached max sounds and no lower priority");
    return null;
}

function _MI(_pI) {
    var _LI = null;
    if (_pI >= 0 && _pI <= audio_sampledata.length) {
        _LI = audio_sampledata[_pI];
    } else {
        var _nJ = _pI - _DH;
        if (_nJ >= 0 && _nJ < _GH) {
            _LI = _FH[_nJ];
        } else {
            var _1J = _pI - _HH;
            if (_1J >= 0 && _1J < _KH) {
                _LI = _JH[_1J];
            }
        }
    }
    return _LI;
}

function audio_play_sound(_pI, _sI, _qI) {
    var _LI = _MI(_pI);
    if (_LI == null) {
        // debug("audio_play_sound - invalid sound index: " + _pI);
        return -1;
    }
    var groupId = _LI.groupId;
    if (!audio_group_is_loaded(groupId)) {
        debug(audio_get_name(_pI) + ": Audio Group " + groupId + " is not loaded");
        return -1;
    }
    var _jJ = _hJ(_pI, _sI, _qI);
    if (_jJ == null) return -1;
    _jJ._jI.connect(_4I);
    _II(_jJ, _pI, (_qI > 0));
    return _jJ._Cp;
}

function audio_play_sound_on(_oJ, _pI, _qI, _sI) {
    var _LI = _MI(_pI);
    if (_LI == null) {
        // debug("audio_play_sound - invalid sound index: " + _pI);
        return -1;
    }
    if (!audio_emitter_exists(_oJ)) {
        debug("Attempting to play sound on inactive emitter %d\n", _oJ);
        return;
    }
    var groupId = _LI.groupId;
    if (!audio_group_is_loaded(groupId)) {
        debug(audio_get_name(_pI) + ": Audio Group " + groupId + " is not loaded");
        return -1;
    }
    var _jJ = _hJ(_pI, _sI, _qI);
    if (_jJ == null) return -1;
    _jJ._kI = _yH[_oJ];
    _yH[_oJ].connect(_yH[_oJ].gainnode);
    _jJ._jI.connect(_jJ._kI);
    _II(_jJ, _pI, (_qI > 0));
    return _jJ._Cp;
}

function _pJ(_pI, x, y, _96, _qJ, _rJ, _sJ, _qI, _sI) {
    if (_pI < 0 || _pI >= audio_sampledata.length) {
        // debug("invalid sound index: " + _pI);
        return;
    }
    var _jJ = _hJ(_pI, _sI, _qI);
    if (_jJ == null) return -1;
    var _oJ = audio_emitter_create();
    audio_emitter_position(_oJ, x, y, _96);
    audio_emitter_falloff(_oJ, _qJ, _rJ, _sJ);
    _jJ._kI = _yH[_oJ];
    _jJ._jI.connect(_jJ._kI);
    _II(_jJ, _pI, (_qI > 0));
    return _jJ._Cp;
}

function audio_play_sound_at(_pI, x, y, _96, _qJ, _rJ, _sJ, _qI, _sI) {
    var _oJ = audio_emitter_create();
    audio_emitter_position(_oJ, x, y, _96);
    audio_emitter_falloff(_oJ, _qJ, _rJ, _sJ);
    var _Cp = audio_play_sound_on(_oJ, _pI, _qI, _sI);
    return _Cp;
}

function audio_stop_sound(_gI) {
    if (_ra != _sa) return;
    var _CI;
    if (_gI >= _wH) {
        _CI = _BI(_gI);
        if (_CI != null) {
            _ZI(_CI);
        }
    } else {
        for (i = 0; i < _LH; ++i) {
            _CI = _vH[i];
            if (_CI._pI == _gI) _ZI(_CI);
        }
    }
}

function audio_pause_sound(_gI) {
    if (_ra != _sa) return;
    var _CI;
    if (_gI >= _wH) {
        _CI = _BI(_gI);
        if (_CI != null) {
            _2J(_CI);
        }
    } else {
        for (i = 0; i < _LH; ++i) {
            _CI = _vH[i];
            if (_CI._pI == _gI) {
                _2J(_CI);
            }
        }
    }
}

function audio_resume_sound(_gI) {
    if (_ra != _sa) return;
    if (_gI >= _wH) {
        var _CI = _BI(_gI);
        if (_CI != null) {
            _5J(_CI);
        }
    } else {
        for (i = 0; i < _LH; ++i) {
            var _CI = _vH[i];
            if (_CI._pI == _gI) {
                _5J(_CI);
            }
        }
    }
}

function audio_play_music(_gI, _KI) {
    debug("audio_play_music :: deprecated function\n");
}

function audio_stop_music() {
    debug("audio_stop_music :: deprecated function");
}

function audio_pause_music() {
    debug("audio_pause_music :: deprecated function");
}

function audio_resume_music() {
    debug("audio_resume_music :: deprecated function");
}

function audio_music_is_playing() {
    debug("audio_music_is_playing :: deprecated function");
    return 0;
}

function audio_exists(_ha) {
    if (_2e._O3(_ha) === null) {
        return false;
    }
    return true;
}

function audio_sound_get_pitch(_gI) {
    if (_ra == _sa) {
        if (_gI >= _wH) {
            var _CI = _BI(_gI);
            if (_CI != null && _CI._mI) {
                if (_CI._oI != null) {
                    return _CI._oI.playbackRate.value;
                }
            }
        } else {
            if (audio_sampledata[_gI].buffer != null) {
                return audio_sampledata[_gI]._dI;
            }
        }
    }
    return 1;
}

function audio_sound_pitch(_gI, _dI) {
    if (_ra != _sa) {
        return;
    }
    if (_gI >= _wH) {
        var _CI = _BI(_gI);
        if (_CI != null && _CI._mI) {
            if (!_CI._tI) {
                if (!_CI.paused) {
                    if (_CI._oI.playbackState == undefined || _CI._oI.playbackState != _CI._oI.FINISHED_STATE) {
                        _CI._oI.playbackRate.value = _dI;
                    }
                }
            } else {
                debug("pitch setting unsupported for streamed sounds");
            }
        }
    } else {
        if (audio_sampledata[_gI].buffer != null) {
            audio_sampledata[_gI]._dI = _dI;
            for (i = 0; i < _LH; ++i) {
                var _tJ = _vH[i];
                if (_tJ._mI && _tJ._pI == _gI) {
                    var _uJ = _dI;
                    if (_tJ._kI != undefined) {
                        _uJ *= _tJ._kI._dI;
                    }
                    _tJ._oI.playbackRate.value = _uJ;
                }
            }
        } else {
            debug("pitch setting unsupported for streamed sounds");
        }
    }
}

function audio_sound_get_gain(_tb) {
    if (_ra = _sa) {
        if (_tb >= _wH) {
            var _CI = _BI(_tb);
            if (_CI != null) {
                if (_CI._mI) {
                    return _CI.gain;
                }
            }
        } else {
            if (audio_sampledata[_tb] != undefined) {
                return audio_sampledata[_tb].gain;
            }
        }
    }
    return 0;
}

function audio_sound_gain(index, _vJ, _6e) {
    if (_ra != _sa) return;
    var speed = 15;
    var _wJ = 1000 / speed;
    if (_wJ <= 0) _wJ = 1;
    var _dj = _6e / _wJ;
    if (_dj < 1) _dj = 1;
    if (index >= _wH) {
        var _CI = _BI(index);
        if (_CI == null) {
            return;
        }
        var _xJ = audio_sampledata[_CI._pI].gain;
        if (_CI._mI) {
            if (_6e == 0) {
                var _yJ = _vJ;
                if (_yJ < 0) _yJ = 0;
                if (_yJ > 1) _yJ = 1;
                _CI.gain = _yJ;
                _CI._jI.gain.value = _CI.gain * _xJ;
            } else {
                var _zJ = (_vJ - _CI.gain) / _dj;
                try {
                    function _AJ() {
                        setTimeout(function() {
                            var _yJ = _CI.gain + _zJ;
                            if (_yJ < 0) _yJ = 0;
                            if (_yJ > 1) _yJ = 1;
                            _CI.gain = _yJ;
                            _CI._jI.gain.value = _CI.gain * _xJ;
                            _dj--;
                            if (_dj > 0) _AJ();
                        }, _wJ);
                    }
                    _AJ();
                } catch (_xq) {
                    if (_BJ) debug("Error setting audio volume: " + index);
                }
            }
        }
    } else {
        var _Q4 = index;
        if (audio_sampledata[_Q4] != undefined) {
            var _cI = audio_sampledata[_Q4]._cI;
            _vJ *= _cI;
            if (_6e == 0) {
                var _yJ = _vJ;
                if (_yJ < 0) _yJ = 0;
                if (_yJ > 1) _yJ = 1;
                audio_sampledata[_Q4].gain = _yJ;
                for (i = 0; i < _LH; ++i) {
                    var _tJ = _vH[i];
                    if (_tJ._mI && _tJ._pI == _Q4) {
                        _tJ._jI.gain.value = _tJ.gain * audio_sampledata[_Q4].gain;
                    }
                }
            } else {
                var _zJ = (_vJ - audio_sampledata[_Q4].gain) / _dj;
                try {
                    function _CJ() {
                        setTimeout(function() {
                            var _yJ = audio_sampledata[_Q4].gain + _zJ;
                            if (_yJ < 0) _yJ = 0;
                            if (_yJ > 1) _yJ = 1;
                            audio_sampledata[_Q4].gain = _yJ;
                            for (i = 0; i < _LH; ++i) {
                                var _tJ = _vH[i];
                                if (_tJ._mI && _tJ._pI == _Q4) {
                                    _tJ._jI.gain.value = _tJ.gain * audio_sampledata[_Q4].gain;
                                }
                            }
                            _dj--;
                            if (_dj > 0) _CJ();
                        }, speed);
                    }
                    _CJ();
                } catch (_xq) {
                    if (_BJ) debug("Error setting audio volume: " + index);
                }
            }
        }
    }
}

function audio_music_gain(_vJ, _6e) {
    debug("audio_music_gain :: deprecated function\n");
}

function _6I() {
    if (_ra == _sa) {
        if (document[_2I] == true) {
            if (!_AH) {
                _AH = true;
                _DJ(true);
            }
        } else if (document[_2I] == false) {
            if (_AH) {
                _EJ(true);
                _AH = false;
            }
        }
    }
}

function audio_sound_length(_gI) {
    if (_ra != _sa) return -1;
    var _FJ = -1;
    if (_gI < _wH) {
        _FJ = _gI;
    } else {
        var _CI = _BI(_gI);
        if (_CI != null) {
            _FJ = _CI._pI;
        }
    }
    if (_FJ != -1) {
        if (_yI(_FJ)) {
            return (audio_sampledata[_FJ].duration);
        } else {
            return audio_sampledata[_FJ].buffer.duration;
        }
    }
    return -1;
}

function _GJ(_JI) {
    if (_JI._mI) {
        if (!_JI._tI) {
            var _6e = _JI.playbackpoint;
            if (!_JI.paused) {
                _6e += (g_WebAudioContext.currentTime - _JI._nI);
            }
            if (_JI._qI > 0) {
                var duration = _JI._oI.buffer.duration;
                _6e %= duration;
            }
            return _6e;
        } else {
            if (_JI._wI != null) {
                var _6e = _JI._wI.currentTime;
                return _6e;
            }
        }
    }
    return 0;
}

function audio_sound_get_track_position(_gI) {
    if (_ra != _sa) return 0;
    if (_gI >= _wH) {
        var _CI = _BI(_gI);
        if (_CI != null) {
            return _GJ(_CI);
        }
    } else if (_gI >= 0) {
        var _8J = audio_sampledata[_gI];
        if (_8J != undefined) {
            return _8J._eI;
        }
    }
    return 0;
}

function _HJ(_JI, _E2) {
    if (_JI._mI) {
        if (!_JI._tI) {
            var duration = _JI._oI.buffer.duration;
            if (_E2 >= 0 && _E2 < duration) {
                if (_JI.paused) {
                    _JI.playbackpoint = _E2;
                } else {
                    _JI._oI.noteOff(0);
                    _JI._oI.disconnect();
                    _QI(_JI, _JI._pI, _JI._qI > 0, _E2);
                }
            }
        } else {
            try {
                _JI._wI.currentTime = _E2;
            } catch (_TI) {
                debug("Audio_SetTrackPos exception: " + _TI);
                _JI._wI.addEventListener('loadedmetadata', function() {
                    _JI._wI.currentTime = _E2;
                }, false);
            }
        }
    }
}

function audio_sound_set_track_position(_gI, _E2) {
    if (_ra != _sa) return;
    if (_gI >= _wH) {
        var _CI = _BI(_gI);
        if (_CI != null) {
            _HJ(_CI, _E2);
        }
    } else if (_gI >= 0) {
        var duration = audio_sound_length(_gI);
        if (_E2 < 0) _E2 = 0;
        if (_E2 < duration) {
            var _8J = audio_sampledata[_gI];
            if (_8J != undefined) {
                _8J._eI = _E2;
            }
        }
    }
}

function audio_system() {
    if (_ra == _sa) return 1;
    else return 0;
}

function audio_emitter_exists(_IJ) {
    if (_IJ < 0 || _IJ >= _yH.length) {
        return false;
    }
    if (_yH[_IJ] != undefined) return true;
    return false;
}

function audio_get_type(_gI) {
    if (_ra != _sa) return -1;
    if (_yI(_gI)) {
        return 1;
    }
    return 0;
}

function audio_get_name(_tb) {
    if (_ra == _sa) {
        var _JJ = -1;
        if (_tb >= _wH) {
            var _CI = _BI(_tb);
            if (_CI != null) {
                _JJ = _CI._pI;
            }
        } else {
            _JJ = _tb;
        }
        if (_JJ >= 0 && _JJ < _Pn.Sounds.length) {
            var name = _Pn.Sounds[_JJ].pName;
            return name;
        }
    }
    return "<undefined>";
}
var _KJ;

function audio_falloff_set_model(_LJ) {
    if (_ra != _sa) {
        return;
    }
    var _MJ = g_WebAudioContext.createPanner();
    _KJ = _MJ.INVERSE_DISTANCE;
    switch (_LJ) {
        case _NH._OH:
            debug("Audio_falloff_none not supported in html5\n");
            break;
        case _NH._PH:
            _KJ = _MJ.INVERSE_DISTANCE;
            break;
        case _NH._QH:
            debug("Audio_falloff_inverse_distance_clamped not supported in html5\n");
            break;
        case _NH._RH:
            _KJ = _MJ.LINEAR_DISTANCE;
            break;
        case _NH._SH:
            debug("Audio_falloff_linear_distance_clamped not supported in html5\n");
            break;
        case _NH._TH:
            _KJ = _MJ.EXPONENTIAL_DISTANCE;
            break;
        case _NH._UH:
            debug("Audio_falloff_exponent_distance_clamped not supported in html5\n");
            break;
        default:
            debug("Attempting to set audio falloff to unknown model\n");
            break;
    }
}

function _DJ(_NJ) {
    for (i = 0; i < _LH; ++i) {
        var _CI = _vH[i];
        if (_CI._mI) {
            if (!_CI.paused) {
                _2J(_CI);
                if (_NJ) _CI._rI = true;
            }
        }
    }
}

function audio_stop_all() {
    for (i = 0; i < _LH; ++i) {
        var _CI = _vH[i];
        if (_CI._mI) {
            _ZI(_CI);
        }
    }
}

function _OJ(_PJ) {
    for (i = 0; i < _LH; ++i) {
        var _CI = _vH[i];
        if (_CI._mI) {
            var groupId = audio_sampledata[_CI._pI].groupId;
            if (groupId == _PJ) {
                _ZI(_CI);
            }
        }
    }
}

function audio_pause_all() {
    _DJ(false);
}

function audio_resume_all() {
    _EJ(false);
}

function _EJ(_NJ) {
    for (i = 0; i < _LH; ++i) {
        var _CI = _vH[i];
        if (_CI._mI) {
            if (_CI.paused) {
                if (_NJ) {
                    if (_CI._rI) {
                        _5J(_CI);
                        _CI._rI = false;
                    }
                } else {
                    _5J(_CI);
                }
            }
        }
    }
}

function audio_is_paused(_gI) {
    if (_ra !== _sa) return false;
    if (_gI >= _wH) {
        var _CI = _BI(_gI);
        if (_CI != null) {
            return _bJ(_CI);
        }
    } else {
        for (i = 0; i < _LH; ++i) {
            _CI = _vH[i];
            if (_CI._pI == _gI) {
                if (_CI._mI) {
                    if (_bJ(_CI)) {
                        return true;
                    }
                }
            }
        }
    }
    return false;
}

function audio_is_playing(_gI) {
    if (_ra !== _sa) return false;
    if (_gI >= _wH) {
        var _CI = _BI(_gI);
        if (_CI != null) {
            if (_dJ(_CI)) {
                return true;
            }
        }
    } else {
        for (i = 0; i < _LH; ++i) {
            _CI = _vH[i];
            if (_CI._pI == _gI) {
                if (_CI._mI) {
                    if (_dJ(_CI)) {
                        return true;
                    }
                }
            }
        }
    }
    return false;
}

function audio_listener_position(_QJ, _RJ, _SJ) {
    if (_ra == _sa) {
        var _TJ = g_WebAudioContext.listener;
        _TJ.setPosition(_QJ, _RJ, _SJ);
        _TJ._5c._Hl = _QJ;
        _TJ._5c._Il = _RJ;
        _TJ._5c._Jl = _SJ;
    }
}

function audio_listener_velocity(_QJ,
    _RJ, _SJ) {
    if (_ra == _sa) {
        var _TJ = g_WebAudioContext.listener;
        _TJ.setVelocity(_QJ, _RJ, _SJ);
        _TJ._7I._Hl = _QJ;
        _TJ._7I._Il = _RJ;
        _TJ._7I._Jl = _SJ;
    }
}

function audio_listener_orientation(_QJ, _RJ, _SJ, _UJ, _VJ, _WJ) {
    if (_ra == _sa) {
        var _TJ = g_WebAudioContext.listener;
        _TJ.setOrientation(_QJ, _RJ, _SJ, _UJ, _VJ, _WJ);
        _TJ._8I[0] = _QJ;
        _TJ._8I[1] = _RJ;
        _TJ._8I[2] = _SJ;
        _TJ._8I[3] = _UJ;
        _TJ._8I[4] = _VJ;
        _TJ._8I[5] = _WJ;
    }
}

function audio_listener_set_position(_XJ, _h2, _i2, _c7) {
    if (_XJ == 0) {
        audio_listener_position(_h2, _i2, _c7);
    }
}

function audio_listener_set_velocity(_XJ,
    _YJ, _ZJ, __J) {
    if (_XJ == 0) {
        audio_listener_velocity(_YJ, _ZJ, __J);
    }
}

function audio_listener_set_orientation(_XJ, _0K, _1K, _2K, _3K, _4K, _5K) {
    if (_XJ == 0) {
        audio_listener_orientation(_0K, _1K, _2K, _3K, _4K, _5K);
    }
}

function audio_listener_get_data(_XJ) {
    if (_XJ == 0) {
        var _TJ = g_WebAudioContext.listener;
        var map = ds_map_create();
        ds_map_add(map, "x", _TJ._5c._Hl);
        ds_map_add(map, "y", _TJ._5c._Il);
        ds_map_add(map, "z", _TJ._5c._Jl);
        ds_map_add(map, "vx", _TJ._7I._Hl);
        ds_map_add(map, "vy", _TJ._7I._Il);
        ds_map_add(map, "vz", _TJ._7I._Jl);
        ds_map_add(map,
            "lookat_x", _TJ._8I[0]);
        ds_map_add(map, "lookat_y", _TJ._8I[1]);
        ds_map_add(map, "lookat_z", _TJ._8I[2]);
        ds_map_add(map, "up_x", _TJ._8I[3]);
        ds_map_add(map, "up_y", _TJ._8I[4]);
        ds_map_add(map, "up_z", _TJ._8I[5]);
        return map;
    }
    return -1;
}

function audio_emitter_position(_QJ, _RJ, _SJ, _UJ) {
    if (_ra == _sa) {
        var _6K = _yH[_QJ];
        if (_6K != undefined) {
            _6K.setPosition(_RJ, _SJ, _UJ);
            _6K._5c._Hl = _RJ;
            _6K._5c._Il = _SJ;
            _6K._5c._Jl = _UJ;
        }
    }
}

function audio_emitter_get_x(_7K) {
    var _6K = _yH[_7K];
    if (_6K != undefined) {
        return _6K._5c._Hl;
    }
    return 0;
}

function audio_emitter_get_y(_7K) {
    var _6K = _yH[_7K];
    if (_6K != undefined) {
        return _6K._5c._Il;
    }
    return 0;
}

function audio_emitter_get_z(_7K) {
    var _6K = _yH[_7K];
    if (_6K != undefined) {
        return _6K._5c._Jl;
    }
    return 0;
}

function audio_emitter_velocity(_QJ, _RJ, _SJ, _UJ) {
    if (_ra == _sa) {
        var _6K = _yH[_QJ];
        if (_6K != undefined) {
            _6K.setVelocity(_RJ, _SJ, _UJ);
            _6K._7I._Hl = _RJ;
            _6K._7I._Il = _SJ;
            _6K._7I._Jl = _UJ;
        }
    }
}

function audio_emitter_get_vx(_7K) {
    var _6K = _yH[_7K];
    if (_6K != undefined) {
        return _6K._7I._Hl;
    }
    return 0;
}

function audio_emitter_get_vy(_7K) {
    var _6K = _yH[_7K];
    if (_6K != undefined) {
        return _6K._7I._Il;
    }
    return 0;
}

function audio_emitter_get_vz(_7K) {
    var _6K = _yH[_7K];
    if (_6K != undefined) {
        return _6K._7I._Jl;
    }
    return 0;
}

function audio_emitter_create() {
    if (_ra != _sa) return;
    var _Q4 = _zH;
    _zH++;
    _yH[_Q4] = g_WebAudioContext.createPanner();
    _yH[_Q4].gainnode = g_WebAudioContext.createGainNode();
    _yH[_Q4].gainnode.gain.value = 1.0;
    _yH[_Q4].gainnode.connect(_4I);
    _yH[_Q4].connect(_yH[_Q4].gainnode);
    _yH[_Q4].maxDistance = 100000;
    _yH[_Q4].refDistance = 100;
    _yH[_Q4]._dI = 1.0;
    _yH[_Q4].distanceModel = _KJ;
    _yH[_Q4]._5c = new _7l(0,
        0, 0);
    _yH[_Q4]._7I = new _7l(0, 0, 0);
    _yH[_Q4].panningModel = _yH[_Q4].EQUALPOWER;
    return _Q4;
}

function audio_emitter_free(_IJ) {
    if (_ra == _sa) {
        if (_IJ >= 0 && _IJ < _yH.length) {
            var _6K = _yH[_IJ];
            if (_6K != undefined) {
                var i;
                for (i = 0; i < _LH; ++i) {
                    var _CI = _vH[i];
                    if (_CI._mI && _CI._kI === _6K) {
                        _ZI(_CI);
                    }
                }
                _6K.disconnect();
                _yH[_IJ] = undefined;
            }
        }
    }
}

function audio_master_gain(_QJ) {
    if (_ra != _sa) return;
    _4I.gain.value = _QJ;
}

function audio_set_master_gain(_XJ, _8K) {
    if (_XJ == 0) {
        audio_master_gain(_8K);
    }
}

function audio_get_master_gain(_XJ) {
    if (_XJ == 0) {
        return _4I.gain.value;
    }
    return 0;
}

function audio_emitter_gain(_QJ, _RJ) {
    if (_ra != _sa) return;
    var _6K = _yH[_QJ];
    if (_6K != undefined) {
        _6K.gainnode.gain.value = _RJ;
    }
}

function audio_emitter_get_gain(_7K) {
    if (_ra == _sa) {
        if (_7K >= 0 && _7K < _yH.length) {
            var _6K = _yH[_7K];
            if (_6K != undefined) {
                return _6K.gainnode.gain.value;
            }
        }
    }
    return 0;
}

function audio_emitter_pitch(index, _dI) {
    if (_ra != _sa) return;
    if (index < 0 || index >= _yH.length) {
        return;
    }
    if (_yH[index] == undefined) return;
    _yH[index]._dI = _dI;
    for (i = 0; i < _LH; ++i) {
        var _CI = _vH[i];
        if (_CI._mI && !_CI.paused) {
            if (!_CI._tI) {
                if (_CI._oI.playbackState == undefined || _CI._oI.playbackState != _CI._oI.FINISHED_STATE) {
                    if (_CI._kI == _yH[index]) {
                        _CI._oI.playbackRate.value = audio_sampledata[_CI._pI]._dI * _dI;
                    }
                }
            } else {
                debug("pitch setting not supported on streamed sounds");
            }
        }
    }
}

function audio_emitter_get_pitch(_7K) {
    if (_ra == _sa) {
        if (_7K >= 0 && _7K < _yH.length) {
            var _6K = _yH[_7K];
            if (_6K != undefined) {
                return _6K._dI;
            }
        }
    }
    return 1;
}

function audio_emitter_falloff(_QJ, _RJ, _SJ, _UJ) {
    if (_ra != _sa) return;
    var _6K = _yH[_QJ];
    if (_6K != undefined) {
        _6K.refDistance = _RJ;
        _6K.maxDistance = _SJ;
        _6K.rolloffFactor = _UJ;
        _6K.distanceModel = _KJ;
    }
}

function audio_channel_num(_9K) {
    if (_9K < _CH) {
        for (i = _9K; i < _LH; ++i) {
            var _CI = _vH[i];
            if (_CI._mI) {
                _ZI(_CI);
            }
        }
        if (_LH > _9K) _LH = _9K;
    }
    _CH = _9K;
}

function audio_sound_get_listener_mask(_pI) {
    return 1;
}

function audio_sound_set_listener_mask(_pI, _aK) {}

function audio_emitter_get_listener_mask(_oJ) {
    return 1;
}

function audio_emitter_set_listener_mask(_oJ, _aK) {}

function audio_get_listener_mask() {
    return 1;
}

function audio_set_listener_mask(_aK) {}

function audio_get_listener_count() {
    return 1;
}

function audio_get_listener_info(index) {
    if (_ra == _sa) {
        if (index == 0) {
            var map = ds_map_create();
            ds_map_add(map, "name", "default");
            ds_map_add(map, "mask", 1);
            ds_map_add(map, "index", index);
            return map;
        }
    }
    return -1;
}

function audio_debug(_bK) {}

function _cK(e) {
    if (_ra != _sa) return;
    var targetid = e.target.targetid;
    debug("error loading sound" + targetid);
    if (targetid == undefined) {} else {
        debug("AudioError: " + this.URL);
        this.completed = false;
        _dK++;
        ClearEventListeners(this);
    }
}

function _eK(e) {
    if (_ra != _sa) return;
    var targetid = e.target.targetid;
    if (_BJ) debug("sound loaded" + targetid);
    if (targetid == undefined) {} else {
        this.completed = true;
        ClearEventListeners(this);
        try {
            g_WebAudioContext.decodeAudioData(e.target.response, function(buffer) {
                var _8J = audio_sampledata[targetid];
                _8J.buffer = buffer;
                _dK++;
            }, function(err) {
                debug("error decoding audio data:" + err);
                _dK++
            });
        } catch (_xq) {
            debug("error decoding audio data: " + _xq.message);
            _dK++;
        }
    }
}

function _fK(_Mg, _ha, _gK) {
    var _8J = audio_sampledata[_ha];
    _8J.buffer = null;
}

function _hK(_Mg, _ha, _gK, _iK) {
    _Mg = _FI(_Mg);
    if ((_ra != _sa) || (_jK == false)) {
        return undefined;
    }
    var _EI;
    var index;
    index = _Mg.indexOf(_gK);
    if (index > 0) {
        _Mg = _Mg.substr(0, index);
    }
    if (_GI) {
        _gK = "ogg";
    } else if (_HI) {
        _gK = "mp3";
    } else {
        _gK = "ogg";
    }
    _Mg = _Mg + "." + _gK;
    var _by = new XMLHttpRequest();
    _by.open('GET', _Mg, true);
    _by.responseType = 'arraybuffer';
    _by.targetid = _ha;
    _by.URL = _Mg;
    _by.completed = false;
    if (_iK != undefined) {
        _by.targetid = {
            _bG: _iK,
            _JJ: _ha
        };
        _by.onload = _kK;
        _by.onerror = _lK;
    } else {
        _by.onload = _eK;
        _by.onerror = _cK;
    }
    _by.send();
    _mK[_ha] = _by;
    return _ha;
}
var _nK = "Unloaded";
var _oK = "Loading";
var _pK = "Loaded";
var _qK = "Unloading";
var _rK = 0;
var _sK = [];

function _tK(_PJ) {
    this.groupId = _PJ;
    this._uK = _nK;
    this._vK = 0;
    this._wK = 0;
    this._xK = [];
}
_tK.prototype._yK = function(_zK) {
    this._xK.push(_zK);
};
_tK.prototype._AK = function(_BK) {
    if (this._uK != _BK) {
        this._uK = _BK;
        debug("Audio Group " + this.groupId + "-> " + this._uK);
        if (_BK == _pK) {
            var map = ds_map_create();
            g_pBuiltIn.async_load = map;
            ds_map_add(map, "type", "audiogroup_load");
            ds_map_add(map, "group_id", this.groupId);
            _2q._3q(_CK, 0);
        }
    }
};

function _kK(e) {
    var targetid = this.targetid._JJ;
    var _DK = this.targetid._bG;
    if (_BJ) debug("sound loaded " + targetid);
    if (targetid != undefined) {
        e.target.completed = true;
        ClearEventListeners(this);
        try {
            g_WebAudioContext.decodeAudioData(e.target.response, function(buffer) {
                var _8J = audio_sampledata[targetid];
                _8J.buffer = buffer;
                _DK._EK();
            }, function(err) {
                debug("error decoding audio data:" + err);
                _DK._EK();
            });
        } catch (_xq) {
            debug("error decoding audio data: " + _xq.message);
            _DK._EK();
        }
    }
}

function _lK(e) {
    var targetid = this.targetid._JJ;
    var _DK = this.targetid._bG;
    debug("error loading sound" + targetid);
    if (targetid != undefined) {
        debug("AudioError: " + this.URL);
        this.completed = false;
        ClearEventListeners(this);
        _DK._EK();
    }
}
_tK.prototype._EK = function() {
    this._vK--;
    if (this._xK.length > 0) {
        this._wK = ((this._xK.length - this._vK) * 100) / (this._xK.length);
    }
    if (this._vK <= 0) {
        this._AK(_pK);
    }
};
_tK.prototype._p4 = function() {
    if (this._uK != _nK) {
        return 0;
    }
    if (this._xK.length == 0) {
        return 0;
    }
    this._AK(_oK);
    this._vK = this._xK.length;
    this._wK = 0;
    var i;
    for (i = 0; i < this._xK.length; ++i) {
        var index = this._xK[i];
        if (_Pn.Sounds[index].kind == 0) {
            var id = _hK(_x4 + _Pn.Sounds[index].origName,
                index, _Pn.Sounds[index].extension, this);
            if (id === undefined) this._EK();
        } else {
            this._EK();
        }
    }
};
_tK.prototype._FK = function() {
    if (this._uK != _pK) {
        return 0;
    }
    this._AK(_qK);
    _OJ(this.groupId);
    var i;
    for (i = 0; i < this._xK.length; ++i) {
        var index = this._xK[i];
        var _8J = audio_sampledata[index];
        if (_8J != undefined) {
            _8J.buffer = null;
        }
    }
    this._AK(_nK);
};
_tK.prototype._GK = function() {
    if (this._uK == _pK) {
        return 1;
    }
    return 0;
};
_tK.prototype._HK = function() {
    if (this._uK == _pK) {
        return 100;
    }
    if (this._uK == _oK) {
        return ~~this._wK;
    }
    return 0;
};

function _9I() {
    var index;
    var _IK = 1;
    for (index = 0; index < _Pn.Sounds.length; index++) {
        if (_Pn.Sounds[index] !== null) {
            var _8J = new _bI();
            audio_sampledata[index] = _8J;
            _8J.buffer = null;
            var _JK = _Pn.Sounds[index].volume;
            _8J.gain = _JK;
            _8J._cI = _JK;
            _8J._dI = 1.0;
            _8J.kind = _Pn.Sounds[index].kind;
            if (_Pn.Sounds[index].duration != undefined) {
                _8J.duration = _Pn.Sounds[index].duration;
            }
            _8J.groupId = 0;
            var groupId = _Pn.Sounds[index].groupId;
            if (groupId != undefined) {
                _8J.groupId = groupId;
            }
        }
    }
}

function _aI() {
    if (_Pn.AudioGroups) {
        var i;
        _rK = _Pn.AudioGroups.length;
        for (i = 0; i < _rK; ++i) {
            _sK[i] = new _tK(i);
        }
        for (i = 0; i < audio_sampledata.length; ++i) {
            var _CI = audio_sampledata[i];
            if (_CI != undefined) {
                groupId = _CI.groupId;
                if (_sK[groupId] != undefined) {
                    _sK[groupId]._yK(i);
                }
            }
        }
    }
}

function audio_group_load(_PJ) {
    if (_PJ > 0 && _PJ < _rK) {
        var _DK = _sK[_PJ];
        var _9e = _DK._p4();
        return _9e;
    }
    return 0;
}

function audio_group_unload(_PJ) {
    if (_PJ > 0 && _PJ < _rK) {
        var _DK = _sK[_PJ];
        var _9e = _DK._FK();
        return _9e;
    }
    return 0;
}

function audio_group_is_loaded(_PJ) {
    if (_PJ == 0) {
        return 1;
    }
    if (_PJ > 0 && _PJ < _rK) {
        var _DK = _sK[_PJ];
        var _9e = _DK._GK();
        return _9e;
    }
    return 0;
}

function audio_group_load_progress(_PJ) {
    if (_PJ == 0) {
        return 100;
    }
    if (_PJ > 0 && _PJ < _rK) {
        var _DK = _sK[_PJ];
        var _9e = _DK._HK();
        return _9e;
    }
    return 0;
}

function audio_group_name(_PJ) {
    if (_PJ >= 0 && _PJ < _rK) {
        var name = _Pn.AudioGroups[_PJ].name;
        return name;
    }
    return "<undefined>";
}

function audio_group_stop_all(_PJ) {
    _OJ(_PJ);
}

function audio_group_set_gain(_PJ, _KK, _LK) {
    for (i = 0; i < _LH; ++i) {
        var _CI = _vH[i];
        if (_CI._mI) {
            var groupId = audio_sampledata[_CI._pI].groupId;
            if (groupId == _PJ) {
                audio_sound_gain(_CI._Cp, _KK, _LK);
            }
        }
    }
}

function _MK() {
    if (_ra != _sa) return null;
    var _CI;
    for (var i = 0; i < _GH; i++) {
        var _CI = _EH[i];
        if (_CI != null && !_CI._uI) {
            _CI._lI(_DH + i, 10, false);
            return _CI;
        }
    }
    if (_GH < _CH) {
        var _jJ = new _fI(_DH + _GH, 10, false);
        _EH[_GH] = _jJ;
        _jJ._Cp = _DH + _GH;
        ++_GH;
        return _jJ;
    }
    return null;
}

function _NK(_OK) {
    return _OK;
}

function _PK(_OK) {
    return _OK;
}

function audio_create_buffer_sound(_QK, _RK, _SK, _TK, _UK, _VK) {
    var _jJ = _MK();
    if (_jJ == null) return -1;
    var _WK = 1;
    if (_VK == _VH._XH) _WK = 2;
    else if (_VK > _VH._YH) {
        debug("audio_create_buffer_sound - unhandled _channels setting : " + _VK);
        return -1;
    }
    var _XK = 8;
    if (_RK == _YK) _XK = 16;
    else if (_RK != _5x) {
        debug("audio_create_buffer_sound - unhandled _bufferFormat setting : " + _RK);
        return -1;
    }
    buffer_seek(_QK, _ZK, 0);
    var __K = _UK;
    _0L = buffer_create(44 + __K, _1L, 1);
    buffer_write(_0L, _2L, _NK(0x46464952));
    buffer_write(_0L, _2L, _NK(36 + __K));
    buffer_write(_0L, _2L, _NK(0x45564157));
    buffer_write(_0L, _2L, _NK(0x20746d66));
    buffer_write(_0L, _2L, _NK(16));
    buffer_write(_0L, _3L, _PK(1));
    buffer_write(_0L, _3L, _PK(_WK));
    buffer_write(_0L, _2L, _NK(_SK));
    buffer_write(_0L, _2L, _NK(_SK * _WK * _XK / 8));
    buffer_write(_0L, _3L, _PK(_WK * _XK / 8));
    buffer_write(_0L, _3L, _PK(_XK));
    buffer_write(_0L, _2L, _NK(0x61746164));
    buffer_write(_0L, _2L, _NK(__K));
    buffer_copy(_QK, _TK, __K, _0L, 44);
    var _F5 = buffer_get_address(_0L);
    var _8J = new _bI();
    _8J.gain = 1.0;
    _8J._cI = 1.0;
    _8J._dI = 1.0;
    _8J.kind = 0;
    _8J.duration = __K / (_SK * _VK * _XK / 8);
    _8J.groupId = 0;
    _8J._Kz = 'loading';
    _8J._OI = [];
    _FH[_jJ._Cp - _DH] = _8J;
    try {
        g_WebAudioContext.decodeAudioData(_F5, function(buffer) {
            buffer_delete(_0L);
            var index = _jJ._Cp - _DH;
            _FH[index]._Kz = 'loaded';
            _FH[index].buffer = buffer;
            for (var i = 0; i < _FH[index]._OI.length; i++) {
                var _OI = _FH[index]._OI[i];
                if (_OI[0] == "Audio_Play") {
                    _II(_OI[1], _OI[2], _OI[3]);
                }
            }
        }, function(err) {
            debug("error decoding audio data:" + err);
            buffer_delete(_0L);
        });
    } catch (_xq) {
        debug("audio_create_buffer_sound - error decoding audio data: " + _xq + " -- " + _xq.message);
    }
    return _jJ._Cp;
}

function audio_free_buffer_sound(_4L) {
    var _nJ = _4L - _DH;
    if (_nJ < 0 || _nJ >= _GH) {
        debug("sound " + _4L + " does not appear to be a buffer sound, not freeing");
        return -1;
    }
    _EH[_nJ]._uI = false;
    _FH[_nJ] = null;
    return 0;
}

function _5L() {
    if (_ra != _sa) return null;
    var _CI;
    for (var i = 0; i < _KH; i++) {
        var _CI = _IH[i];
        if (_CI != null && !_CI._vI) {
            _CI._lI(_HH + i, 10, false);
            return _CI;
        }
    }
    if (_KH < _CH) {
        var _jJ = new _fI(_HH + _KH, 10, false);
        _IH[_KH] = _jJ;
        _jJ._Cp = _HH + _KH;
        ++_KH;
        return _jJ;
    }
    return null;
}

function audio_create_play_queue(_6L, _SK, _VK) {
    if (_VK != _VH._WH && _VK != _VH._XH && _VK != _VH._YH) {
        debug("audio_create_play_queue: channels should be audio_mono, audio_stereo or audio_3d");
        return -1;
    }
    if (_SK < 1000) _SK = 1000;
    if (_SK > 48000) _SK = 48000;
    if (_6L != _5x && _6L != _YK) {
        debug("audio_create_play_queue: unsupported format (use buffer_u8,buffer_s16)");
        return -1;
    }
    var _jJ = _5L();
    _jJ._7L = _6L;
    _jJ._8L = _SK;
    _jJ._9L = _VK;
    _jJ._YI = g_WebAudioContext.createScriptProcessor(16384, 0, 1);
    _jJ._YI._aL = [];
    _jJ._YI._bL = 0;
    _jJ._YI._cL = 0;
    _jJ._YI._dL = function(_eL) {
        var _fL = _eL._fL;
        var _YI = _jJ._YI;
        for (var _gL = 0; _gL < _fL._hL; _gL++) {
            var _iL = _fL._jL(_gL);
            for (var _kL = 0; _kL < 16384; _kL++) {
                if (_YI._aL.length > 0) {
                    _iL[_kL] = _YI._aL[0]._jL(_gL)[_YI._cL++];
                    if (_YI._cL >= _YI._aL[0].length) {
                        _YI._aL.shift();
                        var map = ds_map_create();
                        g_pBuiltIn.async_load = map;
                        ds_map_add(map, "queue_id", _jJ._Cp);
                        ds_map_add(map, "buffer_id", -1);
                        ds_map_add(map, "queue_shutdown", 0);
                        _2q._3q(_lL, 0);
                        _YI._cL = 0;
                    }
                } else {
                    _iL[_kL] = 0;
                }
            }
        }
    };
    var _8J = new _bI();
    _8J.gain = 1.0;
    _8J._cI = 1.0;
    _8J._dI = 1.0;
    _8J.kind = 0;
    _8J.duration = 0.0;
    _8J.groupId = 0;
    _8J._OI = [];
    _JH[_jJ._Cp - _HH] = _8J;
    return _jJ._Cp;
}

function audio_queue_sound(_mL, _QK, _TK, _Ez) {
    var _1J = _mL - _HH;
    if (_1J < 0 && _1J >= _KH) {
        debug("sound " + _mL + " does not appear to be a queue sound, can't queue a sound behind it.");
        return -1;
    }
    var _nL = _IH[_1J];
    if (_IH[_1J]._vI == false) {
        debug("looks like queue sound " + _mL + " has been freed already, not queueing behind it.");
        return -1;
    } {
        var _WK = 1;
        if (_nL._9L == _VH._XH) _WK = 2;
        else if (_nL._9L > _VH._YH) {
            debug("audio_create_buffer_sound - unhandled queueSound.queueChannels setting : " + _nL._9L);
            return -1;
        }
        var _XK = 8;
        if (_nL._7L == _YK) _XK = 16;
        else if (_nL._7L != _5x) {
            debug("audio_create_buffer_sound - unhandled queueSound.queueFormat setting : " + _nL._7L);
            return -1;
        }
        buffer_seek(_QK, _ZK, 0);
        var __K = _Ez;
        _0L = buffer_create(44 + __K, _1L, 1);
        buffer_write(_0L, _2L, _NK(0x46464952));
        buffer_write(_0L, _2L, _NK(36 + __K));
        buffer_write(_0L, _2L, _NK(0x45564157));
        buffer_write(_0L, _2L, _NK(0x20746d66));
        buffer_write(_0L, _2L, _NK(16));
        buffer_write(_0L, _3L, _PK(1));
        buffer_write(_0L, _3L, _PK(_WK));
        buffer_write(_0L, _2L, _NK(_nL._8L));
        buffer_write(_0L, _2L, _NK(_nL._8L * _WK * _XK / 8));
        buffer_write(_0L, _3L, _PK(_WK * _XK / 8));
        buffer_write(_0L, _3L, _PK(_XK));
        buffer_write(_0L, _2L, _NK(0x61746164));
        buffer_write(_0L, _2L, _NK(__K));
        buffer_copy(_QK, _TK, __K, _0L, 44);
        var _F5 = buffer_get_address(_0L);
        _nL._YI._bL++;
        try {
            g_WebAudioContext.decodeAudioData(_F5, function(buffer) {
                buffer_delete(_0L);
                _nL._YI._aL.push(buffer);
                _nL._YI._bL--;
            }, function(err) {
                debug("error decoding audio data:" + err);
                buffer_delete(_0L);
            });
        } catch (_xq) {
            debug("audio_create_buffer_sound - error decoding audio data: " + _xq + " -- " + _xq.message);
        }
    }
    return -1;
}

function audio_free_play_queue(_mL) {
    var _1J = _mL - _HH;
    if (_1J < 0 || _1J >= _KH) {
        debug("sound " + _mL + " does not appear to be a queue sound, not freeing");
        return -1;
    }
    audio_stop_sound(_mL);
    _IH[_1J]._vI = false;
    return 0;
}
navigator._oL = (navigator._oL || navigator._pL || navigator._qL || navigator._rL);

function audio_get_recorder_count() {
    if (navigator._oL) {
        return 1;
    }
    return 0;
}

function audio_get_recorder_info(_tb) {
    if (_tb < 0 || _tb > audio_get_recorder_count()) {
        debug("audio_get_recorder_info - device " + _tb + " is not available");
        return -1;
    }
    var map = ds_map_create();
    ds_map_add(map, "name", "User provided audio input");
    ds_map_add(map, "index", 0);
    ds_map_add(map, "data_format", _YK);
    ds_map_add(map, "sample_rate", g_WebAudioContext._sL);
    ds_map_add(map,
        "channels", 0);
    return map;
}
var _tL = false;
var _uL = undefined;

function audio_start_recording(_vL) {
    var _n4 = audio_get_recorder_count();
    if (_n4 <= 0) {
        debug("audio_start_recording - not available in this browser.");
        return -1;
    }
    if (_vL >= _n4) {
        debug("audio_start_recording - device " + _vL + " is not available.");
        return -1;
    }
    var _wL = 4096;
    if (_uL === undefined) {
        _uL = g_WebAudioContext.createScriptProcessor(_wL, 1, 1);
        _uL._0L = buffer_create(_wL * 2, _1L, 1);
        _uL._dL = function(_eL) {
            var _xL = _eL._xL;
            buffer_seek(_uL._0L, _yL, 0);
            for (var _gL = 0; _gL < _xL._hL; _gL++) {
                var _zL = _xL._jL(_gL);
                for (var _kL = 0; _kL < _wL; _kL++) {
                    buffer_write(_uL._0L, _YK, Math.round(_zL[_kL] * 32767));
                }
                if (_tL) {
                    var map = ds_map_create();
                    g_pBuiltIn.async_load = map;
                    ds_map_add(map, "buffer_id", _uL._0L);
                    ds_map_add(map, "recorder_num", 0);
                    ds_map_add(map, "data_len", _wL * 2);
                    _2q._3q(_AL, 0);
                }
            }
        };
        navigator._oL({
            _BL: true
        }, function(_CL) {
            source = g_WebAudioContext._DL(_CL);
            source.connect(_uL);
            _EL = g_WebAudioContext.createGainNode();
            _uL.connect(_EL);
            _EL.connect(g_WebAudioContext.destination);
        }, function(err) {
            debug("audio_start_recording : error has occured in getUserMedia call " + err);
        });
    }
    _tL = true;
    return 0;
}

function audio_stop_recording(_vL) {
    _tL = false;
}

function sound_play(_tb) {
    if (_ra != _FL) return;
    _2e._4e(_tb);
}

function sound_loop(_tb) {
    if (_ra != _FL) return;
    _2e._3e(_tb);
}

function sound_stop(_tb) {
    if (_ra != _FL) return;
    _2e._vg(_tb);
}

function sound_stop_all() {
    if (_ra != _FL) return;
    _2e._GL();
}

function sound_isplaying(_tb) {
    if (_ra != _FL) return false;
    return _2e._wg(_tb);
}

function sound_volume(_tb, _qe) {
    if (_ra != _FL) return;
    _2e._HL(_tb, _qe);
}

function sound_global_volume(_qe) {
    if (_ra != _FL) return;
    _2e._IL(_qe);
}

function sound_fade(_tb,
    _qe, _E2) {
    if (_ra != _FL) return;
    _2e._JL(_vb(_tb), _qe, _vb(_E2));
}

function sound_exists(_ha) {
    if (_ra != _FL) return false;
    if (_2e._O3(_ha) === null) return false;
    return true;
}

function sound_get_kind(_KL) {
    if (_ra != _FL) return -1;
    var _LI = _2e._O3(_KL);
    if (_LI === null) return -1;
    return _LI.kind;
}

function sound_get_name(_ha) {
    if (_ra != _FL) return "";
    var _LI = _2e._O3(_ha);
    if (_LI === null) return "";
    return _LI.pName;
}

function sound_name(_ha) {
    if (_ra != _FL) return "";
    return sound_get_name(_ha);
}

function sound_add(_Dg, _Q6, _LL) {
    _Dg = _FI(_Dg);
    if (_ra != _FL) return;
    var _EI = filename_ext(_Dg);
    if (_Dg.substring(0, 5) == "file:") return -1;
    var _xh = _Hc;
    _ML(_xh, _Dg, _EI, _zh, _Ah);
    var _NL = _2e._OL();
    var _PL = _2e._O3(_NL);
    _PL.pName = _Dg;
    _PL.extension = _EI;
    _PL.origName = _Dg;
    _Bh._1b(_NL, _Dg, _QL, _mK[_Dg]);
    return _NL;
}

function sound_replace(_tb, _Dg, _Q6, _LL) {
    if (_ra != _FL) return;
    sound_stop(_tb);
    var _EI = filename_ext(_Dg);
    if (_Dg.substring(0, 5) == "file:") return -1;
    var _xh = _Hc;
    _ML(_xh, _Dg, _EI, _zh, _Ah);
    var _PL = _2e._O3(_tb);
    _mK[_PL.pName] = undefined;
    _PL._RL = [];
    _PL.pName = _Dg;
    _PL.extension = _EI;
    _PL.origName = _Dg;
    _Bh._1b(_tb, _Dg, _QL, _mK[_Dg]);
    return _tb;
}

function sound_delete(_tb) {
    if (_ra != _FL) return;
    _2e._4d(_tb);
}

function sound_background_tempo(_SL) {
    _56("sound_background_tempo()");
}
var _TL = 0,
    _UL = 1,
    _VL = 2,
    _WL = 3;

function sprite_exists(_tb) {
    if (_le._O3(_tb) == null) return false;
    return true;
}

function sprite_get_width(_tb) {
    var _7p = _le._O3(_tb);
    if (_7p == null) return 0;
    return _7p.width;
}

function sprite_get_height(_tb) {
    var _7p = _le._O3(_tb);
    if (_7p == null) return 0;
    return _7p.height;
}

function sprite_get_name(_tb) {
    var _7p = _le._O3(_tb);
    if (_7p == null) return "";
    return _7p.pName;
}

function sprite_name(_tb) {
    return sprite_get_name(_tb);
}

function sprite_get_number(_tb) {
    var _7p = _le._O3(_tb);
    if (_7p == null) return 0;
    return _7p._93;
}

function sprite_get_transparent(_tb) {
    var _7p = _le._O3(_tb);
    if (_7p == null) return 0;
    return _7p.transparent;
}

function sprite_get_xoffset(_tb) {
    var _7p = _le._O3(_tb);
    if (_7p == null) return 0;
    return _7p.xOrigin;
}

function sprite_get_yoffset(_tb) {
    var _7p = _le._O3(_tb);
    if (_7p == null) return 0;
    return _7p.yOrigin;
}

function sprite_get_bbox_left(_tb) {
    var _7p = _le._O3(_tb);
    if (_7p == null) return 0;
    return _7p._Ry.left;
}

function sprite_get_bbox_right(_tb) {
    var _7p = _le._O3(_tb);
    if (_7p == null) return 0;
    return _7p._Ry._L2;
}

function sprite_get_bbox_top(_tb) {
    var _7p = _le._O3(_tb);
    if (_7p == null) return 0;
    return _7p._Ry.top;
}

function sprite_get_bbox_bottom(_tb) {
    var _7p = _le._O3(_tb);
    if (_7p == null) return 0;
    return _7p._Ry.bottom;
}

function _XL(_tb) {
    var _7p = _le._O3(_tb);
    if (_7p == null) return false;
    return _7p._Ry._Fg;
}

function sprite_set_offset(_tb, _uu, _vu) {
    var _7p = _le._O3(_tb);
    if (_7p == null) return;
    _7p.xOrigin = _uu;
    _7p.yOrigin = _vu;
}

function sprite_set_bbox(_tb, _lh, _mh, _YL, _ZL) {
    var _7p = _le._O3(_tb);
    if (_7p === null) return;
    _7p._Ry.left = _lh;
    _7p._Ry.top = _mh;
    _7p._Ry._L2 = _YL;
    _7p._Ry.bottom = _ZL;
}

function sprite_set_precise(_tb, __L) {
    var _7p = _le._O3(_tb);
    if (_7p === null) return false;
    _7p._Ry._Fg = __L;
}

function sprite_set_alpha_from_sprite(_fc, _Za) {
    var _Rb = _le._O3(_fc);
    if (_Rb === null) return false;
    if (!_Rb._fh) {
        _ja("Error: Can't set the alpha channel of normal sprite. It must 'duplicated' first");
        return false;
    }
    var _Sb = _le._O3(_Za);
    if (_Sb === null) return false;
    var _n4 = _Sb._93;
    if (_n4 > _Rb._93) {
        _n4 = _Rb._93;
    }
    for (var i = 0; i < _n4; i++) {
        var _0M = _Rb._M1[i];
        var _1M = _Sb._M1[i];
        _vh(_0M, _1M);
    }
    return true;
}

function sprite_create_from_screen(_h2, _i2, _Va, _Wa, _Yg, _Zg, _2M, _3M) {
    var _4M = document.createElement(_eo);
    var _5M = _4M.getContext('2d');
    _6M(_5M);
    _4M.width = _Va;
    _4M.height = _Wa;
    var _7M = _h2 * _8M;
    var _9M = _i2 * _aM;
    var _bM = _Va * _8M;
    var _cM = _Wa * _aM;
    var _dM = 0;
    var _eM = 0;
    var _fM = _Va;
    var _gM = _Wa;
    if (_h2 < 0) {
        _dM = -_h2;
        _7M = 0;
    }
    if (_i2 < 0) {
        _eM = -_i2;
        _9M = 0;
    }
    if (_7M > canvas.width) {
        _fM = 0;
    }
    if (_9M > canvas.height) {
        _gM = 0;
    }
    if ((_7M + _bM) > canvas.width) {
        _bM = canvas.width - _7M;
        _fM = _bM * (1.0 / _8M);
    }
    if ((_9M + _cM) > canvas.height) {
        _cM = canvas.height - _9M;
        _gM = _cM * (1.0 / _aM);
    }
    _5M._hM(canvas, _7M, _9M, _bM, _cM, _dM, _eM, _fM, _gM);
    if (_Yg) {
        _4M.complete = _2h(_5M, _fM, _gM);
    } else {
        _4M.complete = true;
    }
    var _iM = new _jM();
    var _NL = _le._kM(_iM);
    _iM.pName = "screen.copy";
    _iM.width = _4M.width;
    _iM.height = _4M.height;
    _iM._Ry = new _Qo();
    _iM._Ry._L2 = _iM.width;
    _iM._Ry.bottom = _iM.height;
    _iM.transparent = true;
    _iM.smooth = true;
    _iM.preload = true;
    _iM._lM = 0;
    _iM._Fg = false;
    _iM.xOrigin = _2M;
    _iM.yOrigin = _3M;
    _iM._fh = true;
    _iM._93 = 1;
    _iM._mM = 0;
    _iM._nM = false;
    _iM._oM = false;
    _iM._a3 = [];
    _iM._M1 = [];
    _iM.Masks = [];
    var _L1 = new _5h();
    _iM._M1[0] = _L1;
    _L1.x = 0;
    _L1.y = 0;
    _L1.w = _iM.width;
    _L1.h = _iM.height;
    _L1.XOffset = 0;
    _L1.YOffset = 0;
    _L1.CropWidth = _L1.w;
    _L1.CropHeight = _L1.h;
    _L1.ow = _L1.w;
    _L1.oh = _L1.h;
    _L1.tp = _gh(_4M);
    _L1._T1 = _P1[_L1.tp];
    return _NL;
}
var sprite_add_from_screen = _pM;

function _pM(_F1, _h2, _i2, _Va, _Wa, _Yg, _Zg) {
    var _4M = document.createElement(_eo);
    var _5M = _4M.getContext('2d');
    _6M(_5M);
    _iM = _le._O3(_F1);
    _iM._93++;
    _4M.width = _iM.width;
    _4M.height = _iM.height;
    _5M._hM(canvas, _h2, _i2, _Va, _Wa, 0, 0, _4M.width, _4M.height);
    if (_Yg) {
        _4M.complete = _2h(_5M, _Va, _Wa);
    } else {
        _4M.complete = true;
    }
    _iM._93++;
    var _L1 = new _5h();
    _iM._M1[_iM._M1.length] = _L1;
    _L1.x = 0;
    _L1.y = 0;
    _L1.w = _iM.width;
    _L1.h = _iM.height;
    _L1.XOffset = 0;
    _L1.YOffset = 0;
    _L1.CropWidth = _L1.w;
    _L1.CropHeight = _L1.h;
    _L1.ow = _L1.w;
    _L1.oh = _L1.h;
    _L1.tp = _gh(_4M);
    _L1._T1 = _P1[_L1.tp];
    return _F1;
}
var sprite_create_from_surface = _qM;

function _qM(_ha, _h2, _i2, _Va, _Wa, _Yg, _Zg, _2M, _3M) {
    var _4M = document.createElement(_eo);
    var _5M = _4M.getContext('2d');
    _6M(_5M);
    _4M.width = _0h._O3(_ha).width;
    _4M.height = _0h._O3(_ha).height;
    _5M._hM(_0h._O3(_ha), 0, 0);
    if (_Yg) {
        _4M.complete = _2h(_5M, _Va, _Wa);
    } else {
        _4M.complete = true;
    }
    var _iM = new _jM();
    var _NL = _le._kM(_iM);
    _iM.pName = "surface.copy";
    _iM.width = _Va;
    _iM.height = _Wa;
    _iM._Ry = new _Qo();
    _iM._Ry._L2 = _iM.width;
    _iM._Ry.bottom = _iM.height;
    _iM.transparent = true;
    _iM.smooth = true;
    _iM.preload = true;
    _iM._lM = 0;
    _iM._Fg = false;
    _iM.xOrigin = _2M;
    _iM.yOrigin = _3M;
    _iM._fh = true;
    _iM._93 = 1;
    _iM._nM = false;
    _iM._oM = false;
    _iM._a3 = [];
    _iM._M1 = [];
    _iM.Masks = [];
    _iM._rM();
    var _L1 = new _5h();
    _iM._M1[0] = _L1;
    _L1.x = 0;
    _L1.y = 0;
    _L1.w = _iM.width;
    _L1.h = _iM.height;
    _L1.XOffset = 0;
    _L1.YOffset = 0;
    _L1.CropWidth = _L1.w;
    _L1.CropHeight = _L1.h;
    _L1.ow = _L1.w;
    _L1.oh = _L1.h;
    _L1.tp = _gh(_4M);
    _L1._T1 = _P1[_L1.tp];
    _sM(_L1);
    return _NL;
}
var sprite_add_from_surface = _tM;

function _tM(_F1, _ha, _h2, _i2, _Va, _Wa, _Yg, _Zg) {
    var _4M = document.createElement(_eo);
    var _5M = _4M.getContext('2d');
    _6M(_5M);
    _iM = _le._O3(_F1);
    _iM._93++;
    _4M.width = _iM.width;
    _4M.height = _iM.height;
    _5M._hM(_0h._O3(_ha),
        0, 0, _Va, _Wa, 0, 0, _4M.width, _4M.height);
    if (_Yg) {
        _4M.complete = _2h(_5M, _Va, _Wa);
    } else {
        _4M.complete = true;
    }
    var _L1 = new _5h();
    _iM._M1[_iM._M1.length] = _L1;
    _L1.x = 0;
    _L1.y = 0;
    _L1.w = _iM.width;
    _L1.h = _iM.height;
    _L1.XOffset = 0;
    _L1.YOffset = 0;
    _L1.CropWidth = _L1.w;
    _L1.CropHeight = _L1.h;
    _L1.ow = _L1.w;
    _L1.oh = _L1.h;
    _L1.tp = _gh(_4M);
    _L1._T1 = _P1[_L1.tp];
    return _F1;
}

function sprite_delete(_F1) {
    _le._4d(_F1);
}

function sprite_save(_F1, _Yd, _Dg) {
    _56("sprite_save()");
}
var sprite_duplicate = _uM;

function _uM(_F1) {
    var _7p = _le._O3(_F1);
    if (_7p == null) return 0;
    var _iM = new _jM();
    var _NL = _le._kM(_iM);
    _iM.pName = _7p.pName + ".copy";
    _iM.width = _7p.width;
    _iM.height = _7p.height;
    _iM._Ry._Ya(_7p._Ry);
    _iM.transparent = _7p.transparent;
    _iM.smooth = _7p.smooth;
    _iM.preload = _7p.preload;
    _iM._lM = _7p._lM;
    _iM._Fg = _7p._Fg;
    _iM.xOrigin = _7p.xOrigin;
    _iM.yOrigin = _7p.yOrigin;
    _iM._fh = true;
    _iM._93 = _7p._93;
    _iM._mM = _7p._mM;
    _iM._nM = _7p._nM;
    _iM._oM = _7p._oM;
    _iM._a3 = [];
    _iM._M1 = [];
    _iM.Masks = [];
    for (var i = 0; i < _7p._93; i++) {
        var _L1 = new _5h();
        _iM._M1[i] = _L1;
        _L1._fh(_7p._M1[i]);
        var _dh = _eh(_7p._M1[i]);
        _L1.tp = _gh(_dh);
        _L1.x = 0;
        _L1.y = 0;
        _L1._T1 = _P1[_L1.tp];
    }
    return _NL;
}

function sprite_add(_Hc, _vM, _Yg, _Zg, _2M, _3M) {
    if (_vM <= 0) return -1;
    var _iM = new _jM();
    var _NL = _le._kM(_iM);
    if (_Hc.substring(0, 5) == "file:") return -1;
    var _xh = _Hc;
    var _yh = _w4(_xh);
    _P1[_yh].onload = _zh;
    _P1[_yh].onerror = _Ah;
    _Bh._1b(_NL, _Hc, _wM, _P1[_yh]);
    _iM.pName = _Hc;
    _iM.width = -1;
    _iM.height = -1;
    _iM._Ry = new _Qo();
    _iM._Ry._L2 = 0;
    _iM._Ry.bottom = 0;
    _iM.transparent = _Yg;
    _iM.smooth = _Zg;
    _iM.preload = true;
    _iM._lM = 0;
    _iM._Fg = false;
    _iM.xOrigin = _2M;
    _iM.yOrigin = _3M;
    _iM._fh = false;
    _iM._93 = _vM;
    _iM._mM = 0;
    _iM._nM = false;
    _iM._oM = false;
    _iM._a3 = [];
    _iM._M1 = [];
    _iM.Masks = [];
    for (var i = 0; i < _vM; i++) {
        var _L1 = new _5h();
        _iM._M1[i] = _L1;
        _L1.x = 0;
        _L1.y = 0;
        _L1.w = 0;
        _L1.h = 0;
        _L1.XOffset = 0;
        _L1.YOffset = 0;
        _L1.CropWidth = 0;
        _L1.CropHeight = 0;
        _L1.ow = _L1.w;
        _L1.oh = _L1.h;
        _L1.tp = _yh;
        _L1._T1 = _P1[_L1.tp];
    }
    return _NL;
}

function sprite_replace(_F1, _Hc, _vM, _Yg, _Zg, _2M, _3M) {
    var _iM = _le._O3(_F1);
    if (_Hc.substring(0, 5) == "file:") return -1;
    var _xh = _Hc;
    var _yh = _w4(_xh);
    _P1[_yh].onload = _zh;
    _P1[_yh].onerror = _Ah;
    _Bh._1b(_F1, _Hc, _wM, _P1[_yh]);
    _iM.width = 0;
    _iM.height = 0;
    _iM._Ry = new _Qo();
    _iM._Ry._L2 = 0;
    _iM._Ry.bottom = 0;
    _iM.transparent = _Yg;
    _iM.smooth = _Zg;
    _iM.preload = true;
    _iM._lM = 0;
    _iM._Fg = false;
    _iM.xOrigin = _2M;
    _iM.yOrigin = _3M;
    _iM._fh = false;
    _iM._93 = _vM;
    _iM._mM = 0;
    _iM._nM = false;
    _iM._oM = false;
    _iM._a3 = [];
    _iM._M1 = [];
    _iM.Masks = [];
    for (var i = 0; i < _vM; i++) {
        var _L1 = new _5h();
        _iM._M1[i] = _L1;
        _L1.x = 0;
        _L1.y = 0;
        _L1.w = 0;
        _L1.h = 0;
        _L1.XOffset = 0;
        _L1.YOffset = 0;
        _L1.CropWidth = 0;
        _L1.CropHeight = 0;
        _L1.ow = _L1.w;
        _L1.oh = _L1.h;
        _L1.tp = _yh;
        _L1._T1 = _P1[_L1.tp];
    }
    return _F1;
}

function sprite_merge(_fc,
    _Za) {
    var _Rb = _le._O3(_fc);
    var _Sb = _le._O3(_Za);
    var w = _Rb.width;
    var h = _Rb.height;
    var _xM = _95;
    for (var i = 0; i < _Sb._93; i++) {
        var _4M = document.createElement(_eo);
        var _5M = _4M.getContext('2d');
        _6M(_5M);
        _4M.width = w;
        _4M.height = h;
        _95 = _5M;
        _jh(_Sb._M1[i], 0, 0, w, h, 0xffffff, 1.0);
        _4M.complete = true;
        var _L1 = new _5h();
        _Rb._M1[_Rb._M1.length] = _L1;
        _L1.x = 0;
        _L1.y = 0;
        _L1.w = w;
        _L1.h = h;
        _L1.XOffset = 0;
        _L1.YOffset = 0;
        _L1.CropWidth = 0;
        _L1.CropHeight = 0;
        _L1.ow = _L1.w;
        _L1.oh = _L1.h;
        _L1.tp = _gh(_4M);
        _L1._T1 = _P1[_L1.tp];
        _Rb._93++;
    }
    _95 = _xM;
    return _fc;
}

function sprite_assign(_YB, _R2) {
    var _Rb = _le._O3(_YB);
    var _Sb = _le._O3(_R2);
    _Rb.width = _Sb.width;
    _Rb.height = _Sb.height;
    _Rb._Ry = new _Qo();
    _Rb._Ry._Ya(_Sb);
    _Rb.transparent = _Sb.transparent;
    _Rb.smooth = _Sb.smooth;
    _Rb.preload = _Sb.preload;
    _Rb._lM = _Sb._lM;
    _Rb._Fg = _Sb._Fg;
    _Rb.xOrigin = _Sb.xOrigin;
    _Rb.yOrigin = _Sb.yOrigin;
    _Rb._fh = true;
    _Rb._93 = _Sb._93;
    _Rb._mM = _Sb._mM;
    _Rb._nM = _Sb._nM;
    _Rb._oM = _Sb._oM;
    _Rb._a3 = _Sb._a3.slice(0);
    _Rb._M1 = [];
    if (_Sb.Masks) {
        _Rb.Masks = _Sb.Masks.slice();
    }
    var w = _Rb.width;
    var h = _Rb.height;
    var _xM = _95;
    for (var i = 0; i < _Sb._93; i++) {
        var _4M = document.createElement(_eo);
        var _5M = _4M.getContext('2d');
        _6M(_5M);
        _4M.width = w;
        _4M.height = h;
        _95 = _5M;
        _jh(_Sb._M1[i], 0, 0, w, h, 0xffffff, 1.0);
        _4M.complete = true;
        var _L1 = new _5h();
        _Rb._M1[_Rb._M1.length] = _L1;
        _L1.x = 0;
        _L1.y = 0;
        _L1.w = w;
        _L1.h = h;
        _L1.XOffset = 0;
        _L1.YOffset = 0;
        _L1.CropWidth = 0;
        _L1.CropHeight = 0;
        _L1.ow = _L1.w;
        _L1.oh = _L1.h;
        _L1.tp = _gh(_4M);
        _L1._T1 = _P1[_L1.tp];
    }
    _95 = _xM;
    return _YB;
}

function sprite_collision_mask(_F1, _yM, _zM, _AM, _BM, _CM, _DM, _Q6, _EM) {
    var _7p = _le._O3(_F1);
    if (_7p === null) {
        return false;
    }
    _7p._Fg = true;
    _7p._a3 = [];
    _7p._oM = _yM;
    _7p._Ry = new _Qo();
    if (_7p._93 == 0) {
        return;
    }
    if (_zM == 0) {
        _7p._Ry.left = 0;
        _7p._Ry._L2 = _7p.width;
        _7p._Ry.top = 0;
        _7p._Ry.bottom = _7p.height;
    } else if (_zM == 1) {
        _7p._Ry.left = 0;
        _7p._Ry._L2 = _7p.width;
        _7p._Ry.top = 0;
        _7p._Ry.bottom = _7p.height;
    } else {
        _7p._Ry.left = _AM;
        _7p._Ry._L2 = _BM;
        _7p._Ry.top = _CM;
        _7p._Ry.bottom = _DM;
    }
    if (_Q6 == 1) {}
    var _M1 = _7p._M1;
    _7p._a3 = [];
    if (_7p._oM) {
        for (var i = 0; i < _7p._93; i++) {
            _7p._a3[i] = _FM(null, _7p._M1[i], _zM, _7p._Ry, _Q6, _EM);
        }
    } else {
        _7p._a3[0] = _FM(_7p._a3[0],
            _7p._M1[0], _zM, _7p._Ry, _Q6, _EM);
        for (var i = 1; i < _7p._93; i++) {
            _7p._a3[0] = _FM(_7p._a3[0], _7p._M1[i], _zM, _7p._Ry, _Q6, _EM);
        }
    }
    _7p._nM = true;
}

function _FM(_GM, _HM, _zM, _IM, _Q6, _EM) {
    var w = _HM.ow;
    var h = _HM.oh;
    var _JM = [];
    var _KM = h * w;
    for (_k3 = 0; _k3 < _KM; _k3++) _JM[_k3] = false;
    if (_Q6 == _TL) {
        var _LM = _MM(_HM);
        var index = 0;
        for (var i = 0; i < _LM.length; i += 4) {
            if (_LM[i + 3] > _EM) {
                _JM[index] = true;
            } else {
                _JM[index] = false;
            }
            index++;
        }
    } else {
        switch (_Q6) {
            case _UL:
                {
                    for (var y = _IM.top; y <= _IM.bottom; y++) {
                        for (var x = _IM.left; x <= _IM._L2; x++) {
                            _JM[x + (y * w)] = true;
                        }
                    }
                    break;
                }
            case _VL:
                {
                    var _B3 = (_IM.left + _IM._L2) / 2;
                    var _A5 = _B3 - _IM.left + 0.5;
                    var _C3 = (_IM.top + _IM.bottom) / 2;
                    var _B5 = _C3 - _IM.top + 0.5;
                    for (var y = _IM.top; y <= _IM.bottom; y++) {
                        for (var x = _IM.left; x <= _IM._L2; x++) {
                            if ((_A5 > 0) && (_B5 > 0)) {
                                _JM[x + (y * w)] = sqr((x - _B3) / _A5) + sqr((y - _C3) / _B5) < 1;
                            }
                        }
                    }
                    break;
                }
            case _WL:
                {
                    var _B3 = (_IM.left + _IM._L2) / 2;
                    var _A5 = _B3 - _IM.left + 0.5;
                    var _C3 = (_IM.top + _IM.bottom) / 2;
                    var _B5 = _C3 - _IM.top + 0.5;
                    for (var y = _IM.top; y <= _IM.bottom; y++) {
                        for (var x = _IM.left; x <= _IM._L2; x++) {
                            if ((_A5 > 0) && (_B5 > 0)) {
                                _JM[x + (y * w)] = Math.abs((x - _B3) / _A5) + Math.abs((y - _C3) / _B5) < 1;
                            }
                        }
                    }
                    break;
                }
        }
    }
    if (_GM != null) {
        for (var i = 0; i < _JM.length; i++) {
            if (_GM[i]) _JM[i] = true;
        }
    }
    return _JM;
}

function sprite_set_cache_size(_F1, _zr) {
    var _7p = _le._O3(_F1);
    if (!_7p) {
        _ja("Trying to adjust the cache on a non-existant sprite (" + string(_F1) + ")");
        return false;
    }
    var _M1 = _7p._M1;
    for (var i = 0; i < _7p._93; i++) {
        if (_M1[i]._o4 > _zr) {
            _M1[i]._m4 = [];
            _M1[i]._n4 = 0;
        }
        _M1[i]._o4 = _zr;
    }
}

function sprite_set_cache_size_ext(_F1, _tb, _zr) {
    var _7p = _le._O3(_F1);
    if (!_7p) {
        _ja("Trying to adjust the cache on a non-existant sprite (" + string(_F1) + ")");
        return false;
    }
    if (_tb < 0 || _tb > _7p._93) {
        _ja("Trying to adjust the cache on a non-existant sprite sub image (" + string(_F1) + ", " + string(_tb) + ")");
        return;
    }
    var _L1 = _7p._M1[_tb];
    if (_L1._o4 > _zr) {
        _L1._m4 = [];
        _L1._n4 = 0;
    }
    _L1._o4 = _zr;
}

function sprite_get_tpe(_tb, _NM) {
    var _7p = _le._O3(_tb);
    if (!_7p) {
        _ja("Trying to adjust the cache on a non-existant sprite (" + string(_tb) + ")");
        return false;
    }
    if (_NM < 0 || _NM > _7p._93) {
        _ja("Trying to adjust the cache (tpe) on a non-existant sprite sub image (" + string(_tb) + ", " + string(_NM) + ")");
        return;
    }
    var _M1 = _7p._M1;
    if (_M1[_NM]) {
        var _L1 = _M1[_NM];
        var _OM = new _PM();
        _OM.tpe_x = _L1.x;
        _OM.tpe_y = _L1.y;
        _OM.tpe_w = _L1.w;
        _OM.tpe_h = _L1.h;
        _OM.tpe_XOffset = _L1.XOffset;
        _OM.tpe_YOffset = _L1.YOffset;
        _OM.tpe_CropWidth = _L1.CropWidth;
        _OM.tpe_CropHeight = _L1.CropHeight;
        _OM.tpe_ow = _L1.ow;
        _OM.tpe_oh = _L1.oh;
        _OM.tpe_tp = _L1.x;
        _OM._QM = _L1._fh;
        _OM.tpe_texture = _L1._T1;
        return _OM;
    }
    return null;
}

function sprite_get_texture(_RM, _SM) {
    if (sprite_exists(_RM)) {
        var _ke = _le._O3(_RM);
        var _L1 = _ke._TM(~~_SM);
        if (_L1) {
            return ({
                _R6: _L1._T1,
                _S6: _L1
            });
        }
    }
    return null;
}

function sprite_get_uvs(_RM, _SM) {
    if (sprite_exists(_RM)) {
        var _ke = _le._O3(_RM);
        var _L1 = _ke._TM(_SM);
        var _T1 = _L1._T1;
        var _Gh = 1.0 / _T1._a7;
        var _Hh = 1.0 / _T1._b7;
        var _Ih = [];
        _Ih.push(_L1.x * _Gh, _L1.y * _Hh, (_L1.x + _L1.CropWidth) * _Gh, (_L1.y + _L1.CropHeight) * _Hh);
        return _Ih;
    }
    return null;
}

function chr(_f2) {
    return String.fromCharCode(_f2);
}

function ord(_Ge) {
    if (!_Ge || _Ge == "") return 0;
    return _Ge.charCodeAt(0);
}

function real(_Ge) {
    if (_Ge == undefined) {
        return 0;
    } else if (typeof(_Ge) == "boolean") {
        if (_Ge) return 1;
        else return 0;
    } else if (typeof(_Ge) == "number") {
        return _Ge;
    }
    return parseFloat(_Ge);
}

function string(_cc) {
    if (_cc == undefined) {
        return "undefined";
    }
    if (_cc instanceof Array) {
        var _db = "{";
        for (var i = 0; i < _cc.length; ++i) {
            if (i != 0) _db += ",";
            _db += string(_cc[i]);
        }
        _db += "}";
        return _db;
    } else if (typeof(_cc) == "number") {
        if ((~~_cc) != _cc) {
            return _cc.toFixed(2).toString();
        } else {
            return _cc.toString();
        }
    } else if (typeof(_cc) == "boolean") {
        if (_cc) return "1";
        else return "0";
    } else {
        return _cc.toString();
    }
}

function string_format(_f2, _UM, _VM) {
    if ((_f2 == undefined) || (typeof(_f2) != "number")) {
        return "undefined";
    }
    var _WM = _f2.toFixed(_VM).toString().split(".");
    var _xc;
    for (var i = 0; i < _WM.length; i++) {
        switch (i) {
            case 0:
                while (_WM[i].length < _UM) {
                    _WM[i] = " " + _WM[i];
                }
                _xc = _WM[i];
                break;
            case 1:
                while (_WM[i].length < _VM) {
                    _WM[i] = _WM[i] + "0";
                }
                _xc = _xc + "." + _WM[i];
                break;
        }
    }
    return _xc;
}

function string_length(_Ge) {
    if (!_Ge) {
        return 0;
    }
    return _Ge.length;
}

function string_byte_length(_Ge) {
    if (!_Ge) {
        return 0;
    }
    return _Ge.length;
}

function string_pos(_XM, _Ge) {
    return _Ge.indexOf(_XM) + 1;
}

function string_copy(_Ge, _tb, _YM) {
    if (_tb < 1) _tb = 1;
    return _Ge.substring(_tb - 1,
        _tb + _YM - 1);
}

function string_char_at(_Ge, _tb) {
    var index = _tb - 1;
    if (index < 0) {
        index = 0;
    }
    return _Ge.charAt(index);
}

function string_ord_at(_Ge, _tb) {
    var index = _tb - 1;
    if (index < 0) {
        index = 0;
    }
    return _Ge.charCodeAt(index);
}

function string_byte_at(_Ge, _tb) {
    var index = _tb - 1;
    if (index < 0) {
        index = 0;
    }
    return _Ge.charCodeAt(index);
}

function string_set_byte_at(_Ge, _tb, _Iq) {
    try {
        var index = _tb - 1;
        if (index < 0) {
            index = 0;
        }
        var chr = String.fromCharCode(_Iq);
        var _xc = _Ge.substring(0, index) + chr + _Ge.substring(index + 1);
        return _xc;
    } catch (e) {
        debug(e.message);
    }
    return _Ge;
}

function string_delete(_Ge, _tb, _YM) {
    return (_Ge.substring(0, _tb - 1) + _Ge.substring(_tb - 1 + _YM, _Ge.length));
}

function string_insert(_XM, _Ge, _tb) {
    return (_Ge.substring(0, _tb - 1) + _XM + _Ge.substring(_tb - 1, _Ge.length));
}

function string_replace(_Ge, _XM, _ZM) {
    return _Ge.replace(_XM, _ZM);
}

function string_replace_all(_Ge, _XM, _ZM) {
    if (!_Ge) return "";
    var _Cb = "";
    var _b3 = _XM.length;
    var i = 0;
    while (i < _Ge.length) {
        if (_Ge.substring(i, i + _b3) == _XM) {
            _Cb += _ZM;
            i += _b3;
        } else {
            _Cb += _Ge[i];
            i++;
        }
    }
    return _Cb;
}

function string_count(_XM,
    _Ge) {
    _XM = _XM.replace(chr(13), "#");
    var _n4 = 0;
    if (_XM.length > 0) {
        var index = 0;
        while (index != -1) {
            index = _Ge.indexOf(_XM, index);
            if (index > -1) {
                _n4 += 1;
                index++;
            }
        }
    }
    return _n4;
}

function string_lower(_Ge) {
    return _Ge.toLowerCase();
}

function string_upper(_Ge) {
    return _Ge.toUpperCase();
}

function string_repeat(_Ge, _YM) {
    var _Cb = "";
    for (var i = 0; i < _YM; i++) {
        _Cb = _Cb + _Ge;
    }
    return _Cb;
}

function string_letters(_Ge) {
    var _Cb = "";
    for (var i = 0; i < _Ge.length; i++) {
        var c = _Ge[i];
        if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z')) {
            _Cb = _Cb + c;
        }
    }
    return _Cb;
}

function string_digits(_Ge) {
    var _Cb = "";
    for (var i = 0; i < _Ge.length; i++) {
        var c = _Ge[i];
        if (c >= '0' && c <= '9') {
            _Cb = _Cb + c;
        }
    }
    return _Cb;
}

function string_lettersdigits(_Ge) {
    var _Cb = "";
    for (var i = 0; i < _Ge.length; i++) {
        var c = _Ge[i];
        if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z') || (c >= '0' && c <= '9')) {
            _Cb = _Cb + c;
        }
    }
    return _Cb;
}
var __M = [];

function _0N(_1N) {
    debug("myBrandConnectReadyEvent");
    __M = _1N;
}

function _2N() {
    _uo();
}

function _3N() {
    _4N = true;
    debug("myBrandConnectDoneEvent");
}

function _5N() {
    var _6N = document.getElementById("ssaBrandConnectInterstitial");
    var _7N = document.getElementById("gm4html5_div_id");
    _7N.appendChild(_6N);
    _io();
}
var _8N = false;
var _4N = false;
var ssa_json = {
    'applicationUserId': '1234',
    'applicationKey': '2b46ec59',
    'onCampaignsReady': _0N,
    'onCampaignsDone': _3N,
    'onCampaignClose': _2N,
    'onCampaignOpen': _5N,
    'maxWidth': 1000,
    'maxHeight': 700,
};
var _9N = (function(_Cd, _f3) {
    var _Y4 = _Cd.createElement(_f3),
        _Cb = _Cd.getElementsByTagName(_f3)[0];
    _Y4._tp = true;
    _Y4.src = ('https:' != location.protocol ? 'http://jsd.supersonicads.com' : 'https://a248.e.akamai.net/ssastatic.s3.amazonaws.com') + '/inlineDelivery/delivery.min.gz.js';
    _Cb.parentNode.insertBefore(_Y4, _Cb);
});

function ads_setup(_aN, _bN) {
    if (_8N == false) {
        debug("calling setup_brandconnect");
        ssa_json.applicationUserId = _aN;
        ssa_json.applicationKey = _bN;
        ssa_json.maxWidth = canvas.width;
        ssa_json.maxHeight = canvas.height;
        _9N(document, 'script');
        _8N = true;
    }
}

function ads_engagement_available() {
    if (_4N) return false;
    for (var i = 0; i < __M.length; i++) {
        if (!__M[i].completed) return true;
    }
    return false;
}
var _cN = ads_engagement_launch;

function ads_engagement_launch(_fg, _gg) {
    if (SSA_CORE != undefined) SSA_CORE.BrandConnect.engage();
}

function ads_engagement_active() {
    if (document.hasFocus() == false) {
        return true;
    }
    var _Th = document.getElementById('ssaBrandConnectInterstitial');
    if (_Th) {
        if (_Th.style.display == 'block') {
            return true;
        }
    }
    return false;
}
var _dN = [];
surface_resize = _eN;

function _eN(_ha, _Va, _Wa) {
    if (_ha == _fN) {
        _gN = true;
        _hN = _Va;
        _iN = _Wa;
        return 1;
    }
    if (!surface_exists(_ha)) {
        _ja("Surface does not exist");
        return 0;
    }
    surface_create(_Va, _Wa, _ha);
    return 0;
}
surface_create = _jN;

function _jN(_Va, _Wa, _kN) {
    var _8h = document.createElement(_eo);
    _8h._a7 = _8h.width = _Va;
    _8h._b7 = _8h.height = _Wa;
    _8h.complete = true;
    _8h._lN = false;
    _8h.name = "";
    _8h._95 = _8h.getContext('2d');
    _6M(_8h._95);
    if (_Pn.Options && !_Pn.Options.interpolatePixels) {
        _mN(_8h._95);
    }
    var _L1 = new _5h();
    _8h._nN = _L1;
    _L1.x = 0;
    _L1.y = 0;
    _L1.w = _Va;
    _L1.h = _Wa;
    _L1.XOffset = 0;
    _L1.YOffset = 0;
    _L1.CropWidth = _L1.w;
    _L1.CropHeight = _L1.h;
    _L1.ow = _L1.w;
    _L1.oh = _L1.h;
    if (_kN != undefined) {
        _0h._7b(_kN, _8h);
        _L1.tp = _kN;
    } else {
        _L1.tp = _0h._1b(_8h);
    }
    _L1._T1 = _8h;
    _L1._m4 = [];
    _L1._n4 = 0;
    _L1._o4 = 4;
    _L1._oN = 0;
    _L1._Eh = null;
    _L1._4M = _8h;
    return _L1.tp;
}

function surface_create_ext(_a1,
    _Va, _Wa) {
    var _8h = document.getElementById(_a1);
    if (!_8h) {
        _Vn("Can not find pre-created canvas element: " + _a1);
        return surface_create(_Va, _Wa);
    }
    _8h.name = _a1;
    _8h._a7 = _8h.width = _Va;
    _8h._b7 = _8h.height = _Wa;
    _8h.complete = true;
    _8h._lN = true;
    _8h._95 = _8h.getContext('2d');
    _6M(_8h._95);
    if (_Pn.Options && !_Pn.Options.interpolatePixels) {
        _mN(_8h._95);
    }
    _8h.onmousemove = _Xh;
    _8h.onmousedown = _pN;
    _8h.onmouseup = _qN;
    var _L1 = new _5h();
    _8h._nN = _L1;
    _L1.x = 0;
    _L1.y = 0;
    _L1.w = _Va;
    _L1.h = _Wa;
    _L1.XOffset = 0;
    _L1.YOffset = 0;
    _L1.CropWidth = _L1.w;
    _L1.CropHeight = _L1.h;
    _L1.ow = _L1.w;
    _L1.oh = _L1.h;
    _L1.tp = _0h._1b(_8h);
    _L1._T1 = _8h;
    _L1._m4 = [];
    _L1._n4 = 0;
    _L1._o4 = 4;
    _L1._oN = 0;
    _L1._Eh = null;
    _L1._4M = _8h;
    return _L1.tp;
}
var surface_free = _rN;

function _rN(_ha) {
    _0h._2b(_ha);
}

function surface_exists(_ha) {
    if (_0h._O3(_ha) != null) return true;
    else return false;
}

function surface_get_width(_ha) {
    var _8h = _0h._O3(_ha);
    if (_8h != null) {
        return _8h._a7;
    }
    return 0;
}

function surface_get_height(_ha) {
    var _8h = _0h._O3(_ha);
    if (_8h != null) {
        return _8h._b7;
    }
    return 0;
}

function surface_get_texture(_ha) {
    var _8h = _0h._O3(_ha);
    if (_8h != null) {
        return ({
            _R6: _8h._T1,
            _S6: _8h._nN
        });
    }
    return -1;
}
_sN = _tN;

function _tN(_ha) {
    var _8h = _0h._O3(_ha);
    if (_8h != null) {
        _95._Cu();
        _dN.push(_95);
        _8h._95._uN = _ha;
        _95 = _8h._95;
        g_CurrentGraphics = _95;
        _vN = false;
    }
}
var _wN, _xN, _yN, _zN;
var surface_set_target = _AN;

function _AN(_ha) {
    var _8h = _0h._O3(_ha);
    if (_8h != null) {
        _BN.left = _CN.left;
        _BN.top = _CN.top;
        _BN._L2 = _CN._L2;
        _BN.bottom = _CN.bottom;
        _CN.left = 0;
        _CN.top = 0;
        _CN._L2 = _8h._a7;
        _CN.bottom = _8h._b7;
        _DN._Ya(_EN);
        _EN._OG = 0;
        _EN._PG = 0;
        _EN._QG = _8h._a7;
        _EN._RG = _8h._b7;
        _EN._SG = 0;
        _EN._TG = 0;
        _EN._UG = _8h._a7;
        _EN._VG = _8h._b7;
        _EN._aa = 0;
        _EN._ca = 0;
        _EN._FN = _8h._a7;
        _EN._GN = _8h._b7;
        _EN._ba = _EN._aa + _EN._FN;
        _EN._da = _EN._ca + _EN._GN;
        _95._Cu();
        _dN.push(_95);
        _wN = _Fu;
        _xN = _Gu;
        _yN = _Hu;
        _zN = _Iu;
        _HN(0, 0, _8h._a7, _8h._b7);
        _IN(0, 0, _8h._a7, _8h._b7);
        g_CurrentGraphics = _8h._95;
        _95 = _8h._95;
        _95._Cu();
        _vN = true;
    }
}
var surface_reset_target = _JN;

function _JN() {
    if (_vN) {
        _CN = _BN;
        _EN._Ya(_DN);
        _HN(_wN, _xN, _yN, _zN);
        _IN(_EN._OG, _EN._PG, _EN._QG, _EN._RG);
        _95._Ju();
    }
    var _KN = _dN.pop();
    _95 = _KN ? _KN : _LN;
    g_CurrentGraphics = _95;
    _95._Ju();
}

function _pv(_MB, _h2, _i2) {
    var data = null;
    var _1h = _MB.getContext('2d');
    try {
        data = _1h._MN(_h2, _i2, 1, 1);
    } catch (_xq) {
        return 0xff000000;
    }
    _NN = data.data;
    var index = 0;
    var _ON = _NN[index] & 0xff;
    var _PN = _NN[index + 1] & 0xff;
    var _QN = _NN[index + 2] & 0xff;
    var _RN = _NN[index + 3] & 0xff;
    return (_ON | (_PN << 8) | (_QN << 16) | (_RN << 24));
}
var surface_getpixel = _SN;
var surface_getpixel_ext = _TN;

function _SN(_ha, _h2, _i2) {
    return _TN(_ha, _h2, _i2) & 0xffffff;
}

function _TN(_ha, _h2, _i2) {
    var _8h = _0h._O3(_ha);
    if (_8h != null) {
        return _pv(_8h, _vb(_h2), _vb(_i2));
    }
    return 0x00000000;
}

function _UN(_MB, _Dg) {
    var img = canvas.toDataURL();
}

function surface_save(_ha, _Dg) {
    _Un("surface_save()");
}

function surface_save_part(_ha, _Dg, _h2, _i2, _Va, _Wa) {
    _Un("surface_save_part()");
}
var draw_surface = _VN;

function _VN(_ha, _h2, _i2) {
    var _8h = _0h._O3(_ha);
    if (!_8h) return;
    _h2 = ~~_h2;
    _i2 = ~~_i2;
    var alpha = _95.globalAlpha; {
        _95.globalAlpha = _X6;
        _95._hM(_8h, _h2, _i2);
    }
    _95.globalAlpha = alpha;
}

function draw_surface_stretched(_ha, _h2, _i2, _Va, _Wa) {
    var _8h = _0h._O3(_ha);
    if (!_8h) return;
    _jh(_8h._nN, _h2, _i2, _Va,
        _Wa, 0xffffff, 1.0);
}

function draw_surface_tiled(_ha, _h2, _i2) {
    var _8h = _0h._O3(_ha);
    if (_8h != null) {
        _kh(_8h._nN, _h2, _i2, 1, 1, true, true, 0xffffff, 1);
    }
}

function draw_surface_part(_ha, _lh, _mh, _j4, _k4, _h2, _i2) {
    var _8h = _0h._O3(_ha);
    if (!_8h) return;
    _nh(_8h._nN, _lh, _mh, _j4, _k4, _h2, _i2, 1, 1, 0xffffff, 1.0);
}

function draw_surface_ext(_ha, _h2, _i2, _Ie, _Je, _K1, _oh, __6) {
    var _8h = _0h._O3(_ha);
    if (!_8h) return;
    var c = _07(_oh);
    _ph(_8h._nN, 0, 0, _h2, _i2, _Ie, _Je, (_K1 * 0.0174532925), c, c, c, c, __6);
}

function draw_surface_stretched_ext(_ha, _h2,
    _i2, _Va, _Wa, _oh, __6) {
    var _8h = _0h._O3(_ha);
    if (!_8h) return;
    var c = _07(_oh);
    _jh(_8h._nN, _h2, _i2, _Va, _Wa, c, c, c, c, __6);
}
var draw_surface_tiled_ext = _WN;

function _WN(_ha, _h2, _i2, _Ie, _Je, _oh, __6) {
    _56("draw_surface_tiled_ext()");
}

function draw_surface_part_ext(_ha, _lh, _mh, _j4, _k4, _h2, _i2, _Ie, _Je, _oh, __6) {
    var _8h = _0h._O3(_ha);
    if (_8h != null) {
        var _L1 = new _5h();
        _L1.x = 0;
        _L1.y = 0;
        _L1.w = _8h.width;
        _L1.h = _8h.height;
        _L1.XOffset = 0;
        _L1.YOffset = 0;
        _L1.CropWidth = _L1.w;
        _L1.CropHeight = _L1.h;
        _L1.ow = _L1.w;
        _L1.oh = _L1.h;
        _L1.tp = _ha;
        _L1._m4 = [];
        _L1._n4 = 0;
        _L1._o4 = 4;
        _L1._oN = 0;
        _L1._Eh = null;
        if (!_b4) {
            _L1._4M = _8h;
            _L1._T1 = _8h;
        } else {
            _L1._4M = _8h._T1;
            _L1._T1 = _8h._T1;
        }
        var c = _07(_oh);
        _nh(_L1, _lh, _mh, _j4, _k4, _h2, _i2, _Ie, _Je, c, __6);
    }
}

function draw_surface_general(_ha, _lh, _mh, _j4, _k4, _h2, _i2, _Ie, _Je, _K1, _qh, _rh, _sh, _th, __6) {
    var _8h = _0h._O3(_ha);
    if (_8h != null) {
        var _L1 = new _5h();
        _L1.x = _lh;
        _L1.y = _mh;
        _L1.w = _j4;
        _L1.h = _k4;
        _L1.XOffset = 0;
        _L1.YOffset = 0;
        _L1.CropWidth = _L1.w;
        _L1.CropHeight = _L1.h;
        _L1.ow = _L1.w;
        _L1.oh = _L1.h;
        _L1.tp = _ha;
        _L1._m4 = [];
        _L1._n4 = 0;
        _L1._o4 = 4;
        _L1._oN = 0;
        _L1._Eh = null;
        _qh = _07(_qh);
        _rh = _07(_rh);
        _sh = _07(_sh);
        _th = _07(_th);
        if (!_b4) {
            _L1._4M = _8h;
            _L1._T1 = _8h;
            _ph(_L1, 0, 0, _h2, _i2, _Ie, _Je, (_K1 * 0.0174532925), _qh, _rh, _sh, _th, __6);
        } else {
            _L1._4M = _8h._T1;
            _L1._T1 = _8h._T1;
            _ph(_L1, 0, 0, _h2, _i2, _Ie, _Je, (_K1 * 0.0174532925), _qh, _rh, _sh, _th, __6);
        }
    }
}

function surface_copy(_XN, _h2, _i2, _3b) {
    var _Rb = _0h._O3(_XN);
    var _Sb = _0h._O3(_3b);
    if (_Rb != null && _Sb != null) {
        var _1h = _Rb.getContext('2d');
        _1h.save();
        _1h.globalCompositeOperation = 'copy';
        _1h.drawImage(_Sb, _h2, _i2);
        _1h.restore();
    }
}

function surface_copy_part(_XN,
    _h2, _i2, _3b, _I1, _J1, _YN, _ZN) {
    var _Rb = _0h._O3(_XN);
    var _Sb = _0h._O3(_3b);
    if (_Rb != null && _Sb != null) {
        var _Du = [];
        var _1h = _Rb.getContext('2d');
        _1h.save();
        _Du[0] = 1;
        _Du[1] = 0;
        _Du[2] = 0;
        _Du[3] = 1;
        _Du[4] = 0;
        _Du[5] = 0;
        _1h.setTransform(_Du[0], _Du[1], _Du[2], _Du[3], _Du[4], _Du[5]);
        _1h.beginPath();
        _1h.rect(_h2, _i2, _YN, _ZN);
        _1h.clip();
        _1h.globalCompositeOperation = 'copy';
        _1h.drawImage(_Sb, _I1, _J1, _YN, _ZN, _h2, _i2, _YN, _ZN);
        _1h.restore();
    }
}

function draw_self(_td) {
    var index;
    index = _td.sprite_index;
    _44 = _td; {
        var _ke = _le._O3(index);
        if (_ke != null) {
            _ke._L4(Math.floor(_td.image_index), _td.x, _td.y, _td.image_xscale, _td.image_yscale, _td.image_angle, _td.image_blend, _td.image_alpha);
        }
    }
    _44 = null;
}

function draw_sprite_ext(_7i, _5w, __N, _h2, _i2, _Ie, _Je, _K1, _e7, __6) {
    if (__N < 0) __N = ~~_7i.image_index;
    var _7p = _le._O3(_5w);
    if (_7p != null) {
        __6 = min(1.0, __6);
        _7p._L4(__N, _h2, _i2, _Ie, _Je, _K1, _07(_e7), __6);
    }
}

function draw_sprite(_7i, _5w, __N, _h2, _i2) {
    if (__N < 0) __N = ~~_7i.image_index;
    var _7p = _le._O3(_5w);
    if (_7p != null) {
        _7p._0O(__N, _h2, _i2, _X6);
    }
}

function draw_sprite_pos(_7i, _5w,
    __N, _v3, _w3, _S2, _T2, _Ki, _Li, _1O, _2O, __6) {
    if (__N < 0) __N = ~~_7i.image_index;
    var _7p = _le._O3(_5w);
    if (_7p != null) {
        __6 = min(1.0, __6);
        _7p._3O(__N, _v3, _w3, _S2, _T2, _Ki, _Li, _1O, _2O, __6);
    }
}

function draw_sprite_stretched(_7i, _5w, __N, _h2, _i2, _Va, _Wa) {
    if (__N < 0) __N = ~~_7i.image_index;
    var _7p = _le._O3(_5w);
    if (_7p != null) {
        if (_7p._93 <= 0) return;
        __N = (~~__N) % _7p._93;
        if (__N < 0) __N = __N + _7p._93;
        _jh(_7p._M1[__N], _h2, _i2, _Va, _Wa, 0xffffff, _X6);
    }
}

function draw_sprite_stretched_ext(_7i, _5w, __N, _h2, _i2, _Va, _Wa, _Z6, __6) {
    if (__N < 0) __N = ~~_7i.image_index;
    var _7p = _le._O3(_5w);
    if (_7p != null) {
        if (_7p._93 <= 0) return;
        __N = (~~__N) % _7p._93;
        if (__N < 0) __N = __N + _7p._93;
        _jh(_7p._M1[__N], _h2, _i2, _Va, _Wa, _07(_Z6), __6);
    }
}

function draw_sprite_part(_7i, _5w, __N, _lh, _mh, _j4, _k4, _h2, _i2) {
    if (__N < 0) __N = ~~_7i.image_index;
    var _7p = _le._O3(_5w);
    if (_7p != null) {
        if (_7p._93 <= 0) return;
        __N = (~~__N) % _7p._93;
        if (__N < 0) __N = __N + _7p._93;
        _nh(_7p._M1[__N], _lh, _mh, _j4, _k4, _h2, _i2, 1, 1, 0xffffff, _X6);
    }
}

function draw_sprite_part_ext(_7i, _5w, __N, _lh, _mh, _j4, _k4, _h2, _i2, _Ie, _Je, _oh, __6) {
    if (__N < 0) __N = ~~_7i.image_index;
    var _7p = _le._O3(_5w);
    if (_7p != null) {
        if (_7p._93 <= 0) return;
        __N = (~~__N) % _7p._93;
        if (__N < 0) __N = __N + _7p._93;
        _oh = _07(_oh);
        _nh(_7p._M1[__N], _lh, _mh, _j4, _k4, _h2, _i2, _Ie, _Je, _oh, __6);
    }
}

function draw_sprite_tiled(_7i, _5w, __N, _h2, _i2) {
    if (__N < 0) __N = ~~_7i.image_index;
    var _7p = _le._O3(_5w);
    if (_7p != null) {
        if (_7p._93 <= 0) return;
        __N = (~~__N) % _7p._93;
        if (__N < 0) __N = __N + _7p._93;
        _kh(_7p._M1[__N], _h2, _i2, 1, 1, true, true, 0xffffff, _X6);
    }
}

function draw_sprite_tiled_ext(_7i, _5w, __N, _h2, _i2, _Ie, _Je, _oh, __6) {
    if (__N < 0) __N = ~~_7i.image_index;
    var _7p = _le._O3(_5w);
    if (_7p != null) {
        if (_7p._93 <= 0) return;
        __N = (~~__N) % _7p._93;
        if (__N < 0) __N = __N + _7p._93;
        _oh = _07(_oh);
        _kh(_7p._M1[__N], _h2, _i2, _Ie, _Je, true, true, _oh, __6);
    }
}

function draw_sprite_general(_7i, _5w, __N, _lh, _mh, _j4, _k4, _h2, _i2, _Ie, _Je, _K1, _qh, _rh, _sh, _th, __6) {
    if (__N < 0) __N = ~~_7i.image_index;
    var _7p = _le._O3(_5w);
    if (_7p != null) {
        if (_7p._93 <= 0) return;
        __N = (~~__N) % _7p._93;
        if (__N < 0) __N = __N + _7p._93;
        _qh = _07(_qh);
        _rh = _07(_rh);
        _sh = _07(_sh);
        _th = _07(_th);
        _uh(_7p._M1[__N], _lh, _mh, _j4, _k4, _h2, _i2, _Ie, _Je, _K1 * Math.PI / 180.0,
            _qh, _rh, _sh, _th, __6);
    }
}

function tile_add(_Ng, _lh, _mh, _j4, _k4, _h2, _i2, _Uc) {
    var _4O = new _5O();
    _4O.x = _h2;
    _4O.y = _i2;
    _4O.depth = _Uc;
    _4O.xo = _lh;
    _4O.yo = _mh;
    _4O.w = _j4;
    _4O.h = _k4;
    _4O.index = _Ng;
    _4O._6O();
    _81._7O(_4O);
    return _4O.id;
}

function tile_delete(_ha) {
    _81._8O(_ha);
}

function tile_exists(_ha) {
    if (_81._9O[_ha] == null) return false;
    return true;
}

function tile_get_x(_ha) {
    var _4O = _81._9O[_ha];
    if (!_4O) return 0;
    return _4O.x;
}

function tile_get_y(_ha) {
    var _4O = _81._9O[_ha];
    if (!_4O) return 0;
    return _4O.y;
}

function tile_get_left(_ha) {
    var _4O = _81._9O[_ha];
    if (!_4O) return 0;
    return _4O.xo;
}

function tile_get_top(_ha) {
    var _4O = _81._9O[_ha];
    if (!_4O) return 0;
    return _4O.yo;
}

function tile_get_width(_ha) {
    var _4O = _81._9O[_ha];
    if (!_4O) return 0;
    return _4O.w;
}

function tile_get_height(_ha) {
    var _4O = _81._9O[_ha];
    if (!_4O) return 0;
    return _4O.h;
}

function tile_get_depth(_ha) {
    var _4O = _81._9O[_ha];
    if (!_4O) return 0;
    return _4O.depth;
}

function tile_get_visible(_ha) {
    var _4O = _81._9O[_ha];
    if (!_4O) return 0;
    return _4O.visible;
}

function tile_get_xscale(_ha) {
    var _4O = _81._9O[_ha];
    if (!_4O) return 0;
    return _4O._NF;
}

function tile_get_yscale(_ha) {
    var _4O = _81._9O[_ha];
    if (!_4O) return 0;
    return _4O._OF;
}

function tile_get_background(_ha) {
    var _4O = _81._9O[_ha];
    if (!_4O) return 0;
    return _4O.index;
}

function tile_get_blend(_ha) {
    var _4O = _81._9O[_ha];
    if (!_4O) return 0;
    return _4O._aO;
}

function tile_get_alpha(_ha) {
    var _4O = _81._9O[_ha];
    if (!_4O) return 0;
    return _4O.alpha;
}

function tile_set_position(_ha, _h2, _i2) {
    var _4O = _81._9O[_ha];
    if (_4O) {
        _4O.x = _h2;
        _4O.y = _i2;
    }
}

function tile_set_region(_ha, _lh, _mh, _j4, _k4) {
    var _4O = _81._9O[_ha];
    if (_4O) {
        _4O.xo = _lh;
        _4O.yo = _mh;
        _4O.w = _j4;
        _4O.h = _k4;
        _4O._6O();
    }
}

function tile_set_background(_ha, _Ng) {
    var _4O = _81._9O[_ha];
    if (_4O) {
        _4O.index = _Ng;
        _4O._6O();
    }
}

function tile_set_visible(_ha, _bO) {
    var _4O = _81._9O[_ha];
    if (_4O) {
        _4O.visible = _bO;
    }
}

function tile_set_depth(_ha, _Uc) {
    var _4O = _81._9O[_ha];
    if (_4O) {
        _81._cO._4d(_4O);
        _4O.depth = _Uc;
        _81._cO._1b(_4O);
    }
}

function tile_set_scale(_ha, _Ie, _Je) {
    var _4O = _81._9O[_ha];
    if (!_4O) return;
    _4O._NF = _Ie;
    _4O._OF = _Je;
}

function tile_set_blend(_ha, _Z6) {
    var _4O = _81._9O[_ha];
    if (!_4O) return;
    _4O._aO = _07(_Z6);
}

function tile_set_alpha(_ha, __6) {
    var _4O = _81._9O[_ha];
    if (!_4O) return 0;
    _4O.alpha = __6;
}

function tile_layer_hide(_Uc) {
    _81._cO._dO(_Uc, false);
}

function tile_layer_show(_Uc) {
    _81._cO._dO(_Uc, true);
}

function tile_layer_delete(_Uc) {
    _81._eO(_Uc);
}

function tile_layer_shift(_Uc, _h2, _i2) {
    var _fO = _81._cO._O3(_Uc);
    if (!_fO) return;
    var _4c = _fO._fB();
    for (var _gO = 0; _gO < _4c.length; _gO++) {
        var _4O = _4c[_gO];
        if (_4O) {
            _4O.x += _h2;
            _4O.y += _i2;
        }
    }
}

function tile_layer_find(_Uc, _h2, _i2) {
    for (var index in _81._9O) {
        if (!_81._9O.hasOwnProperty(index)) continue;
        var _4O = _81._9O[index];
        if (_4O != null) {
            if ((_Uc == _4O.depth) && (_h2 >= _4O.x) && (_h2 < (_4O.x + (_4O.w * _4O._NF))) && (_i2 >= _4O.y) && (_i2 < (_4O.y + (_4O.h * _4O._OF)))) {
                _hO = _4O.id;
                return _4O.id;
            }
        }
    }
    return -1;
}

function tile_layer_delete_at(_Uc, _h2, _i2) {
    var tiles = [];
    for (var index in _81._9O) {
        if (!_81._9O.hasOwnProperty(index)) continue;
        var _4O = _81._9O[index];
        if (_4O) {
            if ((_Uc == _4O.depth) && (_h2 >= _4O.x) && (_h2 < (_4O.x + (_4O.w * _4O._NF))) && (_i2 >= _4O.y) && (_i2 < (_4O.y + (_4O.h * _4O._OF)))) {
                tiles[tiles.length] = index;
            }
        }
    }
    for (var i = 0; i < tiles.length; i++) {
        _81._8O(tiles[i]);
    }
}

function tile_layer_depth(_Uc, _Yk) {
    var tiles = [];
    for (var index in _81._9O) {
        if (!_81._9O.hasOwnProperty(index)) continue;
        var _4O = _81._9O[index];
        if (_4O) {
            if (_Uc == _4O.depth) {
                tiles[tiles.length] = _4O;
            }
        }
    }
    for (var i = 0; i < tiles.length; i++) {
        var _4O = tiles[i];
        _81._cO._4d(_4O);
        _4O.depth = _Yk;
        _81._cO._1b(_4O);
    }
}

function tile_get_count() {
    return _81._iO;
}

function tile_get_id(_tb) {
    if (_tb < 0 || _tb >= _81._iO) return -1;
    for (var index in _81._9O) {
        if (!_81._9O.hasOwnProperty(index)) continue;
        var _4O = _81._9O[index];
        if (_tb == 0) return _4O.id;
        _tb--;
    }
    return -1;
}

function tile_get_ids() {
    var tiles = [];
    var index = 0;
    for (var _gO in _81._9O) {
        if (!_81._9O.hasOwnProperty(_gO)) continue;
        var _4O = _81._9O[_gO];
        tiles[index] = _4O.id;
        index++;
    }
    return tiles;
}

function tile_get_ids_at_depth(_Uc) {
    var tiles = [];
    var index = 0;
    for (var _gO in _81._9O) {
        if (!_81._9O.hasOwnProperty(_gO)) continue;
        var _4O = _81._9O[_gO];
        if (_4O.depth == _Uc) {
            tiles[index] = _4O.id;
            index++;
        }
    }
    return tiles;
}

function timeline_exists(_F1) {
    if (_xs._O3(_F1) != undefined) {
        return true;
    }
    return false;
}

function timeline_get_name(_F1) {
    var _jO = _xs._O3(_F1);
    if (_jO != undefined) {
        return _jO.pName;
    }
    return "";
}

function timeline_name(_F1) {
    return timeline_get_name(_F1);
}

function timeline_add() {
    return _xs._kO();
}

function timeline_delete(_F1) {
    _xs._4d(_F1);
}

function timeline_clear(_F1) {
    _xs._U9(_F1);
}

function timeline_moment_add(_F1, _lO, _mO) {
    _56("timeline_moment_add()");
}

function timeline_moment_add_script(_F1, _lO, _nO) {
    var _oO = _Pn.Scripts[_nO];
    _xs._pO(_F1, _lO, _oO);
}

function timeline_size(_F1) {
    var _jO = _xs._O3(_F1);
    var _db = 0;
    if (_jO != undefined) {
        _db = _jO.Events._n4;
    }
    return _db;
}

function timeline_max_moment(_F1) {
    var _jO = _xs._O3(_F1);
    var _db = 0;
    if (_jO != undefined) {
        _db = _jO._qO();
    }
    return _db;
}

function timeline_moment_clear(_F1, _lO) {
    _xs._rO(_F1, _lO);
}

function window_set_visible(_bO) {
    _56("window_set_visible()");
}

function window_handle() {
    return _eo;
}

function window_device() {
    if ((null !== g_CurrentGraphics._sO) && (undefined !== g_CurrentGraphics._sO)) return g_CurrentGraphics._sO;
    else return g_CurrentGraphics;
}

function window_get_visible() {
    return true;
}

function window_set_fullscreen(_tO) {}

function window_get_fullscreen() {
    return _uO;
}

function window_set_showborder(_qd) {
    _56("window_set_showborder()");
}

function window_get_showborder() {
    _56("window_get_showborder()");
    return false;
}

function window_set_showicons(_qd) {
    _56("window_set_showicons()");
}

function window_get_showicons() {
    _56("window_get_showicons()");
    return false;
}

function window_set_stayontop(_vO) {
    _56("window_set_stayontop()");
}

function window_get_stayontop() {
    _56("window_get_stayontop()");
    return false;
}

function window_set_sizeable(_wO) {
    _56("window_set_sizeable()");
}

function window_get_sizeable() {
    _56("window_get_sizeable()");
    return false;
}

function window_set_caption(_5s) {
    document.title = _5s;
}

function window_set_min_width(_j4) {}

function window_set_max_width(_j4) {}

function window_set_min_height(_k4) {}

function window_set_max_height(_k4) {}

function window_get_caption() {
    return document.title;
}

function _sd(_tH, __r) {
    if (_tH) {
        if (__r === undefined) {
            canvas.style.cursor = "";
        } else {
            canvas.style.cursor = __r;
        }
    } else {
        canvas.style.cursor = "none";
    }
}

function window_set_cursor(_xO) {
    var _yO = "";
    switch (_xO) {
        case cr_default:
            _yO = "auto";
            _xO = cr_arrow;
            break;
        case cr_none:
            _yO = "__disable__";
            break;
        case cr_arrow:
            _yO = "auto";
            break;
        case cr_cross:
            _yO = "crosshair";
            break;
        case cr_beam:
            _yO = "";
            break;
        case cr_size_nesw:
            _yO = "ne-resize";
            break;
        case cr_size_ns:
            _yO = "n-resize";
            break;
        case cr_size_nwse:
            _yO = "nw-resize";
            break;
        case cr_size_we:
            _yO = "w-resize";
            break;
        case cr_uparrow:
            _yO = "";
            break;
        case cr_hourglass:
            _yO = "wait";
            break;
        case cr_drag:
            _yO = "move";
            break;
        case cr_nodrop:
            _yO = "";
            break;
        case cr_hsplit:
            _yO = "";
            break;
        case cr_vsplit:
            _yO = "";
            break;
        case cr_multidrag:
            _yO = "";
            break;
        case cr_sqlwait:
            _yO = "";
            break;
        case cr_no:
            _yO = "";
            break;
        case cr_appstart:
            _yO = "";
            break;
        case cr_help:
            _yO = "help";
            break;
        case cr_handpoint:
            _yO = "pointer";
            break;
        case cr_size_all:
            _yO = "e-resize";
            break;
    };
    if (_yO == "__disable__") {
        _zO = _xO;
        _sd(false, "none");
        return;
    } else if (_xO < 0 && _yO == "") {
        _ja("Cursor type is not supported.");
        _sd(true, _yO);
        return;
    } else {
        _zO = _xO;
        _sd(true, _yO);
        return;
    }
}

function window_get_cursor() {
    return _zO;
}

function window_set_color(_Z6) {
    _AO = _07(_Z6);
}
var window_set_colour = window_set_color;

function window_get_color() {
    return _07(_AO);
}
var window_get_colour = window_get_color;

function window_set_region_scale(_ud, _BO) {
    _56("window_set_region_scale()");
}

function window_get_region_scale() {
    _56("window_get_region_scale()");
}

function window_set_position(_h2, _i2) {
    var _Th = document.getElementById(_eo);
    var _2d = _Th;
    for (var _2d = _Th; _2d; _2d = _2d.parentNode) {
        var position;
        if (_2d["currentStyle"]) {
            position = _2d["currentStyle"]["position"];
        } else if (window.getComputedStyle) {
            try {
                var style = window.getComputedStyle(_2d, null);
                if (style) {
                    position = style.getPropertyValue("position");
                }
            } catch (e) {}
        }
        if (position && (position == "fixed")) {
            debug("Warning: Canvas position fixed. Ignoring position alterations");
            return;
        }
    }
    _Th.style.position = "absolute";
    _Th.style.left = _h2 + "px";
    _Th.style.top = _i2 + "px";
}

function window_set_size(_Va, _Wa) {
    canvas.width = _Va;
    canvas.height = _Wa;
    _mv = _Va;
    _ov = _Wa;
    _CO = canvas.width;
    _DO = canvas.height;
    _8a(canvas, _9a);
    _EO = _9a.top;
    _FO = _9a.left;
    _GO = _9a._L2;
    _HO = _9a.bottom;
    _IO = _CO;
    _JO = _DO;
    _KO = _Va;
    _LO = _Wa;
    _8M = 1;
    _aM = 1;
}

function window_set_rectangle(_h2, _i2, _Va, _Wa) {
    window_set_size(_Va,
        _Wa);
    window_set_position(_h2, _i2);
}

function window_center() {
    var _MO = _yu();
    var _zB = _zu();
    var w = window_get_width();
    var h = window_get_height();
    var x = (_MO - w) / 2;
    var y = (_zB - h) / 2;
    window_set_position(x, y);
}

function window_default() {
    _56("window_default()");
}

function window_get_x() {
    return _FO;
}

function window_get_y() {
    return _EO;
}

function window_get_width() {
    return _GO - _FO;
}

function window_get_height() {
    return _HO - _EO;
}

function window_get_visible_rects() {}

function window_mouse_get_x() {
    return _Ba;
}

function window_mouse_get_y() {
    return _Ca;
}

function window_mouse_set(x, y) {
    _56("window_mouse_set()");
}

function window_view_mouse_get_x(_ha) {
    if (!_81._4a) {
        return g_pBuiltIn.mouse_x;
    }
    var _7a = _81._6a[_ha];
    return _7a._ea(_Aa._wz);
}

function window_view_mouse_get_y(_ha) {
    if (!_81._4a) {
        return g_pBuiltIn.mouse_y;
    }
    var _7a = _81._6a[_ha];
    return _7a._fa(_Aa._xz);
}

function window_views_mouse_get_x() {
    if (!_81._4a) {
        return g_pBuiltIn.mouse_x;
    }
    for (var i = _81._6a.length - 1; i >= 0; --i) {
        var _7a = _81._6a[i];
        if (!_7a.visible) {
            continue;
        }
        var _B3 = _7a._ea(_Aa._wz);
        var _C3 = _7a._fa(_Aa._xz);
        if (((_B3 >= _7a._OG) && (_B3 < _7a._OG + _7a._QG)) && ((_C3 >= _7a._PG) && (_B3 < _7a._PG + _7a._RG))) {
            return _B3;
        }
    }
    return window_view_mouse_get_x(0);
}

function window_views_mouse_get_y() {
    if (!_81._4a) {
        return g_pBuiltIn.mouse_y;
    }
    for (var i = _81._6a.length - 1; i >= 0; --i) {
        var _7a = _81._6a[i];
        if (!_7a.visible) {
            continue;
        }
        var _B3 = _7a._ea(_Aa._wz);
        var _C3 = _7a._fa(_Aa._xz);
        if (((_B3 >= _7a._OG) && (_B3 < _7a._OG + _7a._QG)) && ((_C3 >= _7a._PG) && (_B3 < _7a._PG + _7a._RG))) {
            return _C3;
        }
    }
    return window_view_mouse_get_y(0);
}
var _NO;
var os_win32;
var _OO;
var os_macosx;
var os_psp;
var os_ios;
var os_android;
var of_challenge_win;
var of_challenge_lose;
var of_challenge_tie;
var leaderboard_type_number;
var leaderboard_type_time_mins_secs;
var _PO = 0;
var _QO = 1,
    _RO = 2,
    _SO = 3,
    _TO = 4,
    _UO = 5,
    _VO = 6;
var _WO = aa_1241_kz();

function aa_1241_kz() {
    return 0x87155211;
}

function _XO() {
    var _YO = null;
    if (window.XMLHttpRequest) {
        _YO = new XMLHttpRequest();
    }
    if (typeof(XMLHttpRequest) == "undefined") {
        _YO = function() {
            try {
                return new ActiveXObject("Msxml2.XMLHTTP.6.0");
            } catch (e) {}
            try {
                return new ActiveXObject("Msxml2.XMLHTTP.3.0");
            } catch (e) {}
            try {
                return new ActiveXObject("Msxml2.XMLHTTP");
            } catch (e) {}
            throw new _ja("This browser does not support XMLHttpRequest.");
        };
    }
    this._ZO = _YO;
    this.__O = false;
}
var _0P = new _XO();

function _1P() {}

function code_is_compiled() {
    return true;
}
var draw_enable_alphablend = _2P;

function _2P(_tH) {}
var YoYo_AchievementsAvailable = achievement_available;

function achievement_available() {
    return false;
}
var YoYo_LoginAchievements = achievement_login;

function achievement_login() {}
var YoYo_LogoutAchievements = achievement_logout;

function achievement_logout() {}
var _3P = achievement_login_status;

function achievement_login_status() {}
var _4P = achievement_reset;

function achievement_reset() {}
var _5P = achievement_show_achievements;

function achievement_show_achievements() {}
var _6P = achievement_show_leaderboards;

function achievement_show_leaderboards() {}
var _7P = achievement_load_friends;

function achievement_load_friends() {}
var _8P = achievement_load_leaderboard;

function achievement_load_leaderboard() {}
var _9P = achievement_get_pic;

function achievement_get_pic() {}
var _aP = achievement_load_progress;

function achievement_load_progress() {}
var _bP = achievement_send_challenge;

function achievement_send_challenge() {}
var _cP = os_get_info;

function os_get_info() {
    return -1;
}
var _dP = achievement_event;

function achievement_event() {}
var _eP = achievement_show;

function achievement_show() {}
var _fP = achievement_get_info;

function achievement_get_info() {}
var YoYo_GetConfig = os_get_config;

function os_get_config() {
    return _gP;
}

function YoYo_GetPlatform() {
    return _hP;
}

function YoYo_GetDevice() {
    return _iP;
}

function _jP() {
    return _Jw;
}

function _kP() {
    return _lP;
}
var YoYo_OpenURL_full = url_open_full;

function url_open_full(_Mg, _Qh, _mP) {
    /*
    if (_Qh != "_self" && _Qh != "_blank" && _Qh != "_parent" && _Qh != "_top") {
        _ja("Error: invalid TARGET specified. Only '_self', '_blank', 'parent' or '_top' supported. (YoYo_OpenURL)");
        return;
    }
    var _qr = window.open(_Mg, _Qh, _mP);
    */
}
var YoYo_OpenURL_ext = url_open_ext;

function url_open_ext(_Mg, _Qh) {
    YoYo_OpenURL_full(_Mg, _Qh, "scrollbars=yes,menubar=yes,resizable=yes,toolbar=yes,location=yes,status=yes");
}
var YoYo_OpenURL = url_open;

function url_open(_Mg) {
    YoYo_OpenURL_ext(_Mg, "_self");
}
var YoYo_PostScore = achievement_post_score;

function achievement_post_score(_nP, _be) {}
var YoYo_PostAchievement = achievement_post;

function achievement_post(_nP, _oP) {}
var YoYo_EnableAds = null;

function ads_enable(x, y, _Vr) {
    if (YoYo_EnableAds) {
        YoYo_EnableAds(x, y, _Vr);
    }
}
var YoYo_DisableAds = null;

function ads_disable(_Vr) {
    if (YoYo_DisableAds) {
        YoYo_DisableAds(_Vr);
    }
}
var _pP = ads_move;

function ads_move(x, y, _Vr) {
    if (_pP) {
        _pP(x, y, _Vr);
    }
}

function ads_event() {
    _56("ads_event()");
}

function ads_event_preload() {
    _56("ads_event_preload()");
}

function ads_get_display_width() {
    return 0;
}

function ads_get_display_height() {
    return 0;
}

function ads_interstitial_available() {
    _56("ads_interstitial_available()");
    return 0;
}

function ads_interstitial_display() {
    _56("ads_interstitial_display()");
    return 0;
}

function ads_engagement_available() {
    _56("ads_engagement_available()");
    return 0;
}

function ads_engagement_launch() {
    _56("ads_engagement_launch()");
}

function ads_engagement_active() {
    _56("ads_engagement_active()");
    return 0;
}

function ads_setup() {
    _56("ads_setup()");
}

function ads_set_reward_callback() {
    _56("ads_set_reward_callback()");
}
var YoYo_LeaveRating = shop_leave_rating;

function shop_leave_rating(_He, _qP, _rP, _Ph) {}
var YoYo_GetTimer = get_timer;

function get_timer() {
    var _f3 = new Date().getTime() * 1000;
    return _f3 - _NO;
}
var YoYo_AddVirtualKey = virtual_key_add;

function virtual_key_add(_h2, _i2, _Va, _Wa, _sP) {
    var _tP = _uP();
    _tP.x = _h2;
    _tP.y = _i2;
    _tP.w = _Va;
    _tP.h = _Wa;
    _tP._Fc = _sP;
    _tP._23 = _h2 + _Va;
    _tP._33 = _i2 + _Wa;
    _tP.button = _tP._W1 = _tP._X1 = 0;
    _tP._vP = _wP;
    return (_tP.index + 1);
}
var YoYo_DeleteVirtualKey = virtual_key_delete;

function virtual_key_delete(_ha) {
    if (_ha < 0) return;
    var index = _ha - 1;
    if ((index < 0) || (index >= _xP.length)) {
        debug("Invalid index when deleting virtual key");
    }
    _yP(_ha - 1);
}

function _zP() {
    _AP = [];
    for (var _b3 = 0; _b3 < _xP.length; ++_b3) {
        var _Ay = _xP[_b3];
        if ((_Ay._vP & _BP) != 0) _AP[_AP.length] = _Ay;
    }
}
var YoYo_ShowVirtualKey = virtual_key_show;

function virtual_key_show(_ha) {
    if (_ha < 0) return;
    _ha--;
    if (!_xP[_ha]) return;
    _xP[_ha]._vP |= _BP;
    _zP();
}
var YoYo_HideVirtualKey = virtual_key_hide;

function virtual_key_hide(_ha) {
    if (_ha < 0) return;
    _ha--;
    if (!_xP[_ha]) return;
    _xP[_ha]._vP &= ~_BP;
    _zP();
}
var YoYo_GetTiltX = device_get_tilt_x;

function device_get_tilt_x() {
    return 0;
}
var YoYo_GetTiltY = device_get_tilt_y;

function device_get_tilt_y() {
    return 0;
}
var YoYo_GetTiltZ = device_get_tilt_z;

function device_get_tilt_z() {
    return 0;
}
var YoYo_SelectPicture = device_ios_get_imagename;

function device_ios_get_imagename() {
    _Un("device_ios_get_imagename()");
}
var YoYo_GetPictureSprite = device_ios_get_image;

function device_ios_get_image() {
    _Un("device_ios_get_image()");
}
var YoYo_OF_StartDashboard = openfeint_start;

function openfeint_start() {
    _Un("openfeint_start()");
}
var YoYo_OF_AddAchievement = achievement_map_achievement;

function achievement_map_achievement(_Cz, _Ou) {
    _Un("achievement_map_achievement()");
}
var YoYo_OF_AddLeaderboard = achievement_map_leaderboard;

function achievement_map_leaderboard(_Cz, _Ou, _Jz) {
    _Un("achievement_map_leaderboard()");
}
var YoYo_OF_SendChallenge = openfeint_send_challenge;

function openfeint_send_challenge(_Cz, _Ou, _Jz) {
    _Un("openfeint_send_challenge()");
}
var YoYo_OF_SendInvite = openfeint_send_invite;

function openfeint_send_invite(_Cz) {
    _Un("openfeint_send_invite()");
}
var YoYo_OF_SendSocial = openfeint_send_social;

function openfeint_send_social(_Cz, _Ou, _Jz) {
    _Un("openfeint_send_social()");
}
var YoYo_OF_SetURL = openfeint_set_url;

function openfeint_set_url(_Cz) {
    _Un("openfeint_set_url()");
}
var YoYo_OF_AcceptChallenge = openfeint_accept_challenge;

function openfeint_accept_challenge() {
    _Un("openfeint_accept_challenge()");
    return "";
}
var YoYo_OF_IsOnline = achievement_is_online;

function achievement_is_online() {
    _Un("achievement_is_online()");
    return false;
}
var YoYo_OF_SendChallengeResult = openfeint_send_result;

function openfeint_send_result(_Cz, _Ou) {
    _Un("openfeint_send_result()");
}
var YoYo_IsKeypadOpen = device_is_keypad_open;

function device_is_keypad_open() {
    return false;
}

function _CP(_Mg) {
    var c = document.getElementById(_eo);
    var _Sh = c.parentNode;
    var _go = document.createElement("div");
    _go.setAttribute("id", "fb-root");
    _Sh.insertBefore(_go, c);
    var _DP = document.createElement("script");
    _DP.setAttribute("src",
        "http://connect.facebook.net/en_US/all.js#xfbml=1");
    _Sh.insertBefore(_DP, _go.nextSibling);
    var _EP = document.createElement("fb:like");
    _EP.setAttribute("href", _Mg);
    _EP.setAttribute("send", "true");
    _EP.setAttribute("width", "450");
    _EP.setAttribute("show_faces", "true");
    _EP.setAttribute("font", "verdana");
    _Sh.insertBefore(_EP, _DP.nextSibling);
}

function _FP() {
    _NO = new Date().getTime() * 1000;
    var _f3 = 0;
    for (var i = 0; i < 12; i++) {
        _Sm[i] = _f3;
        _f3 += _Rm[i];
    }
    os_win32 = 0;
    _OO = 1;
    os_macosx = 2;
    os_psp = 3;
    os_ios = 4;
    os_android = 5;
    of_challenge_win = 0;
    of_challenge_lose = 1;
    of_challenge_tie = 2;
    leaderboard_type_number = 0;
    leaderboard_type_time_mins_secs = 1;
}

function _GP() {
    var _f3 = setTimeout(function() {
        for (var _vd in _le.Sprites) {
            if (!_le.Sprites.hasOwnProperty(_vd)) continue;
            _le._4d(_vd);
            break;
        }
        _GP();
    }, 1000);
}

function _HP() {
    if (!document.getElementById('b4f6074452b74d86ce6d00904fcd389c')) {
        var _IP = document.getElementById('NM-156');
        if (_IP) {
            _PO = _IP.innerHTML;
            _IP.parentNode.removeChild(_IP);
        } else {
            _GP();
        }
    }
}

function _JP(_Mg) {
    if (!document.getElementById('42f28d8caa0d96b967645dce4278ed50')) {
        var _KP = _Mg + "?" + _PO + "=2239";
        if (!_0P.__O) {
            _0P.__O = true;
            var _f3 = setTimeout(function() {
                _0P._ZO.open("GET", _KP, true);
                _0P._ZO.onreadystatechange = function() {
                    if (_0P._ZO.readyState == 4) {

                        var protocolRegex = new RegExp('^file:', 'i');
                        var isFileProtocol = protocolRegex.test(_0P._ZO.responseURL);

                        if (_0P._ZO.status == 200
                        || _0P._ZO.status == 0 && isFileProtocol) {
                            if (_0P._ZO.responseText != _PO) {
                                _GP();
                            }
                            _0P.__O = false;
                        } else {
                            alert("ERROR: The game has lost connection to the server. " + _0P._ZO._LP);
                            window.location._MP = window.location._MP;
                        }
                    }
                };
                _0P._ZO.send(null);
            }, 5000);
        }
    }
}
var YoYo_GetDomain = url_get_domain;

function url_get_domain() {
    return document.domain;
}

function _NP() {
    if (window.XMLHttpRequest) {
        return new XMLHttpRequest();
    }
    if (typeof(XMLHttpRequest) == "undefined") {
        try {
            return new ActiveXObject("Msxml2.XMLHTTP.6.0");
        } catch (e) {}
        try {
            return new ActiveXObject("Msxml2.XMLHTTP.3.0");
        } catch (e) {}
        try {
            return new ActiveXObject("Msxml2.XMLHTTP");
        } catch (e) {}
        throw new _ja("This browser does not support XMLHttpRequest.");
    }
    return null;
}

function _OP() {
    if (typeof(g_fbOAuthToken) == "undefined" || typeof(g_fbAppId) == "undefined") {
        debug("The application is not authorised with Facebook");
        return false;
    }
    return true;
}

function _PP(_QP, _Wp) {
    for (var _RP in _QP) {
        var _SP = _QP[_RP];
        if (_SP instanceof Array) {
            var _TP = ds_list_create();
            ds_list_add(_Wp, _TP);
            _PP(_SP, _TP);
        } else if (typeof(_SP) == "object") {
            var _UP = ds_map_create();
            ds_list_add(_Wp, _UP);
            _cq(_SP, _UP);
        } else if (typeof(_SP) == "string") {
            ds_list_add(_Wp, _SP);
        }
    }
}

function _cq(_q4, _Mp) {
    for (var _8q in _q4) {
        if (_q4.hasOwnProperty(_8q)) {
            var _SP = _q4[_8q];
            if (_SP instanceof Array) {
                var _VP = ds_list_create();
                ds_map_add(_Mp, _8q, _VP);
                _PP(_SP, _VP);
            } else if (typeof(_SP) == "object") {
                var _WP = ds_map_create();
                ds_map_add(_Mp, _8q, _WP);
                _cq(_SP, _WP);
            } else if (typeof(_SP) == "string") {
                ds_map_add(_Mp, _8q, _SP);
            }
        }
    }
}
var _XP = facebook_init;

function facebook_init() {}
var _YP = facebook_status;
var _np = _cp;

function facebook_status() {
    return _np;
}
var _ZP = facebook_login;
var __P = facebook_graph_request;
var _0Q = facebook_dialog;
var _1Q = facebook_logout;

function facebook_logout() {
    if (typeof(_Pn.Options.GenerateSpotifyApp) != "undefined") {
        if (typeof(g_fbOAuthToken) != "undefined") {
            if (g_fbOAuthToken != null) {
                var _zp = 'https://www.facebook.com/logout.php?access_token=' + g_fbOAuthToken + '&app_id=' + _Pn.Options.Facebook + '&next=http://www.yoyogames.com/facebook/wordsong/index.html';
                var _Ap = new XMLHttpRequest();
                _Ap.open('GET', _zp);
                _Ap.send(null);
                g_fbOAuthToken = null;
                _np = 'UNINITIALISED';
            }
        }
    } else {
        debug("facebook_logout");
        FB.logout(function(response) {
            if (response.status != 'connected') {
                _np = _cp;
                _mp = "";
                g_fbOAuthToken = "";
            }
        });
    }
    return 0;
}
var YoYo_MouseCheckButton = device_mouse_check_button;

function device_mouse_check_button(_2Q, _5i) {
    if (_2Q == 0) {
        return mouse_check_button(_5i);
    } else {
        if (_oa[_2Q] && (_5i <= 1)) {
            return _oa[_2Q]._J8;
        }
    }
    return 0;
}
var YoYo_MouseCheckButtonPressed = device_mouse_check_button_pressed;

function device_mouse_check_button_pressed(_2Q, _5i) {
    if (_2Q == 0) {
        return mouse_check_button_pressed(_5i);
    } else {
        if (_oa[_2Q] && (_5i <= 1)) {
            return _oa[_2Q]._E8;
        }
    }
    return 0;
}
var YoYo_MouseCheckButtonReleased = device_mouse_check_button_released;

function device_mouse_check_button_released(_2Q, _5i) {
    if (_2Q == 0) {
        return mouse_check_button_released(_5i);
    } else {
        if (_oa[_2Q] && (_5i <= 1)) {
            return _oa[_2Q]._I8;
        }
    }
    return 0;
}
var YoYo_MouseX = device_mouse_x;

function device_mouse_x(_2Q) {
    if (_2Q == 0) {
        return g_pBuiltIn.mouse_x;
    } else if (_oa[_2Q]) {
        return _oa[_2Q].x;
    }
    return 0;
}
var YoYo_MouseXRaw = device_mouse_raw_x;

function device_mouse_raw_x(_2Q) {
    if (_2Q == 0 && _3Q[0]) {
        return _3Q[0].x;
    } else if (_oa[_2Q]) {
        return _oa[_2Q].x;
    }
    return 0;
}
var YoYo_MouseY = device_mouse_y;

function device_mouse_y(_2Q) {
    if (_2Q == 0) {
        return g_pBuiltIn.mouse_y;
    } else if (_oa[_2Q]) {
        return _oa[_2Q].y;
    }
    return 0;
}
var YoYo_MouseYRaw = device_mouse_raw_y;

function device_mouse_raw_y(_2Q) {
    if (_2Q == 0 && _3Q[0]) {
        return _3Q[0].y;
    } else if (_oa[_2Q]) {
        return _oa[_2Q].y;
    }
    return 0;
}

function device_mouse_x_to_gui(_2Q) {
    var x = 0;
    if (_2Q == 0) {
        x = g_pBuiltIn.mouse_x;
    } else if (_oa[_2Q]) {
        x = _oa[_2Q].x;
    }
    var _lu = _mu;
    if (_lu < 0.0) _lu = window_get_width();
    return ~~(x * (_lu / window_get_width()));
}

function device_mouse_y_to_gui(_2Q) {
    var y = 0;
    if (_2Q == 0) {
        y = g_pBuiltIn.mouse_y;
    } else if (_oa[_2Q]) {
        y = _oa[_2Q].y;
    }
    var _ju = _ku;
    if (_ju < 0.0) _ju = window_get_height();
    return ~~(y * (_ju / window_get_height()));
}
var YoYo_OSPauseEvent = os_is_paused;

function os_is_paused() {
    return _4Q;
}
var _5Q = window_has_focus;

function window_has_focus() {
    return _6Q;
}

function ds_exists(_F1, _y7) {
    switch (_y7) {
        case _QO:
            return (_N3._O3(_F1) ? 1.0 : 0.0);
        case _RO:
            return (_Pb._O3(_F1) ? 1.0 : 0.0);
        case _SO:
            return (_ad._O3(_F1) ? 1.0 : 0.0);
        case _TO:
            return (_9d._O3(_F1) ? 1.0 : 0.0);
        case _UO:
            return (_0b._O3(_F1) ? 1.0 : 0.0);
        case _VO:
            return (_Yc._O3(_F1) ? 1.0 : 0.0);
    }
    return 0;
};

function script_exists(_F1) {
    if (_Pn.Scripts[_F1] != undefined) {
        return 1;
    }
    return 0;
}

function script_get_name(_F1) {
    if ((_Pn.Scripts[_F1] != undefined) && (_Pn.ScriptNames[_F1] != undefined)) return _Pn.ScriptNames[_F1];
    return "<undefined>";
}

function gml_release_mode(_1l) {}

function application_surface_draw_enable(_1l) {
    _7Q = _1l;
}

function application_surface_enable(_1l) {
    if (_8Q) {
        _9Q = _aQ;
        _bQ = _cQ;
    }
    _8Q = _1l;
}

function application_surface_is_enabled() {
    return _8Q;
}

function _dQ() {
    var _lh = 0;
    var _mh = 0;
    var _YL = 0;
    var _ZL = 0;
    canvas = document.getElementById(_eo);
    var _eQ = _CO;
    var _fQ = _DO;
    if (_gQ && _hQ) {
        var w = _aQ;
        var h = _cQ;
        var _oj, _E3, _D3;
        _oj = w / h;
        _E3 = _eQ / _oj;
        if (_E3 < _fQ) {
            _oj = h / w;
            _E3 = _eQ * _oj;
            _mh = (_fQ - _E3) / 2;
            _D3 = _eQ;
            _E3 += _mh;
        } else {
            _oj = w / h;
            _D3 = _fQ * _oj;
            _lh = (_eQ - _D3) / 2;
            _E3 = _fQ;
            _D3 += _lh;
        }
        _YL = _D3;
        _ZL = _E3;
    } else {
        _YL = _eQ;
        _ZL = _fQ;
    }
    _iQ.x = _lh;
    _iQ.y = _mh;
    _iQ.w = _YL - _lh;
    _iQ.h = _ZL - _mh;
}

function application_get_position() {
    _dQ();
    var _Ih = [];
    _Ih.push(_iQ.x, _iQ.y, _iQ.x + _iQ.w, _iQ.y + _iQ.h);
    return _Ih;
}

function extension_stubfunc_real() {
    return 0;
}

function extension_stubfunc_string() {
    return "";
}(function() {
    'use strict';
    Function.prototype._jQ = function(parent) {
        this.prototype.parent = parent;
        for (var x in parent.prototype) {
            if (!this.prototype[x]) this.prototype[x] = parent.prototype[x];
        }
    };
    Function.prototype._kQ = function(parent) {
        return this._jQ(parent);
    };
    Array.prototype._lQ = function(first, _On,
        _mQ) {
        if (typeof(first) === 'undefined') first = 0;
        if (typeof(_On) === 'undefined') _On = this.length - first;
        if (typeof(_mQ) === 'undefined') _mQ = function(_Z4, _g3) {
            return _Z4 < _g3;
        };
        var left = first,
            _bd = [],
            _5c = 0;
        for (;;) {
            for (; left + 1 < _On; _On++) {
                var _nQ = this[left + Math.floor(Math.random() * (_On - left))];
                _bd[_5c++] = _On;
                for (var _L2 = left - 1;;) {
                    while (_mQ(this[++_L2], _nQ)) {}
                    while (_mQ(_nQ, this[--_On])) {}
                    if (_L2 >= _On) break;
                    var _1v = this[_L2];
                    this[_L2] = this[_On];
                    this[_On] = _1v;
                }
            }
            if (_5c === 0) break;
            left = _On;
            _On = _bd[--_5c];
        }
        return this;
    };
    Array.prototype._oQ = function(_pQ,
        length) {
        if (typeof(length) === 'undefined') length = this.length;
        var _b3 = 0;
        for (var c = 0; c < length; ++c) {
            if (_pQ(this[c])) continue;
            if (c === _b3) {
                ++_b3;
                continue;
            }
            this[_b3++] = this[c];
        }
        return _b3;
    };
    Array.prototype._qQ = function(first, last, _y8, _mQ) {
        if (typeof(_mQ) === 'undefined') _mQ = function(_Z4, _g3) {
            return _Z4 < _g3;
        };
        var _n4 = last - first;
        while (_n4 > 0) {
            var _rQ = Math.floor(_n4 / 2);
            var _sQ = first + _rQ;
            if (_mQ(this[_sQ], _y8)) {
                first = ++_sQ;
                _n4 -= _rQ + 1;
            } else _n4 = _rQ;
        }
        return first;
    };
    Array.prototype._tQ = function(first, last, _y8, _mQ) {
        if (typeof(_mQ) === 'undefined') _mQ = function(_Z4,
            _g3) {
            return _Z4 < _g3;
        };
        var _n4 = last - first;
        while (_n4 > 0) {
            var _rQ = Math.floor(_n4 / 2);
            var _sQ = first + _rQ;
            if (!_mQ(_y8, this[_sQ])) {
                first = ++_sQ;
                _n4 -= _rQ + 1;
            } else _n4 = _rQ;
        }
        return first;
    };
    Array.prototype.rotate = function(first, _uQ, last) {
        var _kc = _uQ;
        while (first != _kc) {
            var _vQ = this[first];
            this[first] = this[_kc];
            this[_kc] = _vQ;
            ++first;
            ++_kc;
            if (_kc === last) _kc = _uQ;
            else if (first === _uQ) _uQ = _kc;
        }
    };
    var _wQ = (function() {
        var _xQ = function() {
            return +new Date();
        };
        if (typeof(performance) === 'undefined') window['performance'] = {
            now: _xQ
        };
        if (!window['performance'].now) window['performance'].now = _xQ;

        function _yQ(name, parent) {
            this.name = name;
            this.parent = parent;
            this._zQ = {};
            this._AQ = 0;
            this._BQ = 0;
            this._CQ = 0;
            this._DQ = false;
            this._EQ = 0;
        }
        _yQ.prototype = {
            start: function() {
                this._AQ = performance.now();
                this._DQ = true;
            },
            stop: function(_FQ) {
                if (!this._DQ) return;
                this._DQ = false;
                this._BQ += performance.now() - this._AQ;
                if (_FQ) this.start();
                for (var x in this._zQ) this._zQ[x].stop();
            },
            _FQ: function(_GQ) {
                if (!_GQ) {
                    this._DQ = true;
                    this._CQ += this._BQ;
                    this.start();
                }
                this._BQ = 0;
                for (var x in this._zQ) this._zQ[x]._FQ(true);
            }
        };
        var _HQ = [];
        var _31 = new _yQ("root");

        function _IQ(name, parent) {
            if (!_HQ) throw new _ja("late profile creation not allowed");
            var _Cb = new _yQ(name, parent || 'root');
            _HQ.push(_Cb);
            return _Cb;
        }

        function _JQ(_KQ) {
            _KQ._EQ--;
            delete _KQ._zQ[_KQ.name];
        }

        function _LQ(_2d, _KQ) {
            if (_2d.name === _KQ.parent) return _2d;
            for (var x in _2d._zQ) {
                var _X2;
                if (_X2 = _LQ(_2d._zQ[x], _KQ)) return _X2;
            }
            return null;
        }

        function init() {
            while (_HQ.length) {
                var _6d = _HQ.pop();
                if (!(_6d.parentNode = _LQ(_31, _6d))) _HQ._MQ(_6d);
                else {
                    _6d.parentNode._zQ[_6d.name] = _6d;
                    _6d.parentNode._EQ++;
                }
            }
            _HQ = null;
        }

        function _NQ() {
            _31._FQ(true);
        }
        var _db = {
            _IQ: _IQ,
            _JQ: _JQ,
            init: init,
            _FQ: _NQ,
            _OQ: _31
        };
        return _db;
    }());

    function _PQ(_QQ) {
        if (!_QQ) {
            window.famobi.log("Assertion failed! Pls debug.");
            //debugger;
        }
    }
    var _RQ = Number.MAX_VALUE;
    var _SQ = 2.2204460492503131e-016;
    var _TQ = Math.PI;
    var _UQ = 2;
    var _VQ = 8;
    var _WQ = 0.1;
    var _XQ = 2.0;
    var _YQ = 0.005;
    var _ZQ = (2.0 / 180.0 * _TQ);
    var __Q = (2.0 * _YQ);
    var _0R = 8;
    var _1R = 32;
    var _2R = 1.0;
    var _3R = 0.2;
    var _4R = (8.0 / 180.0 * _TQ);
    var _5R = 2.0;
    var _6R = (_5R * _5R);
    var _7R = (0.5 * _TQ);
    var _8R = (_7R * _7R);
    var _9R = 0.2;
    var _aR = 0.75;
    var _bR = 0.5;
    var _cR = 0.01;
    var _dR = (2.0 / 180.0 * _TQ);
    var _eR = (-1);
    var _fR = 0.75;
    var _gR = 1.0;
    var _hR = 5.0;
    var _iR = 2;
    var _jR = (_iR * _iR);
    var _kR = 256;

    function _lR(_mR, _nR, _oR) {
        this._pR = _mR;
        this._qR = _nR;
        this._rR = _oR;
    }
    _lR.prototype = {
        toString: function() {
            return this._pR + '.' + this._qR + '.' + this._rR;
        }
    };
    var _sR = new _lR(2, 3, 1);

    function _tR(x) {
        return isFinite(x) && !isNaN(x);
    }
    var _uR = Math.sqrt;
    var _vR = Math.atan2;
    var _wR = Math.sin;
    var _xR = Math.cos;
    var _yR = Math.floor;
    var _zR = Math.ceil;
    var _AR = _uR;
    var _BR = _vR;

    function _CR(x) {
        return 1.0 / _uR(x);
    }

    function _DR(x, y) {
        if (typeof(x) !== 'undefined') {
            this.x = x;
            this.y = y;
        } else this.x = this.y = 0;
    }
    _DR.prototype = {
        _T: function() {
            return new _DR(this.x, this.y);
        },
        _ER: function() {
            this.x = 0.0;
            this.y = 0.0;
            return this;
        },
        _7b: function(_FR, _GR) {
            this.x = _FR;
            this.y = _GR;
            return this;
        },
        _Zy: function(_b3) {
            this.x = _b3.x;
            this.y = _b3.y;
            return this;
        },
        _HR: function() {
            var _X1 = new _DR();
            _X1._7b(-this.x, -this.y);
            return _X1;
        },
        _IR: function(i) {
            switch (i) {
                case 0:
                    return this.x;
                case 1:
                    return this.y;
            }
        },
        _JR: function(i, _X1) {
            switch (i) {
                case 0:
                    return this.x = _X1;
                case 1:
                    return this.y = _X1;
            }
        },
        _1b: function(_X1) {
            this.x += _X1.x;
            this.y += _X1.y;
            return this;
        },
        _KR: function(_X1) {
            this.x -= _X1.x;
            this.y -= _X1.y;
            return this;
        },
        _im: function(_Z4) {
            this.x *= _Z4;
            this.y *= _Z4;
            return this;
        },
        _LR: function() {
            return _AR(this.x * this.x + this.y * this.y);
        },
        _MR: function() {
            return this.x * this.x + this.y * this.y;
        },
        _NR: function() {
            var length = this._LR();
            if (length < _SQ) {
                return 0.0;
            }
            var _OR = 1.0 / length;
            this.x *= _OR;
            this.y *= _OR;
            return length;
        },
        _PR: function() {
            return _tR(this.x) && _tR(this.y);
        },
        _QR: function() {
            return new _DR(-this.y, this.x);
        },
        _RR: function(_SR) {
            var _Sh = _SR || [];
            _Sh[0] = this.x;
            _Sh[1] = this.y;
            return _Sh;
        },
        _TR: function(data) {
            this.x = data[0];
            this.y = data[1];
        }
    };
    _DR._1b = function(_Z4, _g3) {
        return new _DR(_Z4.x + _g3.x, _Z4.y + _g3.y);
    };
    _DR._KR = function(_Z4, _g3) {
        return new _DR(_Z4.x - _g3.x, _Z4.y - _g3.y);
    };
    _DR._UR = function(_Z4, _g3) {
        return _Z4.x == _g3.x && _Z4.y == _g3.y;
    };
    _DR._im = function(_Cb, _Z4) {
        return new _DR(_Cb * _Z4.x, _Cb * _Z4.y);
    };
    _DR._HR = function(_Z4) {
        return new _DR(-_Z4.x, -_Z4.y);
    };

    function _VR(x, y, _96) {
        if (typeof(x) !== 'undefined') {
            this.x = x;
            this.y = y;
            this._96 = _96;
        }
    }
    _VR.prototype = {
        _T: function() {
            return new _VR(this.x,
                this.y, this._96);
        },
        _ER: function() {
            this.x = 0.0;
            this.y = 0.0;
            this._96 = 0.0;
        },
        _7b: function(_FR, _GR, _WR) {
            this.x = _FR;
            this.y = _GR;
            this._96 = _WR;
        },
        _HR: function() {
            var _X1 = new _VR();
            _X1._7b(-this.x, -this.y, -this._96);
            return _X1;
        },
        _1b: function(_X1) {
            this.x += _X1.x;
            this.y += _X1.y;
            this._96 += _X1._96;
        },
        _KR: function(_X1) {
            this.x -= _X1.x;
            this.y -= _X1.y;
            this._96 -= _X1._96;
        },
        _im: function(_Cb) {
            this.x *= _Cb;
            this.y *= _Cb;
            this._96 *= _Cb;
        },
        x: 0,
        y: 0,
        _96: 0
    };
    _VR._im = function(_Cb, _Z4) {
        return new _VR(_Cb * _Z4.x, _Cb * _Z4.y, _Cb * _Z4._96);
    };
    _VR._1b = function(_Z4,
        _g3) {
        return new _VR(_Z4.x + _g3.x, _Z4.y + _g3.y, _Z4._96 + _g3._96);
    };
    _VR._KR = function(_Z4, _g3) {
        return new _VR(_Z4.x - _g3.x, _Z4.y - _g3.y, _Z4._96 - _g3._96);
    };

    function _XR(_Bc, _Cc) {
        this._xq = _Bc ? _Bc._T() : new _DR();
        this._YR = _Cc ? _Cc._T() : new _DR();
    }
    _XR.prototype = {
        _7b: function(_Bc, _Cc) {
            this._xq._Zy(_Bc);
            this._YR._Zy(_Cc);
        },
        _Zy: function(_Dm) {
            this._xq._Zy(_Dm._xq);
            this._YR._Zy(_Dm._YR);
        },
        _ZR: function() {
            this._xq.x = 1.0;
            this._YR.x = 0.0;
            this._xq.y = 0.0;
            this._YR.y = 1.0;
        },
        _ER: function() {
            this._xq.x = 0.0;
            this._YR.x = 0.0;
            this._xq.y = 0.0;
            this._YR.y = 0.0;
        },
        __R: function() {
            var _Z4 = this._xq.x,
                _g3 = this._YR.x,
                c = this._xq.y,
                _Cd = this._YR.y;
            var _0S = new _XR();
            var _1S = _Z4 * _Cd - _g3 * c;
            if (_1S != 0.0) {
                _1S = 1.0 / _1S;
            }
            _0S._xq.x = _1S * _Cd;
            _0S._YR.x = -_1S * _g3;
            _0S._xq.y = -_1S * c;
            _0S._YR.y = _1S * _Z4;
            return _0S;
        },
        _2S: function(_g3) {
            var _3S = this._xq.x,
                _4S = this._YR.x,
                _5S = this._xq.y,
                _6S = this._YR.y;
            var _1S = _3S * _6S - _4S * _5S;
            if (_1S != 0.0) {
                _1S = 1.0 / _1S;
            }
            var x = new _DR();
            x.x = _1S * (_6S * _g3.x - _4S * _g3.y);
            x.y = _1S * (_3S * _g3.y - _5S * _g3.x);
            return x;
        }
    };
    _XR._1b = function(_QQ, _0S) {
        return new _XR(_DR._1b(_QQ._xq,
            _0S._xq), _DR._1b(_QQ._YR, _0S._YR));
    };

    function _7S(_Bc, _Cc, _Dc) {
        this._xq = _Bc ? _Bc._T() : new _VR();
        this._YR = _Cc ? _Cc._T() : new _VR();
        this._8S = _Dc ? _Dc._T() : new _VR();
    }
    _7S.prototype = {
        _ER: function() {
            this._xq._ER();
            this._YR._ER();
            this._8S._ER();
        },
        _9S: function(_g3) {
            var _1S = _aS(this._xq, _bS(this._YR, this._8S));
            if (_1S != 0.0) {
                _1S = 1.0 / _1S;
            }
            var x = new _VR();
            x.x = _1S * _aS(_g3, _bS(this._YR, this._8S));
            x.y = _1S * _aS(this._xq, _bS(_g3, this._8S));
            x._96 = _1S * _aS(this._xq, _bS(this._YR, _g3));
            return x;
        },
        _cS: function(_g3) {
            var _3S = this._xq.x,
                _4S = this._YR.x,
                _5S = this._xq.y,
                _6S = this._YR.y;
            var _1S = _3S * _6S - _4S * _5S;
            if (_1S != 0.0) {
                _1S = 1.0 / _1S;
            }
            var x = new _DR();
            x.x = _1S * (_6S * _g3.x - _4S * _g3.y);
            x.y = _1S * (_3S * _g3.y - _5S * _g3.x);
            return x;
        },
        _dS: function(_eS) {
            var _Z4 = this._xq.x,
                _g3 = this._YR.x,
                c = this._xq.y,
                _Cd = this._YR.y;
            var _1S = _Z4 * _Cd - _g3 * c;
            if (_1S != 0.0) {
                _1S = 1.0 / _1S;
            }
            _eS._xq.x = _1S * _Cd;
            _eS._YR.x = -_1S * _g3;
            _eS._xq._96 = 0.0;
            _eS._xq.y = -_1S * c;
            _eS._YR.y = _1S * _Z4;
            _eS._YR._96 = 0.0;
            _eS._8S.x = 0.0;
            _eS._8S.y = 0.0;
            _eS._8S._96 = 0.0;
        },
        _fS: function(_eS) {
            var _1S = _aS(this._xq, _bS(this._YR,
                this._8S));
            if (_1S != 0.0) {
                _1S = 1.0 / _1S;
            }
            var _3S = this._xq.x,
                _4S = this._YR.x,
                _gS = this._8S.x;
            var _6S = this._YR.y,
                _hS = this._8S.y;
            var _iS = this._8S._96;
            _eS._xq.x = _1S * (_6S * _iS - _hS * _hS);
            _eS._xq.y = _1S * (_gS * _hS - _4S * _iS);
            _eS._xq._96 = _1S * (_4S * _hS - _gS * _6S);
            _eS._YR.x = _eS._xq.y;
            _eS._YR.y = _1S * (_3S * _iS - _gS * _gS);
            _eS._YR._96 = _1S * (_gS * _4S - _3S * _hS);
            _eS._8S.x = _eS._xq._96;
            _eS._8S.y = _eS._YR._96;
            _eS._8S._96 = _1S * (_3S * _6S - _4S * _4S);
        }
    };

    function _jS(_E4, c) {
        if (typeof(c) !== 'undefined') {
            this._Cb = _E4;
            this.c = c;
        } else if (typeof(_E4) !== 'undefined') this._7b(_E4);
    }
    _jS.prototype = {
        _T: function() {
            return new _jS(this._Cb, this.c);
        },
        _Zy: function(_b3) {
            this._Cb = _b3._Cb;
            this.c = _b3.c;
        },
        _7b: function(x) {
            this._Cb = _wR(x);
            this.c = _xR(x);
        },
        _ZR: function() {
            this._Cb = 0.0;
            this.c = 1.0;
        },
        _kS: function() {
            return _BR(this._Cb, this.c);
        },
        _lS: function() {
            return new _DR(this.c, this._Cb);
        },
        _mS: function() {
            return new _DR(-this._Cb, this.c);
        },
        _Cb: 0,
        c: 1
    };

    function _nS(position, rotation) {
        this._6d = new _DR();
        this._vt = new _jS();
        if (position) {
            this._6d._Zy(position);
            this._vt._Zy(rotation);
        }
    }
    _nS.prototype = {
        _T: function() {
            var _oS = new _nS(this._6d, this._vt);
            return _oS;
        },
        _Zy: function(_oS) {
            this._6d._Zy(_oS._6d);
            this._vt._Zy(_oS._vt);
        },
        _ZR: function() {
            this._6d._ER();
            this._vt._ZR();
        },
        _7b: function(position, _E4) {
            this._6d._Zy(position);
            this._vt._7b(_E4);
        }
    };

    function _pS() {
        this._qS = new _DR();
        this._rS = new _DR();
        this.c = new _DR();
    }
    _pS.prototype = {
        _Zy: function(_sS) {
            this._qS._Zy(_sS._qS);
            this._rS._Zy(_sS._rS);
            this.c._Zy(_sS.c);
            this._Z4 = _sS._Z4;
            this._tS = _sS._tS;
            this._uS = _sS._uS;
        },
        _T: function() {
            var _sS = new _pS();
            _sS._qS._Zy(this._qS);
            _sS._rS._Zy(this._rS);
            _sS.c._Zy(this.c);
            _sS._Z4 = this._Z4;
            _sS._tS = this._tS;
            _sS._uS = this._uS;
            return _sS;
        },
        _vS: function(_oS, _wS) {
            _oS._6d.x = ((1.0 - _wS) * this._rS.x) + (_wS * this.c.x);
            _oS._6d.y = ((1.0 - _wS) * this._rS.y) + (_wS * this.c.y);
            var _E4 = (1.0 - _wS) * this._tS + _wS * this._Z4;
            _oS._vt._7b(_E4);
            _oS._6d.x -= _oS._vt.c * this._qS.x - _oS._vt._Cb * this._qS.y;
            _oS._6d.y -= _oS._vt._Cb * this._qS.x + _oS._vt.c * this._qS.y;
        },
        _xS: function(alpha) {
            _PQ(this._uS < 1.0);
            var _wS = (alpha - this._uS) / (1.0 - this._uS);
            this._rS._1b(_DR._im(_wS, _DR._KR(this.c, this._rS)));
            this._tS += _wS * (this._Z4 - this._tS);
            this._uS = alpha;
        },
        _NR: function() {
            var _yS = 2.0 * _TQ;
            var _Cd = _yS * _yR(this._tS / _yS);
            this._tS -= _Cd;
            this._Z4 -= _Cd;
        },
        _tS: 0,
        _Z4: 0,
        _uS: 0
    };

    function _zS(_Z4, _g3) {
        return _Z4.x * _g3.x + _Z4.y * _g3.y;
    }

    function _AS(_Z4, _g3) {
        return _Z4.x * _g3.y - _Z4.y * _g3.x;
    }

    function _BS(_Z4, _Cb) {
        return new _DR(_Cb * _Z4.y, -_Cb * _Z4.x);
    }

    function _CS(_Cb, _Z4) {
        return new _DR(-_Cb * _Z4.y, _Cb * _Z4.x);
    }

    function _DS(_QQ, _X1) {
        return new _DR(_QQ._xq.x * _X1.x + _QQ._YR.x * _X1.y, _QQ._xq.y * _X1.x + _QQ._YR.y * _X1.y);
    }

    function _ES(_QQ, _X1) {
        return new _DR(_zS(_X1, _QQ._xq), _zS(_X1,
            _QQ._YR));
    }

    function _FS(_Z4, _g3) {
        var c = _DR._KR(_Z4, _g3);
        return c._LR();
    }

    function _GS(_Z4, _g3) {
        var c = _DR._KR(_Z4, _g3);
        return _zS(c, c);
    }

    function _aS(_Z4, _g3) {
        return _Z4.x * _g3.x + _Z4.y * _g3.y + _Z4._96 * _g3._96;
    }

    function _bS(_Z4, _g3) {
        return new _VR(_Z4.y * _g3._96 - _Z4._96 * _g3.y, _Z4._96 * _g3.x - _Z4.x * _g3._96, _Z4.x * _g3.y - _Z4.y * _g3.x);
    }

    function _HS(_QQ, _0S) {
        return new _XR(_DS(_QQ, _0S._xq), _DS(_QQ, _0S._YR));
    }

    function _IS(_QQ, _0S) {
        var _Bc = new _DR(_zS(_QQ._xq, _0S._xq), _zS(_QQ._YR, _0S._xq));
        var _Cc = new _DR(_zS(_QQ._xq, _0S._YR), _zS(_QQ._YR,
            _0S._YR));
        return new _XR(_Bc, _Cc);
    }

    function _JS(_QQ, _X1) {
        return _VR._1b(_VR._1b(_VR._im(_X1.x, _QQ._xq), _VR._im(_X1.y, _QQ._YR)), _VR._im(_X1._96, _QQ._8S));
    }

    function _KS(_QQ, _X1) {
        return new _DR(_QQ._xq.x * _X1.x + _QQ._YR.x * _X1.y, _QQ._xq.y * _X1.x + _QQ._YR.y * _X1.y);
    }

    function _LS(_vt, _d3) {
        var _MS = new _jS();
        _MS._Cb = _vt._Cb * _d3.c + _vt.c * _d3._Cb;
        _MS.c = _vt.c * _d3.c - _vt._Cb * _d3._Cb;
        return _MS;
    }

    function _NS(_vt, _d3) {
        var _MS = new _jS();
        _MS._Cb = _vt.c * _d3._Cb - _vt._Cb * _d3.c;
        _MS.c = _vt.c * _d3.c + _vt._Cb * _d3._Cb;
        return _MS;
    }

    function _OS(_vt,
        _X1) {
        return new _DR(_vt.c * _X1.x - _vt._Cb * _X1.y, _vt._Cb * _X1.x + _vt.c * _X1.y);
    }

    function _PS(_vt, _X1) {
        return new _DR(_vt.c * _X1.x + _vt._Cb * _X1.y, -_vt._Cb * _X1.x + _vt.c * _X1.y);
    }

    function _QS(_RS, _X1) {
        return new _DR((_RS._vt.c * _X1.x - _RS._vt._Cb * _X1.y) + _RS._6d.x, (_RS._vt._Cb * _X1.x + _RS._vt.c * _X1.y) + _RS._6d.y);
    }

    function _SS(_RS, _X1) {
        var _ui = _X1.x - _RS._6d.x;
        var _vi = _X1.y - _RS._6d.y;
        var x = (_RS._vt.c * _ui + _RS._vt._Cb * _vi);
        var y = (-_RS._vt._Cb * _ui + _RS._vt.c * _vi);
        return new _DR(x, y);
    }

    function _TS(_QQ, _0S) {
        var _US = new _nS();
        _US._vt = _LS(_QQ._vt,
            _0S._vt);
        _US._6d = _DR._1b(_OS(_QQ._vt, _0S._6d), _QQ._6d);
        return _US;
    }

    function _VS(_QQ, _0S) {
        var _US = new _nS();
        _US._vt = _NS(_QQ._vt, _0S._vt);
        var _WS = _0S._6d.x - _QQ._6d.x;
        var _XS = _0S._6d.y - _QQ._6d.y;
        _US._6d.x = _QQ._vt.c * _WS + _QQ._vt._Cb * _XS;
        _US._6d.y = -_QQ._vt._Cb * _WS + _QQ._vt.c * _XS;
        return _US;
    }
    var _YS = Math.abs;

    function _ZS(_Z4) {
        return new _DR(_YS(_Z4.x), _YS(_Z4.y));
    }

    function __S(_QQ) {
        return new _XR(_ZS(_QQ._xq), _ZS(_QQ._YR));
    }
    var _0T = Math.min;

    function _1T(_Z4, _g3) {
        return new _DR(_0T(_Z4.x, _g3.x), _0T(_Z4.y, _g3.y));
    }
    var _2T = Math.max;

    function _3T(_Z4, _g3) {
        return new _DR(_2T(_Z4.x, _g3.x), _2T(_Z4.y, _g3.y));
    }

    function _4T(_Z4, _pc, _oc) {
        return _2T(_pc, _0T(_Z4, _oc));
    }

    function _5T(_Z4, _pc, _oc) {
        return _3T(_pc, _1T(_Z4, _oc));
    }

    function _6T(x) {
        x |= (x >> 1);
        x |= (x >> 2);
        x |= (x >> 4);
        x |= (x >> 8);
        x |= (x >> 16);
        return x + 1;
    }

    function _7T(x) {
        var _9e = x > 0 && (x & (x - 1)) == 0;
        return _9e;
    }
    var _8T = 32767;

    function _9T(_aT, _bT) {
        var _d3 = Math.random();
        if (typeof(_aT) !== 'undefined') _d3 = (_bT - _aT) * _d3 + _aT;
        else _d3 = 2.0 * _d3 - 1.0;
        return _d3;
    }

    function _cT(_d3, _Y4, _g3) {
        this._d3 = _d3 || 0;
        this._Y4 = _Y4 || 0;
        this._g3 = _g3 || 0;
    }
    _cT.prototype = {
        _7b: function(_d3, _Y4, _g3) {
            this._d3 = _d3;
            this._Y4 = _Y4;
            this._g3 = _g3;
        }
    };

    function _dT() {}
    _dT.prototype = {
        _eT: function(_vP) {
            this._fT = _vP;
        },
        _gT: function() {
            return this._fT;
        },
        _hT: function(_vP) {
            this._fT |= _vP;
        },
        _iT: function(_vP) {
            this._fT &= ~_vP;
        },
        _jT: function(_vP) {
            this._fT ^= _vP;
        },
        _kT: function(_35, _lT, _R4) {},
        _mT: function(_35, _lT, _R4) {},
        _nT: function(_oT, _pF, _R4) {},
        _pT: function(_oT, _pF, _qT, _R4) {},
        _rT: function(_sT, _tT, _R4) {},
        _uT: function(_oS) {},
        _MF: function(_vT, _pF, _wT, _n4) {},
        _fT: 0
    };
    _dT._xT = 1;
    _dT._yT = 2;
    _dT._zT = 4;
    _dT._AT = 8;
    _dT._BT = 16;
    _dT._CT = 32;
    _dT._DT = 64;
    _dT._ET = 128;
    _dT._FT = 256;
    _dT._GT = 512;
    _dT._HT = 1024;
    if (typeof(performance) === 'undefined') {
        window.performance = {
            now: function() {
                return +new Date();
            }
        };
    }

    function _IT() {
        this._JT();
    }
    _IT.prototype = {
        _JT: function() {
            this._KT = performance.now();
        },
        _LT: function() {
            return performance.now() - this._KT;
        }
    };

    function _MT() {
        this._NT = 0;
        this._oT = new _DR();
        this._OT = 0;
    }

    function _PT() {
        this._QT = 0;
        this._RT = 0;
    }
    _PT.prototype = {
        _T: function() {},
        _ST: function() {
            return this._QT;
        },
        _TT: function() {},
        _UT: function(_oS, _6d) {},
        _VT: function(_rt, _pt, transform, _WT) {},
        _XT: function(_YT, _oS, _WT) {},
        _ZT: function(__T, __F) {},
        _0U: function(_oS, _6d, _1U, _2U, _WT) {},
        _RR: function(_SR) {
            var _Sh = _SR || {};
            _Sh['m_type'] = this._QT;
            _Sh['m_radius'] = this._RT;
            return _Sh;
        },
        _TR: function(data) {
            this._RT = data['m_radius'];
        }
    };
    _PT._3U = 0;
    _PT._4U = 1;
    _PT._5U = 2;
    _PT._6U = 3;
    _PT._7U = 4;

    function _8U() {
        this.parent.call(this);
        this._QT = _PT._3U;
        this._RT = 0;
        this._9U = new _DR();
        Object.seal(this);
    }
    _8U.prototype = {
        _T: function() {
            var _jf = new _8U();
            _jf._RT = this._RT;
            _jf._9U = this._9U._T();
            return _jf;
        },
        _TT: function() {
            return 1;
        },
        _UT: function(transform, _6d) {
            var _oT = _DR._1b(transform._6d, _OS(transform._vt, this._9U));
            var _Cd = _DR._KR(_6d, _oT);
            return _zS(_Cd, _Cd) <= this._RT * this._RT;
        },
        _VT: function(_rt, _pt, transform, _WT) {
            var position = _DR._1b(transform._6d, _OS(transform._vt, this._9U));
            var _Cb = _DR._KR(_pt._sT, position);
            var _g3 = _zS(_Cb, _Cb) - this._RT * this._RT;
            var _d3 = _DR._KR(_pt._tT, _pt._sT);
            var c = _zS(_Cb, _d3);
            var _Qu = _zS(_d3, _d3);
            var _aU = c * c - _Qu * _g3;
            if (_aU < 0.0 || _Qu < _SQ) {
                return false;
            }
            var _Z4 = -(c + _AR(_aU));
            if (0.0 <= _Z4 && _Z4 <= _pt._bU * _Qu) {
                _Z4 /= _Qu;
                _rt._cU = _Z4;
                _rt._2U = _DR._1b(_Cb, _DR._im(_Z4, _d3));
                _rt._2U._NR();
                return true;
            }
            return false;
        },
        _XT: function(_YT, transform, _WT) {
            var _ui = transform._6d.x + (transform._vt.c * this._9U.x - transform._vt._Cb * this._9U.y);
            var _vi = transform._6d.y + (transform._vt._Cb * this._9U.x + transform._vt.c * this._9U.y);
            _YT._dU.x = _ui - this._RT;
            _YT._dU.y = _vi - this._RT;
            _YT._eU.x = _ui + this._RT;
            _YT._eU.y = _vi + this._RT;
        },
        _ZT: function(__T, __F) {
            __T._NT = __F * _TQ * this._RT * this._RT;
            __T._oT = this._9U;
            __T._OT = __T._NT * (0.5 * this._RT * this._RT + _zS(this._9U, this._9U));
        },
        _fU: function(_Cd) {
            return 0;
        },
        _gU: function(_Cd) {
            return this._9U;
        },
        _hU: function() {
            return 1;
        },
        _iU: function(index) {
            _PQ(index == 0);
            return this._9U;
        },
        _0U: function(transform, _6d, _1U, _2U, _WT) {
            var _oT = _DR._1b(transform._6d, _OS(transform._vt, this._9U));
            var _Cd = _DR._KR(_6d, _oT);
            var _jU = _Cd._LR();
            _1U[0] = _jU - this._RT;
            _2U._Zy(_DR._im(1 / _jU, _Cd));
        },
        _RR: function(_SR) {
            var _Sh = _SR || {};
            this.parent.prototype._RR.call(this, _Sh);
            _Sh['m_p'] = this._9U._RR();
            return _Sh;
        },
        _TR: function(data) {
            this.parent.prototype._TR.call(this, data);
            this._9U._TR(data['m_p']);
        }
    };
    _8U._jQ(_PT);

    function _kU() {
        this.parent.call(this);
        this._QT = _PT._4U;
        this._RT = __Q;
        this._lU = new _DR();
        this._mU = new _DR();
        this._nU = new _DR();
        this._oU = new _DR();
        this._pU = false;
        this._qU = false;
        Object.seal(this);
    }
    _kU.prototype = {
        _7b: function(_U5, _Z1) {
            this._mU._Zy(_U5);
            this._nU._Zy(_Z1);
            this._pU = false;
            this._qU = false;
        },
        _T: function() {
            var _jf = new _kU();
            _jf._lU = this._lU._T();
            _jf._mU = this._mU._T();
            _jf._nU = this._nU._T();
            _jf._oU = this._oU._T();
            _jf._pU = this._pU;
            _jf._qU = this._qU;
            return _jf;
        },
        _TT: function() {
            return 1;
        },
        _UT: function(transform, _6d) {
            return false;
        },
        _VT: function(_rt, _pt, _oS, _WT) {
            var _sT = _PS(_oS._vt, _DR._KR(_pt._sT, _oS._6d));
            var _tT = _PS(_oS._vt, _DR._KR(_pt._tT, _oS._6d));
            var _Cd = _DR._KR(_tT, _sT);
            var _U5 = this._mU;
            var _Z1 = this._nU;
            var e = _DR._KR(_Z1, _U5);
            var _2U = new _DR(e.y, -e.x);
            _2U._NR();
            var _rU = _zS(_2U, _DR._KR(_U5, _sT));
            var _sU = _zS(_2U, _Cd);
            if (_sU == 0.0) {
                return false;
            }
            var _f3 = _rU / _sU;
            if (_f3 < 0.0 || _pt._bU < _f3) {
                return false;
            }
            var _vt = _DR._1b(_sT,
                _DR._im(_f3, _Cd));
            var _d3 = _DR._KR(_Z1, _U5);
            var _Qu = _zS(_d3, _d3);
            if (_Qu == 0.0) {
                return false;
            }
            var _Cb = _zS(_DR._KR(_vt, _U5), _d3) / _Qu;
            if (_Cb < 0.0 || 1.0 < _Cb) {
                return false;
            }
            _rt._cU = _f3;
            if (_rU > 0.0) {
                _rt._2U = _OS(_oS._vt, _2U)._HR();
            } else {
                _rt._2U = _OS(_oS._vt, _2U);
            }
            return true;
        },
        _XT: function(_YT, _oS, _WT) {
            var _zi = (_oS._vt.c * this._mU.x - _oS._vt._Cb * this._mU.y) + _oS._6d.x;
            var _Ci = (_oS._vt._Cb * this._mU.x + _oS._vt.c * this._mU.y) + _oS._6d.y;
            var _Ai = (_oS._vt.c * this._nU.x - _oS._vt._Cb * this._nU.y) + _oS._6d.x;
            var _Di = (_oS._vt._Cb * this._nU.x + _oS._vt.c * this._nU.y) + _oS._6d.y;
            var _tU = _0T(_zi, _Ai);
            var _uU = _0T(_Ci, _Di);
            var _vU = _2T(_zi, _Ai);
            var _wU = _2T(_Ci, _Di);
            _YT._dU.x = _tU - this._RT;
            _YT._dU.y = _uU - this._RT;
            _YT._eU.x = _vU + this._RT;
            _YT._eU.y = _wU + this._RT;
        },
        _ZT: function(__T, __F) {
            __T._NT = 0.0;
            __T._oT = _DR._im(0.5, _DR._1b(this._mU, this._nU));
            __T._OT = 0.0;
        },
        _0U: function(_oS, _6d, _1U, _2U, _WT) {
            var _U5 = _QS(_oS, this._mU);
            var _Z1 = _QS(_oS, this._nU);
            var _Cd = _DR._KR(_6d, _U5);
            var _Cb = _DR._KR(_Z1, _U5);
            var _xU = _zS(_Cd, _Cb);
            if (_xU > 0) {
                var _Km = _zS(_Cb, _Cb);
                if (_xU > _Km) {
                    _Cd._Zy(_DR._KR(_6d, _Z1));
                } else {
                    _Cd._KR(_DR._im(_xU / _Km,
                        _Cb));
                }
            }
            var _jU = _Cd._LR();
            _1U[0] = _jU;
            _2U._Zy(_jU > 0 ? _DR._im(1 / _jU, _Cd) : new _DR(0, 0));
        },
        _RR: function(_SR) {
            var _Sh = _SR || {};
            this.parent.prototype._RR.call(this, _Sh);
            _Sh['m_vertex1'] = this._mU._RR();
            _Sh['m_vertex2'] = this._nU._RR();
            _Sh['m_hasVertex0'] = this._pU;
            if (this._pU) _Sh['m_vertex0'] = this._lU._RR();
            _Sh['m_hasVertex3'] = this._qU;
            if (this._qU) _Sh['m_vertex3'] = this._oU._RR();
            return _Sh;
        },
        _TR: function(data) {
            this.parent.prototype._TR.call(this, data);
            this._mU._TR(data['m_vertex1']);
            this._nU._TR(data['m_vertex2']);
            this._pU = data['m_hasVertex0'];
            if (this._pU) this._lU._TR(data['m_vertex0']);
            this._qU = data['m_hasVertex3'];
            if (this._qU) this._oU._TR(data['m_vertex3']);
        }
    };
    _kU._jQ(_PT);

    function _yU() {
        this.parent.call(this);
        this._QT = _PT._6U;
        this._RT = __Q;
        this._zU = null;
        this._AU = 0;
        this._BU = new _DR();
        this._CU = new _DR();
        this._DU = false;
        this._EU = false;
        Object.seal(this);
    }
    _yU._FU = new _kU();
    _yU.prototype = {
        _GU: function(_35, _n4) {
            _PQ(this._zU == null && this._AU == 0);
            _PQ(_n4 >= 3);
            for (var i = 1; i < _n4; ++i) {
                var _U5 = _35[i - 1];
                var _Z1 = _35[i];
                _PQ(_GS(_U5,
                    _Z1) > _YQ * _YQ);
            }
            this._AU = _n4 + 1;
            this._zU = new Array(this._AU);
            for (var i = 0; i < _n4; ++i) this._zU[i] = _35[i]._T();
            this._zU[_n4] = this._zU[0]._T();
            this._BU._Zy(this._zU[this._AU - 2]);
            this._CU._Zy(this._zU[1]);
            this._DU = true;
            this._EU = true;
        },
        _HU: function(_35, _n4) {
            _PQ(this._zU == null && this._AU == 0);
            _PQ(_n4 >= 2);
            for (var i = 1; i < _n4; ++i) {
                var _U5 = _35[i - 1];
                var _Z1 = _35[i];
                _PQ(_GS(_U5, _Z1) > _YQ * _YQ);
            }
            this._AU = _n4;
            this._zU = new Array(_n4);
            for (var i = 0; i < _n4; ++i) this._zU[i] = _35[i]._T();
            this._DU = false;
            this._EU = false;
            this._BU._ER();
            this._CU._ER();
        },
        _IU: function(_JU) {
            this._BU._Zy(_JU);
            this._DU = true;
        },
        _KU: function(_LU) {
            this._CU._Zy(_LU);
            this._EU = true;
        },
        _T: function() {
            var _jf = new _yU();
            _jf._AU = this._AU;
            _jf._zU = new Array(this._AU);
            for (var i = 0; i < this._AU; ++i) _jf._zU[i] = this._zU[i]._T();
            _jf._BU = this._BU._T();
            _jf._CU = this._CU._T();
            _jf._DU = this._DU;
            _jf._EU = this._EU;
            return _jf;
        },
        _TT: function() {
            return this._AU - 1;
        },
        _MU: function(_NU, index) {
            _PQ(0 <= index && index < this._AU - 1);
            _NU._QT = _PT._4U;
            _NU._RT = this._RT;
            _NU._mU = this._zU[index + 0];
            _NU._nU = this._zU[index + 1];
            if (index > 0) {
                _NU._lU = this._zU[index - 1];
                _NU._pU = true;
            } else {
                _NU._lU = this._BU;
                _NU._pU = this._DU;
            }
            if (index < this._AU - 2) {
                _NU._oU = this._zU[index + 2];
                _NU._qU = true;
            } else {
                _NU._oU = this._CU;
                _NU._qU = this._EU;
            }
        },
        _UT: function(transform, _6d) {
            return false;
        },
        _VT: function(_rt, _pt, _oS, _WT) {
            _PQ(_WT < this._AU);
            var _OU = _WT;
            var _PU = _WT + 1;
            if (_PU == this._AU) {
                _PU = 0;
            }
            _yU._FU._mU = this._zU[_OU]._T();
            _yU._FU._nU = this._zU[_PU]._T();
            return _yU._FU._VT(_rt, _pt, _oS, 0);
        },
        _XT: function(_YT, _oS, _WT) {
            _PQ(_WT < this._AU);
            var _OU = _WT;
            var _PU = _WT + 1;
            if (_PU == this._AU) {
                _PU = 0;
            }
            var _zi = (_oS._vt.c * this._zU[_OU].x - _oS._vt._Cb * this._zU[_OU].y) + _oS._6d.x;
            var _Ci = (_oS._vt._Cb * this._zU[_OU].x + _oS._vt.c * this._zU[_OU].y) + _oS._6d.y;
            var _Ai = (_oS._vt.c * this._zU[_PU].x - _oS._vt._Cb * this._zU[_PU].y) + _oS._6d.x;
            var _Di = (_oS._vt._Cb * this._zU[_PU].x + _oS._vt.c * this._zU[_PU].y) + _oS._6d.y;
            _YT._dU.x = _0T(_zi, _Ai);
            _YT._dU.y = _0T(_Ci, _Di);
            _YT._eU.x = _2T(_zi, _Ai);
            _YT._eU.y = _2T(_Ci, _Di);
        },
        _ZT: function(__T, __F) {
            __T._NT = 0.0;
            __T._oT._ER();
            __T._OT = 0.0;
        },
        _0U: function(_oS, _6d, _1U, _2U, _WT) {
            this._MU(_yU._FU,
                _WT);
            _yU._FU._0U(_oS, _6d, _1U, _2U, 0);
        },
        _RR: function(_SR) {
            var _Sh = _SR || {};
            this.parent.prototype._RR.call(this, _Sh);
            _Sh['m_count'] = this._AU;
            _Sh['m_vertices'] = [];
            for (var i = 0; i < this._AU; ++i) _Sh['m_vertices'].push(this._zU[i]._RR());
            _Sh['m_hasPrevVertex'] = this._DU;
            if (this._DU) _Sh['m_prevVertex'] = this._BU._RR();
            _Sh['m_hasNextVertex'] = this._EU;
            if (this._EU) _Sh['m_nextVertex'] = this._CU._RR();
            return _Sh;
        },
        _TR: function(data) {
            this.parent.prototype._TR.call(this, data);
            this._AU = data['m_count'];
            this._zU = [];
            for (var i = 0; i < this._AU; ++i) {
                this._zU[i] = new _DR();
                this._zU[i]._TR(data['m_vertices'][i]);
            }
            this._DU = data['m_hasPrevVertex'];
            if (this._DU) this._BU._TR(data['m_prevVertex']);
            this._EU = data['m_hasNextVertex'];
            if (this._EU) this._CU._TR(data['m_nextVertex']);
        }
    };
    _yU._jQ(_PT);

    function _QU() {
        this.parent.call(this);
        this._QT = _PT._5U;
        this._RT = __Q;
        this._AU = 0;
        this._RU = new _DR();
        this._zU = new Array(_VQ);
        this._SU = new Array(_VQ);
        Object.seal(this);
    }
    _QU.prototype = {
        _T: function() {
            var _jf = new _QU();
            _jf._AU = this._AU;
            _jf._RU = this._RU._T();
            for (var i = 0; i < this._AU; ++i) {
                _jf._zU[i] = this._zU[i]._T();
                _jf._SU[i] = this._SU[i]._T();
            }
            return _jf;
        },
        _TT: function() {
            return 1;
        },
        _7b: function(_35, _n4) {
            _PQ(3 <= _n4 && _n4 <= _VQ);
            if (_n4 < 3) {
                this._TU(1.0, 1.0);
                return;
            }
            var _X2 = _0T(_n4, _VQ);
            var _UU = new Array(_VQ);
            var _VU = 0;
            for (var i = 0; i < _X2; ++i) {
                var _X1 = _35[i];
                var _WU = true;
                for (var _k3 = 0; _k3 < _VU; ++_k3) {
                    if (_GS(_X1, _UU[_k3]) < 0.5 * _YQ) {
                        _WU = false;
                        break;
                    }
                }
                if (_WU) {
                    _UU[_VU++] = _X1._T();
                }
            }
            _X2 = _VU;
            if (_X2 < 3) {
                _PQ(false);
                this._TU(1.0, 1.0);
                return;
            }
            var _XU = 0;
            var _n5 = _UU[0].x;
            for (i = 1; i < _X2; ++i) {
                var x = _UU[i].x;
                if (x > _n5 || (x == _n5 && _UU[i].y < _UU[_XU].y)) {
                    _XU = i;
                    _n5 = x;
                }
            }
            var _YU = new Array(_VQ);
            var __2 = 0;
            var _ZU = _XU;
            for (;;) {
                _YU[__2] = _ZU;
                var __U = 0;
                for (_k3 = 1; _k3 < _X2; ++_k3) {
                    if (__U == _ZU) {
                        __U = _k3;
                        continue;
                    }
                    var _d3 = _DR._KR(_UU[__U], _UU[_YU[__2]]);
                    var _X1 = _DR._KR(_UU[_k3], _UU[_YU[__2]]);
                    var c = _AS(_d3, _X1);
                    if (c < 0.0) {
                        __U = _k3;
                    }
                    if (c == 0.0 && _X1._MR() > _d3._MR()) {
                        __U = _k3;
                    }
                }++__2;
                _ZU = __U;
                if (__U == _XU) {
                    break;
                }
            }
            this._AU = __2;
            for (i = 0; i < __2; ++i) {
                this._zU[i] = _UU[_YU[i]]._T();
            }
            for (i = 0; i < __2; ++i) {
                var _OU = i;
                var _PU = i + 1 < __2 ? i + 1 : 0;
                var _NU = _DR._KR(this._zU[_PU],
                    this._zU[_OU]);
                _PQ(_NU._MR() > _SQ * _SQ);
                this._SU[i] = _BS(_NU, 1.0)._T();
                this._SU[i]._NR();
            }
            this._RU = _QU._0V(this._zU, __2);
        },
        _TU: function(_1V, _2V, _oT, _E4) {
            this._AU = 4;
            this._zU[0] = new _DR(-_1V, -_2V);
            this._zU[1] = new _DR(_1V, -_2V);
            this._zU[2] = new _DR(_1V, _2V);
            this._zU[3] = new _DR(-_1V, _2V);
            this._SU[0] = new _DR(0.0, -1.0);
            this._SU[1] = new _DR(1.0, 0.0);
            this._SU[2] = new _DR(0.0, 1.0);
            this._SU[3] = new _DR(-1.0, 0.0);
            if (!_oT) return;
            this._RU._Zy(_oT);
            var _oS = new _nS();
            _oS._6d = _oT;
            _oS._vt._7b(_E4);
            for (var i = 0; i < this._AU; ++i) {
                this._zU[i]._Zy(_QS(_oS,
                    this._zU[i]));
                this._SU[i]._Zy(_OS(_oS._vt, this._SU[i]));
            }
        },
        _UT: function(_oS, _6d) {
            var _3V = _PS(_oS._vt, _DR._KR(_6d, _oS._6d));
            for (var i = 0; i < this._AU; ++i) {
                var _Nq = _zS(this._SU[i], _DR._KR(_3V, this._zU[i]));
                if (_Nq > 0.0) {
                    return false;
                }
            }
            return true;
        },
        _VT: function(_rt, _pt, _oS, _WT) {
            var _sT = _PS(_oS._vt, _DR._KR(_pt._sT, _oS._6d));
            var _tT = _PS(_oS._vt, _DR._KR(_pt._tT, _oS._6d));
            var _Cd = _DR._KR(_tT, _sT);
            var _Qz = 0.0,
                _4V = _pt._bU;
            var index = -1;
            for (var i = 0; i < this._AU; ++i) {
                var _rU = _zS(this._SU[i], _DR._KR(this._zU[i], _sT));
                var _sU = _zS(this._SU[i],
                    _Cd);
                if (_sU == 0.0) {
                    if (_rU < 0.0) {
                        return false;
                    }
                } else {
                    if (_sU < 0.0 && _rU < _Qz * _sU) {
                        _Qz = _rU / _sU;
                        index = i;
                    } else if (_sU > 0.0 && _rU < _4V * _sU) {
                        _4V = _rU / _sU;
                    }
                }
                if (_4V < _Qz) {
                    return false;
                }
            }
            _PQ(0.0 <= _Qz && _Qz <= _pt._bU);
            if (index >= 0) {
                _rt._cU = _Qz;
                _rt._2U = _OS(_oS._vt, this._SU[index]);
                return true;
            }
            return false;
        },
        _XT: function(_YT, _oS, _WT) {
            var _tU = (_oS._vt.c * this._zU[0].x - _oS._vt._Cb * this._zU[0].y) + _oS._6d.x;
            var _uU = (_oS._vt._Cb * this._zU[0].x + _oS._vt.c * this._zU[0].y) + _oS._6d.y;
            var _vU = _tU;
            var _wU = _uU;
            for (var i = 1; i < this._AU; ++i) {
                var _5V = (_oS._vt.c * this._zU[i].x - _oS._vt._Cb * this._zU[i].y) + _oS._6d.x;
                var _6V = (_oS._vt._Cb * this._zU[i].x + _oS._vt.c * this._zU[i].y) + _oS._6d.y;
                _tU = _0T(_tU, _5V);
                _uU = _0T(_uU, _6V);
                _vU = _2T(_vU, _5V);
                _wU = _2T(_wU, _6V);
            }
            _YT._dU.x = _tU - this._RT;
            _YT._dU.y = _uU - this._RT;
            _YT._eU.x = _vU + this._RT;
            _YT._eU.y = _wU + this._RT;
        },
        _ZT: function(__T, __F) {
            _PQ(this._AU >= 3);
            var _oT = new _DR(0.0, 0.0);
            var _7V = 0.0;
            var _OT = 0.0;
            var _Cb = new _DR(0.0, 0.0);
            for (var i = 0; i < this._AU; ++i) {
                _Cb._1b(this._zU[i]);
            }
            _Cb._im(1.0 / this._AU);
            var _8V = 1.0 / 3.0;
            for (var i = 0; i < this._AU; ++i) {
                var _9V = _DR._KR(this._zU[i], _Cb);
                var _aV = i + 1 < this._AU ? _DR._KR(this._zU[i + 1],
                    _Cb) : _DR._KR(this._zU[0], _Cb);
                var _bV = _AS(_9V, _aV);
                var _cV = 0.5 * _bV;
                _7V += _cV;
                _oT._1b(_DR._im(_cV * _8V, _DR._1b(_9V, _aV)));
                var _dV = _9V.x,
                    _eV = _9V.y;
                var _fV = _aV.x,
                    _gV = _aV.y;
                var _hV = _dV * _dV + _fV * _dV + _fV * _fV;
                var _iV = _eV * _eV + _gV * _eV + _gV * _gV;
                _OT += (0.25 * _8V * _bV) * (_hV + _iV);
            }
            __T._NT = __F * _7V;
            _PQ(_7V > _SQ);
            _oT._im(1.0 / _7V);
            __T._oT = _DR._1b(_oT, _Cb);
            __T._OT = __F * _OT;
            __T._OT += __T._NT * (_zS(__T._oT, __T._oT) - _zS(_oT, _oT));
        },
        _hU: function() {
            return this._AU;
        },
        _iU: function(index) {
            _PQ(0 <= index && index < this._AU);
            return this._zU[index];
        },
        _jV: function() {
            for (var i = 0; i < this._AU; ++i) {
                var _OU = i;
                var _PU = i < this._AU - 1 ? _OU + 1 : 0;
                var _6d = this._zU[_OU];
                var e = _DR._KR(this._zU[_PU], _6d);
                for (var _k3 = 0; _k3 < this._AU; ++_k3) {
                    if (_k3 == _OU || _k3 == _PU) {
                        continue;
                    }
                    var _X1 = _DR._KR(this._zU[_k3], _6d);
                    var c = _AS(e, _X1);
                    if (c < 0.0) {
                        return false;
                    }
                }
            }
            return true;
        },
        _0U: function(_oS, _6d, _kV, _2U, _WT) {
            var _3V = _PS(_oS._vt, _DR._KR(_6d, _oS._6d));
            var maxDistance = -Number.MAX_VALUE;
            var _lV = _3V;
            for (var i = 0; i < this._AU; ++i) {
                var _Nq = _zS(this._SU[i], _DR._KR(_3V, this._zU[i]));
                if (_Nq > maxDistance) {
                    maxDistance = _Nq;
                    _lV = this._SU[i];
                }
            }
            if (maxDistance > 0) {
                var _mV = _lV;
                var _nV = maxDistance * maxDistance;
                for (var i = 0; i < this._AU; ++i) {
                    var _1U = _DR._KR(_3V, this._zU[i]);
                    var _oV = _1U._MR();
                    if (_nV > _oV) {
                        _mV = _1U;
                        _nV = _oV;
                    }
                }
                _kV[0] = _AR(_nV);
                _2U._Zy(_OS(_oS._vt, _mV));
                _2U._NR();
            } else {
                _kV[0] = maxDistance;
                _2U._Zy(_OS(_oS._vt, _lV));
            }
        },
        _RR: function(_SR) {
            var _Sh = _SR || {};
            this.parent.prototype._RR.call(this, _Sh);
            _Sh['m_count'] = this._AU;
            _Sh['m_centroid'] = this._RU._RR();
            _Sh['m_vertices'] = [];
            _Sh['m_normals'] = [];
            for (var i = 0; i < this._AU;
                ++i) {
                _Sh['m_vertices'].push(this._zU[i]._RR());
                _Sh['m_normals'].push(this._SU[i]._RR());
            }
            return _Sh;
        },
        _TR: function(data) {
            this.parent.prototype._TR.call(this, data);
            this._AU = data['m_count'];
            this._RU._TR(data['m_centroid']);
            this._zU = [];
            this._SU = [];
            for (var i = 0; i < this._AU; ++i) {
                this._zU[i] = new _DR();
                this._zU[i]._TR(data['m_vertices'][i]);
                this._SU[i] = new _DR();
                this._SU[i]._TR(data['m_normals'][i]);
            }
        }
    };
    _QU._0V = function(_pV, _n4) {
        _PQ(_n4 >= 3);
        var c = new _DR();
        var _7V = 0.0;
        var _qV = new _DR(0.0, 0.0);
        var _rV = 1.0 / 3.0;
        for (var i = 0; i < _n4; ++i) {
            var _sT = _qV;
            var _tT = _pV[i];
            var _sV = i + 1 < _n4 ? _pV[i + 1] : _pV[0];
            var _9V = _DR._KR(_tT, _sT);
            var _aV = _DR._KR(_sV, _sT);
            var _bV = _AS(_9V, _aV);
            var _cV = 0.5 * _bV;
            _7V += _cV;
            c._1b(_DR._im(_cV, _DR._im(_rV, _DR._1b(_DR._1b(_sT, _tT), _sV))));
        }
        _PQ(_7V > _SQ);
        c._im(1.0 / _7V);
        return c;
    };
    _QU._jQ(_PT);

    function _tV() {
        this._uV = 0;
        this._vV = 0;
    }

    function _wV(_xV, _yV) {
        if (_xV._uV == _yV._uV) {
            return _xV._vV - _yV._vV;
        }
        return _xV._uV - _yV._uV;
    }

    function _zV() {
        this._AV = new _BV();
        this._CV = 0;
        this._DV = 0;
        this._EV = 0;
        this._FV = [];
        this._GV = 0;
        this._HV = [];
    }
    _zV.prototype = {
        _IV: function(_YT, _JV) {
            var _KV = this._AV._IV(_YT, _JV);
            ++this._DV;
            this._LV(_KV);
            return _KV;
        },
        _MV: function(_KV) {
            this._NV(_KV);
            --this._DV;
            this._AV._MV(_KV);
        },
        _OV: function(_KV, _YT, _PV) {
            var buffer = this._AV._OV(_KV, _YT, _PV);
            if (buffer) {
                this._LV(_KV);
            }
        },
        _QV: function(_KV) {
            this._LV(_KV);
        },
        _RV: function(_KV) {
            return this._AV._RV(_KV);
        },
        _SV: function(_KV) {
            return this._AV._SV(_KV);
        },
        _dF: function(_uV, _vV) {
            var _TV = this._AV._RV(_uV);
            var _UV = this._AV._RV(_vV);
            return _VV(_TV, _UV);
        },
        _WV: function() {
            return this._DV;
        },
        _XV: function(_YV) {
            this._EV = 0;
            this._FV.length = 0;
            for (var i = 0; i < this._GV; ++i) {
                this._CV = this._HV[i];
                if (this._CV == _zV._ZV) {
                    continue;
                }
                var __V = this._AV._RV(this._CV);
                this._AV._0W(this, __V);
            }
            this._GV = 0;
            this._FV.sort(_wV);
            var i = 0;
            while (i < this._EV) {
                var _1W = this._FV[i];
                var _2W = this._AV._SV(_1W._uV);
                var _3W = this._AV._SV(_1W._vV);
                _YV._4W(_2W, _3W);
                ++i;
                while (i < this._EV) {
                    var _5W = this._FV[i];
                    if (_5W._uV != _1W._uV || _5W._vV != _1W._vV) {
                        break;
                    }++i;
                }
            }
        },
        _0W: function(_YV, _YT) {
            this._AV._0W(_YV, _YT);
        },
        _VT: function(_YV, _pt) {
            this._AV._VT(_YV,
                _pt);
        },
        _6W: function() {
            return this._AV._nB();
        },
        _7W: function() {
            return this._AV._8W();
        },
        _9W: function() {
            return this._AV._aW();
        },
        _bW: function(_cW) {
            this._AV._bW(_cW);
        },
        _LV: function(_KV) {
            this._HV[this._GV] = _KV;
            ++this._GV;
        },
        _NV: function(_KV) {
            for (var i = 0; i < this._GV; ++i) {
                if (this._HV[i] == _KV) {
                    this._HV[i] = _zV._ZV;
                }
            }
        },
        _dW: function(_KV) {
            if (_KV == this._CV) {
                return true;
            }
            this._FV[this._EV] = new _tV();
            this._FV[this._EV]._uV = _0T(_KV, this._CV);
            this._FV[this._EV]._vV = _2T(_KV, this._CV);
            ++this._EV;
            return true;
        }
    };
    _zV._ZV = -1;

    function _eW() {
        this._zU = null;
        this._AU = 0;
        this._RT = 0;
    }
    _eW.prototype = {
        _Zy: function(_b3) {
            this._zU = _b3._zU;
            this._AU = _b3._AU;
            this._RT = _b3._RT;
        },
        _7b: function(_jf, index) {
            switch (_jf._ST()) {
                case _PT._3U:
                    {
                        var _fW = _jf;
                        this._zU = [_fW._9U];
                        this._AU = 1;
                        this._RT = _fW._RT;
                    }
                    break;
                case _PT._5U:
                    {
                        var _gW = _jf;
                        this._zU = _gW._zU;
                        this._AU = _gW._AU;
                        this._RT = _gW._RT;
                    }
                    break;
                case _PT._6U:
                    {
                        var _hW = _jf;
                        _PQ(0 <= index && index < _hW._AU);
                        this._zU = [_hW._zU[index]];
                        if (index + 1 < _hW._AU) {
                            this._zU[1] = _hW._zU[index + 1];
                        } else {
                            this._zU[1] = _hW._zU[0];
                        }
                        this._AU = 2;
                        this._RT = _hW._RT;
                    }
                    break;
                case _PT._4U:
                    {
                        var _NU = _jf;
                        this._zU = [_NU._mU, _NU._nU];
                        this._AU = 2;
                        this._RT = _NU._RT;
                    }
                    break;
                default:
                    _PQ(false);
            }
        },
        _fU: function(_A5, _B5) {
            var _iW = 0;
            var _jW = this._zU[0].x * _A5 + this._zU[0].y * _B5;
            for (var i = 1; i < this._AU; ++i) {
                var value = this._zU[i].x * _A5 + this._zU[i].y * _B5;
                if (value > _jW) {
                    _iW = i;
                    _jW = value;
                }
            }
            return _iW;
        },
        _gU: function(_A5, _B5) {
            return this._zU[this._fU(_A5, _B5)];
        },
        _hU: function() {
            return this._AU;
        },
        _iU: function(index) {
            _PQ(0 <= index && index < this._AU);
            return this._zU[index];
        }
    };

    function _kW() {
        this._lW = 0;
        this._n4 = 0;
        this._mW = [0, 0, 0];
        this._nW = [0, 0, 0];
    };

    function _oW() {
        this._pW = new _eW();
        this._qW = new _eW();
        this._rW = new _nS();
        this._sW = new _nS();
        this._tW = false;
    };

    function _uW() {
        this._vW = new _DR();
        this._wW = new _DR();
        this._1U = 0;
        this._xW = 0;
    };

    function _yW() {
        this._zW = new _DR();
        this._AW = new _DR();
        this.w = new _DR();
        this._Z4 = 0;
        this._mW = 0;
        this._nW = 0;
    }
    _yW.prototype = {
        _Zy: function(_b3) {
            this._zW.x = _b3._zW.x;
            this._zW.y = _b3._zW.y;
            this._AW.x = _b3._AW.x;
            this._AW.y = _b3._AW.y;
            this.w.x = _b3.w.x;
            this.w.y = _b3.w.y;
            this._Z4 = _b3._Z4;
            this._mW = _b3._mW;
            this._nW = _b3._nW;
        }
    };

    function _BW() {
        this._CW = [new _yW(), new _yW(), new _yW()];
        this._AU = 0;
    }
    _BW.prototype = {
        _DW: function(_m4, _pW, _rW, _qW, _sW) {
            _PQ(_m4._n4 <= 3);
            this._AU = _m4._n4;
            var _35 = this._CW;
            for (var i = 0; i < this._AU; ++i) {
                var _X1 = _35[i];
                _X1._mW = _m4._mW[i];
                _X1._nW = _m4._nW[i];
                var _EW = _pW._iU(_X1._mW);
                var _FW = _qW._iU(_X1._nW);
                _X1._zW.x = (_rW._vt.c * _EW.x - _rW._vt._Cb * _EW.y) + _rW._6d.x;
                _X1._zW.y = (_rW._vt._Cb * _EW.x + _rW._vt.c * _EW.y) + _rW._6d.y;
                _X1._AW.x = (_sW._vt.c * _FW.x - _sW._vt._Cb * _FW.y) + _sW._6d.x;
                _X1._AW.y = (_sW._vt._Cb * _FW.x + _sW._vt.c * _FW.y) + _sW._6d.y;
                _X1.w.x = _X1._AW.x - _X1._zW.x;
                _X1.w.y = _X1._AW.y - _X1._zW.y;
                _X1._Z4 = 0.0;
            }
            if (this._AU > 1) {
                var _GW = _m4._lW;
                var _HW = this._IW();
                if (_HW < 0.5 * _GW || 2.0 * _GW < _HW || _HW < _SQ) {
                    this._AU = 0;
                }
            }
            if (this._AU == 0) {
                var _X1 = _35[0];
                _X1._mW = 0;
                _X1._nW = 0;
                var _EW = _pW._iU(0);
                var _FW = _qW._iU(0);
                _X1._zW.x = (_rW._vt.c * _EW.x - _rW._vt._Cb * _EW.y) + _rW._6d.x;
                _X1._zW.y = (_rW._vt._Cb * _EW.x + _rW._vt.c * _EW.y) + _rW._6d.y;
                _X1._AW.x = (_sW._vt.c * _FW.x - _sW._vt._Cb * _FW.y) + _sW._6d.x;
                _X1._AW.y = (_sW._vt._Cb * _FW.x + _sW._vt.c * _FW.y) + _sW._6d.y;
                _X1.w.x = _X1._AW.x - _X1._zW.x;
                _X1.w.y = _X1._AW.y - _X1._zW.y;
                _X1._Z4 = 1.0;
                this._AU = 1;
            }
        },
        _JW: function(_m4) {
            _m4._lW = this._IW();
            _m4._n4 = this._AU;
            var _35 = this._CW;
            for (var i = 0; i < this._AU; ++i) {
                _m4._mW[i] = _35[i]._mW;
                _m4._nW[i] = _35[i]._nW;
            }
        },
        _KW: function(_6d) {
            switch (this._AU) {
                case 1:
                    _6d.x = -this._CW[0].w.x;
                    _6d.y = -this._CW[0].w.y;
                    break;
                case 2:
                    {
                        var _LW = this._CW[1].w.x - this._CW[0].w.x;
                        var _MW = this._CW[1].w.y - this._CW[0].w.y;
                        var _NW = _LW * -this._CW[0].w.y - _MW * -this._CW[0].w.x;
                        if (_NW > 0.0) {
                            _6d.x = -1.0 * _MW;
                            _6d.y = 1.0 * _LW;
                        } else {
                            _6d.x = 1.0 * _MW;
                            _6d.y = -1.0 * _LW;
                        }
                    }
                    break;
                default:
                    _PQ(false);
                    _6d.x = _6d.y = 0;
                    break;
            }
        },
        _OW: function(_6d) {
            switch (this._AU) {
                case 1:
                    _6d.x = this._CW[0].w.x;
                    _6d.y = this._CW[0].w.y;
                    break;
                case 2:
                    _6d.x = (this._CW[0]._Z4 * this._CW[0].w.x) + (this._CW[1]._Z4 * this._CW[1].w.x);
                    _6d.y = (this._CW[0]._Z4 * this._CW[0].w.y) + (this._CW[1]._Z4 * this._CW[1].w.y);
                    break;
                case 3:
                    _6d.x = _6d.y = 0;
                    break;
                default:
                    _PQ(false);
                    _6d.x = _6d.y = 0;
                    break;
            }
        },
        _PW: function(_QW, _RW) {
            switch (this._AU) {
                case 1:
                    _QW.x = this._CW[0]._zW.x;
                    _QW.y = this._CW[0]._zW.y;
                    _RW.x = this._CW[0]._AW.x;
                    _RW.y = this._CW[0]._AW.y;
                    break;
                case 2:
                    _QW.x = (this._CW[0]._Z4 * this._CW[0]._zW.x) + (this._CW[1]._Z4 * this._CW[1]._zW.x);
                    _QW.y = (this._CW[0]._Z4 * this._CW[0]._zW.y) + (this._CW[1]._Z4 * this._CW[1]._zW.y);
                    _RW.x = (this._CW[0]._Z4 * this._CW[0]._AW.x) + (this._CW[1]._Z4 * this._CW[1]._AW.x);
                    _RW.y = (this._CW[0]._Z4 * this._CW[0]._AW.y) + (this._CW[1]._Z4 * this._CW[1]._AW.y);
                    break;
                case 3:
                    _QW.x = (this._CW[0]._Z4 * this._CW[0]._zW.x) + (this._CW[1]._Z4 * this._CW[1]._zW.x) + (this._CW[2]._Z4 * this._CW[2]._zW.x);
                    _QW.y = (this._CW[0]._Z4 * this._CW[0]._zW.y) + (this._CW[1]._Z4 * this._CW[1]._zW.y) + (this._CW[2]._Z4 * this._CW[2]._zW.y);
                    _RW.x = _QW.x;
                    _RW.y = _QW.y;
                    break;
                default:
                    _PQ(false);
                    break;
            }
        },
        _IW: function() {
            switch (this._AU) {
                case 1:
                    return 0.0;
                case 2:
                    return _FS(this._CW[0].w, this._CW[1].w);
                case 3:
                    return (this._CW[1].w.x - this._CW[0].w.x) * (this._CW[2].w.y - this._CW[0].w.y) - (this._CW[1].w.y - this._CW[0].w.y) * (this._CW[2].w.x - this._CW[0].w.x);
                default:
                    _PQ(false);
                    return 0.0;
            }
        },
        _SW: function() {
            var _TW = this._CW[0].w;
            var _UW = this._CW[1].w;
            var _LW = _UW.x - _TW.x;
            var _MW = _UW.y - _TW.y;
            var _VW = -(_TW.x * _LW + _TW.y * _MW);
            if (_VW <= 0.0) {
                this._CW[0]._Z4 = 1.0;
                this._AU = 1;
                return;
            }
            var _WW = _UW.x * _LW + _UW.y * _MW;
            if (_WW <= 0.0) {
                this._CW[1]._Z4 = 1.0;
                this._AU = 1;
                this._CW[0]._Zy(this._CW[1]);
                return;
            }
            var _XW = 1.0 / (_WW + _VW);
            this._CW[0]._Z4 = _WW * _XW;
            this._CW[1]._Z4 = _VW * _XW;
            this._AU = 2;
        },
        _YW: function() {
            var _TW = this._CW[0].w;
            var _UW = this._CW[1].w;
            var _ZW = this._CW[2].w;
            var _LW = _UW.x - _TW.x;
            var _MW = _UW.y - _TW.y;
            var __W = _TW.x * _LW + _TW.y * _MW;
            var _0X = _UW.x * _LW + _UW.y * _MW;
            var _WW = _0X;
            var _VW = -__W;
            var _1X = _ZW.x - _TW.x;
            var _2X = _ZW.y - _TW.y;
            var _3X = _TW.x * _1X + _TW.y * _2X;
            var _4X = _ZW.x * _1X + _ZW.y * _2X;
            var _5X = _4X;
            var _6X = -_3X;
            var _7X = _ZW.x - _UW.x;
            var _8X = _ZW.y - _UW.y;
            var _9X = _UW.x * _7X + _UW.y * _8X;
            var _aX = _ZW.x * _7X + _ZW.y * _8X;
            var _bX = _aX;
            var _cX = -_9X;
            var _dX = _LW * _2X - _MW * _1X;
            var _eX = _dX * (_UW.x * _ZW.y - _UW.y * _ZW.x);
            var _fX = _dX * (_ZW.x * _TW.y - _ZW.y * _TW.x);
            var _gX = _dX * (_TW.x * _UW.y - _TW.y * _UW.x);
            if (_VW <= 0.0 && _6X <= 0.0) {
                this._CW[0]._Z4 = 1.0;
                this._AU = 1;
                return;
            }
            if (_WW > 0.0 && _VW > 0.0 && _gX <= 0.0) {
                var _XW = 1.0 / (_WW + _VW);
                this._CW[0]._Z4 = _WW * _XW;
                this._CW[1]._Z4 = _VW * _XW;
                this._AU = 2;
                return;
            }
            if (_5X > 0.0 && _6X > 0.0 && _fX <= 0.0) {
                var _hX = 1.0 / (_5X + _6X);
                this._CW[0]._Z4 = _5X * _hX;
                this._CW[2]._Z4 = _6X * _hX;
                this._AU = 2;
                this._CW[1]._Zy(this._CW[2]);
                return;
            }
            if (_WW <= 0.0 && _cX <= 0.0) {
                this._CW[1]._Z4 = 1.0;
                this._AU = 1;
                this._CW[0]._Zy(this._CW[1]);
                return;
            }
            if (_5X <= 0.0 && _bX <= 0.0) {
                this._CW[2]._Z4 = 1.0;
                this._AU = 1;
                this._CW[0]._Zy(this._CW[2]);
                return;
            }
            if (_bX > 0.0 && _cX > 0.0 && _eX <= 0.0) {
                var _iX = 1.0 / (_bX + _cX);
                this._CW[1]._Z4 = _bX * _iX;
                this._CW[2]._Z4 = _cX * _iX;
                this._AU = 2;
                this._CW[0]._Zy(this._CW[2]);
                return;
            }
            var _jX = 1.0 / (_eX + _fX + _gX);
            this._CW[0]._Z4 = _eX * _jX;
            this._CW[1]._Z4 = _fX * _jX;
            this._CW[2]._Z4 = _gX * _jX;
            this._AU = 3;
        }
    };
    var _kX = new _BW();
    var _lX = new _DR();
    var _mX = new _DR();

    function _nX(_rt, _m4, _pt) {
        ++_nX._oX;
        var _pW = _pt._pW;
        var _qW = _pt._qW;
        var _rW = _pt._rW;
        var _sW = _pt._sW;
        _kX._DW(_m4, _pW, _rW, _qW, _sW);
        var _35 = _kX._CW;
        var _pX = 20;
        var _qX = [0, 0, 0],
            _rX = [0, 0, 0];
        var _sX = 0;
        var _tX = _RQ;
        var _uX = _tX;
        var _vX = 0;
        while (_vX < _pX) {
            _sX = _kX._AU;
            for (var i = 0; i < _sX; ++i) {
                _qX[i] = _35[i]._mW;
                _rX[i] = _35[i]._nW;
            }
            switch (_kX._AU) {
                case 1:
                    break;
                case 2:
                    _kX._SW();
                    break;
                case 3:
                    _kX._YW();
                    break;
                default:
                    _PQ(false);
            }
            if (_kX._AU == 3) {
                break;
            }
            _kX._OW(_mX);
            _uX = _mX._MR();
            if (_uX >= _tX) {}
            _tX = _uX;
            _kX._KW(_mX);
            if (_mX._MR() < _SQ * _SQ) {
                break;
            }
            var _wX = _35[_kX._AU];
            _wX._mW = _pW._fU(_rW._vt.c * -_mX.x + _rW._vt._Cb * -_mX.y, -_rW._vt._Cb * -_mX.x + _rW._vt.c * -_mX.y);
            var _xX = _pW._iU(_wX._mW);
            _wX._zW.x = (_rW._vt.c * _xX.x - _rW._vt._Cb * _xX.y) + _rW._6d.x;
            _wX._zW.y = (_rW._vt._Cb * _xX.x + _rW._vt.c * _xX.y) + _rW._6d.y;
            _wX._nW = _qW._fU(_sW._vt.c * _mX.x + _sW._vt._Cb * _mX.y, -_sW._vt._Cb * _mX.x + _sW._vt.c * _mX.y);
            var _yX = _qW._iU(_wX._nW);
            _wX._AW.x = (_sW._vt.c * _yX.x - _sW._vt._Cb * _yX.y) + _sW._6d.x;
            _wX._AW.y = (_sW._vt._Cb * _yX.x + _sW._vt.c * _yX.y) + _sW._6d.y;
            _wX.w.x = _wX._AW.x - _wX._zW.x;
            _wX.w.y = _wX._AW.y - _wX._zW.y;
            ++_vX;
            ++_nX._zX;
            var _AX = false;
            for (var i = 0; i < _sX; ++i) {
                if (_wX._mW == _qX[i] && _wX._nW == _rX[i]) {
                    _AX = true;
                    break;
                }
            }
            if (_AX) {
                break;
            }++_kX._AU;
        }
        _nX._BX = _2T(_nX._BX, _vX);
        _kX._PW(_rt._vW, _rt._wW);
        _rt._1U = _FS(_rt._vW, _rt._wW);
        _rt._xW = _vX;
        _kX._JW(_m4);
        if (_pt._tW) {
            var _CX = _pW._RT;
            var _DX = _qW._RT;
            if (_rt._1U > _CX + _DX && _rt._1U > _SQ) {
                _rt._1U -= _CX + _DX;
                _lX.x = _rt._wW.x - _rt._vW.x;
                _lX.y = _rt._wW.y - _rt._vW.y;
                _lX._NR();
                _rt._vW.x += (_CX * _lX.x);
                _rt._vW.y += (_CX * _lX.y);
                _rt._wW.x -= (_DX * _lX.x);
                _rt._wW.y -= (_DX * _lX.y);
            } else {
                var _ui = (0.5 * (_rt._vW.x + _rt._wW.x));
                var _vi = (0.5 * (_rt._vW.y + _rt._wW.y));
                _rt._vW.x = _ui;
                _rt._vW.y = _vi;
                _rt._wW.x = _ui;
                _rt._wW.y = _vi;
                _rt._1U = 0.0;
            }
        }
    }
    _nX._oX = 0;
    _nX._zX = 0;
    _nX._BX = 0;
    var _EX = 255;

    function _FX() {}
    _FX.prototype = {
        _mW: 0,
        _nW: 0,
        _GX: 0,
        _HX: 0,
        _JT: function() {
            this._mW = this._nW = this._GX = this._HX = 0;
        },
        _O3: function() {
            return this._mW | (this._nW << 8) | (this._GX << 16) | (this._HX << 24);
        },
        _Zy: function(_dt) {
            this._mW = _dt._mW;
            this._nW = _dt._nW;
            this._GX = _dt._GX;
            this._HX = _dt._HX;
        }
    };
    _FX._IX = 0;
    _FX._JX = 1;

    function _KX() {
        this._LX = new _DR();
        this._MX = 0;
        this._NX = 0;
        this.id = new _FX();
    };
    _KX.prototype = {
        _T: function() {
            var _OX = new _KX();
            _OX._LX.x = this._LX.x;
            _OX._LX.y = this._LX.y;
            _OX._MX = this._MX;
            _OX._NX = this._NX;
            _OX.id._Zy(this.id);
            return _OX;
        }
    };

    function _PX() {
        this.points = new Array(_UQ);
        this._QX = new _DR();
        this._LX = new _DR();
        this.type = 0;
        this._RX = 0;
    };
    _PX.prototype = {
        _T: function() {
            var _SX = new _PX();
            _SX._RX = this._RX;
            _SX.type = this.type;
            _SX._LX.x = this._LX.x;
            _SX._LX.y = this._LX.y;
            _SX._QX.x = this._QX.x;
            _SX._QX.y = this._QX.y;
            for (var i = 0; i < this._RX; ++i) _SX.points[i] = this.points[i]._T();
            return _SX;
        },
        _Zy: function(_SX) {
            this._RX = _SX._RX;
            this.type = _SX.type;
            this._LX.x = _SX._LX.x;
            this._LX.y = _SX._LX.y;
            this._QX.x = _SX._QX.x;
            this._QX.y = _SX._QX.y;
            for (var i = 0; i < this._RX; ++i) this.points[i] = _SX.points[i]._T();
        }
    };
    _PX._TX = 0;
    _PX._UX = 1;
    _PX._VX = 2;
    _PX._WX = 0;
    _PX._XX = 1;
    _PX._YX = 2;
    _PX._ZX = 3;

    function __X() {
        this._2U = new _DR();
        this.points = new Array(_UQ);
        this._0Y = new Array(_UQ);
    }
    __X.prototype = {
        _1Y: function(_SX, _2Y, _3Y, _4Y, _5Y) {
            if (_SX._RX == 0) {
                return;
            }
            switch (_SX.type) {
                case _PX._TX:
                    {
                        this._2U.x = 1;
                        this._2U.y = 0;
                        var _6Y = (_2Y._vt.c * _SX._LX.x - _2Y._vt._Cb * _SX._LX.y) + _2Y._6d.x;
                        var _7Y = (_2Y._vt._Cb * _SX._LX.x + _2Y._vt.c * _SX._LX.y) + _2Y._6d.y;
                        var _8Y = (_4Y._vt.c * _SX.points[0]._LX.x - _4Y._vt._Cb * _SX.points[0]._LX.y) + _4Y._6d.x;
                        var _9Y = (_4Y._vt._Cb * _SX.points[0]._LX.x + _4Y._vt.c * _SX.points[0]._LX.y) + _4Y._6d.y;
                        var _Vi = _6Y - _8Y;
                        var _Wi = _7Y - _9Y;
                        if ((_Vi * _Vi + _Wi * _Wi) > _SQ * _SQ) {
                            this._2U.x = _8Y - _6Y;
                            this._2U.y = _9Y - _7Y;
                            this._2U._NR();
                        }
                        var _aY = _6Y + (_3Y * this._2U.x);
                        var _bY = _7Y + (_3Y * this._2U.y);
                        var _cY = _8Y - (_5Y * this._2U.x);
                        var _dY = _9Y - (_5Y * this._2U.y);
                        this.points[0] = new _DR(0.5 * (_aY + _cY), 0.5 * (_bY + _dY));
                        this._0Y[0] = (_cY - _aY) * this._2U.x + (_dY - _bY) * this._2U.y;
                    }
                    break;
                case _PX._UX:
                    {
                        this._2U.x = _2Y._vt.c * _SX._QX.x - _2Y._vt._Cb * _SX._QX.y;
                        this._2U.y = _2Y._vt._Cb * _SX._QX.x + _2Y._vt.c * _SX._QX.y;
                        var _eY = (_2Y._vt.c * _SX._LX.x - _2Y._vt._Cb * _SX._LX.y) + _2Y._6d.x;
                        var _fY = (_2Y._vt._Cb * _SX._LX.x + _2Y._vt.c * _SX._LX.y) + _2Y._6d.y;
                        for (var i = 0; i < _SX._RX; ++i) {
                            var _gY = (_4Y._vt.c * _SX.points[i]._LX.x - _4Y._vt._Cb * _SX.points[i]._LX.y) + _4Y._6d.x;
                            var _hY = (_4Y._vt._Cb * _SX.points[i]._LX.x + _4Y._vt.c * _SX.points[i]._LX.y) + _4Y._6d.y;
                            var _Cd = (_gY - _eY) * this._2U.x + (_hY - _fY) * this._2U.y;
                            var _aY = _gY + ((_3Y - _Cd) * this._2U.x);
                            var _bY = _hY + ((_3Y - _Cd) * this._2U.y);
                            var _cY = (_gY - (_5Y * this._2U.x));
                            var _dY = (_hY - (_5Y * this._2U.y));
                            this.points[i] = new _DR(0.5 * (_aY + _cY), 0.5 * (_bY + _dY));
                            this._0Y[i] = (_cY - _aY) * this._2U.x + (_dY - _bY) * this._2U.y;
                        }
                    }
                    break;
                case _PX._VX:
                    {
                        this._2U.x = _4Y._vt.c * _SX._QX.x - _4Y._vt._Cb * _SX._QX.y;
                        this._2U.y = _4Y._vt._Cb * _SX._QX.x + _4Y._vt.c * _SX._QX.y;
                        var _eY = (_4Y._vt.c * _SX._LX.x - _4Y._vt._Cb * _SX._LX.y) + _4Y._6d.x;
                        var _fY = (_4Y._vt._Cb * _SX._LX.x + _4Y._vt.c * _SX._LX.y) + _4Y._6d.y;
                        for (var i = 0; i < _SX._RX; ++i) {
                            var _gY = (_2Y._vt.c * _SX.points[i]._LX.x - _2Y._vt._Cb * _SX.points[i]._LX.y) + _2Y._6d.x;
                            var _hY = (_2Y._vt._Cb * _SX.points[i]._LX.x + _2Y._vt.c * _SX.points[i]._LX.y) + _2Y._6d.y;
                            var _Cd = (_gY - _eY) * this._2U.x + (_hY - _fY) * this._2U.y;
                            var _cY = _gY + ((_5Y - _Cd) * this._2U.x);
                            var _dY = _hY + ((_5Y - _Cd) * this._2U.y);
                            var _aY = (_gY - (_3Y * this._2U.x));
                            var _bY = (_hY - (_3Y * this._2U.y));
                            this.points[i] = new _DR(0.5 * (_aY + _cY), 0.5 * (_bY + _dY));
                            this._0Y[i] = (_aY - _cY) * this._2U.x + (_bY - _dY) * this._2U.y;
                        }
                        this._2U.x = -this._2U.x;
                        this._2U.y = -this._2U.y;
                    }
                    break;
            }
        }
    };

    function _iY(_jY, _kY, _lY, _mY) {
        for (var i = 0; i < _UQ; ++i) {
            _jY[i] = _PX._WX;
            _kY[i] = _PX._WX;
        }
        for (var i = 0; i < _lY._RX; ++i) {
            var id = _lY.points[i].id;
            _jY[i] = _PX._ZX;
            for (var _k3 = 0; _k3 < _mY._RX; ++_k3) {
                if (_mY.points[_k3].id._O3() == id._O3()) {
                    _jY[i] = _PX._YX;
                    break;
                }
            }
        }
        for (var i = 0; i < _mY._RX; ++i) {
            var id = _mY.points[i].id;
            _kY[i] = _PX._XX;
            for (var _k3 = 0; _k3 < _lY._RX; ++_k3) {
                if (_lY.points[_k3].id._O3() == id._O3()) {
                    _kY[i] = _PX._YX;
                    break;
                }
            }
        }
    }

    function _nY() {
        this._X1 = new _DR();
        this.id = new _FX();
    };

    function _oY() {
        this._sT = new _DR(), this._tT = new _DR();
        this._bU = 0;
    };

    function _pY() {
        this._2U = new _DR();
        this._cU = 0;
    };

    function _qY() {
        this._dU = new _DR();
        this._eU = new _DR();
    }
    _qY.prototype = {
        _Zy: function(other) {
            this._dU.x = other._dU.x;
            this._dU.y = other._dU.y;
            this._eU.x = other._eU.x;
            this._eU.y = other._eU.y;
        },
        _T: function() {
            var _rY = new _qY();
            _rY._dU.x = this._dU.x;
            _rY._dU.y = this._dU.y;
            _rY._eU.x = this._eU.x;
            _rY._eU.y = this._eU.y;
            return _rY;
        },
        _PR: function() {
            return (this._eU.x - this._dU.x) >= 0.0 && (this._eU.y - this._dU.y) >= 0.0 && this._dU._PR() && this._eU._PR();
        },
        _sY: function() {
            return new _DR(0.5 * (this._dU.x + this._eU.x),
                0.5 * (this._dU.y + this._eU.y));
        },
        _tY: function() {
            return new _DR(0.5 * (this._eU.x - this._dU.x), 0.5 * (this._eU.y - this._dU.y));
        },
        _uY: function() {
            return 2.0 * ((this._eU.x - this._dU.x) + (this._eU.y - this._dU.y));
        },
        _vY: function(_wY, _xY) {
            if (_xY) {
                this._dU.x = _0T(_wY._dU.x, _xY._dU.x);
                this._dU.y = _0T(_wY._dU.y, _xY._dU.y);
                this._eU.x = _2T(_wY._eU.x, _xY._eU.x);
                this._eU.y = _2T(_wY._eU.y, _xY._eU.y);
            } else {
                this._dU.x = _0T(this._dU.x, _wY._dU.x);
                this._dU.y = _0T(this._dU.y, _wY._dU.y);
                this._eU.x = _2T(this._eU.x, _wY._eU.x);
                this._eU.y = _2T(this._eU.y,
                    _wY._eU.y);
            }
        },
        _yY: function(_YT) {
            return this._dU.x <= _YT._dU.x && this._dU.y <= _YT._dU.y && _YT._eU.x <= this._eU.x && _YT._eU.y <= this._eU.y;
        },
        _VT: function(_rt, _pt) {
            var _zY = -_RQ;
            var _AY = _RQ;
            var _6d = _pt._sT;
            var _Cd = _DR._KR(_pt._tT, _pt._sT);
            var _BY = _ZS(_Cd);
            var _2U = new _DR();
            for (var i = 0; i < 2; ++i) {
                if (_BY._IR(i) < _SQ) {
                    if (_6d._IR(i) < this._dU._IR(i) || this._eU._IR(i) < _6d._IR(i)) {
                        return false;
                    }
                } else {
                    var _CY = 1.0 / _Cd._IR(i);
                    var _DY = (this._dU._IR(i) - _6d._IR(i)) * _CY;
                    var _EY = (this._eU._IR(i) - _6d._IR(i)) * _CY;
                    var _Cb = -1.0;
                    if (_DY > _EY) {
                        var _1v = _EY;
                        _EY = _DY;
                        _DY = _1v;
                        _Cb = 1.0;
                    }
                    if (_DY > _zY) {
                        _2U.x = _2U.y = 0;
                        _2U._JR(i, _Cb);
                        _zY = _DY;
                    }
                    _AY = _0T(_AY, _EY);
                    if (_zY > _AY) {
                        return false;
                    }
                }
            }
            if (_zY < 0.0 || _pt._bU < _zY) {
                return false;
            }
            _rt._cU = _zY;
            _rt._2U.x = _2U.x;
            _rt._2U.y = _2U.y;
            return true;
        }
    };

    function _FY(_SX, _GY, _2Y, _HY, _4Y) {
        _SX._RX = 0;
        var _QW = _QS(_2Y, _GY._9U);
        var _RW = _QS(_4Y, _HY._9U);
        var _A5 = _RW.x - _QW.x;
        var _B5 = _RW.y - _QW.y;
        var _IY = _A5 * _A5 + _B5 * _B5;
        var _CX = _GY._RT,
            _DX = _HY._RT;
        var _pF = _CX + _DX;
        if (_IY > _pF * _pF) {
            return;
        }
        _SX.type = _PX._TX;
        _SX._LX.x = _GY._9U.x;
        _SX._LX.y = _GY._9U.y;
        _SX._QX.x = _SX._QX.y = 0;
        _SX._RX = 1;
        _SX.points[0] = new _KX();
        _SX.points[0]._LX.x = _HY._9U.x;
        _SX.points[0]._LX.y = _HY._9U.y;
        _SX.points[0].id._JT();
    }

    function _JY(_SX, _KY, _2Y, _HY, _4Y) {
        _SX._RX = 0;
        var c = _QS(_4Y, _HY._9U);
        var _LY = _SS(_2Y, c);
        var _MY = 0;
        var _NY = -_RQ;
        var _pF = _KY._RT + _HY._RT;
        var _lT = _KY._AU;
        var _35 = _KY._zU;
        var _OY = _KY._SU;
        for (var i = 0; i < _lT; ++i) {
            var _Cb = _OY[i].x * (_LY.x - _35[i].x) + _OY[i].y * (_LY.y - _35[i].y);
            if (_Cb > _pF) {
                return;
            }
            if (_Cb > _NY) {
                _NY = _Cb;
                _MY = i;
            }
        }
        var _PY = _MY;
        var _QY = _PY + 1 < _lT ? _PY + 1 : 0;
        var _U5 = _35[_PY];
        var _Z1 = _35[_QY];
        if (_NY < _SQ) {
            _SX._RX = 1;
            _SX.type = _PX._UX;
            _SX._QX.x = _OY[_MY].x;
            _SX._QX.y = _OY[_MY].y;
            _SX._LX.x = 0.5 * (_U5.x + _Z1.x);
            _SX._LX.y = 0.5 * (_U5.y + _Z1.y);
            _SX.points[0] = new _KX();
            _SX.points[0]._LX.x = _HY._9U.x;
            _SX.points[0]._LX.y = _HY._9U.y;
            _SX.points[0].id._JT();
            return;
        }
        var _RY = (_LY.x - _U5.x) * (_Z1.x - _U5.x) + (_LY.y - _U5.y) * (_Z1.y - _U5.y);
        var _Y1 = (_LY.x - _Z1.x) * (_U5.x - _Z1.x) + (_LY.y - _Z1.y) * (_U5.y - _Z1.y);
        if (_RY <= 0.0) {
            if (_GS(_LY, _U5) > _pF * _pF) {
                return;
            }
            _SX._RX = 1;
            _SX.type = _PX._UX;
            _SX._QX.x = _LY.x - _U5.x;
            _SX._QX.y = _LY.y - _U5.y;
            _SX._QX._NR();
            _SX._LX.x = _U5.x;
            _SX._LX.y = _U5.y;
            _SX.points[0] = new _KX();
            _SX.points[0]._LX.x = _HY._9U.x;
            _SX.points[0]._LX.y = _HY._9U.y;
            _SX.points[0].id._JT();
        } else if (_Y1 <= 0.0) {
            if (_GS(_LY, _Z1) > _pF * _pF) {
                return;
            }
            _SX._RX = 1;
            _SX.type = _PX._UX;
            _SX._QX.x = _LY.x - _Z1.x;
            _SX._QX.y = _LY.y - _Z1.y;
            _SX._QX._NR();
            _SX._LX.x = _Z1.x;
            _SX._LX.y = _Z1.y;
            _SX.points[0] = new _KX();
            _SX.points[0]._LX.x = _HY._9U.x;
            _SX.points[0]._LX.y = _HY._9U.y;
            _SX.points[0].id._JT();
        } else {
            var _SY = 0.5 * (_U5.x + _Z1.x);
            var _TY = 0.5 * (_U5.y + _Z1.y);
            var _NY = (_LY.x - _SY) * _OY[_PY].x + (_LY.y - _TY) * _OY[_PY].y;
            if (_NY > _pF) {
                return;
            }
            _SX._RX = 1;
            _SX.type = _PX._UX;
            _SX._QX.x = _OY[_PY].x;
            _SX._QX.y = _OY[_PY].y;
            _SX._LX.x = _SY;
            _SX._LX.y = _TY;
            _SX.points[0] = new _KX();
            _SX.points[0]._LX.x = _HY._9U.x;
            _SX.points[0]._LX.y = _HY._9U.y;
            _SX.points[0].id._JT();
        }
    }

    function _UY(_VY, _WY, _XY, _YY, _ZY) {
        var __Y = _WY._AU;
        var _0Z = _YY._AU;
        var _1Z = _WY._SU;
        var _2Z = _WY._zU;
        var _3Z = _YY._zU;
        var _oS = _VS(_ZY, _XY);
        var _iW = 0;
        var _4Z = -_RQ;
        for (var i = 0; i < __Y; ++i) {
            var _a6 = _oS._vt.c * _1Z[i].x - _oS._vt._Cb * _1Z[i].y;
            var _b6 = _oS._vt._Cb * _1Z[i].x + _oS._vt.c * _1Z[i].y;
            var _zi = (_oS._vt.c * _2Z[i].x - _oS._vt._Cb * _2Z[i].y) + _oS._6d.x;
            var _Ci = (_oS._vt._Cb * _2Z[i].x + _oS._vt.c * _2Z[i].y) + _oS._6d.y;
            var _mb = _RQ;
            for (var _k3 = 0; _k3 < _0Z; ++_k3) {
                var _5Z = _a6 * (_3Z[_k3].x - _zi) + _b6 * (_3Z[_k3].y - _Ci);
                if (_5Z < _mb) {
                    _mb = _5Z;
                }
            }
            if (_mb > _4Z) {
                _4Z = _mb;
                _iW = i;
            }
        }
        _VY[0] = _iW;
        return _4Z;
    }

    function _6Z(c, _WY, _XY, _7Z, _YY, _ZY) {
        var _8Z = _WY._SU;
        var _0Z = _YY._AU;
        var _9Z = _YY._zU;
        var _aZ = _YY._SU;
        _PQ(0 <= _7Z && _7Z < _WY._AU);
        var _bZ = _XY._vt.c * _8Z[_7Z].x - _XY._vt._Cb * _8Z[_7Z].y;
        var _cZ = _XY._vt._Cb * _8Z[_7Z].x + _XY._vt.c * _8Z[_7Z].y;
        var _dZ = _ZY._vt.c * _bZ + _ZY._vt._Cb * _cZ;
        var _eZ = -_ZY._vt._Cb * _bZ + _ZY._vt.c * _cZ;
        var index = 0;
        var _fZ = _RQ;
        for (var i = 0; i < _0Z; ++i) {
            var _Nq = _dZ * _aZ[i].x + _eZ * _aZ[i].y;
            if (_Nq < _fZ) {
                _fZ = _Nq;
                index = i;
            }
        }
        var _OU = index;
        var _PU = _OU + 1 < _0Z ? _OU + 1 : 0;
        c[0]._X1.x = (_ZY._vt.c * _9Z[_OU].x - _ZY._vt._Cb * _9Z[_OU].y) + _ZY._6d.x;
        c[0]._X1.y = (_ZY._vt._Cb * _9Z[_OU].x + _ZY._vt.c * _9Z[_OU].y) + _ZY._6d.y;
        c[0].id._mW = _7Z;
        c[0].id._nW = _OU;
        c[0].id._GX = _FX._JX;
        c[0].id._HX = _FX._IX;
        c[1]._X1.x = (_ZY._vt.c * _9Z[_PU].x - _ZY._vt._Cb * _9Z[_PU].y) + _ZY._6d.x;
        c[1]._X1.y = (_ZY._vt._Cb * _9Z[_PU].x + _ZY._vt.c * _9Z[_PU].y) + _ZY._6d.y;
        c[1].id._mW = _7Z;
        c[1].id._nW = _PU;
        c[1].id._GX = _FX._JX;
        c[1].id._HX = _FX._IX;
    }

    function _gZ(_SX, _hZ, _2Y, _iZ, _4Y) {
        _SX._RX = 0;
        var _jZ = _hZ._RT + _iZ._RT;
        var _kZ = [0];
        var _lZ = _UY(_kZ, _hZ, _2Y, _iZ, _4Y);
        if (_lZ > _jZ) return;
        var _mZ = [0];
        var _nZ = _UY(_mZ, _iZ, _4Y, _hZ, _2Y);
        if (_nZ > _jZ) return;
        var _WY;
        var _YY;
        var _XY, _ZY;
        var _7Z = 0;
        var _oZ = 0;
        var _pZ = 0.1 * _YQ;
        if (_nZ > _lZ + _pZ) {
            _WY = _iZ;
            _YY = _hZ;
            _XY = _4Y;
            _ZY = _2Y;
            _7Z = _mZ[0];
            _SX.type = _PX._VX;
            _oZ = 1;
        } else {
            _WY = _hZ;
            _YY = _iZ;
            _XY = _2Y;
            _ZY = _4Y;
            _7Z = _kZ[0];
            _SX.type = _PX._UX;
            _oZ = 0;
        }
        _6Z(_gZ._qZ, _WY, _XY, _7Z, _YY, _ZY);
        var __Y = _WY._AU;
        var _rZ = _WY._zU;
        var _sZ = _7Z;
        var _tZ = _7Z + 1 < __Y ? _7Z + 1 : 0;
        var _uZ = _rZ[_sZ];
        var _vZ = _rZ[_tZ];
        _gZ._wZ.x = _vZ.x - _uZ.x;
        _gZ._wZ.y = _vZ.y - _uZ.y;
        _gZ._wZ._NR();
        var _xZ = 1.0 * _gZ._wZ.y;
        var _yZ = -1.0 * _gZ._wZ.x;
        var _eY = 0.5 * (_uZ.x + _vZ.x);
        var _fY = 0.5 * (_uZ.y + _vZ.y);
        var _zZ = _XY._vt.c * _gZ._wZ.x - _XY._vt._Cb * _gZ._wZ.y;
        var _AZ = _XY._vt._Cb * _gZ._wZ.x + _XY._vt.c * _gZ._wZ.y;
        var _BZ = 1.0 * _AZ;
        var _CZ = -1.0 * _zZ;
        _uZ = _QS(_XY, _uZ);
        _vZ = _QS(_XY, _vZ);
        var _DZ = _BZ * _uZ.x + _CZ * _uZ.y;
        var _EZ = -(_zZ * _uZ.x + _AZ * _uZ.y) + _jZ;
        var _FZ = (_zZ * _vZ.x + _AZ * _vZ.y) + _jZ;
        var _GZ = new Array(2);
        var _HZ = new Array(2);
        var _IZ;
        _IZ = _JZ(_GZ, _gZ._qZ, -_zZ, -_AZ, _EZ, _sZ);
        if (_IZ < 2) return;
        _IZ = _JZ(_HZ, _GZ, _zZ, _AZ, _FZ, _tZ);
        if (_IZ < 2) {
            return;
        }
        _SX._QX.x = _xZ;
        _SX._QX.y = _yZ;
        _SX._LX.x = _eY;
        _SX._LX.y = _fY;
        var _RX = 0;
        for (var i = 0; i < _UQ; ++i) {
            var _NY = (_BZ * _HZ[i]._X1.x + _CZ * _HZ[i]._X1.y) - _DZ;
            if (_NY <= _jZ) {
                var _KZ = _SX.points[_RX] = new _KX();
                _KZ._LX._Zy(_SS(_ZY, _HZ[i]._X1));
                _KZ.id._Zy(_HZ[i].id);
                if (_oZ) {
                    var _LZ = new _FX();
                    _LZ._Zy(_KZ.id);
                    _KZ.id._mW = _LZ._nW;
                    _KZ.id._nW = _LZ._mW;
                    _KZ.id._GX = _LZ._HX;
                    _KZ.id._HX = _LZ._GX;
                }++_RX;
            }
        }
        _SX._RX = _RX;
    }
    _gZ._wZ = new _DR();
    _gZ._qZ = [new _nY(), new _nY()];

    function _MZ(_SX, _kZ, _2Y, _HY, _4Y) {
        _SX._RX = 0;
        var _NZ = _SS(_2Y, _QS(_4Y, _HY._9U));
        var _QQ = _kZ._mU,
            _0S = _kZ._nU;
        var _xq = _0S.x - _QQ.x;
        var _YR = _0S.y - _QQ.y;
        var _W1 = _xq * (_0S.x - _NZ.x) + _YR * (_0S.y - _NZ.y);
        var _X1 = _xq * (_NZ.x - _QQ.x) + _YR * (_NZ.y - _QQ.y);
        var _pF = _kZ._RT + _HY._RT;
        var _LZ = new _FX();
        _LZ._nW = 0;
        _LZ._HX = _FX._IX;
        if (_X1 <= 0.0) {
            var _OZ = _QQ;
            var _A5 = _NZ.x - _OZ.x;
            var _B5 = _NZ.y - _OZ.y;
            var _Iv = _A5 * _A5 + _B5 * _B5;
            if (_Iv > _pF * _pF) {
                return;
            }
            if (_kZ._pU) {
                var _PZ = _kZ._lU;
                var _QZ = _QQ;
                var _RZ = _QZ.x - _PZ.x;
                var _SZ = _QZ.y - _PZ.y;
                var _RY = _RZ * (_QZ.x - _NZ.x) + _SZ * (_QZ.y - _NZ.y);
                if (_RY > 0.0) {
                    return;
                }
            }
            _LZ._mW = 0;
            _LZ._GX = _FX._IX;
            _SX._RX = 1;
            _SX.type = _PX._TX;
            _SX._QX.x = _SX._QX.y = 0;
            _SX._LX.x = _OZ.x;
            _SX._LX.y = _OZ.y;
            _SX.points[0] = new _KX();
            _SX.points[0].id._Zy(_LZ);
            _SX.points[0]._LX.x = _HY._9U.x;
            _SX.points[0]._LX.y = _HY._9U.y;
            return;
        }
        if (_W1 <= 0.0) {
            var _OZ = _0S;
            var _A5 = _NZ.x - _OZ.x;
            var _B5 = _NZ.y - _OZ.y;
            var _Iv = _A5 * _A5 + _B5 * _B5;
            if (_Iv > _pF * _pF) {
                return;
            }
            if (_kZ._qU) {
                var _TZ = _kZ._oU;
                var _UZ = _0S;
                var _VZ = _TZ.x - _UZ.x;
                var _WZ = _TZ.y - _UZ.y;
                var _Z1 = _VZ * (_NZ.x - _UZ.x) + _WZ * (_NZ.y - _UZ.y);
                if (_Z1 > 0.0) {
                    return;
                }
            }
            _LZ._mW = 1;
            _LZ._GX = _FX._IX;
            _SX._RX = 1;
            _SX.type = _PX._TX;
            _SX._QX.x = _SX._QX.y = 0;
            _SX._LX.x = _OZ.x;
            _SX._LX.y = _OZ.y;
            _SX.points[0] = new _KX();
            _SX.points[0].id._Zy(_LZ);
            _SX.points[0]._LX.x = _HY._9U.x;
            _SX.points[0]._LX.y = _HY._9U.y;
            return;
        }
        var _XZ = _xq * _xq + _YR * _YR;
        _PQ(_XZ > 0.0);
        var _YZ = (1.0 / _XZ) * ((_W1 * _QQ.x) + (_X1 * _0S.x));
        var _ZZ = (1.0 / _XZ) * ((_W1 * _QQ.y) + (_X1 * _0S.y));
        var _A5 = _NZ.x - _YZ;
        var _B5 = _NZ.y - _ZZ;
        var _Iv = _A5 * _A5 + _B5 * _B5;
        if (_Iv > _pF * _pF) {
            return;
        }
        var _a6 = -_YR;
        var _b6 = _xq;
        if (_a6 * (_NZ.x - _QQ.x) + _b6 * (_NZ.y - _QQ.y) < 0.0) {
            _a6 = -_a6;
            _b6 = -_b6;
        }
        _LZ._mW = 0;
        _LZ._GX = _FX._JX;
        _SX._RX = 1;
        _SX.type = _PX._UX;
        _SX._QX.x = _a6;
        _SX._QX.y = _b6;
        _SX._QX._NR();
        _SX._LX.x = _QQ.x;
        _SX._LX.y = _QQ.y;
        _SX.points[0] = new _KX();
        _SX.points[0].id._Zy(_LZ);
        _SX.points[0]._LX.x = _HY._9U.x;
        _SX.points[0]._LX.y = _HY._9U.y;
    }

    function __Z() {
        this.type = 0;
        this.index = 0;
        this._NY = 0;
    }
    __Z._0_ = 0;
    __Z._1_ = 1;
    __Z._2_ = 2;

    function _3_() {
        this._35 = new Array(_VQ);
        this._OY = new Array(_VQ);
        this._n4 = 0;
    };

    function _4_() {
        this._OU = 0, this._PU = 0;
        this._U5 = new _DR(), this._Z1 = new _DR();
        this._2U = new _DR();
        this._5_ = new _DR();
        this._EZ = 0;
        this._6_ = new _DR();
        this._FZ = 0;
    };

    function _7_() {
        this._8_ = new _3_();
        this._9_ = new _nS();
        this._a_ = new _DR();
        this._b_ = new _DR(), this._c_ = new _DR(), this._d_ = new _DR(), this._e_ = new _DR();
        this._f_ = new _DR(), this._g_ = new _DR(), this._h_ = new _DR();
        this._i_ = new _DR();
        this._j_ = 0, this._k_ = 0;
        this._l_ = new _DR(), this._m_ = new _DR();
        this._RT = 0;
        this._n_ = false;
    }
    _7_._o_ = new _DR();
    _7_._p_ = new _DR();
    _7_._q_ = new _DR();
    _7_.prototype = {
        _r_: function(_SX, _kZ, _2Y, _s_, _4Y) {
            this._9_._Zy(_VS(_2Y, _4Y));
            this._a_.x = (this._9_._vt.c * _s_._RU.x - this._9_._vt._Cb * _s_._RU.y) + this._9_._6d.x;
            this._a_.y = (this._9_._vt._Cb * _s_._RU.x + this._9_._vt.c * _s_._RU.y) + this._9_._6d.y;
            this._b_.x = _kZ._lU.x;
            this._b_.y = _kZ._lU.y;
            this._c_.x = _kZ._mU.x;
            this._c_.y = _kZ._mU.y;
            this._d_.x = _kZ._nU.x;
            this._d_.y = _kZ._nU.y;
            this._e_.x = _kZ._oU.x;
            this._e_.y = _kZ._oU.y;
            var _t_ = _kZ._pU;
            var _u_ = _kZ._qU;
            _7_._o_.x = this._d_.x - this._c_.x;
            _7_._o_.y = this._d_.y - this._c_.y;
            _7_._o_._NR();
            this._g_.x = _7_._o_.y;
            this._g_.y = -_7_._o_.x;
            var _v_ = this._g_.x * (this._a_.x - this._c_.x) + this._g_.y * (this._a_.y - this._c_.y);
            var _w_ = 0.0,
                _x_ = 0.0;
            var _y_ = false,
                _z_ = false;
            if (_t_) {
                _7_._p_.x = this._c_.x - this._b_.x;
                _7_._p_.y = this._c_.y - this._b_.y;
                _7_._p_._NR();
                this._f_.x = _7_._p_.y;
                this._f_.y = -_7_._p_.x;
                _y_ = (_7_._p_.x * _7_._o_.y - _7_._p_.y * _7_._o_.x) >= 0;
                _w_ = this._f_.x * (this._a_.x - this._b_.x) + this._f_.y * (this._a_.y - this._b_.y);
            }
            if (_u_) {
                _7_._q_.x = this._e_.x - this._d_.x;
                _7_._q_.y = this._e_.y - this._d_.y;
                _7_._q_._NR();
                this._h_.x = _7_._q_.y;
                this._h_.y = -_7_._q_.x;
                _z_ = (_7_._o_.x * _7_._q_.y - _7_._o_.y * _7_._q_.x) > 0.0;
                _x_ = this._h_.x * (this._a_.x - this._d_.x) + this._h_.y * (this._a_.y - this._d_.y);
            }
            if (_t_ && _u_) {
                if (_y_ && _z_) {
                    this._n_ = _w_ >= 0.0 || _v_ >= 0.0 || _x_ >= 0.0;
                    if (this._n_) {
                        this._i_.x = this._g_.x;
                        this._i_.y = this._g_.y;
                        this._l_.x = this._f_.x;
                        this._l_.y = this._f_.y;
                        this._m_.x = this._h_.x;
                        this._m_.y = this._h_.y;
                    } else {
                        this._i_.x = -this._g_.x;
                        this._i_.y = -this._g_.y;
                        this._l_.x = -this._g_.x;
                        this._l_.y = -this._g_.y;
                        this._m_.x = -this._g_.x;
                        this._m_.y = -this._g_.y;
                    }
                } else if (_y_) {
                    this._n_ = _w_ >= 0.0 || (_v_ >= 0.0 && _x_ >= 0.0);
                    if (this._n_) {
                        this._i_.x = this._g_.x;
                        this._i_.y = this._g_.y;
                        this._l_.x = this._f_.x;
                        this._l_.y = this._f_.y;
                        this._m_.x = this._g_.x;
                        this._m_.y = this._g_.y;
                    } else {
                        this._i_.x = -this._g_.x;
                        this._i_.y = -this._g_.y;
                        this._l_.x = -this._h_.x;
                        this._l_.y = -this._h_.y;
                        this._m_.x = -this._g_.x;
                        this._m_.y = -this._g_.y;
                    }
                } else if (_z_) {
                    this._n_ = _x_ >= 0.0 || (_w_ >= 0.0 && _v_ >= 0.0);
                    if (this._n_) {
                        this._i_.x = this._g_.x;
                        this._i_.y = this._g_.y;
                        this._l_.x = this._g_.x;
                        this._l_.y = this._g_.y;
                        this._m_.x = this._h_.x;
                        this._m_.y = this._h_.y;
                    } else {
                        this._i_.x = -this._g_.x;
                        this._i_.y = -this._g_.y;
                        this._l_.x = -this._g_.x;
                        this._l_.y = -this._g_.y;
                        this._m_.x = -this._f_.x;
                        this._m_.y = -this._f_.y;
                    }
                } else {
                    this._n_ = _w_ >= 0.0 && _v_ >= 0.0 && _x_ >= 0.0;
                    if (this._n_) {
                        this._i_.x = this._g_.x;
                        this._i_.y = this._g_.y;
                        this._l_.x = this._g_.x;
                        this._l_.y = this._g_.y;
                        this._m_.x = this._g_.x;
                        this._m_.y = this._g_.y;
                    } else {
                        this._i_.x = -this._g_.x;
                        this._i_.y = -this._g_.y;
                        this._l_.x = -this._h_.x;
                        this._l_.y = -this._h_.y;
                        this._m_.x = -this._f_.x;
                        this._m_.y = -this._f_.y;
                    }
                }
            } else if (_t_) {
                if (_y_) {
                    this._n_ = _w_ >= 0.0 || _v_ >= 0.0;
                    if (this._n_) {
                        this._i_.x = this._g_.x;
                        this._i_.y = this._g_.y;
                        this._l_.x = this._f_.x;
                        this._l_.y = this._f_.y;
                        this._m_.x = -this._g_.x;
                        this._m_.y = -this._g_.y;
                    } else {
                        this._i_.x = -this._g_.x;
                        this._i_.y = -this._g_.y;
                        this._l_.x = this._g_.x;
                        this._l_.y = this._g_.y;
                        this._m_.x = -this._g_.x;
                        this._m_.y = -this._g_.y;
                    }
                } else {
                    this._n_ = _w_ >= 0.0 && _v_ >= 0.0;
                    if (this._n_) {
                        this._i_.x = this._g_.x;
                        this._i_.y = this._g_.y;
                        this._l_.x = this._g_.x;
                        this._l_.y = this._g_.y;
                        this._m_.x = -this._g_.x;
                        this._m_.y = -this._g_.y;
                    } else {
                        this._i_.x = -this._g_.x;
                        this._i_.y = -this._g_.y;
                        this._l_.x = this._g_.x;
                        this._l_.y = this._g_.y;
                        this._m_.x = -this._f_.x;
                        this._m_.y = -this._f_.y;
                    }
                }
            } else if (_u_) {
                if (_z_) {
                    this._n_ = _v_ >= 0.0 || _x_ >= 0.0;
                    if (this._n_) {
                        this._i_.x = this._g_.x;
                        this._i_.y = this._g_.y;
                        this._l_.x = -this._g_.x;
                        this._l_.y = -this._g_.y;
                        this._m_.x = this._h_.x;
                        this._m_.y = this._h_.y;
                    } else {
                        this._i_.x = -this._g_.x;
                        this._i_.y = -this._g_.y;
                        this._l_.x = -this._g_.x;
                        this._l_.y = -this._g_.y;
                        this._m_.x = this._g_.x;
                        this._m_.y = this._g_.y;
                    }
                } else {
                    this._n_ = _v_ >= 0.0 && _x_ >= 0.0;
                    if (this._n_) {
                        this._i_.x = this._g_.x;
                        this._i_.y = this._g_.y;
                        this._l_.x = -this._g_.x;
                        this._l_.y = -this._g_.y;
                        this._m_.x = this._g_.x;
                        this._m_.y = this._g_.y;
                    } else {
                        this._i_.x = -this._g_.x;
                        this._i_.y = -this._g_.y;
                        this._l_.x = -this._h_.x;
                        this._l_.y = -this._h_.y;
                        this._m_.x = this._g_.x;
                        this._m_.y = this._g_.y;
                    }
                }
            } else {
                this._n_ = _v_ >= 0.0;
                if (this._n_) {
                    this._i_.x = this._g_.x;
                    this._i_.y = this._g_.y;
                    this._l_.x = -this._g_.x;
                    this._l_.y = -this._g_.y;
                    this._m_.x = -this._g_.x;
                    this._m_.y = -this._g_.y;
                } else {
                    this._i_.x = -this._g_.x;
                    this._i_.y = -this._g_.y;
                    this._l_.x = this._g_.x;
                    this._l_.y = this._g_.y;
                    this._m_.x = this._g_.x;
                    this._m_.y = this._g_.y;
                }
            }
            this._8_._n4 = _s_._AU;
            for (var i = 0; i < _s_._AU; ++i) {
                this._8_._35[i] = _QS(this._9_, _s_._zU[i]);
                this._8_._OY[i] = _OS(this._9_._vt, _s_._SU[i]);
            }
            this._RT = 2.0 * __Q;
            _SX._RX = 0;
            var _A_ = this._B_();
            if (_A_.type == __Z._0_) {
                return;
            }
            if (_A_._NY > this._RT) {
                return;
            }
            var _C_ = this._D_();
            if (_C_.type != __Z._0_ && _C_._NY > this._RT) {
                return;
            }
            var _E_ = 0.98;
            var _F_ = 0.001;
            var _G_ = new __Z();
            if (_C_.type == __Z._0_) {
                _G_ = _A_;
            } else if (_C_._NY > _E_ * _A_._NY + _F_) {
                _G_ = _C_;
            } else {
                _G_ = _A_;
            }
            var __U = new Array(2);
            var _H_ = new _4_();
            if (_G_.type == __Z._1_) {
                _SX.type = _PX._UX;
                var _iW = 0;
                var _jW = this._i_.x * this._8_._OY[0].x + this._i_.y * this._8_._OY[0].y;
                for (var i = 1; i < this._8_._n4; ++i) {
                    var value = this._i_.x * this._8_._OY[i].x + this._i_.y * this._8_._OY[i].y;
                    if (value < _jW) {
                        _jW = value;
                        _iW = i;
                    }
                }
                var _OU = _iW;
                var _PU = _OU + 1 < this._8_._n4 ? _OU + 1 : 0;
                __U[0] = new _nY();
                __U[0]._X1.x = this._8_._35[_OU].x;
                __U[0]._X1.y = this._8_._35[_OU].y;
                __U[0].id._mW = 0;
                __U[0].id._nW = _OU;
                __U[0].id._GX = _FX._JX;
                __U[0].id._HX = _FX._IX;
                __U[1] = new _nY();
                __U[1]._X1.x = this._8_._35[_PU].x;
                __U[1]._X1.y = this._8_._35[_PU].y;
                __U[1].id._mW = 0;
                __U[1].id._nW = _PU;
                __U[1].id._GX = _FX._JX;
                __U[1].id._HX = _FX._IX;
                if (this._n_) {
                    _H_._OU = 0;
                    _H_._PU = 1;
                    _H_._U5.x = this._c_.x;
                    _H_._U5.y = this._c_.y;
                    _H_._Z1.x = this._d_.x;
                    _H_._Z1.y = this._d_.y;
                    _H_._2U.x = this._g_.x;
                    _H_._2U.y = this._g_.y;
                } else {
                    _H_._OU = 1;
                    _H_._PU = 0;
                    _H_._U5.x = this._d_.x;
                    _H_._U5.y = this._d_.y;
                    _H_._Z1.x = this._c_.x;
                    _H_._Z1.y = this._c_.y;
                    _H_._2U.x = -this._g_.x;
                    _H_._2U.y = -this._g_.y;
                }
            } else {
                _SX.type = _PX._VX;
                __U[0] = new _nY();
                __U[0]._X1 = this._c_;
                __U[0].id._mW = 0;
                __U[0].id._nW = _G_.index;
                __U[0].id._GX = _FX._IX;
                __U[0].id._HX = _FX._JX;
                __U[1] = new _nY();
                __U[1]._X1 = this._d_;
                __U[1].id._mW = 0;
                __U[1].id._nW = _G_.index;
                __U[1].id._GX = _FX._IX;
                __U[1].id._HX = _FX._JX;
                _H_._OU = _G_.index;
                _H_._PU = _H_._OU + 1 < this._8_._n4 ? _H_._OU + 1 : 0;
                _H_._U5.x = this._8_._35[_H_._OU].x;
                _H_._U5.y = this._8_._35[_H_._OU].y;
                _H_._Z1.x = this._8_._35[_H_._PU].x;
                _H_._Z1.y = this._8_._35[_H_._PU].y;
                _H_._2U.x = this._8_._OY[_H_._OU].x;
                _H_._2U.y = this._8_._OY[_H_._OU].y;
            }
            _H_._5_.x = _H_._2U.y;
            _H_._5_.y = -_H_._2U.x;
            _H_._6_.x = -_H_._5_.x;
            _H_._6_.y = -_H_._5_.y;
            _H_._EZ = _H_._5_.x * _H_._U5.x + _H_._5_.y * _H_._U5.y;
            _H_._FZ = _H_._6_.x * _H_._Z1.x + _H_._6_.y * _H_._Z1.y;
            var _GZ = new Array(2);
            var _HZ = new Array(2);
            var _IZ;
            _IZ = _JZ(_GZ, __U, _H_._5_.x, _H_._5_.y, _H_._EZ, _H_._OU);
            if (_IZ < _UQ) {
                return;
            }
            _IZ = _JZ(_HZ, _GZ, _H_._6_.x, _H_._6_.y, _H_._FZ, _H_._PU);
            if (_IZ < _UQ) {
                return;
            }
            if (_G_.type == __Z._1_) {
                _SX._QX.x = _H_._2U.x;
                _SX._QX.y = _H_._2U.y;
                _SX._LX.x = _H_._U5.x;
                _SX._LX.y = _H_._U5.y;
            } else {
                _SX._QX.x = _s_._SU[_H_._OU].x;
                _SX._QX.y = _s_._SU[_H_._OU].y;
                _SX._LX.x = _s_._zU[_H_._OU].x;
                _SX._LX.y = _s_._zU[_H_._OU].y;
            }
            var _RX = 0;
            for (var i = 0; i < _UQ; ++i) {
                var _NY = _H_._2U.x * (_HZ[i]._X1.x - _H_._U5.x) + _H_._2U.y * (_HZ[i]._X1.y - _H_._U5.y);
                if (_NY <= this._RT) {
                    var _KZ = _SX.points[_RX] = new _KX();
                    if (_G_.type == __Z._1_) {
                        _KZ._LX._Zy(_SS(this._9_, _HZ[i]._X1));
                        _KZ.id._Zy(_HZ[i].id);
                    } else {
                        _KZ._LX.x = _HZ[i]._X1.x;
                        _KZ._LX.y = _HZ[i]._X1.y;
                        _KZ.id._GX = _HZ[i].id._HX;
                        _KZ.id._HX = _HZ[i].id._GX;
                        _KZ.id._mW = _HZ[i].id._nW;
                        _KZ.id._nW = _HZ[i].id._mW;
                    }++_RX;
                }
            }
            _SX._RX = _RX;
        },
        _B_: function() {
            var _qT = new __Z();
            _qT.type = __Z._1_;
            _qT.index = this._n_ ? 0 : 1;
            _qT._NY = Number.MAX_VALUE;
            for (var i = 0; i < this._8_._n4; ++i) {
                var _Cb = this._i_.x * (this._8_._35[i].x - this._c_.x) + this._i_.y * (this._8_._35[i].y - this._c_.y);
                if (_Cb < _qT._NY) {
                    _qT._NY = _Cb;
                }
            }
            return _qT;
        },
        _D_: function() {
            var _qT = new __Z();
            _qT.type = __Z._0_;
            _qT.index = -1;
            _qT._NY = -Number.MAX_VALUE;
            var _I_ = -this._i_.y;
            var _J_ = this._i_.x;
            for (var i = 0; i < this._8_._n4; ++i) {
                var _a6 = -this._8_._OY[i].x;
                var _b6 = -this._8_._OY[i].y;
                var _Jm = _a6 * (this._8_._35[i].x - this._c_.x) + _b6 * (this._8_._35[i].y - this._c_.y);
                var _Km = _a6 * (this._8_._35[i].x - this._d_.x) + _b6 * (this._8_._35[i].y - this._d_.y);
                var _Cb = _0T(_Jm, _Km);
                if (_Cb > this._RT) {
                    _qT.type = __Z._2_;
                    _qT.index = i;
                    _qT._NY = _Cb;
                    return _qT;
                }
                if (_a6 * _I_ + _b6 * _J_ >= 0.0) {
                    if ((_a6 - this._m_.x) * this._i_.x + (_b6 - this._m_.y) * this._i_.y < -_ZQ) {
                        continue;
                    }
                } else {
                    if ((_a6 - this._l_.x) * this._i_.x + (_b6 - this._l_.y) * this._i_.y < -_ZQ) {
                        continue;
                    }
                }
                if (_Cb > _qT._NY) {
                    _qT.type = __Z._2_;
                    _qT.index = i;
                    _qT._NY = _Cb;
                }
            }
            return _qT;
        }
    };
    _7_._K_ = 0;
    _7_._L_ = 1;
    _7_._M_ = 2;

    function _N_(_SX, _kZ, _2Y, _s_, _4Y) {
        _N_._O_._r_(_SX, _kZ, _2Y, _s_, _4Y);
    }
    _N_._O_ = new _7_();

    function _JZ(_P_, _Q_, _BZ, _CZ, offset, _R_) {
        var _S_ = 0;
        var _T_ = (_BZ * _Q_[0]._X1.x + _CZ * _Q_[0]._X1.y) - offset;
        var _U_ = (_BZ * _Q_[1]._X1.x + _CZ * _Q_[1]._X1.y) - offset;
        if (_T_ <= 0.0) _P_[_S_++] = _Q_[0];
        if (_U_ <= 0.0) _P_[_S_++] = _Q_[1];
        if (_T_ * _U_ < 0.0) {
            var _V_ = _T_ / (_T_ - _U_);
            _P_[_S_] = new _nY();
            _P_[_S_]._X1.x = _Q_[0]._X1.x + (_V_ * (_Q_[1]._X1.x - _Q_[0]._X1.x));
            _P_[_S_]._X1.y = _Q_[0]._X1.y + (_V_ * (_Q_[1]._X1.y - _Q_[0]._X1.y));
            _P_[_S_].id._mW = _R_;
            _P_[_S_].id._nW = _Q_[0].id._nW;
            _P_[_S_].id._GX = _FX._IX;
            _P_[_S_].id._HX = _FX._JX;
            ++_S_;
        }
        return _S_;
    }

    function _W_(_X_, _mW, _Y_, _nW, _2Y, _4Y) {
        _W_._pt._pW._7b(_X_, _mW);
        _W_._pt._qW._7b(_Y_, _nW);
        _W_._pt._rW = _2Y;
        _W_._pt._sW = _4Y;
        _W_._pt._tW = true;
        _W_._m4._n4 = 0;
        _nX(_W_._rt, _W_._m4, _W_._pt);
        return _W_._rt._1U < 10.0 * _SQ;
    }
    _W_._pt = new _oW();
    _W_._m4 = new _kW();
    _W_._rt = new _uW();

    function _VV(_Z4, _g3) {
        return !((_g3._dU.x - _Z4._eU.x) > 0.0 || (_g3._dU.y - _Z4._eU.y) > 0.0 || (_Z4._dU.x - _g3._eU.x) > 0.0 || (_Z4._dU.y - _g3._eU.y) > 0.0);
    }
    var _Z_ = -1;

    function ___() {
        this._YT = new _qY();
        this._JV = null;
        this.parent = 0;
        this._001 = this._101 = this.height = 0;
    }
    ___.prototype = {
        _201: function() {
            return this._001 == _Z_;
        }
    };

    function _BV() {
        this._301 = _Z_;
        this._401 = 16;
        this._501 = 0;
        this._601 = new Array(this._401);
        for (var i = 0; i < this._401 - 1; ++i) {
            this._601[i] = new ___();
            this._601[i].parent = i + 1;
            this._601[i].height = -1;
        }
        this._601[this._401 - 1] = new ___();
        this._601[this._401 - 1].parent = _Z_;
        this._601[this._401 - 1].height = -1;
        this._701 = 0;
        this._801 = 0;
        this._901 = 0;
    }
    _BV._a01 = new _DR(_WQ, _WQ);
    _BV.prototype = {
        _IV: function(_YT, _JV) {
            var _KV = this._b01();
            this._601[_KV]._YT._dU._Zy(_DR._KR(_YT._dU, _BV._a01));
            this._601[_KV]._YT._eU._Zy(_DR._1b(_YT._eU, _BV._a01));
            this._601[_KV]._JV = _JV;
            this._601[_KV].height = 0;
            this._c01(_KV);
            return _KV;
        },
        _MV: function(_KV) {
            _PQ(0 <= _KV && _KV < this._401);
            _PQ(this._601[_KV]._201());
            this._d01(_KV);
            this._e01(_KV);
        },
        _OV: function(_KV, _YT, _PV) {
            _PQ(0 <= _KV && _KV < this._401);
            _PQ(this._601[_KV]._201());
            if (this._601[_KV]._YT._yY(_YT)) {
                return false;
            }
            this._d01(_KV);
            this._601[_KV]._YT._Zy(_YT);
            this._601[_KV]._YT._dU._KR(_BV._a01);
            this._601[_KV]._YT._eU._1b(_BV._a01);
            var _Cd = _DR._im(_XQ, _PV);
            if (_Cd.x < 0.0) {
                this._601[_KV]._YT._dU.x += _Cd.x;
            } else {
                this._601[_KV]._YT._eU.x += _Cd.x;
            }
            if (_Cd.y < 0.0) {
                this._601[_KV]._YT._dU.y += _Cd.y;
            } else {
                this._601[_KV]._YT._eU.y += _Cd.y;
            }
            this._c01(_KV);
            return true;
        },
        _SV: function(_KV) {
            _PQ(0 <= _KV && _KV < this._401);
            return this._601[_KV]._JV;
        },
        _RV: function(_KV) {
            _PQ(0 <= _KV && _KV < this._401);
            return this._601[_KV]._YT;
        },
        _0W: function(_YV, _YT) {
            var _bd = [];
            _bd.push(this._301);
            while (_bd.length > 0) {
                var _f01 = _bd.pop();
                if (_f01 == _Z_) {
                    continue;
                }
                var _2d = this._601[_f01];
                if (_VV(_2d._YT, _YT)) {
                    if (_2d._201()) {
                        var _g01 = _YV._dW(_f01);
                        if (_g01 == false) {
                            return;
                        }
                    } else {
                        _bd.push(_2d._001);
                        _bd.push(_2d._101);
                    }
                }
            }
        },
        _VT: function(_YV, _pt) {
            var _sT = _pt._sT;
            var _tT = _pt._tT;
            var _d3 = _DR._KR(_tT, _sT);
            _PQ(_d3._MR() > 0.0);
            _d3._NR();
            var _X1 = _CS(1.0,
                _d3);
            var _h01 = _ZS(_X1);
            var _bU = _pt._bU;
            var _i01 = new _qY(); {
                var _f3 = _DR._1b(_sT, _DR._im(_bU, _DR._KR(_tT, _sT)));
                _i01._dU._Zy(_1T(_sT, _f3));
                _i01._eU._Zy(_3T(_sT, _f3));
            }
            var _bd = [];
            _bd.push(this._301);
            while (_bd.length > 0) {
                var _f01 = _bd.pop();
                if (_f01 == _Z_) {
                    continue;
                }
                var _2d = this._601[_f01];
                if (_VV(_2d._YT, _i01) == false) {
                    continue;
                }
                var c = _2d._YT._sY();
                var h = _2d._YT._tY();
                var _NY = _YS(_zS(_X1, _DR._KR(_sT, c))) - _zS(_h01, h);
                if (_NY > 0.0) {
                    continue;
                }
                if (_2d._201()) {
                    var _j01 = new _oY();
                    _j01._sT._Zy(_pt._sT);
                    _j01._tT._Zy(_pt._tT);
                    _j01._bU = _bU;
                    var value = _YV._k01(_j01, _f01);
                    if (value == 0.0) {
                        return;
                    }
                    if (value > 0.0) {
                        _bU = value;
                        var _f3 = _DR._1b(_sT, _DR._im(_bU, _DR._KR(_tT, _sT)));
                        _i01._dU._Zy(_1T(_sT, _f3));
                        _i01._eU._Zy(_3T(_sT, _f3));
                    }
                } else {
                    _bd.push(_2d._001);
                    _bd.push(_2d._101);
                }
            }
        },
        _jV: function() {
            this._l01(this._301);
            this._m01(this._301);
            var _n01 = 0;
            var _o01 = this._701;
            while (_o01 != _Z_) {
                _PQ(0 <= _o01 && _o01 < this._401);
                _o01 = this._601[_o01].parent;
                ++_n01;
            }
            _PQ(this._nB() == this._p01());
            _PQ(this._501 + _n01 == this._401);
        },
        _nB: function() {
            if (this._301 == _Z_) {
                return 0;
            }
            return this._601[this._301].height;
        },
        _8W: function() {
            var _q01 = 0;
            for (var i = 0; i < this._401; ++i) {
                var _2d = this._601[i];
                if (_2d.height <= 1) {
                    continue;
                }
                _PQ(_2d._201() == false);
                var _001 = _2d._001;
                var _101 = _2d._101;
                var _r01 = _YS(this._601[_101].height - this._601[_001].height);
                _q01 = _2T(_q01, _r01);
            }
            return _q01;
        },
        _aW: function() {
            if (this._301 == _Z_) {
                return 0.0;
            }
            var _31 = this._601[this._301];
            var _s01 = _31._YT._uY();
            var _t01 = 0.0;
            for (var i = 0; i < this._401; ++i) {
                var _2d = this._601[i];
                if (_2d.height < 0) {
                    continue;
                }
                _t01 += _2d._YT._uY();
            }
            return _t01 / _s01;
        },
        _u01: function() {
            var _v01 = new Array(this._501);
            var _n4 = 0;
            for (var i = 0; i < this._401; ++i) {
                if (this._601[i].height < 0) {
                    continue;
                }
                if (this._601[i]._201()) {
                    this._601[i].parent = _Z_;
                    _v01[_n4] = i;
                    ++_n4;
                } else {
                    this._e01(i);
                }
            }
            while (_n4 > 1) {
                var _w01 = _RQ;
                var _x01 = -1,
                    _y01 = -1;
                for (i = 0; i < _n4; ++i) {
                    var _z01 = this._601[_v01[i]]._YT;
                    for (var _k3 = i + 1; _k3 < _n4; ++_k3) {
                        var _A01 = this._601[_v01[_k3]]._YT;
                        var _g3 = new _qY();
                        _g3._vY(_z01, _A01);
                        var _B01 = _g3._uY();
                        if (_B01 < _w01) {
                            _x01 = i;
                            _y01 = _k3;
                            _w01 = _B01;
                        }
                    }
                }
                var _C01 = _v01[_x01];
                var _D01 = _v01[_y01];
                var _001 = this._601[_C01];
                var _101 = this._601[_D01];
                var _E01 = this._b01();
                var parent = this._601[_E01];
                parent._001 = _C01;
                parent._101 = _D01;
                parent.height = 1 + _2T(_001.height, _101.height);
                parent._YT._vY(_001._YT, _101._YT);
                parent.parent = _Z_;
                _001.parent = _E01;
                _101.parent = _E01;
                _v01[_y01] = _v01[_n4 - 1];
                _v01[_x01] = _E01;
                --_n4;
            }
            this._301 = _v01[0];
            this._jV();
        },
        _bW: function(_cW) {
            for (var i = 0; i < this._401; ++i) {
                this._601[i]._YT._dU._KR(_cW);
                this._601[i]._YT._eU._KR(_cW);
            }
        },
        _b01: function() {
            if (this._701 == _Z_) {
                _PQ(this._501 == this._401);
                var _F01 = this._601;
                this._401 *= 2;
                this._601 = _F01.concat(new Array(this._401 - this._501));
                for (var i = this._501; i < this._401 - 1; ++i) {
                    this._601[i] = new ___();
                    this._601[i].parent = i + 1;
                    this._601[i].height = -1;
                }
                this._601[this._401 - 1] = new ___();
                this._601[this._401 - 1].parent = _Z_;
                this._601[this._401 - 1].height = -1;
                this._701 = this._501;
            }
            var _f01 = this._701;
            this._701 = this._601[_f01].parent;
            this._601[_f01].parent = _Z_;
            this._601[_f01]._001 = _Z_;
            this._601[_f01]._101 = _Z_;
            this._601[_f01].height = 0;
            this._601[_f01]._JV = null;
            ++this._501;
            return _f01;
        },
        _e01: function(_f01) {
            _PQ(0 <= _f01 && _f01 < this._401);
            _PQ(0 < this._501);
            this._601[_f01].parent = this._701;
            this._601[_f01].height = -1;
            this._701 = _f01;
            --this._501;
        },
        _c01: function(_G01) {
            ++this._901;
            if (this._301 == _Z_) {
                this._301 = _G01;
                this._601[this._301].parent = _Z_;
                return;
            }
            var _H01 = this._601[_G01]._YT;
            var index = this._301;
            while (this._601[index]._201() == false) {
                var _001 = this._601[index]._001;
                var _101 = this._601[index]._101;
                var _7V = this._601[index]._YT._uY();
                var _I01 = new _qY();
                _I01._vY(this._601[index]._YT, _H01);
                var _J01 = _I01._uY();
                var _B01 = 2.0 * _J01;
                var _K01 = 2.0 * (_J01 - _7V);
                var _L01;
                var _YT;
                if (this._601[_001]._201()) {
                    _YT = new _qY();
                    _YT._vY(_H01, this._601[_001]._YT);
                    _L01 = _YT._uY() + _K01;
                } else {
                    _YT = new _qY();
                    _YT._vY(_H01, this._601[_001]._YT);
                    var _M01 = this._601[_001]._YT._uY();
                    var _N01 = _YT._uY();
                    _L01 = (_N01 - _M01) + _K01;
                }
                var _O01;
                if (this._601[_101]._201()) {
                    _YT = new _qY();
                    _YT._vY(_H01, this._601[_101]._YT);
                    _O01 = _YT._uY() + _K01;
                } else {
                    _YT = new _qY();
                    _YT._vY(_H01, this._601[_101]._YT);
                    var _M01 = this._601[_101]._YT._uY();
                    var _N01 = _YT._uY();
                    _O01 = _N01 - _M01 + _K01;
                }
                if (_B01 < _L01 && _B01 < _O01) {
                    break;
                }
                if (_L01 < _O01) {
                    index = _001;
                } else {
                    index = _101;
                }
            }
            var _P01 = index;
            var _Q01 = this._601[_P01].parent;
            var _R01 = this._b01();
            this._601[_R01].parent = _Q01;
            this._601[_R01]._JV = null;
            this._601[_R01]._YT._vY(_H01, this._601[_P01]._YT);
            this._601[_R01].height = this._601[_P01].height + 1;
            if (_Q01 != _Z_) {
                if (this._601[_Q01]._001 == _P01) {
                    this._601[_Q01]._001 = _R01;
                } else {
                    this._601[_Q01]._101 = _R01;
                }
                this._601[_R01]._001 = _P01;
                this._601[_R01]._101 = _G01;
                this._601[_P01].parent = _R01;
                this._601[_G01].parent = _R01;
            } else {
                this._601[_R01]._001 = _P01;
                this._601[_R01]._101 = _G01;
                this._601[_P01].parent = _R01;
                this._601[_G01].parent = _R01;
                this._301 = _R01;
            }
            index = this._601[_G01].parent;
            while (index != _Z_) {
                index = this._S01(index);
                var _001 = this._601[index]._001;
                var _101 = this._601[index]._101;
                _PQ(_001 != _Z_);
                _PQ(_101 != _Z_);
                this._601[index].height = 1 + _2T(this._601[_001].height, this._601[_101].height);
                this._601[index]._YT._vY(this._601[_001]._YT, this._601[_101]._YT);
                index = this._601[index].parent;
            }
        },
        _d01: function(_G01) {
            if (_G01 == this._301) {
                this._301 = _Z_;
                return;
            }
            var parent = this._601[_G01].parent;
            var _T01 = this._601[parent].parent;
            var _P01;
            if (this._601[parent]._001 == _G01) {
                _P01 = this._601[parent]._101;
            } else {
                _P01 = this._601[parent]._001;
            }
            if (_T01 != _Z_) {
                if (this._601[_T01]._001 == parent) {
                    this._601[_T01]._001 = _P01;
                } else {
                    this._601[_T01]._101 = _P01;
                }
                this._601[_P01].parent = _T01;
                this._e01(parent);
                var index = _T01;
                while (index != _Z_) {
                    index = this._S01(index);
                    var _001 = this._601[index]._001;
                    var _101 = this._601[index]._101;
                    this._601[index]._YT._vY(this._601[_001]._YT, this._601[_101]._YT);
                    this._601[index].height = 1 + _2T(this._601[_001].height,
                        this._601[_101].height);
                    index = this._601[index].parent;
                }
            } else {
                this._301 = _P01;
                this._601[_P01].parent = _Z_;
                this._e01(parent);
            }
        },
        _S01: function(_U01) {
            _PQ(_U01 != _Z_);
            var _QQ = this._601[_U01];
            if (_QQ._201() || _QQ.height < 2) {
                return _U01;
            }
            var _V01 = _QQ._001;
            var _W01 = _QQ._101;
            _PQ(0 <= _V01 && _V01 < this._401);
            _PQ(0 <= _W01 && _W01 < this._401);
            var _0S = this._601[_V01];
            var _US = this._601[_W01];
            var _r01 = _US.height - _0S.height;
            if (_r01 > 1) {
                var _X01 = _US._001;
                var _Y01 = _US._101;
                var _Z01 = this._601[_X01];
                var __01 = this._601[_Y01];
                _PQ(0 <= _X01 && _X01 < this._401);
                _PQ(0 <= _Y01 && _Y01 < this._401);
                _US._001 = _U01;
                _US.parent = _QQ.parent;
                _QQ.parent = _W01;
                if (_US.parent != _Z_) {
                    if (this._601[_US.parent]._001 == _U01) {
                        this._601[_US.parent]._001 = _W01;
                    } else {
                        _PQ(this._601[_US.parent]._101 == _U01);
                        this._601[_US.parent]._101 = _W01;
                    }
                } else {
                    this._301 = _W01;
                }
                if (_Z01.height > __01.height) {
                    _US._101 = _X01;
                    _QQ._101 = _Y01;
                    __01.parent = _U01;
                    _QQ._YT._vY(_0S._YT, __01._YT);
                    _US._YT._vY(_QQ._YT, _Z01._YT);
                    _QQ.height = 1 + _2T(_0S.height, __01.height);
                    _US.height = 1 + _2T(_QQ.height, _Z01.height);
                } else {
                    _US._101 = _Y01;
                    _QQ._101 = _X01;
                    _Z01.parent = _U01;
                    _QQ._YT._vY(_0S._YT, _Z01._YT);
                    _US._YT._vY(_QQ._YT, __01._YT);
                    _QQ.height = 1 + _2T(_0S.height, _Z01.height);
                    _US.height = 1 + _2T(_QQ.height, __01.height);
                }
                return _W01;
            }
            if (_r01 < -1) {
                var _011 = _0S._001;
                var _111 = _0S._101;
                var _bV = this._601[_011];
                var _211 = this._601[_111];
                _PQ(0 <= _011 && _011 < this._401);
                _PQ(0 <= _111 && _111 < this._401);
                _0S._001 = _U01;
                _0S.parent = _QQ.parent;
                _QQ.parent = _V01;
                if (_0S.parent != _Z_) {
                    if (this._601[_0S.parent]._001 == _U01) {
                        this._601[_0S.parent]._001 = _V01;
                    } else {
                        _PQ(this._601[_0S.parent]._101 == _U01);
                        this._601[_0S.parent]._101 = _V01;
                    }
                } else {
                    this._301 = _V01;
                }
                if (_bV.height > _211.height) {
                    _0S._101 = _011;
                    _QQ._001 = _111;
                    _211.parent = _U01;
                    _QQ._YT._vY(_US._YT, _211._YT);
                    _0S._YT._vY(_QQ._YT, _bV._YT);
                    _QQ.height = 1 + _2T(_US.height, _211.height);
                    _0S.height = 1 + _2T(_QQ.height, _bV.height);
                } else {
                    _0S._101 = _111;
                    _QQ._001 = _011;
                    _bV.parent = _U01;
                    _QQ._YT._vY(_US._YT, _bV._YT);
                    _0S._YT._vY(_QQ._YT, _211._YT);
                    _QQ.height = 1 + _2T(_US.height, _bV.height);
                    _0S.height = 1 + _2T(_QQ.height, _211.height);
                }
                return _V01;
            }
            return _U01;
        },
        _p01: function(_f01) {
            if (typeof(_f01) === 'undefined') _f01 = this._301;
            _PQ(0 <= _f01 && _f01 < this._401);
            var _2d = this._601[_f01];
            if (_2d._201()) {
                return 0;
            }
            var _311 = this._p01(_2d._001);
            var _411 = this._p01(_2d._101);
            return 1 + _2T(_311, _411);
        },
        _l01: function(index) {
            if (index == _Z_) {
                return;
            }
            if (index == this._301) {
                _PQ(this._601[index].parent == _Z_);
            }
            var _2d = this._601[index];
            var _001 = _2d._001;
            var _101 = _2d._101;
            if (_2d._201()) {
                _PQ(_001 == _Z_);
                _PQ(_101 == _Z_);
                _PQ(_2d.height == 0);
                return;
            }
            _PQ(0 <= _001 && _001 < this._401);
            _PQ(0 <= _101 && _101 < this._401);
            _PQ(this._601[_001].parent == index);
            _PQ(this._601[_101].parent == index);
            this._l01(_001);
            this._l01(_101);
        },
        _m01: function(index) {
            if (index == _Z_) {
                return;
            }
            var _2d = this._601[index];
            var _001 = _2d._001;
            var _101 = _2d._101;
            if (_2d._201()) {
                _PQ(_001 == _Z_);
                _PQ(_101 == _Z_);
                _PQ(_2d.height == 0);
                return;
            }
            _PQ(0 <= _001 && _001 < this._401);
            _PQ(0 <= _101 && _101 < this._401);
            var _311 = this._601[_001].height;
            var _411 = this._601[_101].height;
            var height;
            height = 1 + _2T(_311, _411);
            _PQ(_2d.height == height);
            var _YT = new _qY();
            _YT._vY(this._601[_001]._YT, this._601[_101]._YT);
            _PQ(_DR._UR(_YT._dU,
                _2d._YT._dU));
            _PQ(_DR._UR(_YT._eU, _2d._YT._eU));
            this._m01(_001);
            this._m01(_101);
        }
    };

    function _511() {
        this._pW = new _eW();
        this._qW = new _eW();
        this._611 = new _pS();
        this._711 = new _pS();
        this._811 = 0;
    };

    function _911() {
        this._Kz = 0;
        this._f3 = 0;
    };
    _911._0_ = 0;
    _911._a11 = 1;
    _911._b11 = 2;
    _911._c11 = 3;
    _911._d11 = 4;

    function _e11() {
        this._f11 = null;
        this._g11 = null;
        this._h11 = null;
        this._i11 = null;
        this._QT = 0;
        this._j11 = new _DR();
        this._k11 = new _DR();
    }
    var _l11 = new _nS();
    var _m11 = new _nS();
    _e11.prototype = {
        _1Y: function(_m4, _pW, _611, _qW, _711, _DY) {
            this._f11 = _pW;
            this._g11 = _qW;
            var _n4 = _m4._n4;
            _PQ(0 < _n4 && _n4 < 3);
            this._h11 = _611;
            this._i11 = _711;
            this._h11._vS(_l11, _DY);
            this._i11._vS(_m11, _DY);
            if (_n4 == 1) {
                this._QT = _e11._n11;
                var _o11 = this._f11._iU(_m4._mW[0]);
                var _p11 = this._g11._iU(_m4._nW[0]);
                var _6Y = (_l11._vt.c * _o11.x - _l11._vt._Cb * _o11.y) + _l11._6d.x;
                var _7Y = (_l11._vt._Cb * _o11.x + _l11._vt.c * _o11.y) + _l11._6d.y;
                var _8Y = (_m11._vt.c * _p11.x - _m11._vt._Cb * _p11.y) + _m11._6d.x;
                var _9Y = (_m11._vt._Cb * _p11.x + _m11._vt.c * _p11.y) + _m11._6d.y;
                this._k11.x = _8Y - _6Y;
                this._k11.y = _9Y - _7Y;
                var _Cb = this._k11._NR();
                return _Cb;
            } else if (_m4._mW[0] == _m4._mW[1]) {
                this._QT = _e11._VX;
                var _q11 = _qW._iU(_m4._nW[0]);
                var _r11 = _qW._iU(_m4._nW[1]);
                this._k11.x = 1.0 * (_r11.y - _q11.y);
                this._k11.y = -1.0 * (_r11.x - _q11.x);
                this._k11._NR();
                var _BZ = _m11._vt.c * this._k11.x - _m11._vt._Cb * this._k11.y;
                var _CZ = _m11._vt._Cb * this._k11.x + _m11._vt.c * this._k11.y;
                this._j11.x = 0.5 * (_q11.x + _r11.x);
                this._j11.y = 0.5 * (_q11.y + _r11.y);
                var _8Y = (_m11._vt.c * this._j11.x - _m11._vt._Cb * this._j11.y) + _m11._6d.x;
                var _9Y = (_m11._vt._Cb * this._j11.x + _m11._vt.c * this._j11.y) + _m11._6d.y;
                var _o11 = _pW._iU(_m4._mW[0]);
                var _6Y = (_l11._vt.c * _o11.x - _l11._vt._Cb * _o11.y) + _l11._6d.x;
                var _7Y = (_l11._vt._Cb * _o11.x + _l11._vt.c * _o11.y) + _l11._6d.y;
                var _Cb = (_6Y - _8Y) * _BZ + (_7Y - _9Y) * _CZ;
                if (_Cb < 0.0) {
                    this._k11.x = -this._k11.x;
                    this._k11.y = -this._k11.y;
                    _Cb = -_Cb;
                }
                return _Cb;
            } else {
                this._QT = _e11._UX;
                var _s11 = this._f11._iU(_m4._mW[0]);
                var _t11 = this._f11._iU(_m4._mW[1]);
                this._k11.x = 1.0 * (_t11.y - _s11.y);
                this._k11.y = -1.0 * (_t11.x - _s11.x);
                this._k11._NR();
                var _BZ = _l11._vt.c * this._k11.x - _l11._vt._Cb * this._k11.y;
                var _CZ = _l11._vt._Cb * this._k11.x + _l11._vt.c * this._k11.y;
                this._j11.x = 0.5 * (_s11.x + _t11.x);
                this._j11.y = 0.5 * (_s11.y + _t11.y);
                var _6Y = (_l11._vt.c * this._j11.x - _l11._vt._Cb * this._j11.y) + _l11._6d.x;
                var _7Y = (_l11._vt._Cb * this._j11.x + _l11._vt.c * this._j11.y) + _l11._6d.y;
                var _p11 = this._g11._iU(_m4._nW[0]);
                var _8Y = (_m11._vt.c * _p11.x - _m11._vt._Cb * _p11.y) + _m11._6d.x;
                var _9Y = (_m11._vt._Cb * _p11.x + _m11._vt.c * _p11.y) + _m11._6d.y;
                var _Cb = (_8Y - _6Y) * _BZ + (_9Y - _7Y) * _CZ;
                if (_Cb < 0.0) {
                    this._k11.x = -this._k11.x;
                    this._k11.y = -this._k11.y;
                    _Cb = -_Cb;
                }
                return _Cb;
            }
        },
        _u11: function(_v11, _f3) {
            this._h11._vS(_l11,
                _f3);
            this._i11._vS(_m11, _f3);
            switch (this._QT) {
                case _e11._n11:
                    {
                        var _w11 = _l11._vt.c * this._k11.x + _l11._vt._Cb * this._k11.y;
                        var _x11 = -_l11._vt._Cb * this._k11.x + _l11._vt.c * this._k11.y;
                        var _y11 = _m11._vt.c * -this._k11.x + _m11._vt._Cb * -this._k11.y;
                        var _z11 = -_m11._vt._Cb * -this._k11.x + _m11._vt.c * -this._k11.y;
                        _v11[0] = this._f11._fU(_w11, _x11);
                        _v11[1] = this._g11._fU(_y11, _z11);
                        var _o11 = this._f11._iU(_v11[0]);
                        var _p11 = this._g11._iU(_v11[1]);
                        var _6Y = (_l11._vt.c * _o11.x - _l11._vt._Cb * _o11.y) + _l11._6d.x;
                        var _7Y = (_l11._vt._Cb * _o11.x + _l11._vt.c * _o11.y) + _l11._6d.y;
                        var _8Y = (_m11._vt.c * _p11.x - _m11._vt._Cb * _p11.y) + _m11._6d.x;
                        var _9Y = (_m11._vt._Cb * _p11.x + _m11._vt.c * _p11.y) + _m11._6d.y;
                        return (_8Y - _6Y) * this._k11.x + (_9Y - _7Y) * this._k11.y;
                    }
                case _e11._UX:
                    {
                        var _BZ = _l11._vt.c * this._k11.x - _l11._vt._Cb * this._k11.y;
                        var _CZ = _l11._vt._Cb * this._k11.x + _l11._vt.c * this._k11.y;
                        var _6Y = (_l11._vt.c * this._j11.x - _l11._vt._Cb * this._j11.y) + _l11._6d.x;
                        var _7Y = (_l11._vt._Cb * this._j11.x + _l11._vt.c * this._j11.y) + _l11._6d.y;
                        var _y11 = _m11._vt.c * -_BZ + _m11._vt._Cb * -_CZ;
                        var _z11 = -_m11._vt._Cb * -_BZ + _m11._vt.c * -_CZ;
                        _v11[0] = -1;
                        _v11[1] = this._g11._fU(_y11, _z11);
                        var _p11 = this._g11._iU(_v11[1]);
                        var _8Y = (_m11._vt.c * _p11.x - _m11._vt._Cb * _p11.y) + _m11._6d.x;
                        var _9Y = (_m11._vt._Cb * _p11.x + _m11._vt.c * _p11.y) + _m11._6d.y;
                        return (_8Y - _6Y) * _BZ + (_9Y - _7Y) * _CZ;
                    }
                case _e11._VX:
                    {
                        var _BZ = _m11._vt.c * this._k11.x - _m11._vt._Cb * this._k11.y;
                        var _CZ = _m11._vt._Cb * this._k11.x + _m11._vt.c * this._k11.y;
                        var _8Y = (_m11._vt.c * this._j11.x - _m11._vt._Cb * this._j11.y) + _m11._6d.x;
                        var _9Y = (_m11._vt._Cb * this._j11.x + _m11._vt.c * this._j11.y) + _m11._6d.y;
                        var _w11 = _l11._vt.c * -_BZ + _l11._vt._Cb * -_CZ;
                        var _z11 = -_l11._vt._Cb * -_BZ + _l11._vt.c * -_CZ;
                        _v11[1] = -1;
                        _v11[0] = this._f11._fU(_w11, _z11);
                        var _o11 = this._f11._iU(_v11[0]);
                        var _6Y = (_l11._vt.c * _o11.x - _l11._vt._Cb * _o11.y) + _l11._6d.x;
                        var _7Y = (_l11._vt._Cb * _o11.x + _l11._vt.c * _o11.y) + _l11._6d.y;
                        return (_6Y - _8Y) * _BZ + (_7Y - _9Y) * _CZ;
                    }
                default:
                    _PQ(false);
                    _v11[0] = -1;
                    _v11[1] = -1;
                    return 0.0;
            }
        },
        _A11: function(_mW, _nW, _f3) {
            this._h11._vS(_l11, _f3);
            this._i11._vS(_m11, _f3);
            switch (this._QT) {
                case _e11._n11:
                    {
                        var _o11 = this._f11._iU(_mW);
                        var _p11 = this._g11._iU(_nW);
                        var _6Y = (_l11._vt.c * _o11.x - _l11._vt._Cb * _o11.y) + _l11._6d.x;
                        var _7Y = (_l11._vt._Cb * _o11.x + _l11._vt.c * _o11.y) + _l11._6d.y;
                        var _8Y = (_m11._vt.c * _p11.x - _m11._vt._Cb * _p11.y) + _m11._6d.x;
                        var _9Y = (_m11._vt._Cb * _p11.x + _m11._vt.c * _p11.y) + _m11._6d.y;
                        var _NY = (_8Y - _6Y) * this._k11.x + (_9Y - _7Y) * this._k11.y;
                        return _NY;
                    }
                case _e11._UX:
                    {
                        var _BZ = _l11._vt.c * this._k11.x - _l11._vt._Cb * this._k11.y;
                        var _CZ = _l11._vt._Cb * this._k11.x + _l11._vt.c * this._k11.y;
                        var _6Y = (_l11._vt.c * this._j11.x - _l11._vt._Cb * this._j11.y) + _l11._6d.x;
                        var _7Y = (_l11._vt._Cb * this._j11.x + _l11._vt.c * this._j11.y) + _l11._6d.y;
                        var _p11 = this._g11._iU(_nW);
                        var _8Y = (_m11._vt.c * _p11.x - _m11._vt._Cb * _p11.y) + _m11._6d.x;
                        var _9Y = (_m11._vt._Cb * _p11.x + _m11._vt.c * _p11.y) + _m11._6d.y;
                        var _NY = (_8Y - _6Y) * _BZ + (_9Y - _7Y) * _CZ;
                        return _NY;
                    }
                case _e11._VX:
                    {
                        var _BZ = _m11._vt.c * this._k11.x - _m11._vt._Cb * this._k11.y;
                        var _CZ = _m11._vt._Cb * this._k11.x + _m11._vt.c * this._k11.y;
                        var _8Y = (_m11._vt.c * this._j11.x - _m11._vt._Cb * this._j11.y) + _m11._6d.x;
                        var _9Y = (_m11._vt._Cb * this._j11.x + _m11._vt.c * this._j11.y) + _m11._6d.y;
                        var _o11 = this._f11._iU(_mW);
                        var _6Y = (_l11._vt.c * _o11.x - _l11._vt._Cb * _o11.y) + _l11._6d.x;
                        var _7Y = (_l11._vt._Cb * _o11.x + _l11._vt.c * _o11.y) + _l11._6d.y;
                        var _NY = (_6Y - _8Y) * _BZ + (_7Y - _9Y) * _CZ;
                        return _NY;
                    }
                default:
                    _PQ(false);
                    return 0.0;
            }
        }
    };
    _e11._n11 = 0;
    _e11._UX = 1;
    _e11._VX = 2;
    var _B11 = _wQ._IQ("toi", "solveTOI");

    function _C11(_rt, _pt) {
        _B11.start();
        ++_C11._D11;
        _rt._Kz = _911._0_;
        _rt._f3 = _pt._811;
        var _pW = _pt._pW;
        var _qW = _pt._qW;
        _C11._E11._Zy(_pt._611);
        _C11._F11._Zy(_pt._711);
        _C11._E11._NR();
        _C11._F11._NR();
        var _811 = _pt._811;
        var _jZ = _pW._RT + _qW._RT;
        var target = _2T(_YQ, _jZ - 3.0 * _YQ);
        var _G11 = 0.25 * _YQ;
        _PQ(target > _G11);
        var _DY = 0.0;
        var _H11 = 20;
        var _vX = 0;
        var _m4 = new _kW();
        _m4._n4 = 0;
        var _I11 = new _oW();
        _I11._pW._Zy(_pt._pW);
        _I11._qW._Zy(_pt._qW);
        _I11._tW = false;
        for (;;) {
            _C11._E11._vS(_I11._rW, _DY);
            _C11._F11._vS(_I11._sW, _DY);
            var _J11 = new _uW();
            _nX(_J11, _m4, _I11);
            if (_J11._1U <= 0.0) {
                _rt._Kz = _911._b11;
                _rt._f3 = 0.0;
                break;
            }
            if (_J11._1U < target + _G11) {
                _rt._Kz = _911._c11;
                _rt._f3 = _DY;
                break;
            }
            var _K11 = new _e11();
            _K11._1Y(_m4, _pW, _C11._E11, _qW, _C11._F11, _DY);
            var _L11 = false;
            var _EY = _811;
            var _M11 = 0;
            for (;;) {
                var _v11 = [];
                var _Km = _K11._u11(_v11, _EY);
                if (_Km > target + _G11) {
                    _rt._Kz = _911._d11;
                    _rt._f3 = _811;
                    _L11 = true;
                    break;
                }
                if (_Km > target - _G11) {
                    _DY = _EY;
                    break;
                }
                var _Jm = _K11._A11(_v11[0], _v11[1], _DY);
                if (_Jm < target - _G11) {
                    _rt._Kz = _911._a11;
                    _rt._f3 = _DY;
                    _L11 = true;
                    break;
                }
                if (_Jm <= target + _G11) {
                    _rt._Kz = _911._c11;
                    _rt._f3 = _DY;
                    _L11 = true;
                    break;
                }
                var _N11 = 0;
                var _ON = _DY,
                    _PN = _EY;
                for (;;) {
                    var _f3;
                    if (_N11 & 1) {
                        _f3 = _ON + (target - _Jm) * (_PN - _ON) / (_Km - _Jm);
                    } else {
                        _f3 = 0.5 * (_ON + _PN);
                    }++_N11;
                    ++_C11._O11;
                    var _Cb = _K11._A11(_v11[0], _v11[1], _f3);
                    if (_YS(_Cb - target) < _G11) {
                        _EY = _f3;
                        break;
                    }
                    if (_Cb > target) {
                        _ON = _f3;
                        _Jm = _Cb;
                    } else {
                        _PN = _f3;
                        _Km = _Cb;
                    }
                    if (_N11 == 50) {
                        break;
                    }
                }
                _C11._P11 = _2T(_C11._P11, _N11);
                ++_M11;
                if (_M11 == _VQ) {
                    break;
                }
            }++_vX;
            ++_C11._Q11;
            if (_L11) {
                break;
            }
            if (_vX == _H11) {
                _rt._Kz = _911._a11;
                _rt._f3 = _DY;
                break;
            }
        }
        _C11._R11 = _2T(_C11._R11, _vX);
        _B11.stop();
        _C11._S11 = _2T(_C11._S11, _B11._BQ);
        _C11._T11 += _B11._BQ;
    }
    _C11._E11 = new _pS();
    _C11._F11 = new _pS();
    _C11._T11 = 0;
    _C11._S11 = 0;
    _C11._D11 = 0;
    _C11._Q11 = 0;
    _C11._R11 = 0;
    _C11._O11 = 0;
    _C11._P11 = 0;

    function _U11() {
        this.type = _V11._W11;
        this.position = new _DR(0.0, 0.0);
        this._E4 = 0.0;
        this._X11 = new _DR(0.0,
            0.0);
        this._Y11 = 0.0;
        this._Z11 = 0.0;
        this.__11 = 0.0;
        this._021 = true;
        this._121 = true;
        this._221 = false;
        this._321 = false;
        this.active = true;
        this._JV = null;
        this._421 = 1.0;
        Object.seal(this);
    }
    _U11.prototype = {
        _TR: function(data) {
            this.type = data['type'];
            this.position._TR(data['position']);
            this._E4 = data['angle'];
            this._X11._TR(data['linearVelocity']);
            this._Y11 = data['angularVelocity'];
            this._Z11 = data['linearDamping'];
            this.__11 = data['angularDamping'];
            this._021 = data['allowSleep'];
            this._121 = data['awake'];
            this._221 = data['fixedRotation'];
            this._321 = data['bullet'];
            this.active = data['active'];
            this._421 = data['gravityScale'];
        }
    };

    function _V11(_521, _621) {
        _PQ(_521.position._PR());
        _PQ(_521._X11._PR());
        _PQ(_tR(_521._E4));
        _PQ(_tR(_521._Y11));
        _PQ(_tR(_521.__11) && _521.__11 >= 0.0);
        _PQ(_tR(_521._Z11) && _521._Z11 >= 0.0);
        this._721 = 0;
        this._821 = 0;
        if (_521._321) {
            this._821 |= _V11._921;
        }
        if (_521._221) {
            this._821 |= _V11._a21;
        }
        if (_521._021) {
            this._821 |= _V11._b21;
        }
        if (_521._121) {
            this._821 |= _V11._c21;
        }
        if (_521.active) {
            this._821 |= _V11._d21;
        }
        this._e21 = _621;
        this._9_ = new _nS();
        this._9_._6d._Zy(_521.position);
        this._9_._vt._7b(_521._E4);
        this._f21 = new _nS();
        this._f21._Zy(this._9_);
        this._g21 = new _pS();
        this._g21._qS._ER();
        this._g21._rS._Zy(this._9_._6d);
        this._g21.c._Zy(this._9_._6d);
        this._g21._tS = _521._E4;
        this._g21._Z4 = _521._E4;
        this._g21._uS = 0.0;
        this._h21 = null;
        this._i21 = null;
        this._j21 = null;
        this._k21 = null;
        this._l21 = _521._X11._T();
        this._m21 = _521._Y11;
        this._n21 = _521._Z11;
        this._o21 = _521.__11;
        this._p21 = _521._421;
        this._q21 = new _DR();
        this._r21 = 0.0;
        this._s21 = 0.0;
        this._QT = _521.type;
        if (this._QT == _V11._t21) {
            this._u21 = 1.0;
            this._v21 = 1.0;
        } else {
            this._u21 = 0.0;
            this._v21 = 0.0;
        }
        this._w21 = 0.0;
        this._x21 = 0.0;
        this._y21 = _521._JV;
        this._z21 = null;
        this._A21 = 0;
    }
    _V11._W11 = 0;
    _V11._B21 = 1;
    _V11._t21 = 2;
    _V11._C21 = 0x0001;
    _V11._c21 = 0x0002;
    _V11._b21 = 0x0004;
    _V11._921 = 0x0008;
    _V11._a21 = 0x0010;
    _V11._d21 = 0x0020;
    _V11._D21 = 0x0040;
    _V11._E21 = new _DR();
    _V11._F21 = new _nS();
    _V11.prototype = {
        _G21: function(_H21, __F) {
            if (typeof(__F) !== 'undefined') {
                var _I21 = new _J21();
                _I21._jf = _H21;
                _I21.__F = __F;
                return this._G21(_I21);
            }
            _PQ(this._e21._K21() == false);
            if (this._e21._K21() == true) {
                return null;
            }
            var _fD = new _L21();
            _fD._OL(this, _H21);
            if (this._821 & _V11._d21) {
                var _M21 = this._e21._N21._O21;
                _fD._P21(_M21, this._9_);
            }
            _fD._k21 = this._z21;
            this._z21 = _fD;
            ++this._A21;
            _fD._Q21 = this;
            if (_fD._R21 > 0.0) {
                this._S21();
            }
            this._e21._821 |= _T21._U21;
            return _fD;
        },
        _V21: function(_fD) {
            _PQ(this._e21._K21() == false);
            if (this._e21._K21() == true) {
                return;
            }
            _PQ(_fD._Q21 == this);
            _PQ(this._A21 > 0);
            var _2d = this._z21;
            var _HB = false;
            while (_2d != null) {
                if (_2d == _fD) {
                    this._z21 = _2d = _fD._k21;
                    _HB = true;
                    break;
                }
                _2d = _2d._k21;
            }
            _PQ(_HB);
            var _NU = this._i21;
            while (_NU) {
                var c = _NU._W21;
                _NU = _NU._kc;
                var _X21 = c._Y21();
                var _Z21 = c.__21();
                if (_fD == _X21 || _fD == _Z21) {
                    this._e21._N21._031(c);
                }
            }
            if (this._821 & _V11._d21) {
                var _M21 = this._e21._N21._O21;
                _fD._131(_M21);
            }
            _fD._031();
            _fD._Q21 = null;
            _fD._k21 = null;
            --this._A21;
            this._S21();
        },
        _231: function(position, _E4) {
            _PQ(this._e21._K21() == false);
            if (this._e21._K21() == true) {
                return;
            }
            this._9_._vt._7b(_E4);
            this._9_._6d._Zy(position);
            this._f21._Zy(this._9_);
            this._g21.c._Zy(_QS(this._9_, this._g21._qS));
            this._g21._Z4 = _E4;
            this._g21._rS._Zy(this._g21.c);
            this._g21._tS = _E4;
            var _M21 = this._e21._N21._O21;
            for (var _dn = this._z21; _dn; _dn = _dn._k21) {
                _dn._331(_M21, this._9_, this._9_);
            }
        },
        _vS: function() {
            return this._9_;
        },
        _IC: function() {
            return this._9_._6d;
        },
        _kS: function() {
            return this._g21._Z4;
        },
        _431: function() {
            return this._g21.c;
        },
        _531: function() {
            return this._g21._qS;
        },
        _631: function(_X1) {
            if (this._QT == _V11._W11) {
                return;
            }
            if (_zS(_X1, _X1) > 0.0) {
                this._uD(true);
            }
            this._l21 = _X1;
        },
        _731: function() {
            return this._l21;
        },
        _831: function(w) {
            if (this._QT == _V11._W11) {
                return;
            }
            if (w * w > 0.0) {
                this._uD(true);
            }
            this._m21 = w;
        },
        _931: function() {
            return this._m21;
        },
        _RE: function(_a31, _OX, _b31) {
            if (this._QT != _V11._t21) {
                return;
            }
            if (_b31 && (this._821 & _V11._c21) == 0) {
                this._uD(true);
            }
            if (this._821 & _V11._c21) {
                this._q21._1b(_a31);
                this._r21 += _AS(_DR._KR(_OX, this._g21.c), _a31);
            }
        },
        _c31: function(_a31, _b31) {
            if (this._QT != _V11._t21) {
                return;
            }
            if (_b31 && (this._821 & _V11._c21) == 0) {
                this._uD(true);
            }
            if (this._821 & _V11._c21) {
                this._q21._1b(_a31);
            }
        },
        _7F: function(_d31, _b31) {
            if (this._QT != _V11._t21) {
                return;
            }
            if (_b31 && (this._821 & _V11._c21) == 0) {
                this._uD(true);
            }
            if (this._821 & _V11._c21) {
                this._r21 += _d31;
            }
        },
        _e31: function(_f31, _OX, _b31) {
            if (this._QT != _V11._t21) {
                return;
            }
            if (_b31 && (this._821 & _V11._c21) == 0) {
                this._uD(true);
            }
            if (this._821 & _V11._c21) {
                this._l21._1b(_DR._im(this._v21, _f31));
                this._m21 += this._x21 * _AS(_DR._KR(_OX, this._g21.c), _f31);
            }
        },
        _5F: function(_f31, _b31) {
            if (this._QT != _V11._t21) {
                return;
            }
            if (_b31 && (this._821 & _V11._c21) == 0) {
                this._uD(true);
            }
            if (this._821 & _V11._c21) {
                this._m21 += this._x21 * _f31;
            }
        },
        _g31: function() {
            return this._u21;
        },
        _h31: function() {
            return this._w21 + this._u21 * _zS(this._g21._qS,
                this._g21._qS);
        },
        _i31: function(data) {
            data._NT = this._u21;
            data._OT = this._w21 + this._u21 * _zS(this._g21._qS, this._g21._qS);
            data._oT = this._g21._qS;
        },
        _j31: function(__T) {
            _PQ(this._e21._K21() == false);
            if (this._e21._K21() == true) {
                return;
            }
            if (this._QT != _V11._t21) {
                return;
            }
            this._v21 = 0.0;
            this._w21 = 0.0;
            this._x21 = 0.0;
            this._u21 = __T._NT;
            if (this._u21 <= 0.0) {
                this._u21 = 1.0;
            }
            this._v21 = 1.0 / this._u21;
            if (__T._OT > 0.0 && (this._821 & _V11._a21) == 0) {
                this._w21 = __T._OT - this._u21 * _zS(__T._oT, __T._oT);
                _PQ(this._w21 > 0.0);
                this._x21 = 1.0 / this._w21;
            }
            _V11._E21._Zy(this._g21.c);
            this._g21._qS._Zy(__T._oT);
            this._g21._rS._Zy(_QS(this._9_, this._g21._qS));
            this._g21.c._Zy(this._g21._rS);
            this._l21._1b(_CS(this._m21, _DR._KR(this._g21.c, _V11._E21)));
        },
        _S21: function() {
            this._u21 = 0.0;
            this._v21 = 0.0;
            this._w21 = 0.0;
            this._x21 = 0.0;
            this._g21._qS._ER();
            if (this._QT == _V11._W11 || this._QT == _V11._B21) {
                this._g21._rS._Zy(this._9_._6d);
                this._g21.c._Zy(this._9_._6d);
                this._g21._tS = this._g21._Z4;
                return;
            }
            _PQ(this._QT == _V11._t21);
            var _qS = new _DR(0, 0);
            for (var _dn = this._z21; _dn; _dn = _dn._k21) {
                if (_dn._R21 == 0.0) {
                    continue;
                }
                var __T = new _MT();
                _dn._i31(__T);
                this._u21 += __T._NT;
                _qS._1b(_DR._im(__T._NT, __T._oT));
                this._w21 += __T._OT;
            }
            if (this._u21 > 0.0) {
                this._v21 = 1.0 / this._u21;
                _qS._im(this._v21);
            } else {
                this._u21 = 1.0;
                this._v21 = 1.0;
            }
            if (this._w21 > 0.0 && (this._821 & _V11._a21) == 0) {
                this._w21 -= this._u21 * _zS(_qS, _qS);
                _PQ(this._w21 > 0.0);
                this._x21 = 1.0 / this._w21;
            } else {
                this._w21 = 0.0;
                this._x21 = 0.0;
            }
            _V11._E21._Zy(this._g21.c);
            this._g21._qS._Zy(_qS);
            this._g21._rS._Zy(_QS(this._9_, this._g21._qS));
            this._g21.c._Zy(this._g21._rS);
            this._l21._1b(_CS(this._m21, _DR._KR(this._g21.c, _V11._E21)));
        },
        _k31: function(_LX) {
            return _QS(this._9_, _LX);
        },
        _l31: function(_m31) {
            return _OS(this._9_._vt, _m31);
        },
        _n31: function(_o31) {
            return _SS(this._9_, _o31);
        },
        _p31: function(_q31) {
            return _PS(this._9_._vt, _q31);
        },
        _r31: function(_o31) {
            return _DR._1b(this._l21, _CS(this._m21, _DR._KR(_o31, this._g21.c)));
        },
        _s31: function(_LX) {
            return this._r31(this._k31(_LX));
        },
        _t31: function() {
            return this._n21;
        },
        _rD: function(_Z11) {
            this._n21 = _Z11;
        },
        _u31: function() {
            return this._o21;
        },
        _sD: function(__11) {
            this._o21 = __11;
        },
        _v31: function() {
            return this._p21;
        },
        _w31: function(scale) {
            this._p21 = scale;
        },
        _x31: function(type) {
            _PQ(this._e21._K21() == false);
            if (this._e21._K21() == true) {
                return;
            }
            if (this._QT == type) {
                return;
            }
            this._QT = type;
            this._S21();
            if (this._QT == _V11._W11) {
                this._l21._ER();
                this._m21 = 0.0;
                this._g21._tS = this._g21._Z4;
                this._g21._rS._Zy(this._g21.c);
                this._y31();
            }
            this._uD(true);
            this._q21._ER();
            this._r21 = 0.0;
            var _z31 = this._i21;
            while (_z31) {
                var _A31 = _z31;
                _z31 = _z31._kc;
                this._e21._N21._031(_A31._W21);
            }
            this._i21 = null;
            var _M21 = this._e21._N21._O21;
            for (var _dn = this._z21; _dn; _dn = _dn._k21) {
                var _B31 = _dn._DV;
                for (var i = 0; i < _B31; ++i) {
                    _M21._QV(_dn._C31[i]._KV);
                }
            }
        },
        _ST: function() {
            return this._QT;
        },
        _D31: function(_E31) {
            if (_E31) {
                this._821 |= _V11._921;
            } else {
                this._821 &= ~_V11._921;
            }
        },
        _F31: function() {
            return (this._821 & _V11._921) == _V11._921;
        },
        _G31: function(_E31) {
            if (_E31) {
                this._821 |= _V11._b21;
            } else {
                this._821 &= ~_V11._b21;
                this._uD(true);
            }
        },
        _H31: function() {
            return (this._821 & _V11._b21) == _V11._b21;
        },
        _uD: function(_E31) {
            if (_E31) {
                if ((this._821 & _V11._c21) == 0) {
                    this._821 |= _V11._c21;
                    this._s21 = 0.0;
                }
            } else {
                this._821 &= ~_V11._c21;
                this._s21 = 0.0;
                this._l21._ER();
                this._m21 = 0.0;
                this._q21._ER();
                this._r21 = 0.0;
            }
        },
        _I31: function() {
            return (this._821 & _V11._c21) == _V11._c21;
        },
        _J31: function(_E31) {
            _PQ(this._e21._K21() == false);
            if (_E31 == this._K31()) {
                return;
            }
            if (_E31) {
                this._821 |= _V11._d21;
                var _M21 = this._e21._N21._O21;
                for (var _dn = this._z21; _dn; _dn = _dn._k21) {
                    _dn._P21(_M21, this._9_);
                }
            } else {
                this._821 &= ~_V11._d21;
                var _M21 = this._e21._N21._O21;
                for (var _dn = this._z21; _dn; _dn = _dn._k21) {
                    _dn._131(_M21);
                }
                var _z31 = this._i21;
                while (_z31) {
                    var _A31 = _z31;
                    _z31 = _z31._kc;
                    this._e21._N21._031(_A31._W21);
                }
                this._i21 = null;
            }
        },
        _K31: function() {
            return (this._821 & _V11._d21) == _V11._d21;
        },
        _L31: function(_E31) {
            var status = (this._821 & _V11._a21) == _V11._a21;
            if (status == _E31) {
                return;
            }
            if (_E31) {
                this._821 |= _V11._a21;
            } else {
                this._821 &= ~_V11._a21;
            }
            this._m21 = 0.0;
            this._S21();
        },
        _M31: function() {
            return (this._821 & _V11._a21) == _V11._a21;
        },
        _N31: function() {
            return this._z21;
        },
        _O31: function() {
            return this._h21;
        },
        _P31: function() {
            return this._i21;
        },
        _Q31: function() {
            return this._k21;
        },
        _SV: function() {
            return this._y21;
        },
        _R31: function(data) {
            this._y21 = data;
        },
        _S31: function() {
            return this._e21;
        },
        _y31: function() {
            _V11._F21._vt._7b(this._g21._tS);
            _V11._F21._6d._Zy(_DR._KR(this._g21._rS, _OS(_V11._F21._vt, this._g21._qS)));
            var _M21 = this._e21._N21._O21;
            for (var _dn = this._z21; _dn; _dn = _dn._k21) {
                _dn._331(_M21, _V11._F21, this._9_);
            }
        },
        _T31: function() {
            this._9_._vt._7b(this._g21._Z4);
            this._9_._6d._Zy(_DR._KR(this._g21.c, _OS(this._9_._vt, this._g21._qS)));
        },
        _U31: function(other) {
            if (this._QT != _V11._t21 && other._QT != _V11._t21) {
                return false;
            }
            for (var _V31 = this._h21; _V31; _V31 = _V31._kc) {
                if (_V31.other == other) {
                    if (_V31._XD._W31 == false) {
                        return false;
                    }
                }
            }
            return true;
        },
        _xS: function(alpha) {
            this._g21._xS(alpha);
            this._g21.c._Zy(this._g21._rS);
            this._g21._Z4 = this._g21._tS;
            this._9_._vt._7b(this._g21._Z4);
            this._9_._6d._Zy(_DR._KR(this._g21.c, _OS(this._9_._vt, this._g21._qS)));
        },
        _RR: function(_SR) {
            var _Sh = _SR || {};
            _Sh['fixtures'] = null;
            _Sh['type'] = this._QT;
            _Sh['position'] = this._IC()._RR();
            _Sh['angle'] = this._kS();
            _Sh['linearVelocity'] = this._731()._RR();
            _Sh['angularVelocity'] = this._931();
            _Sh['linearDamping'] = this._t31();
            _Sh['angularDamping'] = this._u31();
            _Sh['allowSleep'] = this._H31();
            _Sh['awake'] = this._I31();
            _Sh['fixedRotation'] = this._M31();
            _Sh['bullet'] = this._F31();
            _Sh['active'] = this._K31();
            _Sh['gravityScale'] = this._v31();
            return _Sh;
        }
    };

    function _X31() {
        this._Y31 = 0x0001;
        this._Z31 = 0xFFFF;
        this.__31 = 0;
    }
    _X31.prototype = {
        _T: function() {
            var _041 = new _X31();
            _041._Y31 = this._Y31;
            _041._Z31 = this._Z31;
            _041.__31 = this.__31;
            return _041;
        },
        _Zy: function(_041) {
            this._Y31 = _041._Y31;
            this._Z31 = _041._Z31;
            this.__31 = _041.__31;
        },
        _RR: function(_SR) {
            var _Sh = _SR || {};
            _Sh['categoryBits'] = this._Y31;
            _Sh['maskBits'] = this._Z31;
            _Sh['groupIndex'] = this.__31;
            return _Sh;
        },
        _TR: function(data) {
            this._Y31 = data['categoryBits'];
            this._Z31 = data['maskBits'];
            this.__31 = data['groupIndex'];
        }
    };

    function _J21() {
        this._jf = null;
        this._JV = null;
        this.friction = 0.2;
        this._141 = 0.0;
        this.__F = 0.0;
        this._241 = false;
        this._041 = new _X31();
        Object.seal(this);
    }
    _J21.prototype = {
        _TR: function(data) {
            this.friction = data['friction'];
            this._141 = data['restitution'];
            this.__F = data['density'];
            this._241 = data['isSensor'];
            this._041._TR(data['filter']);
        }
    };

    function _341() {
        this._YT = new _qY();
        this._fD = null;
        this._WT = 0;
        this._KV = 0;
    };

    function _L21() {
        this._y21 = null;
        this._Q21 = null;
        this._k21 = null;
        this._C31 = null;
        this._DV = 0;
        this._441 = null;
        this._R21 = 0.0;
        this._541 = new _X31();
        this._641 = false;
        this._741 = 0;
        this._841 = 0;
    }
    _L21.prototype = {
        _ST: function() {
            return this._441._ST();
        },
        _941: function() {
            return this._441;
        },
        _pD: function(_a41) {
            if (_a41 != this._641) {
                this._Q21._uD(true);
                this._641 = _a41;
            }
        },
        _b41: function() {
            return this._641;
        },
        _c41: function(_041) {
            this._541 = _041;
            this._d41();
        },
        _e41: function() {
            return this._541;
        },
        _d41: function() {
            if (this._Q21 == null) {
                return;
            }
            var _NU = this._Q21._P31();
            while (_NU) {
                var _W21 = _NU._W21;
                var _X21 = _W21._Y21();
                var _Z21 = _W21.__21();
                if (_X21 == this || _Z21 == this) {
                    _W21._f41();
                }
                _NU = _NU._kc;
            }
            var _621 = this._Q21._S31();
            if (_621 == null) {
                return;
            }
            var _M21 = _621._N21._O21;
            for (var i = 0; i < this._DV; ++i) {
                _M21._QV(this._C31[i]._KV);
            }
        },
        _g41: function() {
            return this._Q21;
        },
        _Q31: function() {
            return this._k21;
        },
        _SV: function() {
            return this._y21;
        },
        _R31: function(data) {
            this._y21 = data;
        },
        _UT: function(_6d) {
            return this._441._UT(this._Q21._vS(), _6d);
        },
        _VT: function(_rt, _pt, _WT) {
            return this._441._VT(_rt, _pt, this._Q21._vS(), _WT);
        },
        _i31: function(__T) {
            this._441._ZT(__T, this._R21);
        },
        _iD: function(__F) {
            _PQ(_tR(__F) && __F >= 0.0);
            this._R21 = __F;
        },
        _hF: function() {
            return this._R21;
        },
        _gF: function() {
            return this._741;
        },
        _lD: function(friction) {
            this._741 = friction;
        },
        _iF: function() {
            return this._841;
        },
        _kD: function(_141) {
            this._841 = _141;
        },
        _h41: function(_WT) {
            _PQ(0 <= _WT && _WT < this._DV);
            return this._C31[_WT]._YT;
        },
        _OL: function(body, _H21) {
            this._y21 = _H21._JV;
            this._741 = _H21.friction;
            this._841 = _H21._141;
            this._Q21 = body;
            this._k21 = null;
            this._541._Zy(_H21._041);
            this._641 = _H21._241;
            this._441 = _H21._jf._T();
            var _i41 = this._441._TT();
            this._C31 = new Array(_i41);
            for (var i = 0; i < _i41; ++i) {
                this._C31[i] = new _341();
                this._C31[i]._fD = null;
                this._C31[i]._KV = _zV._ZV;
            }
            this._DV = 0;
            this._R21 = _H21.__F;
        },
        _031: function() {
            _PQ(this._DV == 0);
            this._C31 = null;
            this._441 = null;
        },
        _P21: function(_M21, _oS) {
            _PQ(this._DV == 0);
            this._DV = this._441._TT();
            for (var i = 0; i < this._DV; ++i) {
                var _j41 = this._C31[i];
                this._441._XT(_j41._YT, _oS, i);
                _j41._KV = _M21._IV(_j41._YT, _j41);
                _j41._fD = this;
                _j41._WT = i;
            }
        },
        _131: function(_M21) {
            for (var i = 0; i < this._DV; ++i) {
                var _j41 = this._C31[i];
                _M21._MV(_j41._KV);
                _j41._KV = _zV._ZV;
            }
            this._DV = 0;
        },
        _331: function(_M21, _k41, _l41) {
            if (this._DV == 0) {
                return;
            }
            for (var i = 0; i < this._DV; ++i) {
                var _j41 = this._C31[i];
                var _wY = new _qY(),
                    _xY = new _qY();
                this._441._XT(_wY, _k41, _j41._WT);
                this._441._XT(_xY, _l41, _j41._WT);
                _j41._YT._vY(_wY, _xY);
                var _PV = _DR._KR(_l41._6d, _k41._6d);
                _M21._OV(_j41._KV, _j41._YT, _PV);
            }
        },
        _0U: function(_6d, _Cd, _X2, _WT) {
            this._441._0U(this._Q21._vS(), _6d, _Cd, _X2, _WT);
        },
        _RR: function(_SR) {
            var _Sh = _SR || {};
            _Sh['shape'] = null;
            _Sh['friction'] = this._741;
            _Sh['restitution'] = this._841;
            _Sh['density'] = this._R21;
            _Sh['isSensor'] = this._641;
            _Sh['filter'] = this._541._RR();
            return _Sh;
        }
    };

    function _m41() {}
    _m41.prototype = {
        _n41: function(_XD) {},
        _o41: function(_fD) {},
        _p41: function(_bG) {},
        _q41: function(index) {}
    };

    function _r41() {}
    _r41.prototype = {
        _U31: function(_X21, _Z21) {
            var _s41 = _X21._e41();
            var _t41 = _Z21._e41();
            if (_s41.__31 == _t41.__31 && _s41.__31 != 0) {
                return _s41.__31 > 0;
            }
            var _u41 = (_s41._Z31 & _t41._Y31) != 0 && (_s41._Y31 & _t41._Z31) != 0;
            return _u41;
        }
    };

    function _v41() {
        this._w41 = new Array(_UQ);
        this._x41 = new Array(_UQ);
        this._n4 = 0;
    }

    function _y41() {}
    _y41.prototype = {
        _z41: function(_W21) {},
        _A41: function(_W21) {},
        _B41: function(_W21, _C41) {},
        _D41: function(_W21, _f31) {}
    };

    function _E41() {}
    _E41.prototype = {
        _F41: function(_fD) {
            return false;
        },
        _G41: function(index) {
            return false;
        }
    };

    function _H41() {}
    _H41.prototype = {
        _F41: function(_fD, _OX, _2U, _cU) {},
        _G41: function(index, _OX, _2U, _cU) {
            return 0;
        }
    };

    function _I41() {
        this._J41 = 0;
        this._K41 = 0;
        this._L41 = 0;
        this._M41 = 0;
        this._N41 = 0;
        this._O41 = false;
    }

    function _P41() {
        this.c = new _DR();
        this._Z4 = 0;
    }

    function _Q41() {
        this._X1 = new _DR();
        this.w = 0;
    }

    function _R41() {
        this._rQ = new _I41();
        this._S41 = null;
        this._T41 = null;
    }
    var _U41 = _wQ._IQ("step");
    var _V41 = _wQ._IQ("collide", "step");
    var _W41 = _wQ._IQ("solve",
        "step");
    var _X41 = _wQ._IQ("solveTOI", "step");
    var _Y41 = _wQ._IQ("broadphase", "step");

    function _T21(gravity) {
        this._N21 = new _Z41();
        this.__41 = null;
        this._051 = null;
        this._151 = null;
        this._h21 = null;
        this._251 = 0;
        this._351 = 0;
        this._451 = true;
        this._551 = true;
        this._651 = false;
        this._751 = true;
        this._851 = true;
        this._951 = gravity;
        this._821 = _T21._a51;
        this._b51 = 0.0;
        this._c51 = new _I41();
        this._d51 = new _e51();
        this._f51 = new _g51();
        this._f51._e21 = this;
    }

    function _h51() {
        this._M21 = null;
        this._YV = null;
    }
    _h51.prototype = {
        _dW: function(_KV) {
            var _j41 = this._M21._SV(_KV);
            return this._YV._F41(_j41._fD);
        }
    };

    function _i51() {
        this._M21 = null;
        this._YV = null;
    }
    _i51.prototype = {
        _k01: function(_pt, _KV) {
            var _JV = this._M21._SV(_KV);
            var _j41 = _JV;
            var _fD = _j41._fD;
            var index = _j41._WT;
            var _rt = new _pY();
            var _43 = _fD._VT(_rt, _pt, index);
            if (_43) {
                var _cU = _rt._cU;
                var _OX = _DR._1b(_DR._im((1.0 - _cU), _pt._sT), _DR._im(_cU, _pt._tT));
                return this._YV._F41(_fD, _OX, _rt._2U, _cU);
            }
            return _pt._bU;
        }
    };
    _T21._j51 = new _pS();
    _T21._k51 = new _pS();
    _T21._l51 = new _pS();
    _T21.prototype = {
        _031: function() {
            var _g3 = this._151;
            while (_g3) {
                var _m51 = _g3._k21;
                var _dn = _g3._z21;
                while (_dn) {
                    var _n51 = _dn._k21;
                    _dn._DV = 0;
                    _dn._031();
                    _dn = _n51;
                }
                _g3 = _m51;
            }
        },
        _o51: function(listener) {
            this.__41 = listener;
        },
        _p51: function(_041) {
            this._N21._q51 = _041;
        },
        _r51: function(listener) {
            this._N21._s51 = listener;
        },
        _t51: function(_u51) {
            this._051 = _u51;
        },
        _JD: function(_H21) {
            _PQ(this._K21() == false);
            if (this._K21()) {
                return null;
            }
            var _g3 = new _V11(_H21, this);
            _g3._j21 = null;
            _g3._k21 = this._151;
            if (this._151) {
                this._151._j21 = _g3;
            }
            this._151 = _g3;
            ++this._251;
            return _g3;
        },
        _v51: function(_g3) {
            _PQ(this._251 > 0);
            _PQ(this._K21() == false);
            if (this._K21()) {
                return;
            }
            var _w51 = _g3._h21;
            while (_w51) {
                var _x51 = _w51;
                _w51 = _w51._kc;
                if (this.__41) {
                    this.__41._n41(_x51._XD);
                }
                this._ME(_x51._XD);
                _g3._h21 = _w51;
            }
            _g3._h21 = null;
            var _z31 = _g3._i21;
            while (_z31) {
                var _A31 = _z31;
                _z31 = _z31._kc;
                this._N21._031(_A31._W21);
            }
            _g3._i21 = null;
            var _dn = _g3._z21;
            while (_dn) {
                var _y51 = _dn;
                _dn = _dn._k21;
                if (this.__41) {
                    this.__41._o41(_y51);
                }
                _y51._131(this._N21._O21);
                _y51._031();
                _g3._z21 = _dn;
                _g3._A21 -= 1;
            }
            _g3._z21 = null;
            _g3._A21 = 0;
            if (_g3._j21) {
                _g3._j21._k21 = _g3._k21;
            }
            if (_g3._k21) {
                _g3._k21._j21 = _g3._j21;
            }
            if (_g3 == this._151) {
                this._151 = _g3._k21;
            }
            _g3._z51 = true;
            --this._251;
        },
        _A51: function(_H21) {
            _PQ(this._K21() == false);
            if (this._K21()) {
                return null;
            }
            var _k3 = _B51._OL(_H21);
            _k3._j21 = null;
            _k3._k21 = this._h21;
            if (this._h21) {
                this._h21._j21 = _k3;
            }
            this._h21 = _k3;
            ++this._351;
            _k3._C51._XD = _k3;
            _k3._C51.other = _k3._D51;
            _k3._C51._ic = null;
            _k3._C51._kc = _k3._E51._h21;
            if (_k3._E51._h21) _k3._E51._h21._ic = _k3._C51;
            _k3._E51._h21 = _k3._C51;
            _k3._F51._XD = _k3;
            _k3._F51.other = _k3._E51;
            _k3._F51._ic = null;
            _k3._F51._kc = _k3._D51._h21;
            if (_k3._D51._h21) _k3._D51._h21._ic = _k3._F51;
            _k3._D51._h21 = _k3._F51;
            var _G51 = _H21._G51;
            var _H51 = _H21._H51;
            if (_H21._I51 == false) {
                var _NU = _H51._P31();
                while (_NU) {
                    if (_NU.other == _G51) {
                        _NU._W21._f41();
                    }
                    _NU = _NU._kc;
                }
            }
            return _k3;
        },
        _ME: function(_k3) {
            _PQ(this._K21() == false);
            if (this._K21()) {
                return;
            }
            var _I51 = _k3._W31;
            if (_k3._j21) {
                _k3._j21._k21 = _k3._k21;
            }
            if (_k3._k21) {
                _k3._k21._j21 = _k3._j21;
            }
            if (_k3 == this._h21) {
                this._h21 = _k3._k21;
            }
            var _G51 = _k3._E51;
            var _H51 = _k3._D51;
            _G51._uD(true);
            _H51._uD(true);
            if (_k3._C51._ic) {
                _k3._C51._ic._kc = _k3._C51._kc;
            }
            if (_k3._C51._kc) {
                _k3._C51._kc._ic = _k3._C51._ic;
            }
            if (_k3._C51 == _G51._h21) {
                _G51._h21 = _k3._C51._kc;
            }
            _k3._C51._ic = null;
            _k3._C51._kc = null;
            if (_k3._F51._ic) {
                _k3._F51._ic._kc = _k3._F51._kc;
            }
            if (_k3._F51._kc) {
                _k3._F51._kc._ic = _k3._F51._ic;
            }
            if (_k3._F51 == _H51._h21) {
                _H51._h21 = _k3._F51._kc;
            }
            _k3._F51._ic = null;
            _k3._F51._kc = null;
            _B51._031(_k3);
            _PQ(this._351 > 0);
            --this._351;
            if (_I51 == false) {
                var _NU = _H51._P31();
                while (_NU) {
                    if (_NU.other == _G51) {
                        _NU._W21._f41();
                    }
                    _NU = _NU._kc;
                }
            }
        },
        _J51: function(_J41, _M41, _N41) {
            _U41.start();
            if (this._821 & _T21._U21) {
                this._N21._K51();
                this._821 &= ~_T21._U21;
            }
            this._821 |= _T21._L51;
            this._c51._J41 = _J41;
            this._c51._M41 = _M41;
            this._c51._N41 = _N41;
            if (_J41 > 0.0) {
                this._c51._K41 = 1.0 / _J41;
            } else {
                this._c51._K41 = 0.0;
            }
            this._c51._L41 = this._b51 * _J41;
            this._c51._O41 = this._451; {
                _V41.start();
                this._N21._r_();
                _V41.stop();
            }
            if (this._751 && this._c51._J41 > 0.0) {
                _W41.start();
                this._f51._2S(this._c51);
                this._2S(this._c51);
                _W41.stop();
            }
            if (this._551 && this._c51._J41 > 0.0) {
                _X41.start();
                this._M51(this._c51);
                _X41.stop();
            }
            if (this._c51._J41 > 0.0) {
                this._b51 = this._c51._K41;
            }
            if (this._821 & _T21._a51) {
                this._N51();
            }
            this._821 &= ~_T21._L51;
            _U41.stop();
        },
        _N51: function() {
            for (var body = this._151; body; body = body._Q31()) {
                body._q21.x = body._q21.y = 0;
                body._r21 = 0.0;
            }
        },
        _O51: function() {
            if (this._051 == null) {
                return;
            }
            var _vP = this._051._gT();
            if (_vP & _dT._xT) {
                for (var _g3 = this._151; _g3; _g3 = _g3._Q31()) {
                    var _oS = _g3._vS();
                    for (var _dn = _g3._N31(); _dn; _dn = _dn._Q31()) {
                        if (_g3._K31() == false) {
                            this._P51(_dn, _oS, new _cT(0.5, 0.5, 0.3));
                        } else if (_g3._ST() == _V11._W11) {
                            this._P51(_dn, _oS, new _cT(0.5, 0.9, 0.5));
                        } else if (_g3._ST() == _V11._B21) {
                            this._P51(_dn,
                                _oS, new _cT(0.5, 0.5, 0.9));
                        } else if (_g3._I31() == false) {
                            this._P51(_dn, _oS, new _cT(0.6, 0.6, 0.6));
                        } else {
                            this._P51(_dn, _oS, new _cT(0.9, 0.7, 0.7));
                        }
                    }
                }
                this._Q51(this._f51);
            }
            if (_vP & _dT._yT) {
                for (var _k3 = this._h21; _k3; _k3 = _k3._Q31()) {
                    this._R51(_k3);
                }
            }
            if (_vP & _dT._HT) {
                var _R4 = new _cT(0.3, 0.9, 0.9);
                for (var c = this._N21._i21; c; c = c._Q31()) {
                    var _X21 = c._Y21();
                    var _Z21 = c.__21();
                    var _S51 = _X21._h41(c._T51())._sY();
                    var _U51 = _Z21._h41(c._V51())._sY();
                    this._051._rT(_S51, _U51, _R4);
                }
            }
            if (_vP & _dT._zT) {
                var _R4 = new _cT(0.9, 0.3, 0.9);
                var _W51 = new _cT(0.3,
                    0.3, 0.9);
                var _X51 = this._N21._O21;
                for (var _g3 = this._151; _g3; _g3 = _g3._Q31()) {
                    if (_g3._K31() == false) {
                        continue;
                    }
                    for (var _dn = _g3._N31(); _dn; _dn = _dn._Q31()) {
                        for (var i = 0; i < _dn._DV; ++i) {
                            var _j41 = _dn._C31[i];
                            var _YT = _X51._RV(_j41._KV);
                            var _pV = [];
                            _pV[0] = new _DR(_YT._dU.x, _YT._dU.y);
                            _pV[1] = new _DR(_YT._eU.x, _YT._dU.y);
                            _pV[2] = new _DR(_YT._eU.x, _YT._eU.y);
                            _pV[3] = new _DR(_YT._dU.x, _YT._eU.y);
                            this._051._kT(_pV, 4, _R4);
                            var _Y51 = new _qY();
                            _dn._941()._XT(_Y51, _g3._vS(), 0);
                            var _pV = [];
                            _pV[0] = new _DR(_Y51._dU.x, _Y51._dU.y);
                            _pV[1] = new _DR(_Y51._eU.x,
                                _Y51._dU.y);
                            _pV[2] = new _DR(_Y51._eU.x, _Y51._eU.y);
                            _pV[3] = new _DR(_Y51._dU.x, _Y51._eU.y);
                            this._051._kT(_pV, 4, _W51);
                        }
                    }
                }
            }
            if (_vP & _dT._AT) {
                for (var _g3 = this._151; _g3; _g3 = _g3._Q31()) {
                    var _oS = _g3._vS()._T();
                    _oS._6d = _g3._431();
                    this._051._uT(_oS);
                }
            }
        },
        _Z51: function(_YV, _YT) {
            var __51 = new _h51();
            __51._M21 = this._N21._O21;
            __51._YV = _YV;
            this._N21._O21._0W(__51, _YT);
            this._f51._Z51(_YV, _YT);
        },
        _VT: function(_YV, _061, _161) {
            var __51 = new _i51();
            __51._M21 = this._N21._O21;
            __51._YV = _YV;
            var _pt = new _oY();
            _pt._bU = 1.0;
            _pt._sT = _061;
            _pt._tT = _161;
            this._N21._O21._VT(__51, _pt);
            this._f51._VT(_YV, _061, _161);
        },
        _261: function() {
            return this._151;
        },
        _O31: function() {
            return this._h21;
        },
        _P31: function() {
            return this._N21._i21;
        },
        _361: function(_E31) {
            if (_E31 == this._851) {
                return;
            }
            this._851 = _E31;
            if (this._851 == false) {
                for (var _g3 = this._151; _g3; _g3 = _g3._k21) {
                    _g3._uD(true);
                }
            }
        },
        _461: function() {
            return this._851;
        },
        _561: function(_E31) {
            this._451 = _E31;
        },
        _661: function() {
            return this._451;
        },
        _761: function(_E31) {
            this._551 = _E31;
        },
        _861: function() {
            return this._551;
        },
        _961: function(_E31) {
            this._651 = _E31;
        },
        _a61: function() {
            return this._651;
        },
        _WV: function() {
            return this._N21._O21._WV();
        },
        _b61: function() {
            return this._251;
        },
        _c61: function() {
            return this._351;
        },
        _d61: function() {
            return this._N21._e61;
        },
        _6W: function() {
            return this._N21._O21._6W();
        },
        _7W: function() {
            return this._N21._O21._7W();
        },
        _9W: function() {
            return this._N21._O21._9W();
        },
        _6D: function(gravity) {
            this._951 = gravity;
        },
        _f61: function() {
            return this._951;
        },
        _K21: function() {
            return (this._821 & _T21._L51) == _T21._L51;
        },
        _g61: function(_E31) {
            if (_E31) {
                this._821 |= _T21._a51;
            } else {
                this._821 &= ~_T21._a51;
            }
        },
        _h61: function() {
            return (this._821 & _T21._a51) == _T21._a51;
        },
        _bW: function(_cW) {
            _PQ((this._821 & _T21._L51) == 0);
            if ((this._821 & _T21._L51) == _T21._L51) {
                return;
            }
            for (var _g3 = this._151; _g3; _g3 = _g3._k21) {
                _g3._9_._6d._KR(_cW);
                _g3._g21._rS._KR(_cW);
                _g3._g21.c._KR(_cW);
            }
            for (var _k3 = this._h21; _k3; _k3 = _k3._k21) {
                _k3._bW(_cW);
            }
            this._N21._O21._bW(_cW);
        },
        _i61: function() {
            return this._N21;
        },
        _2S: function(_rQ) {
            for (var _g3 = this._151; _g3; _g3 = _g3._k21) {
                _g3._f21._Zy(_g3._9_);
            }
            this._d51._1Y(this._251,
                this._N21._e61, this._351, this._N21._s51);
            for (var _g3 = this._151; _g3; _g3 = _g3._k21) {
                _g3._821 &= ~_V11._C21;
            }
            for (var c = this._N21._i21; c; c = c._k21) {
                c._821 &= ~_j61._C21;
            }
            for (var _k3 = this._h21; _k3; _k3 = _k3._k21) {
                _k3._k61 = false;
            }
            var _l61 = this._251;
            var _bd = new Array(_l61);
            for (var _m61 = this._151; _m61; _m61 = _m61._k21) {
                if (_m61._821 & _V11._C21) {
                    continue;
                }
                if (_m61._I31() == false || _m61._K31() == false) {
                    continue;
                }
                if (_m61._ST() == _V11._W11) {
                    continue;
                }
                this._d51._U9();
                var _n61 = 0;
                _bd[_n61++] = _m61;
                _m61._821 |= _V11._C21;
                while (_n61 > 0) {
                    var _g3 = _bd[--_n61];
                    _PQ(_g3._K31() == true);
                    this._d51._o61(_g3);
                    _g3._uD(true);
                    if (_g3._ST() == _V11._W11) {
                        continue;
                    }
                    for (var _z31 = _g3._i21; _z31; _z31 = _z31._kc) {
                        var _W21 = _z31._W21;
                        if (_W21._821 & _j61._C21) {
                            continue;
                        }
                        if (_W21._p61() == false || _W21._q61() == false) {
                            continue;
                        }
                        var _r61 = _W21._s61._641;
                        var _t61 = _W21._u61._641;
                        if (_r61 || _t61) {
                            continue;
                        }
                        this._d51._v61(_W21);
                        _W21._821 |= _j61._C21;
                        var other = _z31.other;
                        if (other._821 & _V11._C21) {
                            continue;
                        }
                        _PQ(_n61 < _l61);
                        _bd[_n61++] = other;
                        other._821 |= _V11._C21;
                    }
                    for (var _w51 = _g3._h21; _w51; _w51 = _w51._kc) {
                        if (_w51._XD._k61 == true) {
                            continue;
                        }
                        var other = _w51.other;
                        if (other._K31() == false) {
                            continue;
                        }
                        this._d51._w61(_w51._XD);
                        _w51._XD._k61 = true;
                        if (other._821 & _V11._C21) {
                            continue;
                        }
                        _PQ(_n61 < _l61);
                        _bd[_n61++] = other;
                        other._821 |= _V11._C21;
                    }
                }
                this._d51._2S(_rQ, this._951, this._851);
                for (var i = 0; i < this._d51._251; ++i) {
                    var _g3 = this._d51._x61[i];
                    if (_g3._ST() == _V11._W11) {
                        _g3._821 &= ~_V11._C21;
                    }
                }
            } {
                _Y41.start();
                for (var _g3 = this._151; _g3; _g3 = _g3._Q31()) {
                    if ((_g3._821 & _V11._C21) == 0) {
                        continue;
                    }
                    if (_g3._ST() == _V11._W11) {
                        continue;
                    }
                    _g3._y31();
                }
                this._N21._K51();
                _Y41.stop();
            }
        },
        _M51: function(_rQ) {
            this._d51._1Y(2 * _1R, _1R, 0, this._N21._s51);
            if (this._751) {
                for (var _g3 = this._151; _g3; _g3 = _g3._k21) {
                    _g3._821 &= ~_V11._C21;
                    _g3._g21._uS = 0.0;
                }
                for (var c = this._N21._i21; c; c = c._k21) {
                    c._821 &= ~(_j61._D21 | _j61._C21);
                    c._y61 = 0;
                    c._z61 = 1.0;
                }
            }
            for (;;) {
                var _A61 = null;
                var _B61 = 1.0;
                for (var c = this._N21._i21; c; c = c._k21) {
                    if (c._p61() == false) {
                        continue;
                    }
                    if (c._y61 > _0R) {
                        continue;
                    }
                    var alpha = 1.0;
                    if (c._821 & _j61._D21) {
                        alpha = c._z61;
                    } else {
                        var _C61 = c._Y21();
                        var _D61 = c.__21();
                        if (_C61._b41() || _D61._b41()) {
                            continue;
                        }
                        var _E61 = _C61._g41();
                        var _F61 = _D61._g41();
                        var _GX = _E61._QT;
                        var _HX = _F61._QT;
                        _PQ(_GX == _V11._t21 || _HX == _V11._t21);
                        var _G61 = _E61._I31() && _GX != _V11._W11;
                        var _H61 = _F61._I31() && _HX != _V11._W11;
                        if (_G61 == false && _H61 == false) {
                            continue;
                        }
                        var _I61 = _E61._F31() || _GX != _V11._t21;
                        var _J61 = _F61._F31() || _HX != _V11._t21;
                        if (_I61 == false && _J61 == false) {
                            continue;
                        }
                        var _uS = _E61._g21._uS;
                        if (_E61._g21._uS < _F61._g21._uS) {
                            _uS = _F61._g21._uS;
                            _E61._g21._xS(_uS);
                        } else if (_F61._g21._uS < _E61._g21._uS) {
                            _uS = _E61._g21._uS;
                            _F61._g21._xS(_uS);
                        }
                        _PQ(_uS < 1.0);
                        var _mW = c._T51();
                        var _nW = c._V51();
                        var _pt = new _511();
                        _pt._pW._7b(_C61._941(), _mW);
                        _pt._qW._7b(_D61._941(), _nW);
                        _pt._611._Zy(_E61._g21);
                        _pt._711._Zy(_F61._g21);
                        _pt._811 = 1.0;
                        var _rt = new _911();
                        _C11(_rt, _pt);
                        var _wS = _rt._f3;
                        if (_rt._Kz == _911._c11) {
                            alpha = _0T(_uS + (1.0 - _uS) * _wS, 1.0);
                        } else {
                            alpha = 1.0;
                        }
                        c._z61 = alpha;
                        c._821 |= _j61._D21;
                    }
                    if (alpha < _B61) {
                        _A61 = c;
                        _B61 = alpha;
                    }
                }
                if (_A61 == null || 1.0 - 10.0 * _SQ < _B61) {
                    this._751 = true;
                    break;
                }
                var _C61 = _A61._Y21();
                var _D61 = _A61.__21();
                var _E61 = _C61._g41();
                var _F61 = _D61._g41();
                _T21._j51._Zy(_E61._g21);
                _T21._k51._Zy(_F61._g21);
                _E61._xS(_B61);
                _F61._xS(_B61);
                _A61._V9(this._N21._s51);
                _A61._821 &= ~_j61._D21;
                ++_A61._y61;
                if (_A61._p61() == false || _A61._q61() == false) {
                    _A61._K61(false);
                    _E61._g21._Zy(_T21._j51);
                    _F61._g21._Zy(_T21._k51);
                    _E61._T31();
                    _F61._T31();
                    continue;
                }
                _E61._uD(true);
                _F61._uD(true);
                this._d51._U9();
                this._d51._o61(_E61);
                this._d51._o61(_F61);
                this._d51._v61(_A61);
                _E61._821 |= _V11._C21;
                _F61._821 |= _V11._C21;
                _A61._821 |= _j61._C21;
                var _L61 = [_E61, _F61];
                for (var i = 0; i < 2; ++i) {
                    var body = _L61[i];
                    if (body._QT == _V11._t21) {
                        for (var _z31 = body._i21; _z31; _z31 = _z31._kc) {
                            if (this._d51._251 == this._d51._M61) {
                                break;
                            }
                            if (this._d51._e61 == this._d51._N61) {
                                break;
                            }
                            var _W21 = _z31._W21;
                            if (_W21._821 & _j61._C21) {
                                continue;
                            }
                            var other = _z31.other;
                            if (other._QT == _V11._t21 && body._F31() == false && other._F31() == false) {
                                continue;
                            }
                            var _r61 = _W21._s61._641;
                            var _t61 = _W21._u61._641;
                            if (_r61 || _t61) {
                                continue;
                            }
                            _T21._l51._Zy(other._g21);
                            if ((other._821 & _V11._C21) == 0) {
                                other._xS(_B61);
                            }
                            _W21._V9(this._N21._s51);
                            if (_W21._p61() == false) {
                                other._g21._Zy(_T21._l51);
                                other._T31();
                                continue;
                            }
                            if (_W21._q61() == false) {
                                other._g21._Zy(_T21._l51);
                                other._T31();
                                continue;
                            }
                            _W21._821 |= _j61._C21;
                            this._d51._v61(_W21);
                            if (other._821 & _V11._C21) {
                                continue;
                            }
                            other._821 |= _V11._C21;
                            if (other._QT != _V11._W11) {
                                other._uD(true);
                            }
                            this._d51._o61(other);
                        }
                    }
                }
                var _O61 = new _I41();
                _O61._J41 = (1.0 - _B61) * _rQ._J41;
                _O61._K41 = 1.0 / _O61._J41;
                _O61._L41 = 1.0;
                _O61._N41 = 20;
                _O61._M41 = _rQ._M41;
                _O61._O41 = false;
                this._d51._M51(_O61, _E61._721, _F61._721);
                for (var i = 0; i < this._d51._251; ++i) {
                    var body = this._d51._x61[i];
                    body._821 &= ~_V11._C21;
                    if (body._QT != _V11._t21) {
                        continue;
                    }
                    body._y31();
                    for (var _z31 = body._i21; _z31; _z31 = _z31._kc) {
                        _z31._W21._821 &= ~(_j61._D21 | _j61._C21);
                    }
                }
                this._N21._K51();
                if (this._651) {
                    this._751 = false;
                    break;
                }
            }
        },
        _R51: function(_XD) {
            var _G51 = _XD._P61();
            var _H51 = _XD._Q61();
            var _XY = _G51._vS();
            var _ZY = _H51._vS();
            var _03 = _XY._6d;
            var _23 = _ZY._6d;
            var _sT = _XD._R61();
            var _tT = _XD._S61();
            var _R4 = new _cT(0.5, 0.8, 0.8);
            switch (_XD._ST()) {
                case _B51._T61:
                    this._051._rT(_sT, _tT, _R4);
                    break;
                case _B51._U61:
                    {
                        var _V61 = _XD;
                        var _Jm = _V61._W61();
                        var _Km = _V61._X61();
                        this._051._rT(_Jm, _sT, _R4);
                        this._051._rT(_Km, _tT, _R4);
                        this._051._rT(_Jm, _Km, _R4);
                    }
                    break;
                case _B51._Y61:
                    break;
                case _B51._Z61:
                    this._051.__61(_XD._071(), 5.0, _R4);
                default:
                    this._051._rT(_03, _sT, _R4);
                    this._051._rT(_sT, _tT, _R4);
                    this._051._rT(_23, _tT, _R4);
            }
        },
        _P51: function(_fD, _oS, _R4) {
            switch (_fD._ST()) {
                case _PT._3U:
                    {
                        var _fW = _fD._941();
                        var _oT = _QS(_oS, _fW._9U);
                        var _pF = _fW._RT;
                        var _qT = _OS(_oS._vt, new _DR(1.0, 0.0));
                        this._051._pT(_oT, _pF, _qT, _R4);
                    }
                    break;
                case _PT._4U:
                    {
                        var _NU = _fD._941();
                        var _U5 = _QS(_oS, _NU._mU);
                        var _Z1 = _QS(_oS,
                            _NU._nU);
                        this._051._rT(_U5, _Z1, _R4);
                    }
                    break;
                case _PT._6U:
                    {
                        var _hW = _fD._941();
                        var _n4 = _hW._AU;
                        var _35 = _hW._zU;
                        var _U5 = _QS(_oS, _35[0]);
                        for (var i = 1; i < _n4; ++i) {
                            var _Z1 = _QS(_oS, _35[i]);
                            this._051._rT(_U5, _Z1, _R4);
                            _U5 = _Z1;
                        }
                    }
                    break;
                case _PT._5U:
                    {
                        var _171 = _fD._941();
                        var _lT = _171._AU;
                        _PQ(_lT <= _VQ);
                        var _35 = new Array(_VQ);
                        for (var i = 0; i < _lT; ++i) {
                            _35[i] = _QS(_oS, _171._zU[i]);
                        }
                        this._051._mT(_35, _lT, _R4);
                    }
                    break;
                default:
                    break;
            }
        },
        _TF: function() {
            return this._f51._TF();
        },
        _YF: function(_n4) {
            this._f51._YF(_n4);
        },
        _0G: function(__F) {
            this._f51._0G(__F);
        },
        _VF: function() {
            return this._f51._VF();
        },
        _3G: function(_421) {
            this._f51._3G(_421);
        },
        _XF: function() {
            return this._f51._XF();
        },
        _2G: function(_1G) {
            this._f51._2G(_1G);
        },
        _WF: function() {
            return this._f51._WF();
        },
        _ZF: function(_pF) {
            this._f51._ZF(_pF);
        },
        _UF: function() {
            return this._f51._UF();
        },
        _nF: function(_H21) {
            _PQ(this._K21() == false);
            if (this._K21()) {
                return 0;
            }
            var _6d = this._f51._nF(_H21);
            return _6d;
        },
        _271: function(index, _371) {
            this._f51._271(index, _371);
        },
        _471: function(_jf, _oS, _371) {
            _PQ(this._K21() == false);
            if (this._K21()) {
                return 0;
            }
            return this._f51._471(_jf, _oS, _371);
        },
        _571: function(_H21) {
            _PQ(this._K21() == false);
            if (this._K21()) {
                return null;
            }
            var _Y4 = this._f51._571(_H21);
            return _Y4;
        },
        _671: function(_771, _871) {
            _PQ(this._K21() == false);
            if (this._K21()) {
                return;
            }
            this._f51._671(_771, _871);
        },
        _971: function(_bG, _371) {
            _PQ(this._K21() == false);
            if (this._K21()) {
                return;
            }
            this._f51._971(_bG, _371);
        },
        _a71: function() {
            return this._f51._a71();
        },
        _b71: function() {
            return this._f51._b71();
        },
        _c71: function() {
            return this._f51._c71();
        },
        _d71: function() {
            return this._f51._d71();
        },
        _e71: function() {
            return this._f51._e71();
        },
        _f71: function() {
            return this._f51._f71();
        },
        _g71: function(buffer, _h71) {
            this._f51._g71(buffer, _h71);
        },
        _i71: function(buffer, _h71) {
            this._f51._i71(buffer, _h71);
        },
        _j71: function(buffer, _h71) {
            this._f51._j71(buffer, _h71);
        },
        _k71: function(buffer, _h71) {
            this._f51._k71(buffer, _h71);
        },
        _l71: function(buffer, _h71) {
            this._f51._l71(buffer, _h71);
        },
        _m71: function() {
            return this._f51._n71;
        },
        _o71: function() {
            return this._f51._e61;
        },
        _p71: function() {
            return this._f51._q71;
        },
        _r71: function() {
            return this._f51._s71;
        },
        _t71: function() {
            return this._f51._t71();
        },
        _u71: function() {
            return this._f51._u71();
        },
        _cG: function() {
            return this._f51._cG();
        },
        _QF: function() {
            return this._f51._QF();
        },
        _Q51: function(_v71) {
            var _w71 = _v71._QF();
            if (_w71) {
                var _x71 = _v71._UF();
                var _y71 = _v71._b71();
                if (_v71._z71.data) {
                    var _A71 = _v71._d71();
                    this._051._MF(_y71, _x71, _A71, _w71);
                } else {
                    this._051._MF(_y71, _x71, null, _w71);
                }
            }
        }
    };
    _T21._U21 = 0x0001;
    _T21._L51 = 0x0002;
    _T21._a51 = 0x0004;

    function _B71(_h71) {
        this._C71 = new Array(_h71);
        this._n_ = 0;
        this._D71 = 0;
        this._E71 = _h71;
    }
    _B71.prototype = {
        _7B: function(_jc) {
            if (this._D71 >= this._E71) return;
            this._C71[this._D71++] = _jc;
        },
        _9B: function() {
            _PQ(this._n_ < this._D71);
            this._n_++;
        },
        _F71: function() {
            return this._n_ >= this._D71;
        },
        _G71: function() {
            return this._C71[this._n_];
        }
    };

    function _H71(_I71) {
        this._J71 = new Array(_I71);
        this._K71 = 0;
        this._L71 = 0;
        this._M71 = 0;
        this._N71 = null;
    }
    _H71._O71 = function() {
        this._oT = new _DR();
        this._P71 = 0;
    };
    _H71._Q71 = function(x, y, i, _Y4) {
        this._R71 = x;
        this._S71 = y;
        this._T71 = i;
        this._U71 = _Y4;
    };
    _H71.prototype = {
        _V71: function(_oT,
            _P71) {
            var _Y4 = (this._J71[this._K71++] = new _H71._O71());
            _Y4._oT._Zy(_oT);
            _Y4._P71 = _P71;
        },
        _W71: function(_pF) {
            _PQ(this._N71 == null);
            var _X71 = 1 / _pF;
            var _Qz = new _DR(+_RQ, +_RQ);
            var _4V = new _DR(-_RQ, -_RQ);
            for (var _dt = 0; _dt < this._K71; _dt++) {
                var _Y4 = this._J71[_dt];
                _Qz._Zy(_1T(_Qz, _Y4._oT));
                _4V._Zy(_3T(_4V, _Y4._oT));
            }
            this._L71 = 1 + ((_X71 * (_4V.x - _Qz.x)) >>> 0);
            this._M71 = 1 + ((_X71 * (_4V.y - _Qz.y)) >>> 0);
            this._N71 = new Array(this._L71 * this._M71);
            for (var i = 0; i < this._L71 * this._M71; i++) this._N71[i] = null;
            var _7d = new _B71(this._L71 * this._L71);
            for (var _dt = 0; _dt < this._K71; _dt++) {
                var _Y4 = this._J71[_dt];
                _Y4._oT._Zy(_DR._im(_X71, _DR._KR(_Y4._oT, _Qz)));
                var x = _2T(0, _0T(Math.floor(_Y4._oT.x), this._L71 - 1));
                var y = _2T(0, _0T(Math.floor(_Y4._oT.y), this._M71 - 1));
                _7d._7B(new _H71._Q71(x, y, x + y * this._L71, _Y4));
            }
            while (!_7d._F71()) {
                var x = _7d._G71()._R71;
                var y = _7d._G71()._S71;
                var i = _7d._G71()._T71;
                var _Y4 = _7d._G71()._U71;
                _7d._9B();
                if (!this._N71[i]) {
                    this._N71[i] = _Y4;
                    if (x > 0) {
                        _7d._7B(new _H71._Q71(x - 1, y, i - 1, _Y4));
                    }
                    if (y > 0) {
                        _7d._7B(new _H71._Q71(x, y - 1, i - this._L71, _Y4));
                    }
                    if (x < this._L71 - 1) {
                        _7d._7B(new _H71._Q71(x + 1, y, i + 1, _Y4));
                    }
                    if (y < this._M71 - 1) {
                        _7d._7B(new _H71._Q71(x, y + 1, i + this._L71, _Y4));
                    }
                }
            }
            var _Y71 = this._L71 + this._M71;
            for (var _Z71 = 0; _Z71 < _Y71; _Z71++) {
                for (var y = 0; y < this._M71; y++) {
                    for (var x = 0; x < this._L71 - 1; x++) {
                        var i = x + y * this._L71;
                        var _Z4 = this._N71[i];
                        var _g3 = this._N71[i + 1];
                        if (_Z4 != _g3) {
                            _7d._7B(new _H71._Q71(x, y, i, _g3));
                            _7d._7B(new _H71._Q71(x + 1, y, i + 1, _Z4));
                        }
                    }
                }
                for (var y = 0; y < this._M71 - 1; y++) {
                    for (var x = 0; x < this._L71; x++) {
                        var i = x + y * this._L71;
                        var _Z4 = this._N71[i];
                        var _g3 = this._N71[i + this._L71];
                        if (_Z4 != _g3) {
                            _7d._7B(new _H71._Q71(x, y, i, _g3));
                            _7d._7B(new _H71._Q71(x, y + 1, i + this._L71, _Z4));
                        }
                    }
                }
                var __71 = false;
                while (!_7d._F71()) {
                    var x = _7d._G71()._R71;
                    var y = _7d._G71()._S71;
                    var i = _7d._G71()._T71;
                    var _dt = _7d._G71()._U71;
                    _7d._9B();
                    var _Z4 = this._N71[i];
                    var _g3 = _dt;
                    if (_Z4 != _g3) {
                        var _081 = _Z4._oT.x - x;
                        var _181 = _Z4._oT.y - y;
                        var _281 = _g3._oT.x - x;
                        var _381 = _g3._oT.y - y;
                        var _PN = _081 * _081 + _181 * _181;
                        var _ks = _281 * _281 + _381 * _381;
                        if (_PN > _ks) {
                            this._N71[i] = _g3;
                            if (x > 0) {
                                _7d._7B(new _H71._Q71(x - 1, y, i - 1, _g3));
                            }
                            if (y > 0) {
                                _7d._7B(new _H71._Q71(x,
                                    y - 1, i - this._L71, _g3));
                            }
                            if (x < this._L71 - 1) {
                                _7d._7B(new _H71._Q71(x + 1, y, i + 1, _g3));
                            }
                            if (y < this._M71 - 1) {
                                _7d._7B(new _H71._Q71(x, y + 1, i + this._L71, _g3));
                            }
                            __71 = true;
                        }
                    }
                }
                if (!__71) {
                    break;
                }
            }
        },
        _481: function(_YV) {
            for (var y = 0; y < this._M71 - 1; y++) {
                for (var x = 0; x < this._L71 - 1; x++) {
                    var i = x + y * this._L71;
                    var _Z4 = this._N71[i];
                    var _g3 = this._N71[i + 1];
                    var c = this._N71[i + this._L71];
                    var _Cd = this._N71[i + 1 + this._L71];
                    if (_g3 != c) {
                        if (_Z4 != _g3 && _Z4 != c) {
                            _YV(_Z4._P71, _g3._P71, c._P71);
                        }
                        if (_Cd != _g3 && _Cd != c) {
                            _YV(_g3._P71, _Cd._P71, c._P71);
                        }
                    }
                }
            }
        }
    };

    function _581(_d3,
        _Y4, _g3, _Z4) {
        if (_d3 instanceof _cT) {
            this._d3 = (255 * _d3._d3);
            this._Y4 = (255 * _d3._Y4);
            this._g3 = (255 * _d3._g3);
            this._Z4 = 255;
        } else if (typeof(_d3) !== 'undefined') {
            this._d3 = _d3;
            this._Y4 = _Y4;
            this._g3 = _g3;
            this._Z4 = _Z4;
        } else this._d3 = this._Y4 = this._g3 = this._Z4 = 0;
    }
    _581.prototype = {
        _681: function() {
            return !this._d3 && !this._Y4 && !this._g3 && !this._Z4;
        },
        _781: function() {
            return new _cT(1.0 / 255 * this._d3, 1.0 / 255 * this._Y4, 1.0 / 255 * this._g3);
        },
        _7b: function(_881, _981, _a81, _b81) {
            if (_881 instanceof _cT) {
                this._d3 = (255 * _881._d3);
                this._Y4 = (255 * _881._Y4);
                this._g3 = (255 * _881._g3);
                this._Z4 = 255;
            } else {
                this._d3 = _881;
                this._Y4 = _981;
                this._g3 = _a81;
                this._Z4 = _b81;
            }
        },
        _Zy: function(_c81) {
            this._d3 = _c81._d3;
            this._Y4 = _c81._Y4;
            this._g3 = _c81._g3;
            this._Z4 = _c81._Z4;
        },
        _T: function() {
            return new _581(this._d3, this._Y4, this._g3, this._Z4);
        }
    };
    _581._d81 = new _581();

    function _e81() {
        this._vP = 0;
        this.position = new _DR();
        this._7I = new _DR();
        this._R4 = new _581();
        this._JV = null;
    }
    _e81._f81 = 0;
    _e81._g81 = 1 << 1;
    _e81._h81 = 1 << 2;
    _e81._i81 = 1 << 3;
    _e81._j81 = 1 << 4;
    _e81._k81 = 1 << 5;
    _e81._l81 = 1 << 6;
    _e81._m81 = 1 << 7;
    _e81._n81 = 1 << 8;
    _e81._o81 = 1 << 9;

    function _p81() {
        this._vP = 0;
        this._q81 = 0;
        this.position = new _DR();
        this._E4 = 0;
        this._X11 = new _DR();
        this._Y11 = 0;
        this._R4 = new _581();
        this._zF = 1;
        this._jf = null;
        this._r81 = true;
        this._JV = null;
    }

    function _s81() {
        this._t81 = null;
        this._u81 = 0;
        this._v81 = 0;
        this._w81 = 0;
        this._x81 = 1.0;
        this._j21 = null;
        this._k21 = null;
        this._y81 = -1;
        this._u21 = 0;
        this._z81 = 0;
        this._A81 = new _DR();
        this._l21 = new _DR();
        this._m21 = 0;
        this._B81 = new _nS();
        this._B81._ZR();
        this._C81 = true;
        this._D81 = false;
        this._E81 = false;
        this._y21 = null;
    }
    _s81.prototype = {
        _Q31: function() {
            return this._k21;
        },
        _QF: function() {
            return this._v81 - this._u81;
        },
        _F81: function() {
            return this._u81;
        },
        _9G: function() {
            return this._w81;
        },
        _8G: function(_vP) {
            this._w81 = _vP;
        },
        _g31: function() {
            this._G81();
            return this._u21;
        },
        _h31: function() {
            this._G81();
            return this._z81;
        },
        _sY: function() {
            this._G81();
            return this._A81;
        },
        _731: function() {
            this._G81();
            return this._l21;
        },
        _931: function() {
            this._G81();
            return this._m21;
        },
        _vS: function() {
            return this._B81;
        },
        _IC: function() {
            return this._B81._6d;
        },
        _kS: function() {
            return this._B81._vt._kS();
        },
        _SV: function() {
            return this._y21;
        },
        _R31: function(data) {
            this._y21 = data;
        },
        _G81: function() {
            if (this._y81 != this._t81._y81) {
                var __2 = this._t81._H81();
                this._u21 = 0;
                this._A81._ER();
                this._l21._ER();
                for (var i = this._u81; i < this._v81; i++) {
                    this._u21 += __2;
                    this._A81._1b(_DR._im(__2, this._t81._I81.data[i]));
                    this._l21._1b(_DR._im(__2, this._t81._J81.data[i]));
                }
                if (this._u21 > 0) {
                    this._A81._im(1 / this._u21);
                    this._l21._im(1 / this._u21);
                }
                this._z81 = 0;
                this._m21 = 0;
                for (var i = this._u81; i < this._v81; i++) {
                    var _6d = _DR._KR(this._t81._I81.data[i],
                        this._A81);
                    var _X1 = _DR._KR(this._t81._J81.data[i], this._l21);
                    this._z81 += __2 * _zS(_6d, _6d);
                    this._m21 += __2 * _AS(_6d, _X1);
                }
                if (this._z81 > 0) {
                    this._m21 *= 1 / this._z81;
                }
                this._y81 = this._t81._y81;
            }
        }
    };
    _s81._K81 = 1 << 0;
    _s81._L81 = 1 << 1;

    function _M81() {
        this._mW = this._nW = 0;
        this._vP = 0;
        this._N81 = 0.0;
        this._2U = new _DR();
    };

    function _O81() {
        this.index = 0;
        this.body = null;
        this._N81 = 0.0;
        this._2U = new _DR();
        this._NT = 0.0;
    };

    function _g51() {
        this._y81 = 0;
        this._P81 = 0;
        this._Q81 = 0;
        this._R21 = 1;
        this._R81 = 1;
        this._p21 = 1;
        this._S81 = 1;
        this._T81 = 1;
        this._U81 = 1;
        this._AU = 0;
        this._V81 = 0;
        this._W81 = 0;
        this._X81 = new _g51._Y81();
        this._I81 = new _g51._Y81();
        this._J81 = new _g51._Y81();
        this._Z81 = null;
        this.__81 = null;
        this._091 = null;
        this._z71 = new _g51._Y81();
        this._191 = null;
        this._291 = new _g51._Y81();
        this._DV = 0;
        this._391 = 0;
        this._491 = null;
        this._e61 = 0;
        this._N61 = 0;
        this._n71 = null;
        this._s71 = 0;
        this._591 = 0;
        this._q71 = null;
        this._EV = 0;
        this._691 = 0;
        this._FV = null;
        this._791 = 0;
        this._891 = 0;
        this._991 = null;
        this._a91 = 0;
        this._b91 = null;
        this._c91 = 0.05;
        this._d91 = 1.0;
        this._e91 = 0.25;
        this._f91 = 0.25;
        this._g91 = 0.25;
        this._h91 = 0.1;
        this._i91 = 0.2;
        this._j91 = 0.5;
        this._k91 = 0.5;
        this._l91 = 0.5;
        this._e21 = null;
    }
    _g51._Y81 = function() {
        this.data = null;
        this._m91 = 0;
    };
    _g51._n91 = function() {
        this.index = 0;
        this._P71 = 0;
    };
    _g51._n91._o91 = function(_Z4, _g3) {
        return _Z4._P71 < _g3._P71;
    };
    _g51._n91._p91 = function(_Z4, _g3) {
        return _Z4 < _g3._P71;
    };
    _g51._n91._q91 = function(_Z4, _g3) {
        return _Z4._P71 < _g3;
    };
    _g51._r91 = function() {
        this._mW = this._nW = 0;
        this._vP = 0;
        this._zF = 0.0;
        this._1U = 0.0;
    };
    _g51._s91 = function() {
        this._mW = this._nW = this._t91 = 0;
        this._vP = 0;
        this._zF = 0.0;
        this._u91 = new _DR(), this._v91 = new _DR(), this._c81 = new _DR();
        this._w91 = 0.0, this._x91 = 0.0, this._y91 = 0.0, this._Cb = 0.0;
    };
    _g51._z91 = _e81._i81;
    _g51._A91 = _e81._j81;
    _g51._B91 = _e81._l81;
    _g51._C91 = 12;
    _g51._D91 = 12;
    _g51._E91 = 8 * 4;
    _g51._F91 = 1 << (_g51._D91 - 1);
    _g51._G91 = _g51._E91 - _g51._D91;
    _g51._H91 = _g51._E91 - _g51._D91 - _g51._C91;
    _g51._I91 = 1 << _g51._H91;
    _g51._J91 = _g51._I91 * (1 << (_g51._C91 - 1));
    _g51._K91 = (1 << _g51._C91) - 1;
    _g51._L91 = (1 << _g51._D91) - 1;

    function _M91(x, y) {
        return ((y + _g51._F91) << _g51._G91) + (_g51._I91 * x + _g51._J91) >>> 0;
    }

    function _N91(_P71, x, y) {
        return _P71 + (y << _g51._G91) + (x << _g51._H91);
    }

    function _O91(_h71, _P91) {
        return _P91 && _h71 > _P91 ? _P91 : _h71;
    }

    function _Q91(_W21) {
        return (_W21._vP & _e81._g81) == _e81._g81;
    }
    _g51.prototype = {
        _R91: function(_S91, _T91, _U91) {
            _PQ(_U91 > _T91);
            var _V91 = (_S91) ? _S91.slice() : [];
            _V91.length = _U91;
            return _V91;
        },
        _W91: function(buffer, _m91, _T91, _U91, _X91) {
            _PQ(_U91 > _T91);
            _PQ(!_m91 || _U91 <= _m91);
            if ((!_X91 || buffer) && !_m91) {
                buffer = this._R91(buffer, _T91, _U91);
            }
            return buffer;
        },
        _Y91: function(buffer, _T91, _U91, _X91) {
            _PQ(_U91 > _T91);
            return this._W91(buffer.data, buffer._m91, _T91, _U91, _X91);
        },
        _Z91: function(buffer) {
            if (!buffer) {
                buffer = new Array(this._V81);
                for (var i = 0; i < this._V81; i++) {
                    buffer[i] = 0;
                }
            }
            return buffer;
        },
        _nF: function(_H21) {
            if (this._AU >= this._V81) {
                var _h71 = this._AU ? 2 * this._AU : _kR;
                _h71 = _O91(_h71, this._W81);
                _h71 = _O91(_h71, this._X81._m91);
                _h71 = _O91(_h71, this._I81._m91);
                _h71 = _O91(_h71, this._J81._m91);
                _h71 = _O91(_h71, this._z71._m91);
                _h71 = _O91(_h71, this._291._m91);
                if (this._V81 < _h71) {
                    this._X81.data = this._Y91(this._X81, this._V81, _h71,
                        false);
                    this._I81.data = this._Y91(this._I81, this._V81, _h71, false);
                    this._J81.data = this._Y91(this._J81, this._V81, _h71, false);
                    this._Z81 = this._W91(this._Z81, 0, this._V81, _h71, false);
                    this.__81 = this._W91(this.__81, 0, this._V81, _h71, true);
                    this._091 = this._W91(this._091, 0, this._V81, _h71, true);
                    this._z71.data = this._Y91(this._z71, this._V81, _h71, true);
                    this._191 = this._W91(this._191, 0, this._V81, _h71, false);
                    this._291.data = this._Y91(this._291, this._V81, _h71, true);
                    this._V81 = _h71;
                }
            }
            if (this._AU >= this._V81) {
                return _eR;
            }
            var index = this._AU++;
            this._X81.data[index] = _H21._vP;
            this._I81.data[index] = _H21.position._T();
            this._J81.data[index] = _H21._7I._T();
            this._191[index] = null;
            if (this._091) {
                this._091[index] = 0;
            }
            if (this._z71.data || !_H21._R4._681()) {
                this._z71.data = this._Z91(this._z71.data);
                this._z71.data[index] = _H21._R4._T();
            }
            if (this._291.data || _H21._JV) {
                this._291.data = this._Z91(this._291.data);
                this._291.data[index] = _H21._JV;
            }
            if (this._DV >= this._391) {
                var _T91 = this._391;
                var _U91 = this._DV ? 2 * this._DV : _kR;
                this._491 = this._R91(this._491, _T91, _U91);
                this._391 = _U91;
            }
            this._491[this._DV] = new _g51._n91();
            this._491[this._DV++].index = index;
            return index;
        },
        _271: function(index, _371) {
            var _vP = _e81._g81;
            if (_371) {
                _vP |= _e81._o81;
            }
            this._X81.data[index] |= _vP;
        },
        _471: function(_jf, _oS, _371) {
            function __91(_v71, _jf, _oS, _371) {
                this._t81 = _v71;
                this._441 = _jf;
                this._9_ = _oS;
                this._0a1 = _371;
                this._z51 = 0;
            }
            __91.prototype = {
                _F41: function(_fD) {
                    return false;
                },
                _G41: function(index) {
                    _PQ(index >= 0 && index < this._t81._AU);
                    if (this._441._UT(this._9_, this._t81._I81.data[index])) {
                        this._t81._271(index, this._0a1);
                        this._z51++;
                    }
                    return true;
                },
                _1a1: function() {
                    return this._z51;
                }
            };
            var _YV = new __91(this, _jf, _oS, _371);
            var _YT = new _qY();
            _jf._XT(_YT, _oS, 0);
            this._e21._Z51(_YV, _YT);
            return _YV._1a1();
        },
        _971: function(_bG, _371) {
            for (var i = _bG._u81; i < _bG._v81; i++) {
                this._271(i, _371);
            }
        },
        _571: function(_2a1) {
            var _K5 = this._3a1();
            var identity = new _nS();
            identity._ZR();
            var transform = identity._T();
            var _4a1 = this._AU;
            if (_2a1._jf) {
                var _5a1 = new _e81();
                _5a1._vP = _2a1._vP;
                _5a1._R4 = _2a1._R4;
                _5a1._JV = _2a1._JV;
                var _jf = _2a1._jf;
                transform._7b(_2a1.position,
                    _2a1._E4);
                var _YT = new _qY();
                var _i41 = _jf._TT();
                for (var _WT = 0; _WT < _i41; _WT++) {
                    if (_WT == 0) {
                        _jf._XT(_YT, identity, _WT);
                    } else {
                        var _6a1 = new _qY();
                        _jf._XT(_6a1, identity, _WT);
                        _YT._vY(_6a1);
                    }
                }
                for (var y = Math.floor(_YT._dU.y / _K5) * _K5; y < _YT._eU.y; y += _K5) {
                    for (var x = Math.floor(_YT._dU.x / _K5) * _K5; x < _YT._eU.x; x += _K5) {
                        var _6d = new _DR(x, y);
                        if (_jf._UT(identity, _6d)) {
                            _6d = _QS(transform, _6d);
                            _5a1.position._Zy(_6d);
                            _5a1._7I._Zy(_DR._1b(_2a1._X11, _CS(_2a1._Y11, _DR._KR(_6d, _2a1.position))));
                            this._nF(_5a1);
                        }
                    }
                }
            }
            var lastIndex = this._AU;
            var _bG = new _s81();
            _bG._t81 = this;
            _bG._u81 = _4a1;
            _bG._v81 = lastIndex;
            _bG._w81 = _2a1._q81;
            _bG._x81 = _2a1._zF;
            _bG._y21 = _2a1._JV;
            _bG._B81 = transform;
            _bG._C81 = _2a1._r81;
            _bG._j21 = null;
            _bG._k21 = this._b91;
            if (this._b91) {
                this._b91._j21 = _bG;
            }
            this._b91 = _bG;
            ++this._a91;
            for (var i = _4a1; i < lastIndex; i++) {
                this._191[i] = _bG;
            }
            this._7a1(true);
            if (_2a1._vP & _g51._z91) {
                for (var _dt = 0; _dt < this._e61; _dt++) {
                    var _W21 = this._n71[_dt];
                    var _Z4 = _W21._mW;
                    var _g3 = _W21._nW;
                    if (_Z4 > _g3) {
                        var _8a1 = _Z4;
                        _Z4 = _g3;
                        _g3 = _8a1;
                    }
                    if (_4a1 <= _Z4 && _g3 < lastIndex) {
                        if (this._EV >= this._691) {
                            var _T91 = this._691;
                            var _U91 = this._EV ? 2 * this._EV : _kR;
                            this._FV = this._R91(this._FV, _T91, _U91);
                            this._691 = _U91;
                        }
                        var _5W = this._FV[this._EV] = new _g51._r91();
                        _5W._mW = _Z4;
                        _5W._nW = _g3;
                        _5W._vP = _W21._vP;
                        _5W._zF = _2a1._zF;
                        _5W._1U = _FS(this._I81.data[_Z4], this._I81.data[_g3]);
                        this._EV++;
                    }
                }
            }
            if (_2a1._vP & _g51._A91) {
                var _9a1 = new _H71(lastIndex - _4a1);
                for (var i = _4a1; i < lastIndex; i++) {
                    _9a1._V71(this._I81.data[i], i);
                }
                _9a1._W71(_K5 / 2);
                var _YV = function _aa1(_Z4, _g3, c) {
                    var _u91 = this._I81.data[_Z4];
                    var _v91 = this._I81.data[_g3];
                    var _c81 = this._I81.data[c];
                    var _ba1 = _DR._KR(_u91, _v91);
                    var _ca1 = _DR._KR(_v91, _c81);
                    var _da1 = _DR._KR(_c81, _u91);
                    var _ea1 = _jR * this._U81;
                    if (_fa1(_ba1, _ba1) < _ea1 && _fa1(_ca1, _ca1) < _ea1 && _fa1(_da1, _da1) < _ea1) {
                        if (this._791 >= this._891) {
                            var _T91 = this._891;
                            var _U91 = this._791 ? 2 * this._791 : _kR;
                            this._991 = this._R91(this._991, _T91, _U91);
                            this._891 = _U91;
                        }
                        var _ga1 = this._991[this._791];
                        _ga1._mW = _Z4;
                        _ga1._nW = _g3;
                        _ga1._t91 = c;
                        _ga1._vP = this._X81.data[_Z4] | this._X81.data[_g3] | this._X81.data[c];
                        _ga1._zF = _2a1._zF;
                        var _ha1 = _DR._im(1.0 / 3.0, _DR._1b(_u91, _DR._1b(_v91,
                            _c81)));
                        _ga1._u91 = _DR._KR(_u91, _ha1);
                        _ga1._v91 = _DR._KR(_v91, _ha1);
                        _ga1._c81 = _DR._KR(_c81, _ha1);
                        _ga1._w91 = -_zS(_da1, _ba1);
                        _ga1._x91 = -_zS(_ba1, _ca1);
                        _ga1._y91 = -_zS(_ca1, _da1);
                        _ga1._Cb = _AS(_u91, _v91) + _AS(_v91, _c81) + _AS(_c81, _u91);
                        this._791++;
                    }
                };
                _9a1._481(_YV);
            }
            if (_2a1._q81 & _e81._K81) {
                _ia1(_bG);
            }
            return _bG;
        },
        _671: function(_771, _871) {
            _PQ(_771 != _871);
            this._ja1(_871._u81, _871._v81, this._AU);
            _PQ(_871._v81 == this._AU);
            this._ja1(_771._u81, _771._v81, _871._u81);
            this._PQ(_771._v81 == _871._u81);
            var _ka1 = 0;
            for (var i = _771._u81; i < _871._v81; i++) {
                _ka1 |= this._X81.data[i];
            }
            this._7a1(true);
            if (_ka1 & _g51._z91) {
                for (var _dt = 0; _dt < this._e61; _dt++) {
                    var _W21 = this._n71[_dt];
                    var _Z4 = _W21._mW;
                    var _g3 = _W21._nW;
                    if (_Z4 > _g3) {
                        var _8a1 = _Z4;
                        _Z4 = _g3;
                        _g3 = _8a1;
                    }
                    if (_771._u81 <= _Z4 && _Z4 < _771._v81 && _871._u81 <= _g3 && _g3 < _871._v81) {
                        if (this._EV >= this._691) {
                            var _T91 = this._691;
                            var _U91 = this._EV ? 2 * this._EV : _kR;
                            this._FV = this._R91(this._FV, _T91, _U91);
                            this._691 = _U91;
                        }
                        var _5W = this._FV[this._EV] = new _g51._r91();
                        _5W._mW = _Z4;
                        _5W._nW = _g3;
                        _5W._vP = _W21._vP;
                        _5W._zF = _0T(_771._x81,
                            _871._x81);
                        _5W._1U = _FS(this._I81.data[_Z4], this._I81.data[_g3]);
                        this._EV++;
                    }
                }
            }
            if (_ka1 & _g51._A91) {
                var _9a1 = new _H71(_871._v81 - _771._u81);
                for (var i = _771._u81; i < _871._v81; i++) {
                    if (!(this._X81.data[i] & _e81._g81)) {
                        _9a1._V71(this._I81.data[i], i);
                    }
                }
                _9a1._W71(this._3a1() / 2);
                var _YV = new _la1();
                _YV._v71 = this;
                _YV._771 = _771;
                _YV._871 = _871;
                _9a1._481(_YV);
            }
            for (var i = _871._u81; i < _871._v81; i++) {
                this._191[i] = _771;
            }
            var _q81 = _771._w81 | _871._w81;
            _771._w81 = _q81;
            _771._v81 = _871._v81;
            _871._u81 = _871._v81;
            this._ma1(_871);
            if (_q81 & _e81._K81) {
                this._ia1(_771);
            }
        },
        _ma1: function(_bG) {
            _PQ(this._a91 > 0);
            _PQ(_bG);
            if (this._e21.__41) {
                this._e21.__41._na1(_bG);
            }
            for (var i = _bG._u81; i < _bG._v81; i++) {
                this._191[i] = null;
            }
            if (_bG._j21) {
                _bG._j21._k21 = _bG._k21;
            }
            if (_bG._k21) {
                _bG._k21._j21 = _bG._j21;
            }
            if (_bG == this._b91) {
                this._b91 = _bG._k21;
            }--this._a91;
        },
        _ia1: function(_bG) {
            for (var i = _bG._u81; i < _bG._v81; i++) {
                this._Z81[i] = 0;
            }
            for (var _dt = 0; _dt < this._e61; _dt++) {
                var _W21 = this._n71[_dt];
                var _Z4 = _W21._mW;
                var _g3 = _W21._nW;
                if (_Z4 >= _bG._u81 && _Z4 < _bG._v81 && _g3 >= _bG._u81 && _g3 < _bG._v81) {
                    var w = _W21._N81;
                    this._Z81[_Z4] += w;
                    this._Z81[_g3] += w;
                }
            }
            this._091 = this._Z91(this._091);
            for (var i = _bG._u81; i < _bG._v81; i++) {
                var w = this._Z81[i];
                this._091[i] = w < 0.8 ? 0 : _RQ;
            }
            var _oa1 = _bG._QF();
            for (var _f3 = 0; _f3 < _oa1; _f3++) {
                var __71 = false;
                for (var _dt = 0; _dt < this._e61; _dt++) {
                    var _W21 = this._n71[_dt];
                    var _Z4 = _W21._mW;
                    var _g3 = _W21._nW;
                    if (_Z4 >= _bG._u81 && _Z4 < _bG._v81 && _g3 >= _bG._u81 && _g3 < _bG._v81) {
                        var _d3 = 1 - _W21._N81;
                        var _pa1 = this._091[_Z4];
                        var _qa1 = this._091[_g3];
                        var _ra1 = _qa1 + _d3;
                        var _sa1 = _pa1 + _d3;
                        if (_pa1 > _ra1) {
                            _pa1 = _ra1;
                            __71 = true;
                        }
                        if (_qa1 > _sa1) {
                            _qa1 = _sa1;
                            __71 = true;
                        }
                        this._091[_Z4] = _pa1;
                        this._091[_g3] = _qa1;
                    }
                }
                if (!__71) {
                    break;
                }
            }
            for (var i = _bG._u81; i < _bG._v81; i++) {
                var _6d = this._091[i];
                if (_6d < _RQ) {
                    _6d *= this._S81;
                } else {
                    _6d = 0;
                }
                this._091[i] = _6d;
            }
        },
        _v61: function(_Z4, _g3) {
            var _Cd = _DR._KR(this._I81.data[_g3], this._I81.data[_Z4]);
            var _ta1 = _zS(_Cd, _Cd);
            if (_ta1 < this._U81) {
                if (this._e61 >= this._N61) {
                    var _T91 = this._N61;
                    var _U91 = this._e61 ? 2 * this._e61 : _kR;
                    this._n71 = this._R91(this._n71, _T91, _U91);
                    this._N61 = _U91;
                }
                var _ua1 = _CR(_ta1);
                var _W21 = this._n71[this._e61] = new _M81();
                _W21._mW = _Z4;
                _W21._nW = _g3;
                _W21._vP = this._X81.data[_Z4] | this._X81.data[_g3];
                _W21._N81 = 1 - _ta1 * _ua1 * this._T81;
                _W21._2U._Zy(_DR._im(_ua1, _Cd));
                this._e61++;
            }
        },
        _7a1: function(_va1) {
            var _wa1 = 0;
            var _xa1 = this._DV;
            for (var _ya1 = _wa1; _ya1 < _xa1; ++_ya1) {
                var _j41 = this._491[_ya1];
                var i = _j41.index;
                var _6d = this._I81.data[i];
                _j41._P71 = _M91(this._T81 * _6d.x, this._T81 * _6d.y);
            }
            this._491._lQ(_wa1, _xa1, function(_Z4, _g3) {
                return _g51._n91._o91(_Z4, _g3);
            });
            this._e61 = 0;
            for (var _Z4 = _wa1, c = _wa1; _Z4 < _xa1; _Z4++) {
                var _za1 = _N91(this._491[_Z4]._P71,
                    1, 0);
                for (var _g3 = _Z4 + 1; _g3 < _xa1; _g3++) {
                    if (_za1 < this._491[_g3]._P71) break;
                    this._v61(this._491[_Z4].index, this._491[_g3].index);
                }
                var _Aa1 = _N91(this._491[_Z4]._P71, -1, 1);
                for (; c < _xa1; c++) {
                    if (_Aa1 <= this._491[c]._P71) break;
                }
                var _Ba1 = _N91(this._491[_Z4]._P71, 1, 1);
                for (var _g3 = c; _g3 < _xa1; _g3++) {
                    if (_Ba1 < this._491[_g3]._P71) break;
                    this._v61(this._491[_Z4].index, this._491[_g3].index);
                }
            }
            if (_va1) {
                this._e61 = this._n71._oQ(_Q91, this._e61);
            }
        },
        _Ca1: function() {
            var _YT = new _qY();
            _YT._dU.x = +_RQ;
            _YT._dU.y = +_RQ;
            _YT._eU.x = -_RQ;
            _YT._eU.y = -_RQ;
            for (var i = 0; i < this._AU; i++) {
                var _6d = this._I81.data[i];
                _YT._dU._Zy(_1T(_YT._dU, _6d));
                _YT._eU._Zy(_3T(_YT._eU, _6d));
            }
            _YT._dU.x -= this._S81;
            _YT._dU.y -= this._S81;
            _YT._eU.x += this._S81;
            _YT._eU.y += this._S81;
            this._s71 = 0;

            function _Da1(_v71) {
                this._t81 = _v71;
            }
            _Da1.prototype = {
                _F41: function(_fD) {
                    if (_fD._b41()) {
                        return true;
                    }
                    var _jf = _fD._941();
                    var _g3 = _fD._g41();
                    var _X51 = _g3._431();
                    var _Ea1 = _g3._g31();
                    var _Fa1 = _g3._h31() - _Ea1 * _g3._531()._MR();
                    var _Ga1 = _Ea1 > 0 ? 1 / _Ea1 : 0;
                    var _Ha1 = _Fa1 > 0 ? 1 / _Fa1 : 0;
                    var _i41 = _jf._TT();
                    for (var _WT = 0; _WT < _i41; _WT++) {
                        var _YT = _fD._h41(_WT)._T();
                        _YT._dU.x -= this._t81._S81;
                        _YT._dU.y -= this._t81._S81;
                        _YT._eU.x += this._t81._S81;
                        _YT._eU.y += this._t81._S81;
                        var _wa1 = 0;
                        var _xa1 = this._t81._DV;
                        var _Ia1 = this._t81._491._qQ(_wa1, _xa1, _M91(this._t81._T81 * _YT._dU.x, this._t81._T81 * _YT._dU.y), function(_Z4, _g3) {
                            return _g51._n91._q91(_Z4, _g3);
                        });
                        var _Ja1 = this._t81._491._tQ(_Ia1, _xa1, _M91(this._t81._T81 * _YT._eU.x, this._t81._T81 * _YT._eU.y), function(_Z4, _g3) {
                            return _g51._n91._p91(_Z4, _g3);
                        });
                        for (var _j41 = _Ia1; _j41 != _Ja1;
                            ++_j41) {
                            var _Ka1 = this._t81._491[_j41];
                            var _Z4 = _Ka1.index;
                            var _La1 = this._t81._I81.data[_Z4];
                            if (_YT._dU.x <= _La1.x && _La1.x <= _YT._eU.x && _YT._dU.y <= _La1.y && _La1.y <= _YT._eU.y) {
                                var _Cd = [0];
                                var _X2 = new _DR();
                                _fD._0U(_La1, _Cd, _X2, _WT);
                                if (_Cd[0] < this._t81._S81) {
                                    var _Ma1 = this._t81._X81.data[_Z4] & _e81._h81 ? 0 : this._t81._Na1();
                                    var _Oa1 = _DR._KR(_La1, _X51);
                                    var _Pa1 = _AS(_Oa1, _X2);
                                    if (this._t81._s71 >= this._t81._591) {
                                        var _T91 = this._t81._591;
                                        var _U91 = this._t81._s71 ? 2 * this._t81._s71 : _kR;
                                        this._t81._q71 = this._t81._R91(this._t81._q71,
                                            _T91, _U91);
                                        this._t81._591 = _U91;
                                    }
                                    var _W21 = this._t81._q71[this._t81._s71] = new _O81();
                                    _W21.index = _Z4;
                                    _W21.body = _g3;
                                    _W21._N81 = 1 - _Cd[0] * this._t81._T81;
                                    _W21._2U._Zy(_X2._HR());
                                    _W21._NT = 1 / (_Ma1 + _Ga1 + _Ha1 * _Pa1 * _Pa1);
                                    this._t81._s71++;
                                }
                            }
                        }
                    }
                    return true;
                },
                _G41: function(i) {
                    return false;
                }
            };
            var _YV = new _Da1(this);
            this._e21._Z51(_YV, _YT);
        },
        _2S: function(_rQ) {
            ++this._y81;
            if (this._AU == 0) {
                return;
            }
            this._P81 = 0;
            for (var i = 0; i < this._AU; i++) {
                this._P81 |= this._X81.data[i];
            }
            if (this._P81 & _e81._g81) {
                this._Qa1();
            }
            this._Q81 = 0;
            for (var _bG = this._b91; _bG; _bG = _bG._Q31()) {
                this._Q81 |= _bG._w81;
            }
            var gravity = _DR._im(_rQ._J41 * this._p21, this._e21._f61());
            var _Ra1 = this._Sa1(_rQ);
            for (var i = 0; i < this._AU; i++) {
                var _X1 = this._J81.data[i];
                _X1._1b(gravity);
                var _Z1 = _zS(_X1, _X1);
                if (_Z1 > _Ra1) {
                    _X1._im(_AR(_Ra1 / _Z1));
                }
            }
            this._Ta1(_rQ);
            if (this._Q81 & _s81._L81) {
                this._Ua1(_rQ);
            }
            if (this._P81 & _e81._h81) {
                this._Va1(_rQ);
            }
            for (var i = 0; i < this._AU; i++) {
                this._I81.data[i]._1b(_DR._im(_rQ._J41, this._J81.data[i]));
            }
            this._Ca1();
            this._7a1(false);
            if (this._P81 & _e81._k81) {
                this._Wa1(_rQ);
            }
            if (this._P81 & _e81._l81) {
                this._Xa1(_rQ);
            }
            if (this._P81 & _e81._m81) {
                this._Ya1(_rQ);
            }
            if (this._P81 & _e81._j81) {
                this._Za1(_rQ);
            }
            if (this._P81 & _e81._i81) {
                this.__a1(_rQ);
            }
            if (this._Q81 & _s81._K81) {
                this._0b1(_rQ);
            }
            if (this._P81 & _e81._n81) {
                this._1b1(_rQ);
            }
            this._2b1(_rQ);
            this._3b1(_rQ);
        },
        _Ta1: function(_rQ) {
            var _YT = new _qY();
            _YT._dU.x = +_RQ;
            _YT._dU.y = +_RQ;
            _YT._eU.x = -_RQ;
            _YT._eU.y = -_RQ;
            for (var i = 0; i < this._AU; i++) {
                var _X1 = this._J81.data[i];
                var _sT = this._I81.data[i];
                var _tT = _DR._1b(_sT, _DR._im(_rQ._J41, _X1));
                _YT._dU = _1T(_YT._dU, _1T(_sT, _tT));
                _YT._eU = _3T(_YT._eU,
                    _3T(_sT, _tT));
            }

            function _4b1(_v71, _rQ) {
                this._t81 = _v71;
                this._5b1 = _rQ;
            }
            _4b1.prototype = {
                _F41: function(_fD) {
                    if (_fD._b41()) {
                        return true;
                    }
                    var _jf = _fD._941();
                    var body = _fD._g41();
                    var _wa1 = 0;
                    var _xa1 = this._t81._DV;
                    var _i41 = _jf._TT();
                    for (var _WT = 0; _WT < _i41; _WT++) {
                        var _YT = _fD._h41(_WT)._T();
                        _YT._dU.x -= this._t81._S81;
                        _YT._dU.y -= this._t81._S81;
                        _YT._eU.x += this._t81._S81;
                        _YT._eU.y += this._t81._S81;
                        var _Ia1 = this._t81._491._qQ(_wa1, _xa1, _M91(this._t81._T81 * _YT._dU.x, this._t81._T81 * _YT._dU.y), function(_Z4, _g3) {
                            return _g51._n91._q91(_Z4,
                                _g3);
                        });
                        var _Ja1 = this._t81._491._tQ(_Ia1, _xa1, _M91(this._t81._T81 * _YT._eU.x, this._t81._T81 * _YT._eU.y), function(_Z4, _g3) {
                            return _g51._n91._p91(_Z4, _g3);
                        });
                        for (var _j41 = _Ia1; _j41 != _Ja1; ++_j41) {
                            var _Ka1 = this._t81._491[_j41];
                            var _Z4 = _Ka1.index;
                            var _La1 = this._t81._I81.data[_Z4];
                            if (_YT._dU.x <= _La1.x && _La1.x <= _YT._eU.x && _YT._dU.y <= _La1.y && _La1.y <= _YT._eU.y) {
                                var _6b1 = this._t81._J81.data[_Z4];
                                var _rt = new _pY();
                                var _pt = new _oY();
                                _pt._sT = _QS(body._9_, _SS(body._f21, _La1));
                                _pt._tT = _DR._1b(_La1, _DR._im(this._5b1._J41, _6b1));
                                _pt._bU = 1;
                                if (_fD._VT(_rt, _pt, _WT)) {
                                    var _6d = _DR._1b(_DR._1b(_DR._im((1 - _rt._cU), _pt._sT), _DR._im(_rt._cU, _pt._tT)), _DR._im(_YQ, _rt._2U));
                                    var _X1 = _DR._im(this._5b1._K41, _DR._KR(_6d, _La1));
                                    this._t81._J81.data[_Z4]._Zy(_X1);
                                    var _dn = _DR._im(this._t81._H81(), _DR._KR(_6b1, _X1));
                                    _dn = _DR._im(_zS(_dn, _rt._2U), _rt._2U);
                                    body._e31(_dn, _6d, true);
                                }
                            }
                        }
                    }
                    return true;
                },
                _G41: function(i) {
                    return false;
                }
            };
            var _YV = new _4b1(this, _rQ);
            this._e21._Z51(_YV, _YT);
        },
        _2b1: function(_rQ) {
            for (var i = 0; i < this._AU; i++) {
                this._Z81[i] = 0;
            }
            for (var _dt = 0; _dt < this._s71; _dt++) {
                var _W21 = this._q71[_dt];
                var _Z4 = _W21.index;
                var w = _W21._N81;
                this._Z81[_Z4] += w;
            }
            for (var _dt = 0; _dt < this._e61; _dt++) {
                var _W21 = this._n71[_dt];
                var _Z4 = _W21._mW;
                var _g3 = _W21._nW;
                var w = _W21._N81;
                this._Z81[_Z4] += w;
                this._Z81[_g3] += w;
            }
            if (this._P81 & _g51._B91) {
                for (var i = 0; i < this._AU; i++) {
                    if (this._X81.data[i] & _g51._B91) {
                        this._Z81[i] = 0;
                    }
                }
            }
            var _7b1 = this._c91 * this._8b1(_rQ);
            for (var i = 0; i < this._AU; i++) {
                var w = this._Z81[i];
                var h = _7b1 * _2T(0.0, _0T(w, _hR) - _gR);
                this._Z81[i] = h;
            }
            var _9b1 = _rQ._J41 / (this._R21 * this._S81);
            for (var _dt = 0; _dt < this._s71; _dt++) {
                var _W21 = this._q71[_dt];
                var _Z4 = _W21.index;
                var _g3 = _W21.body;
                var w = _W21._N81;
                var __2 = _W21._NT;
                var _X2 = _W21._2U;
                var _6d = this._I81.data[_Z4];
                var h = this._Z81[_Z4] + _7b1 * w;
                var _dn = _DR._im(_9b1 * w * __2 * h, _X2);
                this._J81.data[_Z4]._KR(_DR._im(this._Na1(), _dn));
                _g3._e31(_dn, _6d, true);
            }
            for (var _dt = 0; _dt < this._e61; _dt++) {
                var _W21 = this._n71[_dt];
                var _Z4 = _W21._mW;
                var _g3 = _W21._nW;
                var w = _W21._N81;
                var _X2 = _W21._2U;
                var h = this._Z81[_Z4] + this._Z81[_g3];
                var _dn = _DR._im(_9b1 * w * h, _X2);
                this._J81.data[_Z4]._KR(_dn);
                this._J81.data[_g3]._1b(_dn);
            }
        },
        _3b1: function(_rQ) {
            var _1G = this._d91;
            for (var _dt = 0; _dt < this._s71; _dt++) {
                var _W21 = this._q71[_dt];
                var _Z4 = _W21.index;
                var _g3 = _W21.body;
                var w = _W21._N81;
                var __2 = _W21._NT;
                var _X2 = _W21._2U;
                var _6d = this._I81.data[_Z4];
                var _X1 = _DR._KR(_g3._r31(_6d), this._J81.data[_Z4]);
                var _ab1 = _zS(_X1, _X2);
                if (_ab1 < 0) {
                    var _dn = _DR._im(_1G * w * __2 * _ab1, _X2);
                    this._J81.data[_Z4]._1b(_DR._im(this._Na1(), _dn));
                    _g3._e31(_dn._HR(), _6d, true);
                }
            }
            for (var _dt = 0; _dt < this._e61; _dt++) {
                var _W21 = this._n71[_dt];
                var _Z4 = _W21._mW;
                var _g3 = _W21._nW;
                var w = _W21._N81;
                var _X2 = _W21._2U;
                var _X1 = _DR._KR(this._J81.data[_g3], this._J81.data[_Z4]);
                var _ab1 = _zS(_X1, _X2);
                if (_ab1 < 0) {
                    var _dn = _DR._im(_1G * w * _ab1, _X2);
                    this._J81.data[_Z4]._1b(_dn);
                    this._J81.data[_g3]._KR(_dn);
                }
            }
        },
        _Va1: function(_rQ) {
            for (var i = 0; i < this._AU; i++) {
                if (this._X81.data[i] & _e81._h81) {
                    this._J81.data[i]._ER();
                }
            }
        },
        _Ua1: function(_rQ) {
            for (var _bG = this._b91; _bG; _bG = _bG._Q31()) {
                if (_bG._w81 & _s81._L81) {
                    _bG._G81();
                    var rotation = new _jS(_rQ._J41 * _bG._m21);
                    var transform = new _nS(_DR._1b(_bG._A81,
                        _DR._KR(_DR._im(_rQ._J41, _bG._l21), _OS(rotation, _bG._A81))), rotation);
                    _bG._B81 = _TS(transform, _bG._B81);
                    var _bb1 = new _nS();
                    _bb1._6d.x = _rQ._K41 * transform._6d.x;
                    _bb1._6d.y = _rQ._K41 * transform._6d.y;
                    _bb1._vt._Cb = _rQ._K41 * transform._vt._Cb;
                    _bb1._vt.c = _rQ._K41 * (transform._vt.c - 1);
                    for (var i = _bG._u81; i < _bG._v81; i++) {
                        this._J81.data[i]._Zy(_QS(_bb1, this._I81.data[i]));
                    }
                }
            }
        },
        _Za1: function(_rQ) {
            var _cb1 = _rQ._K41 * this._e91;
            for (var _dt = 0; _dt < this._791; _dt++) {
                var _ga1 = this._991[_dt];
                if (_ga1._vP & _e81._j81) {
                    var _Z4 = _ga1._mW;
                    var _g3 = _ga1._nW;
                    var c = _ga1._t91;
                    var _8a1 = _ga1._u91;
                    var _db1 = _ga1._v91;
                    var _eb1 = _ga1._c81;
                    var _u91 = this._I81.data[_Z4];
                    var _v91 = this._I81.data[_g3];
                    var _c81 = this._I81.data[c];
                    var _6d = _DR._im(1 / 3, _DR._1b(_u91, _DR._1b(_v91, _c81)));
                    var _d3 = new _jS();
                    _d3._Cb = _AS(_8a1, _u91) + _AS(_db1, _v91) + _AS(_eb1, _c81);
                    _d3.c = _zS(_8a1, _u91) + _zS(_db1, _v91) + _zS(_eb1, _c81);
                    var _gs = _d3._Cb * _d3._Cb + _d3.c * _d3.c;
                    var _fb1 = _CR(_gs);
                    _d3._Cb *= _fb1;
                    _d3.c *= _fb1;
                    var _zF = _cb1 * _ga1._zF;
                    this._J81.data[_Z4]._1b(_DR._im(_zF, (_DR._KR(_gb1(_d3, _8a1), (_DR._KR(_u91,
                        _6d))))));
                    this._J81.data[_g3]._1b(_DR._im(_zF, (_DR._KR(_gb1(_d3, _db1), (_DR._KR(_v91, _6d))))));
                    this._J81.data[c]._1b(_DR._im(_zF, (_DR._KR(_gb1(_d3, _eb1), (_DR._KR(_c81, _6d))))));
                }
            }
        },
        __a1: function(_rQ) {
            var _hb1 = _rQ._K41 * this._f91;
            for (var _dt = 0; _dt < this._EV; _dt++) {
                var _5W = this._FV[_dt];
                if (_5W._vP & _e81._i81) {
                    var _Z4 = _5W._mW;
                    var _g3 = _5W._nW;
                    var _Cd = _DR._KR(this._I81.data[_g3], this._I81.data[_Z4]);
                    var _ib1 = _5W._1U;
                    var _fs = _Cd._LR();
                    var _zF = _hb1 * _5W._zF;
                    var _dn = _DR._im(_zF * (_ib1 - _fs) / _fs, _Cd);
                    this._J81.data[_Z4]._KR(_dn);
                    this._J81.data[_g3]._1b(_dn);
                }
            }
        },
        _Ya1: function(_rQ) {
            this.__81 = this._Z91(this.__81);
            for (var i = 0; i < this._AU; i++) {
                this._Z81[i] = 0;
                this.__81[i] = new _DR();
            }
            for (var _dt = 0; _dt < this._e61; _dt++) {
                var _W21 = this._n71[_dt];
                if (_W21._vP & _e81._m81) {
                    var _Z4 = _W21._mW;
                    var _g3 = _W21._nW;
                    var w = _W21._N81;
                    var _X2 = _W21._2U;
                    this._Z81[_Z4] += w;
                    this._Z81[_g3] += w;
                    this.__81[_Z4]._KR(_DR._im((1 - w) * w, _X2));
                    this.__81[_g3]._1b(_DR._im((1 - w) * w, _X2));
                }
            }
            var _jb1 = this._h91 * this._kb1(_rQ);
            var _lb1 = this._i91 * this._kb1(_rQ);
            for (var _dt = 0; _dt < this._e61; _dt++) {
                var _W21 = this._n71[_dt];
                if (_W21._vP & _e81._m81) {
                    var _Z4 = _W21._mW;
                    var _g3 = _W21._nW;
                    var w = _W21._N81;
                    var _X2 = _W21._2U;
                    var h = this._Z81[_Z4] + this._Z81[_g3];
                    var _Cb = _DR._KR(this.__81[_g3], this.__81[_Z4]);
                    var _mb1 = (_jb1 * (h - 2) + _lb1 * _zS(_Cb, _X2)) * w;
                    var _dn = _DR._im(_mb1, _X2);
                    this._J81.data[_Z4]._KR(_dn);
                    this._J81.data[_g3]._1b(_dn);
                }
            }
        },
        _Wa1: function(_rQ) {
            var _nb1 = this._g91;
            for (var _dt = 0; _dt < this._s71; _dt++) {
                var _W21 = this._q71[_dt];
                var _Z4 = _W21.index;
                if (this._X81.data[_Z4] & _e81._k81) {
                    var _g3 = _W21.body;
                    var w = _W21._N81;
                    var __2 = _W21._NT;
                    var _6d = this._I81.data[_Z4];
                    var _X1 = _DR._KR(_g3._r31(_6d), this._J81.data[_Z4]);
                    var _dn = _DR._im(_nb1 * __2 * w, _X1);
                    this._J81.data[_Z4]._1b(_DR._im(this._Na1(), _dn));
                    _g3._e31(_dn._HR(), _6d, true);
                }
            }
            for (var _dt = 0; _dt < this._e61; _dt++) {
                var _W21 = this._n71[_dt];
                if (_W21._vP & _e81._k81) {
                    var _Z4 = _W21._mW;
                    var _g3 = _W21._nW;
                    var w = _W21._N81;
                    var _X1 = _DR._KR(this._J81.data[_g3], this._J81.data[_Z4]);
                    var _dn = _DR._im(_nb1 * w, _X1);
                    this._J81.data[_Z4]._1b(_dn);
                    this._J81.data[_g3]._KR(_dn);
                }
            }
        },
        _Xa1: function(_rQ) {
            var _ob1 = this._j91 * this._kb1(_rQ);
            var _pb1 = 1.0 - _fR;
            for (var _dt = 0; _dt < this._s71; _dt++) {
                var _W21 = this._q71[_dt];
                var _Z4 = _W21.index;
                if (this._X81.data[_Z4] & _e81._l81) {
                    var w = _W21._N81;
                    if (w > _pb1) {
                        var _g3 = _W21.body;
                        var __2 = _W21._NT;
                        var _6d = this._I81.data[_Z4];
                        var _X2 = _W21._2U;
                        var _dn = _DR._im(_ob1 * __2 * (w - _pb1), _X2);
                        this._J81.data[_Z4]._KR(_DR._im(this._Na1(), _dn));
                        _g3._e31(_dn, _6d, true);
                    }
                }
            }
            for (var _dt = 0; _dt < this._e61; _dt++) {
                var _W21 = this._n71[_dt];
                if (_W21._vP & _e81._l81) {
                    var w = _W21._N81;
                    if (w > _pb1) {
                        var _Z4 = _W21._mW;
                        var _g3 = _W21._nW;
                        var _X2 = _W21._2U;
                        var _dn = _DR._im(_ob1 * (w - _pb1),
                            _X2);
                        this._J81.data[_Z4]._KR(_dn);
                        this._J81.data[_g3]._1b(_dn);
                    }
                }
            }
        },
        _0b1: function(_rQ) {
            this._091 = this._Z91(this._091);
            var _qb1 = _rQ._K41 * this._k91;
            for (var _dt = 0; _dt < this._e61; _dt++) {
                var _W21 = this._n71[_dt];
                var _Z4 = _W21._mW;
                var _g3 = _W21._nW;
                if (this._191[_Z4] != this._191[_g3]) {
                    var w = _W21._N81;
                    var _X2 = _W21._2U;
                    var h = this._091[_Z4] + this._091[_g3];
                    var _dn = _DR._im(_qb1 * h * w, _X2);
                    this._J81.data[_Z4]._KR(_dn);
                    this._J81.data[_g3]._1b(_dn);
                }
            }
        },
        _1b1: function(_rQ) {
            this._z71.data = this._Z91(this._z71.data);
            var _rb1 = Math.floor(256 * this._l91);
            for (var _dt = 0; _dt < this._e61; _dt++) {
                var _W21 = this._n71[_dt];
                var _Z4 = _W21._mW;
                var _g3 = _W21._nW;
                if (this._X81.data[_Z4] & this._X81.data[_g3] & _e81._n81) {
                    var _sb1 = this._z71.data[_Z4];
                    var _tb1 = this._z71.data[_g3];
                    var _ub1 = (_rb1 * (_tb1._d3 - _sb1._d3)) >> 8;
                    var _vb1 = (_rb1 * (_tb1._Y4 - _sb1._Y4)) >> 8;
                    var _wb1 = (_rb1 * (_tb1._g3 - _sb1._g3)) >> 8;
                    var _xb1 = (_rb1 * (_tb1._Z4 - _sb1._Z4)) >> 8;
                    _sb1._d3 += _ub1;
                    _sb1._Y4 += _vb1;
                    _sb1._g3 += _wb1;
                    _sb1._Z4 += _xb1;
                    _tb1._d3 -= _ub1;
                    _tb1._Y4 -= _vb1;
                    _tb1._g3 -= _wb1;
                    _tb1._Z4 -= _xb1;
                }
            }
        },
        _Qa1: function() {
            var _yb1 = 0;
            var _zb1 = new Array(this._AU);
            for (var i = 0; i < this._AU; i++) {
                var _vP = this._X81.data[i];
                if (_vP & _e81._g81) {
                    var _Ab1 = this._e21.__41;
                    if ((_vP & _e81._o81) && _Ab1) {
                        _Ab1._q41(i);
                    }
                    _zb1[i] = _eR;
                } else {
                    _zb1[i] = _yb1;
                    if (i != _yb1) {
                        this._X81.data[_yb1] = this._X81.data[i];
                        this._I81.data[_yb1] = this._I81.data[i];
                        this._J81.data[_yb1] = this._J81.data[i];
                        this._191[_yb1] = this._191[i];
                        if (this._091) {
                            this._091[_yb1] = this._091[i];
                        }
                        if (this._z71.data) {
                            this._z71.data[_yb1] = this._z71.data[i];
                        }
                        if (this._291.data) {
                            this._291.data[_yb1] = this._291.data[i];
                        }
                    }
                    _yb1++;
                }
            }
            var _Bb1 = {
                _Cb1: function(_j41) {
                    return _j41.index < 0;
                },
                _Db1: function(_W21) {
                    return _W21._mW < 0 || _W21._nW < 0;
                },
                _Eb1: function(_W21) {
                    return _W21.index < 0;
                },
                _Fb1: function(_5W) {
                    return _5W._mW < 0 || _5W._nW < 0;
                },
                _Gb1: function(_ga1) {
                    return _ga1._mW < 0 || _ga1._nW < 0 || _ga1._t91 < 0;
                }
            };
            for (var _dt = 0; _dt < this._DV; _dt++) {
                var _j41 = this._491[_dt];
                _j41.index = _zb1[_j41.index];
            }
            if (this._491) {
                this._DV = this._491._oQ(_Bb1._Cb1, this._DV);
            }
            for (var _dt = 0; _dt < this._e61; _dt++) {
                var _W21 = this._n71[_dt];
                _W21._mW = _zb1[_W21._mW];
                _W21._nW = _zb1[_W21._nW];
            }
            if (this._n71) {
                this._e61 = this._n71._oQ(_Bb1._Db1, this._e61);
            }
            for (var _dt = 0; _dt < this._s71; _dt++) {
                var _W21 = this._q71[_dt];
                _W21.index = _zb1[_W21.index];
            }
            if (this._q71) {
                this._s71 = this._q71._oQ(_Bb1._Eb1, this._s71);
            }
            for (var _dt = 0; _dt < this._EV; _dt++) {
                var _5W = this._FV[_dt];
                _5W._mW = _zb1[_5W._mW];
                _5W._nW = _zb1[_5W._nW];
            }
            if (this._FV) {
                this._EV = this._FV._oQ(_Bb1._Fb1, this._EV);
            }
            for (var _dt = 0; _dt < this._791; _dt++) {
                var _ga1 = this._991[_dt];
                _ga1._mW = _zb1[_ga1._mW];
                _ga1._nW = _zb1[_ga1._nW];
                _ga1._t91 = _zb1[_ga1._t91];
            }
            if (this._991) {
                this._791 = this._991._oQ(_Bb1._Gb1, this._791);
            }
            for (var _bG = this._b91; _bG; _bG = _bG._Q31()) {
                var _4a1 = _yb1;
                var lastIndex = 0;
                var _Hb1 = false;
                for (var i = _bG._u81; i < _bG._v81; i++) {
                    var _k3 = _zb1[i];
                    if (_k3 >= 0) {
                        _4a1 = _0T(_4a1, _k3);
                        lastIndex = _2T(lastIndex, _k3 + 1);
                    } else {
                        _Hb1 = true;
                    }
                }
                if (_4a1 < lastIndex) {
                    _bG._u81 = _4a1;
                    _bG._v81 = lastIndex;
                    if (_Hb1) {
                        if (_bG._w81 & _s81._L81) {
                            _bG._E81 = true;
                        }
                    }
                } else {
                    _bG._u81 = 0;
                    _bG._v81 = 0;
                    if (_bG._C81) {
                        _bG._D81 = true;
                    }
                }
            }
            this._AU = _yb1;
            for (var _bG = this._b91; _bG;) {
                var _kc = _bG._Q31();
                if (_bG._D81) {
                    this._ma1(_bG);
                } else if (_bG._E81) {}
                _bG = _kc;
            }
        },
        _ja1: function(start, _Ib1, end) {
            if (start == _Ib1 || _Ib1 == end) {
                return;
            }

            function _zb1(i) {
                if (i < start) {
                    return i;
                } else if (i < _Ib1) {
                    return i + end - _Ib1;
                } else if (i < end) {
                    return i + start - _Ib1;
                } else {
                    return i;
                }
            }
            this._X81.data.rotate(start, _Ib1, end);
            this._I81.data.rotate(start, _Ib1, end);
            this._J81.data.rotate(start, _Ib1, end);
            this._191.rotate(start, _Ib1, end);
            if (this._091) {
                this._091.rotate(start, _Ib1, end);
            }
            if (this._z71.data) {
                this._z71.data.rotate(start, _Ib1, end);
            }
            if (this._291.data) {
                this._291.data.rotate(start,
                    _Ib1, end);
            }
            for (var _dt = 0; _dt < this._DV; _dt++) {
                var _j41 = this._491[_dt];
                _j41.index = _zb1(_j41.index);
            }
            for (var _dt = 0; _dt < this._e61; _dt++) {
                var _W21 = this._n71[_dt];
                _W21._mW = _zb1(_W21._mW);
                _W21._nW = _zb1(_W21._nW);
            }
            for (var _dt = 0; _dt < this._s71; _dt++) {
                var _W21 = this._q71[_dt];
                _W21.index = _zb1(_W21.index);
            }
            for (var _dt = 0; _dt < this._EV; _dt++) {
                var _5W = this._FV[_dt];
                _5W._mW = _zb1(_5W._mW);
                _5W._nW = _zb1(_5W._nW);
            }
            for (var _dt = 0; _dt < this._791; _dt++) {
                var _ga1 = this._991[_dt];
                _ga1._mW = _zb1(_ga1._mW);
                _ga1._nW = _zb1(_ga1._nW);
                _ga1._t91 = _zb1(_ga1._t91);
            }
            for (var _bG = this._b91; _bG; _bG = _bG._Q31()) {
                _bG._u81 = _zb1(_bG._u81);
                _bG._v81 = _zb1(_bG._v81 - 1) + 1;
            }
        },
        _ZF: function(_pF) {
            this._S81 = 2 * _pF;
            this._U81 = this._S81 * this._S81;
            this._T81 = 1 / this._S81;
        },
        _0G: function(__F) {
            this._R21 = __F;
            this._R81 = 1 / this._R21;
        },
        _VF: function() {
            return this._R21;
        },
        _3G: function(_421) {
            this._p21 = _421;
        },
        _XF: function() {
            return this._p21;
        },
        _2G: function(_1G) {
            this._d91 = _1G;
        },
        _WF: function() {
            return this._d91;
        },
        _UF: function() {
            return this._S81 / 2;
        },
        _kb1: function(_rQ) {
            return this._S81 * _rQ._K41;
        },
        _Sa1: function(_rQ) {
            var _7I = this._kb1(_rQ);
            return _7I * _7I;
        },
        _8b1: function(_rQ) {
            return this._R21 * this._Sa1(_rQ);
        },
        _3a1: function() {
            return _fR * this._S81;
        },
        _H81: function() {
            var _K5 = this._3a1();
            return this._R21 * _K5 * _K5;
        },
        _Na1: function() {
            return 1.777777 * this._R81 * this._T81 * this._T81;
        },
        _a71: function() {
            return this._X81.data;
        },
        _b71: function() {
            return this._I81.data;
        },
        _c71: function() {
            return this._J81.data;
        },
        _d71: function() {
            this._z71.data = this._Z91(this._z71.data);
            return this._z71.data;
        },
        _e71: function() {
            this._291.data = this._Z91(this._291.data);
            return this._291.data;
        },
        _TF: function() {
            return this._W81;
        },
        _YF: function(_n4) {
            _PQ(this._AU <= _n4);
            this._W81 = _n4;
        },
        _f71: function() {
            return this._191;
        },
        _Jb1: function(buffer, _Kb1, _U91) {
            _PQ((_Kb1 && _U91) || (!_Kb1 && !_U91));
            if (!buffer._m91) {}
            buffer.data = _Kb1;
            buffer._m91 = _U91;
        },
        _g71: function(buffer, _h71) {
            this._Jb1(this._X81, buffer, _h71);
        },
        _i71: function(buffer, _h71) {
            this._Jb1(this._I81, buffer, _h71);
        },
        _j71: function(buffer, _h71) {
            this._Jb1(this._J81, buffer, _h71);
        },
        _k71: function(buffer, _h71) {
            this._Jb1(this._z71, buffer,
                _h71);
        },
        _l71: function(buffer, _h71) {
            this._Jb1(this._291, buffer, _h71);
        },
        _Z51: function(_YV, _YT) {
            if (this._DV == 0) {
                return;
            }
            var _wa1 = 0;
            var _xa1 = this._DV;
            var _Ia1 = this._491._qQ(_wa1, _xa1, _M91(this._T81 * _YT._dU.x, this._T81 * _YT._dU.y), function(_Z4, _g3) {
                return _g51._n91._q91(_Z4, _g3);
            });
            var _Ja1 = this._491._tQ(_Ia1, _xa1, _M91(this._T81 * _YT._eU.x, this._T81 * _YT._eU.y), function(_Z4, _g3) {
                return _g51._n91._p91(_Z4, _g3);
            });
            for (var _j41 = _Ia1; _j41 < _Ja1; ++_j41) {
                var _Ka1 = this._491[_j41];
                var i = _Ka1.index;
                var _6d = this._I81.data[i];
                if (_YT._dU.x < _6d.x && _6d.x < _YT._eU.x && _YT._dU.y < _6d.y && _6d.y < _YT._eU.y) {
                    if (!_YV._G41(i)) {
                        break;
                    }
                }
            }
        },
        _VT: function(_YV, _061, _161) {
            if (this._DV == 0) {
                return;
            }
            var _wa1 = 0;
            var _xa1 = this._DV;
            var _Ia1 = this._491._qQ(_wa1, _xa1, _M91(this._T81 * _0T(_061.x, _161.x) - 1, this._T81 * _0T(_061.y, _161.y) - 1), function(_Z4, _g3) {
                return _g51._n91._q91(_Z4, _g3);
            });
            var _Ja1 = this._491._tQ(_wa1, _xa1, _M91(this._T81 * _2T(_061.x, _161.x) + 1, this._T81 * _2T(_061.y, _161.y) + 1), function(_Z4, _g3) {
                return _g51._n91._p91(_Z4, _g3);
            });
            var _cU = 1;
            var _X1 = _DR._KR(_161,
                _061);
            var _Z1 = _zS(_X1, _X1);
            for (var _j41 = _Ia1; _j41 < _Ja1; ++_j41) {
                var _Ka1 = this._491[_j41];
                var i = _Ka1.index;
                var _6d = _DR._KR(_061, this._I81.data[i]);
                var _Lb1 = _zS(_6d, _X1);
                var _tT = _zS(_6d, _6d);
                var _Mb1 = _Lb1 * _Lb1 - _Z1 * (_tT - this._U81);
                if (_Mb1 >= 0) {
                    var _Nb1 = _AR(_Mb1);
                    var _f3 = (-_Lb1 - _Nb1) / _Z1;
                    if (_f3 > _cU) {
                        continue;
                    }
                    if (_f3 < 0) {
                        _f3 = (-_Lb1 + _Nb1) / _Z1;
                        if (_f3 < 0 || _f3 > _cU) {
                            continue;
                        }
                    }
                    var _X2 = _DR._1b(_6d, _DR._KR(_f3, _X1));
                    _X2._NR();
                    var _dn = _YV._G41(i, _DR._1b(_061, _DR._im(_f3, _X1)), _X2, _f3);
                    _cU = _0T(_cU, _dn);
                    if (_cU <= 0) {
                        break;
                    }
                }
            }
        },
        _t71: function() {
            var _Ob1 = 0;
            for (var _dt = 0; _dt < this._e61; _dt++) {
                var _W21 = this._n71[_dt];
                var _Z4 = _W21._mW;
                var _g3 = _W21._nW;
                var _X2 = _W21._2U;
                var _X1 = _DR._KR(this._J81.data[_g3], this._J81.data[_Z4]);
                var _ab1 = _zS(_X1, _X2);
                if (_ab1 < 0) {
                    _Ob1 += _ab1 * _ab1;
                }
            }
            return 0.5 * this._H81() * _Ob1;
        },
        _u71: function() {
            return this._b91;
        },
        _cG: function() {
            return this._a91;
        },
        _QF: function() {
            return this._AU;
        }
    };

    function _Pb1(_Qb1, _Rb1) {
        return _AR(_Qb1 * _Rb1);
    }

    function _Sb1(_Tb1, _Ub1) {
        return _Tb1 > _Ub1 ? _Tb1 : _Ub1;
    }

    function _Vb1() {
        this._K11 = null;
        this._Wb1 = false;
    };

    function _Xb1() {
        this.other = null;
        this._W21 = null;
        this._ic = null;
        this._kc = null;
    };

    function _j61() {
        this._Yb1 = new _Xb1();
        this._Zb1 = new _Xb1();
        this.__b1 = new _PX();
    }
    _j61._0c1 = new _PX();
    _j61.prototype = {
        _OL: function(_C61, _mW, _D61, _nW) {
            this._z61 = 0;
            this._821 = _j61._1c1;
            this._s61 = _C61 || null;
            this._u61 = _D61 || null;
            this._2c1 = _mW || 0;
            this._3c1 = _nW || 0;
            this.__b1._RX = 0;
            this._j21 = null;
            this._k21 = null;
            this._Yb1._W21 = null;
            this._Yb1._ic = null;
            this._Yb1._kc = null;
            this._Yb1.other = null;
            this._Zb1._W21 = null;
            this._Zb1._ic = null;
            this._Zb1._kc = null;
            this._Zb1.other = null;
            this._y61 = 0;
            if (_C61) {
                this._741 = _Pb1(this._s61._741, this._u61._741);
                this._841 = _Sb1(this._s61._841, this._u61._841);
            } else {
                this._741 = 0;
                this._841 = 0;
            }
            this._4c1 = 0.0;
        },
        _5c1: function() {
            return this.__b1;
        },
        _6c1: function(_7c1) {
            var _G51 = this._s61._g41();
            var _H51 = this._u61._g41();
            var _X_ = this._s61._941();
            var _Y_ = this._u61._941();
            _7c1._1Y(this.__b1, _G51._vS(), _X_._RT, _H51._vS(), _Y_._RT);
        },
        _q61: function() {
            return (this._821 & _j61._8c1) == _j61._8c1;
        },
        _K61: function(_E31) {
            if (_E31) {
                this._821 |= _j61._1c1;
            } else {
                this._821 &= ~_j61._1c1;
            }
        },
        _p61: function() {
            return (this._821 & _j61._1c1) == _j61._1c1;
        },
        _Q31: function() {
            return this._k21;
        },
        _Y21: function() {
            return this._s61;
        },
        _T51: function() {
            return this._2c1;
        },
        __21: function() {
            return this._u61;
        },
        _V51: function() {
            return this._3c1;
        },
        _lD: function(friction) {
            this._741 = friction;
        },
        _gF: function() {
            return this._741;
        },
        _9c1: function() {
            this._741 = _Pb1(this._s61._741, this._u61._741);
        },
        _kD: function(_141) {
            this._841 = _141;
        },
        _iF: function() {
            return this._841;
        },
        _ac1: function() {
            this._841 = _Sb1(this._s61._841,
                this._u61._841);
        },
        _bc1: function(speed) {
            this._4c1 = speed;
        },
        _cc1: function() {
            return this._4c1;
        },
        _A11: function(_SX, _2Y, _4Y) {},
        _f41: function() {
            this._821 |= _j61._dc1;
        },
        _ec1: null,
        _V9: function(listener) {
            _j61._0c1._Zy(this.__b1);
            this._821 |= _j61._1c1;
            var _fc1 = false;
            var _gc1 = (this._821 & _j61._8c1) == _j61._8c1;
            var _r61 = this._s61._b41();
            var _t61 = this._u61._b41();
            var _a41 = _r61 || _t61;
            var _G51 = this._s61._g41();
            var _H51 = this._u61._g41();
            var _2Y = _G51._vS();
            var _4Y = _H51._vS();
            if (_a41) {
                var _X_ = this._s61._941();
                var _Y_ = this._u61._941();
                _fc1 = _W_(_X_, this._2c1, _Y_, this._3c1, _2Y, _4Y);
                this.__b1._RX = 0;
            } else {
                this._A11(this.__b1, _2Y, _4Y);
                _fc1 = this.__b1._RX > 0;
                for (var i = 0; i < this.__b1._RX; ++i) {
                    var _hc1 = this.__b1.points[i];
                    _hc1._MX = 0.0;
                    _hc1._NX = 0.0;
                    var _ic1 = _hc1.id;
                    for (var _k3 = 0; _k3 < _j61._0c1._RX; ++_k3) {
                        var _jc1 = _j61._0c1.points[_k3];
                        if (_jc1.id._O3() == _ic1._O3()) {
                            _hc1._MX = _jc1._MX;
                            _hc1._NX = _jc1._NX;
                            break;
                        }
                    }
                }
                if (_fc1 != _gc1) {
                    _G51._uD(true);
                    _H51._uD(true);
                }
            }
            if (_fc1) {
                this._821 |= _j61._8c1;
            } else {
                this._821 &= ~_j61._8c1;
            }
            if (_gc1 == false && _fc1 == true && listener) {
                listener._z41(this);
            }
            if (_gc1 == true && _fc1 == false && listener) {
                listener._A41(this);
            }
            if (_a41 == false && _fc1 && listener) {
                listener._B41(this, _j61._0c1);
            }
        }
    };
    _j61._C21 = 0x0001;
    _j61._8c1 = 0x0002;
    _j61._1c1 = 0x0004;
    _j61._dc1 = 0x0008;
    _j61._kc1 = 0x0010;
    _j61._D21 = 0x0020;

    function _lc1() {
        this.parent.call(this);
    }
    _lc1.prototype = {
        _A11: function(_SX, _2Y, _4Y) {
            _FY(_SX, this._s61._941(), _2Y, this._u61._941(), _4Y);
        },
        _OL: function(_X21, _mc1, _Z21, _nc1) {
            this.parent.prototype._OL.call(this, _X21, 0, _Z21, 0);
            _PQ(this._s61._ST() == _PT._3U);
            _PQ(this._u61._ST() == _PT._3U);
        }
    };
    _lc1._jQ(_j61);
    var _oc1 = new _kU();

    function _pc1() {
        this.parent.call(this);
    }
    _pc1.prototype = {
        _A11: function(_SX, _2Y, _4Y) {
            var _hW = this._s61._941();
            _hW._MU(_oc1, this._2c1);
            _MZ(_SX, _oc1, _2Y, this._u61._941(), _4Y);
        },
        _OL: function(_X21, _mW, _Z21, _nW) {
            this.parent.prototype._OL.call(this, _X21, _mW, _Z21, _nW);
            _PQ(this._s61._ST() == _PT._6U);
            _PQ(this._u61._ST() == _PT._3U);
        }
    };
    _pc1._jQ(_j61);

    function _qc1() {
        this.parent.call(this);
    }
    _qc1.prototype = {
        _A11: function(_SX, _2Y, _4Y) {
            var _hW = this._s61._941();
            _hW._MU(_oc1, this._2c1);
            _N_(_SX, _oc1, _2Y, this._u61._941(), _4Y);
        },
        _OL: function(_X21, _mW, _Z21, _nW) {
            this.parent.prototype._OL.call(this, _X21, _mW, _Z21, _nW);
            _PQ(this._s61._ST() == _PT._6U);
            _PQ(this._u61._ST() == _PT._5U);
        }
    };
    _qc1._OL = function(_X21, _mW, _Z21, _nW) {
        return new _qc1(_X21, _mW, _Z21, _nW);
    };
    _qc1._jQ(_j61);

    function _rc1() {
        this.parent.call(this);
    }
    _rc1.prototype = {
        _A11: function(_SX, _2Y, _4Y) {
            _MZ(_SX, this._s61._941(), _2Y, this._u61._941(), _4Y);
        },
        _OL: function(_X21, _mW, _Z21, _nW) {
            this.parent.prototype._OL.call(this, _X21, 0, _Z21, 0);
            _PQ(this._s61._ST() == _PT._4U);
            _PQ(this._u61._ST() == _PT._3U);
        }
    };
    _rc1._OL = function(_X21, _mW, _Z21, _nW) {
        return new _rc1(_X21, _Z21);
    };
    _rc1._jQ(_j61);

    function _sc1() {
        this.parent.call(this);
    }
    _sc1.prototype = {
        _A11: function(_SX, _2Y, _4Y) {
            _N_(_SX, this._s61._941(), _2Y, this._u61._941(), _4Y);
        },
        _OL: function(_X21, _mW, _Z21, _nW) {
            this.parent.prototype._OL.call(this, _X21, 0, _Z21, 0);
            _PQ(this._s61._ST() == _PT._4U);
            _PQ(this._u61._ST() == _PT._5U);
        }
    };
    _sc1._OL = function(_X21, _mW, _Z21, _nW) {
        return new _sc1(_X21, _Z21);
    };
    _sc1._jQ(_j61);

    function _tc1() {
        this.parent.call(this);
    }
    _tc1.prototype = {
        _A11: function(_SX, _2Y, _4Y) {
            _JY(_SX, this._s61._941(), _2Y, this._u61._941(), _4Y);
        },
        _OL: function(_X21, _mW, _Z21, _nW) {
            this.parent.prototype._OL.call(this, _X21, 0, _Z21, 0);
            _PQ(this._s61._ST() == _PT._5U);
            _PQ(this._u61._ST() == _PT._3U);
        }
    };
    _tc1._OL = function(_X21, _mW, _Z21, _nW) {
        return new _tc1(_X21, _Z21);
    };
    _tc1._jQ(_j61);

    function _uc1() {
        this.parent.call(this);
    }
    _uc1.prototype = {
        _A11: function(_SX, _2Y, _4Y) {
            _gZ(_SX, this._s61._941(), _2Y, this._u61._941(), _4Y);
        },
        _OL: function(_X21, _mW, _Z21, _nW) {
            this.parent.prototype._OL.call(this,
                _X21, 0, _Z21, 0);
            _PQ(this._s61._ST() == _PT._5U);
            _PQ(this._u61._ST() == _PT._5U);
        }
    };
    _uc1._OL = function(_X21, _mW, _Z21, _nW) {
        return new _uc1(_X21, _Z21);
    };
    _uc1._jQ(_j61);
    _j61._vc1 = function(_K11, _wc1, _xc1) {
        _PQ(0 <= _wc1 && _wc1 < _PT._7U);
        _PQ(0 <= _xc1 && _xc1 < _PT._7U);
        if (!_j61._yc1[_wc1]) _j61._yc1[_wc1] = [];
        _j61._yc1[_wc1][_xc1] = new _Vb1();
        _j61._yc1[_wc1][_xc1]._K11 = _K11;
        _j61._yc1[_wc1][_xc1]._Wb1 = true;
        if (_wc1 != _xc1) {
            if (!_j61._yc1[_xc1]) _j61._yc1[_xc1] = [];
            _j61._yc1[_xc1][_wc1] = new _Vb1();
            _j61._yc1[_xc1][_wc1]._K11 = _K11;
            _j61._yc1[_xc1][_wc1]._Wb1 = false;
        }
        _K11._zc1 = [];
        _K11._Ac1 = 2;
    };
    _j61._Bc1 = function() {
        _j61._vc1(_lc1, _PT._3U, _PT._3U);
        _j61._vc1(_tc1, _PT._5U, _PT._3U);
        _j61._vc1(_uc1, _PT._5U, _PT._5U);
        _j61._vc1(_rc1, _PT._4U, _PT._3U);
        _j61._vc1(_sc1, _PT._4U, _PT._5U);
        _j61._vc1(_pc1, _PT._6U, _PT._3U);
        _j61._vc1(_qc1, _PT._6U, _PT._5U);
    };
    _j61._Cc1 = function(_K11) {
        var _W21;
        if (_W21 = _K11._zc1.pop()) return _W21;
        for (var i = 0; i < _K11._Ac1 - 1; ++i) _K11._zc1.push(new _K11()); {
            _K11._Ac1 += 32;
        }
        return new _K11();
    };
    _j61._OL = function(_X21, _mW, _Z21, _nW) {
        if (_j61._Dc1 == false) {
            _j61._Bc1();
            _j61._Dc1 = true;
        }
        var _wc1 = _X21._ST();
        var _xc1 = _Z21._ST();
        _PQ(0 <= _wc1 && _wc1 < _PT._7U);
        _PQ(0 <= _xc1 && _xc1 < _PT._7U);
        var _K11 = _j61._yc1[_wc1] ? _j61._yc1[_wc1][_xc1] ? _j61._yc1[_wc1][_xc1]._K11 : null : null;
        if (_K11) {
            var _W21 = _j61._Cc1(_K11);
            if (_j61._yc1[_wc1][_xc1]._Wb1) _W21._OL(_X21, _mW, _Z21, _nW);
            else _W21._OL(_Z21, _nW, _X21, _mW);
            return _W21;
        }
        return null;
    };
    _j61._031 = function(_W21) {
        _PQ(_j61._Dc1 == true);
        var _X21 = _W21._s61;
        var _Z21 = _W21._u61;
        if (_W21.__b1._RX > 0 && _X21._b41() == false && _Z21._b41() == false) {
            _X21._g41()._uD(true);
            _Z21._g41()._uD(true);
        }
        var _GX = _X21._ST();
        var _HX = _Z21._ST();
        _PQ(0 <= _GX && _HX < _PT._7U);
        _PQ(0 <= _GX && _HX < _PT._7U);
        _j61._yc1[_GX][_HX]._K11._zc1.push(_W21);
    };
    _j61._yc1 = [];
    _j61._Dc1 = false;
    var _Ec1 = new _r41();
    var _Fc1 = new _y41();

    function _Z41() {
        this._O21 = new _zV();
        this._i21 = null;
        this._e61 = 0;
        this._q51 = _Ec1;
        this._s51 = _Fc1;
    }
    _Z41.prototype = {
        _4W: function(_Gc1, _Hc1) {
            var _pW = _Gc1;
            var _qW = _Hc1;
            var _X21 = _pW._fD;
            var _Z21 = _qW._fD;
            var _mW = _pW._WT;
            var _nW = _qW._WT;
            var _G51 = _X21._g41();
            var _H51 = _Z21._g41();
            if (_G51 == _H51) {
                return;
            }
            var _NU = _H51._P31();
            while (_NU) {
                if (_NU.other == _G51) {
                    var _C61 = _NU._W21._Y21();
                    var _D61 = _NU._W21.__21();
                    var _U01 = _NU._W21._T51();
                    var _V01 = _NU._W21._V51();
                    if (_C61 == _X21 && _D61 == _Z21 && _U01 == _mW && _V01 == _nW) {
                        return;
                    }
                    if (_C61 == _Z21 && _D61 == _X21 && _U01 == _nW && _V01 == _mW) {
                        return;
                    }
                }
                _NU = _NU._kc;
            }
            if (_H51._U31(_G51) == false) {
                return;
            }
            if (this._q51 && this._q51._U31(_X21, _Z21) == false) {
                return;
            }
            var c = _j61._OL(_X21, _mW, _Z21, _nW);
            if (c == null) {
                return;
            }
            _X21 = c._Y21();
            _Z21 = c.__21();
            _mW = c._T51();
            _nW = c._V51();
            _G51 = _X21._g41();
            _H51 = _Z21._g41();
            c._j21 = null;
            c._k21 = this._i21;
            if (this._i21 != null) {
                this._i21._j21 = c;
            }
            this._i21 = c;
            c._Yb1._W21 = c;
            c._Yb1.other = _H51;
            c._Yb1._ic = null;
            c._Yb1._kc = _G51._i21;
            if (_G51._i21 != null) {
                _G51._i21._ic = c._Yb1;
            }
            _G51._i21 = c._Yb1;
            c._Zb1._W21 = c;
            c._Zb1.other = _G51;
            c._Zb1._ic = null;
            c._Zb1._kc = _H51._i21;
            if (_H51._i21 != null) {
                _H51._i21._ic = c._Zb1;
            }
            _H51._i21 = c._Zb1;
            if (_X21._b41() == false && _Z21._b41() == false) {
                _G51._uD(true);
                _H51._uD(true);
            }++this._e61;
        },
        _K51: function() {
            this._O21._XV(this);
        },
        _031: function(c) {
            var _X21 = c._Y21();
            var _Z21 = c.__21();
            var _G51 = _X21._g41();
            var _H51 = _Z21._g41();
            if (this._s51 && c._q61()) {
                this._s51._A41(c);
            }
            if (c._j21) {
                c._j21._k21 = c._k21;
            }
            if (c._k21) {
                c._k21._j21 = c._j21;
            }
            if (c == this._i21) {
                this._i21 = c._k21;
            }
            if (c._Yb1._ic) {
                c._Yb1._ic._kc = c._Yb1._kc;
            }
            if (c._Yb1._kc) {
                c._Yb1._kc._ic = c._Yb1._ic;
            }
            if (c._Yb1 == _G51._i21) {
                _G51._i21 = c._Yb1._kc;
            }
            if (c._Zb1._ic) {
                c._Zb1._ic._kc = c._Zb1._kc;
            }
            if (c._Zb1._kc) {
                c._Zb1._kc._ic = c._Zb1._ic;
            }
            if (c._Zb1 == _H51._i21) {
                _H51._i21 = c._Zb1._kc;
            }
            _j61._031(c);
            --this._e61;
        },
        _r_: function() {
            var c = this._i21;
            while (c) {
                var _X21 = c._Y21();
                var _Z21 = c.__21();
                var _mW = c._T51();
                var _nW = c._V51();
                var _G51 = _X21._g41();
                var _H51 = _Z21._g41();
                if (c._821 & _j61._dc1) {
                    if (_H51._U31(_G51) == false) {
                        var _Ic1 = c;
                        c = _Ic1._Q31();
                        this._031(_Ic1);
                        continue;
                    }
                    if (this._q51 && this._q51._U31(_X21, _Z21) == false) {
                        var _Ic1 = c;
                        c = _Ic1._Q31();
                        this._031(_Ic1);
                        continue;
                    }
                    c._821 &= ~_j61._dc1;
                }
                var _G61 = _G51._I31() && _G51._QT != _V11._W11;
                var _H61 = _H51._I31() && _H51._QT != _V11._W11;
                if (_G61 == false && _H61 == false) {
                    c = c._Q31();
                    continue;
                }
                var _uV = _X21._C31[_mW]._KV;
                var _vV = _Z21._C31[_nW]._KV;
                var _Jc1 = this._O21._dF(_uV, _vV);
                if (_Jc1 == false) {
                    var _Ic1 = c;
                    c = _Ic1._Q31();
                    this._031(_Ic1);
                    continue;
                }
                c._V9(this._s51);
                c = c._Q31();
            }
        }
    };

    function _Kc1() {
        this._CX = new _DR();
        this._DX = new _DR();
        this._MX = 0;
        this._NX = 0;
        this._Lc1 = 0;
        this._Mc1 = 0;
        this._Nc1 = 0;
    }

    function _Oc1() {
        this._Pc1 = new Array(_UQ);
        this._QX = new _DR();
        this._LX = new _DR();
        this._mW = 0;
        this._nW = 0;
        this._Qc1 = 0, this._Rc1 = 0;
        this._Sc1 = new _DR(), this._Tc1 = new _DR();
        this._Uc1 = 0, this._Vc1 = 0;
        this.type = 0;
        this._3Y = 0, this._5Y = 0;
        this._RX = 0;
    };

    function _Wc1() {
        this.points = new Array(_UQ);
        for (var i = 0; i < this.points.length;
            ++i) this.points[i] = new _Kc1();
        this._2U = new _DR();
        this._Lc1 = new _XR();
        this._Xc1 = new _XR();
        this._mW = 0;
        this._nW = 0;
        this._Qc1 = 0, this._Rc1 = 0;
        this._Uc1 = 0, this._Vc1 = 0;
        this.friction = 0;
        this._141 = 0;
        this._Yc1 = 0;
        this._RX = 0;
        this._Zc1 = 0;
    }

    function __c1() {
        this._2U = new _DR();
        this._OX = new _DR();
        this._NY = 0;
    }
    __c1.prototype = {
        _1Y: function(_c81, _2Y, _4Y, index) {
            _PQ(_c81._RX > 0);
            switch (_c81.type) {
                case _PX._TX:
                    {
                        var _6Y = (_2Y._vt.c * _c81._LX.x - _2Y._vt._Cb * _c81._LX.y) + _2Y._6d.x;
                        var _7Y = (_2Y._vt._Cb * _c81._LX.x + _2Y._vt.c * _c81._LX.y) + _2Y._6d.y;
                        var _8Y = (_4Y._vt.c * _c81._Pc1[0].x - _4Y._vt._Cb * _c81._Pc1[0].y) + _4Y._6d.x;
                        var _9Y = (_4Y._vt._Cb * _c81._Pc1[0].x + _4Y._vt.c * _c81._Pc1[0].y) + _4Y._6d.y;
                        this._OX.x = 0.5 * (_6Y + _8Y);
                        this._OX.y = 0.5 * (_7Y + _9Y);
                        this._2U.x = _8Y - _6Y;
                        this._2U.y = _9Y - _7Y;
                        var _0d1 = this._2U.x;
                        var _1d1 = this._2U.y;
                        this._2U._NR();
                        this._NY = (_0d1 * this._2U.x + _1d1 * this._2U.y) - _c81._3Y - _c81._5Y;
                    }
                    break;
                case _PX._UX:
                    {
                        this._2U.x = _2Y._vt.c * _c81._QX.x - _2Y._vt._Cb * _c81._QX.y;
                        this._2U.y = _2Y._vt._Cb * _c81._QX.x + _2Y._vt.c * _c81._QX.y;
                        var _eY = (_2Y._vt.c * _c81._LX.x - _2Y._vt._Cb * _c81._LX.y) + _2Y._6d.x;
                        var _fY = (_2Y._vt._Cb * _c81._LX.x + _2Y._vt.c * _c81._LX.y) + _2Y._6d.y;
                        var _gY = (_4Y._vt.c * _c81._Pc1[index].x - _4Y._vt._Cb * _c81._Pc1[index].y) + _4Y._6d.x;
                        var _hY = (_4Y._vt._Cb * _c81._Pc1[index].x + _4Y._vt.c * _c81._Pc1[index].y) + _4Y._6d.y;
                        this._NY = ((_gY - _eY) * this._2U.x + (_hY - _fY) * this._2U.y) - _c81._3Y - _c81._5Y;
                        this._OX.x = _gY;
                        this._OX.y = _hY;
                    }
                    break;
                case _PX._VX:
                    {
                        this._2U.x = _4Y._vt.c * _c81._QX.x - _4Y._vt._Cb * _c81._QX.y;
                        this._2U.y = _4Y._vt._Cb * _c81._QX.x + _4Y._vt.c * _c81._QX.y;
                        var _eY = (_4Y._vt.c * _c81._LX.x - _4Y._vt._Cb * _c81._LX.y) + _4Y._6d.x;
                        var _fY = (_4Y._vt._Cb * _c81._LX.x + _4Y._vt.c * _c81._LX.y) + _4Y._6d.y;
                        var _gY = (_2Y._vt.c * _c81._Pc1[index].x - _2Y._vt._Cb * _c81._Pc1[index].y) + _2Y._6d.x;
                        var _hY = (_2Y._vt._Cb * _c81._Pc1[index].x + _2Y._vt.c * _c81._Pc1[index].y) + _2Y._6d.y;
                        this._NY = ((_gY - _eY) * this._2U.x + (_hY - _fY) * this._2U.y) - _c81._3Y - _c81._5Y;
                        this._OX.x = _gY;
                        this._OX.y = _hY;
                        this._2U.x = -this._2U.x;
                        this._2U.y = -this._2U.y;
                    }
                    break;
            }
        }
    };

    function _2d1() {
        this._rQ = new _I41();
        this._3d1 = null;
        this._n4 = 0;
        this._S41 = null;
        this._T41 = null;
    }

    function _4d1() {
        this._5d1 = [];
        this._6d1 = [];
    }
    _4d1._7d1 = new _nS();
    _4d1._8d1 = new _nS();
    _4d1._9d1 = new __c1();
    _4d1.prototype = {
        _lI: function(_H21) {
            this._5b1 = _H21._rQ;
            this._AU = _H21._n4;
            this._5d1.length = this._AU;
            this._6d1.length = this._AU;
            this._ad1 = _H21._S41;
            this._bd1 = _H21._T41;
            this._cd1 = _H21._3d1;
            for (var i = 0; i < this._AU; ++i) {
                var _W21 = this._cd1[i];
                var _X21 = _W21._s61;
                var _Z21 = _W21._u61;
                var _X_ = _X21._941();
                var _Y_ = _Z21._941();
                var _3Y = _X_._RT;
                var _5Y = _Y_._RT;
                var _G51 = _X21._g41();
                var _H51 = _Z21._g41();
                var _SX = _W21._5c1();
                var _RX = _SX._RX;
                _PQ(_RX > 0);
                var _dd1 = this._6d1[i] || new _Wc1();
                _dd1.friction = _W21._741;
                _dd1._141 = _W21._841;
                _dd1._Yc1 = _W21._4c1;
                _dd1._mW = _G51._721;
                _dd1._nW = _H51._721;
                _dd1._Qc1 = _G51._v21;
                _dd1._Rc1 = _H51._v21;
                _dd1._Uc1 = _G51._x21;
                _dd1._Vc1 = _H51._x21;
                _dd1._Zc1 = i;
                _dd1._RX = _RX;
                _dd1._Xc1._ER();
                _dd1._Lc1._ER();
                this._6d1[i] = _dd1;
                var _c81 = this._5d1[i] || new _Oc1();
                _c81._mW = _G51._721;
                _c81._nW = _H51._721;
                _c81._Qc1 = _G51._v21;
                _c81._Rc1 = _H51._v21;
                _c81._Sc1.x = _G51._g21._qS.x;
                _c81._Sc1.y = _G51._g21._qS.y;
                _c81._Tc1.x = _H51._g21._qS.x;
                _c81._Tc1.y = _H51._g21._qS.y;
                _c81._Uc1 = _G51._x21;
                _c81._Vc1 = _H51._x21;
                _c81._QX.x = _SX._QX.x;
                _c81._QX.y = _SX._QX.y;
                _c81._LX.x = _SX._LX.x;
                _c81._LX.y = _SX._LX.y;
                _c81._RX = _RX;
                _c81._3Y = _3Y;
                _c81._5Y = _5Y;
                _c81.type = _SX.type;
                this._5d1[i] = _c81;
                for (var _k3 = 0; _k3 < _RX; ++_k3) {
                    var _KZ = _SX.points[_k3];
                    var _ed1 = _dd1.points[_k3];
                    if (this._5b1._O41) {
                        _ed1._MX = this._5b1._L41 * _KZ._MX;
                        _ed1._NX = this._5b1._L41 * _KZ._NX;
                    } else {
                        _ed1._MX = 0.0;
                        _ed1._NX = 0.0;
                    }
                    _ed1._CX._ER();
                    _ed1._DX._ER();
                    _ed1._Lc1 = 0.0;
                    _ed1._Mc1 = 0.0;
                    _ed1._Nc1 = 0.0;
                    _c81._Pc1[_k3] = _KZ._LX;
                }
            }
        },
        _fd1: function() {
            for (var i = 0; i < this._AU; ++i) {
                var _dd1 = this._6d1[i];
                var _c81 = this._5d1[i];
                var _3Y = _c81._3Y;
                var _5Y = _c81._5Y;
                var _SX = this._cd1[_dd1._Zc1]._5c1();
                var _mW = _dd1._mW;
                var _nW = _dd1._nW;
                var _gd1 = _dd1._Qc1;
                var _hd1 = _dd1._Rc1;
                var _U01 = _dd1._Uc1;
                var _V01 = _dd1._Vc1;
                var _Sc1 = _c81._Sc1;
                var _Tc1 = _c81._Tc1;
                var _S51 = this._ad1[_mW].c;
                var _id1 = this._ad1[_mW]._Z4;
                var _jd1 = this._bd1[_mW]._X1;
                var _zW = this._bd1[_mW].w;
                var _U51 = this._ad1[_nW].c;
                var _kd1 = this._ad1[_nW]._Z4;
                var _ld1 = this._bd1[_nW]._X1;
                var _AW = this._bd1[_nW].w;
                _PQ(_SX._RX > 0);
                _4d1._7d1._vt._7b(_id1);
                _4d1._8d1._vt._7b(_kd1);
                _4d1._7d1._6d.x = _S51.x - (_4d1._7d1._vt.c * _Sc1.x - _4d1._7d1._vt._Cb * _Sc1.y);
                _4d1._7d1._6d.y = _S51.y - (_4d1._7d1._vt._Cb * _Sc1.x + _4d1._7d1._vt.c * _Sc1.y);
                _4d1._8d1._6d.x = _U51.x - (_4d1._8d1._vt.c * _Tc1.x - _4d1._8d1._vt._Cb * _Tc1.y);
                _4d1._8d1._6d.y = _U51.y - (_4d1._8d1._vt._Cb * _Tc1.x + _4d1._8d1._vt.c * _Tc1.y);
                var _7c1 = new __X();
                _7c1._1Y(_SX, _4d1._7d1, _3Y, _4d1._8d1, _5Y);
                _dd1._2U.x = _7c1._2U.x;
                _dd1._2U.y = _7c1._2U.y;
                var _RX = _dd1._RX;
                for (var _k3 = 0; _k3 < _RX; ++_k3) {
                    var _ed1 = _dd1.points[_k3];
                    _ed1._CX.x = _7c1.points[_k3].x - _S51.x;
                    _ed1._CX.y = _7c1.points[_k3].y - _S51.y;
                    _ed1._DX.x = _7c1.points[_k3].x - _U51.x;
                    _ed1._DX.y = _7c1.points[_k3].y - _U51.y;
                    var _md1 = _ed1._CX.x * _dd1._2U.y - _ed1._CX.y * _dd1._2U.x;
                    var _nd1 = _ed1._DX.x * _dd1._2U.y - _ed1._DX.y * _dd1._2U.x;
                    var _od1 = _gd1 + _hd1 + _U01 * _md1 * _md1 + _V01 * _nd1 * _nd1;
                    _ed1._Lc1 = _od1 > 0.0 ? 1.0 / _od1 : 0.0;
                    var _zZ = 1.0 * _dd1._2U.y;
                    var _AZ = -1.0 * _dd1._2U.x;
                    var _pd1 = _ed1._CX.x * _AZ - _ed1._CX.y * _zZ;
                    var _qd1 = _ed1._DX.x * _AZ - _ed1._DX.y * _zZ;
                    var _rd1 = _gd1 + _hd1 + _U01 * _pd1 * _pd1 + _V01 * _qd1 * _qd1;
                    _ed1._Mc1 = _rd1 > 0.0 ? 1.0 / _rd1 : 0.0;
                    _ed1._Nc1 = 0.0;
                    var _sd1 = _dd1._2U.x * (((_ld1.x + (-_AW * _ed1._DX.y)) - _jd1.x) - (-_zW * _ed1._CX.y)) + _dd1._2U.y * (((_ld1.y + (_AW * _ed1._DX.x)) - _jd1.y) - (_zW * _ed1._CX.x));
                    if (_sd1 < -_2R) {
                        _ed1._Nc1 = -_dd1._141 * _sd1;
                    }
                }
                if (_dd1._RX == 2) {
                    var _td1 = _dd1.points[0];
                    var _ud1 = _dd1.points[1];
                    var _vd1 = _td1._CX.x * _dd1._2U.y - _td1._CX.y * _dd1._2U.x;
                    var _wd1 = _td1._DX.x * _dd1._2U.y - _td1._DX.y * _dd1._2U.x;
                    var _xd1 = _ud1._CX.x * _dd1._2U.y - _ud1._CX.y * _dd1._2U.x;
                    var _yd1 = _ud1._DX.x * _dd1._2U.y - _ud1._DX.y * _dd1._2U.x;
                    var _zd1 = _gd1 + _hd1 + _U01 * _vd1 * _vd1 + _V01 * _wd1 * _wd1;
                    var _Ad1 = _gd1 + _hd1 + _U01 * _xd1 * _xd1 + _V01 * _yd1 * _yd1;
                    var _Bd1 = _gd1 + _hd1 + _U01 * _vd1 * _xd1 + _V01 * _wd1 * _yd1;
                    var _Cd1 = 1000.0;
                    if (_zd1 * _zd1 < _Cd1 * (_zd1 * _Ad1 - _Bd1 * _Bd1)) {
                        _dd1._Xc1._xq.x = _zd1;
                        _dd1._Xc1._xq.y = _Bd1;
                        _dd1._Xc1._YR.x = _Bd1;
                        _dd1._Xc1._YR.y = _Ad1;
                        _dd1._Lc1._Zy(_dd1._Xc1.__R());
                    } else {
                        _dd1._RX = 1;
                    }
                }
            }
        },
        _Dd1: function() {
            for (var i = 0; i < this._AU; ++i) {
                var _dd1 = this._6d1[i];
                var _mW = _dd1._mW;
                var _nW = _dd1._nW;
                var _gd1 = _dd1._Qc1;
                var _U01 = _dd1._Uc1;
                var _hd1 = _dd1._Rc1;
                var _V01 = _dd1._Vc1;
                var _RX = _dd1._RX;
                var _jd1 = this._bd1[_mW]._X1;
                var _zW = this._bd1[_mW].w;
                var _ld1 = this._bd1[_nW]._X1;
                var _AW = this._bd1[_nW].w;
                var _2U = _dd1._2U;
                var _zZ = 1.0 * _2U.y;
                var _AZ = -1.0 * _2U.x;
                for (var _k3 = 0; _k3 < _RX; ++_k3) {
                    var _ed1 = _dd1.points[_k3];
                    var _YZ = (_ed1._MX * _2U.x) + (_ed1._NX * _zZ);
                    var _ZZ = (_ed1._MX * _2U.y) + (_ed1._NX * _AZ);
                    _zW -= _U01 * (_ed1._CX.x * _ZZ - _ed1._CX.y * _YZ);
                    _jd1.x -= _gd1 * _YZ;
                    _jd1.y -= _gd1 * _ZZ;
                    _AW += _V01 * (_ed1._DX.x * _ZZ - _ed1._DX.y * _YZ);
                    _ld1.x += _hd1 * _YZ;
                    _ld1.y += _hd1 * _ZZ;
                }
                this._bd1[_mW].w = _zW;
                this._bd1[_nW].w = _AW;
            }
        },
        _Ed1: function() {
            for (var i = 0; i < this._AU; ++i) {
                var _dd1 = this._6d1[i];
                var _mW = _dd1._mW;
                var _nW = _dd1._nW;
                var _gd1 = _dd1._Qc1;
                var _U01 = _dd1._Uc1;
                var _hd1 = _dd1._Rc1;
                var _V01 = _dd1._Vc1;
                var _RX = _dd1._RX;
                var _jd1 = this._bd1[_mW]._X1;
                var _zW = this._bd1[_mW].w;
                var _ld1 = this._bd1[_nW]._X1;
                var _AW = this._bd1[_nW].w;
                var _2U = _dd1._2U;
                var _zZ = 1.0 * _2U.y;
                var _AZ = -1.0 * _2U.x;
                var friction = _dd1.friction;
                _PQ(_RX == 1 || _RX == 2);
                for (var _k3 = 0; _k3 < _RX; ++_k3) {
                    var _ed1 = _dd1.points[_k3];
                    var _Fd1 = _ld1.x + (-_AW * _ed1._DX.y) - _jd1.x - (-_zW * _ed1._CX.y);
                    var _Gd1 = _ld1.y + (_AW * _ed1._DX.x) - _jd1.y - (_zW * _ed1._CX.x);
                    var _Hd1 = (_Fd1 * _zZ + _Gd1 * _AZ) - _dd1._Yc1;
                    var _Id1 = _ed1._Mc1 * (-_Hd1);
                    var _Jd1 = friction * _ed1._MX;
                    var _Kd1 = _4T(_ed1._NX + _Id1, -_Jd1, _Jd1);
                    _Id1 = _Kd1 - _ed1._NX;
                    _ed1._NX = _Kd1;
                    var _YZ = _Id1 * _zZ;
                    var _ZZ = _Id1 * _AZ;
                    _jd1.x -= _gd1 * _YZ;
                    _jd1.y -= _gd1 * _ZZ;
                    _zW -= _U01 * (_ed1._CX.x * _ZZ - _ed1._CX.y * _YZ);
                    _ld1.x += _hd1 * _YZ;
                    _ld1.y += _hd1 * _ZZ;
                    _AW += _V01 * (_ed1._DX.x * _ZZ - _ed1._DX.y * _YZ);
                }
                if (_dd1._RX == 1) {
                    _ed1 = _dd1.points[0];
                    _Fd1 = _ld1.x + (-_AW * _ed1._DX.y) - _jd1.x - (-_zW * _ed1._CX.y);
                    _Gd1 = _ld1.y + (_AW * _ed1._DX.x) - _jd1.y - (_zW * _ed1._CX.x);
                    var _ab1 = _Fd1 * _2U.x + _Gd1 * _2U.y;
                    var _Id1 = -_ed1._Lc1 * (_ab1 - _ed1._Nc1);
                    var _Kd1 = _2T(_ed1._MX + _Id1, 0.0);
                    _Id1 = _Kd1 - _ed1._MX;
                    _ed1._MX = _Kd1;
                    _YZ = _Id1 * _2U.x;
                    _ZZ = _Id1 * _2U.y;
                    _jd1.x -= _gd1 * _YZ;
                    _jd1.y -= _gd1 * _ZZ;
                    _zW -= _U01 * (_ed1._CX.x * _ZZ - _ed1._CX.y * _YZ);
                    _ld1.x += _hd1 * _YZ;
                    _ld1.y += _hd1 * _ZZ;
                    _AW += _V01 * (_ed1._DX.x * _ZZ - _ed1._DX.y * _YZ);
                } else {
                    var _Ld1 = _dd1.points[0];
                    var _Md1 = _dd1.points[1];
                    var _081 = _Ld1._MX;
                    var _181 = _Md1._MX;
                    _PQ(_081 >= 0.0 && _181 >= 0.0);
                    var _Nd1 = _ld1.x + (-_AW * _Ld1._DX.y) - _jd1.x - (-_zW * _Ld1._CX.y);
                    var _Od1 = _ld1.y + (_AW * _Ld1._DX.x) - _jd1.y - (_zW * _Ld1._CX.x);
                    var _Pd1 = _ld1.x + (-_AW * _Md1._DX.y) - _jd1.x - (-_zW * _Md1._CX.y);
                    var _Qd1 = _ld1.y + (_AW * _Md1._DX.x) - _jd1.y - (_zW * _Md1._CX.x);
                    var _Rd1 = _Nd1 * _2U.x + _Od1 * _2U.y;
                    var _Sd1 = _Pd1 * _2U.x + _Qd1 * _2U.y;
                    var _281 = _Rd1 - _Ld1._Nc1;
                    var _381 = _Sd1 - _Md1._Nc1;
                    _281 -= _dd1._Xc1._xq.x * _081 + _dd1._Xc1._YR.x * _181;
                    _381 -= _dd1._Xc1._xq.y * _081 + _dd1._Xc1._YR.y * _181;
                    for (;;) {
                        var _l3 = -(_dd1._Lc1._xq.x * _281 + _dd1._Lc1._YR.x * _381);
                        var _Td1 = -(_dd1._Lc1._xq.y * _281 + _dd1._Lc1._YR.y * _381);
                        if (_l3 >= 0.0 && _Td1 >= 0.0) {
                            var _A5 = _l3 - _081;
                            var _B5 = _Td1 - _181;
                            var _Ud1 = _A5 * _2U.x;
                            var _Vd1 = _A5 * _2U.y;
                            var _Wd1 = _B5 * _2U.x;
                            var _Xd1 = _B5 * _2U.y;
                            _jd1.x -= _gd1 * (_Ud1 + _Wd1);
                            _jd1.y -= _gd1 * (_Vd1 + _Xd1);
                            _zW -= _U01 * ((_Ld1._CX.x * _Vd1 - _Ld1._CX.y * _Ud1) + (_Md1._CX.x * _Xd1 - _Md1._CX.y * _Wd1));
                            _ld1.x += _hd1 * (_Ud1 + _Wd1);
                            _ld1.y += _hd1 * (_Vd1 + _Xd1);
                            _AW += _V01 * ((_Ld1._DX.x * _Vd1 - _Ld1._DX.y * _Ud1) + (_Md1._DX.x * _Xd1 - _Md1._DX.y * _Wd1));
                            _Ld1._MX = _l3;
                            _Md1._MX = _Td1;
                            break;
                        }
                        _l3 = -_Ld1._Lc1 * _281;
                        _Td1 = 0.0;
                        _Rd1 = 0.0;
                        _Sd1 = _dd1._Xc1._xq.y * _l3 + _381;
                        if (_l3 >= 0.0 && _Sd1 >= 0.0) {
                            _A5 = _l3 - _081;
                            _B5 = _Td1 - _181;
                            _Ud1 = _A5 * _2U.x;
                            _Vd1 = _A5 * _2U.y;
                            _Wd1 = _B5 * _2U.x;
                            _Xd1 = _B5 * _2U.y;
                            _jd1.x -= _gd1 * (_Ud1 + _Wd1);
                            _jd1.y -= _gd1 * (_Vd1 + _Xd1);
                            _zW -= _U01 * ((_Ld1._CX.x * _Vd1 - _Ld1._CX.y * _Ud1) + (_Md1._CX.x * _Xd1 - _Md1._CX.y * _Wd1));
                            _ld1.x += _hd1 * (_Ud1 + _Wd1);
                            _ld1.y += _hd1 * (_Vd1 + _Xd1);
                            _AW += _V01 * ((_Ld1._DX.x * _Vd1 - _Ld1._DX.y * _Ud1) + (_Md1._DX.x * _Xd1 - _Md1._DX.y * _Wd1));
                            _Ld1._MX = _l3;
                            _Md1._MX = _Td1;
                            break;
                        }
                        _l3 = 0.0;
                        _Td1 = -_Md1._Lc1 * _381;
                        _Rd1 = _dd1._Xc1._YR.x * _Td1 + _281;
                        _Sd1 = 0.0;
                        if (_Td1 >= 0.0 && _Rd1 >= 0.0) {
                            _A5 = _l3 - _081;
                            _B5 = _Td1 - _181;
                            _Ud1 = _A5 * _2U.x;
                            _Vd1 = _A5 * _2U.y;
                            _Wd1 = _B5 * _2U.x;
                            _Xd1 = _B5 * _2U.y;
                            _jd1.x -= _gd1 * (_Ud1 + _Wd1);
                            _jd1.y -= _gd1 * (_Vd1 + _Xd1);
                            _zW -= _U01 * ((_Ld1._CX.x * _Vd1 - _Ld1._CX.y * _Ud1) + (_Md1._CX.x * _Xd1 - _Md1._CX.y * _Wd1));
                            _ld1.x += _hd1 * (_Ud1 + _Wd1);
                            _ld1.y += _hd1 * (_Vd1 + _Xd1);
                            _AW += _V01 * ((_Ld1._DX.x * _Vd1 - _Ld1._DX.y * _Ud1) + (_Md1._DX.x * _Xd1 - _Md1._DX.y * _Wd1));
                            _Ld1._MX = _l3;
                            _Md1._MX = _Td1;
                            break;
                        }
                        _l3 = 0.0;
                        _Td1 = 0.0;
                        _Rd1 = _281;
                        _Sd1 = _381;
                        if (_Rd1 >= 0.0 && _Sd1 >= 0.0) {
                            _A5 = _l3 - _081;
                            _B5 = _Td1 - _181;
                            _Ud1 = _A5 * _2U.x;
                            _Vd1 = _A5 * _2U.y;
                            _Wd1 = _B5 * _2U.x;
                            _Xd1 = _B5 * _2U.y;
                            _jd1.x -= _gd1 * (_Ud1 + _Wd1);
                            _jd1.y -= _gd1 * (_Vd1 + _Xd1);
                            _zW -= _U01 * ((_Ld1._CX.x * _Vd1 - _Ld1._CX.y * _Ud1) + (_Md1._CX.x * _Xd1 - _Md1._CX.y * _Wd1));
                            _ld1.x += _hd1 * (_Ud1 + _Wd1);
                            _ld1.y += _hd1 * (_Vd1 + _Xd1);
                            _AW += _V01 * ((_Ld1._DX.x * _Vd1 - _Ld1._DX.y * _Ud1) + (_Md1._DX.x * _Xd1 - _Md1._DX.y * _Wd1));
                            _Ld1._MX = _l3;
                            _Md1._MX = _Td1;
                            break;
                        }
                        break;
                    }
                }
                this._bd1[_mW].w = _zW;
                this._bd1[_nW].w = _AW;
            }
        },
        _Yd1: function() {
            for (var i = 0; i < this._AU; ++i) {
                var _dd1 = this._6d1[i];
                var _SX = this._cd1[_dd1._Zc1]._5c1();
                for (var _k3 = 0; _k3 < _dd1._RX; ++_k3) {
                    _SX.points[_k3]._MX = _dd1.points[_k3]._MX;
                    _SX.points[_k3]._NX = _dd1.points[_k3]._NX;
                }
            }
        },
        _Zd1: function() {
            var __d1 = 0.0;
            for (var i = 0; i < this._AU; ++i) {
                var _c81 = this._5d1[i];
                var _mW = _c81._mW;
                var _nW = _c81._nW;
                var _Sc1 = _c81._Sc1;
                var _gd1 = _c81._Qc1;
                var _U01 = _c81._Uc1;
                var _Tc1 = _c81._Tc1;
                var _hd1 = _c81._Rc1;
                var _V01 = _c81._Vc1;
                var _RX = _c81._RX;
                var _S51 = this._ad1[_mW].c;
                var _id1 = this._ad1[_mW]._Z4;
                var _U51 = this._ad1[_nW].c;
                var _kd1 = this._ad1[_nW]._Z4;
                for (var _k3 = 0; _k3 < _RX; ++_k3) {
                    _4d1._7d1._vt._7b(_id1);
                    _4d1._8d1._vt._7b(_kd1);
                    _4d1._7d1._6d.x = _S51.x - (_4d1._7d1._vt.c * _Sc1.x - _4d1._7d1._vt._Cb * _Sc1.y);
                    _4d1._7d1._6d.y = _S51.y - (_4d1._7d1._vt._Cb * _Sc1.x + _4d1._7d1._vt.c * _Sc1.y);
                    _4d1._8d1._6d.x = _U51.x - (_4d1._8d1._vt.c * _Tc1.x - _4d1._8d1._vt._Cb * _Tc1.y);
                    _4d1._8d1._6d.y = _U51.y - (_4d1._8d1._vt._Cb * _Tc1.x + _4d1._8d1._vt.c * _Tc1.y);
                    _4d1._9d1._1Y(_c81, _4d1._7d1, _4d1._8d1, _k3);
                    var _2U = _4d1._9d1._2U;
                    var _OX = _4d1._9d1._OX;
                    var _NY = _4d1._9d1._NY;
                    var _0e1 = _OX.x - _S51.x;
                    var _1e1 = _OX.y - _S51.y;
                    var _2e1 = _OX.x - _U51.x;
                    var _3e1 = _OX.y - _U51.y;
                    __d1 = _0T(__d1, _NY);
                    var _US = _4T(_9R * (_NY + _YQ), -_3R, 0.0);
                    var _md1 = _0e1 * _2U.y - _1e1 * _2U.x;
                    var _nd1 = _2e1 * _2U.y - _3e1 * _2U.x;
                    var _Xc1 = _gd1 + _hd1 + _U01 * _md1 * _md1 + _V01 * _nd1 * _nd1;
                    var _f31 = _Xc1 > 0.0 ? -_US / _Xc1 : 0.0;
                    var _YZ = _f31 * _2U.x;
                    var _ZZ = _f31 * _2U.y;
                    _S51.x -= _gd1 * _YZ;
                    _S51.y -= _gd1 * _ZZ;
                    _id1 -= _U01 * (_0e1 * _ZZ - _1e1 * _YZ);
                    _U51.x += _hd1 * _YZ;
                    _U51.y += _hd1 * _ZZ;
                    _kd1 += _V01 * (_2e1 * _ZZ - _3e1 * _YZ);
                }
                this._ad1[_mW]._Z4 = _id1;
                this._ad1[_nW]._Z4 = _kd1;
            }
            return __d1 >= -3.0 * _YQ;
        },
        _4e1: function(_5e1, _6e1) {
            var __d1 = 0.0;
            for (var i = 0; i < this._AU; ++i) {
                var _c81 = this._5d1[i];
                var _mW = _c81._mW;
                var _nW = _c81._nW;
                var _Sc1 = _c81._Sc1;
                var _Tc1 = _c81._Tc1;
                var _RX = _c81._RX;
                var _gd1 = 0.0;
                var _U01 = 0.0;
                if (_mW == _5e1 || _mW == _6e1) {
                    _gd1 = _c81._Qc1;
                    _U01 = _c81._Uc1;
                }
                var _hd1 = 0.0;
                var _V01 = 0.0;
                if (_nW == _5e1 || _nW == _6e1) {
                    _hd1 = _c81._Rc1;
                    _V01 = _c81._Vc1;
                }
                var _S51 = this._ad1[_mW].c;
                var _id1 = this._ad1[_mW]._Z4;
                var _U51 = this._ad1[_nW].c;
                var _kd1 = this._ad1[_nW]._Z4;
                for (var _k3 = 0; _k3 < _RX; ++_k3) {
                    _4d1._7d1._vt._7b(_id1);
                    _4d1._8d1._vt._7b(_kd1);
                    _4d1._7d1._6d._Zy(_DR._KR(_S51, _OS(_4d1._7d1._vt, _Sc1)));
                    _4d1._8d1._6d._Zy(_DR._KR(_U51, _OS(_4d1._8d1._vt, _Tc1)));
                    _4d1._9d1._1Y(_c81, _4d1._7d1, _4d1._8d1, _k3);
                    var _2U = _4d1._9d1._2U;
                    var _OX = _4d1._9d1._OX;
                    var _NY = _4d1._9d1._NY;
                    var _CX = _DR._KR(_OX, _S51);
                    var _DX = _DR._KR(_OX, _U51);
                    __d1 = _0T(__d1, _NY);
                    var _US = _4T(_aR * (_NY + _YQ), -_3R, 0.0);
                    var _md1 = _AS(_CX, _2U);
                    var _nd1 = _AS(_DX, _2U);
                    var _Xc1 = _gd1 + _hd1 + _U01 * _md1 * _md1 + _V01 * _nd1 * _nd1;
                    var _f31 = _Xc1 > 0.0 ? -_US / _Xc1 : 0.0;
                    var _OZ = _DR._im(_f31, _2U);
                    _S51._KR(_DR._im(_gd1,
                        _OZ));
                    _id1 -= _U01 * _AS(_CX, _OZ);
                    _U51._1b(_DR._im(_hd1, _OZ));
                    _kd1 += _V01 * _AS(_DX, _OZ);
                }
                this._ad1[_mW]._Z4 = _id1;
                this._ad1[_nW]._Z4 = _kd1;
            }
            return __d1 >= -1.5 * _YQ;
        }
    };

    function _e51() {
        this._x61 = [];
        this._cd1 = [];
        this._7e1 = [];
        this._bd1 = [];
        this._ad1 = [];
    }
    var _8e1 = _wQ._IQ("solve initialization", "solve");
    var _9e1 = _wQ._IQ("warm starting", "solve initialization");
    var _ae1 = _wQ._IQ("solve velocities", "solve");
    var _be1 = _wQ._IQ("solve positions", "solve");
    _e51._ce1 = new _R41();
    _e51._de1 = new _2d1();
    _e51._ee1 = new _4d1();
    _e51.prototype = {
        _U9: function() {
            this._251 = 0;
            this._e61 = 0;
            this._351 = 0;
        },
        _1Y: function(_fe1, _ge1, _he1, listener) {
            this._ie1 = listener;
            this._M61 = _fe1;
            this._N61 = _ge1;
            this._je1 = _he1;
            this._251 = 0;
            this._e61 = 0;
            this._351 = 0;
            this._x61.length = _fe1;
            this._cd1.length = _ge1;
            this._7e1.length = _he1;
            this._bd1.length = _fe1;
            this._ad1.length = _fe1;
        },
        _2S: function(_rQ, gravity, _021) {
            _8e1.start();
            var h = _rQ._J41;
            for (var i = 0; i < this._251; ++i) {
                var _g3 = this._x61[i];
                this._ad1[i].c._Zy(_g3._g21.c);
                var _Z4 = _g3._g21._Z4;
                this._bd1[i]._X1._Zy(_g3._l21);
                var w = _g3._m21;
                _g3._g21._rS._Zy(_g3._g21.c);
                _g3._g21._tS = _g3._g21._Z4;
                if (_g3._QT == _V11._t21) {
                    this._bd1[i]._X1.x += h * ((_g3._p21 * gravity.x) + (_g3._v21 * _g3._q21.x));
                    this._bd1[i]._X1.y += h * ((_g3._p21 * gravity.y) + (_g3._v21 * _g3._q21.y));
                    w += h * _g3._x21 * _g3._r21;
                    this._bd1[i]._X1.x *= 1.0 / (1.0 + h * _g3._n21);
                    this._bd1[i]._X1.y *= 1.0 / (1.0 + h * _g3._n21);
                    w *= 1.0 / (1.0 + h * _g3._o21);
                }
                this._ad1[i]._Z4 = _Z4;
                this._bd1[i].w = w;
            }
            _e51._ce1._rQ = _rQ;
            _e51._ce1._S41 = this._ad1;
            _e51._ce1._T41 = this._bd1;
            _e51._de1._rQ = _rQ;
            _e51._de1._3d1 = this._cd1;
            _e51._de1._n4 = this._e61;
            _e51._de1._S41 = this._ad1;
            _e51._de1._T41 = this._bd1;
            _e51._de1._ke1 = this._le1;
            _e51._ee1._lI(_e51._de1);
            _e51._ee1._fd1();
            if (_rQ._O41) {
                _9e1.start();
                _e51._ee1._Dd1();
                _9e1.stop();
            }
            for (var i = 0; i < this._351; ++i) {
                this._7e1[i]._me1(_e51._ce1);
            }
            _8e1.stop();
            _ae1.start();
            for (var i = 0; i < _rQ._M41; ++i) {
                for (var _k3 = 0; _k3 < this._351; ++_k3) {
                    this._7e1[_k3]._Ed1(_e51._ce1);
                }
                _e51._ee1._Ed1();
            }
            _e51._ee1._Yd1();
            _ae1.stop();
            _be1.start();
            for (var i = 0; i < this._251; ++i) {
                var c = this._ad1[i].c;
                var _Z4 = this._ad1[i]._Z4;
                var _X1 = this._bd1[i]._X1;
                var w = this._bd1[i].w;
                var _ne1 = h * _X1.x;
                var _oe1 = h * _X1.y;
                var _pe1 = _ne1 * _ne1 + _oe1 * _oe1;
                if (_pe1 > _6R) {
                    var _qe1 = _5R / _AR(_pe1);
                    _X1.x *= _qe1;
                    _X1.y *= _qe1;
                }
                var rotation = h * w;
                if (rotation * rotation > _8R) {
                    var _qe1 = _7R / _YS(rotation);
                    w *= _qe1;
                }
                c.x += h * _X1.x;
                c.y += h * _X1.y;
                _Z4 += h * w;
                this._ad1[i]._Z4 = _Z4;
                this._bd1[i].w = w;
            }
            var _re1 = false;
            for (var i = 0; i < _rQ._N41; ++i) {
                var _se1 = _e51._ee1._Zd1();
                var _te1 = true;
                for (var _k3 = 0; _k3 < this._351; ++_k3) {
                    var _ue1 = this._7e1[_k3]._Zd1(_e51._ce1);
                    _te1 = _te1 && _ue1;
                }
                if (_se1 && _te1) {
                    _re1 = true;
                    break;
                }
            }
            for (var i = 0; i < this._251; ++i) {
                var body = this._x61[i];
                body._g21.c._Zy(this._ad1[i].c);
                body._g21._Z4 = this._ad1[i]._Z4;
                body._l21._Zy(this._bd1[i]._X1);
                body._m21 = this._bd1[i].w;
                body._T31();
            }
            _be1.stop();
            this._ve1(_e51._ee1._6d1);
            if (_021) {
                var _we1 = _RQ;
                var _xe1 = _cR * _cR;
                var _ye1 = _dR * _dR;
                for (var i = 0; i < this._251; ++i) {
                    var _g3 = this._x61[i];
                    if (_g3._ST() == _V11._W11) {
                        continue;
                    }
                    if ((_g3._821 & _V11._b21) == 0 || _g3._m21 * _g3._m21 > _ye1 || _zS(_g3._l21, _g3._l21) > _xe1) {
                        _g3._s21 = 0.0;
                        _we1 = 0.0;
                    } else {
                        _g3._s21 += h;
                        _we1 = _0T(_we1, _g3._s21);
                    }
                }
                if (_we1 >= _bR && _re1) {
                    for (var i = 0; i < this._251; ++i) {
                        var _g3 = this._x61[i];
                        _g3._uD(false);
                    }
                }
            }
        },
        _M51: function(_O61, _5e1, _6e1) {
            _PQ(_5e1 < this._251);
            _PQ(_6e1 < this._251);
            for (var i = 0; i < this._251; ++i) {
                var _g3 = this._x61[i];
                this._ad1[i].c._Zy(_g3._g21.c);
                this._ad1[i]._Z4 = _g3._g21._Z4;
                this._bd1[i]._X1._Zy(_g3._l21);
                this._bd1[i].w = _g3._m21;
            }
            _e51._de1._3d1 = this._cd1;
            _e51._de1._n4 = this._e61;
            _e51._de1._rQ = _O61;
            _e51._de1._S41 = this._ad1;
            _e51._de1._T41 = this._bd1;
            _e51._ee1._lI(_e51._de1);
            for (var i = 0; i < _O61._N41; ++i) {
                var _se1 = _e51._ee1._4e1(_5e1,
                    _6e1);
                if (_se1) {
                    break;
                }
            }
            this._x61[_5e1]._g21._rS._Zy(this._ad1[_5e1].c);
            this._x61[_5e1]._g21._tS = this._ad1[_5e1]._Z4;
            this._x61[_6e1]._g21._rS._Zy(this._ad1[_6e1].c);
            this._x61[_6e1]._g21._tS = this._ad1[_6e1]._Z4;
            _e51._ee1._fd1();
            for (var i = 0; i < _O61._M41; ++i) {
                _e51._ee1._Ed1();
            }
            var h = _O61._J41;
            for (var i = 0; i < this._251; ++i) {
                var c = this._ad1[i].c;
                var _Z4 = this._ad1[i]._Z4;
                var _X1 = this._bd1[i]._X1;
                var w = this._bd1[i].w;
                var _ze1 = _DR._im(h, _X1);
                if (_zS(_ze1, _ze1) > _6R) {
                    var _qe1 = _5R / _ze1._LR();
                    _X1._im(_qe1);
                }
                var rotation = h * w;
                if (rotation * rotation > _8R) {
                    var _qe1 = _7R / _YS(rotation);
                    w *= _qe1;
                }
                c._1b(_DR._im(h, _X1));
                _Z4 += h * w;
                this._ad1[i]._Z4 = _Z4;
                this._bd1[i].w = w;
                var body = this._x61[i];
                body._g21.c._Zy(c);
                body._g21._Z4 = _Z4;
                body._l21._Zy(_X1);
                body._m21 = w;
                body._T31();
            }
            this._ve1(_e51._ee1._6d1);
        },
        _o61: function(body) {
            _PQ(this._251 < this._M61);
            body._721 = this._251;
            this._x61[this._251] = body;
            if (!this._ad1[this._251]) {
                this._ad1[this._251] = new _P41();
                this._bd1[this._251] = new _Q41();
            }++this._251;
        },
        _v61: function(_W21) {
            _PQ(this._e61 < this._N61);
            this._cd1[this._e61++] = _W21;
        },
        _w61: function(_XD) {
            _PQ(this._351 < this._je1);
            this._7e1[this._351++] = _XD;
        },
        _ve1: function(_Ae1) {
            if (this._ie1 == null) {
                return;
            }
            for (var i = 0; i < this._e61; ++i) {
                var c = this._cd1[i];
                var _dd1 = _Ae1[i];
                var _f31 = new _v41();
                _f31._n4 = _dd1._RX;
                for (var _k3 = 0; _k3 < _dd1._RX; ++_k3) {
                    _f31._w41[_k3] = _dd1.points[_k3]._MX;
                    _f31._x41[_k3] = _dd1.points[_k3]._NX;
                }
                this._ie1._D41(c, _f31);
            }
        }
    };

    function _Be1() {
        this._Ce1 = new _DR();
        this._De1 = 0;
        this._Ee1 = 0;
    };

    function _Fe1() {
        this.other = null;
        this._XD = null;
        this._ic = null;
        this._kc = null;
    };

    function _Ge1() {
        this.type = _B51._He1;
        this._JV = null;
        this._G51 = null;
        this._H51 = null;
        this._I51 = false;
    };
    _Ge1.prototype = {
        _TR: function(data, _L61, _Ie1) {
            this._G51 = _L61[data['bodyA']];
            this._H51 = _L61[data['bodyB']];
            this._I51 = data['collideConnected'];
        }
    };

    function _B51(_H21) {
        _PQ(_H21._G51 != _H21._H51);
        this._QT = _H21.type;
        this._j21 = null;
        this._k21 = null;
        this._E51 = _H21._G51;
        this._D51 = _H21._H51;
        this._gq = 0;
        this._W31 = _H21._I51;
        this._k61 = false;
        this._y21 = _H21._JV;
        this._C51 = new _Fe1();
        this._C51._XD = null;
        this._C51.other = null;
        this._C51._ic = null;
        this._C51._kc = null;
        this._F51 = new _Fe1();
        this._F51._XD = null;
        this._F51.other = null;
        this._F51._ic = null;
        this._F51._kc = null;
    }
    _B51.prototype = {
        _ST: function() {
            return this._QT;
        },
        _P61: function() {
            return this._E51;
        },
        _Q61: function() {
            return this._D51;
        },
        _R61: function() {},
        _S61: function() {},
        _Je1: function(_K41) {},
        _Ke1: function(_K41) {},
        _Q31: function() {
            return this._k21;
        },
        _SV: function() {
            return this._y21;
        },
        _R31: function(data) {
            this._y21 = data;
        },
        _K31: function() {
            return this._E51._K31() && this._D51._K31();
        },
        _Le1: function() {
            return this._W31;
        },
        _bW: function(_cW) {},
        _me1: function(data) {},
        _Ed1: function(data) {},
        _Zd1: function(data) {},
        _RR: function(_SR) {
            var _Sh = _SR || {};
            _Sh['bodyA'] = null;
            _Sh['bodyB'] = null;
            _Sh['type'] = this._QT;
            _Sh['collideConnected'] = this._W31;
            return _Sh;
        }
    };
    _B51._Me1 = 0;
    _B51._Ne1 = 1;
    _B51._Oe1 = 2;
    _B51._Pe1 = 3;
    _B51._He1 = 0;
    _B51._Qe1 = 1;
    _B51._Re1 = 2;
    _B51._T61 = 3;
    _B51._U61 = 4;
    _B51._Y61 = 5;
    _B51._Se1 = 6;
    _B51._Te1 = 7;
    _B51._Ue1 = 8;
    _B51._Ve1 = 9;
    _B51._We1 = 10;
    _B51._Z61 = 11;
    _B51._OL = function(_H21) {
        var _XD = null;
        switch (_H21.type) {
            case _B51._T61:
                _XD = new _Xe1(_H21);
                break;
            case _B51._Y61:
                _XD = new _Ye1(_H21);
                break;
            case _B51._Re1:
                _XD = new _Ze1(_H21);
                break;
            case _B51._Qe1:
                _XD = new __e1(_H21);
                break;
            case _B51._U61:
                _XD = new _0f1(_H21);
                break;
            case _B51._Se1:
                _XD = new _1f1(_H21);
                break;
            case _B51._Te1:
                _XD = new _2f1(_H21);
                break;
            case _B51._Ue1:
                _XD = new _3f1(_H21);
                break;
            case _B51._Ve1:
                _XD = new _4f1(_H21);
                break;
            case _B51._We1:
                _XD = new _5f1(_H21);
                break;
            case _B51._Z61:
                _XD = new _6f1(_H21);
                break;
            default:
                _PQ(false);
                break;
        }
        return _XD;
    };
    _B51._031 = function(_XD) {};

    function _7f1() {
        this.parent.call(this);
        this.type = _B51._Qe1;
        this._8f1 = new _DR();
        this._9f1 = new _DR();
        this._af1 = 0.0;
        this._bf1 = 0.0;
        this._cf1 = 0.0;
        this._df1 = 0.0;
        this._ef1 = 0.0;
        this._ff1 = false;
        this._gf1 = false;
        Object.seal(this);
    }
    _7f1.prototype = {
        _1Y: function(_E61, _F61, anchor) {
            this._G51 = _E61;
            this._H51 = _F61;
            this._8f1 = this._G51._n31(anchor);
            this._9f1 = this._H51._n31(anchor);
            this._af1 = this._H51._kS() - this._G51._kS();
        },
        _TR: function(data, _L61, _Ie1) {
            this.parent.prototype._TR.call(this, data, _L61, _Ie1);
            this._8f1._TR(data['localAnchorA']);
            this._9f1._TR(data['localAnchorB']);
            this._af1 = data['referenceAngle'];
            this._bf1 = data['lowerAngle'];
            this._cf1 = data['upperAngle'];
            this._df1 = data['maxMotorTorque'];
            this._ef1 = data['motorSpeed'];
            this._ff1 = data['enableLimit'];
            this._gf1 = data['enableMotor'];
        }
    };
    _7f1._jQ(_Ge1);

    function __e1(_H21) {
        this.parent.call(this, _H21);
        this._hf1 = _H21._8f1._T();
        this._if1 = _H21._9f1._T();
        this._jf1 = _H21._af1;
        this._kf1 = new _VR();
        this._lf1 = 0.0;
        this._mf1 = _H21._bf1;
        this._nf1 = _H21._cf1;
        this._of1 = _H21._df1;
        this._pf1 = _H21._ef1;
        this._qf1 = _H21._ff1;
        this._rf1 = _H21._gf1;
        this._sf1 = _B51._Me1;
        this._2c1 = 0;
        this._3c1 = 0;
        this._tf1 = new _DR();
        this._uf1 = new _DR();
        this._vf1 = new _DR();
        this._wf1 = new _DR();
        this._xf1 = 0;
        this._yf1 = 0;
        this._zf1 = 0;
        this._Af1 = 0;
        this._u21 = new _7S();
        this._Bf1 = 0;
    }
    __e1.prototype = {
        _R61: function() {
            return this._E51._k31(this._hf1);
        },
        _S61: function() {
            return this._D51._k31(this._if1);
        },
        _Cf1: function() {
            return this._hf1;
        },
        _Df1: function() {
            return this._if1;
        },
        _Ef1: function() {
            return this._jf1;
        },
        _Ff1: function() {
            var _E61 = this._E51;
            var _F61 = this._D51;
            return _F61._g21._Z4 - _E61._g21._Z4 - this._jf1;
        },
        _Gf1: function() {
            var _E61 = this._E51;
            var _F61 = this._D51;
            return _F61._m21 - _E61._m21;
        },
        _Hf1: function() {
            return this._qf1;
        },
        _If1: function(_E31) {
            if (_E31 != this._qf1) {
                this._E51._uD(true);
                this._D51._uD(true);
                this._qf1 = _E31;
                this._kf1._96 = 0.0;
            }
        },
        _Jf1: function() {
            return this._mf1;
        },
        _Kf1: function() {
            return this._nf1;
        },
        _Lf1: function(_Qz, _4V) {
            _PQ(_Qz <= _4V);
            if (_Qz != this._mf1 || _4V != this._nf1) {
                this._E51._uD(true);
                this._D51._uD(true);
                this._kf1._96 = 0.0;
                this._mf1 = _Qz;
                this._nf1 = _4V;
            }
        },
        _Mf1: function() {
            return this._rf1;
        },
        _HE: function(_E31) {
            this._E51._uD(true);
            this._D51._uD(true);
            this._rf1 = _E31;
        },
        _Nf1: function(speed) {
            this._E51._uD(true);
            this._D51._uD(true);
            this._pf1 = speed;
        },
        _Of1: function() {
            return this._pf1;
        },
        _Pf1: function(_d31) {
            this._E51._uD(true);
            this._D51._uD(true);
            this._of1 = _d31;
        },
        _Qf1: function() {
            return this._of1;
        },
        _Je1: function(_K41) {
            var _OZ = new _DR(this._kf1.x, this._kf1.y);
            return _DR._im(_K41, _OZ);
        },
        _Ke1: function(_K41) {
            return _K41 * this._kf1._96;
        },
        _Rf1: function(_K41) {
            return _K41 * this._lf1;
        },
        _me1: function(data) {
            this._2c1 = this._E51._721;
            this._3c1 = this._D51._721;
            this._vf1 = this._E51._g21._qS;
            this._wf1 = this._D51._g21._qS;
            this._xf1 = this._E51._v21;
            this._yf1 = this._D51._v21;
            this._zf1 = this._E51._x21;
            this._Af1 = this._D51._x21;
            var _id1 = data._S41[this._2c1]._Z4;
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _kd1 = data._S41[this._3c1]._Z4;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _Sf1 = new _jS(_id1),
                _Tf1 = new _jS(_kd1);
            this._tf1 = _OS(_Sf1, _DR._KR(this._hf1, this._vf1));
            this._uf1 = _OS(_Tf1, _DR._KR(this._if1, this._wf1));
            var _gd1 = this._xf1,
                _hd1 = this._yf1;
            var _U01 = this._zf1,
                _V01 = this._Af1;
            var _221 = (_U01 + _V01 == 0.0);
            this._u21._xq.x = _gd1 + _hd1 + this._tf1.y * this._tf1.y * _U01 + this._uf1.y * this._uf1.y * _V01;
            this._u21._YR.x = -this._tf1.y * this._tf1.x * _U01 - this._uf1.y * this._uf1.x * _V01;
            this._u21._8S.x = -this._tf1.y * _U01 - this._uf1.y * _V01;
            this._u21._xq.y = this._u21._YR.x;
            this._u21._YR.y = _gd1 + _hd1 + this._tf1.x * this._tf1.x * _U01 + this._uf1.x * this._uf1.x * _V01;
            this._u21._8S.y = this._tf1.x * _U01 + this._uf1.x * _V01;
            this._u21._xq._96 = this._u21._8S.x;
            this._u21._YR._96 = this._u21._8S.y;
            this._u21._8S._96 = _U01 + _V01;
            this._Bf1 = _U01 + _V01;
            if (this._Bf1 > 0.0) {
                this._Bf1 = 1.0 / this._Bf1;
            }
            if (this._rf1 == false || _221) {
                this._lf1 = 0.0;
            }
            if (this._qf1 && _221 == false) {
                var _Uf1 = _kd1 - _id1 - this._jf1;
                if (_YS(this._nf1 - this._mf1) < 2.0 * _ZQ) {
                    this._sf1 = _B51._Pe1;
                } else if (_Uf1 <= this._mf1) {
                    if (this._sf1 != _B51._Ne1) {
                        this._kf1._96 = 0.0;
                    }
                    this._sf1 = _B51._Ne1;
                } else if (_Uf1 >= this._nf1) {
                    if (this._sf1 != _B51._Oe1) {
                        this._kf1._96 = 0.0;
                    }
                    this._sf1 = _B51._Oe1;
                } else {
                    this._sf1 = _B51._Me1;
                    this._kf1._96 = 0.0;
                }
            } else {
                this._sf1 = _B51._Me1;
            }
            if (data._rQ._O41) {
                this._kf1._im(data._rQ._L41);
                this._lf1 *= data._rQ._L41;
                var _OZ = new _DR(this._kf1.x, this._kf1.y);
                _jd1._KR(_DR._im(_gd1, _OZ));
                _zW -= _U01 * (_AS(this._tf1, _OZ) + this._lf1 + this._kf1._96);
                _ld1._1b(_DR._im(_hd1, _OZ));
                _AW += _V01 * (_AS(this._uf1, _OZ) + this._lf1 + this._kf1._96);
            } else {
                this._kf1._ER();
                this._lf1 = 0.0;
            }
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Ed1: function(data) {
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _gd1 = this._xf1,
                _hd1 = this._yf1;
            var _U01 = this._zf1,
                _V01 = this._Af1;
            var _221 = (_U01 + _V01 == 0.0);
            if (this._rf1 && this._sf1 != _B51._Pe1 && _221 == false) {
                var _Vf1 = _AW - _zW - this._pf1;
                var _f31 = -this._Bf1 * _Vf1;
                var _Wf1 = this._lf1;
                var _Xf1 = data._rQ._J41 * this._of1;
                this._lf1 = _4T(this._lf1 + _f31, -_Xf1, _Xf1);
                _f31 = this._lf1 - _Wf1;
                _zW -= _U01 * _f31;
                _AW += _V01 * _f31;
            }
            if (this._qf1 && this._sf1 != _B51._Me1 && _221 == false) {
                var _Yf1 = _DR._KR(_DR._KR(_DR._1b(_ld1, _CS(_AW, this._uf1)),
                    _jd1), _CS(_zW, this._tf1));
                var _Zf1 = _AW - _zW;
                var _Vf1 = new _VR(_Yf1.x, _Yf1.y, _Zf1);
                var _f31 = this._u21._9S(_Vf1)._HR();
                if (this._sf1 == _B51._Pe1) {
                    this._kf1._1b(_f31);
                } else if (this._sf1 == _B51._Ne1) {
                    var _Kd1 = this._kf1._96 + _f31._96;
                    if (_Kd1 < 0.0) {
                        var __f1 = _DR._1b(_Yf1._HR(), _DR._im(this._kf1._96, new _DR(this._u21._8S.x, this._u21._8S.y)));
                        var _0g1 = this._u21._cS(__f1);
                        _f31.x = _0g1.x;
                        _f31.y = _0g1.y;
                        _f31._96 = -this._kf1._96;
                        this._kf1.x += _0g1.x;
                        this._kf1.y += _0g1.y;
                        this._kf1._96 = 0.0;
                    } else {
                        this._kf1._1b(_f31);
                    }
                } else if (this._sf1 == _B51._Oe1) {
                    var _Kd1 = this._kf1._96 + _f31._96;
                    if (_Kd1 > 0.0) {
                        var __f1 = _DR._1b(_Yf1._HR(), _DR._im(this._kf1._96, new _DR(this._u21._8S.x, this._u21._8S.y)));
                        var _0g1 = this._u21._cS(__f1);
                        _f31.x = _0g1.x;
                        _f31.y = _0g1.y;
                        _f31._96 = -this._kf1._96;
                        this._kf1.x += _0g1.x;
                        this._kf1.y += _0g1.y;
                        this._kf1._96 = 0.0;
                    } else {
                        this._kf1._1b(_f31);
                    }
                }
                var _OZ = new _DR(_f31.x, _f31.y);
                _jd1._KR(_DR._im(_gd1, _OZ));
                _zW -= _U01 * (_AS(this._tf1, _OZ) + _f31._96);
                _ld1._1b(_DR._im(_hd1, _OZ));
                _AW += _V01 * (_AS(this._uf1, _OZ) + _f31._96);
            } else {
                var _Vf1 = _DR._KR(_DR._KR(_DR._1b(_ld1,
                    _CS(_AW, this._uf1)), _jd1), _CS(_zW, this._tf1));
                var _f31 = this._u21._cS(_Vf1._HR());
                this._kf1.x += _f31.x;
                this._kf1.y += _f31.y;
                _jd1._KR(_DR._im(_gd1, _f31));
                _zW -= _U01 * _AS(this._tf1, _f31);
                _ld1._1b(_DR._im(_hd1, _f31));
                _AW += _V01 * _AS(this._uf1, _f31);
            }
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Zd1: function(data) {
            var _S51 = data._S41[this._2c1].c._T();
            var _id1 = data._S41[this._2c1]._Z4;
            var _U51 = data._S41[this._3c1].c._T();
            var _kd1 = data._S41[this._3c1]._Z4;
            var _Sf1 = new _jS(_id1),
                _Tf1 = new _jS(_kd1);
            var _1g1 = 0.0;
            var _2g1 = 0.0;
            var _221 = (this._zf1 + this._Af1 == 0.0);
            if (this._qf1 && this._sf1 != _B51._Me1 && _221 == false) {
                var _E4 = _kd1 - _id1 - this._jf1;
                var _3g1 = 0.0;
                if (this._sf1 == _B51._Pe1) {
                    var _US = _4T(_E4 - this._mf1, -_4R, _4R);
                    _3g1 = -this._Bf1 * _US;
                    _1g1 = _YS(_US);
                } else if (this._sf1 == _B51._Ne1) {
                    var _US = _E4 - this._mf1;
                    _1g1 = -_US;
                    _US = _4T(_US + _ZQ, -_4R, 0.0);
                    _3g1 = -this._Bf1 * _US;
                } else if (this._sf1 == _B51._Oe1) {
                    var _US = _E4 - this._nf1;
                    _1g1 = _US;
                    _US = _4T(_US - _ZQ, 0.0, _4R);
                    _3g1 = -this._Bf1 * _US;
                }
                _id1 -= this._zf1 * _3g1;
                _kd1 += this._Af1 * _3g1;
            } {
                _Sf1._7b(_id1);
                _Tf1._7b(_kd1);
                var _CX = _OS(_Sf1, _DR._KR(this._hf1, this._vf1));
                var _DX = _OS(_Tf1, _DR._KR(this._if1, this._wf1));
                var _US = _DR._KR(_DR._KR(_DR._1b(_U51, _DX), _S51), _CX);
                _2g1 = _US._LR();
                var _gd1 = this._xf1,
                    _hd1 = this._yf1;
                var _U01 = this._zf1,
                    _V01 = this._Af1;
                var _Xc1 = new _XR();
                _Xc1._xq.x = _gd1 + _hd1 + _U01 * _CX.y * _CX.y + _V01 * _DX.y * _DX.y;
                _Xc1._xq.y = -_U01 * _CX.x * _CX.y - _V01 * _DX.x * _DX.y;
                _Xc1._YR.x = _Xc1._xq.y;
                _Xc1._YR.y = _gd1 + _hd1 + _U01 * _CX.x * _CX.x + _V01 * _DX.x * _DX.x;
                var _f31 = _Xc1._2S(_US)._HR();
                _S51._KR(_DR._im(_gd1, _f31));
                _id1 -= _U01 * _AS(_CX, _f31);
                _U51._1b(_DR._im(_hd1, _f31));
                _kd1 += _V01 * _AS(_DX, _f31);
            }
            data._S41[this._2c1].c._Zy(_S51);
            data._S41[this._2c1]._Z4 = _id1;
            data._S41[this._3c1].c._Zy(_U51);
            data._S41[this._3c1]._Z4 = _kd1;
            return _2g1 <= _YQ && _1g1 <= _ZQ;
        },
        _RR: function(_SR) {
            var _Sh = _SR || {};
            this.parent.prototype._RR.call(this, _Sh);
            _Sh['localAnchorA'] = this._hf1._RR();
            _Sh['localAnchorB'] = this._if1._RR();
            _Sh['referenceAngle'] = this._jf1;
            _Sh['lowerAngle'] = this._mf1;
            _Sh['upperAngle'] = this._nf1;
            _Sh['maxMotorTorque'] = this._of1;
            _Sh['motorSpeed'] = this._pf1;
            _Sh['enableLimit'] = this._qf1;
            _Sh['enableMotor'] = this._rf1;
            return _Sh;
        }
    };
    __e1._jQ(_B51);

    function _4g1() {
        this.parent.call(this);
        this.type = _B51._Y61;
        this.target = new _DR(0.0, 0.0);
        this._5g1 = 0.0;
        this._6g1 = 5.0;
        this._7g1 = 0.7;
        Object.seal(this);
    }
    _4g1._jQ(_Ge1);

    function _Ye1(_H21) {
        this.parent.call(this, _H21);
        _PQ(_H21.target._PR());
        _PQ(_tR(_H21._5g1) && _H21._5g1 >= 0.0);
        _PQ(_tR(_H21._6g1) && _H21._6g1 >= 0.0);
        _PQ(_tR(_H21._7g1) && _H21._7g1 >= 0.0);
        this._8g1 = _H21.target._T();
        this._if1 = _SS(this._D51._vS(),
            this._8g1);
        this._9g1 = _H21._5g1;
        this._kf1 = new _DR();
        this._ag1 = _H21._6g1;
        this._bg1 = _H21._7g1;
        this._cg1 = 0.0;
        this._dg1 = 0.0;
        this._2c1 = 0;
        this._3c1 = 0;
        this._uf1 = new _DR();
        this._wf1 = new _DR();
        this._yf1 = 0;
        this._Af1 = 0;
        this._u21 = new _XR();
        this._eg1 = new _DR();
    }
    _Ye1.prototype = {
        _R61: function() {
            return this._8g1;
        },
        _S61: function() {
            return this._D51._k31(this._if1);
        },
        _Je1: function(_K41) {
            return _DR._im(_K41, this._kf1);
        },
        _Ke1: function(_K41) {
            return _K41 * 0.0;
        },
        _fg1: function(target) {
            if (this._D51._I31() == false) {
                this._D51._uD(true);
            }
            this._8g1._Zy(target);
        },
        _gg1: function() {
            return this._8g1;
        },
        _hg1: function(_a31) {
            this._9g1 = _a31;
        },
        _ig1: function() {
            return this._9g1;
        },
        _jg1: function(_kg1) {
            this._ag1 = _kg1;
        },
        _lg1: function() {
            return this._ag1;
        },
        _mg1: function(_qe1) {
            this._bg1 = _qe1;
        },
        _ng1: function() {
            return this._bg1;
        },
        _bW: function(_cW) {
            this._8g1._KR(_cW);
        },
        _me1: function(data) {
            this._3c1 = this._D51._721;
            this._wf1._Zy(this._D51._g21._qS);
            this._yf1 = this._D51._v21;
            this._Af1 = this._D51._x21;
            var _U51 = data._S41[this._3c1].c._T();
            var _kd1 = data._S41[this._3c1]._Z4;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _Tf1 = new _jS(_kd1);
            var _NT = this._D51._g31();
            var _yF = 2.0 * _TQ * this._ag1;
            var _Cd = 2.0 * _NT * this._bg1 * _yF;
            var _dt = _NT * (_yF * _yF);
            var h = data._rQ._J41;
            _PQ(_Cd + h * _dt > _SQ);
            this._dg1 = h * (_Cd + h * _dt);
            if (this._dg1 != 0.0) {
                this._dg1 = 1.0 / this._dg1;
            }
            this._cg1 = h * _dt * this._dg1;
            this._uf1._Zy(_OS(_Tf1, _DR._KR(this._if1, this._wf1)));
            var _Xc1 = new _XR();
            _Xc1._xq.x = this._yf1 + this._Af1 * this._uf1.y * this._uf1.y + this._dg1;
            _Xc1._xq.y = -this._Af1 * this._uf1.x * this._uf1.y;
            _Xc1._YR.x = _Xc1._xq.y;
            _Xc1._YR.y = this._yf1 + this._Af1 * this._uf1.x * this._uf1.x + this._dg1;
            this._u21._Zy(_Xc1.__R());
            this._eg1._Zy(_DR._KR(_DR._1b(_U51, this._uf1), this._8g1));
            this._eg1._im(this._cg1);
            _AW *= 0.98;
            if (data._rQ._O41) {
                this._kf1._im(data._rQ._L41);
                _ld1._1b(_DR._im(this._yf1, this._kf1));
                _AW += this._Af1 * _AS(this._uf1, this._kf1);
            } else {
                this._kf1._ER();
            }
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Ed1: function(data) {
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _Vf1 = _DR._1b(_ld1, _CS(_AW, this._uf1));
            var _f31 = _DS(this._u21, (_DR._1b(_DR._1b(_Vf1, this._eg1), _DR._im(this._dg1, this._kf1)))._HR());
            var _Wf1 = this._kf1._T();
            this._kf1._1b(_f31);
            var _Xf1 = data._rQ._J41 * this._9g1;
            if (this._kf1._MR() > _Xf1 * _Xf1) {
                this._kf1._im(_Xf1 / this._kf1._LR());
            }
            _f31._Zy(_DR._KR(this._kf1, _Wf1));
            _ld1._1b(_DR._im(this._yf1, _f31));
            _AW += this._Af1 * _AS(this._uf1, _f31);
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Zd1: function(data) {
            return true;
        }
    };
    _Ye1._jQ(_B51);

    function _og1() {
        this.parent.call(this);
        this.type = _B51._T61;
        this._8f1 = new _DR(0.0, 0.0);
        this._9f1 = new _DR(0.0, 0.0);
        this.length = 1.0;
        this._6g1 = 0.0;
        this._7g1 = 0.0;
        Object.seal(this);
    }
    _og1.prototype = {
        _1Y: function(_js, _ks, _pg1, _qg1) {
            this._G51 = _js;
            this._H51 = _ks;
            this._8f1 = this._G51._n31(_pg1);
            this._9f1 = this._H51._n31(_qg1);
            var _Cd = _DR._KR(_qg1, _pg1);
            this.length = _Cd._LR();
        },
        _TR: function(data, _L61, _Ie1) {
            this.parent.prototype._TR.call(this, data, _L61, _Ie1);
            this._8f1._TR(data['localAnchorA']);
            this._9f1._TR(data['localAnchorB']);
            this.length = data['length'];
            this._6g1 = data['frequencyHz'];
            this._7g1 = data['dampingRatio'];
        }
    };
    _og1._jQ(_Ge1);

    function _Xe1(_H21) {
        this.parent.call(this, _H21);
        this._hf1 = _H21._8f1._T();
        this._if1 = _H21._9f1._T();
        this._rg1 = _H21.length;
        this._ag1 = _H21._6g1;
        this._bg1 = _H21._7g1;
        this._kf1 = 0.0;
        this._dg1 = 0.0;
        this._sg1 = 0.0;
        this._2c1 = 0;
        this._3c1 = 0;
        this._tg1 = new _DR();
        this._tf1 = new _DR();
        this._uf1 = new _DR();
        this._vf1 = new _DR();
        this._wf1 = new _DR();
        this._xf1 = 0;
        this._yf1 = 0;
        this._zf1 = 0;
        this._Af1 = 0;
        this._u21 = 0;
    }
    _Xe1.prototype = {
        _R61: function() {
            return this._E51._k31(this._hf1);
        },
        _S61: function() {
            return this._D51._k31(this._if1);
        },
        _Je1: function(_K41) {
            var _Z01 = _DR._im((_K41 * this._kf1), this._tg1);
            return _Z01;
        },
        _Ke1: function(_K41) {
            return 0.0;
        },
        _Cf1: function() {
            return this._hf1;
        },
        _Df1: function() {
            return this._if1;
        },
        _ug1: function(length) {
            this._rg1 = length;
        },
        _vg1: function() {
            return this._rg1;
        },
        _jg1: function(_kg1) {
            this._ag1 = _kg1;
        },
        _lg1: function() {
            return this._ag1;
        },
        _mg1: function(_qe1) {
            this._bg1 = _qe1;
        },
        _ng1: function() {
            return this._bg1;
        },
        _me1: function(data) {
            this._2c1 = this._E51._721;
            this._3c1 = this._D51._721;
            this._vf1._Zy(this._E51._g21._qS);
            this._wf1._Zy(this._D51._g21._qS);
            this._xf1 = this._E51._v21;
            this._yf1 = this._D51._v21;
            this._zf1 = this._E51._x21;
            this._Af1 = this._D51._x21;
            var _S51 = data._S41[this._2c1].c._T();
            var _id1 = data._S41[this._2c1]._Z4;
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _U51 = data._S41[this._3c1].c._T();
            var _kd1 = data._S41[this._3c1]._Z4;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _Sf1 = new _jS(_id1),
                _Tf1 = new _jS(_kd1);
            this._tf1 = _OS(_Sf1,
                _DR._KR(this._hf1, this._vf1));
            this._uf1 = _OS(_Tf1, _DR._KR(this._if1, this._wf1));
            this._tg1 = _DR._KR(_DR._KR(_DR._1b(_U51, this._uf1), _S51), this._tf1);
            var length = this._tg1._LR();
            if (length > _YQ) {
                this._tg1._im(1.0 / length);
            } else {
                this._tg1._7b(0.0, 0.0);
            }
            var _wg1 = _AS(this._tf1, this._tg1);
            var _xg1 = _AS(this._uf1, this._tg1);
            var _yg1 = this._xf1 + this._zf1 * _wg1 * _wg1 + this._yf1 + this._Af1 * _xg1 * _xg1;
            this._u21 = _yg1 != 0.0 ? 1.0 / _yg1 : 0.0;
            if (this._ag1 > 0.0) {
                var _US = length - this._rg1;
                var _yF = 2.0 * _TQ * this._ag1;
                var _Cd = 2.0 * this._u21 * this._bg1 * _yF;
                var _dt = this._u21 * _yF * _yF;
                var h = data._rQ._J41;
                this._dg1 = h * (_Cd + h * _dt);
                this._dg1 = this._dg1 != 0.0 ? 1.0 / this._dg1 : 0.0;
                this._sg1 = _US * h * _dt * this._dg1;
                _yg1 += this._dg1;
                this._u21 = _yg1 != 0.0 ? 1.0 / _yg1 : 0.0;
            } else {
                this._dg1 = 0.0;
                this._sg1 = 0.0;
            }
            if (data._rQ._O41) {
                this._kf1 *= data._rQ._L41;
                var _OZ = _DR._im(this._kf1, this._tg1);
                _jd1._KR(_DR._im(this._xf1, _OZ));
                _zW -= this._zf1 * _AS(this._tf1, _OZ);
                _ld1._1b(_DR._im(this._yf1, _OZ));
                _AW += this._Af1 * _AS(this._uf1, _OZ);
            } else {
                this._kf1 = 0.0;
            }
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Ed1: function(data) {
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _zg1 = _DR._1b(_jd1, _CS(_zW, this._tf1));
            var _Ag1 = _DR._1b(_ld1, _CS(_AW, this._uf1));
            var _Vf1 = _zS(this._tg1, _DR._KR(_Ag1, _zg1));
            var _f31 = -this._u21 * (_Vf1 + this._sg1 + this._dg1 * this._kf1);
            this._kf1 += _f31;
            var _OZ = _DR._im(_f31, this._tg1);
            _jd1._KR(_DR._im(this._xf1, _OZ));
            _zW -= this._zf1 * _AS(this._tf1,
                _OZ);
            _ld1._1b(_DR._im(this._yf1, _OZ));
            _AW += this._Af1 * _AS(this._uf1, _OZ);
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Zd1: function(data) {
            if (this._ag1 > 0.0) {
                return true;
            }
            var _S51 = data._S41[this._2c1].c._T();
            var _id1 = data._S41[this._2c1]._Z4;
            var _U51 = data._S41[this._3c1].c._T();
            var _kd1 = data._S41[this._3c1]._Z4;
            var _Sf1 = new _jS(_id1),
                _Tf1 = new _jS(_kd1);
            var _CX = _OS(_Sf1, _DR._KR(this._hf1, this._vf1));
            var _DX = _OS(_Tf1, _DR._KR(this._if1,
                this._wf1));
            var _W1 = _DR._KR(_DR._KR(_DR._1b(_U51, _DX), _S51), _CX);
            var length = _W1._NR();
            var _US = length - this._rg1;
            _US = _4T(_US, -_3R, _3R);
            var _f31 = -this._u21 * _US;
            var _OZ = _DR._im(_f31, _W1);
            _S51._KR(_DR._im(this._xf1, _OZ));
            _id1 -= this._zf1 * _AS(_CX, _OZ);
            _U51._1b(_DR._im(this._yf1, _OZ));
            _kd1 += this._Af1 * _AS(_DX, _OZ);
            data._S41[this._2c1].c._Zy(_S51);
            data._S41[this._2c1]._Z4 = _id1;
            data._S41[this._3c1].c._Zy(_U51);
            data._S41[this._3c1]._Z4 = _kd1;
            return _YS(_US) < _YQ;
        },
        _RR: function(_SR) {
            var _Sh = _SR || {};
            this.parent.prototype._RR.call(this,
                _Sh);
            _Sh['localAnchorA'] = this._hf1._RR();
            _Sh['localAnchorB'] = this._if1._RR();
            _Sh['length'] = this._rg1;
            _Sh['frequencyHz'] = this._ag1;
            _Sh['dampingRatio'] = this._bg1;
            return _Sh;
        }
    };
    _Xe1._jQ(_B51);

    function _Bg1() {
        this.parent.call(this);
        this.type = _B51._Re1;
        this._8f1 = new _DR();
        this._9f1 = new _DR();
        this._Cg1 = new _DR(1.0, 0.0);
        this._af1 = 0.0;
        this._ff1 = false;
        this._Dg1 = 0.0;
        this._Eg1 = 0.0;
        this._gf1 = false;
        this._Fg1 = 0.0;
        this._ef1 = 0.0;
        Object.seal(this);
    }
    _Bg1.prototype = {
        _1Y: function(_E61, _F61, anchor, _qT) {
            this._G51 = _E61;
            this._H51 = _F61;
            this._8f1 = this._G51._n31(anchor);
            this._9f1 = this._H51._n31(anchor);
            this._Cg1 = this._G51._p31(_qT);
            this._af1 = this._H51._kS() - this._G51._kS();
        },
        _TR: function(data, _L61, _Ie1) {
            this.parent.prototype._TR.call(this, data, _L61, _Ie1);
            this._8f1._TR(data['localAnchorA']);
            this._9f1._TR(data['localAnchorB']);
            this._Cg1._TR(data['localAxisA']);
            this._af1 = data['referenceAngle'];
            this._ff1 = data['enableLimit'];
            this._Dg1 = data['lowerTranslation'];
            this._Eg1 = data['upperTranslation'];
            this._gf1 = data['enableMotor'];
            this._Fg1 = data['maxMotorForce'];
            this._ef1 = data['motorSpeed'];
        }
    };
    _Bg1._jQ(_Ge1);

    function _Ze1(_H21) {
        this.parent.call(this, _H21);
        this._hf1 = _H21._8f1._T();
        this._if1 = _H21._9f1._T();
        this._Gg1 = _H21._Cg1._T();
        this._Gg1._NR();
        this._Hg1 = _CS(1.0, this._Gg1);
        this._jf1 = _H21._af1;
        this._kf1 = new _VR();
        this._Bf1 = 0.0;
        this._lf1 = 0.0;
        this._Ig1 = _H21._Dg1;
        this._Jg1 = _H21._Eg1;
        this._Kg1 = _H21._Fg1;
        this._pf1 = _H21._ef1;
        this._qf1 = _H21._ff1;
        this._rf1 = _H21._gf1;
        this._sf1 = _B51._Me1;
        this._k11 = new _DR();
        this._Lg1 = new _DR();
        this._2c1 = 0;
        this._3c1 = 0;
        this._vf1 = new _DR();
        this._wf1 = new _DR();
        this._xf1 = 0;
        this._yf1 = 0;
        this._zf1 = 0;
        this._Af1 = 0;
        this._Mg1 = 0, this._Ng1 = 0;
        this._Og1 = 0, this._Pg1 = 0;
        this._Qg1 = new _7S();
        this._Bf1 = 0;
    }
    _Ze1.prototype = {
        _R61: function() {
            return this._E51._k31(this._hf1);
        },
        _S61: function() {
            return this._D51._k31(this._if1);
        },
        _Je1: function(_K41) {
            return _DR._im(_K41, _DR._1b(_DR._im(this._kf1.x, this._Lg1), _DR._im((this._lf1 + this._kf1._96), this._k11)));
        },
        _Ke1: function(_K41) {
            return _K41 * this._kf1.y;
        },
        _Cf1: function() {
            return this._hf1;
        },
        _Df1: function() {
            return this._if1;
        },
        _Rg1: function() {
            return this._Gg1;
        },
        _Ef1: function() {
            return this._jf1;
        },
        _Sg1: function() {
            var _QW = this._E51._k31(this._hf1);
            var _RW = this._D51._k31(this._if1);
            var _Cd = _DR._KR(_RW, _QW);
            var _qT = this._E51._l31(this._Gg1);
            var _ze1 = _zS(_Cd, _qT);
            return _ze1;
        },
        _Gf1: function() {
            var _E61 = this._E51;
            var _F61 = this._D51;
            var _CX = _OS(_E61._9_._vt, _DR._KR(this._hf1, _E61._g21._qS));
            var _DX = _OS(_F61._9_._vt, _DR._KR(this._if1, _F61._g21._qS));
            var _sT = _DR._1b(_E61._g21.c, _CX);
            var _tT = _DR._1b(_F61._g21.c, _DX);
            var _Cd = _DR._KR(_tT, _sT);
            var _qT = _OS(_E61._9_._vt,
                this._Gg1);
            var _jd1 = _E61._l21;
            var _ld1 = _F61._l21;
            var _zW = _E61._m21;
            var _AW = _F61._m21;
            var speed = _zS(_Cd, _CS(_zW, _qT)) + _zS(_qT, _DR._KR(_DR._KR(_DR._1b(_ld1, _CS(_AW, _DX)), _jd1), _CS(_zW, _CX)));
            return speed;
        },
        _Hf1: function() {
            return this._qf1;
        },
        _If1: function(_E31) {
            if (_E31 != this._qf1) {
                this._E51._uD(true);
                this._D51._uD(true);
                this._qf1 = _E31;
                this._kf1._96 = 0.0;
            }
        },
        _Jf1: function() {
            return this._Ig1;
        },
        _Kf1: function() {
            return this._Jg1;
        },
        _Lf1: function(_Qz, _4V) {
            _PQ(_Qz <= _4V);
            if (_Qz != this._Ig1 || _4V != this._Jg1) {
                this._E51._uD(true);
                this._D51._uD(true);
                this._Ig1 = _Qz;
                this._Jg1 = _4V;
                this._kf1._96 = 0.0;
            }
        },
        _Mf1: function() {
            return this._rf1;
        },
        _HE: function(_E31) {
            this._E51._uD(true);
            this._D51._uD(true);
            this._rf1 = _E31;
        },
        _Nf1: function(speed) {
            this._E51._uD(true);
            this._D51._uD(true);
            this._pf1 = speed;
        },
        _Of1: function() {
            return this._pf1;
        },
        _Tg1: function(_a31) {
            this._E51._uD(true);
            this._D51._uD(true);
            this._Kg1 = _a31;
        },
        _Ug1: function() {
            return this._Kg1;
        },
        _Vg1: function(_K41) {
            return _K41 * this._lf1;
        },
        _me1: function(data) {
            this._2c1 = this._E51._721;
            this._3c1 = this._D51._721;
            this._vf1 = this._E51._g21._qS;
            this._wf1 = this._D51._g21._qS;
            this._xf1 = this._E51._v21;
            this._yf1 = this._D51._v21;
            this._zf1 = this._E51._x21;
            this._Af1 = this._D51._x21;
            var _S51 = data._S41[this._2c1].c._T();
            var _id1 = data._S41[this._2c1]._Z4;
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _U51 = data._S41[this._3c1].c._T();
            var _kd1 = data._S41[this._3c1]._Z4;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _Sf1 = new _jS(_id1),
                _Tf1 = new _jS(_kd1);
            var _CX = _OS(_Sf1, _DR._KR(this._hf1,
                this._vf1));
            var _DX = _OS(_Tf1, _DR._KR(this._if1, this._wf1));
            var _Cd = _DR._1b(_DR._KR(_U51, _S51), _DR._KR(_DX, _CX));
            var _gd1 = this._xf1,
                _hd1 = this._yf1;
            var _U01 = this._zf1,
                _V01 = this._Af1; {
                this._k11 = _OS(_Sf1, this._Gg1);
                this._Og1 = _AS(_DR._1b(_Cd, _CX), this._k11);
                this._Pg1 = _AS(_DX, this._k11);
                this._Bf1 = _gd1 + _hd1 + _U01 * this._Og1 * this._Og1 + _V01 * this._Pg1 * this._Pg1;
                if (this._Bf1 > 0.0) {
                    this._Bf1 = 1.0 / this._Bf1;
                }
            } {
                this._Lg1 = _OS(_Sf1, this._Hg1);
                this._Mg1 = _AS(_DR._1b(_Cd, _CX), this._Lg1);
                this._Ng1 = _AS(_DX, this._Lg1);
                var _zd1 = _gd1 + _hd1 + _U01 * this._Mg1 * this._Mg1 + _V01 * this._Ng1 * this._Ng1;
                var _Bd1 = _U01 * this._Mg1 + _V01 * this._Ng1;
                var _Wg1 = _U01 * this._Mg1 * this._Og1 + _V01 * this._Ng1 * this._Pg1;
                var _Ad1 = _U01 + _V01;
                if (_Ad1 == 0.0) {
                    _Ad1 = 1.0;
                }
                var _Xg1 = _U01 * this._Og1 + _V01 * this._Pg1;
                var _Yg1 = _gd1 + _hd1 + _U01 * this._Og1 * this._Og1 + _V01 * this._Pg1 * this._Pg1;
                this._Qg1._xq._7b(_zd1, _Bd1, _Wg1);
                this._Qg1._YR._7b(_Bd1, _Ad1, _Xg1);
                this._Qg1._8S._7b(_Wg1, _Xg1, _Yg1);
            }
            if (this._qf1) {
                var _Zg1 = _zS(this._k11, _Cd);
                if (_YS(this._Jg1 - this._Ig1) < 2.0 * _YQ) {
                    this._sf1 = _B51._Pe1;
                } else if (_Zg1 <= this._Ig1) {
                    if (this._sf1 != _B51._Ne1) {
                        this._sf1 = _B51._Ne1;
                        this._kf1._96 = 0.0;
                    }
                } else if (_Zg1 >= this._Jg1) {
                    if (this._sf1 != _B51._Oe1) {
                        this._sf1 = _B51._Oe1;
                        this._kf1._96 = 0.0;
                    }
                } else {
                    this._sf1 = _B51._Me1;
                    this._kf1._96 = 0.0;
                }
            } else {
                this._sf1 = _B51._Me1;
                this._kf1._96 = 0.0;
            }
            if (this._rf1 == false) {
                this._lf1 = 0.0;
            }
            if (data._rQ._O41) {
                this._kf1._im(data._rQ._L41);
                this._lf1 *= data._rQ._L41;
                var _OZ = _DR._1b(_DR._im(this._kf1.x, this._Lg1), _DR._im((this._lf1 + this._kf1._96), this._k11));
                var __g1 = this._kf1.x * this._Mg1 + this._kf1.y + (this._lf1 + this._kf1._96) * this._Og1;
                var _0h1 = this._kf1.x * this._Ng1 + this._kf1.y + (this._lf1 + this._kf1._96) * this._Pg1;
                _jd1._KR(_DR._im(_gd1, _OZ));
                _zW -= _U01 * __g1;
                _ld1._1b(_DR._im(_hd1, _OZ));
                _AW += _V01 * _0h1;
            } else {
                this._kf1._ER();
                this._lf1 = 0.0;
            }
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Ed1: function(data) {
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _gd1 = this._xf1,
                _hd1 = this._yf1;
            var _U01 = this._zf1,
                _V01 = this._Af1;
            if (this._rf1 && this._sf1 != _B51._Pe1) {
                var _Vf1 = _zS(this._k11, _DR._KR(_ld1, _jd1)) + this._Pg1 * _AW - this._Og1 * _zW;
                var _f31 = this._Bf1 * (this._pf1 - _Vf1);
                var _Wf1 = this._lf1;
                var _Xf1 = data._rQ._J41 * this._Kg1;
                this._lf1 = _4T(this._lf1 + _f31, -_Xf1, _Xf1);
                _f31 = this._lf1 - _Wf1;
                var _OZ = _DR._im(_f31, this._k11);
                var __g1 = _f31 * this._Og1;
                var _0h1 = _f31 * this._Pg1;
                _jd1._KR(_DR._im(_gd1, _OZ));
                _zW -= _U01 * __g1;
                _ld1._1b(_DR._im(_hd1, _OZ));
                _AW += _V01 * _0h1;
            }
            var _Yf1 = new _DR();
            _Yf1.x = _zS(this._Lg1, _DR._KR(_ld1, _jd1)) + this._Ng1 * _AW - this._Mg1 * _zW;
            _Yf1.y = _AW - _zW;
            if (this._qf1 && this._sf1 != _B51._Me1) {
                var _Zf1;
                _Zf1 = _zS(this._k11, _DR._KR(_ld1, _jd1)) + this._Pg1 * _AW - this._Og1 * _zW;
                var _Vf1 = new _VR(_Yf1.x, _Yf1.y, _Zf1);
                var _WA = this._kf1._T();
                var _1h1 = this._Qg1._9S(_Vf1._HR());
                this._kf1._1b(_1h1);
                if (this._sf1 == _B51._Ne1) {
                    this._kf1._96 = _2T(this._kf1._96, 0.0);
                } else if (this._sf1 == _B51._Oe1) {
                    this._kf1._96 = _0T(this._kf1._96, 0.0);
                }
                var _g3 = _DR._KR(_Yf1._HR(), _DR._im((this._kf1._96 - _WA._96), new _DR(this._Qg1._8S.x, this._Qg1._8S.y)));
                var _2h1 = _DR._1b(this._Qg1._cS(_g3), new _DR(_WA.x, _WA.y));
                this._kf1.x = _2h1.x;
                this._kf1.y = _2h1.y;
                _1h1 = _VR._KR(this._kf1, _WA);
                var _OZ = _DR._1b(_DR._im(_1h1.x, this._Lg1), _DR._im(_1h1._96, this._k11));
                var __g1 = _1h1.x * this._Mg1 + _1h1.y + _1h1._96 * this._Og1;
                var _0h1 = _1h1.x * this._Ng1 + _1h1.y + _1h1._96 * this._Pg1;
                _jd1._KR(_DR._im(_gd1, _OZ));
                _zW -= _U01 * __g1;
                _ld1._1b(_DR._im(_hd1, _OZ));
                _AW += _V01 * _0h1;
            } else {
                var _1h1 = this._Qg1._cS(_Yf1._HR());
                this._kf1.x += _1h1.x;
                this._kf1.y += _1h1.y;
                var _OZ = _DR._im(_1h1.x, this._Lg1);
                var __g1 = _1h1.x * this._Mg1 + _1h1.y;
                var _0h1 = _1h1.x * this._Ng1 + _1h1.y;
                _jd1._KR(_DR._im(_gd1, _OZ));
                _zW -= _U01 * __g1;
                _ld1._1b(_DR._im(_hd1, _OZ));
                _AW += _V01 * _0h1;
            }
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Zd1: function(data) {
            var _S51 = data._S41[this._2c1].c._T();
            var _id1 = data._S41[this._2c1]._Z4;
            var _U51 = data._S41[this._3c1].c._T();
            var _kd1 = data._S41[this._3c1]._Z4;
            var _Sf1 = new _jS(_id1),
                _Tf1 = new _jS(_kd1);
            var _gd1 = this._xf1,
                _hd1 = this._yf1;
            var _U01 = this._zf1,
                _V01 = this._Af1;
            var _CX = _OS(_Sf1, _DR._KR(this._hf1, this._vf1));
            var _DX = _OS(_Tf1, _DR._KR(this._if1,
                this._wf1));
            var _Cd = _DR._KR(_DR._KR(_DR._1b(_U51, _DX), _S51), _CX);
            var _qT = _OS(_Sf1, this._Gg1);
            var _ON = _AS(_DR._1b(_Cd, _CX), _qT);
            var _PN = _AS(_DX, _qT);
            var _3h1 = _OS(_Sf1, this._Hg1);
            var _Jm = _AS(_DR._1b(_Cd, _CX), _3h1);
            var _Km = _AS(_DX, _3h1);
            var _f31 = new _VR();
            var _4h1 = new _DR();
            _4h1.x = _zS(_3h1, _Cd);
            _4h1.y = _kd1 - _id1 - this._jf1;
            var _5h1 = _YS(_4h1.x);
            var _1g1 = _YS(_4h1.y);
            var active = false;
            var _6h1 = 0.0;
            if (this._qf1) {
                var _ze1 = _zS(_qT, _Cd);
                if (_YS(this._Jg1 - this._Ig1) < 2.0 * _YQ) {
                    _6h1 = _4T(_ze1, -_3R, _3R);
                    _5h1 = _2T(_5h1, _YS(_ze1));
                    active = true;
                } else if (_ze1 <= this._Ig1) {
                    _6h1 = _4T(_ze1 - this._Ig1 + _YQ, -_3R, 0.0);
                    _5h1 = _2T(_5h1, this._Ig1 - _ze1);
                    active = true;
                } else if (_ze1 >= this._Jg1) {
                    _6h1 = _4T(_ze1 - this._Jg1 - _YQ, 0.0, _3R);
                    _5h1 = _2T(_5h1, _ze1 - this._Jg1);
                    active = true;
                }
            }
            if (active) {
                var _zd1 = _gd1 + _hd1 + _U01 * _Jm * _Jm + _V01 * _Km * _Km;
                var _Bd1 = _U01 * _Jm + _V01 * _Km;
                var _Wg1 = _U01 * _Jm * _ON + _V01 * _Km * _PN;
                var _Ad1 = _U01 + _V01;
                if (_Ad1 == 0.0) {
                    _Ad1 = 1.0;
                }
                var _Xg1 = _U01 * _ON + _V01 * _PN;
                var _Yg1 = _gd1 + _hd1 + _U01 * _ON * _ON + _V01 * _PN * _PN;
                var _Xc1 = new _7S();
                _Xc1._xq._7b(_zd1, _Bd1, _Wg1);
                _Xc1._YR._7b(_Bd1,
                    _Ad1, _Xg1);
                _Xc1._8S._7b(_Wg1, _Xg1, _Yg1);
                var _US = new _VR();
                _US.x = _4h1.x;
                _US.y = _4h1.y;
                _US._96 = _6h1;
                _f31 = _Xc1._9S(_US._HR());
            } else {
                var _zd1 = _gd1 + _hd1 + _U01 * _Jm * _Jm + _V01 * _Km * _Km;
                var _Bd1 = _U01 * _Jm + _V01 * _Km;
                var _Ad1 = _U01 + _V01;
                if (_Ad1 == 0.0) {
                    _Ad1 = 1.0;
                }
                var _Xc1 = new _XR();
                _Xc1._xq._7b(_zd1, _Bd1);
                _Xc1._YR._7b(_Bd1, _Ad1);
                var _7h1 = _Xc1._2S(_4h1._HR());
                _f31.x = _7h1.x;
                _f31.y = _7h1.y;
                _f31._96 = 0.0;
            }
            var _OZ = _DR._1b(_DR._im(_f31.x, _3h1), _DR._im(_f31._96, _qT));
            var __g1 = _f31.x * _Jm + _f31.y + _f31._96 * _ON;
            var _0h1 = _f31.x * _Km + _f31.y + _f31._96 * _PN;
            _S51._KR(_DR._im(_gd1, _OZ));
            _id1 -= _U01 * __g1;
            _U51._1b(_DR._im(_hd1, _OZ));
            _kd1 += _V01 * _0h1;
            data._S41[this._2c1].c._Zy(_S51);
            data._S41[this._2c1]._Z4 = _id1;
            data._S41[this._3c1].c._Zy(_U51);
            data._S41[this._3c1]._Z4 = _kd1;
            return _5h1 <= _YQ && _1g1 <= _ZQ;
        },
        _RR: function(_SR) {
            var _Sh = _SR || {};
            this.parent.prototype._RR.call(this, _Sh);
            _Sh['localAnchorA'] = this._hf1._RR();
            _Sh['localAnchorB'] = this._if1._RR();
            _Sh['localAxisA'] = this._Gg1._RR();
            _Sh['referenceAngle'] = this._jf1;
            _Sh['enableLimit'] = this._qf1;
            _Sh['lowerTranslation'] = this._Ig1;
            _Sh['upperTranslation'] = this._Jg1;
            _Sh['enableMotor'] = this._rf1;
            _Sh['maxMotorForce'] = this._Kg1;
            _Sh['motorSpeed'] = this._pf1;
            return _Sh;
        }
    };
    _Ze1._jQ(_B51);

    function _8h1() {
        this.parent.call(this);
        this.type = _B51._Ve1;
        this._8f1 = new _DR();
        this._9f1 = new _DR();
        this._5g1 = 0.0;
        this._9h1 = 0.0;
        Object.seal(this);
    }
    _8h1.prototype = {
        _1Y: function(_E61, _F61, anchor) {
            this._G51 = _E61;
            this._H51 = _F61;
            this._8f1._Zy(this._G51._n31(anchor));
            this._9f1._Zy(this._H51._n31(anchor));
        },
        _TR: function(data, _L61, _Ie1) {
            this.parent.prototype._TR.call(this,
                data, _L61, _Ie1);
            this._8f1._TR(data['localAnchorA']);
            this._9f1._TR(data['localAnchorB']);
            this._5g1 = data['maxForce'];
            this._9h1 = data['maxTorque'];
        }
    };
    _8h1._jQ(_Ge1);

    function _4f1(_H21) {
        this.parent.call(this, _H21);
        this._hf1 = _H21._8f1._T();
        this._if1 = _H21._9f1._T();
        this._ah1 = new _DR();
        this._bh1 = 0.0;
        this._9g1 = _H21._5g1;
        this._ch1 = _H21._9h1;
        this._2c1 = 0;
        this._3c1 = 0;
        this._tf1 = new _DR();
        this._uf1 = new _DR();
        this._vf1 = new _DR();
        this._wf1 = new _DR();
        this._xf1 = 0;
        this._yf1 = 0;
        this._zf1 = 0;
        this._Af1 = 0;
        this._dh1 = new _XR();
        this._eh1 = 0;
    }
    _4f1.prototype = {
        _R61: function() {
            return this._E51._k31(this._hf1);
        },
        _S61: function() {
            return this._D51._k31(this._if1);
        },
        _Je1: function(_K41) {
            return _DR._im(_K41, this._ah1);
        },
        _Ke1: function(_K41) {
            return _K41 * this._bh1;
        },
        _Cf1: function() {
            return this._hf1;
        },
        _Df1: function() {
            return this._if1;
        },
        _hg1: function(_a31) {
            _PQ(_tR(_a31) && _a31 >= 0.0);
            this._9g1 = _a31;
        },
        _ig1: function() {
            return this._9g1;
        },
        _fh1: function(_d31) {
            _PQ(_tR(_d31) && _d31 >= 0.0);
            this._ch1 = _d31;
        },
        _gh1: function() {
            return this._ch1;
        },
        _me1: function(data) {
            this._2c1 = this._E51._721;
            this._3c1 = this._D51._721;
            this._vf1._Zy(this._E51._g21._qS);
            this._wf1._Zy(this._D51._g21._qS);
            this._xf1 = this._E51._v21;
            this._yf1 = this._D51._v21;
            this._zf1 = this._E51._x21;
            this._Af1 = this._D51._x21;
            var _id1 = data._S41[this._2c1]._Z4;
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _kd1 = data._S41[this._3c1]._Z4;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _Sf1 = new _jS(_id1),
                _Tf1 = new _jS(_kd1);
            this._tf1 = _OS(_Sf1, _DR._KR(this._hf1, this._vf1));
            this._uf1 = _OS(_Tf1,
                _DR._KR(this._if1, this._wf1));
            var _gd1 = this._xf1,
                _hd1 = this._yf1;
            var _U01 = this._zf1,
                _V01 = this._Af1;
            var _Xc1 = new _XR();
            _Xc1._xq.x = _gd1 + _hd1 + _U01 * this._tf1.y * this._tf1.y + _V01 * this._uf1.y * this._uf1.y;
            _Xc1._xq.y = -_U01 * this._tf1.x * this._tf1.y - _V01 * this._uf1.x * this._uf1.y;
            _Xc1._YR.x = _Xc1._xq.y;
            _Xc1._YR.y = _gd1 + _hd1 + _U01 * this._tf1.x * this._tf1.x + _V01 * this._uf1.x * this._uf1.x;
            this._dh1 = _Xc1.__R();
            this._eh1 = _U01 + _V01;
            if (this._eh1 > 0.0) {
                this._eh1 = 1.0 / this._eh1;
            }
            if (data._rQ._O41) {
                this._ah1._im(data._rQ._L41);
                this._bh1 *= data._rQ._L41;
                var _OZ = new _DR(this._ah1.x, this._ah1.y);
                _jd1._KR(_DR._im(_gd1, _OZ));
                _zW -= _U01 * (_AS(this._tf1, _OZ) + this._bh1);
                _ld1._1b(_DR._im(_hd1, _OZ));
                _AW += _V01 * (_AS(this._uf1, _OZ) + this._bh1);
            } else {
                this._ah1._ER();
                this._bh1 = 0.0;
            }
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Ed1: function(data) {
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _gd1 = this._xf1,
                _hd1 = this._yf1;
            var _U01 = this._zf1,
                _V01 = this._Af1;
            var h = data._rQ._J41; {
                var _Vf1 = _AW - _zW;
                var _f31 = -this._eh1 * _Vf1;
                var _Wf1 = this._bh1;
                var _Xf1 = h * this._ch1;
                this._bh1 = _4T(this._bh1 + _f31, -_Xf1, _Xf1);
                _f31 = this._bh1 - _Wf1;
                _zW -= _U01 * _f31;
                _AW += _V01 * _f31;
            } {
                var _Vf1 = _DR._1b(_ld1, _DR._KR(_CS(_AW, this._uf1), _DR._KR(_jd1, _CS(_zW, this._tf1))));
                var _f31 = _DS(this._dh1, _Vf1)._HR();
                var _Wf1 = this._ah1._T();
                this._ah1._1b(_f31);
                var _Xf1 = h * this._9g1;
                if (this._ah1._MR() > _Xf1 * _Xf1) {
                    this._ah1._NR();
                    this._ah1._im(_Xf1);
                }
                _f31 = _DR._KR(this._ah1,
                    _Wf1);
                _jd1._KR(_DR._im(_gd1, _f31));
                _zW -= _U01 * _AS(this._tf1, _f31);
                _ld1._1b(_DR._im(_hd1, _f31));
                _AW += _V01 * _AS(this._uf1, _f31);
            }
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Zd1: function(data) {
            return true;
        },
        _RR: function(_SR) {
            var _Sh = _SR || {};
            this.parent.prototype._RR.call(this, _Sh);
            _Sh['localAnchorA'] = this._hf1._RR();
            _Sh['localAnchorB'] = this._if1._RR();
            _Sh['maxForce'] = this._9g1;
            _Sh['maxTorque'] = this._ch1;
            return _Sh;
        }
    };
    _4f1._jQ(_B51);

    function _hh1() {
        this.parent.call(this);
        this.type = _B51._Ue1;
        this._8f1 = new _DR(0.0, 0.0);
        this._9f1 = new _DR(0.0, 0.0);
        this._af1 = 0.0;
        this._6g1 = 0.0;
        this._7g1 = 0.0;
        Object.seal(this);
    }
    _hh1.prototype = {
        _1Y: function(_E61, _F61, anchor) {
            this._G51 = _E61;
            this._H51 = _F61;
            this._8f1._Zy(this._G51._n31(anchor));
            this._9f1._Zy(this._H51._n31(anchor));
            this._af1 = this._H51._kS() - this._G51._kS();
        },
        _TR: function(data, _L61, _Ie1) {
            this.parent.prototype._TR.call(this, data, _L61, _Ie1);
            this._8f1._TR(data['localAnchorA']);
            this._9f1._TR(data['localAnchorB']);
            this._af1 = data['referenceAngle'];
            this._6g1 = data['frequencyHz'];
            this._7g1 = data['dampingRatio'];
        }
    };
    _hh1._jQ(_Ge1);

    function _3f1(_H21) {
        this.parent.call(this, _H21);
        this._sg1 = 0;
        this._dg1 = 0;
        this._2c1 = 0;
        this._3c1 = 0;
        this._tf1 = new _DR();
        this._uf1 = new _DR();
        this._vf1 = new _DR();
        this._wf1 = new _DR();
        this._xf1 = 0;
        this._yf1 = 0;
        this._zf1 = 0;
        this._Af1 = 0;
        this._u21 = new _7S();
        this._hf1 = _H21._8f1._T();
        this._if1 = _H21._9f1._T();
        this._jf1 = _H21._af1;
        this._ag1 = _H21._6g1;
        this._bg1 = _H21._7g1;
        this._kf1 = new _VR();
    }
    _3f1.prototype = {
        _R61: function() {
            return this._E51._k31(this._hf1);
        },
        _S61: function() {
            return this._D51._k31(this._if1);
        },
        _Je1: function(_K41) {
            var _OZ = new _DR(this._kf1.x, this._kf1.y);
            return _DR._im(_K41, _OZ);
        },
        _Ke1: function(_K41) {
            return _K41 * this._kf1._96;
        },
        _Cf1: function() {
            return this._hf1;
        },
        _Df1: function() {
            return this._if1;
        },
        _Ef1: function() {
            return this._jf1;
        },
        _jg1: function(_kg1) {
            this._ag1 = _kg1;
        },
        _lg1: function() {
            return this._ag1;
        },
        _mg1: function(_qe1) {
            this._bg1 = _qe1;
        },
        _ng1: function() {
            return this._bg1;
        },
        _me1: function(data) {
            this._2c1 = this._E51._721;
            this._3c1 = this._D51._721;
            this._vf1._Zy(this._E51._g21._qS);
            this._wf1._Zy(this._D51._g21._qS);
            this._xf1 = this._E51._v21;
            this._yf1 = this._D51._v21;
            this._zf1 = this._E51._x21;
            this._Af1 = this._D51._x21;
            var _id1 = data._S41[this._2c1]._Z4;
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _kd1 = data._S41[this._3c1]._Z4;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _Sf1 = new _jS(_id1),
                _Tf1 = new _jS(_kd1);
            this._tf1._Zy(_OS(_Sf1, _DR._KR(this._hf1, this._vf1)));
            this._uf1._Zy(_OS(_Tf1,
                _DR._KR(this._if1, this._wf1)));
            var _gd1 = this._xf1,
                _hd1 = this._yf1;
            var _U01 = this._zf1,
                _V01 = this._Af1;
            var _Xc1 = new _7S();
            _Xc1._xq.x = _gd1 + _hd1 + this._tf1.y * this._tf1.y * _U01 + this._uf1.y * this._uf1.y * _V01;
            _Xc1._YR.x = -this._tf1.y * this._tf1.x * _U01 - this._uf1.y * this._uf1.x * _V01;
            _Xc1._8S.x = -this._tf1.y * _U01 - this._uf1.y * _V01;
            _Xc1._xq.y = _Xc1._YR.x;
            _Xc1._YR.y = _gd1 + _hd1 + this._tf1.x * this._tf1.x * _U01 + this._uf1.x * this._uf1.x * _V01;
            _Xc1._8S.y = this._tf1.x * _U01 + this._uf1.x * _V01;
            _Xc1._xq._96 = _Xc1._8S.x;
            _Xc1._YR._96 = _Xc1._8S.y;
            _Xc1._8S._96 = _U01 + _V01;
            if (this._ag1 > 0.0) {
                _Xc1._dS(this._u21);
                var _ih1 = _U01 + _V01;
                var __2 = _ih1 > 0.0 ? 1.0 / _ih1 : 0.0;
                var _US = _kd1 - _id1 - this._jf1;
                var _yF = 2.0 * _TQ * this._ag1;
                var _Cd = 2.0 * __2 * this._bg1 * _yF;
                var _dt = __2 * _yF * _yF;
                var h = data._rQ._J41;
                this._dg1 = h * (_Cd + h * _dt);
                this._dg1 = this._dg1 != 0.0 ? 1.0 / this._dg1 : 0.0;
                this._sg1 = _US * h * _dt * this._dg1;
                _ih1 += this._dg1;
                this._u21._8S._96 = _ih1 != 0.0 ? 1.0 / _ih1 : 0.0;
            } else {
                _Xc1._fS(this._u21);
                this._dg1 = 0.0;
                this._sg1 = 0.0;
            }
            if (data._rQ._O41) {
                this._kf1._im(data._rQ._L41);
                var _OZ = new _DR(this._kf1.x,
                    this._kf1.y);
                _jd1._KR(_DR._im(_gd1, _OZ));
                _zW -= _U01 * (_AS(this._tf1, _OZ) + this._kf1._96);
                _ld1._1b(_DR._im(_hd1, _OZ));
                _AW += _V01 * (_AS(this._uf1, _OZ) + this._kf1._96);
            } else {
                this._kf1._ER();
            }
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Ed1: function(data) {
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _gd1 = this._xf1,
                _hd1 = this._yf1;
            var _U01 = this._zf1,
                _V01 = this._Af1;
            if (this._ag1 > 0.0) {
                var _Zf1 = _AW - _zW;
                var _jh1 = -this._u21._8S._96 * (_Zf1 + this._sg1 + this._dg1 * this._kf1._96);
                this._kf1._96 += _jh1;
                _zW -= _U01 * _jh1;
                _AW += _V01 * _jh1;
                var _Yf1 = _DR._KR(_DR._KR(_DR._1b(_ld1, _CS(_AW, this._uf1)), _jd1), _CS(_zW, this._tf1));
                var _7h1 = _KS(this._u21, _Yf1)._HR();
                this._kf1.x += _7h1.x;
                this._kf1.y += _7h1.y;
                var _OZ = _7h1._T();
                _jd1._KR(_DR._im(_gd1, _OZ));
                _zW -= _U01 * _AS(this._tf1, _OZ);
                _ld1._1b(_DR._im(_hd1, _OZ));
                _AW += _V01 * _AS(this._uf1, _OZ);
            } else {
                var _Yf1 = _DR._KR(_DR._KR(_DR._1b(_ld1, _CS(_AW,
                    this._uf1)), _jd1), _CS(_zW, this._tf1));
                var _Zf1 = _AW - _zW;
                var _Vf1 = new _VR(_Yf1.x, _Yf1.y, _Zf1);
                var _f31 = _JS(this._u21, _Vf1)._HR();
                this._kf1._1b(_f31);
                var _OZ = new _DR(_f31.x, _f31.y);
                _jd1._KR(_DR._im(_gd1, _OZ));
                _zW -= _U01 * (_AS(this._tf1, _OZ) + _f31._96);
                _ld1._1b(_DR._im(_hd1, _OZ));
                _AW += _V01 * (_AS(this._uf1, _OZ) + _f31._96);
            }
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Zd1: function(data) {
            var _S51 = data._S41[this._2c1].c._T();
            var _id1 = data._S41[this._2c1]._Z4;
            var _U51 = data._S41[this._3c1].c._T();
            var _kd1 = data._S41[this._3c1]._Z4;
            var _Sf1 = new _jS(_id1),
                _Tf1 = new _jS(_kd1);
            var _gd1 = this._xf1,
                _hd1 = this._yf1;
            var _U01 = this._zf1,
                _V01 = this._Af1;
            var _CX = _OS(_Sf1, _DR._KR(this._hf1, this._vf1));
            var _DX = _OS(_Tf1, _DR._KR(this._if1, this._wf1));
            var _2g1, _1g1;
            var _Xc1 = new _7S();
            _Xc1._xq.x = _gd1 + _hd1 + _CX.y * _CX.y * _U01 + _DX.y * _DX.y * _V01;
            _Xc1._YR.x = -_CX.y * _CX.x * _U01 - _DX.y * _DX.x * _V01;
            _Xc1._8S.x = -_CX.y * _U01 - _DX.y * _V01;
            _Xc1._xq.y = _Xc1._YR.x;
            _Xc1._YR.y = _gd1 + _hd1 + _CX.x * _CX.x * _U01 + _DX.x * _DX.x * _V01;
            _Xc1._8S.y = _CX.x * _U01 + _DX.x * _V01;
            _Xc1._xq._96 = _Xc1._8S.x;
            _Xc1._YR._96 = _Xc1._8S.y;
            _Xc1._8S._96 = _U01 + _V01;
            if (this._ag1 > 0.0) {
                var _4h1 = _DR._KR(_DR._KR(_DR._1b(_U51, _DX), _S51), _CX);
                _2g1 = _4h1._LR();
                _1g1 = 0.0;
                var _OZ = _Xc1._cS(_4h1)._HR();
                _S51._KR(_DR._im(_gd1, _OZ));
                _id1 -= _U01 * _AS(_CX, _OZ);
                _U51._1b(_DR._im(_hd1, _OZ));
                _kd1 += _V01 * _AS(_DX, _OZ);
            } else {
                var _4h1 = _DR._KR(_DR._KR(_DR._1b(_U51, _DX), _S51), _CX);
                var _6h1 = _kd1 - _id1 - this._jf1;
                _2g1 = _4h1._LR();
                _1g1 = _YS(_6h1);
                var _US = new _VR(_4h1.x, _4h1.y, _6h1);
                var _f31 = _Xc1._9S(_US)._HR();
                var _OZ = new _DR(_f31.x, _f31.y);
                _S51._KR(_DR._im(_gd1, _OZ));
                _id1 -= _U01 * (_AS(_CX, _OZ) + _f31._96);
                _U51._1b(_DR._im(_hd1, _OZ));
                _kd1 += _V01 * (_AS(_DX, _OZ) + _f31._96);
            }
            data._S41[this._2c1].c._Zy(_S51);
            data._S41[this._2c1]._Z4 = _id1;
            data._S41[this._3c1].c._Zy(_U51);
            data._S41[this._3c1]._Z4 = _kd1;
            return _2g1 <= _YQ && _1g1 <= _ZQ;
        },
        _RR: function(_SR) {
            var _Sh = _SR || {};
            this.parent.prototype._RR.call(this, _Sh);
            _Sh['localAnchorA'] = this._hf1._RR();
            _Sh['localAnchorB'] = this._if1._RR();
            _Sh['referenceAngle'] = this._jf1;
            _Sh['frequencyHz'] = this._ag1;
            _Sh['dampingRatio'] = this._bg1;
            return _Sh;
        }
    };
    _3f1._jQ(_B51);

    function _kh1() {
        this.parent.call(this);
        this.type = _B51._Te1;
        this._8f1 = new _DR();
        this._9f1 = new _DR();
        this._Cg1 = new _DR(1.0, 0.0);
        this._gf1 = false;
        this._df1 = 0.0;
        this._ef1 = 0.0;
        this._6g1 = 2.0;
        this._7g1 = 0.7;
        Object.seal(this);
    }
    _kh1.prototype = {
        _1Y: function(_E61, _F61, anchor, _qT) {
            this._G51 = _E61;
            this._H51 = _F61;
            this._8f1._Zy(this._G51._n31(anchor));
            this._9f1._Zy(this._H51._n31(anchor));
            this._Cg1._Zy(this._G51._p31(_qT));
        },
        _TR: function(data, _L61, _Ie1) {
            this.parent.prototype._TR.call(this,
                data, _L61, _Ie1);
            this._8f1._TR(data['localAnchorA']);
            this._9f1._TR(data['localAnchorB']);
            this._Cg1._TR(data['localAxisA']);
            this._gf1 = data['enableMotor'];
            this._df1 = data['maxMotorTorque'];
            this._ef1 = data['motorSpeed'];
            this._6g1 = data['frequencyHz'];
            this._7g1 = data['dampingRatio'];
        }
    };
    _kh1._jQ(_Ge1);

    function _2f1(_H21) {
        this.parent.call(this, _H21);
        this._2c1 = 0;
        this._3c1 = 0;
        this._vf1 = new _DR();
        this._wf1 = new _DR();
        this._xf1 = 0;
        this._yf1 = 0;
        this._zf1 = 0;
        this._Af1 = 0;
        this._hf1 = _H21._8f1._T();
        this._if1 = _H21._9f1._T();
        this._Gg1 = _H21._Cg1._T();
        this._Hg1 = _CS(1.0, this._Gg1);
        this._u21 = 0.0;
        this._kf1 = 0.0;
        this._Bf1 = 0.0;
        this._lf1 = 0.0;
        this._lh1 = 0.0;
        this._mh1 = 0.0;
        this._of1 = _H21._df1;
        this._pf1 = _H21._ef1;
        this._rf1 = _H21._gf1;
        this._ag1 = _H21._6g1;
        this._bg1 = _H21._7g1;
        this._sg1 = 0.0;
        this._dg1 = 0.0;
        this._nh1 = new _DR();
        this._oh1 = new _DR();
        this._ph1 = this._qh1 = 0;
        this._rh1 = this._sh1 = 0;
    }
    _2f1.prototype = {
        _R61: function() {
            return this._E51._k31(this._hf1);
        },
        _S61: function() {
            return this._D51._k31(this._if1);
        },
        _Je1: function(_K41) {
            return _DR._im(_K41,
                _DR._1b(_DR._im(this._kf1, this._oh1), _DR._im(this._mh1, this._nh1)));
        },
        _Ke1: function(_K41) {
            return _K41 * this._lf1;
        },
        _Cf1: function() {
            return this._hf1;
        },
        _Df1: function() {
            return this._if1;
        },
        _Rg1: function() {
            return this._Gg1;
        },
        _Sg1: function() {
            var _E61 = this._E51;
            var _F61 = this._D51;
            var _QW = _E61._k31(this._hf1);
            var _RW = _F61._k31(this._if1);
            var _Cd = _DR._KR(_RW, _QW);
            var _qT = _E61._l31(this._Gg1);
            var _ze1 = _zS(_Cd, _qT);
            return _ze1;
        },
        _Gf1: function() {
            var _zW = this._E51._m21;
            var _AW = this._D51._m21;
            return _AW - _zW;
        },
        _Mf1: function() {
            return this._rf1;
        },
        _HE: function(_E31) {
            this._E51._uD(true);
            this._D51._uD(true);
            this._rf1 = _E31;
        },
        _Nf1: function(speed) {
            this._E51._uD(true);
            this._D51._uD(true);
            this._pf1 = speed;
        },
        _Of1: function() {
            return this._pf1;
        },
        _Pf1: function(_d31) {
            this._E51._uD(true);
            this._D51._uD(true);
            this._of1 = _d31;
        },
        _Qf1: function() {
            return this._of1;
        },
        _Rf1: function(_K41) {
            return _K41 * this._lf1;
        },
        _th1: function(_kg1) {
            this._ag1 = _kg1;
        },
        _uh1: function() {
            return this._ag1;
        },
        _vh1: function(_qe1) {
            this._bg1 = _qe1;
        },
        _wh1: function() {
            return this._bg1;
        },
        _me1: function(data) {
            this._2c1 = this._E51._721;
            this._3c1 = this._D51._721;
            this._vf1._Zy(this._E51._g21._qS);
            this._wf1._Zy(this._D51._g21._qS);
            this._xf1 = this._E51._v21;
            this._yf1 = this._D51._v21;
            this._zf1 = this._E51._x21;
            this._Af1 = this._D51._x21;
            var _gd1 = this._xf1,
                _hd1 = this._yf1;
            var _U01 = this._zf1,
                _V01 = this._Af1;
            var _S51 = data._S41[this._2c1].c._T();
            var _id1 = data._S41[this._2c1]._Z4;
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _U51 = data._S41[this._3c1].c._T();
            var _kd1 = data._S41[this._3c1]._Z4;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _Sf1 = new _jS(_id1),
                _Tf1 = new _jS(_kd1);
            var _CX = _OS(_Sf1, _DR._KR(this._hf1, this._vf1));
            var _DX = _OS(_Tf1, _DR._KR(this._if1, this._wf1));
            var _Cd = _DR._KR(_DR._KR(_DR._1b(_U51, _DX), _S51), _CX); {
                this._oh1._Zy(_OS(_Sf1, this._Hg1));
                this._rh1 = _AS(_DR._1b(_Cd, _CX), this._oh1);
                this._sh1 = _AS(_DX, this._oh1);
                this._u21 = _gd1 + _hd1 + _U01 * this._rh1 * this._rh1 + _V01 * this._sh1 * this._sh1;
                if (this._u21 > 0.0) {
                    this._u21 = 1.0 / this._u21;
                }
            }
            this._lh1 = 0.0;
            this._sg1 = 0.0;
            this._dg1 = 0.0;
            if (this._ag1 > 0.0) {
                this._nh1._Zy(_OS(_Sf1, this._Gg1));
                this._ph1 = _AS(_DR._1b(_Cd, _CX), this._nh1);
                this._qh1 = _AS(_DX, this._nh1);
                var _yg1 = _gd1 + _hd1 + _U01 * this._ph1 * this._ph1 + _V01 * this._qh1 * this._qh1;
                if (_yg1 > 0.0) {
                    this._lh1 = 1.0 / _yg1;
                    var _US = _zS(_Cd, this._nh1);
                    var _yF = 2.0 * _TQ * this._ag1;
                    var _Cd = 2.0 * this._lh1 * this._bg1 * _yF;
                    var _dt = this._lh1 * _yF * _yF;
                    var h = data._rQ._J41;
                    this._dg1 = h * (_Cd + h * _dt);
                    if (this._dg1 > 0.0) {
                        this._dg1 = 1.0 / this._dg1;
                    }
                    this._sg1 = _US * h * _dt * this._dg1;
                    this._lh1 = _yg1 + this._dg1;
                    if (this._lh1 > 0.0) {
                        this._lh1 = 1.0 / this._lh1;
                    }
                }
            } else {
                this._mh1 = 0.0;
            }
            if (this._rf1) {
                this._Bf1 = _U01 + _V01;
                if (this._Bf1 > 0.0) {
                    this._Bf1 = 1.0 / this._Bf1;
                }
            } else {
                this._Bf1 = 0.0;
                this._lf1 = 0.0;
            }
            if (data._rQ._O41) {
                this._kf1 *= data._rQ._L41;
                this._mh1 *= data._rQ._L41;
                this._lf1 *= data._rQ._L41;
                var _OZ = _DR._1b(_DR._im(this._kf1, this._oh1), _DR._im(this._mh1, this._nh1));
                var __g1 = this._kf1 * this._rh1 + this._mh1 * this._ph1 + this._lf1;
                var _0h1 = this._kf1 * this._sh1 + this._mh1 * this._qh1 + this._lf1;
                _jd1._KR(_DR._im(this._xf1, _OZ));
                _zW -= this._zf1 * __g1;
                _ld1._1b(_DR._im(this._yf1,
                    _OZ));
                _AW += this._Af1 * _0h1;
            } else {
                this._kf1 = 0.0;
                this._mh1 = 0.0;
                this._lf1 = 0.0;
            }
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Ed1: function(data) {
            var _gd1 = this._xf1,
                _hd1 = this._yf1;
            var _U01 = this._zf1,
                _V01 = this._Af1;
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w; {
                var _Vf1 = _zS(this._nh1, _DR._KR(_ld1, _jd1)) + this._qh1 * _AW - this._ph1 * _zW;
                var _f31 = -this._lh1 * (_Vf1 + this._sg1 + this._dg1 * this._mh1);
                this._mh1 += _f31;
                var _OZ = _DR._im(_f31, this._nh1);
                var __g1 = _f31 * this._ph1;
                var _0h1 = _f31 * this._qh1;
                _jd1._KR(_DR._im(_gd1, _OZ));
                _zW -= _U01 * __g1;
                _ld1._1b(_DR._im(_hd1, _OZ));
                _AW += _V01 * _0h1;
            } {
                var _Vf1 = _AW - _zW - this._pf1;
                var _f31 = -this._Bf1 * _Vf1;
                var _Wf1 = this._lf1;
                var _Xf1 = data._rQ._J41 * this._of1;
                this._lf1 = _4T(this._lf1 + _f31, -_Xf1, _Xf1);
                _f31 = this._lf1 - _Wf1;
                _zW -= _U01 * _f31;
                _AW += _V01 * _f31;
            } {
                var _Vf1 = _zS(this._oh1, _DR._KR(_ld1, _jd1)) + this._sh1 * _AW - this._rh1 * _zW;
                var _f31 = -this._u21 * _Vf1;
                this._kf1 += _f31;
                var _OZ = _DR._im(_f31,
                    this._oh1);
                var __g1 = _f31 * this._rh1;
                var _0h1 = _f31 * this._sh1;
                _jd1._KR(_DR._im(_gd1, _OZ));
                _zW -= _U01 * __g1;
                _ld1._1b(_DR._im(_hd1, _OZ));
                _AW += _V01 * _0h1;
            }
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Zd1: function(data) {
            var _S51 = data._S41[this._2c1].c._T();
            var _id1 = data._S41[this._2c1]._Z4;
            var _U51 = data._S41[this._3c1].c._T();
            var _kd1 = data._S41[this._3c1]._Z4;
            var _Sf1 = new _jS(_id1),
                _Tf1 = new _jS(_kd1);
            var _CX = _OS(_Sf1, _DR._KR(this._hf1,
                this._vf1));
            var _DX = _OS(_Tf1, _DR._KR(this._if1, this._wf1));
            var _Cd = _DR._1b(_DR._KR(_U51, _S51), _DR._KR(_DX, _CX));
            var _181 = _OS(_Sf1, this._Hg1);
            var _xh1 = _AS(_DR._1b(_Cd, _CX), _181);
            var _yh1 = _AS(_DX, _181);
            var _US = _zS(_Cd, _181);
            var _dt = this._xf1 + this._yf1 + this._zf1 * this._rh1 * this._rh1 + this._Af1 * this._sh1 * this._sh1;
            var _f31;
            if (_dt != 0.0) {
                _f31 = -_US / _dt;
            } else {
                _f31 = 0.0;
            }
            var _OZ = _DR._im(_f31, _181);
            var __g1 = _f31 * _xh1;
            var _0h1 = _f31 * _yh1;
            _S51._KR(_DR._im(this._xf1, _OZ));
            _id1 -= this._zf1 * __g1;
            _U51._1b(_DR._im(this._yf1, _OZ));
            _kd1 += this._Af1 * _0h1;
            data._S41[this._2c1].c._Zy(_S51);
            data._S41[this._2c1]._Z4 = _id1;
            data._S41[this._3c1].c._Zy(_U51);
            data._S41[this._3c1]._Z4 = _kd1;
            return _YS(_US) <= _YQ;
        },
        _RR: function(_SR) {
            var _Sh = _SR || {};
            this.parent.prototype._RR.call(this, _Sh);
            _Sh['localAnchorA'] = this._hf1._RR();
            _Sh['localAnchorB'] = this._if1._RR();
            _Sh['localAxisA'] = this._zh1._RR();
            _Sh['enableMotor'] = this._rf1;
            _Sh['maxMotorTorque'] = this._of1;
            _Sh['motorSpeed'] = this._pf1;
            _Sh['frequencyHz'] = this._ag1;
            _Sh['dampingRatio'] = this._bg1;
            return _Sh;
        }
    };
    _2f1._jQ(_B51);

    function _Ah1() {
        this.parent.call(this);
        this.type = _B51._Se1;
        this._Bh1 = null;
        this._Ch1 = null;
        this._qe1 = 1.0;
        Object.seal(this);
    }
    _Ah1.prototype = {
        _TR: function(data, _L61, _Ie1) {
            this.parent.prototype._TR.call(this, data, _L61, _Ie1);
            this._Bh1 = data['joint1'];
            this._Ch1 = data['joint2'];
            this._qe1 = data['ratio'];
        }
    };
    _Ah1._jQ(_Ge1);

    function _1f1(_H21) {
        this.parent.call(this, _H21);
        this._Dh1 = _H21._Bh1;
        this._Eh1 = _H21._Ch1;
        this._Fh1 = this._Dh1._ST();
        this._Gh1 = this._Eh1._ST();
        _PQ(this._Fh1 == _B51._Qe1 || this._Fh1 == _B51._Re1);
        _PQ(this._Gh1 == _B51._Qe1 || this._Gh1 == _B51._Re1);
        var _Hh1, _Ih1;
        this._Jh1 = this._Dh1._P61();
        this._E51 = this._Dh1._Q61();
        var _2Y = this._E51._9_;
        var _id1 = this._E51._g21._Z4;
        var _Kh1 = this._Jh1._9_;
        var _Lh1 = this._Jh1._g21._Z4;
        this._hf1 = new _DR();
        this._if1 = new _DR();
        this._Mh1 = new _DR();
        this._Nh1 = new _DR();
        this._Oh1 = new _DR();
        this._Ph1 = new _DR();
        if (this._Fh1 == _B51._Qe1) {
            var _Qh1 = _H21._Bh1;
            this._Mh1._Zy(_Qh1._hf1);
            this._hf1._Zy(_Qh1._if1);
            this._Rh1 = _Qh1._jf1;
            this._Oh1._ER();
            _Hh1 = _id1 - _Lh1 - this._Rh1;
        } else {
            var _Sh1 = _H21._Bh1;
            this._Mh1._Zy(_Sh1._hf1);
            this._hf1._Zy(_Sh1._if1);
            this._Rh1 = _Sh1._jf1;
            this._Oh1._Zy(_Sh1._Gg1);
            var _Th1 = this._Mh1;
            var _QW = _PS(_Kh1._vt, _DR._1b(_OS(_2Y._vt, this._hf1), _DR._KR(_2Y._6d, _Kh1._6d)));
            _Hh1 = _zS(_DR._KR(_QW, _Th1), this._Oh1);
        }
        this._Uh1 = this._Eh1._P61();
        this._D51 = this._Eh1._Q61();
        var _4Y = this._D51._9_;
        var _kd1 = this._D51._g21._Z4;
        var _Vh1 = this._Uh1._9_;
        var _Wh1 = this._Uh1._g21._Z4;
        if (this._Gh1 == _B51._Qe1) {
            var _Qh1 = _H21._Ch1;
            this._Nh1._Zy(_Qh1._hf1);
            this._if1._Zy(_Qh1._if1);
            this._Xh1 = _Qh1._jf1;
            this._Ph1._ER();
            _Ih1 = _kd1 - _Wh1 - this._Xh1;
        } else {
            var _Sh1 = _H21._Ch1;
            this._Nh1._Zy(_Sh1._hf1);
            this._if1._Zy(_Sh1._if1);
            this._Xh1 = _Sh1._jf1;
            this._Ph1._Zy(_Sh1._Gg1);
            var _Yh1 = this._Nh1;
            var _RW = _PS(_Vh1._vt, _DR._1b(_OS(_4Y._vt, this._if1), _DR._KR(_4Y._6d, _Vh1._6d)));
            _Ih1 = _zS(_DR._KR(_RW, _Yh1), this._Ph1);
        }
        this._Zh1 = _H21._qe1;
        this.__h1 = _Hh1 + this._Zh1 * _Ih1;
        this._kf1 = 0.0;
        this._2c1 = this._3c1 = this._0i1 = this._1i1 = 0;
        this._2i1 = new _DR();
        this._3i1 = new _DR();
        this._4i1 = new _DR();
        this._5i1 = new _DR();
        this._6i1 = this._7i1 = this._8i1 = this._9i1 = 0;
        this._ai1 = this._bi1 = this._ci1 = this._di1 = 0;
        this._ei1 = new _DR(), this._fi1 = new _DR();
        this._gi1 = this._hi1 = this._ii1 = this._ji1 = 0;
        this._u21 = 0;
    }
    _1f1.prototype = {
        _R61: function() {
            return this._E51._k31(this._hf1);
        },
        _S61: function() {
            return this._D51._k31(this._if1);
        },
        _Je1: function(_K41) {
            var _OZ = _DR._im(this._kf1, this._ei1);
            return _DR._im(_K41, _OZ);
        },
        _Ke1: function(_K41) {
            var _ki1 = this._kf1 * this._gi1;
            return _K41 * _ki1;
        },
        _li1: function() {
            return this._Dh1;
        },
        _mi1: function() {
            return this._Eh1;
        },
        _ni1: function(_qe1) {
            _PQ(_tR(_qe1));
            this._Zh1 = _qe1;
        },
        _oi1: function() {
            return this._Zh1;
        },
        _me1: function(data) {
            this._2c1 = this._E51._721;
            this._3c1 = this._D51._721;
            this._0i1 = this._Jh1._721;
            this._1i1 = this._Uh1._721;
            this._2i1._Zy(this._E51._g21._qS);
            this._3i1._Zy(this._D51._g21._qS);
            this._4i1._Zy(this._Jh1._g21._qS);
            this._5i1._Zy(this._Uh1._g21._qS);
            this._6i1 = this._E51._v21;
            this._7i1 = this._D51._v21;
            this._8i1 = this._Jh1._v21;
            this._9i1 = this._Uh1._v21;
            this._ai1 = this._E51._x21;
            this._bi1 = this._D51._x21;
            this._ci1 = this._Jh1._x21;
            this._di1 = this._Uh1._x21;
            var _id1 = data._S41[this._2c1]._Z4;
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _kd1 = data._S41[this._3c1]._Z4;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _Lh1 = data._S41[this._0i1]._Z4;
            var _pi1 = data._T41[this._0i1]._X1._T();
            var _qi1 = data._T41[this._0i1].w;
            var _Wh1 = data._S41[this._1i1]._Z4;
            var _ri1 = data._T41[this._1i1]._X1._T();
            var _si1 = data._T41[this._1i1].w;
            var _Sf1 = new _jS(_id1),
                _Tf1 = new _jS(_kd1),
                _ti1 = new _jS(_Lh1),
                _ui1 = new _jS(_Wh1);
            this._u21 = 0.0;
            if (this._Fh1 == _B51._Qe1) {
                this._ei1._ER();
                this._gi1 = 1.0;
                this._ii1 = 1.0;
                this._u21 += this._ai1 + this._ci1;
            } else {
                var _W1 = _OS(_ti1, this._Oh1);
                var _vi1 = _OS(_ti1, _DR._KR(this._Mh1, this._4i1));
                var _CX = _OS(_Sf1, _DR._KR(this._hf1, this._2i1));
                this._ei1._Zy(_W1);
                this._ii1 = _AS(_vi1, _W1);
                this._gi1 = _AS(_CX, _W1);
                this._u21 += this._8i1 + this._6i1 + this._ci1 * this._ii1 * this._ii1 + this._ai1 * this._gi1 * this._gi1;
            }
            if (this._Gh1 == _B51._Qe1) {
                this._fi1._ER();
                this._hi1 = this._Zh1;
                this._ji1 = this._Zh1;
                this._u21 += this._Zh1 * this._Zh1 * (this._bi1 + this._di1);
            } else {
                var _W1 = _OS(_ui1,
                    this._Ph1);
                var _wi1 = _OS(_ui1, _DR._KR(this._Nh1, this._5i1));
                var _DX = _OS(_Tf1, _DR._KR(this._if1, this._3i1));
                this._fi1._Zy(_DR._im(this._Zh1, _W1));
                this._ji1 = this._Zh1 * _AS(_wi1, _W1);
                this._hi1 = this._Zh1 * _AS(_DX, _W1);
                this._u21 += this._Zh1 * this._Zh1 * (this._9i1 + this._7i1) + this._di1 * this._ji1 * this._ji1 + this._bi1 * this._hi1 * this._hi1;
            }
            this._u21 = this._u21 > 0.0 ? 1.0 / this._u21 : 0.0;
            if (data._rQ._O41) {
                _jd1._1b(_DR._im((this._6i1 * this._kf1), this._ei1));
                _zW += this._ai1 * this._kf1 * this._gi1;
                _ld1._1b(_DR._im((this._7i1 * this._kf1),
                    this._fi1));
                _AW += this._bi1 * this._kf1 * this._hi1;
                _pi1._KR(_DR._im((this._8i1 * this._kf1), this._ei1));
                _qi1 -= this._ci1 * this._kf1 * this._ii1;
                _ri1._KR(_DR._im((this._9i1 * this._kf1), this._fi1));
                _si1 -= this._di1 * this._kf1 * this._ji1;
            } else {
                this._kf1 = 0.0;
            }
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
            data._T41[this._0i1]._X1._Zy(_pi1);
            data._T41[this._0i1].w = _qi1;
            data._T41[this._1i1]._X1._Zy(_ri1);
            data._T41[this._1i1].w = _si1;
        },
        _Ed1: function(data) {
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _pi1 = data._T41[this._0i1]._X1._T();
            var _qi1 = data._T41[this._0i1].w;
            var _ri1 = data._T41[this._1i1]._X1._T();
            var _si1 = data._T41[this._1i1].w;
            var _Vf1 = _zS(this._ei1, _DR._KR(_jd1, _pi1)) + _zS(this._fi1, _DR._KR(_ld1, _ri1));
            _Vf1 += (this._gi1 * _zW - this._ii1 * _qi1) + (this._hi1 * _AW - this._ji1 * _si1);
            var _f31 = -this._u21 * _Vf1;
            this._kf1 += _f31;
            _jd1._1b(_DR._im((this._6i1 * _f31), this._ei1));
            _zW += this._ai1 * _f31 * this._gi1;
            _ld1._1b(_DR._im((this._7i1 * _f31), this._fi1));
            _AW += this._bi1 * _f31 * this._hi1;
            _pi1._KR(_DR._im((this._8i1 * _f31), this._ei1));
            _qi1 -= this._ci1 * _f31 * this._ii1;
            _ri1._KR(_DR._im((this._9i1 * _f31), this._fi1));
            _si1 -= this._di1 * _f31 * this._ji1;
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
            data._T41[this._0i1]._X1._Zy(_pi1);
            data._T41[this._0i1].w = _qi1;
            data._T41[this._1i1]._X1._Zy(_ri1);
            data._T41[this._1i1].w = _si1;
        },
        _Zd1: function(data) {
            var _S51 = data._S41[this._2c1].c._T();
            var _id1 = data._S41[this._2c1]._Z4;
            var _U51 = data._S41[this._3c1].c._T();
            var _kd1 = data._S41[this._3c1]._Z4;
            var _xi1 = data._S41[this._0i1].c._T();
            var _Lh1 = data._S41[this._0i1]._Z4;
            var _yi1 = data._S41[this._1i1].c._T();
            var _Wh1 = data._S41[this._1i1]._Z4;
            var _Sf1 = new _jS(_id1),
                _Tf1 = new _jS(_kd1),
                _ti1 = new _jS(_Lh1),
                _ui1 = new _jS(_Wh1);
            var _5h1 = 0.0;
            var _Hh1, _Ih1;
            var _zi1 = new _DR(),
                _Ai1 = new _DR();
            var _Bi1, _Ci1, _Di1, _Ei1;
            var _NT = 0.0;
            if (this._Fh1 == _B51._Qe1) {
                _zi1._ER();
                _Bi1 = 1.0;
                _Di1 = 1.0;
                _NT += this._ai1 + this._ci1;
                _Hh1 = _id1 - _Lh1 - this._Rh1;
            } else {
                var _W1 = _OS(_ti1, this._Oh1);
                var _vi1 = _OS(_ti1, _DR._KR(this._Mh1, this._4i1));
                var _CX = _OS(_Sf1, _DR._KR(this._hf1, this._2i1));
                _zi1._Zy(_W1);
                _Di1 = _AS(_vi1, _W1);
                _Bi1 = _AS(_CX, _W1);
                _NT += this._8i1 + this._6i1 + this._ci1 * _Di1 * _Di1 + this._ai1 * _Bi1 * _Bi1;
                var _Th1 = _DR._KR(this._Mh1, this._4i1);
                var _QW = _PS(_ti1, _DR._1b(_CX, _DR._KR(_S51, _xi1)));
                _Hh1 = _zS(_DR._KR(_QW, _Th1), this._Oh1);
            }
            if (this._Gh1 == _B51._Qe1) {
                _Ai1._ER();
                _Ci1 = this._Zh1;
                _Ei1 = this._Zh1;
                _NT += this._Zh1 * this._Zh1 * (this._bi1 + this._di1);
                _Ih1 = _kd1 - _Wh1 - this._Xh1;
            } else {
                var _W1 = _OS(_ui1, this._Ph1);
                var _wi1 = _OS(_ui1, _DR._KR(this._Nh1, this._5i1));
                var _DX = _OS(_Tf1, _DR._KR(this._if1, this._3i1));
                _Ai1._Zy(_DR._im(this._Zh1, _W1));
                _Ei1 = this._Zh1 * _AS(_wi1, _W1);
                _Ci1 = this._Zh1 * _AS(_DX, _W1);
                _NT += this._Zh1 * this._Zh1 * (this._9i1 + this._7i1) + this._di1 * _Ei1 * _Ei1 + this._bi1 * _Ci1 * _Ci1;
                var _Yh1 = _DR._KR(this._Nh1, this._5i1);
                var _RW = _PS(_ui1, _DR._1b(_DX, _DR._KR(_U51, _yi1)));
                _Ih1 = _zS(_DR._KR(_RW, _Yh1), this._Ph1);
            }
            var _US = (_Hh1 + this._Zh1 * _Ih1) - this.__h1;
            var _f31 = 0.0;
            if (_NT > 0.0) {
                _f31 = -_US / _NT;
            }
            _S51._1b(_DR._im(this._6i1, _DR._im(_f31, _zi1)));
            _id1 += this._ai1 * _f31 * _Bi1;
            _U51._1b(_DR._im(this._7i1, _DR._im(_f31, _Ai1)));
            _kd1 += this._bi1 * _f31 * _Ci1;
            _xi1._KR(_DR._im(this._8i1, _DR._im(_f31, _zi1)));
            _Lh1 -= this._ci1 * _f31 * _Di1;
            _yi1._KR(_DR._im(this._9i1, _DR._im(_f31, _Ai1)));
            _Wh1 -= this._di1 * _f31 * _Ei1;
            data._S41[this._2c1].c._Zy(_S51);
            data._S41[this._2c1]._Z4 = _id1;
            data._S41[this._3c1].c._Zy(_U51);
            data._S41[this._3c1]._Z4 = _kd1;
            data._S41[this._0i1].c._Zy(_xi1);
            data._S41[this._0i1]._Z4 = _Lh1;
            data._S41[this._1i1].c._Zy(_yi1);
            data._S41[this._1i1]._Z4 = _Wh1;
            return _5h1 < _YQ;
        },
        _RR: function(_SR) {
            var _Sh = _SR || {};
            this.parent.prototype._RR.call(this, _Sh);
            _Sh['joint1'] = this._Dh1._Fi1;
            _Sh['joint2'] = this._Eh1._Fi1;
            _Sh['ratio'] = this._Zh1;
            return _Sh;
        }
    };
    _1f1._jQ(_B51);

    function _Gi1() {
        this.parent.call(this);
        this.type = _B51._Z61;
        this._Hi1 = new _DR();
        this._Ii1 = 0.0;
        this._5g1 = 1.0;
        this._9h1 = 1.0;
        this._Ji1 = 0.3;
        Object.seal(this);
    }
    _Gi1.prototype = {
        _1Y: function(_E61, _F61) {
            this._G51 = _E61;
            this._H51 = _F61;
            var _Ki1 = this._H51._IC();
            this._Hi1._Zy(this._G51._n31(_Ki1));
            var _Li1 = this._G51._kS();
            var _Mi1 = this._H51._kS();
            this._Ii1 = _Mi1 - _Li1;
        },
        _TR: function(data, _L61, _Ie1) {
            this.parent.prototype._TR.call(this, data, _L61, _Ie1);
            this._Hi1._TR(data['linearOffset']);
            this._Ii1 = data['angularOffset'];
            this._5g1 = data['maxForce'];
            this._9h1 = data['maxTorque'];
            this._Ji1 = data['correctionFactor'];
        }
    };
    _Gi1._jQ(_Ge1);

    function _6f1(_H21) {
        this.parent.call(this, _H21);
        this._Ni1 = _H21._Hi1._T();
        this._Oi1 = _H21._Ii1;
        this._ah1 = new _DR();
        this._bh1 = 0.0;
        this._9g1 = _H21._5g1;
        this._ch1 = _H21._9h1;
        this._Pi1 = _H21._Ji1;
        this._2c1 = 0;
        this._3c1 = 0;
        this._tf1 = new _DR();
        this._uf1 = new _DR();
        this._vf1 = new _DR();
        this._wf1 = new _DR();
        this._Qi1 = new _DR();
        this._Ri1 = 0;
        this._xf1 = 0;
        this._yf1 = 0;
        this._zf1 = 0;
        this._Af1 = 0;
        this._dh1 = new _XR();
        this._eh1 = 0;
    }
    _6f1.prototype = {
        _R61: function() {
            return this._E51._IC();
        },
        _S61: function() {
            return this._D51._IC();
        },
        _Je1: function(_K41) {
            return _DR._im(_K41, this._ah1);
        },
        _Ke1: function(_K41) {
            return _K41 * this._bh1;
        },
        _Si1: function(_Hi1) {
            if (_Hi1.x != this._Ni1.x || _Hi1.y != this._Ni1.y) {
                this._E51._uD(true);
                this._D51._uD(true);
                this._Ni1._Zy(_Hi1);
            }
        },
        _071: function() {
            return this._Ni1;
        },
        _Ti1: function(_Ii1) {
            if (_Ii1 != this._Oi1) {
                this._E51._uD(true);
                this._D51._uD(true);
                this._Oi1 = _Ii1;
            }
        },
        _Ui1: function() {
            return this._Oi1;
        },
        _hg1: function(_a31) {
            _PQ(_tR(_a31) && _a31 >= 0.0);
            this._9g1 = _a31;
        },
        _ig1: function() {
            return this._9g1;
        },
        _fh1: function(_d31) {
            _PQ(_tR(_d31) && _d31 >= 0.0);
            this._ch1 = _d31;
        },
        _gh1: function() {
            return this._ch1;
        },
        _Vi1: function(_Wi1) {
            _PQ(_tR(_Wi1) && 0.0 <= _Wi1 && _Wi1 <= 1.0);
            this._Pi1 = _Wi1;
        },
        _Xi1: function() {
            return this._Pi1;
        },
        _me1: function(data) {
            this._2c1 = this._E51._721;
            this._3c1 = this._D51._721;
            this._vf1._Zy(this._E51._g21._qS);
            this._wf1._Zy(this._D51._g21._qS);
            this._xf1 = this._E51._v21;
            this._yf1 = this._D51._v21;
            this._zf1 = this._E51._x21;
            this._Af1 = this._D51._x21;
            var _S51 = data._S41[this._2c1].c._T();
            var _id1 = data._S41[this._2c1]._Z4;
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _U51 = data._S41[this._3c1].c._T();
            var _kd1 = data._S41[this._3c1]._Z4;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _Sf1 = new _jS(_id1),
                _Tf1 = new _jS(_kd1);
            this._tf1._Zy(_OS(_Sf1, this._vf1._HR()));
            this._uf1._Zy(_OS(_Tf1, this._wf1._HR()));
            var _gd1 = this._xf1,
                _hd1 = this._yf1;
            var _U01 = this._zf1,
                _V01 = this._Af1;
            var _Xc1 = new _XR();
            _Xc1._xq.x = _gd1 + _hd1 + _U01 * this._tf1.y * this._tf1.y + _V01 * this._uf1.y * this._uf1.y;
            _Xc1._xq.y = -_U01 * this._tf1.x * this._tf1.y - _V01 * this._uf1.x * this._uf1.y;
            _Xc1._YR.x = _Xc1._xq.y;
            _Xc1._YR.y = _gd1 + _hd1 + _U01 * this._tf1.x * this._tf1.x + _V01 * this._uf1.x * this._uf1.x;
            this._dh1._Zy(_Xc1.__R());
            this._eh1 = _U01 + _V01;
            if (this._eh1 > 0.0) {
                this._eh1 = 1.0 / this._eh1;
            }
            this._Qi1.x = _U51.x + this._uf1.x - _S51.x - this._tf1.x - (_Sf1.c * this._Ni1.x - _Sf1._Cb * this._Ni1.y);
            this._Qi1.y = _U51.y + this._uf1.y - _S51.y - this._tf1.y - (_Sf1._Cb * this._Ni1.x + _Sf1.c * this._Ni1.y);
            this._Ri1 = _kd1 - _id1 - this._Oi1;
            if (data._rQ._O41) {
                this._ah1._im(data._rQ._L41);
                this._bh1 *= data._rQ._L41;
                var _OZ = new _DR(this._ah1.x, this._ah1.y);
                _jd1._KR(_DR._im(_gd1, _OZ));
                _zW -= _U01 * (_AS(this._tf1, _OZ) + this._bh1);
                _ld1._1b(_DR._im(_hd1, _OZ));
                _AW += _V01 * (_AS(this._uf1,
                    _OZ) + this._bh1);
            } else {
                this._ah1._ER();
                this._bh1 = 0.0;
            }
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Ed1: function(data) {
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _gd1 = this._xf1,
                _hd1 = this._yf1;
            var _U01 = this._zf1,
                _V01 = this._Af1;
            var h = data._rQ._J41;
            var _Yi1 = data._rQ._K41; {
                var _Vf1 = _AW - _zW + _Yi1 * this._Pi1 * this._Ri1;
                var _f31 = -this._eh1 * _Vf1;
                var _Wf1 = this._bh1;
                var _Xf1 = h * this._ch1;
                this._bh1 = _4T(this._bh1 + _f31, -_Xf1, _Xf1);
                _f31 = this._bh1 - _Wf1;
                _zW -= _U01 * _f31;
                _AW += _V01 * _f31;
            } {
                var _Vf1 = new _DR(_ld1.x + (-_AW * this._uf1.x) - _jd1.x - (-_zW * this._tf1.x) + _Yi1 * this._Pi1 * this._Qi1.x, _ld1.y + (_AW * this._uf1.y) - _jd1.y - (_zW * this._tf1.y) + _Yi1 * this._Pi1 * this._Qi1.y);
                var _f31 = _DS(this._dh1, _Vf1)._HR();
                var _Wf1 = this._ah1._T();
                this._ah1._1b(_f31);
                var _Xf1 = h * this._9g1;
                if (this._ah1._MR() > _Xf1 * _Xf1) {
                    this._ah1._NR();
                    this._ah1._im(_Xf1);
                }
                _f31._Zy(_DR._KR(this._ah1, _Wf1));
                _jd1._KR(_DR._im(_gd1, _f31));
                _zW -= _U01 * _AS(this._tf1, _f31);
                _ld1._1b(_DR._im(_hd1, _f31));
                _AW += _V01 * _AS(this._uf1, _f31);
            }
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Zd1: function(data) {
            return true;
        },
        _RR: function(_SR) {
            var _Sh = _SR || {};
            this.parent.prototype._RR.call(this, _Sh);
            _Sh['linearOffset'] = this._Ni1._RR();
            _Sh['angularOffset'] = this._Oi1;
            _Sh['maxForce'] = this._9g1;
            _Sh['maxTorque'] = this._ch1;
            _Sh['correctionFactor'] = this._Pi1;
            return _Sh;
        }
    };
    _6f1._jQ(_B51);
    var _Zi1 = 2.0;

    function __i1() {
        this.parent.call(this);
        this.type = _B51._U61;
        this._0j1 = new _DR(-1.0, 1.0);
        this._1j1 = new _DR(1.0, 1.0);
        this._8f1 = new _DR(-1.0, 0.0);
        this._9f1 = new _DR(1.0, 0.0);
        this._2j1 = 0.0;
        this._3j1 = 0.0;
        this._qe1 = 1.0;
        this._I51 = true;
        Object.seal(this);
    }
    __i1.prototype = {
        _1Y: function(_E61, _F61, _4j1, _5j1, _6j1, _7j1, _d3) {
            this._G51 = _E61;
            this._H51 = _F61;
            this._0j1._Zy(_4j1);
            this._1j1._Zy(_5j1);
            this._8f1._Zy(this._G51._n31(_6j1));
            this._9f1._Zy(this._H51._n31(_7j1));
            var _8j1 = _DR._KR(_6j1,
                _4j1);
            this._2j1 = _8j1._LR();
            var _9j1 = _DR._KR(_7j1, _5j1);
            this._3j1 = _9j1._LR();
            this._qe1 = _d3;
            _PQ(this._qe1 > _SQ);
        },
        _TR: function(data, _L61, _Ie1) {
            this.parent.prototype._TR.call(this, data, _L61, _Ie1);
            this._0j1._TR(data['groundAnchorA']);
            this._1j1._TR(data['groundAnchorB']);
            this._8f1._TR(data['localAnchorA']);
            this._9f1._TR(data['localAnchorB']);
            this._2j1 = data['lengthA'];
            this._3j1 = data['lengthB'];
            this._qe1 = data['ratio'];
        }
    };
    __i1._jQ(_Ge1);

    function _0f1(_H21) {
        this.parent.call(this, _H21);
        this._2c1 = 0;
        this._3c1 = 0;
        this._aj1 = new _DR();
        this._bj1 = new _DR();
        this._tf1 = new _DR();
        this._uf1 = new _DR();
        this._vf1 = new _DR();
        this._wf1 = new _DR();
        this._xf1 = 0;
        this._yf1 = 0;
        this._zf1 = 0;
        this._Af1 = 0;
        this._u21 = 0;
        this._cj1 = _H21._0j1._T();
        this._dj1 = _H21._1j1._T();
        this._hf1 = _H21._8f1._T();
        this._if1 = _H21._9f1._T();
        this._ej1 = _H21._2j1;
        this._fj1 = _H21._3j1;
        _PQ(_H21._qe1 != 0.0);
        this._Zh1 = _H21._qe1;
        this.__h1 = _H21._2j1 + this._Zh1 * _H21._3j1;
        this._kf1 = 0.0;
    }
    _0f1.prototype = {
        _R61: function() {
            return this._E51._k31(this._hf1);
        },
        _S61: function() {
            return this._D51._k31(this._if1);
        },
        _Je1: function(_K41) {
            var _OZ = _DR._im(this._kf1, this._bj1);
            return _DR._im(_K41, _OZ);
        },
        _Ke1: function(_K41) {
            return 0.0;
        },
        _W61: function() {
            return this._cj1;
        },
        _X61: function() {
            return this._dj1;
        },
        _gj1: function() {
            return this._ej1;
        },
        _hj1: function() {
            return this._fj1;
        },
        _oi1: function() {
            return this._Zh1;
        },
        _ij1: function() {
            var _6d = this._E51._k31(this._hf1);
            var _Cb = this._cj1;
            var _Cd = _DR._KR(_6d, _Cb);
            return _Cd._LR();
        },
        _jj1: function() {
            var _6d = this._D51._k31(this._if1);
            var _Cb = this._dj1;
            var _Cd = _DR._KR(_6d, _Cb);
            return _Cd._LR();
        },
        _bW: function(_cW) {
            this._cj1._KR(_cW);
            this._dj1._KR(_cW);
        },
        _me1: function(data) {
            this._2c1 = this._E51._721;
            this._3c1 = this._D51._721;
            this._vf1._Zy(this._E51._g21._qS);
            this._wf1._Zy(this._D51._g21._qS);
            this._xf1 = this._E51._v21;
            this._yf1 = this._D51._v21;
            this._zf1 = this._E51._x21;
            this._Af1 = this._D51._x21;
            var _S51 = data._S41[this._2c1].c._T();
            var _id1 = data._S41[this._2c1]._Z4;
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _U51 = data._S41[this._3c1].c._T();
            var _kd1 = data._S41[this._3c1]._Z4;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _Sf1 = new _jS(_id1),
                _Tf1 = new _jS(_kd1);
            this._tf1._Zy(_OS(_Sf1, _DR._KR(this._hf1, this._vf1)));
            this._uf1._Zy(_OS(_Tf1, _DR._KR(this._if1, this._wf1)));
            this._aj1._Zy(_DR._1b(_S51, _DR._KR(this._tf1, this._cj1)));
            this._bj1._Zy(_DR._1b(_U51, _DR._KR(this._uf1, this._dj1)));
            var _2j1 = this._aj1._LR();
            var _3j1 = this._bj1._LR();
            if (_2j1 > 10.0 * _YQ) {
                this._aj1._im(1.0 / _2j1);
            } else {
                this._aj1._ER();
            }
            if (_3j1 > 10.0 * _YQ) {
                this._bj1._im(1.0 / _3j1);
            } else {
                this._bj1._ER();
            }
            var _kj1 = _AS(this._tf1, this._aj1);
            var _lj1 = _AS(this._uf1, this._bj1);
            var _gd1 = this._xf1 + this._zf1 * _kj1 * _kj1;
            var _hd1 = this._yf1 + this._Af1 * _lj1 * _lj1;
            this._u21 = _gd1 + this._Zh1 * this._Zh1 * _hd1;
            if (this._u21 > 0.0) {
                this._u21 = 1.0 / this._u21;
            }
            if (data._rQ._O41) {
                this._kf1 *= data._rQ._L41;
                var _mj1 = _DR._im(-(this._kf1), this._aj1);
                var _nj1 = _DR._im((-this._Zh1 * this._kf1), this._bj1);
                _jd1._1b(_DR._im(this._xf1, _mj1));
                _zW += this._zf1 * _AS(this._tf1, _mj1);
                _ld1._1b(_DR._im(this._yf1, _nj1));
                _AW += this._Af1 * _AS(this._uf1, _nj1);
            } else {
                this._kf1 = 0.0;
            }
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Ed1: function(data) {
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _zg1 = _DR._1b(_jd1, _CS(_zW, this._tf1));
            var _Ag1 = _DR._1b(_ld1, _CS(_AW, this._uf1));
            var _Vf1 = -_zS(this._aj1, _zg1) - this._Zh1 * _zS(this._bj1, _Ag1);
            var _f31 = -this._u21 * _Vf1;
            this._kf1 += _f31;
            var _mj1 = _DR._im(-_f31,
                this._aj1);
            var _nj1 = _DR._im(-this._Zh1, _DR._im(_f31, this._bj1));
            _jd1._1b(_DR._im(this._xf1, _mj1));
            _zW += this._zf1 * _AS(this._tf1, _mj1);
            _ld1._1b(_DR._im(this._yf1, _nj1));
            _AW += this._Af1 * _AS(this._uf1, _nj1);
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Zd1: function(data) {
            var _S51 = data._S41[this._2c1].c._T();
            var _id1 = data._S41[this._2c1]._Z4;
            var _U51 = data._S41[this._3c1].c._T();
            var _kd1 = data._S41[this._3c1]._Z4;
            var _Sf1 = new _jS(_id1),
                _Tf1 = new _jS(_kd1);
            var _CX = _OS(_Sf1, _DR._KR(this._hf1, this._vf1));
            var _DX = _OS(_Tf1, _DR._KR(this._if1, this._wf1));
            var _oj1 = _DR._1b(_S51, _DR._KR(_CX, this._cj1));
            var _pj1 = _DR._1b(_U51, _DR._KR(_DX, this._dj1));
            var _2j1 = _oj1._LR();
            var _3j1 = _pj1._LR();
            if (_2j1 > 10.0 * _YQ) {
                _oj1._im(1.0 / _2j1);
            } else {
                _oj1._ER();
            }
            if (_3j1 > 10.0 * _YQ) {
                _pj1._im(1.0 / _3j1);
            } else {
                _pj1._ER();
            }
            var _kj1 = _AS(_CX, _oj1);
            var _lj1 = _AS(_DX, _pj1);
            var _gd1 = this._xf1 + this._zf1 * _kj1 * _kj1;
            var _hd1 = this._yf1 + this._Af1 * _lj1 * _lj1;
            var _NT = _gd1 + this._Zh1 * this._Zh1 * _hd1;
            if (_NT > 0.0) {
                _NT = 1.0 / _NT;
            }
            var _US = this.__h1 - _2j1 - this._Zh1 * _3j1;
            var _5h1 = _YS(_US);
            var _f31 = -_NT * _US;
            var _mj1 = _DR._im(-_f31, _oj1);
            var _nj1 = _DR._im(-this._Zh1, _DR._im(_f31, _pj1));
            _S51._1b(_DR._im(this._xf1, _mj1));
            _id1 += this._zf1 * _AS(_CX, _mj1);
            _U51._1b(_DR._im(this._yf1, _nj1));
            _kd1 += this._Af1 * _AS(_DX, _nj1);
            data._S41[this._2c1].c._Zy(_S51);
            data._S41[this._2c1]._Z4 = _id1;
            data._S41[this._3c1].c._Zy(_U51);
            data._S41[this._3c1]._Z4 = _kd1;
            return _5h1 < _YQ;
        },
        _RR: function(_SR) {
            var _Sh = _SR || {};
            this.parent.prototype._RR.call(this,
                _Sh);
            _Sh['groundAnchorA'] = this._cj1._RR();
            _Sh['groundAnchorB'] = this._dj1._RR();
            _Sh['localAnchorA'] = this._hf1._RR();
            _Sh['localAnchorB'] = this._if1._RR();
            _Sh['lengthA'] = this._ej1;
            _Sh['lengthB'] = this._fj1;
            _Sh['ratio'] = this._Zh1;
            return _Sh;
        }
    };
    _0f1._jQ(_B51);

    function _qj1() {
        this.parent.call(this);
        this.type = _B51._We1;
        this._8f1 = new _DR(-1.0, 0.0);
        this._9f1 = new _DR(1.0, 0.0);
        this._rj1 = 0.0;
        Object.seal(this);
    }
    _qj1.prototype = {
        _TR: function(data, _L61, _Ie1) {
            this.parent.prototype._TR.call(this, data, _L61, _Ie1);
            this._8f1._TR(data['localAnchorA']);
            this._9f1._TR(data['localAnchorB']);
            this._rj1 = data['maxLength'];
        }
    };
    _qj1._jQ(_Ge1);

    function _5f1(_H21) {
        this.parent.call(this, _H21);
        this._hf1 = _H21._8f1._T();
        this._if1 = _H21._9f1._T();
        this._sj1 = _H21._rj1;
        this._u21 = 0.0;
        this._kf1 = 0.0;
        this._tj1 = _B51._Me1;
        this._rg1 = 0.0;
        this._2c1 = 0;
        this._3c1 = 0;
        this._tg1 = new _DR();
        this._tf1 = new _DR();
        this._uf1 = new _DR();
        this._vf1 = new _DR();
        this._wf1 = new _DR();
        this._xf1 = 0;
        this._yf1 = 0;
        this._zf1 = 0;
        this._Af1 = 0;
    }
    _5f1.prototype = {
        _R61: function() {
            return this._E51._k31(this._hf1);
        },
        _S61: function() {
            return this._D51._k31(this._if1);
        },
        _Je1: function(_K41) {
            var _Z01 = _DR._im((_K41 * this._kf1), this._tg1);
            return _Z01;
        },
        _Ke1: function(_K41) {
            return 0.0;
        },
        _Cf1: function() {
            return this._hf1;
        },
        _Df1: function() {
            return this._if1;
        },
        _uj1: function(length) {
            this._sj1 = length;
        },
        _vj1: function() {
            return this._sj1;
        },
        _wj1: function() {
            return this._tj1;
        },
        _me1: function(data) {
            this._2c1 = this._E51._721;
            this._3c1 = this._D51._721;
            this._vf1._Zy(this._E51._g21._qS);
            this._wf1._Zy(this._D51._g21._qS);
            this._xf1 = this._E51._v21;
            this._yf1 = this._D51._v21;
            this._zf1 = this._E51._x21;
            this._Af1 = this._D51._x21;
            var _S51 = data._S41[this._2c1].c._T();
            var _id1 = data._S41[this._2c1]._Z4;
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _U51 = data._S41[this._3c1].c._T();
            var _kd1 = data._S41[this._3c1]._Z4;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _Sf1 = new _jS(_id1),
                _Tf1 = new _jS(_kd1);
            this._tf1._Zy(_OS(_Sf1, _DR._KR(this._hf1, this._vf1)));
            this._uf1._Zy(_OS(_Tf1, _DR._KR(this._if1, this._wf1)));
            this._tg1._Zy(_DR._KR(_DR._KR(_DR._1b(_U51,
                this._uf1), _S51), this._tf1));
            this._rg1 = this._tg1._LR();
            var _US = this._rg1 - this._sj1;
            if (_US > 0.0) {
                this._tj1 = _B51._Oe1;
            } else {
                this._tj1 = _B51._Me1;
            }
            if (this._rg1 > _YQ) {
                this._tg1._im(1.0 / this._rg1);
            } else {
                this._tg1._ER();
                this._u21 = 0.0;
                this._kf1 = 0.0;
                return;
            }
            var _xj1 = _AS(this._tf1, this._tg1);
            var _yj1 = _AS(this._uf1, this._tg1);
            var _yg1 = this._xf1 + this._zf1 * _xj1 * _xj1 + this._yf1 + this._Af1 * _yj1 * _yj1;
            this._u21 = _yg1 != 0.0 ? 1.0 / _yg1 : 0.0;
            if (data._rQ._O41) {
                this._kf1 *= data._rQ._L41;
                var _OZ = _DR._im(this._kf1, this._tg1);
                _jd1._KR(_DR._im(this._xf1,
                    _OZ));
                _zW -= this._zf1 * _AS(this._tf1, _OZ);
                _ld1._1b(_DR._im(this._yf1, _OZ));
                _AW += this._Af1 * _AS(this._uf1, _OZ);
            } else {
                this._kf1 = 0.0;
            }
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Ed1: function(data) {
            var _jd1 = data._T41[this._2c1]._X1._T();
            var _zW = data._T41[this._2c1].w;
            var _ld1 = data._T41[this._3c1]._X1._T();
            var _AW = data._T41[this._3c1].w;
            var _zg1 = _DR._1b(_jd1, _CS(_zW, this._tf1));
            var _Ag1 = _DR._1b(_ld1, _CS(_AW, this._uf1));
            var _US = this._rg1 - this._sj1;
            var _Vf1 = _zS(this._tg1, _DR._KR(_Ag1, _zg1));
            if (_US < 0.0) {
                _Vf1 += data._rQ._K41 * _US;
            }
            var _f31 = -this._u21 * _Vf1;
            var _Wf1 = this._kf1;
            this._kf1 = _0T(0.0, this._kf1 + _f31);
            _f31 = this._kf1 - _Wf1;
            var _OZ = _DR._im(_f31, this._tg1);
            _jd1._KR(_DR._im(this._xf1, _OZ));
            _zW -= this._zf1 * _AS(this._tf1, _OZ);
            _ld1._1b(_DR._im(this._yf1, _OZ));
            _AW += this._Af1 * _AS(this._uf1, _OZ);
            data._T41[this._2c1]._X1._Zy(_jd1);
            data._T41[this._2c1].w = _zW;
            data._T41[this._3c1]._X1._Zy(_ld1);
            data._T41[this._3c1].w = _AW;
        },
        _Zd1: function(data) {
            var _S51 = data._S41[this._2c1].c._T();
            var _id1 = data._S41[this._2c1]._Z4;
            var _U51 = data._S41[this._3c1].c._T();
            var _kd1 = data._S41[this._3c1]._Z4;
            var _Sf1 = new _jS(_id1),
                _Tf1 = new _jS(_kd1);
            var _CX = _OS(_Sf1, _DR._KR(this._hf1, this._vf1));
            var _DX = _OS(_Tf1, _DR._KR(this._if1, this._wf1));
            var _W1 = _DR._KR(_DR._KR(_DR._1b(_U51, _DX), _S51), _CX);
            var length = _W1._NR();
            var _US = length - this._sj1;
            _US = _4T(_US, 0.0, _3R);
            var _f31 = -this._u21 * _US;
            var _OZ = _DR._im(_f31, _W1);
            _S51._KR(_DR._im(this._xf1, _OZ));
            _id1 -= this._zf1 * _AS(_CX, _OZ);
            _U51._1b(_DR._im(this._yf1, _OZ));
            _kd1 += this._Af1 * _AS(_DX,
                _OZ);
            data._S41[this._2c1].c._Zy(_S51);
            data._S41[this._2c1]._Z4 = _id1;
            data._S41[this._3c1].c._Zy(_U51);
            data._S41[this._3c1]._Z4 = _kd1;
            return length - this._sj1 < _YQ;
        },
        _RR: function(_SR) {
            var _Sh = _SR || {};
            this.parent.prototype._RR.call(this, _Sh);
            _Sh['localAnchorA'] = this._hf1._RR();
            _Sh['localAnchorB'] = this._if1._RR();
            _Sh['maxLength'] = this._sj1;
            return _Sh;
        }
    };
    _5f1._jQ(_B51);
    var _zj1 = Math.exp;

    function _Aj1() {
        this._35 = null;
        this._n4 = 0;
        this._Bj1 = null;
        this.gravity = new _DR();
        this._1G = 0.1;
        this._Cj1 = 0.9;
        this._Dj1 = 0.1;
    }

    function _Ej1() {
        this._AU = 0;
        this._Fj1 = null;
        this._Gj1 = null;
        this._Hj1 = null;
        this._Ij1 = null;
        this._Jj1 = null;
        this._Kj1 = null;
        this._Lj1 = 0;
        this._951 = new _DR();
        this._Mj1 = 1.0;
        this._Nj1 = 0.1;
    }
    _Ej1.prototype = {
        _1Y: function(_H21) {
            _PQ(_H21._n4 >= 3);
            this._AU = _H21._n4;
            this._Fj1 = new Array(this._AU);
            this._Gj1 = new Array(this._AU);
            this._Hj1 = new Array(this._AU);
            this._Ij1 = new Array(this._AU);
            for (var i = 0; i < this._AU; ++i) {
                this._Fj1[i] = _H21._35[i]._T();
                this._Gj1[i] = _H21._35[i]._T();
                this._Hj1[i] = new _DR();
                var __2 = _H21._Bj1[i];
                if (__2 > 0.0) {
                    this._Ij1[i] = 1.0 / __2;
                } else {
                    this._Ij1[i] = 0.0;
                }
            }
            var _0Z = this._AU - 1;
            var _Oj1 = this._AU - 2;
            this._Jj1 = new Array(_0Z);
            this._Kj1 = new Array(_Oj1);
            for (var i = 0; i < _0Z; ++i) {
                var _sT = this._Fj1[i];
                var _tT = this._Fj1[i + 1];
                this._Jj1[i] = _FS(_sT, _tT);
            }
            for (var i = 0; i < _Oj1; ++i) {
                var _sT = this._Fj1[i];
                var _tT = this._Fj1[i + 1];
                var _sV = this._Fj1[i + 2];
                var _jU = _DR._KR(_tT, _sT);
                var _ta1 = _DR._KR(_sV, _tT);
                var _Z4 = _AS(_jU, _ta1);
                var _g3 = _zS(_jU, _ta1);
                this._Kj1[i] = _BR(_Z4, _g3);
            }
            this._951 = _H21.gravity._T();
            this._Lj1 = _H21._1G;
            this._Mj1 = _H21._Cj1;
            this._Nj1 = _H21._Dj1;
        },
        _J51: function(h,
            _xW) {
            if (h == 0.0) {
                return;
            }
            var _Cd = _zj1(-h * this._Lj1);
            for (var i = 0; i < this._AU; ++i) {
                this._Gj1[i]._Zy(this._Fj1[i]);
                if (this._Ij1[i] > 0.0) {
                    this._Hj1[i]._1b(_DR._im(h, this._951));
                }
                this._Hj1[i]._im(_Cd);
                this._Fj1[i]._1b(_DR._im(h, this._Hj1[i]));
            }
            for (var i = 0; i < _xW; ++i) {
                this._Pj1();
                this._Qj1();
                this._Pj1();
            }
            var _Yi1 = 1.0 / h;
            for (var i = 0; i < this._AU; ++i) {
                this._Hj1[i] = _DR._im(_Yi1, _DR._KR(this._Fj1[i], this._Gj1[i]));
            }
        },
        _hU: function() {
            return this._AU;
        },
        _Rj1: function() {
            return this._Fj1;
        },
        _L4: function(_Sj1) {
            var c = new _cT(0.4,
                0.5, 0.7);
            for (var i = 0; i < this._AU - 1; ++i) {
                _Sj1._rT(this._Fj1[i], this._Fj1[i + 1], c);
            }
        },
        _Tj1: function(_E4) {
            var _Oj1 = this._AU - 2;
            for (var i = 0; i < _Oj1; ++i) {
                this._Kj1[i] = _E4;
            }
        },
        _Pj1: function() {
            var _0Z = this._AU - 1;
            for (var i = 0; i < _0Z; ++i) {
                var _sT = this._Fj1[i];
                var _tT = this._Fj1[i + 1];
                var _Cd = _DR._KR(_tT, _sT);
                var _ki1 = _Cd._NR();
                var _Uj1 = this._Ij1[i];
                var _Vj1 = this._Ij1[i + 1];
                if (_Uj1 + _Vj1 == 0.0) {
                    continue;
                }
                var _Jm = _Uj1 / (_Uj1 + _Vj1);
                var _Km = _Vj1 / (_Uj1 + _Vj1);
                _sT._KR(_DR._im(this._Mj1 * _Jm * (this._Jj1[i] - _ki1), _Cd));
                _tT._1b(_DR._im(this._Mj1 * _Km * (this._Jj1[i] - _ki1),
                    _Cd));
            }
        },
        _Qj1: function() {
            var _Oj1 = this._AU - 2;
            for (var i = 0; i < _Oj1; ++i) {
                var _sT = this._Fj1[i];
                var _tT = this._Fj1[i + 1];
                var _sV = this._Fj1[i + 2];
                var _Wj1 = this._Ij1[i];
                var _Xj1 = this._Ij1[i + 1];
                var _Yj1 = this._Ij1[i + 2];
                var _jU = _DR._KR(_tT, _sT);
                var _ta1 = _DR._KR(_sV, _tT);
                var _Zj1 = _jU._MR();
                var __j1 = _ta1._MR();
                if (_Zj1 * __j1 == 0.0) {
                    continue;
                }
                var _Z4 = _AS(_jU, _ta1);
                var _g3 = _zS(_jU, _ta1);
                var _E4 = _BR(_Z4, _g3);
                var _0k1 = _DR._im((-1.0 / _Zj1), _jU._QR());
                var _1k1 = _DR._im((1.0 / __j1), _ta1._QR());
                var _2k1 = _DR._HR(_0k1);
                var _3k1 = _DR._KR(_0k1, _1k1);
                var _4k1 = _1k1;
                var _NT = _Wj1 * _zS(_2k1, _2k1) + _Xj1 * _zS(_3k1, _3k1) + _Yj1 * _zS(_4k1, _4k1);
                if (_NT == 0.0) {
                    continue;
                }
                _NT = 1.0 / _NT;
                var _US = _E4 - this._Kj1[i];
                while (_US > _TQ) {
                    _E4 -= 2 * _TQ;
                    _US = _E4 - this._Kj1[i];
                }
                while (_US < -_TQ) {
                    _E4 += 2.0 * _TQ;
                    _US = _E4 - this._Kj1[i];
                }
                var _f31 = -this._Nj1 * _NT * _US;
                _sT._1b(_DR._im((_Wj1 * _f31), _2k1));
                _tT._1b(_DR._im((_Xj1 * _f31), _3k1));
                _sV._1b(_DR._im((_Yj1 * _f31), _4k1));
            }
        }
    };
    var _5k1 = {
        _6k1: function(_621) {
            var _7k1 = [];
            var i;
            var _8k1;
            var _g3;
            var _dn;
            var _jf;
            for (_g3 = _621._261(); _g3; _g3 = _g3._Q31()) {
                for (_dn = _g3._N31(); _dn; _dn = _dn._Q31()) {
                    _jf = _dn._941();
                    _dn._9k1 = _7k1.length;
                    _7k1.push(_jf._RR());
                }
            }
            var _ak1 = [];
            for (_g3 = _621._261(); _g3; _g3 = _g3._Q31()) {
                _g3._bk1 = [];
                for (_dn = _g3._N31(); _dn; _dn = _dn._Q31()) {
                    _8k1 = _dn._RR();
                    _8k1['shape'] = _dn._9k1;
                    delete _dn._9k1;
                    _g3._bk1.push(_ak1.length);
                    _ak1.push(_8k1);
                }
            }
            var _L61 = [];
            for (_g3 = _621._261(); _g3; _g3 = _g3._Q31()) {
                _8k1 = _g3._RR();
                _8k1._ak1 = [];
                for (i = 0; i < _g3._bk1.length; ++i) _8k1._ak1.push(_g3._bk1[i]);
                delete _g3._bk1;
                _g3._ck1 = _L61.length;
                _L61.push(_8k1);
            };
            var _Ie1 = [];
            var _k3;
            for (_k3 = _621._O31(),
                i = 0; _k3; _k3 = _k3._Q31(), ++i) _k3._Fi1 = i;
            for (_k3 = _621._O31(); _k3; _k3 = _k3._Q31()) {
                if (_k3._ST() === _B51._Y61) continue;
                _8k1 = _k3._RR();
                _8k1['bodyA'] = _k3._P61()._ck1;
                _8k1['bodyB'] = _k3._Q61()._ck1;
                _Ie1.push(_8k1);
            }
            for (_k3 = _621._O31(); _k3; _k3 = _k3._Q31()) delete _k3._Fi1;
            for (_g3 = _621._261(); _g3; _g3 = _g3._Q31()) delete _g3._ck1;
            var _db = {
                _7k1: _7k1,
                _ak1: _ak1,
                _L61: _L61,
                _Ie1: _Ie1
            };
            return _db;
        },
        _dk1: function(_8k1, _621, clear) {
            var _ek1 = JSON.parse(_8k1);
            if (clear) {
                for (var _g3 = _621._261(); _g3;) {
                    var _kc = _g3._Q31();
                    _621._v51(_g3);
                    _g3 = _kc;
                }
                for (var _k3 = _621._O31(); _k3;) {
                    var _kc = _k3._Q31();
                    _621._ME(_k3);
                    _k3 = _kc;
                }
            }
            var _7k1 = [];
            for (var i = 0; i < _ek1._7k1.length; ++i) {
                var _fk1 = _ek1._7k1[i];
                var _jf;
                switch (_fk1._QT) {
                    case _PT._3U:
                        _jf = new _8U();
                        break;
                    case _PT._4U:
                        _jf = new _kU();
                        break;
                    case _PT._6U:
                        _jf = new _yU();
                        break;
                    case _PT._5U:
                        _jf = new _QU();
                        break;
                }
                _jf._TR(_fk1);
                _7k1.push(_jf);
            }
            var _ak1 = [];
            for (i = 0; i < _ek1._ak1.length; ++i) {
                var _gk1 = _ek1._ak1[i];
                var _fD = new _J21();
                _fD._TR(_gk1);
                _fD._jf = _7k1[_gk1['shape']];
                _ak1.push(_fD);
            }
            var _L61 = [];
            for (i = 0; i < _ek1._L61.length;
                ++i) {
                var _hk1 = _ek1._L61[i];
                var _H21 = new _U11();
                _H21._TR(_hk1);
                var body = _621._JD(_H21);
                for (var x = 0; x < _hk1._ak1.length; ++x) body._G21(_ak1[_hk1._ak1[x]]);
                _L61.push(body);
            }
            var _Ie1 = [];
            var _ik1 = [];
            for (i = 0; i < _ek1._Ie1.length; ++i) {
                var _jk1 = _ek1._Ie1[i];
                var _kk1;
                switch (_jk1.type) {
                    case _B51._Qe1:
                        _kk1 = new _7f1();
                        break;
                    case _B51._Re1:
                        _kk1 = new _Bg1();
                        break;
                    case _B51._T61:
                        _kk1 = new _og1();
                        break;
                    case _B51._U61:
                        _kk1 = new __i1();
                        break;
                    case _B51._Se1:
                        _kk1 = new _Ah1();
                        break;
                    case _B51._Te1:
                        _kk1 = new _kh1();
                        break;
                    case _B51._Ue1:
                        _kk1 = new _hh1();
                        break;
                    case _B51._Ve1:
                        _kk1 = new _8h1();
                        break;
                    case _B51._We1:
                        _kk1 = new _qj1();
                        break;
                    case _B51._Z61:
                        _kk1 = new _Gi1();
                        break;
                    default:
                        throw new _ja('unknown joint');
                }
                _kk1._TR(_jk1, _L61);
                if (_jk1.type === _B51._Se1) {
                    _ik1.push([_kk1, _Ie1.length]);
                    _Ie1.push(null);
                } else {
                    var _XD = _621._A51(_kk1);
                    _Ie1.push(_XD);
                }
            }
            for (i = 0; i < _ik1.length; ++i) {
                _ik1[i][0]._Bh1 = _Ie1[_ik1[i][0]._Bh1];
                _ik1[i][0]._Ch1 = _Ie1[_ik1[i][0]._Ch1];
                _XD = _621._A51(_ik1[i][0]);
                _Ie1[_ik1[i][1]] = _XD;
            }
        }
    };
    var _lk1 = (function() {
        function _mk1(_Sh) {
            return new _DR(_Sh ? (_Sh.x || 0) : 0,
                _Sh ? (_Sh.y || 0) : 0);
        }

        function _nk1(_Sh) {
            var _ok1 = new Array(_Sh.x.length);
            for (var i = 0; i < _ok1.length; ++i) _ok1[i] = new _DR(_Sh.x[i], _Sh.y[i]);
            return _ok1;
        }

        function _pk1(_Sh, _qk1) {
            var name = _Sh.name;
            var _y8;
            if (typeof(_Sh['int']) !== 'undefined') _y8 = _Sh['int'];
            else if (typeof(_Sh['float']) !== 'undefined') _y8 = _Sh['float'];
            else if (typeof(_Sh['string']) !== 'undefined') _y8 = _Sh['string'];
            else if (typeof(_Sh['bool']) !== 'undefined') _y8 = _Sh['bool'];
            else if (typeof(_Sh._rk1) !== 'undefined') _y8 = _mk1(_Sh._rk1);
            else throw new _ja("unknown property type");
            if (_qk1.hasOwnProperty(name)) throw new _ja("custom property possibly overwriting an existing one");
            _qk1[name] = _y8;
        }

        function _sk1(_Sh, body) {
            var _H21 = new _J21();
            _H21.__F = _Sh.__F || 0;
            _H21._041._Y31 = typeof(_Sh['filter-categoryBits']) === 'undefined' ? 1 : _Sh['filter-categoryBits'];
            _H21._041._Z31 = typeof(_Sh['filter-maskBits']) === 'undefined' ? 65535 : _Sh['filter-maskBits'];
            _H21._041.__31 = typeof(_Sh['filter-groupIndex']) === 'undefined' ? 0 : _Sh['filter-groupIndex'];
            _H21.friction = _Sh.friction || 0;
            _H21._141 = _Sh._141 || 0;
            _H21._241 = _Sh._a41 || 0;
            var _jf;
            if (typeof(_Sh._fW) !== 'undefined') {
                _jf = new _8U();
                _jf._9U = _mk1(_Sh._fW._oT);
                _jf._RT = _Sh._fW._pF || 0;
            } else if (typeof(_Sh._gW) !== 'undefined') {
                var _35 = _nk1(_Sh._gW._35);
                _jf = new _QU();
                _jf._7b(_35, _35.length);
            } else if (typeof(_Sh._hW) !== 'undefined') {
                var _35 = _nk1(_Sh._hW._35);
                _jf = new _yU();
                _jf._AU = _35.length;
                _jf._zU = _35;
                if (_jf._EU = _Sh._hW._tk1) _jf._CU = _mk1(_Sh._hW._LU);
                if (_jf._DU = _Sh._hW._uk1) _jf._BU = _mk1(_Sh._hW._JU);
            } else throw new _ja("unknown shape type");
            _H21._jf = _jf;
            var _fD = body._G21(_H21);
            _fD.name = _Sh.name;
            if (_Sh._vk1)
                for (var i = 0; i < _Sh._vk1.length; ++i) _pk1(_Sh, _fD);
        }

        function _wk1(_Sh, _621) {
            var _H21 = new _U11();
            _H21.type = _Sh.type || _V11._W11;
            _H21._E4 = _Sh._E4 || 0;
            _H21.__11 = _Sh.__11 || 0;
            _H21._Y11 = _Sh._Y11 || 0;
            _H21._121 = _Sh._121 || false;
            _H21._321 = _Sh._321 || false;
            _H21._221 = _Sh._221 || false;
            _H21._Z11 = _Sh._Z11 || false;
            _H21._X11 = _mk1(_Sh._X11);
            _H21._421 = typeof(_Sh._421) !== 'undefined' ? _Sh._421 : 1;
            var _xk1 = new _MT();
            _xk1._NT = _Sh['massData-mass'] || 0;
            _xk1._oT = _mk1(_Sh['massData-center']);
            _xk1._OT = _Sh['massData-I'] || 0;
            _H21.position = _mk1(_Sh.position);
            var body = _621._JD(_H21);
            body.name = _Sh.name;
            body._j31(_xk1);
            if (_Sh._fD)
                for (var i = 0; i < _Sh._fD.length; ++i) _sk1(_Sh._fD[i], body);
            if (_Sh._vk1)
                for (i = 0; i < _Sh._vk1.length; ++i) _pk1(_Sh, body);
            return body;
        }
        var _yk1 = {
            'revolute': _7f1,
            'distance': _og1,
            'prismatic': _Bg1,
            'wheel': _kh1,
            'rope': _qj1,
            'motor': _Gi1,
            'weld': _hh1,
            'friction': _8h1
        };

        function _zk1(_Sh, _621, _L61) {
            if (!_yk1[_Sh.type]) throw new _ja("unknown joint type");
            var _Ak1 = new _yk1[_Sh.type]();
            switch (_Ak1.type) {
                case _B51._Qe1:
                    _Ak1._8f1 = _mk1(_Sh._6j1);
                    _Ak1._9f1 = _mk1(_Sh._7j1);
                    _Ak1._ff1 = _Sh._ff1 || false;
                    _Ak1._gf1 = _Sh._gf1 || false;
                    _Ak1._bf1 = _Sh._Bk1 || 0;
                    _Ak1._df1 = _Sh._df1 || 0;
                    _Ak1._ef1 = _Sh._ef1 || 0;
                    _Ak1._af1 = _Sh._Ck1 || 0;
                    _Ak1._cf1 = _Sh._Dk1 || 0;
                    break;
                case _B51._T61:
                    _Ak1._8f1 = _mk1(_Sh._6j1);
                    _Ak1._9f1 = _mk1(_Sh._7j1);
                    _Ak1._7g1 = _Sh._7g1 || 0;
                    _Ak1._6g1 = _Sh._Ek1 || 0;
                    _Ak1.length = _Sh.length || 0;
                    break;
                case _B51._Re1:
                    _Ak1._8f1 = _mk1(_Sh._6j1);
                    _Ak1._9f1 = _mk1(_Sh._7j1);
                    _Ak1._ff1 = _Sh._ff1 || false;
                    _Ak1._gf1 = _Sh._gf1 || false;
                    _Ak1._Cg1 = _mk1(_Sh._Cg1);
                    _Ak1._Dg1 = _Sh._Bk1 || 0;
                    _Ak1._Fg1 = _Sh._Fg1 || 0;
                    _Ak1._ef1 = _Sh._ef1 || 0;
                    _Ak1._af1 = _Sh._Ck1 || 0;
                    _Ak1._Eg1 = _Sh._Dk1 || 0;
                    break;
                case _B51._Te1:
                    _Ak1._8f1 = _mk1(_Sh._6j1);
                    _Ak1._9f1 = _mk1(_Sh._7j1);
                    _Ak1._gf1 = _Sh._gf1 || false;
                    _Ak1._Cg1 = _mk1(_Sh._Cg1);
                    _Ak1._df1 = _Sh._df1 || 0;
                    _Ak1._ef1 = _Sh._ef1 || 0;
                    _Ak1._7g1 = _Sh._Fk1 || 0;
                    _Ak1._6g1 = _Sh._Gk1 || 0;
                    break;
                case _B51._We1:
                    _Ak1._8f1 = _mk1(_Sh._6j1);
                    _Ak1._9f1 = _mk1(_Sh._7j1);
                    _Ak1._rj1 = _Sh._rj1 || 0;
                    break;
                case _B51._Z61:
                    _Ak1._Hi1 = _mk1(_Sh._6j1);
                    _Ak1._Ii1 = _Sh._Ck1 || 0;
                    _Ak1._5g1 = _Sh._5g1 || 0;
                    _Ak1._9h1 = _Sh._9h1 || 0;
                    _Ak1._Ji1 = _Sh._Ji1 || 0;
                    break;
                case _B51._Ue1:
                    _Ak1._8f1 = _mk1(_Sh._6j1);
                    _Ak1._9f1 = _mk1(_Sh._7j1);
                    _Ak1._af1 = _Sh._Ck1 || 0;
                    _Ak1._7g1 = _Sh._7g1 || 0;
                    _Ak1._6g1 = _Sh._6g1 || 0;
                    break;
                case _B51._Ve1:
                    _Ak1._8f1 = _mk1(_Sh._6j1);
                    _Ak1._9f1 = _mk1(_Sh._7j1);
                    _Ak1._5g1 = _Sh._5g1 || 0;
                    _Ak1._9h1 = _Sh._9h1 || 0;
                    break;
                default:
                    throw new _ja("wat?");
            }
            _Ak1._G51 = _L61[_Sh._G51 || 0];
            _Ak1._H51 = _L61[_Sh._H51 || 0];
            _Ak1._I51 = _Sh._I51 || false;
            var _XD = _621._A51(_Ak1);
            _XD.name = _Sh.name;
            if (_Sh._vk1)
                for (var i = 0; i < _Sh._vk1.length; ++i) _pk1(_Sh, _XD);
            return _XD;
        }

        function _Hk1() {
            this._621 = null;
            this._N41 = 0;
            this._M41 = 0;
            this._Ik1 = 0;
            this._ak1 = {};
            this._L61 = {};
            this._Ie1 = {};
            Object.seal(this);
        }

        function _Jk1(_Sh, _621) {
            var _0t = new _Hk1();
            _0t._621 = _621 = _621 || new _T21(new _DR(0, 0));
            _0t._N41 = _Sh._N41 || 0;
            _0t._M41 = _Sh._M41 || 0;
            _0t._Ik1 = _Sh._Ik1 || 0;
            if (_Sh.gravity) _621._6D(_mk1(_Sh.gravity));
            _621._361(_Sh._021 || false);
            _621._g61(_Sh._Kk1 || false);
            _621._561(_Sh._O41 || false);
            _621._761(_Sh._Lk1 || false);
            _621._961(_Sh._Mk1 || false);
            var _L61 = [];
            var _Nk1 = _Sh.body;
            if (_Nk1) {
                for (var i = 0; i < _Nk1.length; ++i) {
                    var body = _wk1(_Nk1[i], _621);
                    _L61.push(body);
                    for (var _dn = body._N31(); _dn; _dn = _dn._Q31()) {
                        if (!_0t._ak1[_dn.name]) _0t._ak1[_dn.name] = [];
                        _0t._ak1[_dn.name].push(_dn);
                    }
                    if (!_0t._L61[body.name]) _0t._L61[body.name] = [];
                    _0t._L61[body.name].push(body);
                }
            }
            var _Ie1 = [];
            var _Ok1 = _Sh._XD;
            if (_Ok1) {
                for (i = 0; i < _Ok1.length; ++i) {
                    var _XD = _zk1(_Ok1[i], _621, _L61);
                    _Ie1.push(_XD);
                    if (!_0t._Ie1[_XD.name]) _0t._Ie1[_XD.name] = [];
                    _0t._Ie1[_XD.name].push(_XD);
                }
            }
            return _0t;
        }
        var _db = {
            _Jk1: _Jk1
        };
        return _db;
    })();
    var _Pk1 = [{
        "trimmed": "version",
        "name": "b2_version",
        "def": _sR
    }, {
        "trimmed": "Vec2",
        "name": "b2Vec2",
        "def": _DR
    }, {
        "trimmed": "Vec3",
        "name": "b2Vec3",
        "def": _VR
    }, {
        "trimmed": "Mat22",
        "name": "b2Mat22",
        "def": _XR
    }, {
        "trimmed": "Mat33",
        "name": "b2Mat33",
        "def": _7S
    }, {
        "trimmed": "Rot",
        "name": "b2Rot",
        "def": _jS
    }, {
        "trimmed": "Transform",
        "name": "b2Transform",
        "def": _nS
    }, {
        "trimmed": "Sweep",
        "name": "b2Sweep",
        "def": _pS
    }, {
        "trimmed": "Dot_v2_v2",
        "name": "b2Dot_v2_v2",
        "def": _zS
    }, {
        "trimmed": "Cross_v2_v2",
        "name": "b2Cross_v2_v2",
        "def": _AS
    }, {
        "trimmed": "Cross_v2_f",
        "name": "b2Cross_v2_f",
        "def": _BS
    }, {
        "trimmed": "Cross_f_v2",
        "name": "b2Cross_f_v2",
        "def": _CS
    }, {
        "trimmed": "Mul_m22_v2",
        "name": "b2Mul_m22_v2",
        "def": _DS
    }, {
        "trimmed": "MulT_m22_v2",
        "name": "b2MulT_m22_v2",
        "def": _ES
    }, {
        "trimmed": "Distance",
        "name": "b2Distance",
        "def": _FS
    }, {
        "trimmed": "DistanceSquared",
        "name": "b2DistanceSquared",
        "def": _GS
    }, {
        "trimmed": "Dot_v3_v3",
        "name": "b2Dot_v3_v3",
        "def": _aS
    }, {
        "trimmed": "Cross_v3_v3",
        "name": "b2Cross_v3_v3",
        "def": _bS
    }, {
        "trimmed": "Mul_m22_m22",
        "name": "b2Mul_m22_m22",
        "def": _HS
    }, {
        "trimmed": "MulT_m22_m22",
        "name": "b2MulT_m22_m22",
        "def": _IS
    }, {
        "trimmed": "Mul_m33_v3",
        "name": "b2Mul_m33_v3",
        "def": _JS
    }, {
        "trimmed": "Mul22_m33_v2",
        "name": "b2Mul22_m33_v2",
        "def": _KS
    }, {
        "trimmed": "Mul_r_r",
        "name": "b2Mul_r_r",
        "def": _LS
    }, {
        "trimmed": "MulT_r_r",
        "name": "b2MulT_r_r",
        "def": _NS
    }, {
        "trimmed": "Mul_r_v2",
        "name": "b2Mul_r_v2",
        "def": _OS
    }, {
        "trimmed": "MulT_r_v2",
        "name": "b2MulT_r_v2",
        "def": _PS
    }, {
        "trimmed": "Mul_t_v2",
        "name": "b2Mul_t_v2",
        "def": _QS
    }, {
        "trimmed": "Min_v2",
        "name": "b2Min_v2",
        "def": _1T
    }, {
        "trimmed": "Max_v2",
        "name": "b2Max_v2",
        "def": _3T
    }, {
        "trimmed": "Clamp",
        "name": "b2Clamp",
        "def": _4T
    }, {
        "trimmed": "MulT_t_v2",
        "name": "b2MulT_t_v2",
        "def": _SS
    }, {
        "trimmed": "Mul_t_t",
        "name": "b2Mul_t_t",
        "def": _TS
    }, {
        "trimmed": "MulT_t_t",
        "name": "b2MulT_t_t",
        "def": _VS
    }, {
        "trimmed": "Clamp_v2",
        "name": "b2Clamp_v2",
        "def": _5T
    }, {
        "trimmed": "NextPowerOfTwo",
        "name": "b2NextPowerOfTwo",
        "def": _6T
    }, {
        "trimmed": "Abs_v2",
        "name": "b2Abs_v2",
        "def": _ZS
    }, {
        "trimmed": "Abs_m22",
        "name": "b2Abs_m22",
        "def": __S
    }, {
        "trimmed": "IsPowerOfTwo",
        "name": "b2IsPowerOfTwo",
        "def": _7T
    }, {
        "trimmed": "RandomFloat",
        "name": "b2RandomFloat",
        "def": _9T
    }, {
        "trimmed": "Timer",
        "name": "b2Timer",
        "def": _IT
    }, {
        "trimmed": "Color",
        "name": "b2Color",
        "def": _cT
    }, {
        "trimmed": "Draw",
        "name": "b2Draw",
        "def": _dT
    }, {
        "trimmed": "ContactID",
        "name": "b2ContactID",
        "def": _FX
    }, {
        "trimmed": "ManifoldPoint",
        "name": "b2ManifoldPoint",
        "def": _KX
    }, {
        "trimmed": "Manifold",
        "name": "b2Manifold",
        "def": _PX
    }, {
        "trimmed": "WorldManifold",
        "name": "b2WorldManifold",
        "def": __X
    }, {
        "trimmed": "GetPointStates",
        "name": "b2GetPointStates",
        "def": _iY
    }, {
        "trimmed": "ClipVertex",
        "name": "b2ClipVertex",
        "def": _nY
    }, {
        "trimmed": "RayCastInput",
        "name": "b2RayCastInput",
        "def": _oY
    }, {
        "trimmed": "RayCastOutput",
        "name": "b2RayCastOutput",
        "def": _pY
    }, {
        "trimmed": "AABB",
        "name": "b2AABB",
        "def": _qY
    }, {
        "trimmed": "CollideCircles",
        "name": "b2CollideCircles",
        "def": _FY
    }, {
        "trimmed": "CollidePolygonAndCircle",
        "name": "b2CollidePolygonAndCircle",
        "def": _JY
    }, {
        "trimmed": "FindMaxSeparation",
        "name": "b2FindMaxSeparation",
        "def": _UY
    }, {
        "trimmed": "FindIncidentEdge",
        "name": "b2FindIncidentEdge",
        "def": _6Z
    }, {
        "trimmed": "CollidePolygons",
        "name": "b2CollidePolygons",
        "def": _gZ
    }, {
        "trimmed": "CollideEdgeAndCircle",
        "name": "b2CollideEdgeAndCircle",
        "def": _MZ
    }, {
        "trimmed": "EPAxis",
        "name": "b2EPAxis",
        "def": __Z
    }, {
        "trimmed": "TempPolygon",
        "name": "b2TempPolygon",
        "def": _3_
    }, {
        "trimmed": "ReferenceFace",
        "name": "b2ReferenceFace",
        "def": _4_
    }, {
        "trimmed": "EPCollider",
        "name": "b2EPCollider",
        "def": _7_
    }, {
        "trimmed": "CollideEdgeAndPolygon",
        "name": "b2CollideEdgeAndPolygon",
        "def": _N_
    }, {
        "trimmed": "ClipSegmentToLine",
        "name": "b2ClipSegmentToLine",
        "def": _JZ
    }, {
        "trimmed": "TestShapeOverlap",
        "name": "b2TestShapeOverlap",
        "def": _W_
    }, {
        "trimmed": "TestOverlap",
        "name": "b2TestOverlap",
        "def": _VV
    }, {
        "trimmed": "Shape",
        "name": "b2Shape",
        "def": _PT
    }, {
        "trimmed": "MassData",
        "name": "b2MassData",
        "def": _MT
    }, {
        "trimmed": "CircleShape",
        "name": "b2CircleShape",
        "def": _8U
    }, {
        "trimmed": "EdgeShape",
        "name": "b2EdgeShape",
        "def": _kU
    }, {
        "trimmed": "ChainShape",
        "name": "b2ChainShape",
        "def": _yU
    }, {
        "trimmed": "PolygonShape",
        "name": "b2PolygonShape",
        "def": _QU
    }, {
        "trimmed": "Pair",
        "name": "b2Pair",
        "def": _tV
    }, {
        "trimmed": "PairLessThan",
        "name": "b2PairLessThan",
        "def": _wV
    }, {
        "trimmed": "BroadPhase",
        "name": "b2BroadPhase",
        "def": _zV
    }, {
        "trimmed": "DistanceProxy",
        "name": "b2DistanceProxy",
        "def": _eW
    }, {
        "trimmed": "SimplexCache",
        "name": "b2SimplexCache",
        "def": _kW
    }, {
        "trimmed": "DistanceInput",
        "name": "b2DistanceInput",
        "def": _oW
    }, {
        "trimmed": "DistanceOutput",
        "name": "b2DistanceOutput",
        "def": _uW
    }, {
        "trimmed": "SimplexVertex",
        "name": "b2SimplexVertex",
        "def": _yW
    }, {
        "trimmed": "Simplex",
        "name": "b2Simplex",
        "def": _BW
    }, {
        "trimmed": "DistanceFunc",
        "name": "b2DistanceFunc",
        "def": _nX
    }, {
        "trimmed": "TreeNode",
        "name": "b2TreeNode",
        "def": ___
    }, {
        "trimmed": "DynamicTree",
        "name": "b2DynamicTree",
        "def": _BV
    }, {
        "trimmed": "TOIInput",
        "name": "b2TOIInput",
        "def": _511
    }, {
        "trimmed": "TOIOutput",
        "name": "b2TOIOutput",
        "def": _911
    }, {
        "trimmed": "SeparationFunction",
        "name": "b2SeparationFunction",
        "def": _e11
    }, {
        "trimmed": "TimeOfImpact",
        "name": "b2TimeOfImpact",
        "def": _C11
    }, {
        "trimmed": "BodyDef",
        "name": "b2BodyDef",
        "def": _U11
    }, {
        "trimmed": "Body",
        "name": "b2Body",
        "def": _V11
    }, {
        "trimmed": "Filter",
        "name": "b2Filter",
        "def": _X31
    }, {
        "trimmed": "FixtureDef",
        "name": "b2FixtureDef",
        "def": _J21
    }, {
        "trimmed": "Fixture",
        "name": "b2Fixture",
        "def": _L21
    }, {
        "trimmed": "DestructionListener",
        "name": "b2DestructionListener",
        "def": _m41
    }, {
        "trimmed": "ContactFilter",
        "name": "b2ContactFilter",
        "def": _r41
    }, {
        "trimmed": "ContactImpulse",
        "name": "b2ContactImpulse",
        "def": _v41
    }, {
        "trimmed": "ContactListener",
        "name": "b2ContactListener",
        "def": _y41
    }, {
        "trimmed": "QueryCallback",
        "name": "b2QueryCallback",
        "def": _E41
    }, {
        "trimmed": "RayCastCallback",
        "name": "b2RayCastCallback",
        "def": _H41
    }, {
        "trimmed": "TimeStep",
        "name": "b2TimeStep",
        "def": _I41
    }, {
        "trimmed": "Position",
        "name": "b2Position",
        "def": _P41
    }, {
        "trimmed": "Velocity",
        "name": "b2Velocity",
        "def": _Q41
    }, {
        "trimmed": "SolverData",
        "name": "b2SolverData",
        "def": _R41
    }, {
        "trimmed": "World",
        "name": "b2World",
        "def": _T21
    }, {
        "trimmed": "MixFriction",
        "name": "b2MixFriction",
        "def": _Pb1
    }, {
        "trimmed": "MixRestitution",
        "name": "b2MixRestitution",
        "def": _Sb1
    }, {
        "trimmed": "ContactRegister",
        "name": "b2ContactRegister",
        "def": _Vb1
    }, {
        "trimmed": "ContactEdge",
        "name": "b2ContactEdge",
        "def": _Xb1
    }, {
        "trimmed": "Contact",
        "name": "b2Contact",
        "def": _j61
    }, {
        "trimmed": "CircleContact",
        "name": "b2CircleContact",
        "def": _lc1
    }, {
        "trimmed": "PolygonContact",
        "name": "b2PolygonContact",
        "def": _uc1
    }, {
        "trimmed": "ChainAndCircleContact",
        "name": "b2ChainAndCircleContact",
        "def": _pc1
    }, {
        "trimmed": "ChainAndPolygonContact",
        "name": "b2ChainAndPolygonContact",
        "def": _qc1
    }, {
        "trimmed": "EdgeAndCircleContact",
        "name": "b2EdgeAndCircleContact",
        "def": _rc1
    }, {
        "trimmed": "EdgeAndPolygonContact",
        "name": "b2EdgeAndPolygonContact",
        "def": _sc1
    }, {
        "trimmed": "PolygonAndCircleContact",
        "name": "b2PolygonAndCircleContact",
        "def": _tc1
    }, {
        "trimmed": "defaultFilter",
        "name": "b2_defaultFilter",
        "def": _Ec1
    }, {
        "trimmed": "defaultListener",
        "name": "b2_defaultListener",
        "def": _Fc1
    }, {
        "trimmed": "ContactManager",
        "name": "b2ContactManager",
        "def": _Z41
    }, {
        "trimmed": "VelocityConstraintPoint",
        "name": "b2VelocityConstraintPoint",
        "def": _Kc1
    }, {
        "trimmed": "ContactPositionConstraint",
        "name": "b2ContactPositionConstraint",
        "def": _Oc1
    }, {
        "trimmed": "ContactVelocityConstraint",
        "name": "b2ContactVelocityConstraint",
        "def": _Wc1
    }, {
        "trimmed": "PositionSolverManifold",
        "name": "b2PositionSolverManifold",
        "def": __c1
    }, {
        "trimmed": "ContactSolverDef",
        "name": "b2ContactSolverDef",
        "def": _2d1
    }, {
        "trimmed": "ContactSolver",
        "name": "b2ContactSolver",
        "def": _4d1
    }, {
        "trimmed": "Island",
        "name": "b2Island",
        "def": _e51
    }, {
        "trimmed": "Jacobian",
        "name": "b2Jacobian",
        "def": _Be1
    }, {
        "trimmed": "JointEdge",
        "name": "b2JointEdge",
        "def": _Fe1
    }, {
        "trimmed": "JointDef",
        "name": "b2JointDef",
        "def": _Ge1
    }, {
        "trimmed": "Joint",
        "name": "b2Joint",
        "def": _B51
    }, {
        "trimmed": "RevoluteJointDef",
        "name": "b2RevoluteJointDef",
        "def": _7f1
    }, {
        "trimmed": "RevoluteJoint",
        "name": "b2RevoluteJoint",
        "def": __e1
    }, {
        "trimmed": "MouseJointDef",
        "name": "b2MouseJointDef",
        "def": _4g1
    }, {
        "trimmed": "MouseJoint",
        "name": "b2MouseJoint",
        "def": _Ye1
    }, {
        "trimmed": "DistanceJointDef",
        "name": "b2DistanceJointDef",
        "def": _og1
    }, {
        "trimmed": "DistanceJoint",
        "name": "b2DistanceJoint",
        "def": _Xe1
    }, {
        "trimmed": "PrismaticJointDef",
        "name": "b2PrismaticJointDef",
        "def": _Bg1
    }, {
        "trimmed": "PrismaticJoint",
        "name": "b2PrismaticJoint",
        "def": _Ze1
    }, {
        "trimmed": "FrictionJointDef",
        "name": "b2FrictionJointDef",
        "def": _8h1
    }, {
        "trimmed": "FrictionJoint",
        "name": "b2FrictionJoint",
        "def": _4f1
    }, {
        "trimmed": "WeldJointDef",
        "name": "b2WeldJointDef",
        "def": _hh1
    }, {
        "trimmed": "WeldJoint",
        "name": "b2WeldJoint",
        "def": _3f1
    }, {
        "trimmed": "WheelJointDef",
        "name": "b2WheelJointDef",
        "def": _kh1
    }, {
        "trimmed": "WheelJoint",
        "name": "b2WheelJoint",
        "def": _2f1
    }, {
        "trimmed": "GearJointDef",
        "name": "b2GearJointDef",
        "def": _Ah1
    }, {
        "trimmed": "GearJoint",
        "name": "b2GearJoint",
        "def": _1f1
    }, {
        "trimmed": "MotorJointDef",
        "name": "b2MotorJointDef",
        "def": _Gi1
    }, {
        "trimmed": "MotorJoint",
        "name": "b2MotorJoint",
        "def": _6f1
    }, {
        "trimmed": "PulleyJointDef",
        "name": "b2PulleyJointDef",
        "def": __i1
    }, {
        "trimmed": "PulleyJoint",
        "name": "b2PulleyJoint",
        "def": _0f1
    }, {
        "trimmed": "RopeJointDef",
        "name": "b2RopeJointDef",
        "def": _qj1
    }, {
        "trimmed": "RopeJoint",
        "name": "b2RopeJoint",
        "def": _5f1
    }, {
        "trimmed": "RopeDef",
        "name": "b2RopeDef",
        "def": _Aj1
    }, {
        "trimmed": "Rope",
        "name": "b2Rope",
        "def": _Ej1
    }, {
        "trimmed": "maxManifoldPoints",
        "name": "b2_maxManifoldPoints",
        "def": _UQ
    }, {
        "trimmed": "maxPolygonVertices",
        "name": "b2_maxPolygonVertices",
        "def": _VQ
    }, {
        "trimmed": "aabbExtension",
        "name": "b2_aabbExtension",
        "def": _WQ
    }, {
        "trimmed": "aabbMultiplier",
        "name": "b2_aabbMultiplier",
        "def": _XQ
    }, {
        "trimmed": "linearSlop",
        "name": "b2_linearSlop",
        "def": _YQ
    }, {
        "trimmed": "angularSlop",
        "name": "b2_angularSlop",
        "def": _ZQ
    }, {
        "trimmed": "polygonRadius",
        "name": "b2_polygonRadius",
        "def": __Q
    }, {
        "trimmed": "maxSubSteps",
        "name": "b2_maxSubSteps",
        "def": _0R
    }, {
        "trimmed": "maxTOIContacts",
        "name": "b2_maxTOIContacts",
        "def": _1R
    }, {
        "trimmed": "velocityThreshold",
        "name": "b2_velocityThreshold",
        "def": _2R
    }, {
        "trimmed": "maxLinearCorrection",
        "name": "b2_maxLinearCorrection",
        "def": _3R
    }, {
        "trimmed": "maxAngularCorrection",
        "name": "b2_maxAngularCorrection",
        "def": _4R
    }, {
        "trimmed": "maxTranslation",
        "name": "b2_maxTranslation",
        "def": _5R
    }, {
        "trimmed": "maxTranslationSquared",
        "name": "b2_maxTranslationSquared",
        "def": _6R
    }, {
        "trimmed": "maxRotation",
        "name": "b2_maxRotation",
        "def": _7R
    }, {
        "trimmed": "maxRotationSquared",
        "name": "b2_maxRotationSquared",
        "def": _8R
    }, {
        "trimmed": "baumgarte",
        "name": "b2_baumgarte",
        "def": _9R
    }, {
        "trimmed": "toiBaugarte",
        "name": "b2_toiBaugarte",
        "def": _aR
    }, {
        "trimmed": "timeToSleep",
        "name": "b2_timeToSleep",
        "def": _bR
    }, {
        "trimmed": "linearSleepTolerance",
        "name": "b2_linearSleepTolerance",
        "def": _cR
    }, {
        "trimmed": "angularSleepTolerance",
        "name": "b2_angularSleepTolerance",
        "def": _dR
    }, {
        "trimmed": "epsilon",
        "name": "b2_epsilon",
        "def": _SQ
    }, {
        "trimmed": "JsonSerializer",
        "name": "b2JsonSerializer",
        "def": _5k1
    }, {
        "trimmed": "RUBELoader",
        "name": "b2RUBELoader",
        "def": _lk1
    }, {
        "trimmed": "Profiler",
        "name": "b2Profiler",
        "def": _wQ
    }, {
        "trimmed": "ParticleDef",
        "name": "b2ParticleDef",
        "def": _e81
    }, {
        "trimmed": "ParticleColor",
        "name": "b2ParticleColor",
        "def": _581
    }, {
        "trimmed": "ParticleGroupDef",
        "name": "b2ParticleGroupDef",
        "def": _p81
    }, {
        "trimmed": "ParticleGroup",
        "name": "b2ParticleGroup",
        "def": _s81
    }, {
        "trimmed": "ParticleSystem",
        "name": "b2ParticleSystem",
        "def": _g51
    }];
    if (typeof(_Qk1) !== "undefined" && typeof(window) !== "undefined") {
        for (var i = 0; i < _Pk1.length; ++i) window[_Pk1[i]["name"]] = _Pk1[i]["def"];
    } else {
        var _ks = {};
        for (var i = 0; i < _Pk1.length; ++i) _ks[_Pk1[i]["trimmed"]] = _Pk1[i]["def"];
        if (typeof(_Rk1) !== "undefined") _Rk1._Sk1 = _ks;
        else window["b2"] = _ks;
    }
})();

function _Tk1() {
    var _Uk1 = "#define MATRIX_VIEW 0\n" + "#define MATRIX_PROJECTION 1\n" + "#define MATRIX_WORLD 2\n" + "#define MATRIX_WORLD_VIEW 3\n" + "#define MATRIX_WORLD_VIEW_PROJECTION 4\n" + "#define MATRICES_MAX 5\n" + "#define FOG_SETTINGS 0\n" + "#define FOG_COLOUR 1\n" + "\n" + "uniform mat4 matrices[MATRICES_MAX];\n" + "uniform vec4 fogParameters[2];\n" + "\n" + "attribute vec3 vertex;\n" + "attribute vec4 color;\n" + "attribute vec2 UV;\n" + "\n" + "varying vec4 fcolor;\n" + "varying vec2 texc;\n" + "varying vec4 fogColor;\n" + "varying float fogFactor;\n" + "\n" + "float CalcFogFactor(vec4 pos)\n" + "{\n" + "   vec4 viewpos = matrices[MATRIX_WORLD_VIEW] * pos;\n" + "   vec4 fogParams = fogParameters[FOG_SETTINGS];\n" + " return (1.0 - ((fogParams.z - viewpos.z) * fogParams.y)) * fogParams.x;\n" + "}\n" + "\n" + "void main(void)\n" + "{\n" + "    fcolor = color;\n" + "    texc   = UV;\n" + "    vec4 pos = vec4(vertex.xyz, 1);\n" + "    fogFactor = CalcFogFactor(pos);\n" + "    fogColor = vec4(fogParameters[FOG_COLOUR].xyz, 1);\n" + "    gl_Position = matrices[MATRIX_WORLD_VIEW_PROJECTION] * pos;\n" + "    gl_PointSize = 1.0;\n" + "}";
    return _Uk1;
}

function _Vk1() {
    var _Wk1 = "precision mediump float;\n" + "uniform sampler2D pTexure;\n" + "uniform bool alphaTestEnabled;\n" + "uniform float alphaRefValue;" + "\n" + "varying vec4 fcolor;\n" + "varying vec2 texc;\n" + "varying vec4 fogColor;\n" + "varying float fogFactor;\n" + "\n" + "void DoAlphaTest(vec4 SrcColour)\n" + "{\n" + "    if (alphaTestEnabled)\n" + "    {\n" + "        if (SrcColour.a <= alphaRefValue)\n" + "        {\n" + "         discard;\n" + "        }\n" + "    }\n" + "}\n" + "\n" + "void main(void)\n" + "{\n" + "    vec4 color   = texture2D(pTexure, texc).rgba * fcolor.rgba;\n" + "    DoAlphaTest(color);\n" + "    gl_FragColor = vec4(mix(color.rgb, fogColor.rgb, fogFactor), color.a);\n" + "}\n";
    return _Wk1;
}

function _Xk1() {
    var _Yk1 = "#define LIGHTS_MAX 8\n" + "#define MATRIX_VIEW 0\n" + "#define MATRIX_PROJECTION 1\n" + "#define MATRIX_WORLD 2\n" + "#define MATRIX_WORLD_VIEW 3\n" + "#define MATRIX_WORLD_VIEW_PROJECTION 4\n" + "#define MATRICES_MAX 5\n" + "#define FOG_SETTINGS 0\n" + "#define FOG_COLOUR 1\n" + "\n" + "uniform mat4 matrices[MATRICES_MAX];\n" + "uniform vec4 fogParameters[2];\n" + "\n" + "uniform vec4 dirlightdir[LIGHTS_MAX];\n" + "uniform vec4 pointlightpos[LIGHTS_MAX];\n" + "uniform vec4 lightcol[LIGHTS_MAX];\n" + "uniform vec4 ambientcol;\n" + "\n" + "attribute vec3 vertex;\n" + "attribute vec3 normal;\n" + "attribute vec4 color;\n" + "attribute vec2 UV;\n" + "\n" + "varying vec4 fcolor;\n" + "varying vec2 texc;\n" + "varying vec4 fogColor;\n" + "varying float fogFactor;\n" + "\n" + "float CalcFogFactor(vec4 pos)\n" + "{\n" + "  vec4 viewpos = matrices[MATRIX_WORLD_VIEW] * pos;\n" + "   vec4 fogParams = fogParameters[FOG_SETTINGS];\n" + " return (1.0 - ((fogParams.z - viewpos.z) * fogParams.y)) * fogParams.x;\n" + "}\n" + "\n" + "vec4 DoDirLight(vec3 ws_normal, vec4 dir, vec4 diffusecol)\n" + "{\n" + "    float dotresult = dot(ws_normal, dir.xyz);\n" + "    dotresult = max(0.0, dotresult);\n" + "    return dotresult * diffusecol;\n" + "}\n" + "\n" + "vec4 DoPointLight(vec3 ws_pos, vec3 ws_normal, vec4 posrange, vec4 diffusecol)\n" + "{\n" + " float atten = 0.0;\n" + "\n" + "    vec3 diffvec = ws_pos - posrange.xyz;\n" + "    float veclen = length(diffvec);\n" + "  if (veclen <= posrange.w)\n" + "    {\n" + "        atten = 1.0 / (1.0 + (veclen / posrange.w));\n" + " }\n" + "\n" + " diffvec /= veclen;\n" + "   float dotresult = dot(ws_normal, diffvec);\n" + "   dotresult = max(0.0, dotresult);\n" + "\n" + "  return (diffusecol * dotresult * atten);\n" + "}\n" + "\n" + "vec4 DoLighting(vec4 vertexcolour, vec4 objectspacepos, vec3 objectspacenormal)\n" + "{\n" + "    vec3 ws_normal;\n" + "    vec3 ws_pos;\n" + "    vec4 objectspacenormal4 = vec4(objectspacenormal, 0.0);\n" + "\n" + "    ws_normal = (matrices[MATRIX_WORLD] * objectspacenormal4).xyz;\n" + "    ws_normal = -normalize(ws_normal);\n" + "    ws_pos = (matrices[MATRIX_WORLD] * objectspacepos).xyz;\n" + "\n" + "    vec4 accumcol = vec4(0.0, 0.0, 0.0, 0.0);\n" + "    for(int i = 0; i < LIGHTS_MAX; i++)\n" + "    {\n" + "     accumcol += DoDirLight(ws_normal, dirlightdir[i], lightcol[i]);\n" + "    }\n" + "    for(int i = 0; i < LIGHTS_MAX; i++)\n" + "    {\n" + "        accumcol += DoPointLight(ws_pos, ws_normal, pointlightpos[i], lightcol[i]);\n" + "    }\n" + "    accumcol *= vertexcolour;\n" + "    accumcol += ambientcol;\n" + "    return min(vec4(1.0, 1.0, 1.0, 1.0), accumcol);\n" + "}\n" + "\n" + "void main(void)\n" + "{\n" + "    vec4 pos = vec4(vertex.xyz, 1);\n" + "    vec4 lcolor = DoLighting(color, pos, normal);\n" + "    fcolor = vec4(lcolor.xyz, 1);\n" + "    fogFactor = CalcFogFactor(pos);\n" + "    fogColor = vec4(fogParameters[FOG_COLOUR].xyz, 1);\n" + "    texc = UV;\n" + "    gl_Position = matrices[MATRIX_WORLD_VIEW_PROJECTION] * pos;\n" + "    gl_PointSize = 1.0;\n" + "}";
    return _Yk1;
}

function _Zk1() {
    var _Wk1 = "precision mediump float;\n" + "uniform sampler2D pTexure;\n" + "uniform bool alphaTestEnabled;\n" + "uniform float alphaRefValue;" + "\n" + "varying vec4 fcolor;\n" + "varying vec2 texc;\n" + "varying vec4 fogColor;\n" + "varying float fogFactor;\n" + "\n" + "void DoAlphaTest(vec4 SrcColour)\n" + "{\n" + "    if (alphaTestEnabled)\n" + "    {\n" + "        if (SrcColour.a <= alphaRefValue)\n" + "        {\n" + "         discard;\n" + "        }\n" + "    }\n" + "}\n" + "\n" + "\n" + "void main(void)\n" + "{\n" + "    vec4 color   = texture2D( pTexure, texc ).rgba * fcolor.rgba;\n" + "    DoAlphaTest(color);\n" + "    gl_FragColor = vec4(mix(color.rgb, fogColor.rgb, fogFactor), color.a);\n" + "}\n";
    return _Wk1;
}

function __k1(_0l1, _mP) {
    var _1l1 = null;
    var _2l1 = null,
        _3l1 = null;
    var _4l1 = 0;
    var _5l1, _6l1;
    var _7l1, _8l1, _9l1 = [];
    var _al1, _bl1, _cl1, _dl1;
    var _el1, _fl1;
    Object.defineProperties(this, {
        _sO: {
            get: function() {
                return _1l1;
            }
        },
        _gl1: {
            get: function() {
                return (_1l1 !== null && _1l1 !== undefined);
            }
        },
        _J5: {
            get: function() {
                return _7l1;
            }
        },
        _97: {
            get: function() {
                return _8l1;
            }
        },
        _hl1: {
            get: function() {
                return _5l1;
            }
        },
        _il1: {
            get: function() {
                return _6l1;
            }
        },
        _jl1: {
            get: function() {
                return _al1;
            }
        },
        _kl1: {
            get: function() {
                return _bl1;
            }
        },
        _ll1: {
            get: function() {
                return _cl1;
            },
            set: function(_y8) {
                _cl1 = _y8;
            }
        },
        _ml1: {
            get: function() {
                return _dl1;
            },
            set: function(_y8) {
                _dl1 = _y8;
            }
        }
    });
    (function() {
        _1l1 = _nl1(_0l1, _mP);
        if (_1l1) {
            _ol1(_1l1);
            var _pl1 = _1l1.getParameter(_1l1.MAX_TEXTURE_IMAGE_UNITS);
            _el1 = (_pl1 < _H5._ql1) ? _pl1 : _H5._ql1;
            _fl1 = _1l1.getParameter(_1l1.MAX_TEXTURE_SIZE);
            _3l1 = new _rl1(_mP._sl1);
            _2l1 = new _tl1(_3l1);
            _ul1();
            _vl1();
            _wl1();
            _3l1._3l(_5l1);
        }
    })();

    function _ol1(_xl1) {
        _rl1.prototype._xl1 = _xl1;
        _tl1.prototype._xl1 = _xl1;
        _T6.prototype._xl1 = _xl1;
        _yl1.prototype._xl1 = _xl1;
        _zl1.prototype._xl1 = _xl1;
        _Al1.prototype._xl1 = _xl1;
    };

    function _Bl1() {
        var userAgent = navigator.userAgent.toString().toLowerCase();
        var _Cl1 = userAgent.indexOf("trident/");
        if (_Cl1 >= 0) {
            var version = parseFloat(userAgent.slice(_Cl1 + "trident/".length));
            if (version == 7) {
                return true;
            }
        }
        return false;
    };

    function _nl1(_0l1, _mP) {
        if (_Bl1()) return null;
        var _Dl1 = null;
        var _El1 = ["webgl", "experimental-webgl", "moz-webgl", "webkit-3d"]; {
            for (var i = 0; i < _El1.length; i++) {
                try {
                    var _Fl1 = {
                        alpha: true,
                        stencil: _mP._Gl1,
                        antialias: false,
                        premultipliedAlpha: false,
                        preserveDrawingBuffer: _mP._Hl1
                    };
                    _Dl1 = _0l1.getContext(_El1[i], _Fl1);
                    if (_Dl1) {
                        break;
                    }
                } catch (_xq) {
                    return null;
                }
            }
        }
        if (_Dl1) {
            _al1 = _0l1.width;
            _bl1 = _0l1.height;
            _cl1 = _al1;
            _dl1 = _bl1;
        }
        return _Dl1;
    };

    function _ul1() {
        var _Il1 = new _zl1(),
            _Jl1 = new _zl1();
        _Il1._Kl1();
        _Il1._Ll1();
        _Il1._Ml1();
        _Jl1._Kl1();
        _Jl1._Ll1();
        _Jl1._Ml1();
        _Jl1._Nl1();
        _7l1 = _9l1.push(_Il1) - 1;
        _8l1 = _9l1.push(_Jl1) - 1;
        _2l1._Ol1(_7l1);
        _2l1._Ol1(_8l1);
        _Il1._Pl1 = _Jl1._Pl1 = true;
    };
    this._Ql1 = function(_6L) {
        for (var i in _9l1) {
            if (!_9l1.hasOwnProperty(i)) continue;
            if (_9l1[i]._UR(_6L)) {
                return i;
            }
        }
        var _Rl1 = _9l1.push(_6L) - 1;
        _2l1._Ol1(_Rl1);
        return _Rl1;
    };
    this._V6 = function(_N7) {
        return _9l1[_N7];
    };

    function _Sl1(_Gy) {
        while (((_Gy & 0x1) == 0) && (_Gy > 1)) {
            _Gy >>= 1;
        }
        return (_Gy == 1);
    };
    this._Tl1 = function() {
        return _fl1;
    };
    this._Ul1 = function(_Vl1, _Wl1, _Xl1, _Yl1) {
        _2l1._Zl1();
        _3l1._Ul1(_Vl1, _Wl1, _Xl1, _Yl1);
    };

    function __l1(_0m1, type, source) {
        var _Cb = _1l1.createShader((type == 'vertex') ? _1l1.VERTEX_SHADER : _1l1.FRAGMENT_SHADER);
        _1l1.shaderSource(_Cb, source);
        _1l1.compileShader(_Cb);
        if (!_1l1.getShaderParameter(_Cb, _1l1.COMPILE_STATUS)) {
            alert("Could not compile " + type + " shader:\n\n" + _1l1.getShaderInfoLog(_Cb));
            return;
        }
        _1l1.attachShader(_0m1, _Cb);
    };

    function _vl1() {
        var _Yk1 = _Tk1();
        var _Wk1 = _Vk1();
        var _1m1 = _1l1.createProgram();
        var error = _1l1.getError();
        __l1(_1m1, "vertex", _Yk1);
        __l1(_1m1, "fragment", _Wk1);
        _1l1.linkProgram(_1m1);
        error = _1l1.getError();
        if (!_1l1.getProgramParameter(_1m1, _1l1.LINK_STATUS)) {
            alert("Could not initialise shaders\n\n");
            return false;
        }
        _1l1.useProgram(_1m1);
        _5l1 = _1m1;
        _1m1._2m1 = _1l1.getAttribLocation(_1m1, "vertex");
        _1m1._3m1 = _1l1.getAttribLocation(_1m1,
            "normal");
        _1m1._4m1 = _1l1.getAttribLocation(_1m1, "UV");
        _1m1._5m1 = _1l1.getAttribLocation(_1m1, "color");
        _1m1._6m1 = _1l1.getUniformLocation(_1m1, "pTexure");
        _1m1._7m1 = _1l1.getUniformLocation(_1m1, "matrices");
        _1m1._8m1 = _1l1.getUniformLocation(_1m1, "fogParameters");
        _1m1._9m1 = _1l1.getUniformLocation(_1m1, "alphaTestEnabled");
        _1m1._am1 = _1l1.getUniformLocation(_1m1, "alphaRefValue");
        _1m1._bm1 = [];
        _1m1._bm1.push(_1l1.getAttribLocation(_1m1, "vertex"));
        _1m1._bm1.push(_1l1.getAttribLocation(_1m1, "color"));
        _1m1._bm1.push(_1l1.getAttribLocation(_1m1,
            "UV"));
        return true;
    };

    function _wl1() {
        var _Uk1 = _Xk1();
        var _Wk1 = _Zk1();
        var _1m1 = _1l1.createProgram();
        var error = _1l1.getError();
        __l1(_1m1, "vertex", _Uk1);
        __l1(_1m1, "fragment", _Wk1);
        _1l1.linkProgram(_1m1);
        error = _1l1.getError();
        if (!_1l1.getProgramParameter(_1m1, _1l1.LINK_STATUS)) {
            alert("Could not initialise 3D shader\n\n");
            return false;
        }
        _1l1.useProgram(_1m1);
        _1m1._cm1 = _1l1.getUniformLocation(_1m1, "ViewMatrix");
        _6l1 = _1m1;
        _1m1._2m1 = _1l1.getAttribLocation(_1m1, "vertex");
        _1m1._3m1 = _1l1.getAttribLocation(_1m1, "normal");
        _1m1._4m1 = _1l1.getAttribLocation(_1m1, "UV");
        _1m1._5m1 = _1l1.getAttribLocation(_1m1, "color");
        _1m1._6m1 = _1l1.getUniformLocation(_1m1, "pTexure");
        _1m1._7m1 = _1l1.getUniformLocation(_1m1, "matrices");
        _1m1._dm1 = _1l1.getUniformLocation(_1m1, "dirlightdir");
        _1m1._em1 = _1l1.getUniformLocation(_1m1, "pointlightpos");
        _1m1._fm1 = _1l1.getUniformLocation(_1m1, "lightcol");
        _1m1._gm1 = _1l1.getUniformLocation(_1m1, "ambientcol");
        _1m1._8m1 = _1l1.getUniformLocation(_1m1, "fogParameters");
        _1m1._9m1 = _1l1.getUniformLocation(_1m1,
            "alphaTestEnabled");
        _1m1._am1 = _1l1.getUniformLocation(_1m1, "alphaRefValue");
        _1m1._bm1 = [];
        _1m1._bm1.push(_1l1.getAttribLocation(_1m1, "vertex"));
        _1m1._bm1.push(_1l1.getAttribLocation(_1m1, "normal"));
        _1m1._bm1.push(_1l1.getAttribLocation(_1m1, "color"));
        _1m1._bm1.push(_1l1.getAttribLocation(_1m1, "UV"));
        return true;
    };
    this._hm1 = function(_im1, _jm1, _km1) {
        if (_im1 == "None" || _jm1 == "None") {
            var _lm1 = {
                _mm1: null,
                _nm1: null
            };
            return _lm1;
        }
        var _1m1 = _1l1.createProgram();
        var error = _1l1.getError();
        __l1(_1m1, "vertex", _im1);
        __l1(_1m1, "fragment", _jm1);
        _1l1.linkProgram(_1m1);
        error = _1l1.getError();
        if (!_1l1.getProgramParameter(_1m1, _1l1.LINK_STATUS)) {
            var _lm1 = {
                _mm1: null,
                _nm1: null
            };
            return _lm1;
        }
        _1l1.useProgram(_1m1);
        _1m1._7m1 = _1l1.getUniformLocation(_1m1, "gm_Matrices");
        _1m1._dm1 = _1l1.getUniformLocation(_1m1, "gm_Lights_Direction");
        _1m1._em1 = _1l1.getUniformLocation(_1m1, "gm_Lights_PosRange");
        _1m1._fm1 = _1l1.getUniformLocation(_1m1, "gm_Lights_Colour");
        _1m1._gm1 = _1l1.getUniformLocation(_1m1, "gm_AmbientColour");
        _1m1._2m1 = _1l1.getAttribLocation(_1m1,
            "in_Position");
        _1m1._3m1 = _1l1.getAttribLocation(_1m1, "in_Normal");
        _1m1._4m1 = _1l1.getAttribLocation(_1m1, "in_TextureCoord");
        _1m1._5m1 = _1l1.getAttribLocation(_1m1, "in_Colour");
        _1m1._bm1 = [];
        for (var _om1 = 0; _om1 < _km1.length; _om1++) {
            _1m1._bm1.push(_1l1.getAttribLocation(_1m1, _km1[_om1]));
        }
        var _pm1 = "gm_BaseTexture";
        var _qm1 = [_pm1];
        var _rm1 = 0;
        var _sH = [];
        var _sm1 = _1l1.getUniformLocation(_1m1, _pm1);
        _1l1.uniform1iv(_sm1, [_rm1++]);
        _1m1._6m1 = _sm1;
        _1m1._tm1 = {
            _um1: []
        };
        for (var _W1 = 0, _vm1 = _1l1.getProgramParameter(_1m1,
                _1l1.ACTIVE_UNIFORMS); _W1 < _vm1; _W1++) {
            var _wm1 = _1l1.getActiveUniform(_1m1, _W1),
                _xm1 = _wm1["name"];
            if (_wm1["size"] > 1) {
                var _Q4 = _xm1.indexOf('[');
                if (_Q4 > 0) {
                    _xm1 = _xm1.substring(0, _Q4);
                }
            }
            if ((_wm1["type"] == _1l1.SAMPLER_2D) || (_wm1["type"] == _1l1.SAMPLER_CUBE)) {
                if (_xm1 != _pm1) {
                    _qm1[_rm1] = _xm1;
                    var _om1 = _1l1.getUniformLocation(_1m1, _xm1);
                    _1l1.uniform1iv(_om1, [_rm1++]);
                }
            }
            _1m1._tm1._um1[_W1] = _xm1;
            _1m1._tm1[_xm1] = {
                index: _W1,
                location: _1l1.getUniformLocation(_1m1, _xm1),
                _ym1: _wm1
            };
        }
        _lm1 = {
            _mm1: _1m1,
            _nm1: _qm1
        };
        return _lm1;
    };
    this._zm1 = function() {
        _3l1._JT();
        _4l1++;
    };
    this._Am1 = function() {
        _2l1._Zl1();
        _3l1._61++;
        _3l1._Bm1();
        _1l1.clearColor(1, 1, 1, 1);
        _1l1.colorMask(false, false, false, true);
        _1l1.clear(_1l1.COLOR_BUFFER_BIT);
        _1l1.colorMask(true, true, true, true);
    };
    this._Zl1 = function() {
        _2l1._Zl1();
        _3l1._Bm1();
    };
    this._Cm1 = function(_Za, _fc) {
        _2l1._Zl1();
        _3l1._Cm1(_Za, _fc);
    };
    this._Qk = function(_bw) {
        _2l1._Zl1();
        _3l1._Dm1(_H5._Em1, _bw);
    };
    this._Uk = function(_bw) {
        _2l1._Zl1();
        _3l1._Dm1(_H5._Fm1, _bw);
    };
    this._jl = function(_Gm1) {
        _2l1._Zl1();
        _3l1._Dm1(_H5._Hm1, _Gm1);
    };
    this._Sk = function(_bw) {
        _2l1._Zl1();
        _3l1._Dm1(_H5._Im1, _bw);
    };
    this._Qk = function(_bw) {
        _2l1._Zl1();
        _3l1._Dm1(_H5._Em1, _bw);
    };
    this._0l = function(_Jm1, _Km1, _Lm1, _Mm1) {
        _2l1._Zl1();
        var _Nm1 = {
            _4j: _Jm1,
            _5j: _Km1,
            _6j: _Lm1,
            alpha: _Mm1
        };
        _3l1._Dm1(_H5._Om1, _Nm1);
    };
    this._Ml = function(_F1, _Pm1, _Qm1, _Rm1) {
        _2l1._Zl1();
        _3l1._Ml(_F1, _Pm1, _Qm1, _Rm1);
    };
    this._Ol = function(_F1, _bw, _Sm1) {
        _2l1._Zl1();
        _3l1._Ol(_F1, _bw, _Sm1);
    };
    this._Ql = function(_Sm1) {
        _2l1._Zl1();
        _3l1._Tm1(_Sm1);
    };
    this._Sl = function(_Um1) {
        _2l1._Zl1();
        _3l1._Vm1(_Um1);
    };
    this._Wm1 = function(_1l, _Xm1) {
        _2l1._Zl1();
        _3l1._Wm1(_1l, _Xm1);
    };
    this._Ym1 = function(_pH, _Id) {
        _2l1._Zl1();
        if (_Id) {
            _3l1._Zm1(_pH, _H5.__m1, _H5._0n1);
            _3l1._Zm1(_pH, _H5._1n1, _H5._0n1);
        } else {
            _3l1._Zm1(_pH, _H5.__m1, _H5._2n1);
            _3l1._Zm1(_pH, _H5._1n1, _H5._2n1);
        }
    };
    this._3n1 = function(_pH, _4n1) {
        _2l1._Zl1();
        _3l1._Zm1(_pH, _H5._5n1, _4n1);
        _3l1._Zm1(_pH, _H5._6n1, _4n1);
    };
    this._7n1 = function() {
        return _el1;
    };
    this._8n1 = function(_1l) {
        _2l1._Zl1();
        _3l1._Dm1(_H5._9n1, _1l);
    };
    this._an1 = function(_So) {
        _2l1._Zl1();
        _3l1._Dm1(_H5._bn1, _So);
    };
    this._cn1 = function(_dn1) {
        _2l1._Zl1();
        _3l1._Dm1(_H5._en1, _dn1);
    };
    this._fn1 = function(_gn1) {
        _2l1._Zl1();
        _3l1._Dm1(_H5._hn1, _gn1);
    };
    this._3l = function(_in1) {
        _2l1._Zl1();
        _3l1._3l(_in1);
    };
    this._jn1 = function(_in1, _kn1) {
        var _ln1 = _in1._tm1[_kn1];
        if (_ln1) {
            return _ln1.index;
        }
        return -1;
    };
    this._mn1 = function(_uH, _nn1) {
        if (_uH != -1) {
            _2l1._Zl1();
            _3l1._mn1(_uH, _nn1);
        }
    };
    this._on1 = function(_uH, _nn1) {
        if (_uH != -1) {
            _2l1._Zl1();
            _3l1._on1(_uH, _nn1);
        }
    };
    this._pn1 = function(_uH, _nn1) {
        if (_uH != -1) {
            _2l1._Zl1();
            _3l1._pn1(_uH, _nn1);
        }
    };
    this._qn1 = function(_uH, _nn1) {
        if (_uH != -1) {
            _2l1._Zl1();
            _3l1._qn1(_uH, _nn1);
        }
    };
    this._rn1 = function(_uH, _nn1) {
        if (_uH != -1) {
            _2l1._Zl1();
            _3l1._rn1(_uH, _nn1);
        }
    };
    this._sn1 = function(_Ge) {
        _2l1._Zl1();
        _3l1._sn1(_Ge);
    };
    this._tn1 = function(_j8, _h2, _i2, _0l1) {
        _3l1._tn1(_j8, _h2, _i2, _0l1);
    };
    this._un1 = function(_pH, _j8) {
        _H5._vn1(_j8 instanceof _yl1, "Texture is not a yyGLTexture", _H5._wn1);
        _2l1._Zl1();
        _3l1._un1(_pH, _j8);
    };
    this._bl = function(_yj) {
        _2l1._Zl1();
        _3l1._xn1(_yj);
    };
    this._il = function(_yj) {
        _2l1._Zl1();
        _3l1._yn1(_yj);
    };
    this._zn1 = function(_yj) {
        _2l1._Zl1();
        _3l1._An1(_yj);
    };
    this._Bn1 = function(_Cn1) {
        var _Dn1 = _1l1.getParameter(_1l1.TEXTURE_BINDING_2D);
        var _87 = _1l1.createTexture();
        _1l1.bindTexture(_1l1.TEXTURE_2D, _87);
        _1l1.texImage2D(_1l1.TEXTURE_2D, 0, _1l1.RGBA, _1l1.RGBA, _1l1.UNSIGNED_BYTE, _Cn1);
        var _db = new _yl1(_87, _Cn1.width, _Cn1.height, _Sl1(_Cn1.width) && _Sl1(_Cn1.height));
        _1l1.bindTexture(_1l1.TEXTURE_2D, _Dn1);
        return _db;
    };
    this._En1 = function(_Z6, _Uc, _Fn1, _e7) {
        var _Us = 0;
        if (_Z6) {
            _Us |= _1l1.COLOR_BUFFER_BIT;
        }
        if (_Uc) {
            _Us |= _1l1.DEPTH_BUFFER_BIT
        }
        _3l1._En1(_Us, _e7);
    };
    this._Gn1 = function(_Qh) {
        _2l1._Zl1();
        _3l1._Gn1(_Qh);
    };

    function _Hn1(_In1, _Va, _Wa) {
        if ((_Va == 0) || (_Wa == 0)) {
            return;
        }
        var _Jn1 = _In1[(_Wa - 1) * _Va] & 0xffffff;
        for (i = 0; i < (_Va * _Wa); i++) {
            if ((_In1[i] & 0xffffff) == _Jn1) {
                _In1[i] = _In1[i] & 0xffffff;
            }
        }
    };

    function _Kn1(_l7) {
        var max = _fl1;
        var size = 1;
        while (size <= max) {
            if (_l7 <= size) return size;
            size = size << 1;
        }
        return max;
    };
    this._Ln1 = function(_Cn1, _h2, _i2, _Va, _Wa, _Yg, _Zg, _Mn1) {
        this._Zl1();
        var _Nn1 = new Uint8Array(_Va * _Wa * 4);
        _1l1.readPixels(_h2,
            _dl1 - (_i2 + _Wa), _Va, _Wa, _1l1.RGBA, _1l1.UNSIGNED_BYTE, _Nn1);
        var _On1;
        if (_Mn1) {
            var _Pn1 = new ArrayBuffer(_Va * _Wa * 4);
            _On1 = new Uint8Array(_Pn1);
            for (var _X1 = 0; _X1 < _Wa; _X1++) {
                var _Qn1 = _Nn1.subarray(_X1 * _Va * 4, (_X1 + 1) * _Va * 4);
                var _Rn1 = _On1.subarray((_Wa - 1 - _X1) * _Va * 4, (_Wa - _X1) * _Va * 4);
                _Rn1.set(_Qn1);
            }
            if (_Yg) {
                _Hn1(new Int32Array(_Pn1), _Va, _Wa);
            }
        } else {
            _On1 = _Nn1;
        }
        var w = _Kn1(_Va);
        var h = _Kn1(_Wa);
        var _Dn1 = _1l1.getParameter(_1l1.TEXTURE_BINDING_2D);
        var _87 = _1l1.createTexture();
        _1l1.bindTexture(_1l1.TEXTURE_2D, _87);
        _1l1.texImage2D(_1l1.TEXTURE_2D,
            0, _1l1.RGBA, w, h, 0, _1l1.RGBA, _1l1.UNSIGNED_BYTE, null);
        _1l1.texSubImage2D(_1l1.TEXTURE_2D, 0, 0, 0, _Va, _Wa, _1l1.RGBA, _1l1.UNSIGNED_BYTE, _On1);
        _1l1.texParameteri(_1l1.TEXTURE_2D, _1l1.TEXTURE_MAG_FILTER, _1l1.NEAREST);
        _1l1.texParameteri(_1l1.TEXTURE_2D, _1l1.TEXTURE_MIN_FILTER, _1l1.NEAREST);
        var _db = new _yl1(_87, w, h, (w == _Va) && (h == _Wa));
        _Cn1.width = w;
        _Cn1.height = h;
        _1l1.bindTexture(_1l1.TEXTURE_2D, _Dn1);
        _3l1._JT();
        return _db;
    };
    this._Sn1 = function(_Cn1, _Tn1, _h2, _i2, _Va, _Wa, _Yg, _Zg) {
        this._Zl1();
        var _Un1 = _1l1.getParameter(_1l1.FRAMEBUFFER_BINDING);
        var _Pn1 = new ArrayBuffer(_Va * _Wa * 4);
        var _On1 = new Uint8Array(_Pn1);
        _1l1.bindFramebuffer(_1l1.FRAMEBUFFER, _Tn1);
        _1l1.readPixels(_h2, _i2, _Va, _Wa, _1l1.RGBA, _1l1.UNSIGNED_BYTE, _On1);
        _1l1.bindFramebuffer(_1l1.FRAMEBUFFER, _Un1);
        if (_Yg) {
            _Hn1(new Int32Array(_Pn1), _Va, _Wa);
        }
        var w = _Kn1(_Va);
        var h = _Kn1(_Wa);
        var _Dn1 = _1l1.getParameter(_1l1.TEXTURE_BINDING_2D);
        var _87 = _1l1.createTexture();
        _1l1.bindTexture(_1l1.TEXTURE_2D, _87);
        _1l1.texImage2D(_1l1.TEXTURE_2D, 0, _1l1.RGBA, w, h, 0, _1l1.RGBA, _1l1.UNSIGNED_BYTE, null);
        _1l1.texSubImage2D(_1l1.TEXTURE_2D,
            0, 0, 0, _Va, _Wa, _1l1.RGBA, _1l1.UNSIGNED_BYTE, _On1);
        _1l1.texParameteri(_1l1.TEXTURE_2D, _1l1.TEXTURE_MAG_FILTER, _1l1.NEAREST);
        _1l1.texParameteri(_1l1.TEXTURE_2D, _1l1.TEXTURE_MIN_FILTER, _1l1.NEAREST);
        var _db = new _yl1(_87, w, h, (w == _Va) && (h == _Wa));
        _Cn1.width = w;
        _Cn1.height = h;
        _1l1.bindTexture(_1l1.TEXTURE_2D, _Dn1);
        _3l1._JT();
        return _db;
    };
    this._Vn1 = function(_Cn1, _Wn1, _Va, _Wa) {
        var w = _Kn1(_Va);
        var h = _Kn1(_Wa);
        var _Dn1 = _1l1.getParameter(_1l1.TEXTURE_BINDING_2D);
        var _87 = _1l1.createTexture();
        _1l1.bindTexture(_1l1.TEXTURE_2D,
            _87);
        _1l1.texImage2D(_1l1.TEXTURE_2D, 0, _1l1.RGBA, w, h, 0, _1l1.RGBA, _1l1.UNSIGNED_BYTE, null);
        _1l1.texSubImage2D(_1l1.TEXTURE_2D, 0, 0, 0, _Va, _Wa, _1l1.RGBA, _1l1.UNSIGNED_BYTE, _Wn1);
        _1l1.texParameteri(_1l1.TEXTURE_2D, _1l1.TEXTURE_MAG_FILTER, _1l1.NEAREST);
        _1l1.texParameteri(_1l1.TEXTURE_2D, _1l1.TEXTURE_MIN_FILTER, _1l1.NEAREST);
        var _db = new _yl1(_87, w, h, (w == _Va) && (h == _Wa));
        _Cn1.width = w;
        _Cn1.height = h;
        _1l1.bindTexture(_1l1.TEXTURE_2D, _Dn1);
        _3l1._JT();
        return _db;
    };
    this._Xn1 = function(_Cn1, _Wn1, _Va, _Wa) {
        var _Pn1 = new ArrayBuffer(_Va * _Wa * 4);
        var _Yn1 = new DataView(_Pn1);
        for (var _X2 = 0; _X2 < _Va * _Wa; _X2++) {
            _Yn1.setUint32(_X2 * 4, ~~_Wn1[_X2], true);
        }
        return this._Vn1(_Cn1, new Uint8Array(_Pn1), _Va, _Wa);
    };
    this._Zn1 = function(_j8, __6) {
        _H5._vn1(_j8 instanceof _yl1, "Texture is not a yyGLTexture", _H5._wn1);
        var _87 = _j8.__n1;
        var w = _j8._0o1;
        var h = _j8._1o1;
        var _Un1 = _1l1.getParameter(_1l1.FRAMEBUFFER_BINDING);
        var _2o1 = _1l1.createFramebuffer();
        _1l1.bindFramebuffer(_1l1.FRAMEBUFFER, _2o1);
        _1l1.framebufferTexture2D(_1l1.FRAMEBUFFER, _1l1.COLOR_ATTACHMENT0, _1l1.TEXTURE_2D,
            _87, 0);
        var _On1 = new Uint8Array(w * h * 4);
        _1l1.readPixels(0, 0, w, h, _1l1.RGBA, _1l1.UNSIGNED_BYTE, _On1);
        _1l1.bindFramebuffer(_1l1.FRAMEBUFFER, _Un1);
        _1l1.deleteFramebuffer(_2o1);
        for (var i = 0; i < (w * h); i++) {
            _On1[(i * 4) + 3] = __6[i];
        }
        var _UW = _Kn1(w);
        var _Rs = _Kn1(h);
        var _Dn1 = _1l1.getParameter(_1l1.TEXTURE_BINDING_2D);
        var _3o1 = _1l1.createTexture();
        _1l1.bindTexture(_1l1.TEXTURE_2D, _3o1);
        _1l1.texImage2D(_1l1.TEXTURE_2D, 0, _1l1.RGBA, _UW, _Rs, 0, _1l1.RGBA, _1l1.UNSIGNED_BYTE, null);
        _1l1.texSubImage2D(_1l1.TEXTURE_2D, 0, 0, 0, w, h, _1l1.RGBA,
            _1l1.UNSIGNED_BYTE, _On1);
        _1l1.texParameteri(_1l1.TEXTURE_2D, _1l1.TEXTURE_MAG_FILTER, _1l1.NEAREST);
        _1l1.texParameteri(_1l1.TEXTURE_2D, _1l1.TEXTURE_MIN_FILTER, _1l1.NEAREST);
        var _db = new _yl1(_3o1, _UW, _Rs, (_UW == w) && (_Rs == h));
        _1l1.deleteTexture(_j8.__n1);
        _1l1.bindTexture(_1l1.TEXTURE_2D, _Dn1);
        return _db;
    };
    this._4o1 = function(_h2, _i2) {
        this._Zl1();
        var _On1 = new Uint8Array(16);
        _1l1.readPixels(_h2, _dl1 - _i2, 1, 1, _1l1.RGBA, _1l1.UNSIGNED_BYTE, _On1);
        var _F4 = (_On1[0]) | (_On1[1] << 8) | (_On1[2] << 16) | (_On1[3] << 24);
        _3l1._JT();
        return _F4;
    };
    this._5o1 = function(_Tn1, _h2, _i2) {
        this._Zl1();
        var _Un1 = _1l1.getParameter(_1l1.FRAMEBUFFER_BINDING);
        var _On1 = new Uint8Array(16);
        _1l1.bindFramebuffer(_1l1.FRAMEBUFFER, _Tn1);
        _1l1.readPixels(_h2, _i2, 1, 1, _1l1.RGBA, _1l1.UNSIGNED_BYTE, _On1);
        var _F4 = (_On1[0]) | (_On1[1] << 8) | (_On1[2] << 16) | (_On1[3] << 24);
        _1l1.bindFramebuffer(_1l1.FRAMEBUFFER, _Un1);
        _3l1._JT();
        return _F4;
    };
    this._6o1 = function(_Va, _Wa) {
        var _Dn1 = _1l1.getParameter(_1l1.TEXTURE_BINDING_2D);
        var _Un1 = _1l1.getParameter(_1l1.FRAMEBUFFER_BINDING);
        var _7o1 = _1l1.getParameter(_1l1.RENDERBUFFER_BINDING); {
            var _8o1 = _1l1.createFramebuffer();
            _8o1.width = _Va;
            _8o1.height = _Wa;
            _1l1.bindFramebuffer(_1l1.FRAMEBUFFER, _8o1);
            var _9o1 = _1l1.createTexture();
            _1l1.bindTexture(_1l1.TEXTURE_2D, _9o1);
            _1l1.texImage2D(_1l1.TEXTURE_2D, 0, _1l1.RGBA, _Va, _Wa, 0, _1l1.RGBA, _1l1.UNSIGNED_BYTE, null);
            var _ao1 = new _yl1(_9o1, _Va, _Wa, _Sl1(_Va) && _Sl1(_Wa));
            var _bo1 = _1l1.createRenderbuffer();
            _1l1.bindRenderbuffer(_1l1.RENDERBUFFER, _bo1);
            _1l1.renderbufferStorage(_1l1.RENDERBUFFER, _1l1.DEPTH_STENCIL, _8o1.width, _8o1.height);
            _1l1.framebufferTexture2D(_1l1.FRAMEBUFFER,
                _1l1.COLOR_ATTACHMENT0, _1l1.TEXTURE_2D, _9o1, 0);
            _1l1.framebufferRenderbuffer(_1l1.FRAMEBUFFER, _1l1.DEPTH_STENCIL_ATTACHMENT, _1l1.RENDERBUFFER, _bo1);
        }
        _1l1.bindTexture(_1l1.TEXTURE_2D, _Dn1);
        _1l1.bindFramebuffer(_1l1.FRAMEBUFFER, _Un1);
        _1l1.bindRenderbuffer(_1l1.RENDERBUFFER, _7o1);
        var _co1 = {
            _do1: _8o1,
            _eo1: _bo1,
            __n1: _ao1
        };
        return _co1;
    };
    this._fo1 = function(_Tn1) {
        _1l1.deleteFramebuffer(_Tn1._do1);
        _1l1.deleteRenderbuffer(_Tn1._eo1);
        _1l1.deleteTexture(_Tn1.__n1.__n1);
        _Tn1.__n1 = null;
    };
    this._go1 = function(_j8) {
        _H5._vn1(_j8 instanceof _yl1, "NULL texture is not a yyGLTexture", _H5._wn1);
        _3l1._ho1 = _j8;
    };
    this._G5 = function(_J6, _j8, _N7, _io1) {
        _H5._vn1((_j8 == null) || (_j8 instanceof _yl1), "Texture is not a yyGLTexture", _H5._wn1);
        return _2l1._G5(_J6, _j8, _N7, _io1, _9l1[_N7], _4l1);
    };
    this._k8 = function(_J6, _j8, _jo1, _ko1) {
        _H5._vn1((_j8 == null) || (_j8 instanceof _yl1), "Texture is not a yyGLTexture", _H5._wn1);
        _2l1._lo1(_J6, _j8, _jo1, _ko1);
    };
}
var _H5 = {
    _mo1: 8,
    _ql1: 8,
    _no1: -1,
    _I5: 0,
    _O6: 1,
    _N6: 2,
    _L6: 3,
    _M6: 4,
    _K6: 5,
    _Q7: 1,
    _V7: 2,
    _48: 3,
    _28: 4,
    _oo1: 5,
    _po1: 6,
    _qo1: 7,
    _ro1: 8,
    _so1: 9,
    _to1: 10,
    _uo1: 11,
    _vo1: 12,
    _wo1: 13,
    _xo1: 14,
    _yo1: 14,
    _68: 1,
    _R7: 2,
    _T7: 3,
    _a8: 4,
    _W7: 5,
    _c8: 6,
    _zo1: 6,
    _Ao1: 1,
    _Bo1: 2,
    _Co1: 3,
    _Do1: 4,
    _Eo1: 5,
    _Fo1: 6,
    _Go1: 7,
    _Ho1: 8,
    _Io1: 9,
    _Jo1: 10,
    _Ko1: 11,
    _Lo1: 12,
    _Mo1: 13,
    _No1: 14,
    _Oo1: 15,
    _Po1: 16,
    _Qo1: 16,
    _Ro1: 0,
    _Em1: 1,
    _So1: 2,
    _Im1: 3,
    _To1: 4,
    _Uo1: 5,
    _Vo1: 6,
    _Fm1: 7,
    _Wo1: 8,
    _Xo1: 9,
    _Yo1: 10,
    _Zo1: 11,
    _Om1: 12,
    _9n1: 13,
    __o1: 14,
    _0p1: 15,
    _en1: 16,
    _bn1: 17,
    _hn1: 18,
    _1p1: 19,
    _2p1: 20,
    _Hm1: 21,
    _3p1: 21,
    _4p1: 1,
    _5p1: 2,
    _6p1: 3,
    _7p1: 4,
    _8p1: 5,
    _9p1: 6,
    _ap1: 7,
    _bp1: 8,
    _cp1: 1,
    _dp1: 2,
    _ep1: 3,
    _fp1: 4,
    _gp1: 5,
    _hp1: 6,
    _ip1: 7,
    _jp1: 8,
    _0n1: 0,
    _2n1: 1,
    _5n1: 0,
    _6n1: 1,
    __m1: 2,
    _1n1: 3,
    _kp1: 0,
    _lp1: 1,
    _ll: 0,
    _kl: 1,
    _mp1: 0,
    _np1: 1,
    _wn1: 2,
    _vn1: function(_op1, _pp1, _qp1) {
        if (!_op1) {
            throw new _ja(_pp1);
        }
    }
};
Object.freeze(_H5);

function _rl1(_rp1) {
    var _1l1 = this._xl1;
    var _sp1 = 0,
        _tp1 = 1,
        _up1 = 2,
        _vp1 = 3,
        _wp1 = 4,
        _xp1 = 5,
        _yp1 = 6,
        _zp1 = 7,
        _Ap1 = 8,
        _Bp1 = 9,
        _Cp1 = 10,
        _Dp1 = 11,
        _Ep1 = 12,
        _Fp1 = 13,
        _Gp1 = 14,
        _Hp1 = 15,
        _Ip1 = 16,
        _Jp1 = 17,
        _Kp1 = 18,
        _Lp1 = 19,
        _Mp1 = 20,
        _Np1 = 21,
        _Op1 = 22,
        _Pp1 = 23,
        _Qp1 = 24,
        _Rp1 = 25,
        _Sp1 = 26,
        _Tp1 = 27;
    var _Up1 = 0,
        _Vp1 = 1,
        _Wp1 = 2,
        _Xp1 = 3,
        _Yp1 = 4,
        _Zp1 = 5;
    var __p1 = 1,
        _0q1 = 2,
        _1q1 = 4,
        _2q1 = 8;
    var _3q1 = [];
    var _4q1 = [],
        _5q1, _6q1;
    var _7q1, _8q1 = [],
        _9q1 = [],
        _aq1 = [],
        _bq1 = new Float32Array(_H5._mo1 * 4),
        _cq1 = new Float32Array(_H5._mo1 * 4),
        _dq1 = new Float32Array(_H5._mo1 * 4),
        _eq1 = new Float32Array(4),
        _fq1 = new Float32Array(8),
        _gq1 = false,
        _hq1 = 0.0,
        _iq1;
    var _4l1 = 0,
        _jq1;
    Object.defineProperties(this, {
        _61: {
            get: function() {
                return _4l1;
            },
            set: function(_y8) {
                _4l1 = _y8;
            }
        },
        _ho1: {
            get: function() {
                return _jq1;
            },
            set: function(_y8) {
                _jq1 = _y8;
            }
        }
    });
    (function() {
        _kq1();
        var _pl1 = _1l1.getParameter(_1l1.MAX_TEXTURE_IMAGE_UNITS);
        if (_pl1 > _H5._ql1) {
            _pl1 = _H5._ql1;
        }
        for (var _rm1 = 0; _rm1 < _pl1; _rm1++) {
            _aq1[_rm1] = new _Al1(_rp1);
        }
        var _lq1 = _mq1(_H5._4p1);
        _iq1 = {
            _sp: 0,
            _aK: 0xffffffff,
            _nq1: 0xffffffff,
            _oO: _oq1(_H5._jp1),
            _pq1: _lq1,
            _qq1: _lq1,
            _rq1: _lq1
        };
        for (var i = 0; i < _Zp1; i++) {
            _9q1[i] = new _6l();
        }
        _1l1.disable(_1l1.CULL_FACE);
        _1l1.disable(_1l1.DEPTH_TEST);
        _1l1.depthFunc(_1l1.LEQUAL);
        _1l1.enable(_1l1.BLEND);
        _1l1.enable(_1l1.SCISSOR_TEST);
        _1l1.blendFunc(_1l1.SRC_ALPHA, _1l1.ONE_MINUS_SRC_ALPHA);
        _1l1.activeTexture(_1l1.TEXTURE0);
        _1l1.frontFace(_1l1.CW);
        _1l1.cullFace(_1l1.BACK);
    })();

    function _kq1() {
        _4q1 = [];
        _6q1 = undefined;
        _5q1 = undefined;
        _4q1[0] = 1;
        _4q1[1] = 1;
    };
    this._JT = function() {
        _kq1();
    };
    this._3l = function(_sq1) {
        if (_sq1 != _5q1) {
            _6q1 = null;
            _3q1.push(_Jp1);
            _3q1.push(_sq1);
            _5q1 = _sq1;
        }
    };
    this._un1 = function(_pH, _j8) {
        if (_4q1[_pH] == _j8) {
            return;
        }
        _4q1[_pH] = _j8;
        _3q1.push(_tp1);
        _3q1.push(_j8);
        _3q1.push(_pH);
    };
    this._sn1 = function(_He) {
        _3q1.push(_He);
    };
    this._tn1 = function(_j8, _h2, _i2, _0l1) {
        _3q1.push(_Tp1);
        _3q1.push(_j8);
        _3q1.push(_h2);
        _3q1.push(_i2);
        _3q1.push(_0l1);
    };
    this._tq1 = function(_uq1) {
        if (_6q1 == _uq1) return;
        _6q1 = _uq1;
        _3q1.push(_Ep1);
        _3q1.push(_uq1);
    };
    this._vq1 = function(_wq1, _xq1) {
        _3q1.push(_up1);
        _3q1.push(_wq1);
        _3q1.push(_xq1);
    };
    this._yq1 = function(_wq1, _xq1) {
        _3q1.push(_vp1);
        _3q1.push(_wq1);
        _3q1.push(_xq1);
    };
    this._zq1 = function(_wq1, _xq1) {
        _3q1.push(_wp1);
        _3q1.push(_wq1);
        _3q1.push(_xq1);
    };
    this._Aq1 = function(_wq1, _xq1) {
        _3q1.push(_xp1);
        _3q1.push(_wq1);
        _3q1.push(_xq1);
    };
    this._Bq1 = function(_wq1, _xq1) {
        _3q1.push(_yp1);
        _3q1.push(_wq1);
        _3q1.push(_xq1);
    };
    this.__61 = function(_wq1,
        _xq1) {
        _3q1.push(_zp1);
        _3q1.push(_wq1);
        _3q1.push(_xq1);
    };
    this._yn1 = function(_yj) {
        _3q1.push(_Bp1);
        _3q1.push(new _6l(_yj));
    };
    this._xn1 = function(_yj) {
        _3q1.push(_Cp1);
        _Cq1 = new _6l(_yj);
        _3q1.push(new _6l(_yj));
    };
    this._An1 = function(_yj) {
        _3q1.push(_Ap1);
        _3q1.push(new _6l(_yj));
    };
    this._Ul1 = function(_h2, _i2, _Va, _Wa) {
        _3q1.push(_Dp1);
        _3q1.push(_h2);
        _3q1.push(_i2);
        _3q1.push(_Va);
        _3q1.push(_Wa);
    };
    this._En1 = function(_Eq, _e7) {
        _3q1.push(_Fp1);
        _3q1.push(_Eq);
        _3q1.push(~~_e7);
    };
    this._Gn1 = function(_Dq1) {
        _3q1.push(_Gp1);
        _3q1.push(_Dq1);
    };
    this._Eq1 = function(__6, _Ku, _Lu, _Mu) {
        _3q1.push(_Hp1);
        _3q1.push(__6);
        _3q1.push(_Ku);
        _3q1.push(_Lu);
        _3q1.push(_Mu);
    };
    this._Cm1 = function(_Za, _fc) {
        _3q1.push(_Ip1);
        _3q1.push(_Za);
        _3q1.push(_fc);
    };
    this._mn1 = function(_Fq1, _nn1) {
        _3q1.push(_Kp1);
        _3q1.push(_Fq1);
        _3q1.push(_nn1);
    };
    this._on1 = function(_Fq1, _nn1) {
        _3q1.push(_Lp1);
        _3q1.push(_Fq1);
        _3q1.push(_nn1);
    };
    this._qn1 = function(_Fq1, _nn1) {
        _3q1.push(_Kp1);
        _3q1.push(_Fq1);
        _3q1.push(_nn1);
    };
    this._rn1 = function(_Fq1, _nn1) {
        _3q1.push(_Lp1);
        _3q1.push(_Fq1);
        _3q1.push(_nn1);
    };
    this._pn1 = function(_Fq1, _nn1) {
        _3q1.push(_Lp1);
        _3q1.push(_Fq1);
        _3q1.push(_nn1);
    };
    this._Dm1 = function(_Gq1, _Hq1) {
        _3q1.push(_Mp1);
        _3q1.push(_Gq1);
        _3q1.push(_Hq1);
    };
    this._Zm1 = function(_pH, _Iq1, _Jq1) {
        _3q1.push(_Np1);
        _3q1.push(_pH);
        _3q1.push(_Iq1);
        _3q1.push(_Jq1);
    };
    this._Ml = function(_Q4, _Kq1, _Lq1, _Mq1) {
        _3q1.push(_Op1);
        _3q1.push(_Q4);
        _3q1.push(new Float32Array(_Kq1));
        _3q1.push(new Float32Array(_Lq1));
        _3q1.push(new Float32Array(_Mq1));
    };
    this._Tm1 = function(colour) {
        _3q1.push(_Pp1);
        _3q1.push(new Float32Array(colour));
    };
    this._Vm1 = function(_Nq1) {
        _3q1.push(_Qp1);
        _3q1.push(new Float32Array(_Nq1));
    };
    this._Ol = function(_Q4, enable, colour) {
        _3q1.push(_Rp1);
        _3q1.push(_Q4);
        _3q1.push(enable);
        _3q1.push(colour);
    };
    this._Wm1 = function(_1l, _Oq1) {
        _3q1.push(_Sp1);
        _3q1.push(_1l);
        _3q1.push(_Oq1);
    };

    function _Pq1(_qe) {
        switch (_qe) {
            case _H5._Ao1:
                return _1l1.ZERO;
            case _H5._Bo1:
                return _1l1.ONE;
            case _H5._Co1:
                return _1l1.SRC_COLOR;
            case _H5._Do1:
                return _1l1.ONE_MINUS_SRC_COLOR;
            case _H5._Eo1:
                return _1l1.SRC_ALPHA;
            case _H5._Fo1:
                return _1l1.ONE_MINUS_SRC_ALPHA;
            case _H5._Go1:
                return _1l1.ONE_MINUS_DST_ALPHA;
            case _H5._Ho1:
                return _1l1.DST_ALPHA;
            case _H5._Io1:
                return _1l1.DST_COLOR;
            case _H5._Jo1:
                return _1l1.ONE_MINUS_DST_COLOR;
            case _H5._Ko1:
                return _1l1.SRC_ALPHA_SATURATE;
            case _H5._Lo1:
                return 0;
            case _H5._Mo1:
                return 0;
            case _H5._No1:
                return 0;
            case _H5._Oo1:
                return 0;
            case _H5._Po1:
                return 0;
            case _H5._Qo1:
                return 0;
        }
        return 0;
    }

    function _mq1(_qe) {
        switch (_qe) {
            case _H5._4p1:
                return _1l1.KEEP;
            case _H5._5p1:
                return _1l1.ZERO;
            case _H5._6p1:
                return _1l1.REPLACE;
            case _H5._7p1:
                return _1l1.INCR;
            case _H5._8p1:
                return _1l1.DECR;
            case _H5._9p1:
                return _1l1.INVERT;
            case _H5._ap1:
                return _1l1.INCR;
            case _H5._bp1:
                return _1l1.DECR;
            default:
                return _1l1.KEEP;
        }
    }

    function _oq1(_qe) {
        switch (_qe) {
            case _H5._cp1:
                return _1l1.NEVER;
            case _H5._dp1:
                return _1l1.LESS;
            case _H5._ep1:
                return _1l1.EQUAL;
            case _H5._fp1:
                return _1l1.LEQUAL;
            case _H5._gp1:
                return _1l1.GREATER;
            case _H5._hp1:
                return _1l1.NOTEQUAL;
            case _H5._ip1:
                return _1l1.GEQUAL;
            case _H5._jp1:
            default:
                return _1l1.ALWAYS;
        }
    }

    function _Qq1(_Gq1, _Hq1) {
        switch (_Gq1) {
            case _H5._Em1:
                if (_Hq1) {
                    _1l1.enable(_1l1.DEPTH_TEST);
                } else {
                    _1l1.disable(_1l1.DEPTH_TEST);
                }
                break;
            case _H5._Im1:
                _1l1.depthMask(_Hq1);
                break;
            case _H5._Hm1:
                _1l1.frontFace((_Hq1 === _H5._ll) ? _1l1.CW : _1l1.CCW);
                break;
            case _H5._Fm1:
                if (_Hq1) {
                    _1l1.enable(_1l1.CULL_FACE);
                } else {
                    _1l1.disable(_1l1.CULL_FACE);
                }
                break;
            case _H5._Om1:
                _1l1.colorMask(_Hq1._4j, _Hq1._5j, _Hq1._6j, _Hq1.alpha);
                break;
            case _H5._9n1:
                if (_Hq1) {
                    _1l1.enable(_1l1.STENCIL_TEST);
                } else {
                    _1l1.disable(_1l1.STENCIL_TEST);
                }
                break;
            case _H5.__o1:
                _iq1._pq1 = _mq1(_Hq1);
                _1l1.stencilOp(_iq1._pq1, _iq1._qq1, _iq1._rq1);
                break;
            case _H5._0p1:
                _iq1._qq1 = _mq1(_Hq1);
                _1l1.stencilOp(_iq1._pq1,
                    _iq1._qq1, _iq1._rq1);
                break;
            case _H5._en1:
                _iq1._rq1 = _mq1(_Hq1);
                _1l1.stencilOp(_iq1._pq1, _iq1._qq1, _iq1._rq1);
                break;
            case _H5._bn1:
                _iq1._oO = _oq1(_Hq1);
                _1l1.stencilFunc(_iq1._oO, _iq1._sp, _iq1._aK);
                break;
            case _H5._hn1:
                _iq1._sp = _Hq1;
                _1l1.stencilFunc(_iq1._oO, _iq1._sp, _iq1._aK);
                break;
            case _H5._1p1:
                _iq1._aK = _Hq1;
                _1l1.stencilFunc(_iq1._oO, _iq1._sp, _iq1._aK);
                break;
            case _H5._2p1:
                _1l1.stencilMask(_Hq1);
                break;
        }
    }

    function _Rq1() {
        if (_7q1 && _7q1._7m1) {
            _9q1[_Xp1]._im(_9q1[_Wp1], _9q1[_Up1]);
            _9q1[_Yp1]._im(_9q1[_Xp1], _9q1[_Vp1]);
            var _Sq1 = new Float32Array(16 * _Zp1);
            for (var i = 0; i < _Zp1; i++) {
                _Sq1.set(_9q1[i].__2, i * 16);
            }
            _1l1.uniformMatrix4fv(_7q1._7m1, _1l1._Tq1, _Sq1);
        }
    }

    function _Uq1(_Vq1) {
        if (_Vq1 & _2q1) {
            if (_7q1._9m1 !== undefined) {
                _1l1.uniform1i(_7q1._9m1, _gq1);
            }
            if (_7q1._am1 !== undefined) {
                _1l1.uniform1f(_7q1._am1, _hq1);
            }
        }
        if ((_Vq1 & __p1) && (_7q1._8m1 !== undefined)) {
            _1l1.uniform4fv(_7q1._8m1, _fq1);
        }
        if (_Vq1 & _0q1) {
            if (_7q1._em1 !== undefined) {
                _1l1.uniform4fv(_7q1._em1, _bq1);
            }
            if (_7q1._dm1 !== undefined) {
                _1l1.uniform4fv(_7q1._dm1, _cq1);
            }
            if (_7q1._fm1 !== undefined) {
                _1l1.uniform4fv(_7q1._fm1, _dq1);
            }
        }
        if ((_Vq1 & _1q1) && (_7q1._gm1 !== undefined)) {
            _1l1.uniform4fv(_7q1._gm1, _eq1);
        }
    }

    function _Wq1(_j8, _pH) {
        if (_j8 === null || _j8 === undefined) {
            return;
        }
        var _Xq1 = _aq1[_pH];
        if (_Xq1 === null || _Xq1 === undefined) {
            return;
        }
        var _Yq1 = _Xq1._Zq1;
        var __q1 = _j8._0r1._Zq1;
        if (_Yq1[_H5._5n1] != __q1[_H5._5n1]) {
            _1l1.texParameteri(_1l1.TEXTURE_2D, _1l1.TEXTURE_MAG_FILTER, (_Yq1[_H5._5n1] == _H5._kp1) ? _1l1.LINEAR : _1l1.NEAREST);
            __q1[_H5._5n1] = _Yq1[_H5._5n1];
        }
        if (_Yq1[_H5._6n1] != __q1[_H5._6n1]) {
            _1l1.texParameteri(_1l1.TEXTURE_2D,
                _1l1.TEXTURE_MIN_FILTER, (_Yq1[_H5._6n1] == _H5._kp1) ? _1l1.LINEAR : _1l1.NEAREST);
            __q1[_H5._6n1] = _Yq1[_H5._6n1];
        }
        if (_Yq1[_H5.__m1] != __q1[_H5.__m1]) {
            if (_j8._1r1) {
                var _2r1 = (_Yq1[_H5.__m1] == _H5._2n1) ? _1l1.CLAMP_TO_EDGE : _1l1.REPEAT;
                _1l1.texParameteri(_1l1.TEXTURE_2D, _1l1.TEXTURE_WRAP_S, _2r1);
            } else {
                debug("WARNING: Non-pow2 texture for TEXTURE_WRAP_S");
            }
            __q1[_H5.__m1] = _Yq1[_H5.__m1];
        }
        if (_Yq1[_H5._1n1] != __q1[_H5._1n1]) {
            if (_j8._1r1) {
                var _2r1 = (_Yq1[_H5._1n1] == _H5._2n1) ? _1l1.CLAMP_TO_EDGE : _1l1.REPEAT;
                _1l1.texParameteri(_1l1.TEXTURE_2D,
                    _1l1.TEXTURE_WRAP_T, _2r1);
            } else {
                debug("WARNING: Non-pow2 texture for TEXTURE_WRAP_T");
            }
            __q1[_H5._1n1] = _Yq1[_H5._1n1];
        }
    }

    function _tq1(_3r1) {
        _1l1.bindBuffer(_1l1.ARRAY_BUFFER, _3r1._4r1);
        var _5r1 = _3r1._6r1;
        if (_5r1._Pl1 === true) {
            var _7r1, _8r1, _9r1, _ar1 = _5r1._B7.length;
            for (_7r1 = 0; _7r1 < _ar1; ++_7r1) {
                _9r1 = _5r1._B7[_7r1];
                switch (_7r1) {
                    case 0:
                        _8r1 = _7q1._2m1;
                        break;
                    case 1:
                        _8r1 = _7q1._5m1;
                        break;
                    case 2:
                        _8r1 = _7q1._4m1;
                        break;
                    case 3:
                        _8r1 = _7q1._3m1;
                        break;
                    default:
                        _8r1 = -1;
                        break;
                }
                if (_8r1 >= 0) {
                    _1l1.enableVertexAttribArray(_8r1);
                    _1l1.vertexAttribPointer(_8r1, _9r1._br1, _9r1._cr1, _9r1._dr1, _5r1._H7, _9r1.offset);
                }
            }
        } else {
            var _7r1, _8r1, _9r1, _ar1 = _5r1._B7.length;
            for (_7r1 = 0; _7r1 < _ar1; ++_7r1) {
                _9r1 = _5r1._B7[_7r1];
                _8r1 = _7q1._bm1[_7r1];
                if (_8r1 >= 0) {
                    _1l1.enableVertexAttribArray(_8r1);
                    _1l1.vertexAttribPointer(_8r1, _9r1._br1, _9r1._cr1, _9r1._dr1, _5r1._H7, _9r1.offset);
                }
            }
        }
    }
    this._Bm1 = function() {
        var i, error, _Cp, _sH, _er1, _rm1, _T1, _F5, _Q4, _F4, enable, _fr1, _ln1;
        i = 0;
        while (i < _3q1.length) {
            switch (_3q1[i]) {
                case _Jp1:
                    {
                        _7q1 = _3q1[i + 1];
                        _fr1 = _7q1._tm1;
                        i += 2;
                        _1l1.useProgram(_7q1);
                        _Rq1();
                        _Uq1(0xff);
                        break;
                    }
                case _Dp1:
                    {
                        _1l1.viewport(_3q1[i + 1], _3q1[i + 2], _3q1[i + 3], _3q1[i + 4]);
                        _1l1.scissor(_3q1[i + 1], _3q1[i + 2], _3q1[i + 3], _3q1[i + 4]);
                        i += 5;
                        break;
                    }
                case _Fp1:
                    {
                        _F4 = _3q1[i + 2];
                        _1l1.clearColor((_F4 & 0xff) / 255.0, ((_F4 >> 8) & 0xff) / 255.0, ((_F4 >> 16) & 0xff) / 255.0, ((_F4 >> 24) & 0xff) / 255.0);
                        _1l1.clear(_3q1[i + 1]);
                        i += 3;
                        break;
                    }
                case _Bp1:
                    {
                        _9q1[_Vp1] = _3q1[i + 1];
                        _Rq1();
                        i += 2;
                        break;
                    }
                case _Cp1:
                    {
                        _9q1[_Up1] = _3q1[i + 1];
                        _Rq1();
                        i += 2;
                        break;
                    }
                case _Ap1:
                    {
                        _9q1[_Wp1] = _3q1[i + 1];
                        _Rq1();
                        i += 2;
                        break;
                    }
                case _tp1:
                    {
                        _T1 = _3q1[i + 1];
                        _rm1 = _3q1[i + 2];
                        i += 3;
                        if (_T1 === null) {
                            _T1 = _jq1;
                            _1l1.activeTexture(_1l1.TEXTURE0 + _rm1);
                            _1l1.bindTexture(_1l1.TEXTURE_2D, _T1.__n1);
                            _1l1.uniform1i(_7q1._6m1, 0);
                            _8q1[_rm1] = null;
                        } else {
                            _1l1.activeTexture(_1l1.TEXTURE0 + _rm1);
                            _1l1.bindTexture(_1l1.TEXTURE_2D, _T1.__n1);
                            _1l1.uniform1i(_7q1._6m1, 0);
                            _Wq1(_T1, _rm1);
                            _8q1[_rm1] = _T1;
                        }
                        break;
                    }
                case _Ep1:
                    {
                        _F5 = _3q1[i + 1];
                        i += 2;
                        if (_F5._gr1) {
                            _F5._hr1();
                        }
                        _F5._ir1 = this._61;
                        _tq1(_F5);
                    }
                    break;
                case _up1:
                    {
                        _1l1.drawArrays(_1l1.TRIANGLES, _3q1[i + 1], _3q1[i + 2]);
                        i += 3;
                        break;
                    }
                case _vp1:
                    {
                        _1l1.drawArrays(_1l1.TRIANGLE_FAN,
                            _3q1[i + 1], _3q1[i + 2]);
                        i += 3;
                        break;
                    }
                case _wp1:
                    {
                        _1l1.drawArrays(_1l1.TRIANGLE_STRIP, _3q1[i + 1], _3q1[i + 2]);
                        i += 3;
                        break;
                    }
                case _xp1:
                    {
                        _1l1.drawArrays(_1l1.LINES, _3q1[i + 1], _3q1[i + 2]);
                        i += 3;
                        break;
                    }
                case _yp1:
                    {
                        _1l1.drawArrays(_1l1.LINE_STRIP, _3q1[i + 1], _3q1[i + 2]);
                        i += 3;
                        break;
                    }
                case _zp1:
                    {
                        _1l1.drawArrays(_1l1.POINTS, _3q1[i + 1], _3q1[i + 2]);
                        i += 3;
                        break;
                    }
                case _Gp1:
                    {
                        _1l1.bindFramebuffer(_1l1.FRAMEBUFFER, _3q1[i + 1]);
                        i += 2;
                        break;
                    }
                case _Hp1:
                    {
                        _1l1.colorMask(_3q1[i + 2], _3q1[i + 3], _3q1[i + 4], _3q1[i + 1]);
                        i += 5;
                        break;
                    }
                case _Ip1:
                    {
                        _1l1.blendFunc(_Pq1(_3q1[i + 1]),
                            _Pq1(_3q1[i + 2]));
                        i += 3;
                        break;
                    }
                case _Mp1:
                    {
                        _Qq1(_3q1[i + 1], _3q1[i + 2]);
                        i += 3;
                        break;
                    }
                case _Kp1:
                    {
                        _Cp = _3q1[i + 1];
                        _sH = _3q1[i + 2];
                        i += 3;
                        _ln1 = _fr1[_fr1._um1[_Cp]];
                        switch (_ln1._ym1["type"]) {
                            case _1l1._jr1:
                                _1l1.uniform1fv(_ln1.location, _sH);
                                break;
                            case _1l1._kr1:
                                _1l1.uniform2fv(_ln1.location, _sH);
                                break;
                            case _1l1._lr1:
                                _1l1.uniform3fv(_ln1.location, _sH);
                                break;
                            case _1l1._mr1:
                                _1l1.uniform4fv(_ln1.location, _sH);
                                break;
                        }
                        break;
                    }
                case _Lp1:
                    {
                        _Cp = _3q1[i + 1];
                        _sH = _3q1[i + 2];
                        i += 3;
                        _ln1 = _fr1[_fr1._um1[_Cp]];
                        switch (_ln1._ym1["type"]) {
                            case _1l1.FLOAT:
                                _1l1.uniform1fv(_ln1.location,
                                    _sH);
                                break;
                            case _1l1.FLOAT_VEC2:
                                _1l1.uniform2fv(_ln1.location, _sH);
                                break;
                            case _1l1.FLOAT_VEC3:
                                _1l1.uniform3fv(_ln1.location, _sH);
                                break;
                            case _1l1.FLOAT_VEC4:
                                _1l1.uniform4fv(_ln1.location, _sH);
                                break;
                            case _1l1.FLOAT_MAT2:
                                _1l1.uniformMatrix2fv(_ln1.location, false, _sH);
                                break;
                            case _1l1.FLOAT_MAT3:
                                _1l1.uniformMatrix3fv(_ln1.location, false, _sH);
                                break;
                            case _1l1.FLOAT_MAT4:
                                _1l1.uniformMatrix4fv(_ln1.location, false, _sH);
                                break;
                        }
                        break;
                    }
                case _Np1:
                    {
                        _rm1 = _3q1[i + 1];
                        var _Kz = _3q1[i + 2];
                        var _nr1 = _3q1[i + 3];
                        i += 4;
                        var _Xq1 = _aq1[_rm1];
                        _Xq1._Zq1[_Kz] = _nr1;
                        _Wq1(_8q1[_rm1], _rm1);
                        break;
                    }
                case _Op1:
                    {
                        _Q4 = _3q1[i + 1];
                        _bq1.set(_3q1[i + 2], _Q4 * 4);
                        _cq1.set(_3q1[i + 3], _Q4 * 4);
                        _dq1.set(_3q1[i + 4], _Q4 * 4);
                        i += 5;
                        _Uq1(_0q1);
                        break;
                    }
                case _Pp1:
                    {
                        _eq1.set(_3q1[i + 1]);
                        i += 2;
                        _Uq1(_1q1);
                        break;
                    }
                case _Qp1:
                    {
                        _fq1.set(_3q1[i + 1]);
                        i += 2;
                        _Uq1(__p1);
                        break;
                    }
                case _Rp1:
                    {
                        _Q4 = _3q1[i + 1];
                        enable = _3q1[i + 2];
                        _F4 = _3q1[i + 3];
                        i += 4;
                        if (enable) {
                            _dq1.set(_F4, _Q4 * 4);
                        } else {
                            var _Fl = _Q4 * 4;
                            _dq1[_Fl + 0] = 0;
                            _dq1[_Fl + 1] = 0;
                            _dq1[_Fl + 2] = 0;
                            _dq1[_Fl + 3] = 0;
                        }
                        _Uq1(_0q1);
                        break;
                    }
                case _Sp1:
                    {
                        _gq1 = _3q1[i + 1];
                        _hq1 = _3q1[i + 2];
                        i += 3;
                        _Uq1(_2q1);
                        break;
                    }
                case _Tp1:
                    {
                        _T1 = _3q1[i + 1];
                        var _l3 = _3q1[i + 2];
                        var _n3 = _3q1[i + 3];
                        var canvas = _3q1[i + 4];
                        i += 5;
                        _1l1.activeTexture(_1l1.TEXTURE0);
                        _1l1.bindTexture(_1l1.TEXTURE_2D, _T1.__n1);
                        _1l1.texSubImage2D(_1l1.TEXTURE_2D, 0, _l3, _n3, _1l1.RGBA, _1l1.UNSIGNED_BYTE, canvas);
                        if (_8q1.length > 0) {
                            _1l1.bindTexture(_1l1.TEXTURE_2D, _8q1[0].__n1);
                        }
                        break;
                    }
            }
        }
        _3q1.length = 0;
    }
}

function _yl1(_or1, _j4, _k4, _pr1) {
    var _1l1 = this._xl1;
    var _qr1, _rr1, _rG, _tG, _sr1;
    Object.defineProperties(this, {
        _0r1: {
            get: function() {
                return _qr1;
            }
        },
        __n1: {
            get: function() {
                return _rr1;
            }
        },
        _0o1: {
            get: function() {
                return _rG;
            }
        },
        _1o1: {
            get: function() {
                return _tG;
            }
        },
        _1r1: {
            get: function() {
                return _sr1;
            }
        }
    });
    (function() {
        _rr1 = _or1;
        _rG = _j4;
        _tG = _k4;
        _sr1 = _pr1;
        _qr1 = new _Al1();
        _qr1._tr1(_1l1.TEXTURE_2D);
    })();
}

function _Al1(_rp1) {
    var _1l1 = this._xl1;
    var _ur1 = [];
    Object.defineProperties(this, {
        _Zq1: {
            get: function() {
                return _ur1;
            }
        }
    });
    (function() {
        if (_rp1) {
            _ur1[_H5._5n1] = _H5._kp1;
            _ur1[_H5._6n1] = _H5._kp1;
        } else {
            _ur1[_H5._5n1] = _H5._lp1;
            _ur1[_H5._6n1] = _H5._lp1;
        }
        _ur1[_H5.__m1] = _H5._2n1;
        _ur1[_H5._1n1] = _H5._2n1;
    })();
    this._tr1 = function(_Qh) {
        var _vr1 = _ur1;
        _1l1.texParameteri(_Qh, _1l1.TEXTURE_MAG_FILTER, (_vr1[_H5._5n1] == _H5._kp1) ? _1l1.LINEAR : _1l1.NEAREST);
        _1l1.texParameteri(_Qh, _1l1.TEXTURE_MIN_FILTER, (_vr1[_H5._6n1] == _H5._kp1) ? _1l1.LINEAR : _1l1.NEAREST);
        _1l1.texParameteri(_Qh, _1l1.TEXTURE_WRAP_S, (_vr1[_H5.__m1] == _H5._2n1) ? _1l1.CLAMP_TO_EDGE : _1l1.REPEAT);
        _1l1.texParameteri(_Qh, _1l1.TEXTURE_WRAP_T, (_vr1[_H5._1n1] == _H5._2n1) ? _1l1.CLAMP_TO_EDGE : _1l1.REPEAT);
    };
}

function _T6(_l7, _wr1, _xr1) {
    var _1l1 = this._xl1;
    this._yr1;
    this._77;
    this._4r1;
    this._O5;
    this._Q5;
    this._d7;
    this._S5;
    this._6r1 = _wr1;
    this._ir1 = -1;
    this._M5 = 0;
    this._zr1 = _l7;
    this._gr1 = false;
    _Ar1(this);

    function _Ar1(_MB) {
        _Br1(_MB);
        _Cr1(_MB);
        if (_xr1) {
            _Dr1(_MB);
        }
    }

    function _Br1(_MB) {
        var _Er1 = _MB._6r1._H7;
        _MB._yr1 = new ArrayBuffer(_l7 * _Er1);
        _MB._77 = new Int8Array(_MB._yr1);
    }

    function _Dr1(_MB) {
        _MB._4r1 = _1l1.createBuffer();
        _1l1.bindBuffer(_1l1.ARRAY_BUFFER, _MB._4r1);
        _1l1.bufferData(_1l1.ARRAY_BUFFER, _MB._77, _1l1.DYNAMIC_DRAW);
    }

    function _Cr1(_MB) {
        var _Fr1 = _MB._6r1._B7;
        for (var _X2 = 0; _X2 < _Fr1.length; _X2++) {
            var _9r1 = _Fr1[_X2];
            switch (_9r1._D7) {
                case _H5._Q7:
                    _MB._O5 = _Gr1(_9r1._cr1, _MB._yr1, _9r1.offset);
                    break;
                case _H5._V7:
                    _MB._Q5 = _Gr1(_9r1._cr1, _MB._yr1, _9r1.offset);
                    break;
                case _H5._48:
                    _MB._d7 = _Gr1(_9r1._cr1, _MB._yr1, _9r1.offset);
                    break;
                case _H5._28:
                    _MB._S5 = _Gr1(_9r1._cr1, _MB._yr1, _9r1.offset);
                    break;
            }
        }
    }

    function _Gr1(_Hr1, _Ir1, _Jr1) {
        switch (_Hr1) {
            case _1l1.UNSIGNED_BYTE:
                return (new Int32Array(_Ir1, _Jr1));
                break;
            case _1l1.FLOAT:
                return (new Float32Array(_Ir1, _Jr1));
                break;
        }
        return false;
    }
    this._Kr1 = function(_jo1) {
        if (_jo1._L5() === this._L5()) {
            var _f8 = _jo1._M5 * _jo1._L5();
            var offset = this._M5 * this._L5();
            if ((offset + _f8) > this._77.length) {
                var _Lr1 = new ArrayBuffer(this._77.length * 2);
                var _67 = new Int8Array(_Lr1);
                _67.set(this._77);
                this._77 = _67;
                this._yr1 = _Lr1;
                _Cr1(this);
            }
            this._77.set(_jo1._77.subarray(0, _f8), offset);
            this._M5 += _jo1._M5;
        }
    };
    this._d8 = function() {
        if (this._M5 < this.max) {
            var _f8 = this._M5 * this._L5();
            var _Mr1 = new ArrayBuffer(_f8);
            var _Nr1 = new Int8Array(_Mr1);
            _Nr1.set(this._77.subarray(0, _f8));
            this._77 = _Nr1;
            this._yr1 = _Mr1;
        }
        this._4r1 = _1l1.createBuffer();
        _1l1.bindBuffer(_1l1.ARRAY_BUFFER, this._4r1);
        _1l1.bufferData(_1l1.ARRAY_BUFFER, this._77, _1l1.STATIC_DRAW);
        this._O5 = null;
        this._Q5 = null;
        this._d7 = null;
        this._S5 = null;
    };
    this._W6 = function(_Or1) {
        if ((this._M5 + _Or1) > this.max) {
            var _Pr1 = this.max * 2;
            this.max = _Pr1;
            var _J7 = new ArrayBuffer(_Pr1);
            var _L7 = new Int8Array(_J7);
            _L7.set(this._77);
            this._yr1 = _J7;
            _Cr1(this);
        }
        this._M5 += _Or1;
    };
    this._L5 = function() {
        return this._6r1._H7;
    };
    this._hr1 = function() {
        _1l1.bindBuffer(_1l1.ARRAY_BUFFER, this._4r1);
        var _Qr1 = new Int8Array(this._yr1, 0, this._M5 * this._6r1._H7);
        _1l1.bufferSubData(_1l1.ARRAY_BUFFER, 0, _Qr1);
        this._M5 = 0;
        this._gr1 = false;
    };
}

function _tl1(_Rr1) {
    var _1l1 = this._xl1;
    var _Sr1 = [];
    var _Tr1 = 0,
        _4q1 = null,
        _Ur1 = null,
        _Vr1 = _H5._no1,
        _5q1 = null;
    var _Wr1 = _Rr1;
    this._Ol1 = function(_N7) {
        if (_Sr1[_N7]) {
            debug("WARNING: Vertex format has already been registered\n");
        } else {
            _Sr1[_N7] = new _Nb();
        }
    };
    this._lo1 = function(_J6, _j8, _jo1, _ko1) {
        var size = _jo1._M5 - _ko1;
        switch (_J6) {
            case _H5._I5:
                _Wr1._un1(0, _j8);
                _Wr1._tq1(_jo1);
                _Wr1._vq1(_ko1,
                    size);
                break;
            case _H5._O6:
                _Wr1._un1(0, _j8);
                _Wr1._tq1(_jo1);
                _Wr1._yq1(_ko1, size);
                break;
            case _H5._N6:
                _Wr1._un1(0, _j8);
                _Wr1._tq1(_jo1);
                _Wr1._zq1(_ko1, size);
                break;
            case _H5._L6:
                _Wr1._un1(0, null);
                _Wr1._tq1(_jo1);
                _Wr1._Aq1(_ko1, size);
                break;
            case _H5._M6:
                _Wr1._un1(0, null);
                _Wr1._tq1(_jo1);
                _Wr1._Bq1(_ko1, size);
                break;
            case _H5._K6:
                _Wr1._un1(0, null);
                _Wr1._tq1(_jo1);
                _Wr1.__61(_ko1, size);
                break;
        }
    };
    this._Zl1 = function() {
        if (_Ur1 == null) return;
        this._lo1(_Vr1, _4q1, _Ur1, _Tr1);
        _Ur1 = _4q1 = null;
        _Vr1 = _H5._no1;
    };
    this._G5 = function(_J6,
        _Xr1, _N7, _Yr1, _wr1, _Zr1) {
        var i, __r1, _F5, _O1;
        _O1 = _Xr1;
        if (_Ur1 != null) {
            if ((_Ur1._Rl1 == _N7) && ((_Ur1._M5 + _Yr1) <= _Ur1._zr1) && (_4q1 == _O1) && (_Vr1 == _J6) && ((_J6 != _H5._M6) && (_J6 != _H5._N6) && (_J6 != _H5._O6))) {
                return _Ur1;
            } else {
                var _0s1 = _Ur1;
                this._Zl1();
                if ((_0s1._Rl1 == _N7) && ((_0s1._M5 + _Yr1) <= _0s1._zr1)) {
                    _Ur1 = _0s1;
                    _Tr1 = _0s1._M5;
                    _Vr1 = _J6;
                    _4q1 = _O1;
                    return _Ur1;
                }
            }
        }
        _Vr1 = _J6;
        _4q1 = _O1;
        __r1 = _Sr1[_N7]._4c;
        for (i = __r1.length - 1; i >= 0; i--) {
            _F5 = __r1[i];
            if ((_F5._ir1 != _Zr1) && (_F5._M5 + _Yr1) <= _F5._zr1) {
                _F5._gr1 = true;
                _Tr1 = _F5._M5;
                _Ur1 = _F5;
                return _F5;
            }
        }
        if (_Yr1 < _U6) {
            _Yr1 = _U6;
        }
        _F5 = new _T6(_Yr1, _wr1, true);
        _F5._Rl1 = _N7;
        _F5._gr1 = true;
        _Tr1 = _F5._M5;
        _Ur1 = _F5;
        _Sr1[_N7]._1b(_F5);
        return _F5;
    };
}

function _zl1() {
    var _1l1 = this._xl1;
    var _1s1 = 1,
        _2s1 = false,
        _3s1 = [],
        _4s1 = 0,
        _5s1 = 0;
    Object.defineProperties(this, {
        _B7: {
            get: function() {
                return _3s1;
            },
            set: function(_y8) {
                _3s1 = _y8;
            }
        },
        _G7: {
            get: function() {
                return _5s1;
            },
            set: function(_y8) {
                _5s1 = _y8;
            }
        },
        _H7: {
            get: function() {
                return _4s1;
            },
            set: function(_y8) {
                _4s1 = _y8;
            }
        },
        _Pl1: {
            get: function() {
                return _2s1;
            },
            set: function(_y8) {
                _2s1 = _y8;
            }
        }
    });

    function _6s1(_y7, _x7, _7s1) {
        var _C7 = {
            offset: _4s1,
            type: _y7,
            _D7: _x7,
            _E7: _7s1,
            _cr1: 0,
            _br1: 0,
            _dr1: false
        };
        return _C7;
    }

    function _1b(_y7, _x7, _7s1) {
        _5s1 |= _7s1;
        var _9r1 = _6s1(_y7, _x7, _7s1);
        switch (_y7) {
            case _H5._W7:
            case _H5._c8:
                _4s1 += 4;
                _9r1._cr1 = _1l1.UNSIGNED_BYTE;
                _9r1._br1 = 4;
                _9r1._dr1 = true;
                break;
            case _H5._68:
                _4s1 += 4;
                _9r1._cr1 = _1l1.FLOAT;
                _9r1._br1 = 1;
                _9r1._dr1 = false;
                break;
            case _H5._R7:
                _4s1 += 8;
                _9r1._cr1 = _1l1.FLOAT;
                _9r1._br1 = 2;
                _9r1._dr1 = false;
                break;
            case _H5._T7:
                _4s1 += 12;
                _9r1._cr1 = _1l1.FLOAT;
                _9r1._br1 = 3;
                _9r1._dr1 = false;
                break;
            case _H5._a8:
                _4s1 += 16;
                _9r1._cr1 = _1l1.FLOAT;
                _9r1._br1 = 4;
                _9r1._dr1 = false;
                break;
        }
        _3s1.push(_9r1);
    }
    this._8s1 = function() {
        _1b(_H5._R7, _H5._Q7, _1s1);
        _1s1 = _1s1 << 1;
    };
    this._Kl1 = function() {
        _1b(_H5._T7, _H5._Q7, _1s1);
        _1s1 = _1s1 << 1;
    };
    this._Ll1 = function() {
        _1b(_H5._W7, _H5._V7, _1s1);
        _1s1 = _1s1 << 1;
    };
    this._Nl1 = function() {
        _1b(_H5._T7, _H5._48, _1s1);
        _1s1 = _1s1 << 1;
    };
    this._Ml1 = function() {
        _1b(_H5._R7, _H5._28, _1s1);
        _1s1 = _1s1 << 1;
    };
    this._9s1 = function(_y7, _x7) {
        if ((_y7 < _H5._68) || (_y7 > _H5._zo1)) {
            debug("ERROR vertex_format_add_custom: illegal types");
            return;
        }
        if ((_x7 < _H5._Q7) || (_x7 > _H5._yo1)) {
            debug("ERROR vertex_format_add_custom: illegal usage");
            return;
        }
        _1b(_y7, _x7, _1s1);
        _1s1 = _1s1 << 1;
    };
    this._UR = function(_6L) {
        if (_3s1.length !== _6L._B7.length) {
            return false;
        }
        for (var i = 0; i < _3s1.length; i++) {
            var _as1 = _3s1[i];
            var _bs1 = _6L._B7[i];
            if ((_as1.offset !== _bs1.offset) || (_as1.type !== _bs1.type) || (_as1._D7 !== _bs1._D7) || (_as1._E7 !== _bs1._E7) || (_as1._cr1 !== _bs1._cr1) || (_as1._br1 !== _bs1._br1)) {
                return false;
            }
        }
        return true;
    };
}

function win8_appbar_enable(_bw) {
    abif("appBarEnable",
        _bw);
}

function win8_appbar_add_element(_y7, _cs1, _ds1, _vy, _es1, _fs1) {
    var _gs1 = _Pn.Scripts[_fs1];
    return abif("addAppBarElement", _y7, _cs1, _ds1, _vy, _es1, _gs1);
}

function win8_appbar_remove_element(_ha) {
    abif("removeAppBarElement", _ha);
}

function _hs1() {
    _Ax = _is1;
    _Cx = _js1;
    _Dx = _ks1;
    _Ex = _ls1;
    _Fx = _ms1;
    _Rc = function() {
        try {
            return window["GetHardwareId"]();
        } catch (e) {
            var id = 0xFF5025da3ad78cac9;
            return id.toString();
        }
    };
}

function _ns1() {
    _Bx({
        type: _ox,
        status: _tx
    });
}

function _os1() {
    _Bx({
        type: _ox,
        status: _ux
    });
}

function _is1(_ps1) {
    window["buildStoreProxyFile"](_ps1, _qs1, function() {
        window["activateStore"](function() {
            window["synchroniseProducts"](function(_Nx) {
                _Bx({
                    type: _px,
                    _Kc: _Nx
                });
            }, function(_Nx) {
                _Bx({
                    type: _qx,
                    _Kc: _Nx
                });
            }, _os1, _ns1);
        }, _ns1);
    }, _ns1);
}

function _js1() {
    window["restorePurchases"](function(_rs1) {
        _Bx({
            type: _sx,
            _9e: _rs1
        });
    });
}

function _ks1(_ha, _ss1) {
    window["purchaseContent"](_ha, _ss1, function(_Nx) {
        _Bx({
            type: _qx,
            _Kc: _Nx
        });
    }, function(_Nx) {
        _Bx({
            type: _qx,
            _Kc: _Nx
        });
    });
}

function _ls1(_ha) {
    window["consumeContent"](_ha, function(_Nx) {
        _Bx({
            type: _rx,
            _Kc: _Nx
        });
    }, function(_Nx) {
        _Bx({
            type: _rx,
            _Kc: _Nx
        });
    });
}

function _ms1(_ha) {
    var response = "{ \"response\":6 }";
    _Bx({
        type: _px,
        _Kc: response
    });
}

function _qs1(_ps1, _ts1) {
    var _us1 = "<?xml version=\"1.0\" encoding=\"utf-16\" ?>\r\n" + "<CurrentApp>\r\n" + "    <ListingInformation>\r\n" + "        <App>\r\n" + "            <AppId>00000000-0000-0000-0000-000000000000</AppId>\r\n" + "            <LinkUri></LinkUri>\r\n" + "            <CurrentMarket>en-US</CurrentMarket>\r\n" + "            <AgeRating>3</AgeRating>\r\n" + "            <MarketData xml:lang=\"en-us\">\r\n" + "                <Name>In-app purchases</Name>\r\n" + "                <Description>AppDescription</Description>\r\n" + "                <Price>0.99</Price>\r\n" + "                <CurrencySymbol>$</CurrencySymbol>\r\n" + "                <CurrencyCode>USD</CurrencyCode>\r\n" + "            </MarketData>\r\n" + "        </App>\r\n";
    var _vs1 = "        <Product ProductId=\"PRODUCT_ID\" LicenseDuration=\"0\">\r\n" + "            <MarketData xml:lang=\"en-us\">\r\n" + "                <Name>PRODUCT_NAME</Name>\r\n" + "                <Price>PRODUCT_PRICE</Price>\r\n" + "                <CurrencySymbol>$</CurrencySymbol>\r\n" + "                <CurrencyCode>USD</CurrencyCode>\r\n" + "            </MarketData>\r\n" + "        </Product>\r\n";
    var _ws1 = "    </ListingInformation>\r\n" + "    <LicenseInformation>\r\n" + "        <App>\r\n" + "            <IsActive>true</IsActive>\r\n" + "            <IsTrial>false</IsTrial>\r\n" + "        </App>\r\n";
    var _xs1 = "        <Product ProductId=\"PRODUCT_ID\">\r\n" + "            <IsActive>PRODUCT_ACTIVE</IsActive>\r\n" + "        </Product>\r\n";
    var _ys1 = "    </LicenseInformation>\r\n" + "</CurrentApp>\r\n";
    var _zs1 = _us1;
    for (var _6d = 0; _6d < _ps1.length; _6d++) {
        var product = _ps1[_6d];
        var _Jx = "1.00";
        if ((product._Jx != null) && (product._Jx != undefined) && (product._Jx != "")) {
            _Jx = product._Jx;
            if (typeof(_Jx) == "number") {
                _Jx = _Jx.toString();
            }
            _Jx = _Jx.replace("$", "");
            _Jx = _Jx.replace("�", "");
        }
        var _As1 = _vs1.replace("PRODUCT_ID", product._Ix);
        _As1 = _As1.replace("PRODUCT_NAME", product.title);
        _As1 = _As1.replace("PRODUCT_PRICE", _Jx);
        _zs1 += _As1;
    }
    _zs1 += _ws1;
    for (var _6d = 0; _6d < _ps1.length; _6d++) {
        var product = _ps1[_6d];
        var _Bs1 = _ts1[product._Ix];
        var _Cs1 = (_Bs1 == null || _Bs1 == undefined) ? false : _Bs1;
        var _Ds1 = _xs1.replace("PRODUCT_ID", product._Ix).replace("PRODUCT_ACTIVE", _Cs1 ? "true" : "false");
        _zs1 += _Ds1;
    }
    _zs1 += _ys1;
    return _zs1;
}

function win8_license_initialize_sandbox(_Es1) {
    window["setSandboxLicense"](_Es1);
}

function win8_license_trial_version() {
    if (window["checkTrialLicense"] == undefined) return false;
    return window["checkTrialLicense"]();
}

function _Fs1(_y7) {
    var _Gs1 = null;
    if (_y7.charAt(0) == _y7.charAt(0).toUpperCase()) {
        _y7 = _y7.charAt(0).toLowerCase() + _y7.substr(1);
    }
    var _Hs1 = ltif("getTileTemplateType", _y7);
    if (_Hs1 == null || _Hs1 == undefined) {
        alert("ERROR: Invalid template type " + _y7 + "in \"livetile_tile_notification()\"");
    } else {
        try {
            _Gs1 = ltif("getTileTemplateContent", _Hs1);
        } catch (e) {
            alert("ERROR: Invalid notification template()");
        }
    }
    return _Gs1;
}

function win8_livetile_tile_notification(_y7, _Wn1, _Is1, _Js1) {
    var _Gs1 = _Fs1(_y7);
    if (_Gs1 != null) {
        try {
            var _Ks1 = ds_map_size(_Wn1);
            var _Fc = ds_map_find_first(_Wn1);
            for (var _Ls1 = 0; _Ls1 < _Ks1; _Ls1++) {
                var _Ms1 = _Gs1.getElementsByTagName(_Fc);
                var value = ds_map_find_value(_Wn1, _Fc);
                if (typeof(value) == "number") {
                    var _Ns1 = value;
                    var _Os1 = ds_list_size(value);
                    for (var _Ps1 = 0; _Ps1 < _Os1; _Ps1++) {
                        var _hc = ds_list_find_value(_Ns1, _Ps1);
                        if (_Fc == "text") {
                            _Ms1[_Ps1].appendChild(_Gs1.createTextNode(_hc));
                        } else if (_Fc == "image") {
                            _Ms1[_Ps1].setAttribute("src", _hc);
                        }
                    }
                } else {
                    if (_Fc == "text") {
                        _Ms1[_Ps1].appendChild(_Gs1.createTextNode(value));
                    } else if (_Fc == "image") {
                        _Ms1[0].setAttribute("src", value);
                    }
                }
                _Fc = ds_map_find_next(_Wn1, _Fc);
            }
            var _Qs1 = -1;
            if (_Is1 != -1) {
                var _Qs1 = new Date();
                _Qs1.setTime(_Ym(_Is1));
            }
            ltif("newTileNotification", _Gs1, _Qs1, _Js1, null);
        } catch (e) {
            alert("ERROR: livetile_tile_notification()");
        }
    }
}

function win8_livetile_badge_notification(_Wn1, _Rs1) {
    try {
        var _Ss1;
        if (typeof(_Wn1) == "number") {
            _Ss1 = ltif("getBadgeTemplateType", "badgeNumber");
        } else {
            _Ss1 = ltif("getBadgeTemplateType", "badgeGlyph");
        }
        var _Ts1 = ltif("getBadgeTemplateContent", _Ss1);
        var _Us1 = _Ts1.getElementsByTagName("badge");
        _Us1[0].setAttribute("value", _Wn1);
        ltif("newBadgeNotification", _Ts1, _Rs1);
    } catch (e) {
        alert("ERROR: livetile_badge_notification(" + _Wn1 + ")");
    }
}

function win8_livetile_tile_clear() {
    ltif("clearLiveTileNotification");
}

function win8_livetile_badge_clear() {
    ltif("clearLiveTileBadge");
}

function win8_livetile_queue_enable(_bw) {
    ltif("enableLiveTileQueue", _bw);
}
var _Vs1 = null;

function _Ws1(_Xs1, _Ys1) {
    this._Gs1 = _Fs1(_Xs1);
    this._Zs1 = _Ys1;
    this._Qs1 = -1;
    this._P71 = "";
    this.__s1 = 0;
    this._0t1 = 0;
};

function win8_livetile_notification_begin(_Xs1) {
    if (_Vs1 != null) {
        alert("ERROR: Tile notification construction already in progress");
    } else {
        _Vs1 = new _Ws1(_Xs1, null);
    }
}

function win8_livetile_notification_secondary_begin(_Xs1, _ha) {
    if (_Vs1 != null) {
        alert("ERROR: Tile notification construction already in progress");
    } else {
        _Vs1 = new _Ws1(_Xs1, _ha);
    }
}

function win8_livetile_notification_expiry(_Is1) {
    if (_Vs1 == null) {
        alert("ERROR: No tile notification construction in progress");
    } else {
        if (_Is1 != -1) {
            var _Qs1 = new Date();
            _Qs1.setTime(_Ym(_Is1));
            _Vs1._Qs1 = _Qs1;
        }
    }
}

function win8_livetile_notification_tag(_Js1) {
    if (_Vs1 == null) {
        alert("ERROR: No tile notification construction in progress");
    } else {
        _Vs1._P71 = _Js1;
    }
}

function win8_livetile_notification_text_add(_He) {
    if (_Vs1 == null) {
        alert("ERROR: No tile notification construction in progress");
    } else {
        var _Gs1 = _Vs1._Gs1;
        var _Ms1 = _Gs1.getElementsByTagName("text");
        _Ms1[_Vs1.__s1++].appendChild(_Gs1.createTextNode(_He));
    }
}

function win8_livetile_notification_image_add(_yh) {
    if (_Vs1 == null) {
        alert("ERROR: No tile notification construction in progress");
    } else {
        var _Gs1 = _Vs1._Gs1;
        var _Ms1 = _Gs1.getElementsByTagName("image");
        _Ms1[_Vs1._0t1++].setAttribute("src", _yh);
    }
}

function win8_livetile_notification_end() {
    if (_Vs1 == null) {
        alert("ERROR: No tile notification construction in progress");
    } else {
        try {
            ltif("newTileNotification", _Vs1._Gs1, _Vs1._Qs1, _Vs1._P71, _Vs1._Zs1);
        } catch (e) {
            alert("ERROR: " + e.message);
        }
        _Vs1 = null;
    }
}

function win8_search_enable(_1t1) {
    window["enablesearch"](_Pn.Scripts[_1t1]);
}

function win8_search_disable() {
    window["disablesearch"]();
}

function win8_search_add_suggestions(_2t1) {
    var _3t1 = new Array();
    if (_2t1 >= 0) {
        for (var i = 0; i < ds_list_size(_2t1); i++) {
            _3t1[_3t1.length] = ds_list_find_value(_2t1, i);
        }
    }
    window["searchsuggestions"](_3t1);
}

function win8_secondarytile_pin(_ha, _4t1, _5t1, _6t1, _7t1, _8t1, _9t1, _at1) {
    var options = new Array();
    var _Os1 = ds_list_size(_7t1);
    for (var _Ps1 = 0; _Ps1 < _Os1; _Ps1++) {
        var _hc = ds_list_find_value(_7t1, _Ps1);
        options[_Ps1] = _hc.toLowerCase();
    }
    window["g_secondaryTilePin"](_ha, _4t1, _5t1, _6t1, options, _8t1,
        _9t1, _at1);
}

function win8_secondarytile_badge_notification(_Wn1, _bt1) {
    win8_livetile_badge_notification(_Wn1, _bt1);
}

function win8_secondarytile_delete(_ha) {
    window["g_secondaryTileDelete"](_ha);
}

function _ct1() {
    this["title"] = "";
    this["id"] = "";
    this["cmd"] = function() {};
    this["href"] = null;
}

function win8_settingscharm_add_entry(_dt1, _fs1) {
    var _hc = new _ct1();
    _hc["title"] = _dt1;
    if (typeof _fs1 === "number") {
        _hc["cmd"] = _Pn.Scripts[_fs1];
    } else if (typeof _fs1 === "string") {
        if (_fs1.substring(0, 7).toLowerCase() === "http://") {
            _hc["cmd"] = function() {
                window["settingsLaunchUri"](_fs1);
            };
        }
    }
    if (window["g_settingsCharmEntries"]) {
        window["g_settingsCharmEntries"][_dt1] = _hc;
    }
}

function win8_settingscharm_add_html_entry(_ha, _dt1, _et1) {
    var _hc = new _ct1();
    _hc["id"] = _ha;
    _hc["title"] = _dt1;
    _hc["href"] = _et1;
    _hc["cmd"] = null;
    if (window["g_settingsCharmEntries"]) {
        window["g_settingsCharmEntries"][_dt1] = _hc;
    }
}

function win8_settingscharm_remove_entry(_dt1) {
    if (window["g_settingsCharmEntries"]) {
        try {
            window["g_settingsCharmEntries"][_dt1] = null;
        } catch (e) {
            alert(e.message);
        }
    }
}

function win8_share_image(_ft1, _gt1, _ht1, _it1) {
    window["g_shareImageData"]["filename"] = _ft1;
    window["g_shareImageData"]["title"] = _gt1;
    window["g_shareImageData"]["description"] = _ht1;
    window["g_shareImageData"]["immediate"] = _it1;
    window["g_shareImageData"]["cmd"]();
}

function win8_share_screenshot(_gt1, _ht1, _it1) {
    window["g_shareImageData"]["filename"] = null;
    window["g_shareImageData"]["title"] = _gt1;
    window["g_shareImageData"]["description"] = _ht1;
    window["g_shareImageData"]["immediate"] = _it1;
    window["g_shareImageData"]["cmd"]();
}

function win8_share_file(_Hc, _gt1, _ht1, _it1) {
    window["g_shareFileData"]["filename"] = _Hc;
    window["g_shareFileData"]["title"] = _gt1;
    window["g_shareFileData"]["description"] = _ht1;
    window["g_shareFileData"]["immediate"] = _it1;
    window["g_shareFileData"]["cmd"]();
}

function win8_share_url(_Mg, _gt1, _ht1, _it1) {
    window["g_shareURLData"]["textData"] = _Mg;
    window["g_shareURLData"]["title"] = _gt1;
    window["g_shareURLData"]["description"] = _ht1;
    window["g_shareURLData"]["immediate"] = _it1;
    window["g_shareURLData"]["cmd"]();
}

function win8_share_text(_He, _gt1, _ht1, _it1) {
    window["g_shareTextData"]["textData"] = _He;
    window["g_shareTextData"]["title"] = _gt1;
    window["g_shareTextData"]["description"] = _ht1;
    window["g_shareTextData"]["immediate"] = _it1;
    window["g_shareTextData"]["cmd"]();
}

function _jt1() {
    _kt1 = false;
    if (_Mn) {
        var _lt1 = _Mn.document.getElementById('debug_console');
        if ((_lt1 != undefined) && (_lt1 != null)) {
            _lt1.style.display = "none";
        }
    }
    _CO = canvas.width = window.outerWidth;
    _DO = canvas.height = window.outerHeight;
    _mt1 = true;
}
var _nt1 = [];

function win8_device_touchscreen_available() {
    return window["g_touchScreenPresent"];
}

function _ot1(_la) {
    for (var _pt1 = 0; _pt1 < _nt1.length; _pt1++) {
        if (_nt1[_pt1] === _la) {
            return _pt1;
        }
    }
    return -1;
}

function _qt1(_rt1) {
    var _na = -1;
    var _st1 = true;
    for (var _pt1 = 0; _pt1 < _nt1.length; _pt1++) {
        if (_nt1[_pt1] !== -1) {
            _st1 = false;
            break;
        }
    }
    for (var _pt1 = 0; _pt1 < _nt1.length; _pt1++) {
        if (_pt1 === 0 && _st1 === false) {
            continue;
        }
        if ((_nt1[_pt1] === _rt1) || (_nt1[_pt1] === -1)) {
            _na = _pt1;
            break;
        }
    }
    if (_na == -1) {
        _na = _nt1.length;
    }
    _nt1[_na] = _rt1;
    _oa[_na] = new _0a();
    return _na;
}

function _tt1(_ut1, _h2, _i2) {
    var _na = _ot1(_ut1);
    if (_na == 0) {
        return;
    }
    if (_na == -1) {
        _na = _vt1(_ut1, _h2, _i2);
    } else {
        if (_na == 0) {
            if (_Aa != null) {
                _Ba = _h2;
                _Ca = _i2;
            }
            _Da = 1;
        }
        _oa[_na].x = _h2;
        _oa[_na].y = _i2;
        _Ea[_na].x = _h2;
        _Ea[_na].y = _i2;
    }
}

function _vt1(_ut1, _h2, _i2) {
    var _na = _qt1(_ut1);
    if (_na == 0) {
        return;
    }
    if (_na == 0) {
        if (_Aa != null) {
            _Ba = _h2;
            _Ca = _i2;
        }
        _Da = 1;
    }
    _oa[_na].x = _h2;
    _oa[_na].y = _i2;
    _Ea[_na].x = _h2;
    _Ea[_na].y = _i2;
    _oa[_na]._J8 = 1;
    _Ea[_na]._Fa = _Ga | _Ha | _Ia;
    return _na;
}

function _wt1(_ut1, _h2, _i2) {
    var _na = _ot1(_ut1);
    _nt1[_na] = -1;
    if (_na == 0) {
        return;
    }
    if (_na == 0) {
        if (_Aa != null) {
            _Ba = _h2;
            _Ca = _i2;
        }
        _Da = 0;
    }
    _oa[_na].x = _h2;
    _oa[_na].y = _i2;
    _Ea[_na].x = _h2;
    _Ea[_na].y = _i2;
    _oa[_na]._J8 = 0;
    _Ea[_na]._Fa = 0;
}

function _xt1(_ut1, _h2, _i2) {
    var _na = _ot1(_ut1);
    _wt1(_ut1, _h2, _i2);
}

function gse(_yt1, _zt1) {
    switch (_yt1) {
        case "resize":
            return _jt1;
        case "loading":
            if (!_Pn.Options.loadingBarCallback) {
                _At1 = _zt1;
                return true;
            }
            return false;
        case "onloaded":
            if (!_Pn.Options.loadingBarCallback) {
                _Bt1 = _zt1;
            }
            break;
        case "console":
            if (!_Pn.Options.loadingBarCallback) {
                _Ct1 = function() {};
                _Dt1 = function() {};
            }
            debug = _Et1;
            _Qn = _Ft1;
            break;
        case "pause":
            _Gt1(_zt1);
            break;
        case "mousescale":
            _Xh = function(_Ht1) {
                var scaleX = canvas.width / window.outerWidth;
                var scaleY = canvas.height / window.outerHeight;
                _Ba = _Ht1.pageX * scaleX;
                _Ca = _Ht1.pageY * scaleY;
                _Ea[_Ht1.button].x = _Ba;
                _Ea[_Ht1.button].y = _Ca;
            };
            break;
        case "ontouchmove":
            _tt1(arguments[1], arguments[2], arguments[3]);
            break;
        case "ontouchdown":
            _vt1(arguments[1], arguments[2], arguments[3]);
            break;
        case "ontouchup":
            _wt1(arguments[1], arguments[2], arguments[3]);
            break;
        case "ontouchcancel":
            _xt1(arguments[1],
                arguments[2], arguments[3]);
            break;
        case "browser":
            _Jw = _It1;
            _Jt1 = _Kt1;
            YoYo_OpenURL_ext = arguments[1];
            http_get_file = _Lt1;
            zip_unzip = _Mt1;
            break;
        case "cmd_line":
            _Nt1(arguments[1]);
            break;
        case "iap":
            _hs1();
            break;
        case "async":
            _Ot1(arguments[1]);
            break;
        case "dpi":
            _wu = _xu = arguments[1];
            break;
        case "language":
            os_get_language = arguments[1];
            break;
        case "ads":
            YoYo_EnableAds = arguments[1];
            YoYo_DisableAds = arguments[2];
            _pP = arguments[3];
            return _Pt1;
        case "analytics":
            analytics_event = arguments[1];
            analytics_event_ext = arguments[2];
            return _Qt1;
    }
}

function _Pt1(_pz) {
    if (_Pn._Rt1) {
        var _St1 = {
            "appId": _Pn._Rt1._Tt1,
            "unitId": _Pn._Rt1._Ut1[_pz]._Vt1,
            "size": _Pn._Rt1._Ut1[_pz].size
        };
        return _St1;
    }
    return null;
}

function _Qt1() {
    if (_Pn._Wt1) {
        return _Pn._Wt1._Tt1;
    }
    return null;
}

function _Nt1(_Xt1) {
    if (_Xt1 == "" || _Xt1 == null || _Xt1 == undefined) {
        return;
    }
    try {
        var _Tb = _Xt1.split('&');
        for (var _Ce in _Tb) {
            var _5W = _Tb[_Ce].split('=');
            _Gs[_Gs.length] = _5W[0];
            _Hs[_Hs.length] = _5W[1];
            _Fs++;
        }
    } catch (e) {
        alert(e._Yt1 + ". Malformed command line parameters: \"" + _Xt1 + "\"");
    }
}

function _Ot1(_Zt1) {
    _Go = function(_do) {
        _ho = "win8AsyncMessageDialog";
        _Bh._1b(_do.id, null, _zo, _ho);
        _Zt1[0](_do._mo[0], function() {
            var _po = _qo(_ho);
            if (!_po) return;
            _po._no = "";
            _po._oo = "";
            _po.value = 0;
            _po._9e = "";
            _po._ro = true;
            _po._so = 1;
        }, function() {
            _jo = false;
            _vo(_do.id);
        });
    };
    _Eo = function(_do) {
        _ho = "win8AsyncQuestionDialog";
        _Bh._1b(_do.id, null, _zo, _ho);
        _Zt1[1](_do._mo[0], function() {
            var _po = _qo(_ho);
            if (!_po) return;
            _po._no = "";
            _po._oo = "";
            _po.value = 0;
            _po._9e = "";
            _po._ro = true;
            _po._so = 1;
        }, function() {
            var _po = _qo(_ho);
            if (!_po) return;
            _po._no = "";
            _po._oo = "";
            _po.value = 0;
            _po._9e = "";
            _po._ro = true;
            _po._so = 0;
        }, function() {
            _jo = false;
            _vo(_do.id);
        });
    };
    _Ao = function(_do) {
        _ho = "win8AsyncInputDialog";
        _Bh._1b(_do.id, null, _zo, _ho);
        _Zt1[2](_do._mo[0], function() {
            var _po = _qo(_ho);
            if (!_po) return;
            _po._no = "";
            _po._oo = "";
            _po.value = 0;
            _po._9e = "";
            _po._ro = true;
            _po._so = 0;
        }, function() {
            _jo = false;
            _vo(_do.id);
        });
    };
    _co = function(_do) {
        _ho = "win8AsyncLoginDialog";
        _Bh._1b(_do.id, null, _zo, _ho);
        _Zt1[3](function(_no, _oo) {
            var _po = _qo(_ho);
            if (!_po) return;
            _po._no = _no;
            _po._oo = _oo;
            _po._so = 1;
            _po.value = 0;
            _po._9e = "";
            _po._ro = true;
            _jo = false;
            _vo(_do.id);
        });
    };
}

function _Kt1(_y7, _Mg, _Rh, __t1) {
    try {
        var _Dw = new XMLHttpRequest();
        if (__t1) {
            _Bh._1b(_ww, _Mg, _xw, _Dw);
        }
        _Dw.open(_y7, _Mg);
        _Dw.ontimeout = function(_Bp) {
            _Ow(_Bp, _Dw);
        };
        _Dw.onerror = function(_Bp) {
            _Ow(_Bp, _Dw);
        };
        _Dw.onload = function(_Bp) {
            _Pw(_Bp, _Dw);
        };
        _Dw._Qw = function() {};
        _Dw.send(_Rh);
    } catch (e) {
        return -1;
    }
    return _ww++;
}

function _Et1() {
    if (_Ln) {
        for (var index = 0; index < arguments.length; ++index) {}
    }
}

function _Ft1(_He) {
    if (_Ln) {
        if (!_En[_He]) {
            _En[_He] = true;
            alert(_He);
        }
    }
}

function _Lt1(_Mg, _Sw) {
    var _Dw = {
        responseText: "",
        status: -1
    };
    _Bh._1b(_ww, _Mg, _xw, _Dw);
    window["downloadFile"](_Mg, _Sw, function(_Hc) {
        _Dw.responseText = _Hc;
        _Dw.status = 200;
        _Pw(null, _Dw);
    }, function(e) {
        _Dw.responseText = e.message;
        _Dw.status = e._9g;
        _Ow(null, _Dw);
    });
    return _ww++;
}

function _Mt1(_0u1, _1u1) {
    return window["unzipContent"](_0u1, _1u1, function(_2u1, _3u1) {
        debug("zip_unzip() returned " + _2u1 + " entries successfully");
    }, function(_2u1, _3u1) {
        debug("zip_unzip() returned " + _2u1 + " entries with errors");
    });
}

function _4u1(_R4) {
    return (((_R4._d3 * 255) & 0xff) << 0) | (((_R4._Y4 * 255) & 0xff) << 8) | (((_R4._g3 * 255) & 0xff) << 16);
}

function _5u1(_35, _lT, _R4) {
    draw_set_color(_4u1(_R4));
    var scale = 1.0 / this._6u1._xD;
    for (var _X2 = 0; _X2 < _lT; ++_X2) {
        var _7u1 = _35[_X2];
        var _8u1 = _35[(_X2 + 1) % _lT];
        draw_line(_7u1.x * scale, _7u1.y * scale, _8u1.x * scale, _8u1.y * scale);
    }
}

function _9u1(_35, _lT, _R4) {
    draw_set_color(_4u1(_R4));
    var scale = 1.0 / this._6u1._xD;
    var _7u1 = _35[0];
    for (var _X2 = 2; _X2 < _lT; ++_X2) {
        var _8u1 = _35[_X2 - 1];
        var _au1 = _35[_X2];
        draw_triangle(_7u1.x * scale, _7u1.y * scale, _8u1.x * scale,
            _8u1.y * scale, _au1.x * scale, _au1.y * scale, false);
    }
}

function _bu1(_oT, _pF, _R4) {
    draw_set_color(_4u1(_R4));
    var scale = 1.0 / this._6u1._xD;
    draw_ellipse((_oT.x - _pF) * scale, (_oT.y - _pF) * scale, (_oT.x + _pF) * scale, (_oT.y + _pF) * scale, true);
}

function _cu1(_oT, _pF, _qT, _R4) {
    draw_set_color(_4u1(_R4));
    var scale = 1.0 / this._6u1._xD;
    draw_ellipse((_oT.x - _pF) * scale, (_oT.y - _pF) * scale, (_oT.x + _pF) * scale, (_oT.y + _pF) * scale, false);
}

function _du1(_sT, _tT, _R4) {
    draw_set_color(_4u1(_R4));
    var scale = 1.0 / this._6u1._xD;
    draw_line(_sT.x * scale, _sT.y * scale,
        _tT.x * scale, _tT.y * scale);
}

function _eu1(_oS) {
    var _fu1 = 0.4;
    var scale = 1.0 / this._6u1._xD;
    var _sT = _oS._6d,
        _tT = new _gu1._hu1();
    _tT.x = _sT.x + _fu1 * _oS._vt._lS().x;
    _tT.y = _sT.y + _fu1 * _oS._vt._lS().y;
    draw_set_color(_0f);
    draw_line(_sT.x * scale, _sT.y * scale, _tT.x * scale, _tT.y * scale);
    _tT.x = _sT.x + _fu1 * _oS._vt._mS().x;
    _tT.y = _sT.y + _fu1 * _oS._vt._mS().y;
    draw_set_color(_3f);
    draw_line(_sT.x * scale, _sT.y * scale, _tT.x * scale, _tT.y * scale);
}

function _iu1(_vT, _pF, _wT, _n4) {
    for (var _X2 = 0; _X2 < _n4; _X2++) {
        var scale = 1.0 / this._6u1._xD;
        draw_set_color(((_wT[_X2]._d3 & 0xff) << 0) | ((_wT[_X2]._Y4 & 0xff) << 8) | ((_wT[_X2]._g3 & 0xff) << 16));
        draw_ellipse((_vT[_X2].x - _pF) * scale, (_vT[_X2].y - _pF) * scale, (_vT[_X2].x + _pF) * scale, (_vT[_X2].y + _pF) * scale, true);
    }
}

function _dD(_eD) {
    this._n21 = 0;
    this._o21 = 0;
    this._ju1 = _eD;
    this._ku1 = false;
    this._lu1 = true;
    this._mu1 = false;
    this._nu1 = new _gu1._ou1();
    this._zU = null;
};
_dD.prototype._wD = function(_hi) {
    this._zU = null;
    this._nu1._jf = new _gu1._pu1();
    this._nu1._jf._RT = _hi;
};
_dD.prototype._AD = function(_yD, _zD) {
    this._zU = null;
    this._nu1._jf = new _gu1._qu1();
    this._nu1._jf._TU(_yD, _zD);
};
_dD.prototype._CD = function() {
    this._zU = [];
    this._nu1._jf = new _gu1._qu1();
};
_dD.prototype._DD = function(_0e) {
    this._zU = [];
    this._mu1 = _0e;
    this._nu1._jf = new _gu1._ru1();
};
_dD.prototype._BD = function(_zi, _Ci, _Ai, _Di) {
    var _U5 = new _gu1._hu1(_zi, _Ci);
    var _Z1 = new _gu1._hu1(_Ai, _Di);
    this._zU = null;
    this._nu1._jf = new _gu1._su1();
    this._nu1._jf._7b(_U5, _Z1);
};
_dD.prototype._GD = function(_h2, _i2) {
    var _lT = this._zU.length;
    this._zU[_lT] = new _gu1._hu1(_h2, _i2);
};
_dD.prototype._tu1 = function() {
    if (this._zU === null || this._zU === undefined) {
        return true;
    }
    if (this._nu1._jf._QT === _gu1._uu1._5U) {
        if (this._zU.length > 2) {
            this._nu1._jf._7b(this._zU, this._zU.length);
            return true;
        }
    } else if (this._nu1._jf._QT === _gu1._uu1._6U) {
        if (this._mu1) {
            if (this._zU.length >= 3) {
                this._nu1._jf._GU(this._zU, this._zU.length);
                return true;
            }
        } else {
            if (this._zU.length >= 2) {
                this._nu1._jf._HU(this._zU, this._zU.length);
                return true;
            }
        }
    }
    return false;
};
_dD.prototype._nD = function(_mD) {
    this._nu1._041.__31 = _mD;
};
_dD.prototype._lD = function(_Bd) {
    this._nu1.friction = _Bd;
};
_dD.prototype._kD = function(_jD) {
    this._nu1._141 = _jD;
};
_dD.prototype._iD = function(_hD) {
    this._nu1.__F = _hD;
};
_dD.prototype._pD = function(_vu1) {
    this._nu1._241 = _vu1;
};
_dD.prototype._rD = function(_qD) {
    this._n21 = _qD;
};
_dD.prototype._sD = function(_qD) {
    this._o21 = _qD;
};
_dD.prototype._sD = function(_qD) {
    this._o21 = _qD;
};
_dD.prototype._uD = function(_tD) {
    this._lu1 = _tD;
};
_dD.prototype._gD = function() {
    this._ku1 = true;
};
var _wu1 = 0,
    _xu1 = 1,
    _yu1 = 2,
    _zu1 = 3,
    _Au1 = 4,
    _Bu1 = 5,
    _Cu1 = 6,
    _Du1 = 7,
    _Eu1 = 8,
    _Fu1 = 9,
    _Gu1 = 10,
    _Hu1 = 11,
    _Iu1 = 12,
    _Ju1 = 13,
    _Ku1 = 14,
    _Lu1 = 15,
    _Mu1 = 16,
    _Nu1 = 17,
    _Ou1 = 18,
    _Pu1 = 19,
    _Qu1 = 20,
    _Ru1 = 21,
    _Su1 = 22,
    _Tu1 = 23,
    _Uu1 = 24;

function _Vu1(_Wu1) {
    this._Xu1 = _Wu1;
};
_Vu1.prototype._HE = function(_FE) {
    if ((this._Xu1 instanceof _gu1._Yu1) || (this._Xu1 instanceof _gu1._Zu1) || (this._Xu1 instanceof _gu1.__u1)) {
        this._Xu1._P61()._uD(true);
        this._Xu1._Q61()._uD(true);
        this._Xu1._HE(_FE);
    }
};
_Vu1.prototype._JE = function(_IE) {
    switch (_IE) {
        case _wu1:
            return this._Xu1._R61().x;
        case _xu1:
            return this._Xu1._R61().y;
        case _yu1:
            return this._Xu1._S61().x;
        case _zu1:
            return this._Xu1._S61().y;
        case _Au1:
            return this._Xu1._Je1(1.0 / _81._ZC._0v1).x;
        case _Bu1:
            return this._Xu1._Je1(1.0 / _81._ZC._0v1).y;
        case _Cu1:
            return this._Xu1._Ke1(1.0 / _81._ZC._0v1);
        case _Du1:
            {
                if ((this._Xu1 instanceof _gu1._Yu1) || (this._Xu1 instanceof _gu1._Zu1) || (this._Xu1 instanceof _gu1.__u1)) {
                    return this._Xu1._Of1();
                }
            }
            break;
        case _Eu1:
            {
                if (this._Xu1 instanceof _gu1._Yu1) {
                    return this._Xu1._Ff1();
                } else if (this._Xu1 instanceof _gu1._1v1) {
                    return this._Xu1._Ef1();
                }
            }
            break;
        case _Fu1:
            {
                if ((this._Xu1 instanceof _gu1._Yu1) || (this._Xu1 instanceof _gu1.__u1)) {
                    return this._Xu1._Rf1(1.0 / _81._ZC._0v1);
                }
            }
            break;
        case _Gu1:
            {
                if ((this._Xu1 instanceof _gu1._Yu1) || (this._Xu1 instanceof _gu1.__u1)) {
                    return this._Xu1._Qf1();
                }
            }
            break;
        case _Hu1:
            {
                if ((this._Xu1 instanceof _gu1._Zu1) || (this._Xu1 instanceof _gu1.__u1)) {
                    return this._Xu1._Sg1();
                }
            }
            break;
        case _Iu1:
            {
                if ((this._Xu1 instanceof _gu1._Zu1) || (this._Xu1 instanceof _gu1.__u1)) {
                    return this._Xu1._Gf1();
                }
            }
            break;
        case _Ju1:
            {
                if (this._Xu1 instanceof _gu1._Zu1) {
                    return this._Xu1._Vg1(1.0 / _81._ZC._0v1);
                }
            }
            break;
        case _Ku1:
            {
                if (this._Xu1 instanceof _gu1._Zu1) {
                    return this._Xu1._Ug1();
                }
            }
            break;
        case _Lu1:
            {
                if (this._Xu1 instanceof _gu1._2v1) {
                    return this._Xu1._gj1();
                }
                if (this._Xu1 instanceof _gu1._3v1) {
                    return this._Xu1._vg1();
                }
            }
            break;
        case _Mu1:
            {
                if (this._Xu1 instanceof _gu1._2v1) {
                    return this._Xu1._hj1();
                }
            }
            break;
        case _Nu1:
            {
                if ((this._Xu1 instanceof _gu1._3v1) || (this._Xu1 instanceof _gu1._1v1)) {
                    this._Xu1._ng1();
                } else if (this._Xu1 instanceof _gu1.__u1) {
                    return this._Xu1._wh1();
                }
            }
            break;
        case _Ou1:
            {
                if ((this._Xu1 instanceof _gu1._3v1) || (this._Xu1 instanceof _gu1._1v1)) {
                    return this._Xu1._lg1();
                } else if (this._Xu1 instanceof _gu1.__u1) {
                    return this._Xu1._uh1();
                }
            }
            break;
        case _Pu1:
            {
                if (this._Xu1 instanceof _gu1._Yu1) {
                    return ((this._Xu1._Jf1() * 180.0) / Math.PI);
                }
            }
            break;
        case _Qu1:
            {
                if (this._Xu1 instanceof _gu1._Yu1) {
                    return ((this._Xu1._Kf1() * 180.0) / Math.PI);
                }
            }
            break;
        case _Ru1:
            {
                if (this._Xu1 instanceof _gu1._Yu1) {
                    return this._Xu1._Hf1();
                }
            }
            break;
        case _Su1:
            {
                if (this._Xu1 instanceof _gu1._4v1) {
                    return this._Xu1._vj1();
                }
            }
            break;
        case _Tu1:
            {
                if (this._Xu1 instanceof _gu1._5v1) {
                    return this._Xu1._gh1();
                }
            }
            break;
        case _Uu1:
            {
                if (this._Xu1 instanceof _gu1._5v1) {
                    return this._Xu1._ig1();
                }
            }
    }
    return 0;
};
_Vu1.prototype._KE = function(_IE, _qe) {
    switch (_IE) {
        case _Du1:
            {
                if ((this._Xu1 instanceof _gu1._Yu1) || (this._Xu1 instanceof _gu1._Zu1) || (this._Xu1 instanceof _gu1.__u1)) {
                    this._Xu1._P61()._uD(true);
                    this._Xu1._Q61()._uD(true);
                    this._Xu1._Nf1(_qe);
                }
            }
            break;
        case _Gu1:
            {
                if ((this._Xu1 instanceof _gu1._Yu1) || (this._Xu1 instanceof _gu1.__u1)) {
                    this._Xu1._P61()._uD(true);
                    this._Xu1._Q61()._uD(true);
                    this._Xu1._Pf1(_qe);
                }
            }
            break;
        case _Ku1:
            {
                if (this._Xu1 instanceof _gu1._Zu1) {
                    this._Xu1._Tg1(_qe);
                }
            }
            break;
        case _Lu1:
            {
                if (this._Xu1 instanceof _gu1._3v1) {
                    this._Xu1._ug1(_qe);
                }
            }
            break;
        case _Nu1:
            {
                if ((this._Xu1 instanceof _gu1._3v1) || (this._Xu1 instanceof _gu1._1v1)) {
                    this._Xu1._mg1(_qe);
                } else if (this._Xu1 instanceof _gu1.__u1) {
                    this._Xu1._vh1(_qe);
                }
            }
            break;
        case _Ou1:
            {
                if ((this._Xu1 instanceof _gu1._3v1) || (this._Xu1 instanceof _gu1._1v1)) {
                    this._Xu1._jg1(_qe);
                } else if (this._Xu1 instanceof _gu1.__u1) {
                    this._Xu1._th1(_qe);
                }
            }
            break;
        case _Pu1:
            {
                if (this._Xu1 instanceof _gu1._Yu1) {
                    var _E4 = (_qe * Math.PI) / 180.0;
                    this._Xu1._Lf1(_E4, this._Xu1._Kf1());
                }
            }
            break;
        case _Qu1:
            {
                if (this._Xu1 instanceof _gu1._Yu1) {
                    var _E4 = (_qe * Math.PI) / 180.0;
                    this._Xu1._Lf1(this._Xu1._Jf1(), _E4);
                }
            }
            break;
        case _Ru1:
            {
                if (this._Xu1 instanceof _gu1._Yu1) {
                    this._Xu1._If1((_qe > 0.5) ? true : false);
                }
            }
            break;
        case _Su1:
            {
                if (this._Xu1 instanceof _gu1._4v1) {
                    this._Xu1._uj1(_qe);
                }
            }
            break;
        case _Tu1:
            {
                if (this._Xu1 instanceof _gu1._5v1) {
                    this._Xu1._fh1(_qe);
                }
            }
            break;
        case _Uu1:
            {
                if (this._Xu1 instanceof _gu1._5v1) {
                    this._Xu1._hg1(_qe);
                }
            }
            break;
    }
};

function _6v1(_7v1, _8v1, _G1, _H1) {
    this._9v1 = _7v1;
    this._av1 = _8v1;
    this._bv1 = new _gu1._hu1(_G1, _H1);
    this._cv1 = [];
};
_6v1.prototype._UE = function(_dv1, _ev1, _fv1, _gv1) {
    this._9v1._e31(new _gu1._hu1(_fv1, _gv1), new _gu1._hu1(_dv1, _ev1), true);
};
_6v1.prototype._RE = function(_dv1, _ev1, _fv1, _gv1) {
    this._9v1._RE(new _gu1._hu1(_fv1, _gv1), new _gu1._hu1(_dv1, _ev1), true);
};
_6v1.prototype._0F = function(_hv1, _iv1, _jv1, _kv1) {
    var _lv1 = this._9v1._l31(new _gu1._hu1(_jv1, _kv1));
    var _mv1 = this._9v1._k31(new _gu1._hu1(_hv1, _iv1));
    this._9v1._RE(_lv1, _mv1, true);
};
_6v1.prototype._3F = function(_hv1, _iv1, _jv1, _kv1) {
    var _lv1 = this._9v1._l31(new _gu1._hu1(_jv1, _kv1));
    var _mv1 = this._9v1._k31(new _gu1._hu1(_hv1, _iv1));
    this._9v1._e31(_lv1, _mv1, true);
};
_6v1.prototype._5F = function(_4F) {
    this._9v1._5F(_4F, true);
};
_6v1.prototype._7F = function(_6F) {
    this._9v1._7F(_6F, true);
};
_6v1.prototype._cF = function(_8F, _nv1, _ov1, _bF) {
    var __T = new _gu1._pv1();
    __T._NT = _8F;
    __T._OT = _bF;
    __T._oT = new _gu1._hu1(_nv1, _ov1);
    this._9v1._j31(__T);
};
_6v1.prototype._qv1 = function(_rv1) {
    var position = this._9v1._IC();
    this._9v1._231(position, (_rv1 * Math.PI) / 180.0);
    this._9v1._uD(true);
};
_6v1.prototype._sv1 = function(_0c) {
    var _E4 = this._9v1._kS();
    var _55 = this._9v1._IC().y;
    this._9v1._231(new _gu1._hu1(_0c, _55), _E4);
    this._9v1._uD(true);
};
_6v1.prototype._tv1 = function(_0c) {
    var _E4 = this._9v1._kS();
    var _45 = this._9v1._IC().x;
    this._9v1._231(new _gu1._hu1(_45, _0c), _E4);
    this._9v1._uD(true);
};
_6v1.prototype._831 = function(_uv1) {
    this._9v1._831((_uv1 * Math.PI) / 180.0);
    this._9v1._uD(true);
};
_6v1.prototype._vv1 = function(_wv1) {
    var _xv1 = this._9v1._731();
    this._9v1._631(new _gu1._hu1(_wv1, _xv1.y));
    this._9v1._uD(true);
};
_6v1.prototype._yv1 = function(_wv1) {
    var _xv1 = this._9v1._731();
    this._9v1._631(new _gu1._hu1(_xv1.x, _wv1));
    this._9v1._uD(true);
};
_6v1.prototype._D31 = function(_zv1) {
    this._9v1._D31(_zv1);
};
_6v1.prototype._L31 = function(_Av1) {
    this._9v1._L31(_Av1);
};
_6v1.prototype._J31 = function(_Bv1) {
    this._9v1._J31(_Bv1);
};
_6v1.prototype._3D = function(_Cv1) {
    if (this._9v1) {
        this._Dv1(_Cv1);
        this._Ev1(_Cv1);
    }
};
_6v1.prototype._Dv1 = function(_ud) {
    var _fD = this._9v1._N31();
    while ((_fD != null) && (_fD != undefined)) {
        var _jf = _fD._941();
        var _Fv1 = this._9v1._IC();
        if (_jf instanceof _gu1._pu1) {
            draw_ellipse((_Fv1.x - _jf._RT) * _ud, (_Fv1.y - _jf._RT) * _ud, (_Fv1.x + _jf._RT) * _ud, (_Fv1.y + _jf._RT) * _ud, true);
        } else if (_jf instanceof _gu1._qu1) {
            var _Gv1 = Math.sin(this._9v1._kS());
            var _Hv1 = Math.cos(this._9v1._kS());
            for (var _X2 = 0; _X2 < _jf._AU; ++_X2) {
                var _7u1 = _jf._zU[_X2];
                var _8u1 = _jf._zU[(_X2 + 1) % _jf._AU];
                draw_line((_Fv1.x + ((_7u1.x * _Hv1) - (_7u1.y * _Gv1))) * _ud, (_Fv1.y + ((_7u1.x * _Gv1) + (_7u1.y * _Hv1))) * _ud, (_Fv1.x + ((_8u1.x * _Hv1) - (_8u1.y * _Gv1))) * _ud, (_Fv1.y + ((_8u1.x * _Gv1) + (_8u1.y * _Hv1))) * _ud);
            }
        }
        _fD = _fD._k21;
    }
};
_6v1.prototype._Ev1 = function(_ud) {
    var _V31 = this._9v1._h21;
    while ((_V31 != null) && (_V31 != undefined)) {
        var _XD = _V31._XD;
        if (_XD instanceof _gu1._Yu1) {
            this._Iv1(_XD, _ud);
        } else if (_XD instanceof _gu1._Zu1) {
            this._Jv1(_XD, _ud);
        } else if (_XD instanceof _gu1._3v1) {
            this._Kv1(_XD, _ud);
        } else if (_XD instanceof _gu1._2v1) {
            this._Lv1(_XD, _ud);
        } else if (_XD instanceof _gu1._Mv1) {
            if (_XD._Nv1 != null) {
                this._Iv1(_XD._Nv1, _ud);
            }
            if (_XD._Ov1 != null) {
                this._Iv1(_XD._Ov1, _ud);
            }
            if (_XD._Pv1 != null) {
                this._Jv1(_XD._Pv1, _ud);
            }
            if (_XD._Qv1 != null) {
                this._Jv1(_XD._Qv1, _ud);
            }
        }
        _V31 = _V31._k21;
    }
};
_6v1.prototype._Kv1 = function(_EE, _ud) {
    var _pg1 = _EE._R61();
    var _qg1 = _EE._S61();
    draw_line(_pg1.x * _ud, _pg1.y * _ud, _qg1.x * _ud, _qg1.y * _ud);
};
_6v1.prototype._Iv1 = function(_EE, _ud) {
    var anchor = _EE._R61();
    draw_line((anchor.x * _ud) - 2, (anchor.y * _ud) - 2, (anchor.x * _ud) + 2, (anchor.y * _ud) + 2);
    draw_line((anchor.x * _ud) - 2, (anchor.y * _ud) + 2, (anchor.x * _ud) + 2, (anchor.y * _ud) - 2);
};
_6v1.prototype._Jv1 = function(_EE, _ud) {
    var _pg1 = _EE._R61();
    var _qg1 = this._9v1._IC();
    draw_line(_pg1.x * _ud, _pg1.y * _ud, _qg1.x * _ud, _qg1.y * _ud);
};
_6v1.prototype._Lv1 = function(_EE, _ud) {
    var anchor, _Rv1;
    if (_EE._Sv1() == this._9v1) {
        anchor = _EE._R61();
        _Rv1 = _EE._W61();
    } else {
        anchor = _EE._S61();
        _Rv1 = _EE._X61();
    }
    draw_line(anchor.x * _ud, anchor.y * _ud, _Rv1.x * _ud, _Rv1.y * _ud);
    draw_line(_EE._W61().x * _ud,
        _EE._W61().y * _ud, _EE._X61().x * _ud, _EE._X61().y * _ud);
};
_6v1.prototype._Tv1 = function(_Uv1) {
    for (var i = 0; i < this._cv1.length; i++) {
        if (this._cv1[i] == null || this._cv1[i] == undefined) {
            this._cv1[i] = _Uv1;
            return i;
        }
    }
    return (this._cv1.push(_Uv1) - 1);
};
_6v1.prototype._fF = function(_eF) {
    if (this._cv1[_eF]) {
        this._9v1._V21(this._cv1[_eF]);
        this._cv1[_eF] = undefined;
    }
};
_6v1.prototype._gF = function(_eF) {
    if (this._cv1[_eF]) {
        return this._cv1[_eF]._gF();
    }
    return 0.0;
};
_6v1.prototype._hF = function(_eF) {
    if (this._cv1[_eF]) {
        return this._cv1[_eF]._hF();
    }
    return 0.0;
};
_6v1.prototype._iF = function(_eF) {
    if (this._cv1[_eF]) {
        return this._cv1[_eF]._iF();
    }
    return 0.0;
};
_6v1.prototype._lD = function(_eF, _f2) {
    if (this._cv1[_eF]) {
        this._cv1[_eF]._lD(_f2);
    }
};
_6v1.prototype._iD = function(_eF, _f2) {
    if (this._cv1[_eF]) {
        this._cv1[_eF]._iD(_f2);
        this._9v1._S21();
    }
};
_6v1.prototype._kD = function(_eF, _f2) {
    if (this._cv1[_eF]) {
        this._cv1[_eF]._kD(_f2);
    }
};
var _Vv1 = 10,
    _Wv1 = 32,
    _Xv1 = (1 << 0),
    _Yv1 = (1 << 1),
    _Zv1 = (1 << 2),
    __v1 = (1 << 3),
    _0w1 = (1 << 4),
    _1w1 = (1 << 5),
    _2w1 = (1 << 6);
var _gu1 = null;

function _3w1() {
    if (_gu1 === null) {
        var _ks = window["b2"];
        _gu1 = {};
        _gu1.version = _ks["version"];
        _gu1._hu1 = _ks["Vec2"];
        _gu1._4w1 = _ks["Vec3"];
        _gu1._5w1 = _ks["Mat22"];
        _gu1._6w1 = _ks["Mat33"];
        _gu1._7w1 = _ks["Rot"];
        _gu1._8w1 = _ks["Transform"];
        _gu1._9w1 = _ks["Sweep"];
        _gu1._aw1 = _ks["Dot_v2_v2"];
        _gu1._bw1 = _ks["Cross_v2_v2"];
        _gu1._cw1 = _ks["Cross_v2_f"];
        _gu1._dw1 = _ks["Cross_f_v2"];
        _gu1._ew1 = _ks["Mul_m22_v2"];
        _gu1._fw1 = _ks["MulT_m22_v2"];
        _gu1._gw1 = _ks["Distance"];
        _gu1._hw1 = _ks["DistanceSquared"];
        _gu1._iw1 = _ks["Dot_v3_v3"];
        _gu1._jw1 = _ks["Cross_v3_v3"];
        _gu1._kw1 = _ks["Mul_m22_m22"];
        _gu1._lw1 = _ks["MulT_m22_m22"];
        _gu1._mw1 = _ks["Mul_m33_v3"];
        _gu1._nw1 = _ks["Mul22_m33_v2"];
        _gu1._ow1 = _ks["Mul_r_r"];
        _gu1._pw1 = _ks["MulT_r_r"];
        _gu1._qw1 = _ks["Mul_r_v2"];
        _gu1._rw1 = _ks["MulT_r_v2"];
        _gu1._sw1 = _ks["Mul_t_v2"];
        _gu1._tw1 = _ks["Min_v2"];
        _gu1._uw1 = _ks["Max_v2"];
        _gu1._vw1 = _ks["Clamp"];
        _gu1._ww1 = _ks["MulT_t_v2"];
        _gu1._xw1 = _ks["Mul_t_t"];
        _gu1._yw1 = _ks["MulT_t_t"];
        _gu1._zw1 = _ks["Clamp_v2"];
        _gu1._Aw1 = _ks["NextPowerOfTwo"];
        _gu1._Bw1 = _ks["Abs_v2"];
        _gu1._Cw1 = _ks["Abs_m22"];
        _gu1._Dw1 = _ks["IsPowerOfTwo"];
        _gu1._Ew1 = _ks["RandomFloat"];
        _gu1._Fw1 = _ks["Timer"];
        _gu1._Gw1 = _ks["Color"];
        _gu1._L4 = _ks["Draw"];
        _gu1._Hw1 = _ks["ContactID"];
        _gu1._Iw1 = _ks["ManifoldPoint"];
        _gu1._Jw1 = _ks["Manifold"];
        _gu1._Kw1 = _ks["WorldManifold"];
        _gu1._Lw1 = _ks["GetPointStates"];
        _gu1._Mw1 = _ks["ClipVertex"];
        _gu1._Nw1 = _ks["RayCastInput"];
        _gu1._Ow1 = _ks["RayCastOutput"];
        _gu1._Pw1 = _ks["AABB"];
        _gu1._Qw1 = _ks["CollideCircles"];
        _gu1._Rw1 = _ks["CollidePolygonAndCircle"];
        _gu1._Sw1 = _ks["FindMaxSeparation"];
        _gu1._Tw1 = _ks["FindIncidentEdge"];
        _gu1._Uw1 = _ks["CollidePolygons"];
        _gu1._Vw1 = _ks["CollideEdgeAndCircle"];
        _gu1._Ww1 = _ks["EPAxis"];
        _gu1._Xw1 = _ks["TempPolygon"];
        _gu1._Yw1 = _ks["ReferenceFace"];
        _gu1._Zw1 = _ks["EPCollider"];
        _gu1.__w1 = _ks["CollideEdgeAndPolygon"];
        _gu1._0x1 = _ks["ClipSegmentToLine"];
        _gu1._1x1 = _ks["TestShapeOverlap"];
        _gu1._dF = _ks["TestOverlap"];
        _gu1._uu1 = _ks["Shape"];
        _gu1._pv1 = _ks["MassData"];
        _gu1._pu1 = _ks["CircleShape"];
        _gu1._su1 = _ks["EdgeShape"];
        _gu1._ru1 = _ks["ChainShape"];
        _gu1._qu1 = _ks["PolygonShape"];
        _gu1._r91 = _ks["Pair"];
        _gu1._2x1 = _ks["PairLessThan"];
        _gu1._3x1 = _ks["BroadPhase"];
        _gu1._4x1 = _ks["DistanceProxy"];
        _gu1._5x1 = _ks["SimplexCache"];
        _gu1._6x1 = _ks["DistanceInput"];
        _gu1._7x1 = _ks["DistanceOutput"];
        _gu1._8x1 = _ks["SimplexVertex"];
        _gu1._9x1 = _ks["Simplex"];
        _gu1._ax1 = _ks["DistanceFunc"];
        _gu1._bx1 = _ks["TreeNode"];
        _gu1._cx1 = _ks["DynamicTree"];
        _gu1._dx1 = _ks["TOIInput"];
        _gu1._ex1 = _ks["TOIOutput"];
        _gu1._fx1 = _ks["SeparationFunction"];
        _gu1._gx1 = _ks["TimeOfImpact"];
        _gu1._hx1 = _ks["BodyDef"];
        _gu1._ix1 = _ks["Body"];
        _gu1._jx1 = _ks["Filter"];
        _gu1._ou1 = _ks["FixtureDef"];
        _gu1._kx1 = _ks["Fixture"];
        _gu1._lx1 = _ks["DestructionListener"];
        _gu1._mx1 = _ks["ContactFilter"];
        _gu1._nx1 = _ks["ContactImpulse"];
        _gu1._ox1 = _ks["ContactListener"];
        _gu1._dW = _ks["QueryCallback"];
        _gu1._k01 = _ks["RayCastCallback"];
        _gu1._px1 = _ks["TimeStep"];
        _gu1._qx1 = _ks["Position"];
        _gu1._rx1 = _ks["Velocity"];
        _gu1._sx1 = _ks["SolverData"];
        _gu1._tx1 = _ks["World"];
        _gu1._ux1 = _ks["MixFriction"];
        _gu1._vx1 = _ks["MixRestitution"];
        _gu1._wx1 = _ks["ContactRegister"];
        _gu1._xx1 = _ks["ContactEdge"];
        _gu1._yx1 = _ks["Contact"];
        _gu1._zx1 = _ks["CircleContact"];
        _gu1._Ax1 = _ks["PolygonContact"];
        _gu1._Bx1 = _ks["ChainAndCircleContact"];
        _gu1._Cx1 = _ks["ChainAndPolygonContact"];
        _gu1._Dx1 = _ks["EdgeAndCircleContact"];
        _gu1._Ex1 = _ks["EdgeAndPolygonContact"];
        _gu1._Fx1 = _ks["PolygonAndCircleContact"];
        _gu1._Gx1 = _ks["defaultFilter"];
        _gu1._Hx1 = _ks["defaultListener"];
        _gu1._Ix1 = _ks["ContactManager"];
        _gu1._Jx1 = _ks["VelocityConstraintPoint"];
        _gu1._Kx1 = _ks["ContactPositionConstraint"];
        _gu1._Lx1 = _ks["ContactVelocityConstraint"];
        _gu1._Mx1 = _ks["PositionSolverManifold"];
        _gu1._Nx1 = _ks["ContactSolverDef"];
        _gu1._Ox1 = _ks["ContactSolver"];
        _gu1._Px1 = _ks["Island"];
        _gu1._Qx1 = _ks["Jacobian"];
        _gu1._Rx1 = _ks["JointEdge"];
        _gu1._Sx1 = _ks["JointDef"];
        _gu1._Tx1 = _ks["Joint"];
        _gu1._Ux1 = _ks["RevoluteJointDef"];
        _gu1._Yu1 = _ks["RevoluteJoint"];
        _gu1._Vx1 = _ks["MouseJointDef"];
        _gu1._Wx1 = _ks["MouseJoint"];
        _gu1._Xx1 = _ks["DistanceJointDef"];
        _gu1._3v1 = _ks["DistanceJoint"];
        _gu1._Yx1 = _ks["PrismaticJointDef"];
        _gu1._Zu1 = _ks["PrismaticJoint"];
        _gu1._Zx1 = _ks["FrictionJointDef"];
        _gu1._5v1 = _ks["FrictionJoint"];
        _gu1.__x1 = _ks["WeldJointDef"];
        _gu1._1v1 = _ks["WeldJoint"];
        _gu1._0y1 = _ks["WheelJointDef"];
        _gu1.__u1 = _ks["WheelJoint"];
        _gu1._1y1 = _ks["GearJointDef"];
        _gu1._Mv1 = _ks["GearJoint"];
        _gu1._2y1 = _ks["MotorJointDef"];
        _gu1._3y1 = _ks["MotorJoint"];
        _gu1._4y1 = _ks["PulleyJointDef"];
        _gu1._2v1 = _ks["PulleyJoint"];
        _gu1._5y1 = _ks["RopeJointDef"];
        _gu1._4v1 = _ks["RopeJoint"];
        _gu1._6y1 = _ks["RopeDef"];
        _gu1._7y1 = _ks["Rope"];
        _gu1._8y1 = _ks["maxManifoldPoints"];
        _gu1._9y1 = _ks["maxPolygonVertices"];
        _gu1._ay1 = _ks["aabbExtension"];
        _gu1._by1 = _ks["aabbMultiplier"];
        _gu1._cy1 = _ks["linearSlop"];
        _gu1._dy1 = _ks["angularSlop"];
        _gu1._ey1 = _ks["polygonRadius"];
        _gu1._fy1 = _ks["maxSubSteps"];
        _gu1._gy1 = _ks["maxTOIContacts"];
        _gu1._hy1 = _ks["velocityThreshold"];
        _gu1._iy1 = _ks["maxLinearCorrection"];
        _gu1._jy1 = _ks["maxAngularCorrection"];
        _gu1._ky1 = _ks["maxTranslation"];
        _gu1._ly1 = _ks["maxTranslationSquared"];
        _gu1._my1 = _ks["maxRotation"];
        _gu1._ny1 = _ks["maxRotationSquared"];
        _gu1._oy1 = _ks["baumgarte"];
        _gu1._py1 = _ks["toiBaugarte"];
        _gu1._qy1 = _ks["timeToSleep"];
        _gu1._ry1 = _ks["linearSleepTolerance"];
        _gu1._sy1 = _ks["angularSleepTolerance"];
        _gu1._ty1 = _ks["epsilon"];
        _gu1._uy1 = _ks["JsonSerializer"];
        _gu1._vy1 = _ks["RUBELoader"];
        _gu1._wy1 = _ks["Profiler"];
        _gu1._xy1 = _ks["ParticleDef"];
        _gu1._yy1 = _ks["ParticleColor"];
        _gu1._zy1 = _ks["ParticleGroupDef"];
        _gu1._Ay1 = _ks["ParticleGroup"];
        _gu1._By1 = _ks["ParticleSystem"];
    }
}

function _Cy1(_Dy1) {
    var _7c1 = new _gu1._Kw1();
    _Dy1._6c1(_7c1);
    this._Ey1 = _Dy1._Y21();
    this._Fy1 = _Dy1.__21();
    this._Gy1 = [];
    this._Hy1 = [];
    this._Gy1[0] = _Dy1._5c1();
    this._Hy1[0] = _7c1;
};

function _Iy1(_Jy1, _Ky1, _Ly1) {
    this._My1 = _Jy1;
    this._Y31 = _Ky1;
    this._Z31 = _Ly1;
};

function _1D(_YC, _Ny1) {
    _3w1();
    if (_gu1 === null) {
        _gu1 = window["b2"];
    }
    this._xD = _YC;
    this._Oy1 = _Ny1;
    this._Py1 = _Vv1;
    this._i21 = [];
    this._Qy1 = [];
    this._Ry1 = new _gu1._zy1();
    this._u51 = null;
    this._Sy1 = false;
    this._Ty1 = [];
    for (var i = 0; i < _Wv1; i++) {
        this._Ty1[i] = new _Iy1(-1, 0, 0);
    }
    var gravity = new _gu1._hu1(0, 10);
    this._e21 = new _gu1._tx1(gravity);
    this._Uy1();
    this._Vy1();
    this._MF = _b4 ? this._Wy1 : this._Xy1;
    this._PF = _b4 ? this._Yy1 : this._Zy1;
};
_1D.prototype._aD = function() {
    this._Sy1 = true;
};
_1D.prototype._bD = function() {
    this._Sy1 = false;
};
_1D.prototype._Uy1 = function() {
    var _l5 = document.getElementById("canvas").getContext("2d");
    if (_l5) {
        this._u51 = new _gu1._L4();
        this._u51._eT(_gu1._L4._xT | _gu1._L4._yT);
        this._u51._6u1 = this;
        this._u51._kT = _5u1;
        this._u51._mT = _9u1;
        this._u51._nT = _bu1;
        this._u51._pT = _cu1;
        this._u51._rT = _du1;
        this._u51._uT = _eu1;
        this._u51._MF = _iu1;
        this._e21._t51(this._u51);
    }
};
_1D.prototype._Vy1 = function() {
    var __y1 = new _gu1._ox1();
    __y1._0z1 = this;
    __y1._z41 = function(_W21) {
        if (_W21._Y21()._b41() || _W21.__21()._b41()) {
            this._0z1._1z1(_W21);
        }
    };
    __y1._B41 = function(_W21, _C41) {};
    __y1._A41 = function(_W21) {};
    __y1._D41 = function(_W21, _2z1) {
        this._0z1._1z1(_W21);
    };
    this._e21._r51(__y1);
};
_1D.prototype._1z1 = function(_Dy1) {
    for (var _X2 = 0; _X2 < this._i21.length; _X2++) {
        var _3z1 = this._i21[_X2];
        if ((_3z1._Ey1 == _Dy1._Y21() && _3z1._Fy1 == _Dy1.__21()) || (_3z1._Ey1 == _Dy1.__21() && _3z1._Fy1 == _Dy1._Y21())) {
            var _7c1 = new _gu1._Kw1();
            _Dy1._6c1(_7c1);
            _3z1._Gy1[_3z1._Gy1.length] = _Dy1._5c1();
            _3z1._Hy1[_3z1._Hy1.length] = _7c1;
            return;
        }
    }
    this._i21[this._i21.length] = new _Cy1(_Dy1);
};
_1D.prototype._0D = function(_yd) {
    this._Oy1 = _yd;
};
_1D.prototype._8D = function(_7D) {
    this._Py1 = _7D;
};
_1D.prototype.__C = function(_ud) {
    this._xD = _ud;
};
_1D.prototype._6D = function(_4D, _5D) {
    this._e21._951.x = _4D;
    this._e21._951.y = _5D;
    if ((_4D != 0.0) || (_5D != 0.0)) {
        var _4z1 = this._e21._261();
        while ((_4z1 != null) && (_4z1 != undefined)) {
            if (_4z1._ST() === _gu1._ix1._t21) {
                _4z1._uD(true);
            }
            _4z1 = _4z1._Q31();
        }
    }
};
_1D.prototype._5z1 = function() {
    var _4c = _81._Oy._4c;
    for (var index = 0; index < _4c.length; index++) {
        var _4p = _4c[index];
        if (_4p.path_index >= 0) {
            var physicsObject = _4p._ZD;
            if (physicsObject !== null && physicsObject !== undefined) {
                var _4z1 = physicsObject._9v1;
                if (_4z1._ST() !== _gu1._ix1._t21) {
                    if (_4p._6z1()) {
                        _4p._B2(_7z1, 0, _4p, _4p);
                    }
                    _4z1._231(new _gu1._hu1(_4p.x * this._xD, _4p.y * this._xD), _4z1._kS());
                }
            } else {
                if (_4p._6z1()) {
                    _4p._B2(_7z1, 0, _4p, _4p);
                }
            }
        }
    }
};
_1D.prototype._8z1 = function() {
    var _9z1 = 1.0 / this._xD;
    var _4z1 = this._e21._261();
    while ((_4z1 != null) && (_4z1 != undefined)) {
        var _4p = _4z1._SV();
        if ((_4p != null) && (_4p != undefined)) {
            _4p._az1(_4z1);
            var _5c = _4z1._IC();
            _4p.phy_position_xprevious = _5c.x * _9z1;
            _4p.phy_position_yprevious = _5c.y * _9z1;
        }
        _4z1 = _4z1._Q31();
    }
};
_1D.prototype._V9 = function(_bz1) {
    if (_bz1 <= 0) {
        return;
    }
    this._5z1();
    if (this._Sy1 == true) {
        return;
    }
    this._8z1();
    var _cz1 = 1.0 / this._Oy1;
    var _dz1 = this._Oy1 / _bz1;
    var _ez1 = _dz1;
    while (_ez1 > 0.0) {
        var _fz1 = (_ez1 > 1.0) ? _cz1 : (_cz1 * _ez1);
        this._e21._J51(_fz1, this._Py1, this._Py1);
        _ez1 -= 1.0;
    }
    this._e21._N51();
    this._gz1();
    this._hz1();
};
_1D.prototype._gz1 = function() {
    var _9z1 = 1.0 / this._xD;
    var _4z1 = this._e21._261();
    while ((_4z1 != null) && (_4z1 != undefined)) {
        var _4p = _4z1._SV();
        if ((_4p != null) && (_4p != undefined)) {
            _4p._az1(_4z1);
        }
        _4z1 = _4z1._Q31();
    }
};
_1D.prototype._hz1 = function() {
    var _9z1 = 1.0 / this._xD;
    for (var i = 0; i < this._i21.length; i++) {
        if (this._i21[i]._Ey1 && this._i21[i]._Fy1 && this._i21[i]._Ey1._g41() && this._i21[i]._Fy1._g41()) {
            var _iz1 = this._i21[i]._Ey1._g41()._SV();
            var _jz1 = this._i21[i]._Fy1._g41()._SV();
            _iz1.phy_collision_points = 0;
            _iz1.phy_collision_x = [];
            _iz1.phy_collision_y = [];
            _iz1.phy_col_normal_x = [];
            _iz1.phy_col_normal_y = [];
            _jz1.phy_collision_points = 0;
            _jz1.phy_collision_x = [];
            _jz1.phy_collision_y = [];
            _jz1.phy_col_normal_x = [];
            _jz1.phy_col_normal_y = [];
            var _kz1 = 0;
            for (var _lz1 = 0; _lz1 < this._i21[i]._Gy1.length; _lz1++) {
                var _7c1 = this._i21[i]._Hy1[_lz1];
                for (var _k3 in _7c1.points) {
                    if (!_7c1.points.hasOwnProperty(_k3)) continue;
                    _iz1.phy_collision_x[_kz1] = _7c1.points[_k3].x * _9z1;
                    _iz1.phy_collision_y[_kz1] = _7c1.points[_k3].y * _9z1;
                    _iz1.phy_col_normal_x[_kz1] = _7c1._2U.x;
                    _iz1.phy_col_normal_y[_kz1] = _7c1._2U.y;
                    _jz1.phy_collision_x[_kz1] = _7c1.points[_k3].x * _9z1;
                    _jz1.phy_collision_y[_kz1] = _7c1.points[_k3].y * _9z1;
                    _jz1.phy_col_normal_x[_kz1] = _7c1._2U.x;
                    _jz1.phy_col_normal_y[_kz1] = _7c1._2U.y;
                    _iz1.phy_collision_points++;
                    _jz1.phy_collision_points++;
                    _kz1++;
                }
            }
            _iz1._B2(_mz1, _jz1.object_index, _iz1, _jz1);
            _jz1._B2(_mz1, _iz1.object_index, _jz1, _iz1);
            _iz1.phy_collision_points = 0;
            _iz1.phy_collision_x = undefined;
            _iz1.phy_collision_y = undefined;
            _iz1.phy_col_normal_x = undefined;
            _iz1.phy_col_normal_y = undefined;
            _jz1.phy_collision_points = 0;
            _jz1.phy_collision_x = undefined;
            _jz1.phy_collision_y = undefined;
            _jz1.phy_col_normal_x = undefined;
            _jz1.phy_col_normal_y = undefined;
        }
    }
    this._i21 = [];
};
_1D.prototype._JD = function(_Uv1, _64, _G1, _H1) {
    var _HD = -1;
    if (!_Uv1._tu1()) {
        return;
    }
    var _nz1 = this._oz1(_64.object_index);
    if (_nz1 != -1) {
        _Uv1._nu1._041._Y31 = this._Ty1[_nz1]._Y31;
        _Uv1._nu1._041._Z31 = this._Ty1[_nz1]._Z31;
    } else {
        _Uv1._nu1._041._Y31 = 0;
        _Uv1._nu1._041._Z31 = 0;
    }
    var _pz1 = _64._ZD;
    if (_64._ZD) {
        var _4z1 = _pz1._9v1;
        var _fD = _4z1._G21(_Uv1._nu1);
        _HD = _pz1._Tv1(_fD);
    } else {
        var _qz1 = new _gu1._hx1();
        _qz1.type = (_Uv1._nu1.__F == 0) ? (_Uv1._ku1 ? _gu1._ix1._B21 : _gu1._ix1._W11) : _gu1._ix1._t21;
        _qz1._E4 = -_64.image_angle * _i3 / 180.0;
        _qz1._Z11 = _Uv1._n21;
        _qz1.__11 = _Uv1._o21;
        _qz1._121 = _Uv1._lu1;
        var _rz1 = _64._sz1(_qz1._E4, {
            x: _G1,
            y: _H1
        });
        _qz1.position.x = (_64.x - _rz1.x) * this._xD;
        _qz1.position.y = (_64.y - _rz1.y) * this._xD;
        _qz1._JV = _64;
        var _4z1 = this._e21._JD(_qz1);
        var _fD = _4z1._G21(_Uv1._nu1);
        _pz1 = new _6v1(_4z1, _nz1, _G1, _H1);
        _64._ZD = _pz1;
        _64._az1(_4z1);
        _HD = _pz1._Tv1(_fD);
        this._tz1();
    }
    return _HD;
};
_1D.prototype._v51 = function(_uz1) {
    this._e21._v51(_uz1._9v1);
};
_1D.prototype._ME = function(_vz1) {
    this._e21._ME(_vz1._Xu1);
};
_1D.prototype._3D = function(_2D) {
    if (this._u51 == null) {
        return;
    }
    var _wz1 = 0;
    if (_2D & _Xv1) {
        _wz1 = _wz1 | _gu1._L4._xT;
    }
    if (_2D & _Yv1) {
        _wz1 = _wz1 | _gu1._L4._yT;
    }
    if (_2D & _Zv1) {
        _wz1 = _wz1 | _gu1._L4._AT;
    }
    if (_2D & __v1) {
        _wz1 = _wz1 | _gu1._L4._zT;
    }
    if (_2D & _2w1) {
        _wz1 = _wz1 | _gu1._L4._HT;
    }
    this._u51._eT(_wz1);
    this._e21._O51();
};
_1D.prototype._YD = function(_xz1, _yz1, _zz1, _Az1, _Bz1, _Cz1, _Dz1) {
    _xz1._9v1._uD(true);
    _yz1._9v1._uD(true);
    var scale = this._xD;
    var _Ez1 = new _gu1._hu1(_zz1 * scale, _Az1 * scale);
    var _Fz1 = new _gu1._hu1(_Bz1 * scale, _Cz1 * scale);
    var _kk1 = new _gu1._Xx1();
    _kk1._1Y(_xz1._9v1, _yz1._9v1, _Ez1, _Fz1);
    _kk1._I51 = _Dz1;
    var _Gz1 = this._e21._A51(_kk1);
    var _Hz1 = new _Vu1(_Gz1);
    return _Hz1;
};
_1D.prototype._0E = function(_xz1, _yz1, _zz1, _Az1, _Bz1, _Cz1, __D, _Dz1) {
    var _G51 = _xz1._9v1;
    var _H51 = _yz1._9v1;
    _G51._uD(true);
    _H51._uD(true);
    var scale = this._xD;
    var _8f1 = _G51._n31(new _gu1._hu1(_zz1 * scale, _Az1 * scale));
    var _9f1 = _H51._n31(new _gu1._hu1(_Bz1 * scale, _Cz1 * scale));
    var _kk1 = new _gu1._5y1();
    _kk1._G51 = _G51;
    _kk1._H51 = _H51;
    _kk1._8f1 = _8f1;
    _kk1._9f1 = _9f1;
    _kk1._rj1 = __D * scale;
    _kk1._I51 = _Dz1;
    var _Iz1 = this._e21._A51(_kk1);
    var _Hz1 = new _Vu1(_Iz1);
    return _Hz1;
};
_1D.prototype._9E = function(_xz1, _yz1, _Jz1, _Kz1, _Lz1, _Mz1, _Nz1, _Oz1, _Pz1, _Qz1, _Dz1) {
    _xz1._9v1._uD(true);
    _yz1._9v1._uD(true);
    var scale = this._xD;
    var anchor = new _gu1._hu1(_Jz1 * scale, _Kz1 * scale);
    var _kk1 = new _gu1._Ux1();
    _kk1._1Y(_xz1._9v1, _yz1._9v1, anchor);
    _kk1._bf1 = _Lz1;
    _kk1._cf1 = _Mz1;
    _kk1._ff1 = _Nz1;
    _kk1._df1 = _Oz1;
    _kk1._ef1 = _Pz1;
    _kk1._gf1 = _Qz1;
    _kk1._I51 = _Dz1;
    var _Rz1 = this._e21._A51(_kk1);
    var _Hz1 = new _Vu1(_Rz1);
    return _Hz1;
};
_1D.prototype._fE = function(_xz1, _yz1, _Jz1, _Kz1, _Sz1, _Tz1, _Uz1, _Vz1, _Nz1, _Wz1, _Pz1, _Qz1, _Dz1) {
    _xz1._9v1._uD(true);
    _yz1._9v1._uD(true);
    var scale = this._xD;
    var anchor = new _gu1._hu1(_Jz1 * scale, _Kz1 * scale);
    var _qT = new _gu1._hu1(_Sz1, _Tz1);
    _qT._NR();
    var _kk1 = new _gu1._Yx1();
    _kk1._1Y(_xz1._9v1, _yz1._9v1, anchor, _qT);
    _kk1._Dg1 = _Uz1 * scale;
    _kk1._Eg1 = _Vz1 * scale;
    _kk1._ff1 = _Nz1;
    _kk1._Fg1 = _Wz1;
    _kk1._ef1 = _Pz1;
    _kk1._gf1 = _Qz1;
    _kk1._I51 = _Dz1;
    var _Xz1 = this._e21._A51(_kk1);
    var _Hz1 = new _Vu1(_Xz1);
    return _Hz1;
};
_1D.prototype._lE = function(_xz1, _yz1, _Yz1, _Zz1, __z1, _0A1, _1A1, _2A1, _3A1, _4A1, _kE, _Dz1) {
    _xz1._9v1._uD(true);
    _yz1._9v1._uD(true);
    var scale = this._xD;
    var _kk1 = new _gu1._4y1();
    _kk1._1Y(_xz1._9v1, _yz1._9v1, new _gu1._hu1(_Yz1 * scale, _Zz1 * scale), new _gu1._hu1(__z1 * scale, _0A1 * scale), _xz1._9v1._k31(new _gu1._hu1(_1A1 * scale, _2A1 * scale)), _yz1._9v1._k31(new _gu1._hu1(_3A1 * scale, _4A1 * scale)), _kE);
    _kk1._I51 = _Dz1;
    var _5A1 = this._e21._A51(_kk1);
    var _Hz1 = new _Vu1(_5A1);
    return _Hz1;
};
_1D.prototype._tE = function(_xz1,
    _yz1, _mE, _nE, _oE, _pE, _qE, _Oz1, _6A1, _7A1, _8A1, _Dz1) {
    _xz1._9v1._uD(true);
    _yz1._9v1._uD(true);
    var scale = this._xD;
    var _kk1 = new _gu1._0y1();
    _kk1._1Y(_xz1._9v1, _yz1._9v1, new _gu1._hu1(_mE * scale, _nE * scale), new _gu1._hu1(_oE, _pE));
    _kk1._gf1 = _qE;
    _kk1._df1 = _Oz1;
    _kk1._ef1 = _6A1;
    _kk1._6g1 = _7A1;
    _kk1._7g1 = _8A1;
    _kk1._I51 = _Dz1;
    var _9A1 = this._e21._A51(_kk1);
    var _Hz1 = new _Vu1(_9A1);
    return _Hz1;
};
_1D.prototype._vE = function(_xz1, _yz1, _mE, _nE, _aA1, _7A1, _8A1, _Dz1) {
    _xz1._9v1._uD(true);
    _yz1._9v1._uD(true);
    var scale = this._xD;
    var _kk1 = new _gu1.__x1();
    _kk1._1Y(_xz1._9v1, _yz1._9v1, new _gu1._hu1(_mE * scale, _nE * scale));
    _kk1._af1 = (-_aA1 * 180.0) / Math.PI;
    _kk1._6g1 = _7A1;
    _kk1._7g1 = _8A1;
    _kk1._I51 = _Dz1;
    var _bA1 = this._e21._A51(_kk1);
    var _Hz1 = new _Vu1(_bA1);
    return _Hz1;
};
_1D.prototype._yE = function(_xz1, _yz1, _mE, _nE, _cA1, _dA1, _Dz1) {
    _xz1._9v1._uD(true);
    _yz1._9v1._uD(true);
    var scale = this._xD;
    var _kk1 = new _gu1._Zx1();
    _kk1._1Y(_xz1._9v1, _yz1._9v1, new _gu1._hu1(_mE * scale, _nE * scale));
    _kk1._5g1 = _cA1;
    _kk1._9h1 = _dA1;
    _kk1._I51 = _Dz1;
    var _eA1 = this._e21._A51(_kk1);
    var _Hz1 = new _Vu1(_eA1);
    return _Hz1;
};
_1D.prototype._DE = function(_xz1, _yz1, _fA1, _gA1, _kE) {
    if ((_fA1._Xu1._QT !== _gu1._Tx1._Qe1) && (_fA1._Xu1._QT !== _gu1._Tx1._Re1) && (_gA1._Xu1._QT !== _gu1._Tx1._Qe1) && (_gA1._Xu1._QT !== _gu1._Tx1._Re1)) {
        return -1;
    }
    _xz1._9v1._uD(true);
    _yz1._9v1._uD(true);
    var _kk1 = new _gu1._1y1();
    _kk1._G51 = _xz1._9v1;
    _kk1._H51 = _yz1._9v1;
    _kk1._Bh1 = _fA1._Xu1;
    _kk1._Ch1 = _gA1._Xu1;
    _kk1._qe1 = _kE;
    var _5A1 = this._e21._A51(_kk1);
    var _Hz1 = new _Vu1(_5A1);
    return _Hz1;
};
_1D.prototype._hA1 = function(_Jy1) {
    for (var _X2 = 0; _X2 < _Wv1; _X2++) {
        if (this._Ty1[_X2]._My1 == _Jy1) {
            return _X2;
        }
    }
    return -1;
};
_1D.prototype._iA1 = function(_Jy1) {
    var _jA1 = this._hA1(_Jy1);
    if (_jA1 != -1) {
        return _jA1;
    }
    for (var _X2 = 0; _X2 < _Wv1; _X2++) {
        if (this._Ty1[_X2]._My1 == -1) {
            this._Ty1[_X2]._My1 = _Jy1;
            this._Ty1[_X2]._Y31 = (1 << _X2);
            this._Ty1[_X2]._Z31 = 0;
            return _X2;
        }
    }
    return -1;
};
_1D.prototype._kA1 = function(_Jy1, _lA1) {
    var _mA1 = _Jy1;
    var _nA1 = _2q._O3(_Jy1);
    while ((_nA1._ez >= 0) && _2q._O3(_nA1._ez)) {
        _nA1 = _2q._O3(_nA1._ez);
        var _oA1 = _nA1._gz;
        var _pA1 = 0;
        for (var _qA1 in _rA1) {
            if (!_rA1.hasOwnProperty(_qA1)) continue;
            for (var _ic1 in _rA1[_qA1]) {
                if (!_rA1[_qA1].hasOwnProperty(_ic1)) continue;
                var _sA1 = -1;
                if (_qA1 == _Jy1) {
                    _sA1 = _ic1;
                } else if (_ic1 == _Jy1) {
                    _sA1 = _qA1;
                }
                if (_sA1 != -1) {
                    _pA1++;
                }
            }
        }
        if (_pA1 !== _lA1.length) {
            break;
        }
        _mA1 = _oA1;
    }
    return _mA1;
};
_1D.prototype._tA1 = function(_Jy1) {
    var _uA1 = [];
    for (var _qA1 in _rA1) {
        if (!_rA1.hasOwnProperty(_qA1)) continue;
        for (var _ic1 in _rA1[_qA1]) {
            if (!_rA1[_qA1].hasOwnProperty(_ic1)) continue;
            var _sA1 = -1;
            if (_qA1 == _Jy1) {
                _sA1 = _ic1;
            } else if (_ic1 == _Jy1) {
                _sA1 = _qA1;
            }
            if (_sA1 !== -1) {
                _uA1[_uA1.length] = _sA1;
            }
        }
    }
    return _uA1;
};
_1D.prototype._vA1 = function(_cc,
    _lA1) {
    for (var _Xo in _2q._wA1) {
        if (!_2q._wA1.hasOwnProperty(_Xo)) continue;
        var _xA1 = _2q._wA1[_Xo];
        if (_xA1._ez === _cc._gz) {
            if (this._tA1(_xA1._gz).length !== 0) {
                _lA1[_lA1.length] = _xA1._gz;
            }
            this._vA1(_xA1, _lA1);
        }
    }
};
_1D.prototype._yA1 = function(_Jy1) {
    var _uA1 = this._tA1(_Jy1);
    var _mA1 = _Jy1;
    var _nA1 = _2q._O3(_Jy1);
    while ((_nA1._ez >= 0) && _2q._O3(_nA1._ez)) {
        _nA1 = _2q._O3(_nA1._ez);
        _uA1 = _uA1.concat(this._tA1(_nA1._gz));
    }
    for (var _X2 = 0; _X2 < _uA1.length; _X2++) {
        var _zA1 = _uA1[_X2];
        var _Xo = _2q._O3(_zA1);
        this._vA1(_Xo, _uA1);
    }
    return _uA1;
};
_1D.prototype._AA1 = function(_Jy1, _8v1) {
    var _uA1 = this._yA1(_Jy1);
    for (var _BA1 = 0; _BA1 < _uA1.length; ++_BA1) {
        for (var _CA1 = 0; _CA1 < _Wv1; ++_CA1) {
            if (this._Ty1[_CA1]._My1 == _uA1[_BA1]) {
                this._Ty1[_8v1]._Z31 |= this._Ty1[_CA1]._Y31;
                this._Ty1[_CA1]._Z31 |= this._Ty1[_8v1]._Y31;
            }
        }
    }
};
_1D.prototype._oz1 = function(_Jy1) {
    var _nz1 = this._hA1(_Jy1);
    if (_nz1 !== -1) {
        return _nz1;
    }
    var _uA1 = this._tA1(_Jy1);
    var _My1 = _Jy1;
    if (_uA1.length === 0) {
        var _mA1 = _Jy1;
        var _nA1 = _2q._O3(_Jy1);
        while ((_nA1._ez >= 0) && _2q._O3(_nA1._ez)) {
            _nA1 = _2q._O3(_nA1._ez);
            _My1 = _nA1._gz;
            _uA1 = this._tA1(_My1);
            if (_uA1.length !== 0) {
                _nz1 = this._hA1(_My1);
                break;
            }
        }
        if (_uA1.length === 0) {
            return -1;
        }
    }
    if (_nz1 === -1) {
        _nz1 = this._iA1(_My1);
        if (_nz1 === -1) {
            return -1;
        }
    }
    this._AA1(_Jy1, _nz1);
    return _nz1;
};
_1D.prototype._tz1 = function() {
    var _4z1 = this._e21._261();
    while ((_4z1 != null) && (_4z1 != undefined)) {
        var _4p = _4z1._SV();
        if ((_4p != null) && (_4p != undefined)) {
            var _mF = _4p._ZD._av1;
            if (_mF != -1) {
                var _DA1 = new _gu1._jx1();
                _DA1._Y31 = this._Ty1[_mF]._Y31;
                _DA1._Z31 = this._Ty1[_mF]._Z31;
                var _fD = _4z1._N31();
                while ((_fD != null) && (_fD != undefined)) {
                    _DA1.__31 = _fD._e41().__31;
                    _fD._c41(_DA1);
                    _fD = _fD._k21;
                }
            }
        }
        _4z1 = _4z1._Q31();
    }
};
_1D.prototype._dF = function(_td, _sg, _h2, _i2, _l2) {
    var _EA1 = new _gu1._8w1();
    _EA1._7b(new _gu1._hu1(_h2, _i2), _l2);
    if ((_td._ZD === null) || (_td._ZD === undefined) || (_sg._ZD === null) || (_sg._ZD === undefined)) {
        return;
    }
    var _FA1 = _td._ZD._9v1;
    var _GA1 = _sg._ZD._9v1;
    var _HA1;
    for (_HA1 = _FA1._N31(); _HA1; _HA1 = _HA1._Q31()) {
        var _IA1;
        for (_IA1 = _GA1._N31(); _IA1; _IA1 = _HA1._Q31()) {
            if (_gu1._1x1(_HA1._941(), 0, _IA1._941(), 0, _EA1, _GA1._vS())) {
                return true;
            }
        }
    }
    return false;
};
_1D.prototype._nF = function(_2D, _h2, _i2, _JA1, _KA1, _e7, __6, _6G) {
    var _H21 = new _gu1._xy1();
    _H21._vP = _2D;
    _H21.position._7b(_h2 * this._xD, _i2 * this._xD);
    _H21._7I._7b(_JA1 * this._xD, _KA1 * this._xD);
    _H21._R4._7b((_e7 & 0xff), (_e7 & 0xff00) >> 8, (_e7 & 0xff0000) >> 16, (__6 * 255.0));
    _H21._JV = _6G;
    return this._e21._nF(_H21);
};
_1D.prototype._oF = function(_LA1) {
    this._e21._271(_LA1);
};
_1D.prototype._AF = function(_4G, _MA1, _h2, _i2, _NA1, _JA1, _KA1, _OA1, _e7, __6, _PA1, _6G) {
    this._Ry1._vP = _4G;
    this._Ry1._q81 = _MA1;
    this._Ry1._E4 = (-_NA1 * _i3) / 180.0;
    this._Ry1._Y11 = (_OA1 * _i3) / 180.0;
    this._Ry1.position._7b(_h2 * this._xD, _i2 * this._xD);
    this._Ry1._X11._7b(_JA1 * this._xD, _KA1 * this._xD);
    this._Ry1._R4._7b((_e7 & 0xff), (_e7 & 0xff00) >> 8, (_e7 & 0xff0000) >> 16, (__6 * 255.0));
    this._Ry1._zF = _PA1;
    this._Ry1._r81 = true;
    this._Ry1._JV = _6G;
};
_1D.prototype._BF = function(_hi) {
    var _jf = new _gu1._pu1();
    _jf._RT = Math.abs(_hi * this._xD);
    this._Ry1._jf = _jf;
};
_1D.prototype._CF = function(_yD, _zD) {
    if (_yD == 0.0) {
        _yD = 1.0;
    }
    if (_zD == 0.0) {
        _zD = 1.0;
    }
    var _jf = new _gu1._qu1();
    _jf._TU(_yD * this._xD, _zD * this._xD);
    this._Ry1._jf = _jf;
};
_1D.prototype._DF = function() {
    var _jf = new _gu1._qu1();
    this._Ry1._jf = _jf;
};
_1D.prototype._EF = function(_h2, _i2) {
    if ((this._Ry1._jf !== null) && (this._Ry1._jf._QT === _gu1._uu1._5U)) {
        var _jf = this._Ry1._jf;
        if (_jf._AU < _gu1._9y1) {
            _jf._zU[_jf._AU++] = new _gu1._hu1(_h2 * this._xD, _i2 * this._xD);
        }
    }
};
_1D.prototype._QA1 = function() {
    for (var _X2 = 0; _X2 < this._Qy1.length; _X2++) {
        var _bG = this._Qy1[_X2];
        if (_bG === null || _bG === undefined) {
            return _X2;
        }
    }
    var _s1 = this._Qy1.length;
    return _s1;
};
_1D.prototype._RA1 = function(_SA1) {
    if (_SA1 >= 0 && _SA1 < this._Qy1.length) {
        return this._Qy1[_SA1];
    }
    return null;
};
_1D.prototype._FF = function() {
    if ((this._Ry1._jf !== null) && (this._Ry1._jf._QT === _gu1._uu1._5U)) {
        var _35 = [];
        var _jf = this._Ry1._jf;
        for (var _X2 = 0; _X2 < _jf._AU; _X2++) {
            _35[_X2] = new _gu1._hu1(_jf._zU[_X2].x, _jf._zU[_X2].y);
        }
        _jf._7b(_35, _jf._AU);
    }
    var _DK = this._e21._571(this._Ry1);
    var __31 = this._QA1();
    this._Qy1[__31] = _DK;
    return __31;
};
_1D.prototype._671 = function(_TA1, _UA1) {
    var _VA1 = this._RA1(_TA1);
    var _WA1 = this._RA1(_UA1);
    if ((_VA1 !== null) && (_WA1 !== null)) {
        this._e21._671(_VA1, _WA1);
        this._Qy1[_UA1] = null;
    }
};
_1D.prototype._JF = function(_SA1) {
    var _DK = this._RA1(_SA1);
    if (_DK !== null) {
        this._e21._971(_DK);
        this._Qy1[_SA1] = null;
    }
};
_1D.prototype._qF = function(_h2, _i2, _hi) {
    var _jf = new _gu1._pu1();
    _jf._RT = _hi * this._xD;
    var _XA1 = new _gu1._8w1();
    _XA1._6d._7b(_h2 * this._xD, _i2 * this._xD);
    _XA1._vt._ZR();
    this._e21._471(_jf, _XA1);
};
_1D.prototype._tF = function(_h2, _i2, _yD, _zD) {
    var _jf = new _gu1._qu1();
    _jf._TU(_yD * this._xD, _zD * this._xD);
    var _XA1 = new _gu1._8w1();
    _XA1._6d._7b(_h2 * this._xD,
        _i2 * this._xD);
    _XA1._vt._ZR();
    this._e21._471(_jf, _XA1);
};
_1D.prototype._vF = function(_YA1, _YM) {
    if (_YM > _gu1._9y1) {
        _YM = _gu1._9y1;
    }
    var points = [];
    for (var _X2 = 0; _X2 < _YM; _X2++) {
        points[_X2] = new _gu1._hu1(_YA1[(_X2 * 2) + 0] * this._xD, _YA1[(_X2 * 2) + 1] * this._xD);
    }
    var _ZA1 = new _gu1._qu1();
    _ZA1._7b(points, _YM);
    var _XA1 = new _gu1._8w1();
    _XA1._ZR();
    this._e21._471(_ZA1, _XA1);
};
_1D.prototype.__A1 = function(_MB, _0B1, _1B1, _2B1) {
    var _n4 = this._e21._QF();
    if (_1B1 < 0 || _1B1 >= _n4) return;
    if (_2B1 < _1B1) return;
    if (_2B1 > _n4) return;
    var _vP = this._e21._a71();
    var _S41 = this._e21._b71();
    var _T41 = this._e21._c71();
    var _3B1 = this._e21._d71();
    var _JV = this._e21._e71();
    var _4B1 = _MB._0x;
    var _5B1 = 1.0 / this._xD;
    for (var _X2 = _1B1; _X2 < _2B1; _X2++) {
        if (_0B1 & (1 << 0)) {
            _MB._4x(_2L, _vP[_X2]);
        }
        if (_0B1 & (1 << 1)) {
            _MB._4x(_6B1, _S41[_X2].x * _5B1);
            _MB._4x(_6B1, _S41[_X2].y * _5B1);
        }
        if (_0B1 & (1 << 2)) {
            _MB._4x(_6B1, _T41[_X2].x * _5B1);
            _MB._4x(_6B1, _T41[_X2].y * _5B1);
        }
        if (_0B1 & (1 << 3)) {
            _MB._4x(_2L, (_3B1[_X2]._Z4 << 24) | (_3B1[_X2]._d3 << 16) | (_3B1[_X2]._Y4 << 8) | _3B1[_X2]._g3);
        }
        if (_0B1 & (1 << 4)) {
            _MB._4x(_7B1, _JV[_X2]);
        }
    }
    _MB._8B1(_yL, _4B1);
};
_1D.prototype._SF = function(_MB, _0B1) {
    this.__A1(_MB, _0B1, 0, this._e21._QF());
};
_1D.prototype._aG = function(_F1, _3r1, _0B1) {
    this.__A1(_3r1, _0B1, _F1, _F1 + 1);
};
_1D.prototype._5G = function(_F1, _4G) {
    if (_F1 >= 0 && _F1 < this._e21._QF()) {
        var _vP = this._e21._a71();
        _vP[_F1] = _4G;
    }
};
_1D.prototype._7G = function(_6G, _4G) {
    var _n4 = this._e21._QF();
    var _vP = this._e21._a71();
    var _JV = this._e21._e71();
    for (var _X2 = 0; _X2 < _n4; _X2++) {
        if ((_6G === 0) || (_6G === _JV[_X2])) {
            _vP[_X2] = _4G;
        }
    }
};
_1D.prototype._8G = function(_SA1, _2D) {
    var _bG = this._RA1(_SA1);
    if (_bG !== null && _bG !== undefined) {
        _bG._8G(_2D);
    }
};
_1D.prototype._9G = function(_SA1) {
    var _bG = this._RA1(_SA1);
    if (_bG !== null && _bG !== undefined) {
        return _bG._9G();
    }
    return 0;
};
_1D.prototype._cG = function(_SA1) {
    var _bG = this._RA1(_SA1);
    if (_bG !== null && _bG !== undefined) {
        return _bG._QF();
    }
    return 0;
};
_1D.prototype._dG = function(_SA1, _3r1, _0B1) {
    var _bG = this._RA1(_SA1);
    if (_bG !== null && _bG !== undefined) {
        var start = _bG._F81();
        var end = start + _bG._QF();
        this.__A1(_3r1, _0B1, start, end);
    }
};
_1D.prototype._eG = function(_SA1) {
    var _bG = this._RA1(_SA1);
    if (_bG !== null && _bG !== undefined) {
        return _bG._g31();
    }
};
_1D.prototype._fG = function(_SA1) {
    var _bG = this._RA1(_SA1);
    if (_bG !== null && _bG !== undefined) {
        return _bG._h31();
    }
};
_1D.prototype._gG = function(_SA1) {
    var _bG = this._RA1(_SA1);
    if (_bG !== null && _bG !== undefined) {
        return _bG._sY().x / this._xD;
    }
};
_1D.prototype._hG = function(_SA1) {
    var _bG = this._RA1(_SA1);
    if (_bG !== null && _bG !== undefined) {
        return _bG._sY().y / this._xD;
    }
};
_1D.prototype._iG = function(_SA1) {
    var _bG = this._RA1(_SA1);
    if (_bG !== null && _bG !== undefined) {
        return _bG._731().x / this._xD;
    }
};
_1D.prototype._jG = function(_SA1) {
    var _bG = this._RA1(_SA1);
    if (_bG !== null && _bG !== undefined) {
        return _bG._731().y / this._xD;
    }
};
_1D.prototype._kG = function(_SA1) {
    var _bG = this._RA1(_SA1);
    if (_bG !== null && _bG !== undefined) {
        return (_bG._931() * 180.0) / Math.PI;
    }
};
_1D.prototype._lG = function(_SA1) {
    var _bG = this._RA1(_SA1);
    if (_bG !== null && _bG !== undefined) {
        return _bG._IC().x / this._xD;
    }
};
_1D.prototype._mG = function(_SA1) {
    var _bG = this._RA1(_SA1);
    if (_bG !== null && _bG !== undefined) {
        return _bG._IC().y / this._xD;
    }
};
_1D.prototype._nG = function(_SA1) {
    var _bG = this._RA1(_SA1);
    if (_bG !== null && _bG !== undefined) {
        var _E4 = _bG._kS();
        return (_E4 * 180.0) / Math.PI;
    }
};
_1D.prototype._Xy1 = function(_9B1, _6G, _73, _Yd) {
    var _n4 = this._e21._QF();
    var _vP = this._e21._a71();
    var _S41 = this._e21._b71();
    var _3B1 = this._e21._d71();
    var _JV = this._e21._e71();
    var _5B1 = 1.0 / this._xD;
    for (var _X2 = 0; _X2 < _n4; _X2++) {
        if (((_vP[_X2] === 0) || ((_vP[_X2] & _9B1) !== 0)) && ((_6G === 0) || (_6G === _JV[_X2]))) {
            var _F4 = (_3B1[_X2]._g3 & 0xff) | ((_3B1[_X2]._Y4 << 8) & 0xff00) | ((_3B1[_X2]._d3 << 16) & 0xff0000);
            _73._L4(_X2, _S41[_X2].x * _5B1, _S41[_X2].y * _5B1, 1.0, 1.0, 0, _F4, _3B1[_X2]._Z4 / 255.0);
        }
    }
};
_1D.prototype._Zy1 = function(_9B1, _6G, _73, _Yd, _Ie, _Je, _l2, _e7, __6) {
    var _n4 = this._e21._QF();
    var _vP = this._e21._a71();
    var _S41 = this._e21._b71();
    var _JV = this._e21._e71();
    var _5B1 = 1.0 / this._xD;
    for (var _X2 = 0; _X2 < _n4; _X2++) {
        if (((_vP[_X2] === 0) || ((_vP[_X2] & _9B1) !== 0)) && ((_6G === 0) || (_6G === _JV[_X2]))) {
            _73._L4(_X2, _S41[_X2].x * _5B1, _S41[_X2].y * _5B1, _Ie, _Je, _l2, _e7, __6);
        }
    }
};
_1D.prototype._Wy1 = function(_9B1, _6G, _73, _Yd) {
    var _L1 = _73._M1[_Yd % _73._N1()];
    if (!_L1) {
        return;
    }
    if (!_L1._T1.complete) {
        return;
    }
    if (!_L1._T1._C5) {
        _D5(_L1);
    }
    var _n4 = this._e21._QF();
    var _vP = this._e21._a71();
    var _S41 = this._e21._b71();
    var _3B1 = this._e21._d71();
    var _JV = this._e21._e71();
    var _5B1 = 1.0 / this._xD;
    var _aB1 = 0;
    for (var _X2 = 0; _X2 < _n4; _X2++) {
        if (((_vP[_X2] === 0) || ((_vP[_X2] & _9B1) !== 0)) && ((_6G === 0) || (_6G === _JV[_X2]))) {
            _aB1++;
        }
    }
    if (_aB1 === 0) {
        return;
    }
    var _F5 = _b4._G5(_H5._I5, _L1._T1._C5, _b4._J5, _aB1 * 6);
    var _K5 = _F5._L5() >> 2;
    var index = _K5 * _F5._M5;
    _F5._M5 += _aB1 * 6;
    var _N5 = _F5._O5;
    var _P5 = _F5._Q5;
    var _R5 = _F5._S5;
    var _T5 = index;
    var _U5 = _T5 + _K5;
    var _Z1 = _U5 + _K5;
    var _V5 = _Z1 + _K5;
    var _W5 = _V5 + _K5;
    var _X5 = _W5 + _K5;
    var _03 = -(_73.xOrigin - _L1.XOffset);
    var _13 = -(_73.yOrigin - _L1.YOffset);
    var _23 = _03 + _L1.CropWidth;
    var _33 = _13 + _L1.CropHeight;
    var _bB1 = 0;
    for (var _X2 = 0; _X2 < _n4; _X2++) {
        if (((_vP[_X2] === 0) || ((_vP[_X2] & _9B1) !== 0)) && ((_6G === 0) || (_6G === _JV[_X2]))) {
            var x = _S41[_X2].x * _5B1;
            var y = _S41[_X2].y * _5B1;
            _N5[_T5 + 0] = _N5[_W5 + 0] = _N5[_X5 + 0] = x + _03;
            _N5[_T5 + 1] = _N5[_U5 + 1] = _N5[_X5 + 1] = y + _13;
            _N5[_U5 + 0] = _N5[_Z1 + 0] = _N5[_V5 + 0] = x + _23;
            _N5[_Z1 + 1] = _N5[_V5 + 1] = _N5[_W5 + 1] = y + _33;
            _N5[_T5 + 2] = _N5[_U5 + 2] = _N5[_Z1 + 2] = _N5[_V5 + 2] = _N5[_W5 + 2] = _N5[_X5 + 2] = _Y5;
            var _F4 = (_3B1[_X2]._g3 & 0xff) | ((_3B1[_X2]._Y4 << 8) & 0xff00) | ((_3B1[_X2]._d3 << 16) & 0xff0000) | ((_3B1[_X2]._Z4 << 24) & 0xff000000);
            _P5[_T5] = _P5[_U5] = _P5[_Z1] = _P5[_V5] = _P5[_W5] = _P5[_X5] = _F4;
            _R5[_T5 + 0] = _R5[_W5 + 0] = _R5[_X5 + 0] = _L1.x / _L1._T1.width;
            _R5[_T5 + 1] = _R5[_U5 + 1] = _R5[_X5 + 1] = _L1.y / _L1._T1.height;
            _R5[_U5 + 0] = _R5[_Z1 + 0] = _R5[_V5 + 0] = (_L1.x + _L1.w) / _L1._T1.width;
            _R5[_Z1 + 1] = _R5[_V5 + 1] = _R5[_W5 + 1] = (_L1.y + _L1.h) / _L1._T1.height;
            var _cB1 = _K5 * 6;
            _T5 += _cB1;
            _U5 += _cB1;
            _Z1 += _cB1;
            _V5 += _cB1;
            _W5 += _cB1;
            _X5 += _cB1;
        }
    }
};
_1D.prototype._Yy1 = function(_9B1, _6G, _73, _Yd, _Ie, _Je, _l2, _e7, __6) {
    _l2 = (_l2 * Math.PI) / 180.0;
    var _L1 = _73._M1[_Yd % _73._N1()];
    if (!_L1) {
        return;
    }
    if (!_L1._T1.complete) {
        return;
    }
    if (!_L1._T1._C5) {
        _D5(_L1);
    }
    var _n4 = this._e21._QF();
    var _vP = this._e21._a71();
    var _S41 = this._e21._b71();
    var _JV = this._e21._e71();
    var _5B1 = 1.0 / this._xD;
    var _aB1 = 0;
    for (var _X2 = 0; _X2 < _n4; _X2++) {
        if (((_vP[_X2] === 0) || ((_vP[_X2] & _9B1) !== 0)) && ((_6G === 0) || (_6G === _JV[_X2]))) {
            _aB1++;
        }
    }
    if (_aB1 === 0) {
        return;
    }
    var _F5 = _b4._G5(_H5._I5, _L1._T1._C5, _b4._J5, _aB1 * 6);
    var _K5 = _F5._L5() >> 2;
    var index = _K5 * _F5._M5;
    _F5._M5 += _aB1 * 6;
    var _N5 = _F5._O5;
    var _P5 = _F5._Q5;
    var _R5 = _F5._S5;
    var _T5 = index;
    var _U5 = _T5 + _K5;
    var _Z1 = _U5 + _K5;
    var _V5 = _Z1 + _K5;
    var _W5 = _V5 + _K5;
    var _X5 = _W5 + _K5;
    var _F4 = _e7 | (((__6 * 255) & 0xff) << 24);
    var _03 = -_Ie * (_73.xOrigin - _L1.XOffset);
    var _13 = -_Je * (_73.yOrigin - _L1.YOffset);
    var _23 = _03 + (_Ie * _L1.CropWidth);
    var _33 = _13 + (_Je * _L1.CropHeight);
    var _bB1 = 0;
    if (Math.abs(_l2) < 0.0001) {
        for (var _X2 = 0; _X2 < _n4; _X2++) {
            if (((_vP[_X2] === 0) || ((_vP[_X2] & _9B1) !== 0)) && ((_6G === 0) || (_6G === _JV[_X2]))) {
                var x = _S41[_X2].x * _5B1;
                var y = _S41[_X2].y * _5B1;
                _N5[_T5 + 0] = _N5[_W5 + 0] = _N5[_X5 + 0] = x + _03;
                _N5[_T5 + 1] = _N5[_U5 + 1] = _N5[_X5 + 1] = y + _13;
                _N5[_U5 + 0] = _N5[_Z1 + 0] = _N5[_V5 + 0] = x + _23;
                _N5[_Z1 + 1] = _N5[_V5 + 1] = _N5[_W5 + 1] = y + _33;
                _N5[_T5 + 2] = _N5[_U5 + 2] = _N5[_Z1 + 2] = _N5[_V5 + 2] = _N5[_W5 + 2] = _N5[_X5 + 2] = _Y5;
                _P5[_T5] = _P5[_U5] = _P5[_Z1] = _P5[_V5] = _P5[_W5] = _P5[_X5] = _F4;
                _R5[_T5 + 0] = _R5[_W5 + 0] = _R5[_X5 + 0] = _L1.x / _L1._T1.width;
                _R5[_T5 + 1] = _R5[_U5 + 1] = _R5[_X5 + 1] = _L1.y / _L1._T1.height;
                _R5[_U5 + 0] = _R5[_Z1 + 0] = _R5[_V5 + 0] = (_L1.x + _L1.w) / _L1._T1.width;
                _R5[_Z1 + 1] = _R5[_V5 + 1] = _R5[_W5 + 1] = (_L1.y + _L1.h) / _L1._T1.height;
                var _cB1 = _K5 * 6;
                _T5 += _cB1;
                _U5 += _cB1;
                _Z1 += _cB1;
                _V5 += _cB1;
                _W5 += _cB1;
                _X5 += _cB1;
            }
        }
    } else {
        var _F3 = Math.sin(_l2);
        var _G3 = Math.cos(_l2);
        var _dB1 = _03 * _G3;
        var _eB1 = _23 * _G3;
        var _fB1 = _13 * _G3;
        var _gB1 = _33 * _G3;
        var _hB1 = _03 * _F3;
        var _iB1 = _23 * _F3;
        var _jB1 = _13 * _F3;
        var _kB1 = _33 * _F3;
        for (var _X2 = 0; _X2 < _n4; _X2++) {
            if (((_vP[_X2] === 0) || ((_vP[_X2] & _9B1) !== 0)) && ((_6G === 0) || (_6G === _JV[_X2]))) {
                var x = _S41[_X2].x * _5B1;
                var y = _S41[_X2].y * _5B1;
                _N5[_T5 + 0] = _N5[_X5 + 0] = x + _dB1 + _jB1;
                _N5[_T5 + 1] = _N5[_X5 + 1] = y - _hB1 + _fB1;
                _N5[_Z1 + 0] = _N5[_V5 + 0] = x + _eB1 + _kB1;
                _N5[_Z1 + 1] = _N5[_V5 + 1] = y - _iB1 + _gB1;
                _N5[_U5 + 1] = y - _iB1 + _fB1;
                _N5[_U5 + 0] = x + _eB1 + _jB1;
                _N5[_W5 + 0] = x + _dB1 + _kB1;
                _N5[_W5 + 1] = y - _hB1 + _gB1;
                _P5[_T5] = _P5[_U5] = _P5[_Z1] = _P5[_V5] = _P5[_W5] = _P5[_X5] = _F4;
                _R5[_T5 + 0] = _R5[_W5 + 0] = _R5[_X5 + 0] = _L1.x / _L1._T1.width;
                _R5[_T5 + 1] = _R5[_U5 + 1] = _R5[_X5 + 1] = _L1.y / _L1._T1.height;
                _R5[_U5 + 0] = _R5[_Z1 + 0] = _R5[_V5 + 0] = (_L1.x + _L1.w) / _L1._T1.width;
                _R5[_Z1 + 1] = _R5[_V5 + 1] = _R5[_W5 + 1] = (_L1.y + _L1.h) / _L1._T1.height;
                var _cB1 = _K5 * 6;
                _T5 += _cB1;
                _U5 += _cB1;
                _Z1 += _cB1;
                _V5 += _cB1;
                _W5 += _cB1;
                _X5 += _cB1;
            }
        }
    }
};
_1D.prototype._QF = function() {
    return this._e21._QF();
};
_1D.prototype._TF = function() {
    return this._e21._TF();
};
_1D.prototype._UF = function() {
    return this._e21._UF() * (1.0 / this._xD);
};
_1D.prototype._VF = function() {
    return this._e21._VF();
};
_1D.prototype._WF = function() {
    return this._e21._WF();
};
_1D.prototype._XF = function() {
    return this._e21._XF();
};
_1D.prototype._YF = function(_YM) {
    this._e21._YF(_YM);
};
_1D.prototype._ZF = function(_hi) {
    this._e21._ZF(_hi * this._xD);
};
_1D.prototype._0G = function(_hD) {
    this._e21._0G(_hD);
};
_1D.prototype._2G = function(_qD) {
    this._e21._2G(_qD);
};
_1D.prototype._3G = function(_ud) {
    this._e21._3G(_ud);
};
var _W = {
    _lB1: 180 / Math.PI,
    _mB1: Math.PI / 180,
    _1v: [],
    Float32Array: (typeof(Float32Array) === 'undefined') ? Array : Float32Array,
    Uint16Array: (typeof(Uint16Array) === 'undefined') ? Array : Uint16Array
};
_W._nB1 = function(name, parent) {
    this.name = name;
    this.parent = parent;
};
_W._nB1.prototype = {
    length: 0,
    x: 0,
    y: 0,
    rotation: 0,
    scaleX: 1,
    scaleY: 1,
    _oB1: true,
    _pB1: true,
    _z2: false,
    _A2: false
};
_W._qB1 = function(name, _36) {
    this.name = name;
    this._36 = _36;
};
_W._qB1.prototype = {
    _d3: 1,
    _Y4: 1,
    _g3: 1,
    _Z4: 1,
    _46: null,
    _rB1: false
};
_W._sB1 = function(name) {
    this.name = name;
    this._tB1 = [];
};
_W._sB1.prototype = {
    target: null,
    _uB1: 1,
    _vB1: 1
};
_W._G4 = function(_36, _n2, parent) {
    this.data = _36;
    this._n2 = _n2;
    this.parent = parent;
    this._wB1();
};
_W._G4._H4 = false;
_W._G4.prototype = {
    x: 0,
    y: 0,
    rotation: 0,
    _xB1: 0,
    scaleX: 1,
    scaleY: 1,
    _z2: false,
    _A2: false,
    _yB1: 0,
    _zB1: 0,
    _R3: 0,
    _AB1: 0,
    _w5: 0,
    _S3: 0,
    _T3: 0,
    _U3: 1,
    _V3: 1,
    _BB1: false,
    _CB1: false,
    _p2: function() {
        var parent = this.parent;
        if (parent) {
            this._R3 = this.x * parent._yB1 + this.y * parent._zB1 + parent._R3;
            this._S3 = this.x * parent._AB1 + this.y * parent._w5 + parent._S3;
            if (this.data._oB1) {
                this._U3 = parent._U3 * this.scaleX;
                this._V3 = parent._V3 * this.scaleY;
            } else {
                this._U3 = this.scaleX;
                this._V3 = this.scaleY;
            }
            this._BB1 = parent._BB1 != this._z2;
            this._CB1 = parent._CB1 != this._A2;
            if (this.data._pB1) {
                if ((this._BB1 || this._CB1) && (this._BB1 != this._CB1)) {
                    this._T3 = (360 - parent._T3) + this._xB1;
                } else {
                    this._T3 = parent._T3 + this._xB1;
                }
            } else {
                this._T3 = this._xB1;
            }
        } else {
            var _DB1 = this._n2._z2,
                _EB1 = this._n2._A2;
            this._R3 = _DB1 ? -this.x : this.x;
            this._S3 = (_EB1 != _W._G4._H4) ? -this.y : this.y;
            this._U3 = this.scaleX;
            this._V3 = this.scaleY;
            this._T3 = this._xB1;
            this._BB1 = _DB1 != this._z2;
            this._CB1 = _EB1 != this._A2;
        }
        var _FB1 = this._T3 * _W._mB1;
        var cos = Math.cos(_FB1);
        var sin = Math.sin(_FB1);
        if (this._BB1) {
            this._yB1 = -cos * this._U3;
            this._zB1 = sin * this._V3;
        } else {
            this._yB1 = cos * this._U3;
            this._zB1 = -sin * this._V3;
        }
        if (this._CB1 != _W._G4._H4) {
            this._AB1 = -sin * this._U3;
            this._w5 = -cos * this._V3;
        } else {
            this._AB1 = sin * this._U3;
            this._w5 = cos * this._V3;
        }
    },
    _wB1: function() {
        var data = this.data;
        this.x = data.x;
        this.y = data.y;
        this.rotation = data.rotation;
        this._xB1 = this.rotation;
        this.scaleX = data.scaleX;
        this.scaleY = data.scaleY;
        this._z2 = data._z2;
        this._A2 = data._A2;
    },
    _GB1: function(_621) {
        var _A5 = _621[0] - this._R3,
            _B5 = _621[1] - this._S3;
        var _yB1 = this._yB1,
            _AB1 = this._AB1,
            _zB1 = this._zB1,
            _w5 = this._w5;
        if (this._BB1 != (this._CB1 != _W._G4._H4)) {
            _yB1 = -_yB1;
            _w5 = -_w5;
        }
        var _HB1 = 1 / (_yB1 * _w5 - _zB1 * _AB1);
        _621[0] = _A5 * _yB1 * _HB1 - _B5 * _zB1 * _HB1;
        _621[1] = _B5 * _w5 * _HB1 - _A5 * _AB1 * _HB1;
    },
    _IB1: function(_JB1) {
        var _KB1 = _JB1[0],
            _LB1 = _JB1[1];
        _JB1[0] = _KB1 * this._yB1 + _LB1 * this._zB1 + this._R3;
        _JB1[1] = _KB1 * this._AB1 + _LB1 * this._w5 + this._S3;
    }
};
_W._MB1 = function(_NB1, _K3) {
    this.data = _NB1;
    this._K3 = _K3;
    this._OB1 = [];
    this._wB1();
};
_W._MB1.prototype = {
    _d3: 1,
    _Y4: 1,
    _g3: 1,
    _Z4: 1,
    _PB1: 0,
    _A1: null,
    _u1: function(_A1) {
        this._A1 = _A1;
        this._PB1 = this._K3._n2._6e;
        this._OB1.length = 0;
    },
    _QB1: function(_6e) {
        this._PB1 = this._K3._n2._6e - _6e;
    },
    _RB1: function() {
        return this._K3._n2._6e - this._PB1;
    },
    _wB1: function() {
        var data = this.data;
        this._d3 = data._d3;
        this._Y4 = data._Y4;
        this._g3 = data._g3;
        this._Z4 = data._Z4;
        var _SB1 = this._K3._n2.data._W4;
        for (var i = 0, _X2 = _SB1.length; i < _X2; i++) {
            if (_SB1[i] == data) {
                this._u1(!data._46 ? null : this._K3._n2._TB1(i, data._46));
                break;
            }
        }
    }
};
_W._UB1 = function(data, _n2) {
    this.data = data;
    this._vB1 = data._vB1;
    this._uB1 = data._uB1;
    this._tB1 = [];
    for (var i = 0, _X2 = data._tB1.length; i < _X2; i++) this._tB1.push(_n2._L3(data._tB1[i].name));
    this.target = _n2._L3(data.target.name);
};
_W._UB1.prototype = {
    apply: function() {
        var target = this.target;
        var _tB1 = this._tB1;
        switch (_tB1.length) {
            case 1:
                _W._UB1._VB1(_tB1[0], target._R3, target._S3, this._vB1);
                break;
            case 2:
                _W._UB1._WB1(_tB1[0], _tB1[1],
                    target._R3, target._S3, this._uB1, this._vB1);
                break;
        }
    }
};
_W._UB1._VB1 = function(_K3, _XB1, _YB1, alpha) {
    var _ZB1 = (!_K3.data._pB1 || !_K3.parent) ? 0 : _K3.parent._T3;
    var rotation = _K3.rotation;
    var _xB1 = Math.atan2(_YB1 - _K3._S3, _XB1 - _K3._R3) * _W._lB1;
    if (_K3._BB1 != (_K3._CB1 != _W._G4._H4)) _xB1 = -_xB1;
    _xB1 -= _ZB1;
    _K3._xB1 = rotation + (_xB1 - rotation) * alpha;
};
_W._UB1._WB1 = function(parent, __B1, _XB1, _YB1, _uB1, alpha) {
    var _0C1 = __B1.rotation,
        _ZB1 = parent.rotation;
    if (!alpha) {
        __B1._xB1 = _0C1;
        parent._xB1 = _ZB1;
        return;
    }
    var _1C1, _2C1, _3C1 = _W._1v;
    var _4C1 = parent.parent;
    if (_4C1) {
        _3C1[0] = _XB1;
        _3C1[1] = _YB1;
        _4C1._GB1(_3C1);
        _XB1 = (_3C1[0] - parent.x) * _4C1._U3;
        _YB1 = (_3C1[1] - parent.y) * _4C1._V3;
    } else {
        _XB1 -= parent.x;
        _YB1 -= parent.y;
    }
    if (__B1.parent == parent) {
        _1C1 = __B1.x;
        _2C1 = __B1.y;
    } else {
        _3C1[0] = __B1.x;
        _3C1[1] = __B1.y;
        __B1.parent._IB1(_3C1);
        parent._GB1(_3C1);
        _1C1 = _3C1[0];
        _2C1 = _3C1[1];
    }
    var _5C1 = _1C1 * parent._U3,
        _6C1 = _2C1 * parent._V3;
    var offset = Math.atan2(_6C1, _5C1);
    var _7C1 = Math.sqrt(_5C1 * _5C1 + _6C1 * _6C1),
        _8C1 = __B1.data.length * __B1._U3;
    var _9C1 = 2 * _7C1 * _8C1;
    if (_9C1 < 0.0001) {
        __B1._xB1 = _0C1 + (Math.atan2(_YB1, _XB1) * _W._lB1 - _ZB1 - _0C1) * alpha;
        return;
    }
    var cos = (_XB1 * _XB1 + _YB1 * _YB1 - _7C1 * _7C1 - _8C1 * _8C1) / _9C1;
    if (cos < -1) cos = -1;
    else if (cos > 1) cos = 1;
    var _aC1 = Math.acos(cos) * _uB1;
    var _bC1 = _7C1 + _8C1 * cos,
        _cC1 = _8C1 * Math.sin(_aC1);
    var _dC1 = Math.atan2(_YB1 * _bC1 - _XB1 * _cC1, _XB1 * _bC1 + _YB1 * _cC1);
    var rotation = (_dC1 - offset) * _W._lB1 - _ZB1;
    if (rotation > 180) rotation -= 360;
    else if (rotation < -180) rotation += 360;
    parent._xB1 = _ZB1 + rotation * alpha;
    rotation = (_aC1 + offset) * _W._lB1 - _0C1;
    if (rotation > 180) rotation -= 360;
    else if (rotation < -180) rotation += 360;
    __B1._xB1 = _0C1 + (rotation + parent._T3 - __B1.parent._T3) * alpha;
};
_W._eC1 = function(name) {
    this.name = name;
    this._fC1 = {};
};
_W._eC1.prototype = {
    _gC1: function(_v1, name, _A1) {
        this._fC1[_v1 + ":" + name] = _A1;
    },
    _B1: function(_v1, name) {
        return this._fC1[_v1 + ":" + name];
    },
    _hC1: function(_n2, _iC1) {
        for (var _Fc in _iC1._fC1) {
            var _jC1 = _Fc.indexOf(":");
            var _v1 = parseInt(_Fc.substring(0, _jC1));
            var name = _Fc.substring(_jC1 + 1);
            var _s1 = _n2._W4[_v1];
            if (_s1._A1 && _s1._A1.name == name) {
                var _A1 = this._B1(_v1, name);
                if (_A1) _s1._u1(_A1);
            }
        }
    }
};
_W._kC1 = function(name,
    _w2, duration) {
    this.name = name;
    this._w2 = _w2;
    this.duration = duration;
};
_W._kC1.prototype = {
    apply: function(_n2, _lC1, _6e, loop, _mC1) {
        if (loop && this.duration != 0) {
            _6e %= this.duration;
            _lC1 %= this.duration;
        }
        var _w2 = this._w2;
        for (var i = 0, _X2 = _w2.length; i < _X2; i++) _w2[i].apply(_n2, _lC1, _6e, _mC1, 1);
    },
    _vB1: function(_n2, _lC1, _6e, loop, _mC1, alpha) {
        if (loop && this.duration != 0) {
            _6e %= this.duration;
            _lC1 %= this.duration;
        }
        var _w2 = this._w2;
        for (var i = 0, _X2 = _w2.length; i < _X2; i++) _w2[i].apply(_n2, _lC1, _6e, _mC1, alpha);
    }
};
_W._kC1._nC1 = function(_oC1,
    target, _rQ) {
    var _pc = 0;
    var _oc = Math.floor(_oC1.length / _rQ) - 2;
    if (!_oc) return _rQ;
    var current = _oc >>> 1;
    while (true) {
        if (_oC1[(current + 1) * _rQ] <= target) _pc = current + 1;
        else _oc = current;
        if (_pc == _oc) return (_pc + 1) * _rQ;
        current = (_pc + _oc) >>> 1;
    }
};
_W._kC1._pC1 = function(_oC1, target) {
    var _pc = 0;
    var _oc = _oC1.length - 2;
    if (!_oc) return 1;
    var current = _oc >>> 1;
    while (true) {
        if (_oC1[current + 1] <= target) _pc = current + 1;
        else _oc = current;
        if (_pc == _oc) return _pc + 1;
        current = (_pc + _oc) >>> 1;
    }
};
_W._kC1._qC1 = function(_oC1, target, _rQ) {
    for (var i = 0, last = _oC1.length - _rQ; i <= last; i += _rQ)
        if (_oC1[i] > target) return i;
    return -1;
};
_W._rC1 = function(_s2) {
    this._sC1 = [];
};
_W._rC1.prototype = {
    _tC1: function(_uC1) {
        this._sC1[_uC1 * 19] = 0;
    },
    _vC1: function(_uC1) {
        this._sC1[_uC1 * 19] = 1;
    },
    _wC1: function(_uC1, _xC1, _yC1, _zC1, _AC1) {
        var _BC1 = 1 / 10,
            _CC1 = _BC1 * _BC1,
            _DC1 = _CC1 * _BC1;
        var _EC1 = 3 * _BC1,
            _FC1 = 3 * _CC1,
            _GC1 = 6 * _CC1,
            _HC1 = 6 * _DC1;
        var _IC1 = -_xC1 * 2 + _zC1,
            _JC1 = -_yC1 * 2 + _AC1,
            _KC1 = (_xC1 - _zC1) * 3 + 1,
            _LC1 = (_yC1 - _AC1) * 3 + 1;
        var _MC1 = _xC1 * _EC1 + _IC1 * _FC1 + _KC1 * _DC1,
            _NC1 = _yC1 * _EC1 + _JC1 * _FC1 + _LC1 * _DC1;
        var _OC1 = _IC1 * _GC1 + _KC1 * _HC1,
            _PC1 = _JC1 * _GC1 + _LC1 * _HC1;
        var _QC1 = _KC1 * _HC1,
            _RC1 = _LC1 * _HC1;
        var i = _uC1 * 19;
        var _sC1 = this._sC1;
        _sC1[i++] = 2;
        var x = _MC1,
            y = _NC1;
        for (var _X2 = i + 19 - 1; i < _X2; i += 2) {
            _sC1[i] = x;
            _sC1[i + 1] = y;
            _MC1 += _OC1;
            _NC1 += _PC1;
            _OC1 += _QC1;
            _PC1 += _RC1;
            x += _MC1;
            y += _NC1;
        }
    },
    _SC1: function(_uC1, _TC1) {
        _TC1 = _TC1 < 0 ? 0 : (_TC1 > 1 ? 1 : _TC1);
        var _sC1 = this._sC1;
        var i = _uC1 * 19;
        var type = _sC1[i];
        if (type === 0) return _TC1;
        if (type == 1) return 0;
        i++;
        var x = 0;
        for (var start = i, _X2 = i + 19 - 1; i < _X2; i += 2) {
            x = _sC1[i];
            if (x >= _TC1) {
                var _UC1, _VC1;
                if (i == start) {
                    _UC1 = 0;
                    _VC1 = 0;
                } else {
                    _UC1 = _sC1[i - 2];
                    _VC1 = _sC1[i - 1];
                }
                return _VC1 + (_sC1[i + 1] - _VC1) * (_TC1 - _UC1) / (x - _UC1);
            }
        }
        var y = _sC1[i - 1];
        return y + (1 - y) * (_TC1 - x) / (1 - x);
    }
};
_W._WC1 = function(_s2) {
    this._sC1 = new _W._rC1(_s2);
    this.frames = [];
    this.frames.length = _s2 * 2;
};
_W._WC1.prototype = {
    _XC1: 0,
    _YC1: function() {
        return this.frames.length / 2;
    },
    _ZC1: function(_uC1, _6e, _E4) {
        _uC1 *= 2;
        this.frames[_uC1] = _6e;
        this.frames[_uC1 + 1] = _E4;
    },
    apply: function(_n2, _lC1, _6e, __C1, alpha) {
        var frames = this.frames;
        if (_6e < frames[0]) return;
        var _K3 = _n2._tB1[this._XC1];
        if (_6e >= frames[frames.length - 2]) {
            var _0D1 = _K3.data.rotation + frames[frames.length - 1] - _K3.rotation;
            while (_0D1 > 180) _0D1 -= 360;
            while (_0D1 < -180) _0D1 += 360;
            _K3.rotation += _0D1 * alpha;
            return;
        }
        var _uC1 = _W._kC1._nC1(frames, _6e, 2);
        var _1D1 = frames[_uC1 - 1];
        var _2D1 = frames[_uC1];
        var _TC1 = 1 - (_6e - _2D1) / (frames[_uC1 - 2] - _2D1);
        _TC1 = this._sC1._SC1(_uC1 / 2 - 1, _TC1);
        var _0D1 = frames[_uC1 + 1] - _1D1;
        while (_0D1 > 180) _0D1 -= 360;
        while (_0D1 < -180) _0D1 += 360;
        _0D1 = _K3.data.rotation + (_1D1 + _0D1 * _TC1) - _K3.rotation;
        while (_0D1 > 180) _0D1 -= 360;
        while (_0D1 < -180) _0D1 += 360;
        _K3.rotation += _0D1 * alpha;
    }
};
_W._3D1 = function(_s2) {
    this._sC1 = new _W._rC1(_s2);
    this.frames = [];
    this.frames.length = _s2 * 3;
};
_W._3D1.prototype = {
    _XC1: 0,
    _YC1: function() {
        return this.frames.length / 3;
    },
    _ZC1: function(_uC1, _6e, x, y) {
        _uC1 *= 3;
        this.frames[_uC1] = _6e;
        this.frames[_uC1 + 1] = x;
        this.frames[_uC1 + 2] = y;
    },
    apply: function(_n2, _lC1, _6e, __C1, alpha) {
        var frames = this.frames;
        if (_6e < frames[0]) return;
        var _K3 = _n2._tB1[this._XC1];
        if (_6e >= frames[frames.length - 3]) {
            _K3.x += (_K3.data.x + frames[frames.length - 2] - _K3.x) * alpha;
            _K3.y += (_K3.data.y + frames[frames.length - 1] - _K3.y) * alpha;
            return;
        }
        var _uC1 = _W._kC1._nC1(frames, _6e, 3);
        var _4D1 = frames[_uC1 - 2];
        var _5D1 = frames[_uC1 - 1];
        var _2D1 = frames[_uC1];
        var _TC1 = 1 - (_6e - _2D1) / (frames[_uC1 + -3] - _2D1);
        _TC1 = this._sC1._SC1(_uC1 / 3 - 1, _TC1);
        _K3.x += (_K3.data.x + _4D1 + (frames[_uC1 + 1] - _4D1) * _TC1 - _K3.x) * alpha;
        _K3.y += (_K3.data.y + _5D1 + (frames[_uC1 + 2] - _5D1) * _TC1 - _K3.y) * alpha;
    }
};
_W._6D1 = function(_s2) {
    this._sC1 = new _W._rC1(_s2);
    this.frames = [];
    this.frames.length = _s2 * 3;
};
_W._6D1.prototype = {
    _XC1: 0,
    _YC1: function() {
        return this.frames.length / 3;
    },
    _ZC1: function(_uC1,
        _6e, x, y) {
        _uC1 *= 3;
        this.frames[_uC1] = _6e;
        this.frames[_uC1 + 1] = x;
        this.frames[_uC1 + 2] = y;
    },
    apply: function(_n2, _lC1, _6e, __C1, alpha) {
        var frames = this.frames;
        if (_6e < frames[0]) return;
        var _K3 = _n2._tB1[this._XC1];
        if (_6e >= frames[frames.length - 3]) {
            _K3.scaleX += (_K3.data.scaleX * frames[frames.length - 2] - _K3.scaleX) * alpha;
            _K3.scaleY += (_K3.data.scaleY * frames[frames.length - 1] - _K3.scaleY) * alpha;
            return;
        }
        var _uC1 = _W._kC1._nC1(frames, _6e, 3);
        var _4D1 = frames[_uC1 - 2];
        var _5D1 = frames[_uC1 - 1];
        var _2D1 = frames[_uC1];
        var _TC1 = 1 - (_6e - _2D1) / (frames[_uC1 + -3] - _2D1);
        _TC1 = this._sC1._SC1(_uC1 / 3 - 1, _TC1);
        _K3.scaleX += (_K3.data.scaleX * (_4D1 + (frames[_uC1 + 1] - _4D1) * _TC1) - _K3.scaleX) * alpha;
        _K3.scaleY += (_K3.data.scaleY * (_5D1 + (frames[_uC1 + 2] - _5D1) * _TC1) - _K3.scaleY) * alpha;
    }
};
_W._7D1 = function(_s2) {
    this._sC1 = new _W._rC1(_s2);
    this.frames = [];
    this.frames.length = _s2 * 5;
};
_W._7D1.prototype = {
    _v1: 0,
    _YC1: function() {
        return this.frames.length / 5;
    },
    _ZC1: function(_uC1, _6e, _d3, _Y4, _g3, _Z4) {
        _uC1 *= 5;
        this.frames[_uC1] = _6e;
        this.frames[_uC1 + 1] = _d3;
        this.frames[_uC1 + 2] = _Y4;
        this.frames[_uC1 + 3] = _g3;
        this.frames[_uC1 + 4] = _Z4;
    },
    apply: function(_n2, _lC1, _6e, __C1, alpha) {
        var frames = this.frames;
        if (_6e < frames[0]) return;
        var _d3, _Y4, _g3, _Z4;
        if (_6e >= frames[frames.length - 5]) {
            var i = frames.length - 1;
            _d3 = frames[i - 3];
            _Y4 = frames[i - 2];
            _g3 = frames[i - 1];
            _Z4 = frames[i];
        } else {
            var _uC1 = _W._kC1._nC1(frames, _6e, 5);
            var _8D1 = frames[_uC1 - 4];
            var _9D1 = frames[_uC1 - 3];
            var _aD1 = frames[_uC1 - 2];
            var _bD1 = frames[_uC1 - 1];
            var _2D1 = frames[_uC1];
            var _TC1 = 1 - (_6e - _2D1) / (frames[_uC1 - 5] - _2D1);
            _TC1 = this._sC1._SC1(_uC1 / 5 - 1, _TC1);
            _d3 = _8D1 + (frames[_uC1 + 1] - _8D1) * _TC1;
            _Y4 = _9D1 + (frames[_uC1 + 2] - _9D1) * _TC1;
            _g3 = _aD1 + (frames[_uC1 + 3] - _aD1) * _TC1;
            _Z4 = _bD1 + (frames[_uC1 + 4] - _bD1) * _TC1;
        }
        var _s1 = _n2._W4[this._v1];
        if (alpha < 1) {
            _s1._d3 += (_d3 - _s1._d3) * alpha;
            _s1._Y4 += (_Y4 - _s1._Y4) * alpha;
            _s1._g3 += (_g3 - _s1._g3) * alpha;
            _s1._Z4 += (_Z4 - _s1._Z4) * alpha;
        } else {
            _s1._d3 = _d3;
            _s1._Y4 = _Y4;
            _s1._g3 = _g3;
            _s1._Z4 = _Z4;
        }
    }
};
_W._cD1 = function(_s2) {
    this._sC1 = new _W._rC1(_s2);
    this.frames = [];
    this.frames.length = _s2;
    this._dD1 = [];
    this._dD1.length = _s2;
};
_W._cD1.prototype = {
    _v1: 0,
    _YC1: function() {
        return this.frames.length;
    },
    _ZC1: function(_uC1, _6e, _46) {
        this.frames[_uC1] = _6e;
        this._dD1[_uC1] = _46;
    },
    apply: function(_n2, _lC1, _6e, __C1, alpha) {
        var frames = this.frames;
        if (_6e < frames[0]) {
            if (_lC1 > _6e) this.apply(_n2, _lC1, Number.MAX_VALUE, null, 0);
            return;
        } else if (_lC1 > _6e) _lC1 = -1;
        var _uC1 = _6e >= frames[frames.length - 1] ? frames.length - 1 : _W._kC1._pC1(frames, _6e) - 1;
        if (frames[_uC1] < _lC1) return;
        var _46 = this._dD1[_uC1];
        _n2._W4[this._v1]._u1(!_46 ? null : _n2._TB1(this._v1, _46));
    }
};
_W._eD1 = function(_s2) {
    this.frames = [];
    this.frames.length = _s2;
    this._mC1 = [];
    this._mC1.length = _s2;
};
_W._eD1.prototype = {
    _YC1: function() {
        return this.frames.length;
    },
    _ZC1: function(_uC1, _6e, event) {
        this.frames[_uC1] = _6e;
        this._mC1[_uC1] = event;
    },
    apply: function(_n2, _lC1, _6e, __C1, alpha) {
        if (!__C1) return;
        var frames = this.frames;
        var _s2 = frames.length;
        if (_lC1 > _6e) {
            this.apply(_n2, _lC1, Number.MAX_VALUE, __C1, alpha);
            _lC1 = -1;
        } else if (_lC1 >= frames[_s2 - 1]) return;
        if (_6e < frames[0]) return;
        var _uC1;
        if (_lC1 < frames[0]) _uC1 = 0;
        else {
            _uC1 = _W._kC1._pC1(frames, _lC1);
            var _F2 = frames[_uC1];
            while (_uC1 > 0) {
                if (frames[_uC1 - 1] != _F2) break;
                _uC1--;
            }
        }
        var _mC1 = this._mC1;
        for (; _uC1 < _s2 && _6e >= frames[_uC1]; _uC1++) __C1.push(_mC1[_uC1]);
    }
};
_W._fD1 = function(_s2) {
    this.frames = [];
    this.frames.length = _s2;
    this._gD1 = [];
    this._gD1.length = _s2;
};
_W._fD1.prototype = {
    _YC1: function() {
        return this.frames.length;
    },
    _ZC1: function(_uC1, _6e, _X4) {
        this.frames[_uC1] = _6e;
        this._gD1[_uC1] = _X4;
    },
    apply: function(_n2, _lC1, _6e, __C1, alpha) {
        var frames = this.frames;
        if (_6e < frames[0]) return;
        var _uC1;
        if (_6e >= frames[frames.length - 1]) _uC1 = frames.length - 1;
        else _uC1 = _W._kC1._pC1(frames, _6e) - 1;
        var _X4 = _n2._X4;
        var _W4 = _n2._W4;
        var _hD1 = this._gD1[_uC1];
        if (!_hD1) {
            for (var i = 0, _X2 = _W4.length; i < _X2; i++) _X4[i] = _W4[i];
        } else {
            for (var i = 0, _X2 = _hD1.length; i < _X2; i++) _X4[i] = _n2._W4[_hD1[i]];
        }
    }
};
_W._iD1 = function(_s2) {
    this._sC1 = new _W._rC1(_s2);
    this.frames = [];
    this.frames.length = _s2;
    this._jD1 = [];
    this._jD1.length = _s2;
};
_W._iD1.prototype = {
    _v1: 0,
    _A1: 0,
    _YC1: function() {
        return this.frames.length;
    },
    _ZC1: function(_uC1, _6e, _35) {
        this.frames[_uC1] = _6e;
        this._jD1[_uC1] = _35;
    },
    apply: function(_n2, _lC1, _6e, __C1, alpha) {
        var _s1 = _n2._W4[this._v1];
        if (_s1._A1 != this._A1) return;
        var frames = this.frames;
        if (_6e < frames[0]) return;
        var _jD1 = this._jD1;
        var _lT = _jD1[0].length;
        var _35 = _s1._OB1;
        if (_35.length != _lT) alpha = 1;
        _35.length = _lT;
        if (_6e >= frames[frames.length - 1]) {
            var _kD1 = _jD1[frames.length - 1];
            if (alpha < 1) {
                for (var i = 0; i < _lT; i++) _35[i] += (_kD1[i] - _35[i]) * alpha;
            } else {
                for (var i = 0; i < _lT; i++) _35[i] = _kD1[i];
            }
            return;
        }
        var _uC1 = _W._kC1._pC1(frames, _6e);
        var _2D1 = frames[_uC1];
        var _TC1 = 1 - (_6e - _2D1) / (frames[_uC1 - 1] - _2D1);
        _TC1 = this._sC1._SC1(_uC1 - 1, _TC1 < 0 ? 0 : (_TC1 > 1 ? 1 : _TC1));
        var _lD1 = _jD1[_uC1 - 1];
        var _mD1 = _jD1[_uC1];
        if (alpha < 1) {
            for (var i = 0; i < _lT; i++) {
                var _ic = _lD1[i] || 0;
                var _kc = _mD1[i] || 0;
                _35[i] += (_ic + (_kc - _ic) * _TC1 - _35[i]) * alpha;
            }
        } else {
            for (var i = 0; i < _lT; i++) {
                var _ic = _lD1[i] || 0;
                var _kc = _mD1[i] || 0;
                _35[i] = _ic + (_kc - _ic) * _TC1;
            }
        }
    }
};
_W._nD1 = function(_s2) {
    this._sC1 = new _W._rC1(_s2);
    this.frames = [];
    this.frames.length = _s2 * 3;
};
_W._nD1.prototype = {
    _oD1: 0,
    _YC1: function() {
        return this.frames.length / 3;
    },
    _ZC1: function(_uC1, _6e, _vB1, _uB1) {
        _uC1 *= 3;
        this.frames[_uC1] = _6e;
        this.frames[_uC1 + 1] = _vB1;
        this.frames[_uC1 + 2] = _uB1;
    },
    apply: function(_n2, _lC1, _6e, __C1, alpha) {
        var frames = this.frames;
        if (_6e < frames[0]) return;
        var _pD1 = _n2._qD1[this._oD1];
        if (_6e >= frames[frames.length - 3]) {
            _pD1._vB1 += (frames[frames.length - 2] - _pD1._vB1) * alpha;
            _pD1._uB1 = frames[frames.length - 1];
            return;
        }
        var _uC1 = _W._kC1._nC1(frames, _6e, 3);
        var _rD1 = frames[_uC1 + -2];
        var _2D1 = frames[_uC1];
        var _TC1 = 1 - (_6e - _2D1) / (frames[_uC1 + -3] - _2D1);
        _TC1 = this._sC1._SC1(_uC1 / 3 - 1, _TC1);
        var _vB1 = _rD1 + (frames[_uC1 + 1] - _rD1) * _TC1;
        _pD1._vB1 += (_vB1 - _pD1._vB1) * alpha;
        _pD1._uB1 = frames[_uC1 + -1];
    }
};
_W._sD1 = function(_s2) {
    this._sC1 = new _W._rC1(_s2);
    this.frames = [];
    this.frames.length = _s2 * 2;
};
_W._sD1.prototype = {
    _XC1: 0,
    _YC1: function() {
        return this.frames.length / 2;
    },
    _ZC1: function(_uC1, _6e, _oZ) {
        _uC1 *= 2;
        this.frames[_uC1] = _6e;
        this.frames[_uC1 + 1] = _oZ ? 1 : 0;
    },
    apply: function(_n2, _lC1, _6e, __C1, alpha) {
        var frames = this.frames;
        if (_6e < frames[0]) {
            if (_lC1 > _6e) this.apply(_n2, _lC1, Number.MAX_VALUE, null, 0);
            return;
        } else if (_lC1 > _6e) _lC1 = -1;
        var _uC1 = (_6e >= frames[frames.length - 2] ? frames.length : _W._kC1._nC1(frames, _6e, 2)) - 2;
        if (frames[_uC1] < _lC1) return;
        _n2._tB1[this._XC1]._z2 = frames[_uC1 + 1] != 0;
    }
};
_W._tD1 = function(_s2) {
    this._sC1 = new _W._rC1(_s2);
    this.frames = [];
    this.frames.length = _s2 * 2;
};
_W._tD1.prototype = {
    _XC1: 0,
    _YC1: function() {
        return this.frames.length / 2;
    },
    _ZC1: function(_uC1, _6e, _oZ) {
        _uC1 *= 2;
        this.frames[_uC1] = _6e;
        this.frames[_uC1 + 1] = _oZ ? 1 : 0;
    },
    apply: function(_n2, _lC1, _6e, __C1, alpha) {
        var frames = this.frames;
        if (_6e < frames[0]) {
            if (_lC1 > _6e) this.apply(_n2, _lC1, Number.MAX_VALUE, null, 0);
            return;
        } else if (_lC1 > _6e) _lC1 = -1;
        var _uC1 = (_6e >= frames[frames.length - 2] ? frames.length : _W._kC1._nC1(frames,
            _6e, 2)) - 2;
        if (frames[_uC1] < _lC1) return;
        _n2._tB1[_XC1]._A2 = frames[_uC1 + 1] != 0;
    }
};
_W._uD1 = function() {
    this._tB1 = [];
    this._W4 = [];
    this._y1 = [];
    this._mC1 = [];
    this.__ = [];
    this._qD1 = [];
};
_W._uD1.prototype = {
    name: null,
    _h1: null,
    width: 0,
    height: 0,
    version: null,
    _ot: null,
    _L3: function(_vD1) {
        var _tB1 = this._tB1;
        for (var i = 0, _X2 = _tB1.length; i < _X2; i++)
            if (_tB1[i].name == _vD1) return _tB1[i];
        return null;
    },
    _wD1: function(_vD1) {
        var _tB1 = this._tB1;
        for (var i = 0, _X2 = _tB1.length; i < _X2; i++)
            if (_tB1[i].name == _vD1) return i;
        return -1;
    },
    _t1: function(_xD1) {
        var _W4 = this._W4;
        for (var i = 0, _X2 = _W4.length; i < _X2; i++) {
            if (_W4[i].name == _xD1) return _s1[i];
        }
        return null;
    },
    _w1: function(_xD1) {
        var _W4 = this._W4;
        for (var i = 0, _X2 = _W4.length; i < _X2; i++)
            if (_W4[i].name == _xD1) return i;
        return -1;
    },
    _yD1: function(_zD1) {
        var _y1 = this._y1;
        for (var i = 0, _X2 = _y1.length; i < _X2; i++)
            if (_y1[i].name == _zD1) return _y1[i];
        return null;
    },
    _AD1: function(_BD1) {
        var _mC1 = this._mC1;
        for (var i = 0, _X2 = _mC1.length; i < _X2; i++)
            if (_mC1[i].name == _BD1) return _mC1[i];
        return null;
    },
    _e1: function(_CD1) {
        var __ = this.__;
        for (var i = 0, _X2 = __.length; i < _X2; i++)
            if (__[i].name == _CD1) return __[i];
        return null;
    },
    _DD1: function(_ED1) {
        var _qD1 = this._qD1;
        for (var i = 0, _X2 = _qD1.length; i < _X2; i++)
            if (_qD1[i].name == _ED1) return _qD1[i];
        return null;
    }
};
_W._X = function(_FD1) {
    this.data = _FD1;
    this._tB1 = [];
    for (var i = 0, _X2 = _FD1._tB1.length; i < _X2; i++) {
        var _36 = _FD1._tB1[i];
        var parent = !_36.parent ? null : this._tB1[_FD1._tB1.indexOf(_36.parent)];
        this._tB1.push(new _W._G4(_36, this, parent));
    }
    this._W4 = [];
    this._X4 = [];
    for (var i = 0, _X2 = _FD1._W4.length; i < _X2; i++) {
        var _NB1 = _FD1._W4[i];
        var _K3 = this._tB1[_FD1._tB1.indexOf(_NB1._36)];
        var _s1 = new _W._MB1(_NB1, _K3);
        this._W4.push(_s1);
        this._X4.push(_s1);
    }
    this._qD1 = [];
    for (var i = 0, _X2 = _FD1._qD1.length; i < _X2; i++) this._qD1.push(new _W._UB1(_FD1._qD1[i], this));
    this._GD1 = [];
    this._HD1();
};
_W._X.prototype = {
    x: 0,
    y: 0,
    _z1: null,
    _d3: 1,
    _Y4: 1,
    _g3: 1,
    _Z4: 1,
    _6e: 0,
    _z2: false,
    _A2: false,
    _HD1: function() {
        var _qD1 = this._qD1;
        var _ID1 = _qD1.length;
        var _JD1 = _ID1 + 1;
        var _GD1 = this._GD1;
        if (_GD1.length > _JD1) _GD1.length = _JD1;
        for (var i = 0, _X2 = _GD1.length; i < _X2; i++) _GD1[i].length = 0;
        while (_GD1.length < _JD1) _GD1[_GD1.length] = [];
        var _KD1 = _GD1[0];
        var _tB1 = this._tB1;
        for (var i = 0, _X2 = _tB1.length; i < _X2; i++) {
            var _K3 = _tB1[i];
            var current = _K3;
            do {
                for (var _bp = 0; _bp < _ID1; _bp++) {
                    var _pD1 = _qD1[_bp];
                    var parent = _pD1._tB1[0];
                    var __B1 = _pD1._tB1[_pD1._tB1.length - 1];
                    while (true) {
                        if (current == __B1) {
                            _GD1[_bp].push(_K3);
                            _GD1[_bp + 1].push(_K3);
                            return;
                        }
                        if (__B1 == parent) break;
                        __B1 = __B1.parent;
                    }
                }
                current = current.parent;
            } while (current);
            _KD1[_KD1.length] = _K3;
        }
    },
    _p2: function() {
        var _tB1 = this._tB1;
        for (var i = 0, _X2 = _tB1.length; i < _X2; i++) {
            var _K3 = _tB1[i];
            _K3._xB1 = _K3.rotation;
        }
        var i = 0,
            last = this._GD1.length - 1;
        while (true) {
            var _LD1 = this._GD1[i];
            for (var _bp = 0, _MD1 = _LD1.length; _bp < _MD1; _bp++) _LD1[_bp]._p2();
            if (i == last) break;
            this._qD1[i].apply();
            i++;
        }
    },
    _wB1: function() {
        this._ND1();
        this._j1();
    },
    _ND1: function() {
        var _tB1 = this._tB1;
        for (var i = 0, _X2 = _tB1.length; i < _X2; i++) _tB1[i]._wB1();
        var _qD1 = this._qD1;
        for (var i = 0, _X2 = _qD1.length; i < _X2; i++) {
            var _pD1 = _qD1[i];
            _pD1._uB1 = _pD1.data._uB1;
            _pD1._vB1 = _pD1.data._vB1;
        }
    },
    _j1: function() {
        var _W4 = this._W4;
        var _X4 = this._X4;
        for (var i = 0, _X2 = _W4.length; i < _X2; i++) {
            _X4[i] = _W4[i];
            _W4[i]._wB1(i);
        }
    },
    _41: function() {
        return this._tB1.length ? this._tB1[0] : null;
    },
    _L3: function(_vD1) {
        var _tB1 = this._tB1;
        for (var i = 0, _X2 = _tB1.length; i < _X2; i++)
            if (_tB1[i].data.name == _vD1) return _tB1[i];
        return null;
    },
    _wD1: function(_vD1) {
        var _tB1 = this._tB1;
        for (var i = 0, _X2 = _tB1.length; i < _X2; i++)
            if (_tB1[i].data.name == _vD1) return i;
        return -1;
    },
    _t1: function(_xD1) {
        var _W4 = this._W4;
        for (var i = 0, _X2 = _W4.length; i < _X2; i++)
            if (_W4[i].data.name == _xD1) return _W4[i];
        return null;
    },
    _w1: function(_xD1) {
        var _W4 = this._W4;
        for (var i = 0, _X2 = _W4.length; i < _X2; i++)
            if (_W4[i].data.name == _xD1) return i;
        return -1;
    },
    _i1: function(_zD1) {
        var _z1 = this.data._yD1(_zD1);
        if (!_z1) throw "Skin not found: " + _zD1;
        this._OD1(_z1);
    },
    _OD1: function(_PD1) {
        if (_PD1) {
            if (this._z1) _PD1._hC1(this, this._z1);
            else {
                var _W4 = this._W4;
                for (var i = 0, _X2 = _W4.length; i < _X2; i++) {
                    var _s1 = _W4[i];
                    var name = _s1.data._46;
                    if (name) {
                        var _A1 = _PD1._B1(i, name);
                        if (_A1) _s1._u1(_A1);
                    }
                }
            }
        }
        this._z1 = _PD1;
    },
    _QD1: function(_xD1, _46) {
        return this._TB1(this.data._w1(_xD1), _46);
    },
    _TB1: function(_v1, _46) {
        if (this._z1) {
            var _A1 = this._z1._B1(_v1, _46);
            if (_A1) return _A1;
        }
        if (this.data._h1) return this.data._h1._B1(_v1, _46);
        return null;
    },
    _u1: function(_xD1, _46) {
        var _W4 = this._W4;
        for (var i = 0, _X2 = _W4.length; i < _X2; i++) {
            var _s1 = _W4[i];
            if (_s1.data.name == _xD1) {
                var _A1 = null;
                if (_46) {
                    _A1 = this._TB1(i, _46);
                    if (!_A1) throw "Attachment not found: " + _46 + ", for slot: " + _xD1;
                }
                _s1._u1(_A1);
                return;
            }
        }
        throw "Slot not found: " + _xD1;
    },
    _DD1: function(_ED1) {
        var _qD1 = this._qD1;
        for (var i = 0, _X2 = _qD1.length; i < _X2; i++)
            if (_qD1[i].data.name == _ED1) return _qD1[i];
        return null;
    },
    _y2: function(_RD1) {
        this._6e += _RD1;
    }
};
_W._SD1 = function(name) {
    this.name = name;
};
_W._SD1.prototype = {
    _TD1: 0,
    _UD1: 0,
    _VD1: null
};
_W.Event = function(data) {
    this.data = data;
};
_W.Event.prototype = {
    _TD1: 0,
    _UD1: 0,
    _VD1: null
};
_W.__4 = {
    _U1: 0,
    _WD1: 1,
    _05: 2,
    _15: 3
};
_W._XD1 = function(name) {
    this.name = name;
    this.offset = [];
    this.offset.length = 8;
    this._85 = [];
    this._85.length = 8;
};
_W._XD1.prototype = {
    type: _W.__4._U1,
    x: 0,
    y: 0,
    rotation: 0,
    scaleX: 1,
    scaleY: 1,
    width: 0,
    height: 0,
    _d3: 1,
    _Y4: 1,
    _g3: 1,
    _Z4: 1,
    _YD1: null,
    _S1: null,
    _ZD1: 0,
    __D1: 0,
    _0E1: 0,
    _1E1: 0,
    _2E1: 0,
    _3E1: 0,
    _4E1: function(_W1, _X1, _Y1, _Z1, rotate) {
        var _85 = this._85;
        if (rotate) {
            _85[2] = _W1;
            _85[3] = _Z1;
            _85[4] = _W1;
            _85[5] = _X1;
            _85[6] = _Y1;
            _85[7] = _X1;
            _85[0] = _Y1;
            _85[1] = _Z1;
        } else {
            _85[0] = _W1;
            _85[1] = _Z1;
            _85[2] = _W1;
            _85[3] = _X1;
            _85[4] = _Y1;
            _85[5] = _X1;
            _85[6] = _Y1;
            _85[7] = _Z1;
        }
    },
    _d2: function() {
        var _5E1 = this.width / this._2E1 * this.scaleX;
        var _6E1 = this.height / this._3E1 * this.scaleY;
        var _KB1 = -this.width / 2 * this.scaleX + this._ZD1 * _5E1;
        var _LB1 = -this.height / 2 * this.scaleY + this.__D1 * _6E1;
        var _7E1 = _KB1 + this._0E1 * _5E1;
        var _8E1 = _LB1 + this._1E1 * _6E1;
        var _FB1 = this.rotation * _W._mB1;
        var cos = Math.cos(_FB1);
        var sin = Math.sin(_FB1);
        var _9E1 = _KB1 * cos + this.x;
        var _aE1 = _KB1 * sin;
        var _bE1 = _LB1 * cos + this.y;
        var _cE1 = _LB1 * sin;
        var _dE1 = _7E1 * cos + this.x;
        var _eE1 = _7E1 * sin;
        var _fE1 = _8E1 * cos + this.y;
        var _gE1 = _8E1 * sin;
        var offset = this.offset;
        offset[0] = _9E1 - _cE1;
        offset[1] = _bE1 + _aE1;
        offset[2] = _9E1 - _gE1;
        offset[3] = _fE1 + _aE1;
        offset[4] = _dE1 - _gE1;
        offset[5] = _fE1 + _eE1;
        offset[6] = _dE1 - _cE1;
        offset[7] = _bE1 + _eE1;
    },
    _65: function(x, y, _K3, _35) {
        x += _K3._R3;
        y += _K3._S3;
        var _yB1 = _K3._yB1,
            _zB1 = _K3._zB1,
            _AB1 = _K3._AB1,
            _w5 = _K3._w5;
        var offset = this.offset;
        _35[0] = offset[0] * _yB1 + offset[1] * _zB1 + x;
        _35[1] = offset[0] * _AB1 + offset[1] * _w5 + y;
        _35[2] = offset[2] * _yB1 + offset[3] * _zB1 + x;
        _35[3] = offset[2] * _AB1 + offset[3] * _w5 + y;
        _35[4] = offset[4] * _yB1 + offset[5] * _zB1 + x;
        _35[5] = offset[4] * _AB1 + offset[5] * _w5 + y;
        _35[6] = offset[6] * _yB1 + offset[7] * _zB1 + x;
        _35[7] = offset[6] * _AB1 + offset[7] * _w5 + y;
    }
};
_W._hE1 = function(name) {
    this.name = name;
};
_W._hE1.prototype = {
    type: _W.__4._05,
    _35: null,
    _85: null,
    _iE1: null,
    _f5: null,
    _jE1: 0,
    _d3: 1,
    _Y4: 1,
    _g3: 1,
    _Z4: 1,
    _YD1: null,
    _S1: null,
    _kE1: 0,
    _lE1: 0,
    _mE1: 0,
    _nE1: 0,
    _oE1: false,
    _ZD1: 0,
    __D1: 0,
    _0E1: 0,
    _1E1: 0,
    _2E1: 0,
    _3E1: 0,
    _pE1: null,
    width: 0,
    height: 0,
    _qE1: function() {
        var width = this._mE1 - this._kE1,
            height = this._nE1 - this._lE1;
        var _X2 = this._iE1.length;
        if (!this._85 || this._85.length != _X2) {
            this._85 = new _W.Float32Array(_X2);
        }
        if (this._oE1) {
            for (var i = 0; i < _X2; i += 2) {
                this._85[i] = this._kE1 + this._iE1[i + 1] * width;
                this._85[i + 1] = this._lE1 + height - this._iE1[i] * height;
            }
        } else {
            for (var i = 0; i < _X2; i += 2) {
                this._85[i] = this._kE1 + this._iE1[i] * width;
                this._85[i + 1] = this._lE1 + this._iE1[i + 1] * height;
            }
        }
    },
    _e5: function(x, y, _s1, _rE1) {
        var _K3 = _s1._K3;
        x += _K3._R3;
        y += _K3._S3;
        var _yB1 = _K3._yB1,
            _zB1 = _K3._zB1,
            _AB1 = _K3._AB1,
            _w5 = _K3._w5;
        var _35 = this._35;
        var _sE1 = _35.length;
        if (_s1._OB1.length == _sE1) _35 = _s1._OB1;
        for (var i = 0; i < _sE1; i += 2) {
            var _5V = _35[i];
            var _6V = _35[i + 1];
            _rE1[i] = _5V * _yB1 + _6V * _zB1 + x;
            _rE1[i + 1] = _5V * _AB1 + _6V * _w5 + y;
        }
    }
};
_W._tE1 = function(name) {
    this.name = name;
};
_W._tE1.prototype = {
    type: _W.__4._15,
    _tB1: null,
    _uE1: null,
    _85: null,
    _iE1: null,
    _f5: null,
    _jE1: 0,
    _d3: 1,
    _Y4: 1,
    _g3: 1,
    _Z4: 1,
    _YD1: null,
    _S1: null,
    _kE1: 0,
    _lE1: 0,
    _mE1: 0,
    _nE1: 0,
    _oE1: false,
    _ZD1: 0,
    __D1: 0,
    _0E1: 0,
    _1E1: 0,
    _2E1: 0,
    _3E1: 0,
    _pE1: null,
    width: 0,
    height: 0,
    _qE1: function(_W1, _X1, _Y1, _Z1, rotate) {
        var width = this._mE1 - this._kE1,
            height = this._nE1 - this._lE1;
        var _X2 = this._iE1.length;
        if (!this._85 || this._85.length != _X2) {
            this._85 = new _W.Float32Array(_X2);
        }
        if (this._oE1) {
            for (var i = 0; i < _X2; i += 2) {
                this._85[i] = this._kE1 + this._iE1[i + 1] * width;
                this._85[i + 1] = this._lE1 + height - this._iE1[i] * height;
            }
        } else {
            for (var i = 0; i < _X2; i += 2) {
                this._85[i] = this._kE1 + this._iE1[i] * width;
                this._85[i + 1] = this._lE1 + this._iE1[i + 1] * height;
            }
        }
    },
    _e5: function(x, y, _s1, _rE1) {
        var _vE1 = _s1._K3._n2._tB1;
        var _uE1 = this._uE1;
        var _tB1 = this._tB1;
        var w = 0,
            _X1 = 0,
            _g3 = 0,
            _dn = 0,
            _X2 = _tB1.length,
            _MD1;
        var _wE1, _xE1, _K3, _5V, _6V, _N81;
        if (!_s1._OB1.length) {
            for (; _X1 < _X2; w += 2) {
                _wE1 = 0;
                _xE1 = 0;
                _MD1 = _tB1[_X1++] + _X1;
                for (; _X1 < _MD1; _X1++, _g3 += 3) {
                    _K3 = _vE1[_tB1[_X1]];
                    _5V = _uE1[_g3];
                    _6V = _uE1[_g3 + 1];
                    _N81 = _uE1[_g3 + 2];
                    _wE1 += (_5V * _K3._yB1 + _6V * _K3._zB1 + _K3._R3) * _N81;
                    _xE1 += (_5V * _K3._AB1 + _6V * _K3._w5 + _K3._S3) * _N81;
                }
                _rE1[w] = _wE1 + x;
                _rE1[w + 1] = _xE1 + y;
            }
        } else {
            var _yE1 = _s1._OB1;
            for (; _X1 < _X2; w += 2) {
                _wE1 = 0;
                _xE1 = 0;
                _MD1 = _tB1[_X1++] + _X1;
                for (; _X1 < _MD1; _X1++, _g3 += 3, _dn += 2) {
                    _K3 = _vE1[_tB1[_X1]];
                    _5V = _uE1[_g3] + _yE1[_dn];
                    _6V = _uE1[_g3 + 1] + _yE1[_dn + 1];
                    _N81 = _uE1[_g3 + 2];
                    _wE1 += (_5V * _K3._yB1 + _6V * _K3._zB1 + _K3._R3) * _N81;
                    _xE1 += (_5V * _K3._AB1 + _6V * _K3._w5 + _K3._S3) * _N81;
                }
                _rE1[w] = _wE1 + x;
                _rE1[w + 1] = _xE1 + y;
            }
        }
    }
};
_W._zE1 = function(name) {
    this.name = name;
    this._35 = [];
};
_W._zE1.prototype = {
    type: _W.__4._WD1,
    _e5: function(x, y, _K3, _rE1) {
        x += _K3._R3;
        y += _K3._S3;
        var _yB1 = _K3._yB1,
            _zB1 = _K3._zB1,
            _AB1 = _K3._AB1,
            _w5 = _K3._w5;
        var _35 = this._35;
        for (var i = 0, _X2 = _35.length; i < _X2; i += 2) {
            var _ui = _35[i];
            var _vi = _35[i + 1];
            _rE1[i] = _ui * _yB1 + _vi * _zB1 + x;
            _rE1[i + 1] = _ui * _AB1 + _vi * _w5 + y;
        }
    }
};
_W._Y = function(_FD1) {
    this._FD1 = _FD1;
    this._AE1 = {};
};
_W._Y.prototype = {
    _BE1: 0,
    _o1: function(_CE1, _DE1, duration) {
        var _HF = this._FD1._e1(_CE1);
        if (!_HF) throw "Animation not found: " + _CE1;
        var _GF = this._FD1._e1(_DE1);
        if (!_GF) throw "Animation not found: " + _DE1;
        this._EE1(_HF, _GF, duration);
    },
    _EE1: function(_HF, _GF, duration) {
        this._AE1[_HF.name + ":" + _GF.name] = duration;
    },
    _FE1: function(_HF, _GF) {
        var _Fc = _HF.name + ":" + _GF.name;
        return this._AE1.hasOwnProperty(_Fc) ? this._AE1[_Fc] : this._BE1;
    }
};
_W._GE1 = function() {};
_W._GE1.prototype = {
    _kc: null,
    _HE1: null,
    _d1: null,
    loop: false,
    _IE1: 0,
    _6e: 0,
    _lC1: -1,
    _JE1: 0,
    _KE1: 1,
    _LE1: 0,
    _ME1: 0,
    _vB1: 1,
    _NE1: null,
    _OE1: null,
    onComplete: null,
    _PE1: null
};
_W._Z = function(_Nm1) {
    this.data = _Nm1;
    this._Z3 = [];
    this._mC1 = [];
};
_W._Z.prototype = {
    _NE1: null,
    _OE1: null,
    onComplete: null,
    _PE1: null,
    _KE1: 1,
    _y2: function(_RD1) {
        _RD1 *= this._KE1;
        for (var i = 0; i < this._Z3.length; i++) {
            var current = this._Z3[i];
            if (!current) continue;
            current._6e += _RD1 * current._KE1;
            if (current._HE1) {
                var _QE1 = _RD1 * current._HE1._KE1;
                current._HE1._6e += _QE1;
                current._LE1 += _QE1;
            }
            var _kc = current._kc;
            if (_kc) {
                _kc._6e = current._lC1 - _kc._IE1;
                if (_kc._6e >= 0) this._RE1(i, _kc);
            } else {
                if (!current.loop && current._lC1 >= current._JE1) this._04(i);
            }
        }
    },
    apply: function(_n2) {
        for (var i = 0; i < this._Z3.length; i++) {
            var current = this._Z3[i];
            if (!current) continue;
            this._mC1.length = 0;
            var _6e = current._6e;
            var _lC1 = current._lC1;
            var _JE1 = current._JE1;
            var loop = current.loop;
            if (!loop && _6e > _JE1) _6e = _JE1;
            var _HE1 = current._HE1;
            if (!_HE1) {
                if (current._vB1 == 1) current._d1.apply(_n2, current._lC1, _6e, loop, this._mC1);
                else current._d1._vB1(_n2, current._lC1, _6e, loop, this._mC1, current._vB1);
            } else {
                var _SE1 = _HE1._6e;
                if (!_HE1.loop && _SE1 > _HE1._JE1) _SE1 = _HE1._JE1;
                _HE1._d1.apply(_n2, _SE1, _SE1, _HE1.loop, null);
                var alpha = current._LE1 / current._ME1 * current._vB1;
                if (alpha >= 1) {
                    alpha = 1;
                    current._HE1 = null;
                }
                current._d1._vB1(_n2, current._lC1, _6e, loop, this._mC1, alpha);
            }
            for (var _bp = 0, _MD1 = this._mC1.length; _bp < _MD1; _bp++) {
                var event = this._mC1[_bp];
                if (current._PE1) current._PE1(i, event);
                if (this._PE1) this._PE1(i, event);
            }
            if (loop ? (_lC1 % _JE1 > _6e % _JE1) : (_lC1 < _JE1 && _6e >= _JE1)) {
                var _n4 = Math.floor(_6e / _JE1);
                if (current.onComplete) current.onComplete(i, _n4);
                if (this.onComplete) this.onComplete(i, _n4);
            }
            current._lC1 = current._6e;
        }
    },
    _TE1: function() {
        for (var i = 0, _X2 = this._Z3.length; i < _X2; i++) this._04(i);
        this._Z3.length = 0;
    },
    _04: function(_UE1) {
        if (_UE1 >= this._Z3.length) return;
        var current = this._Z3[_UE1];
        if (!current) return;
        if (current._OE1) current._OE1(_UE1);
        if (this._OE1) this._OE1(_UE1);
        this._Z3[_UE1] = null;
    },
    _VE1: function(index) {
        if (index < this._Z3.length) return this._Z3[index];
        while (index >= this._Z3.length) this._Z3.push(null);
        return null;
    },
    _RE1: function(index, _hc) {
        var current = this._VE1(index);
        if (current) {
            var _HE1 = current._HE1;
            current._HE1 = null;
            if (current._OE1) current._OE1(index);
            if (this._OE1) this._OE1(index);
            _hc._ME1 = this.data._FE1(current._d1, _hc._d1);
            if (_hc._ME1 > 0) {
                _hc._LE1 = 0;
                if (_HE1 && current._LE1 / current._ME1 < 0.5) _hc._HE1 = _HE1;
                else _hc._HE1 = current;
            }
        }
        this._Z3[index] = _hc;
        if (_hc._NE1) _hc._NE1(index);
        if (this._NE1) this._NE1(index);
    },
    _WE1: function(_UE1, _CD1, loop) {
        var _d1 = this.data._FD1._e1(_CD1);
        if (!_d1) throw "Animation not found: " + _CD1;
        return this._f1(_UE1, _d1, loop);
    },
    _f1: function(_UE1, _d1, loop) {
        var _hc = new _W._GE1();
        _hc._d1 = _d1;
        _hc.loop = loop;
        _hc._JE1 = _d1.duration;
        this._RE1(_UE1, _hc);
        return _hc;
    },
    _XE1: function(_UE1, _CD1, loop, _IE1) {
        var _d1 = this.data._FD1._e1(_CD1);
        if (!_d1) throw "Animation not found: " + _CD1;
        return this._YE1(_UE1, _d1, loop, _IE1);
    },
    _YE1: function(_UE1, _d1, loop, _IE1) {
        var _hc = new _W._GE1();
        _hc._d1 = _d1;
        _hc.loop = loop;
        _hc._JE1 = _d1.duration;
        var last = this._VE1(_UE1);
        if (last) {
            while (last._kc) last = last._kc;
            last._kc = _hc;
        } else this._Z3[_UE1] = _hc;
        if (_IE1 <= 0) {
            if (last) _IE1 += last._JE1 - this.data._FE1(last._d1, _d1);
            else _IE1 = 0;
        }
        _hc._IE1 = _IE1;
        return _hc;
    },
    _ZE1: function(_UE1) {
        if (_UE1 >= this._Z3.length) return null;
        return this._Z3[_UE1];
    }
};
_W._y4 = function(_92) {
    this._92 = _92;
};
_W._y4.prototype = {
    scale: 1,
    _z4: function(_31, name) {
        var _FD1 = new _W._uD1();
        _FD1.name = name;
        var __E1 = _31["skeleton"];
        if (__E1) {
            _FD1._ot = __E1["hash"];
            _FD1.version = __E1["spine"];
            _FD1.width = __E1["width"] || 0;
            _FD1.height = __E1["height"] || 0;
        }
        var _tB1 = _31["bones"];
        for (var i = 0, _X2 = _tB1.length; i < _X2; i++) {
            var _0F1 = _tB1[i];
            var parent = null;
            if (_0F1["parent"]) {
                parent = _FD1._L3(_0F1["parent"]);
                if (!parent) throw "Parent bone not found: " + _0F1["parent"];
            }
            var _36 = new _W._nB1(_0F1["name"], parent);
            _36.length = (_0F1["length"] || 0) * this.scale;
            _36.x = (_0F1["x"] || 0) * this.scale;
            _36.y = (_0F1["y"] || 0) * this.scale;
            _36.rotation = (_0F1["rotation"] || 0);
            _36.scaleX = _0F1.hasOwnProperty("scaleX") ? _0F1["scaleX"] : 1;
            _36.scaleY = _0F1.hasOwnProperty("scaleY") ? _0F1["scaleY"] : 1;
            _36._z2 = _0F1["flipX"] || false;
            _36._A2 = _0F1["flipY"] || false;
            _36._oB1 = _0F1.hasOwnProperty("inheritScale") ? _0F1["inheritScale"] : true;
            _36._pB1 = _0F1.hasOwnProperty("inheritRotation") ? _0F1["inheritRotation"] : true;
            _FD1._tB1.push(_36);
        }
        var _1F1 = _31["ik"];
        if (_1F1) {
            for (var i = 0, _X2 = _1F1.length; i < _X2; i++) {
                var _2F1 = _1F1[i];
                var _3F1 = new _W._sB1(_2F1["name"]);
                var _tB1 = _2F1["bones"];
                for (var _bp = 0, _MD1 = _tB1.length; _bp < _MD1; _bp++) {
                    var _K3 = _FD1._L3(_tB1[_bp]);
                    if (!_K3) throw "IK bone not found: " + _tB1[_bp];
                    _3F1._tB1.push(_K3);
                }
                _3F1.target = _FD1._L3(_2F1["target"]);
                if (!_3F1.target) throw "Target bone not found: " + _2F1["target"];
                _3F1._uB1 = (!_2F1.hasOwnProperty("bendPositive") || _2F1["bendPositive"]) ? 1 : -1;
                _3F1._vB1 = _2F1.hasOwnProperty("mix") ? _2F1["mix"] : 1;
                _FD1._qD1.push(_3F1);
            }
        }
        var _W4 = _31["slots"];
        for (var i = 0, _X2 = _W4.length; i < _X2; i++) {
            var _4F1 = _W4[i];
            var _36 = _FD1._L3(_4F1["bone"]);
            if (!_36) throw "Slot bone not found: " + _4F1["bone"];
            var _NB1 = new _W._qB1(_4F1["name"], _36);
            var _R4 = _4F1["color"];
            if (_R4) {
                _NB1._d3 = this._5F1(_R4,
                    0);
                _NB1._Y4 = this._5F1(_R4, 1);
                _NB1._g3 = this._5F1(_R4, 2);
                _NB1._Z4 = this._5F1(_R4, 3);
            }
            _NB1._46 = _4F1["attachment"];
            _NB1._rB1 = _4F1["additive"] && _4F1["additive"] == "true";
            _FD1._W4.push(_NB1);
        }
        var _y1 = _31["skins"];
        for (var _zD1 in _y1) {
            if (!_y1.hasOwnProperty(_zD1)) continue;
            var _6F1 = _y1[_zD1];
            var _z1 = new _W._eC1(_zD1);
            for (var _xD1 in _6F1) {
                if (!_6F1.hasOwnProperty(_xD1)) continue;
                var _v1 = _FD1._w1(_xD1);
                var _7F1 = _6F1[_xD1];
                for (var _46 in _7F1) {
                    if (!_7F1.hasOwnProperty(_46)) continue;
                    var _A1 = this._8F1(_z1, _46, _7F1[_46]);
                    if (_A1) _z1._gC1(_v1,
                        _46, _A1);
                }
            }
            _FD1._y1.push(_z1);
            if (_z1.name == "default") _FD1._h1 = _z1;
        }
        var _mC1 = _31["events"];
        for (var _BD1 in _mC1) {
            if (!_mC1.hasOwnProperty(_BD1)) continue;
            var _9F1 = _mC1[_BD1];
            var _ys = new _W._SD1(_BD1);
            _ys._TD1 = _9F1["int"] || 0;
            _ys._UD1 = _9F1["float"] || 0;
            _ys._VD1 = _9F1["string"] || null;
            _FD1._mC1.push(_ys);
        }
        var __ = _31["animations"];
        for (var _CD1 in __) {
            if (!__.hasOwnProperty(_CD1)) continue;
            this._aF1(_CD1, __[_CD1], _FD1);
        }
        return _FD1;
    },
    _bF1: function(map) {
        if (map["type"] && map["type"].toLowerCase() === "boundingbox") {
            return _W.__4._WD1;
        } else if (map["type"] && map["type"].toLowerCase() === "mesh") {
            return _W.__4._05;
        } else if (map["type"] && map["type"].toLowerCase() === "skinnedmesh") {
            return _W.__4._15;
        }
        return _W.__4._U1;
    },
    _8F1: function(_z1, name, map) {
        name = map["name"] || name;
        var type = this._bF1(map);
        var _YD1 = map["path"] || name;
        var scale = this.scale;
        if (type == _W.__4._U1) {
            var _U1 = this._92._c2(_z1, name, _YD1);
            if (!_U1) return null;
            _U1._YD1 = _YD1;
            _U1.x = (map["x"] || 0) * scale;
            _U1.y = (map["y"] || 0) * scale;
            _U1.scaleX = map.hasOwnProperty("scaleX") ? map["scaleX"] : 1;
            _U1.scaleY = map.hasOwnProperty("scaleY") ? map["scaleY"] : 1;
            _U1.rotation = map["rotation"] || 0;
            _U1.width = (map["width"] || 0) * scale;
            _U1.height = (map["height"] || 0) * scale;
            var _R4 = map["color"];
            if (_R4) {
                _U1._d3 = this._5F1(_R4, 0);
                _U1._Y4 = this._5F1(_R4, 1);
                _U1._g3 = this._5F1(_R4, 2);
                _U1._Z4 = this._5F1(_R4, 3);
            }
            _U1._d2();
            return _U1;
        } else if (type == _W.__4._05) {
            var _05 = this._92._cF1(_z1, name, _YD1);
            if (!_05) return null;
            _05._YD1 = _YD1;
            _05._35 = this._dF1(map, "vertices", scale);
            _05._f5 = this._eF1(map, "triangles");
            _05._iE1 = this._dF1(map, "uvs", 1);
            _05._qE1();
            _R4 = map["color"];
            if (_R4) {
                _05._d3 = this._5F1(_R4,
                    0);
                _05._Y4 = this._5F1(_R4, 1);
                _05._g3 = this._5F1(_R4, 2);
                _05._Z4 = this._5F1(_R4, 3);
            }
            _05._jE1 = (map["hull"] || 0) * 2;
            if (map["edges"]) _05._pE1 = this._eF1(map, "edges");
            _05.width = (map["width"] || 0) * scale;
            _05.height = (map["height"] || 0) * scale;
            return _05;
        } else if (type == _W.__4._15) {
            var _05 = this._92._fF1(_z1, name, _YD1);
            if (!_05) return null;
            _05._YD1 = _YD1;
            var _85 = this._dF1(map, "uvs", 1);
            var _35 = this._dF1(map, "vertices", 1);
            var _uE1 = [];
            var _tB1 = [];
            for (var i = 0, _X2 = _35.length; i < _X2;) {
                var _gF1 = _35[i++] | 0;
                _tB1[_tB1.length] = _gF1;
                for (var _MD1 = i + _gF1 * 4; i < _MD1;) {
                    _tB1[_tB1.length] = _35[i];
                    _uE1[_uE1.length] = _35[i + 1] * scale;
                    _uE1[_uE1.length] = _35[i + 2] * scale;
                    _uE1[_uE1.length] = _35[i + 3];
                    i += 4;
                }
            }
            _05._tB1 = _tB1;
            _05._uE1 = _uE1;
            _05._f5 = this._eF1(map, "triangles");
            _05._iE1 = _85;
            _05._qE1();
            _R4 = map["color"];
            if (_R4) {
                _05._d3 = this._5F1(_R4, 0);
                _05._Y4 = this._5F1(_R4, 1);
                _05._g3 = this._5F1(_R4, 2);
                _05._Z4 = this._5F1(_R4, 3);
            }
            _05._jE1 = (map["hull"] || 0) * 2;
            if (map["edges"]) _05._pE1 = this._eF1(map, "edges");
            _05.width = (map["width"] || 0) * scale;
            _05.height = (map["height"] || 0) * scale;
            return _05;
        } else if (type == _W.__4._WD1) {
            var _A1 = this._92._hF1(_z1, name);
            var _35 = map["vertices"];
            for (var i = 0, _X2 = _35.length; i < _X2; i++) _A1._35.push(_35[i] * scale);
            return _A1;
        }
        throw "Unknown attachment type: " + type;
    },
    _aF1: function(name, map, _FD1) {
        var _w2 = [];
        var duration = 0;
        var _W4 = map["slots"];
        for (var _xD1 in _W4) {
            if (!_W4.hasOwnProperty(_xD1)) continue;
            var _4F1 = _W4[_xD1];
            var _v1 = _FD1._w1(_xD1);
            for (var _iF1 in _4F1) {
                if (!_4F1.hasOwnProperty(_iF1)) continue;
                var _oC1 = _4F1[_iF1];
                if (_iF1 == "color") {
                    var _ws = new _W._7D1(_oC1.length);
                    _ws._v1 = _v1;
                    var _uC1 = 0;
                    for (var i = 0, _X2 = _oC1.length; i < _X2; i++) {
                        var _jF1 = _oC1[i];
                        var _R4 = _jF1["color"];
                        var _d3 = this._5F1(_R4, 0);
                        var _Y4 = this._5F1(_R4, 1);
                        var _g3 = this._5F1(_R4, 2);
                        var _Z4 = this._5F1(_R4, 3);
                        _ws._ZC1(_uC1, _jF1["time"], _d3, _Y4, _g3, _Z4);
                        this._kF1(_ws, _uC1, _jF1);
                        _uC1++;
                    }
                    _w2.push(_ws);
                    duration = Math.max(duration, _ws.frames[_ws._YC1() * 5 - 5]);
                } else if (_iF1 == "attachment") {
                    var _ws = new _W._cD1(_oC1.length);
                    _ws._v1 = _v1;
                    var _uC1 = 0;
                    for (var i = 0, _X2 = _oC1.length; i < _X2; i++) {
                        var _jF1 = _oC1[i];
                        _ws._ZC1(_uC1++, _jF1["time"], _jF1["name"]);
                    }
                    _w2.push(_ws);
                    duration = Math.max(duration, _ws.frames[_ws._YC1() - 1]);
                } else throw "Invalid timeline type for a slot: " + _iF1 + " (" + _xD1 + ")";
            }
        }
        var _tB1 = map["bones"];
        for (var _vD1 in _tB1) {
            if (!_tB1.hasOwnProperty(_vD1)) continue;
            var _XC1 = _FD1._wD1(_vD1);
            if (_XC1 == -1) throw "Bone not found: " + _vD1;
            var _0F1 = _tB1[_vD1];
            for (var _iF1 in _0F1) {
                if (!_0F1.hasOwnProperty(_iF1)) continue;
                var _oC1 = _0F1[_iF1];
                if (_iF1 == "rotate") {
                    var _ws = new _W._WC1(_oC1.length);
                    _ws._XC1 = _XC1;
                    var _uC1 = 0;
                    for (var i = 0, _X2 = _oC1.length; i < _X2; i++) {
                        var _jF1 = _oC1[i];
                        _ws._ZC1(_uC1, _jF1["time"], _jF1["angle"]);
                        this._kF1(_ws, _uC1, _jF1);
                        _uC1++;
                    }
                    _w2.push(_ws);
                    duration = Math.max(duration, _ws.frames[_ws._YC1() * 2 - 2]);
                } else if (_iF1 == "translate" || _iF1 == "scale") {
                    var _ws;
                    var _lF1 = 1;
                    if (_iF1 == "scale") _ws = new _W._6D1(_oC1.length);
                    else {
                        _ws = new _W._3D1(_oC1.length);
                        _lF1 = this.scale;
                    }
                    _ws._XC1 = _XC1;
                    var _uC1 = 0;
                    for (var i = 0, _X2 = _oC1.length; i < _X2; i++) {
                        var _jF1 = _oC1[i];
                        var x = (_jF1["x"] || 0) * _lF1;
                        var y = (_jF1["y"] || 0) * _lF1;
                        _ws._ZC1(_uC1, _jF1["time"], x, y);
                        this._kF1(_ws, _uC1, _jF1);
                        _uC1++;
                    }
                    _w2.push(_ws);
                    duration = Math.max(duration, _ws.frames[_ws._YC1() * 3 - 3]);
                } else if (_iF1 == "flipX" || _iF1 == "flipY") {
                    var x = _iF1 == "flipX";
                    var _ws = x ? new _W._sD1(_oC1.length) : new _W._tD1(_oC1.length);
                    _ws._XC1 = _XC1;
                    var _mF1 = x ? "x" : "y";
                    var _uC1 = 0;
                    for (var i = 0, _X2 = _oC1.length; i < _X2; i++) {
                        var _jF1 = _oC1[i];
                        _ws._ZC1(_uC1, _jF1["time"], _jF1[_mF1] || false);
                        _uC1++;
                    }
                    _w2.push(_ws);
                    duration = Math.max(duration, _ws.frames[_ws._YC1() * 2 - 2]);
                } else throw "Invalid timeline type for a bone: " + _iF1 + " (" + _vD1 + ")";
            }
        }
        var _2F1 = map["ik"];
        for (var _ED1 in _2F1) {
            if (!_2F1.hasOwnProperty(_ED1)) continue;
            var _pD1 = _FD1._DD1(_ED1);
            var _oC1 = _2F1[_ED1];
            var _ws = new _W._nD1(_oC1.length);
            _ws._oD1 = _FD1._qD1.indexOf(_pD1);
            var _uC1 = 0;
            for (var i = 0, _X2 = _oC1.length; i < _X2; i++) {
                var _jF1 = _oC1[i];
                var _vB1 = _jF1.hasOwnProperty("mix") ? _jF1["mix"] : 1;
                var _uB1 = (!_jF1.hasOwnProperty("bendPositive") || _jF1["bendPositive"]) ? 1 : -1;
                _ws._ZC1(_uC1, _jF1["time"], _vB1, _uB1);
                this._kF1(_ws, _uC1, _jF1);
                _uC1++;
            }
            _w2.push(_ws);
            duration = Math.max(duration, _ws.frames[_ws._YC1() * 3 - 3]);
        }
        var _yE1 = map["ffd"];
        for (var _zD1 in _yE1) {
            var _z1 = _FD1._yD1(_zD1);
            var _4F1 = _yE1[_zD1];
            for (_xD1 in _4F1) {
                var _v1 = _FD1._w1(_xD1);
                var _nF1 = _4F1[_xD1];
                for (var _oF1 in _nF1) {
                    var _oC1 = _nF1[_oF1];
                    var _ws = new _W._iD1(_oC1.length);
                    var _A1 = _z1._B1(_v1, _oF1);
                    if (!_A1) throw "FFD attachment not found: " + _oF1;
                    _ws._v1 = _v1;
                    _ws._A1 = _A1;
                    var _pF1 = _A1.type == _W.__4._05;
                    var _lT;
                    if (_pF1) _lT = _A1._35.length;
                    else _lT = _A1._uE1.length / 3 * 2;
                    var _uC1 = 0;
                    for (var i = 0, _X2 = _oC1.length; i < _X2; i++) {
                        var _jF1 = _oC1[i];
                        var _35;
                        if (!_jF1["vertices"]) {
                            if (_pF1) _35 = _A1._35;
                            else {
                                _35 = [];
                                _35.length = _lT;
                            }
                        } else {
                            var _qF1 = _jF1["vertices"];
                            var _35 = [];
                            _35.length = _lT;
                            var start = _jF1["offset"] || 0;
                            var _MD1 = _qF1.length;
                            if (this.scale == 1) {
                                for (var _bp = 0; _bp < _MD1; _bp++) _35[_bp + start] = (_qF1[_bp] || 0);
                            } else {
                                for (var _bp = 0; _bp < _MD1; _bp++) _35[_bp + start] = (_qF1[_bp] || 0) * this.scale;
                            }
                            if (_pF1) {
                                var _rF1 = _A1._35;
                                for (var _bp = 0, _MD1 = _35.length; _bp < _MD1; _bp++) _35[_bp] = (_35[_bp] || 0) + (_rF1[_bp] || 0);
                            }
                        }
                        _ws._ZC1(_uC1, _jF1["time"], _35);
                        this._kF1(_ws, _uC1, _jF1);
                        _uC1++;
                    }
                    _w2[_w2.length] = _ws;
                    duration = Math.max(duration, _ws.frames[_ws._YC1() - 1]);
                }
            }
        }
        var _sF1 = map["drawOrder"];
        if (!_sF1) _sF1 = map["draworder"];
        if (_sF1) {
            var _ws = new _W._fD1(_sF1.length);
            var _tF1 = _FD1._W4.length;
            var _uC1 = 0;
            for (var i = 0, _X2 = _sF1.length; i < _X2; i++) {
                var _uF1 = _sF1[i];
                var _X4 = null;
                if (_uF1["offsets"]) {
                    _X4 = [];
                    _X4.length = _tF1;
                    for (var _bp = _tF1 - 1; _bp >= 0; _bp--) _X4[_bp] = -1;
                    var _vF1 = _uF1["offsets"];
                    var _wF1 = [];
                    _wF1.length = _tF1 - _vF1.length;
                    var _xF1 = 0,
                        _yF1 = 0;
                    for (var _bp = 0, _MD1 = _vF1.length; _bp < _MD1; _bp++) {
                        var _zF1 = _vF1[_bp];
                        var _v1 = _FD1._w1(_zF1["slot"]);
                        if (_v1 == -1) throw "Slot not found: " + _zF1["slot"];
                        while (_xF1 != _v1) _wF1[_yF1++] = _xF1++;
                        _X4[_xF1 + _zF1["offset"]] = _xF1++;
                    }
                    while (_xF1 < _tF1) _wF1[_yF1++] = _xF1++;
                    for (var _bp = _tF1 - 1; _bp >= 0; _bp--)
                        if (_X4[_bp] == -1) _X4[_bp] = _wF1[--_yF1];
                }
                _ws._ZC1(_uC1++, _uF1["time"], _X4);
            }
            _w2.push(_ws);
            duration = Math.max(duration, _ws.frames[_ws._YC1() - 1]);
        }
        var _mC1 = map["events"];
        if (_mC1) {
            var _ws = new _W._eD1(_mC1.length);
            var _uC1 = 0;
            for (var i = 0, _X2 = _mC1.length; i < _X2; i++) {
                var _9F1 = _mC1[i];
                var _ys = _FD1._AD1(_9F1["name"]);
                if (!_ys) throw "Event not found: " + _9F1["name"];
                var event = new _W.Event(_ys);
                event._TD1 = _9F1.hasOwnProperty("int") ? _9F1["int"] : _ys._TD1;
                event._UD1 = _9F1.hasOwnProperty("float") ? _9F1["float"] : _ys._UD1;
                event._VD1 = _9F1.hasOwnProperty("string") ? _9F1["string"] : _ys._VD1;
                _ws._ZC1(_uC1++, _9F1["time"], event);
            }
            _w2.push(_ws);
            duration = Math.max(duration, _ws.frames[_ws._YC1() - 1]);
        }
        _FD1.__.push(new _W._kC1(name, _w2, duration));
    },
    _kF1: function(_ws, _uC1, _jF1) {
        var _AF1 = _jF1["curve"];
        if (!_AF1) _ws._sC1._tC1(_uC1);
        else if (_AF1 == "stepped") _ws._sC1._vC1(_uC1);
        else if (_AF1 instanceof Array) _ws._sC1._wC1(_uC1, _AF1[0], _AF1[1], _AF1[2], _AF1[3]);
    },
    _5F1: function(_BF1, _CF1) {
        if (_BF1.length != 8) throw "Color hexidecimal length must be 8, recieved: " + _BF1;
        return parseInt(_BF1.substring(_CF1 * 2, (_CF1 * 2) + 2), 16) / 255;
    },
    _dF1: function(map, name, scale) {
        var _Qb = map[name];
        var _oC1 = new _W.Float32Array(_Qb.length);
        var i = 0,
            _X2 = _Qb.length;
        if (scale == 1) {
            for (; i < _X2; i++) _oC1[i] = _Qb[i];
        } else {
            for (; i < _X2; i++) _oC1[i] = _Qb[i] * scale;
        }
        return _oC1;
    },
    _eF1: function(map, name) {
        var _Qb = map[name];
        var _oC1 = new _W.Uint16Array(_Qb.length);
        for (var i = 0, _X2 = _Qb.length; i < _X2; i++) _oC1[i] = _Qb[i] | 0;
        return _oC1;
    }
};
_W._62 = function(_DF1, _EF1) {
    this._EF1 = _EF1;
    this._72 = [];
    this._82 = [];
    var _FF1 = new _W._GF1(_DF1);
    var _HF1 = [];
    _HF1.length = 4;
    var _Q1 = null;
    while (true) {
        var _Cq = _FF1._IF1();
        if (_Cq === null) break;
        _Cq = _FF1.trim(_Cq);
        if (!_Cq.length) _Q1 = null;
        else if (!_Q1) {
            _Q1 = new _W._R1();
            _Q1.name = _Cq;
            if (_FF1._JF1(_HF1) == 2) {
                _Q1.width = parseInt(_HF1[0]);
                _Q1.height = parseInt(_HF1[1]);
                _FF1._JF1(_HF1);
            }
            _Q1._KF1 = _W._62._B7[_HF1[0]];
            _FF1._JF1(_HF1);
            _Q1._LF1 = _W._62._MF1[_HF1[0]];
            _Q1._NF1 = _W._62._MF1[_HF1[1]];
            var direction = _FF1._OF1();
            _Q1._PF1 = _W._62._QF1._RF1;
            _Q1._SF1 = _W._62._QF1._RF1;
            if (direction == "x") _Q1._PF1 = _W._62._QF1.repeat;
            else if (direction == "y") _Q1._SF1 = _W._62._QF1.repeat;
            else if (direction == "xy") _Q1._PF1 = _Q1._SF1 = _W._62._QF1.repeat;
            _EF1.load(_Q1, _Cq, this);
            this._72.push(_Q1);
        } else {
            var _U1 = new _W._V1();
            _U1.name = _Cq;
            _U1._Q1 = _Q1;
            _U1.rotate = _FF1._OF1() == "true";
            _FF1._JF1(_HF1);
            var x = parseInt(_HF1[0]);
            var y = parseInt(_HF1[1]);
            _FF1._JF1(_HF1);
            var width = parseInt(_HF1[0]);
            var height = parseInt(_HF1[1]);
            _U1._W1 = x / _Q1.width;
            _U1._X1 = y / _Q1.height;
            if (_U1.rotate) {
                _U1._Y1 = (x + height) / _Q1.width;
                _U1._Z1 = (y + width) / _Q1.height;
            } else {
                _U1._Y1 = (x + width) / _Q1.width;
                _U1._Z1 = (y + height) / _Q1.height;
            }
            _U1.x = x;
            _U1.y = y;
            _U1.width = Math.abs(width);
            _U1.height = Math.abs(height);
            if (_FF1._JF1(_HF1) == 4) {
                _U1._32 = [parseInt(_HF1[0]), parseInt(_HF1[1]), parseInt(_HF1[2]), parseInt(_HF1[3])];
                if (_FF1._JF1(_HF1) == 4) {
                    _U1._42 = [parseInt(_HF1[0]), parseInt(_HF1[1]), parseInt(_HF1[2]), parseInt(_HF1[3])];
                    _FF1._JF1(_HF1);
                }
            }
            _U1._12 = parseInt(_HF1[0]);
            _U1._22 = parseInt(_HF1[1]);
            _FF1._JF1(_HF1);
            _U1.__1 = parseInt(_HF1[0]);
            _U1._02 = parseInt(_HF1[1]);
            _U1.index = parseInt(_FF1._OF1());
            this._82.push(_U1);
        }
    }
};
_W._62.prototype = {
    _TF1: function(name) {
        var _82 = this._82;
        for (var i = 0, _X2 = _82.length; i < _X2; i++)
            if (_82[i].name == name) return _82[i];
        return null;
    },
    _UF1: function() {
        var _72 = this._72;
        for (var i = 0, _X2 = _72.length; i < _X2; i++) this._EF1._VF1(_72[i]._S1);
    },
    _qE1: function(_Q1) {
        var _82 = this._82;
        for (var i = 0, _X2 = _82.length; i < _X2; i++) {
            var _U1 = _82[i];
            if (_U1._Q1 != _Q1) continue;
            _U1._W1 = _U1.x / _Q1.width;
            _U1._X1 = _U1.y / _Q1.height;
            if (_U1.rotate) {
                _U1._Y1 = (_U1.x + _U1.height) / _Q1.width;
                _U1._Z1 = (_U1.y + _U1.width) / _Q1.height;
            } else {
                _U1._Y1 = (_U1.x + _U1.width) / _Q1.width;
                _U1._Z1 = (_U1.y + _U1.height) / _Q1.height;
            }
        }
    }
};
_W._62._B7 = {
    alpha: 0,
    _WF1: 1,
    _XF1: 2,
    _YF1: 3,
    _ZF1: 4,
    __F1: 5,
    _0G1: 6
};
_W._62._MF1 = {
    _1G1: 0,
    _Ce1: 1,
    _2G1: 2,
    _3G1: 3,
    _4G1: 4,
    _5G1: 5,
    _6G1: 6
};
_W._62._QF1 = {
    _7G1: 0,
    _RF1: 1,
    repeat: 2
};
_W._R1 = function() {};
_W._R1.prototype = {
    name: null,
    _KF1: null,
    _LF1: null,
    _NF1: null,
    _PF1: null,
    _SF1: null,
    _S1: null,
    width: 0,
    height: 0
};
_W._V1 = function() {};
_W._V1.prototype = {
    _Q1: null,
    name: null,
    x: 0,
    y: 0,
    width: 0,
    height: 0,
    _W1: 0,
    _X1: 0,
    _Y1: 0,
    _Z1: 0,
    __1: 0,
    _02: 0,
    _12: 0,
    _22: 0,
    index: 0,
    rotate: false,
    _32: null,
    _42: null
};
_W._GF1 = function(text) {
    var _Sn = text.replace("\r\n",
        "\n");
    _Sn = _Sn.replace("\r", "\n");
    this._8G1 = text.split("\n");
};
_W._GF1.prototype = {
    index: 0,
    trim: function(value) {
        return value.trim();
    },
    _IF1: function() {
        if (this.index >= this._8G1.length) return null;
        return this._8G1[this.index++];
    },
    _OF1: function() {
        var _Cq = this._IF1();
        var _jC1 = _Cq.indexOf(":");
        if (_jC1 == -1) throw "Invalid line: " + _Cq;
        return this.trim(_Cq.substring(_jC1 + 1));
    },
    _JF1: function(_HF1) {
        var _Cq = this._IF1();
        var _jC1 = _Cq.indexOf(":");
        if (_jC1 == -1) throw "Invalid line: " + _Cq;
        var i = 0,
            _9G1 = _jC1 + 1;
        for (; i < 3; i++) {
            var _aG1 = _Cq.indexOf(",",
                _9G1);
            if (_aG1 == -1) break;
            _HF1[i] = this.trim(_Cq.substr(_9G1, _aG1 - _9G1));
            _9G1 = _aG1 + 1;
        }
        _HF1[i] = this.trim(_Cq.substring(_9G1));
        return i + 1;
    }
};
_W._a2 = function(_52) {
    this._52 = _52;
};
_W._a2.prototype = {
    _c2: function(_z1, name, _YD1) {
        var _U1 = this._52._TF1(_YD1);
        if (!_U1) throw "Region not found in atlas: " + _YD1 + " (region attachment: " + name + ")";
        var _A1 = new _W._XD1(name);
        _A1._S1 = _U1;
        _A1._4E1(_U1._W1, _U1._X1, _U1._Y1, _U1._Z1, _U1.rotate);
        _A1._ZD1 = _U1.__1;
        _A1.__D1 = _U1._02;
        _A1._0E1 = _U1.width;
        _A1._1E1 = _U1.height;
        _A1._2E1 = _U1._12;
        _A1._3E1 = _U1._22;
        return _A1;
    },
    _cF1: function(_z1, name, _YD1) {
        var _U1 = this._52._TF1(_YD1);
        if (!_U1) throw "Region not found in atlas: " + _YD1 + " (mesh attachment: " + name + ")";
        var _A1 = new _W._hE1(name);
        _A1._S1 = _U1;
        _A1._kE1 = _U1._W1;
        _A1._lE1 = _U1._X1;
        _A1._mE1 = _U1._Y1;
        _A1._nE1 = _U1._Z1;
        _A1._oE1 = _U1.rotate;
        _A1._ZD1 = _U1.__1;
        _A1.__D1 = _U1._02;
        _A1._0E1 = _U1.width;
        _A1._1E1 = _U1.height;
        _A1._2E1 = _U1._12;
        _A1._3E1 = _U1._22;
        return _A1;
    },
    _fF1: function(_z1, name, _YD1) {
        var _U1 = this._52._TF1(_YD1);
        if (!_U1) throw "Region not found in atlas: " + _YD1 + " (skinned mesh attachment: " + name + ")";
        var _A1 = new _W._tE1(name);
        _A1._S1 = _U1;
        _A1._kE1 = _U1._W1;
        _A1._lE1 = _U1._X1;
        _A1._mE1 = _U1._Y1;
        _A1._nE1 = _U1._Z1;
        _A1._oE1 = _U1.rotate;
        _A1._ZD1 = _U1.__1;
        _A1.__D1 = _U1._02;
        _A1._0E1 = _U1.width;
        _A1._1E1 = _U1.height;
        _A1._2E1 = _U1._12;
        _A1._3E1 = _U1._22;
        return _A1;
    },
    _hF1: function(_z1, name) {
        return new _W._zE1(name);
    }
};
_W._21 = function() {
    this._bG1 = [];
    this._Y2 = [];
    this._J2 = [];
};
_W._21.prototype = {
    _K2: 0,
    _N2: 0,
    _M2: 0,
    _O2: 0,
    _y2: function(_n2, _cG1) {
        var _W4 = _n2._W4;
        var _tF1 = _W4.length;
        var x = _n2.x,
            y = _n2.y;
        var _J2 = this._J2;
        var _bG1 = this._bG1;
        var _Y2 = this._Y2;
        _J2.length = 0;
        for (var i = 0, _X2 = _Y2.length; i < _X2; i++) _bG1.push(_Y2[i]);
        _Y2.length = 0;
        for (var i = 0; i < _tF1; i++) {
            var _s1 = _W4[i];
            var _dG1 = _s1._A1;
            if (!_dG1) continue;
            if (_dG1.type != _W.__4._WD1) continue;
            _J2.push(_dG1);
            var _eG1 = _bG1.length,
                _gW;
            if (_eG1 > 0) {
                _gW = _bG1[_eG1 - 1];
                _bG1.splice(_eG1 - 1, 1);
            } else _gW = [];
            _Y2.push(_gW);
            _gW.length = _dG1._35.length;
            _dG1._e5(x, y, _s1._K3, _gW);
        }
        if (_cG1) this._fG1();
    },
    _fG1: function() {
        var _Y2 = this._Y2;
        var _K2 = Number.MAX_VALUE,
            _N2 = Number.MAX_VALUE,
            _M2 = Number.MIN_VALUE,
            _O2 = Number.MIN_VALUE;
        for (var i = 0, _X2 = _Y2.length; i < _X2; i++) {
            var _35 = _Y2[i];
            for (var _bp = 0, _MD1 = _35.length; _bp < _MD1; _bp += 2) {
                var x = _35[_bp];
                var y = _35[_bp + 1];
                _K2 = Math.min(_K2, x);
                _N2 = Math.min(_N2, y);
                _M2 = Math.max(_M2, x);
                _O2 = Math.max(_O2, y);
            }
        }
        this._K2 = _K2;
        this._N2 = _N2;
        this._M2 = _M2;
        this._O2 = _O2;
    },
    _gG1: function(x, y) {
        return x >= this._K2 && x <= this._M2 && y >= this._N2 && y <= this._O2;
    },
    _hG1: function(_03, _13, _23, _33) {
        var _K2 = this._K2,
            _N2 = this._N2,
            _M2 = this._M2,
            _O2 = this._O2;
        if ((_03 <= _K2 && _23 <= _K2) || (_13 <= _N2 && _33 <= _N2) || (_03 >= _M2 && _23 >= _M2) || (_13 >= _O2 && _33 >= _O2)) return false;
        var __2 = (_33 - _13) / (_23 - _03);
        var y = __2 * (_K2 - _03) + _13;
        if (y > _N2 && y < _O2) return true;
        y = __2 * (_M2 - _03) + _13;
        if (y > _N2 && y < _O2) return true;
        var x = (_N2 - _13) / __2 + _03;
        if (x > _K2 && x < _M2) return true;
        x = (_O2 - _13) / __2 + _03;
        if (x > _K2 && x < _M2) return true;
        return false;
    },
    _iG1: function(_jG1) {
        return this._K2 < _jG1._M2 && this._M2 > _jG1._K2 && this._N2 < _jG1._O2 && this._O2 > _jG1._N2;
    },
    _t3: function(x, y) {
        var _Y2 = this._Y2;
        for (var i = 0, _X2 = _Y2.length; i < _X2; i++)
            if (this._kG1(_Y2[i], x, y)) return this._J2[i];
        return null;
    },
    _53: function(_03, _13, _23, _33) {
        var _Y2 = this._Y2;
        for (var i = 0, _X2 = _Y2.length; i < _X2; i++)
            if (_Y2[i]._53(_03, _13, _23, _33)) return this._J2[i];
        return null;
    },
    _kG1: function(_gW, x, y) {
        var _MD1 = _gW.length;
        var _lG1 = _MD1 - 2;
        var _mG1 = false;
        for (var _bp = 0; _bp < _MD1; _bp += 2) {
            var _nG1 = _gW[_bp + 1];
            var _VC1 = _gW[_lG1 + 1];
            if ((_nG1 < y && _VC1 >= y) || (_VC1 < y && _nG1 >= y)) {
                var _oG1 = _gW[_bp];
                if (_oG1 + (y - _nG1) / (_VC1 - _nG1) * (_gW[_lG1] - _oG1) < x) _mG1 = !_mG1;
            }
            _lG1 = _bp;
        }
        return _mG1;
    },
    _pG1: function(_gW, _03, _13, _23, _33) {
        var _MD1 = _gW.length;
        var _qG1 = _03 - _23,
            _rG1 = _13 - _33;
        var _sG1 = _03 * _33 - _13 * _23;
        var _wi = _gW[_MD1 - 2],
            _xi = _gW[_MD1 - 1];
        for (var _bp = 0; _bp < _MD1; _bp += 2) {
            var _tG1 = _gW[_bp],
                _uG1 = _gW[_bp + 1];
            var _vG1 = _wi * _uG1 - _xi * _tG1;
            var _wG1 = _wi - _tG1,
                _xG1 = _xi - _uG1;
            var _yG1 = _qG1 * _xG1 - _rG1 * _wG1;
            var x = (_sG1 * _wG1 - _qG1 * _vG1) / _yG1;
            if (((x >= _wi && x <= _tG1) || (x >= _tG1 && x <= _wi)) && ((x >= _03 && x <= _23) || (x >= _23 && x <= _03))) {
                var y = (_sG1 * _xG1 - _rG1 * _vG1) / _yG1;
                if (((y >= _xi && y <= _uG1) || (y >= _uG1 && y <= _xi)) && ((y >= _13 && y <= _33) || (y >= _33 && y <= _13))) return true;
            }
            _wi = _tG1;
            _xi = _uG1;
        }
        return false;
    },
    _zG1: function(_A1) {
        var index = this._J2.indexOf(_A1);
        return index == -1 ? null : this._Y2[index];
    },
    _AG1: function() {
        return this._M2 - this._K2;
    },
    _BG1: function() {
        return this._O2 - this._N2;
    }
};
var _CG1 = 0,
    _DG1 = 1,
    _EG1 = 2,
    _FG1 = 3,
    _GG1 = 4,
    _HG1 = 5,
    _IG1 = 6,
    _JG1 = 7,
    _KG1 = 8,
    _LG1 = 9;
var _MG1 = 0,
    _NG1 = 1,
    _OG1 = 2,
    _PG1 = 3;

function _QG1(_y7, _ha) {
    this.type = _y7;
    this.id = _ha;
    this._O1 = null;
};
_QG1.prototype._RG1 = function(_Ir1, _SG1, _TG1, _UG1, _VG1) {
    var _WG1 = _SG1.getInt32(_TG1, _UG1);
    _TG1 += 4;
    var width = _SG1.getInt32(_TG1, _UG1);
    _TG1 += 4;
    var height = _SG1.getInt32(_TG1, _UG1);
    _TG1 += 4;
    var _XG1 = _SG1.getInt32(_TG1, _UG1);
    _TG1 += 4;
    var _YG1 = _SG1.getInt32(_TG1,
        _UG1);
    _TG1 += 4;
    var _ZG1 = _SG1.getInt32(_TG1, _UG1);
    _TG1 += 4;
    var __G1 = _TG1;
    var _0H1 = new Uint8Array(_Ir1);
    var _1H1 = (_XG1 > 0) ? new Uint8Array(_Ir1, _TG1, _XG1) : null;
    _TG1 += _XG1;
    var _2H1 = (_YG1 > 0) ? new Uint8Array(_Ir1, _TG1, _YG1) : null;
    _TG1 += _YG1;
    var _3H1 = (_ZG1 > 0) ? new Uint8Array(_Ir1, _TG1, _ZG1) : null;
    _TG1 += _ZG1;
    this._4H1(_WG1, width, height, _1H1, _2H1, _3H1, _VG1);
    _TG1 = __G1 + (((_XG1 + _YG1 + _ZG1) + 3) & ~3);
    return _TG1;
};
_QG1.prototype._5H1 = function(_Cz, _Ou) {
    var _g3 = new ArrayBuffer(4);
    var _Z4 = new Uint32Array(_g3);
    var c = new Uint8Array(_g3);
    _Z4[0] = 0xdeadbeef;
    if (c[0] == 0xef) {
        return (((_Cz & 0xff) << 8) | (_Ou & 0xff));
    }
    if (c[0] == 0xde) {
        return (((_Ou & 0xff) << 8) | (_Cz & 0xff));
    }
};
_QG1.prototype._6H1 = function(_7H1) {
    try {
        do {
            if (_7H1[1] == 0xd9) {
                _7H1 = _7H1.subarray(2);
            } else if (_7H1[1] == 0xd8) {
                if ((_7H1[6] === 0x4a) && (_7H1[7] === 0x46) && (_7H1[8] === 0x49) && (_7H1[9] === 0x46)) {
                    var w = this._5H1(_7H1[14], _7H1[15]);
                    var h = this._5H1(_7H1[16], _7H1[17]);
                    var _8H1 = {
                        width: w,
                        height: h,
                        body: _7H1
                    };
                    return _8H1;
                }
                _7H1 = _7H1.subarray(4 + this._5H1(_7H1[4], _7H1[5]));
            } else {
                _7H1 = _7H1.subarray(2 + this._5H1(_7H1[2], _7H1[3]));
            }
        } while ((_7H1.byteLength >= 0) && (_7H1[0] == 0xff));
    } catch (e) {
        debug(e.message);
    }
    var _8H1 = {
        width: w,
        height: h,
        body: _7H1
    };
    return _8H1;
};
_QG1.prototype._4H1 = function(_y7, _j4, _k4, _7H1, _9H1, _aH1, _bH1) {
    switch (_y7) {
        case _GG1:
            {
                this._O1 = this._cH1(_j4, _k4, _7H1, "gif");
            }
            break;
        case _FG1:
            {
                this._O1 = this._cH1(_j4, _k4, _7H1, "png");
            }
            break;
        case _DG1:
        case _CG1:
            {
                this._O1 = this._cH1(_j4, _k4, _7H1, "jpeg");
            }
            break;
        case _EG1:
            {
                var _8H1 = this._6H1(_7H1);
                this._O1 = this._cH1(_8H1.width, _8H1.height, _8H1.body, "jpeg", function(_HM) {
                    var _dH1 = String.fromCharCode.apply(null,
                        new Uint16Array(_9H1));
                    var _dH1 = _dH1.split('').map(function(e) {
                        return e.charCodeAt(0);
                    });
                    var _eH1 = window["Zlib"];
                    var _fH1 = new _eH1["Inflate"](_dH1);
                    var _gH1 = _fH1["decompress"]();
                    this._O1 = _Zn1(_HM, _gH1);
                });
            }
            break;
        case _HG1:
        case _KG1:
            {
                this._O1 = null;
            }
            break;
        case _IG1:
        case _JG1:
        case _LG1:
            {
                var _O1 = new Image();
                var _87 = _b4._Vn1(_O1, _7H1, _j4, _k4);
                _O1._C5 = _87;
                _O1._a7 = _j4;
                _O1._b7 = _k4;
                this._O1 = _O1;
            }
            break;
        default:
            break;
    }
};
_QG1.prototype._cH1 = function(_j4, _k4, _7H1, _hH1, _pw, _iH1) {
    var _jH1 = new Uint16Array(_7H1);
    var _Uw = "";
    for (var i = 0,
            _b3 = _jH1.length; i < _b3; i++) {
        _Uw += String.fromCharCode(_jH1[i]);
    }
    var _kH1 = window._lH1(_Uw);
    var _mH1 = "data:image/" + _hH1 + ";base64," + _kH1;
    var img = new Image();
    img.onload = function() {
        var _L1 = {
            _T1: img
        };
        _D5(_L1);
        if (_pw) {
            _pw(_L1);
        }
    };
    img.onerror = function(e) {
        debug(e);
        if (_iH1) {
            _iH1(e);
        }
    };
    img.src = _mH1;
    return img;
};

function _Zn1(_HM, __6) {
    var _87 = _b4._Zn1(_HM._T1._C5, __6);
    _HM._T1._C5 = _87;
    _HM._T1._a7 = _87._0o1;
    _HM._T1._b7 = _87._1o1;
    return _HM._T1;
}
var _nH1 = 0,
    _oH1 = 1,
    _pH1 = 2;
var _qH1 = 0,
    _rH1 = 1,
    _sH1 = 2,
    _tH1 = 3;
var _uH1 = 0,
    _vH1 = 1;
var _wH1 = {
    _pR: 0,
    _qR: 0,
    version: 1
};

function _xH1(_y7, _ha) {
    this.type = _y7;
    this.id = _ha;
};
_xH1.prototype._yH1 = function(_SG1, _TG1, _UG1, _zH1) {
    this._K2 = _SG1.getFloat32(_TG1, _UG1);
    _TG1 += 4;
    this._M2 = _SG1.getFloat32(_TG1, _UG1);
    _TG1 += 4;
    this._N2 = _SG1.getFloat32(_TG1, _UG1);
    _TG1 += 4;
    this._O2 = _SG1.getFloat32(_TG1, _UG1);
    _TG1 += 4;
    var _AH1 = _SG1.getInt32(_TG1, _UG1);
    _TG1 += 4;
    this._BH1 = [];
    for (var i = 0; i < _AH1; i++) {
        var _CH1 = _SG1.getInt32(_TG1, _UG1);
        _TG1 += 4;
        var _DH1 = _SG1.getInt32(_TG1, _UG1);
        _TG1 += 4;
        var _EH1 = _SG1.getInt32(_TG1, _UG1);
        _TG1 += 4;
        var _FH1 = {
            _CH1: _CH1,
            _DH1: _DH1,
            _EH1: _EH1
        };
        _FH1._GH1 = (_CH1 > 0) ? [] : null;
        _FH1._HH1 = (_DH1 > 0) ? [] : null;
        _FH1._IH1 = (_EH1 > 0) ? [] : null;
        _TG1 = this._JH1(_FH1, _SG1, _TG1, _UG1, _zH1);
        _TG1 = this._KH1(_FH1, _SG1, _TG1, _UG1);
        _TG1 = this._LH1(_FH1, _SG1, _TG1, _UG1);
        this._BH1.push(_FH1);
    }
    return _TG1;
};
_xH1.prototype._JH1 = function(_MH1, _SG1, _TG1, _UG1, _zH1) {
    _MH1._GH1 = [];
    for (var i = 0; i < _MH1._CH1; i++) {
        var _NH1 = _SG1.getInt32(_TG1, _UG1);
        _TG1 += 4;
        var _OH1 = null;
        switch (_NH1) {
            case _rH1:
                {
                    _OH1 = {
                        type: _rH1
                    };
                    var _4j = _SG1.getUint8(_TG1, _UG1);
                    _TG1++;
                    var _5j = _SG1.getUint8(_TG1,
                        _UG1);
                    _TG1++;
                    var _6j = _SG1.getUint8(_TG1, _UG1);
                    _TG1++;
                    var alpha = _SG1.getUint8(_TG1, _UG1);
                    _TG1++;
                    _OH1._F4 = (_4j | (_5j << 8) | (_6j << 16) | (alpha << 24));
                }
                break;
            case _sH1:
                {
                    _OH1 = {
                        type: _sH1
                    };
                    _OH1._PH1 = _SG1.getInt32(_TG1, _UG1);
                    _TG1 += 4;
                    var _QH1 = [];
                    for (var __2 = 0; __2 < 9; __2++) {
                        _QH1[__2] = _SG1.getFloat32(_TG1, _UG1);
                        _TG1 += 4;
                    }
                    _OH1._QH1 = new _6l();
                    _OH1._QH1.__2[_lm] = _QH1[0];
                    _OH1._QH1.__2[_mm] = _QH1[1];
                    _OH1._QH1.__2[_om] = _QH1[2];
                    _OH1._QH1.__2[_pm] = _QH1[3];
                    _OH1._QH1.__2[_gl] = _QH1[4];
                    _OH1._QH1.__2[_rm] = _QH1[5];
                    _OH1._RH1 = _SG1.getInt32(_TG1,
                        _UG1);
                    _TG1 += 4;
                    _OH1._SH1 = [];
                    for (var __2 = 0; __2 < _OH1._RH1; __2++) {
                        var _qe1 = _SG1.getInt32(_TG1, _UG1);
                        _TG1 += 4;
                        var _4j = _SG1.getUint8(_TG1, _UG1);
                        _TG1++;
                        var _5j = _SG1.getUint8(_TG1, _UG1);
                        _TG1++;
                        var _6j = _SG1.getUint8(_TG1, _UG1);
                        _TG1++;
                        var alpha = _SG1.getUint8(_TG1, _UG1);
                        _TG1++;
                        _OH1._SH1.push({
                            _qe1: _qe1,
                            _F4: (_4j | (_5j << 8) | (_6j << 16) | (alpha << 24))
                        });
                    }
                    _OH1._S6 = null;
                    this._TH1(_OH1);
                }
                break;
            case _tH1:
                {
                    _OH1 = {
                        type: _tH1
                    };
                    _OH1._UH1 = _SG1.getInt32(_TG1, _UG1);
                    _TG1 += 4;
                    _OH1._VH1 = _SG1.getInt32(_TG1, _UG1);
                    _TG1 += 4;
                    _OH1._WH1 = -1;
                    for (var index = 0; index < _zH1.length; index++) {
                        if (_zH1[index].id === _OH1._VH1) {
                            _OH1._WH1 = index;
                            break;
                        }
                    }
                    var _QH1 = [];
                    for (var __2 = 0; __2 < 9; __2++) {
                        _QH1[__2] = _SG1.getFloat32(_TG1, _UG1);
                        _TG1 += 4;
                    }
                    _OH1._QH1 = new _6l();
                    _OH1._QH1.__2[_lm] = _QH1[0];
                    _OH1._QH1.__2[_mm] = _QH1[1];
                    _OH1._QH1.__2[_om] = _QH1[2];
                    _OH1._QH1.__2[_pm] = _QH1[3];
                    _OH1._QH1.__2[_gl] = _QH1[4];
                    _OH1._QH1.__2[_rm] = _QH1[5];
                }
                break;
        }
        _MH1._GH1.push(_OH1);
    }
    return _TG1;
};
_xH1.prototype._TH1 = function(_XH1) {
    if ((_XH1 === null) || (_XH1 === undefined)) {
        return;
    }
    var _YH1 = 256,
        _ZH1 = 1,
        __H1 = 64,
        _0I1 = 64;
    var _1I1 = [];
    var width, height;
    switch (_XH1._PH1) {
        default: return;
        case _uH1:
            {
                width = _YH1;
                height = _ZH1;
                for (var i = 0; i < _YH1; i++) {
                    _1I1[i] = this._2I1(_XH1, i);
                }
            }
            break;
        case _vH1:
            {
                width = __H1;
                height = _0I1;
                var _3I1 = (__H1 - 1) / 2;
                var _4I1 = (_0I1 - 1) / 2;
                var _pF = _e3(_3I1, _4I1);
                for (var _k3 = 0; _k3 < _0I1; _k3++) {
                    for (var i = 0; i < __H1; i++) {
                        var _45 = i - _3I1;
                        var _55 = _k3 - _4I1;
                        var _0j = Math.sqrt(_45 * _45 + _55 * _55);
                        _0j /= _pF;
                        var _qe1 = 255 * _0j;
                        _1I1[(_k3 * __H1) + i] = this._2I1(_XH1, _qe1);
                    }
                }
            }
            break;
    }
    _XH1._S6 = _5I1(width, height, _1I1);
};

function _5I1(_Va, _Wa, _Wn1) {
    var _4M = document.createElement(_eo);
    var _5M = _4M.getContext('2d');
    _6M(_5M);
    var _87 = _b4._Xn1(_4M, _Wn1, _Va, _Wa);
    var _L1 = new _5h();
    _L1.x = 0;
    _L1.y = 0;
    _L1.w = _87._0o1;
    _L1.h = _87._1o1;
    _L1.XOffset = 0;
    _L1.YOffset = 0;
    _L1.CropWidth = _L1.w;
    _L1.CropHeight = _L1.h;
    _L1.ow = _Va;
    _L1.oh = _Wa;
    _L1.tp = _gh(_4M);
    _L1._T1 = _P1[_L1.tp];
    _L1._T1._C5 = _87;
    _L1._T1._a7 = _4M.width;
    _L1._T1._b7 = _4M.height;
    return _L1;
}
_xH1.prototype._2I1 = function(_XH1, _kE) {
    if (_XH1._RH1 <= 0) {
        return 0;
    }
    _kE = (_kE < 0) ? 0 : (_kE > 255) ? 255 : _kE;
    if (_kE < _XH1._SH1[0]._qe1) {
        return _XH1._SH1[0]._F4;
    }
    for (var i = 1; i < _XH1._RH1; i++) {
        var _6I1 = _XH1._SH1[i];
        if (_6I1._qe1 >= _kE) {
            var _7I1 = _XH1._SH1[i - 1];
            var _8I1 = 0;
            if (_6I1._qe1 != _7I1._qe1) {
                _8I1 = ((_kE - _7I1._qe1) << 8) / (_6I1._qe1 - _7I1._qe1);
            }
            var _9I1 = 256 - _8I1;
            var _F4 = _6I1._F4;
            var _aI1 = _7I1._F4;
            var _bI1 = [];
            _bI1[0] = ((_F4 & 0xff) * _8I1) >> 8;
            _bI1[1] = (((_F4 >> 8) & 0xff) * _8I1) >> 8;
            _bI1[2] = (((_F4 >> 16) & 0xff) * _8I1) >> 8;
            _bI1[3] = (((_F4 >> 24) & 0xff) * _8I1) >> 8;
            _bI1[0] += ((_aI1 & 0xff) * _9I1) >> 8;
            _bI1[1] += (((_aI1 >> 8) & 0xff) * _9I1) >> 8;
            _bI1[2] += (((_aI1 >> 16) & 0xff) * _9I1) >> 8;
            _bI1[3] += (((_aI1 >> 24) & 0xff) * _9I1) >> 8;
            var _cI1 = _bI1[0] | (_bI1[1] << 8) | (_bI1[2] << 16) | (_bI1[3] << 24);
            return _cI1;
        }
    }
    return _XH1._SH1[_XH1._RH1 - 1]._F4;
};
_xH1.prototype._KH1 = function(_MH1, _SG1, _TG1, _UG1) {
    _MH1._HH1 = [];
    for (var i = 0; i < _MH1._DH1; i++) {
        var _4j = _SG1.getUint8(_TG1, _UG1);
        _TG1++;
        var _5j = _SG1.getUint8(_TG1, _UG1);
        _TG1++;
        var _6j = _SG1.getUint8(_TG1, _UG1);
        _TG1++;
        var alpha = _SG1.getUint8(_TG1, _UG1);
        _TG1++;
        _MH1._HH1.push({
            _F4: (_4j | (_5j << 8) | (_6j << 16) | (alpha << 24))
        });
    }
    return _TG1;
};
_xH1.prototype._LH1 = function(_MH1, _SG1, _TG1, _UG1) {
    var i, __2;
    _MH1._IH1 = [];
    for (i = 0; i < _MH1._EH1; i++) {
        var _dI1 = {};
        _MH1._IH1.push(_dI1);
        _dI1._eI1 = _SG1.getInt32(_TG1,
            _UG1);
        _TG1 += 4;
        _dI1._fI1 = _SG1.getInt32(_TG1, _UG1);
        _TG1 += 4;
        _dI1._gI1 = _SG1.getInt32(_TG1, _UG1);
        _TG1 += 4;
        _dI1._hI1 = _SG1.getInt32(_TG1, _UG1);
        _TG1 += 4;
        _dI1._iI1 = _SG1.getInt32(_TG1, _UG1);
        _TG1 += 4;
        _dI1._jI1 = _SG1.getInt32(_TG1, _UG1);
        _TG1 += 4;
        _dI1._kI1 = _SG1.getInt32(_TG1, _UG1);
        _TG1 += 4;
        _dI1._lI1 = _SG1.getInt32(_TG1, _UG1);
        _TG1 += 4;
        if (_wH1.version >= 2) {
            _dI1._mI1 = _SG1.getInt32(_TG1, _UG1);
            _TG1 += 4;
            _dI1._nI1 = _SG1.getInt32(_TG1, _UG1);
            _TG1 += 4;
        }
        if (_wH1.version >= 3) {
            _dI1._oI1 = _SG1.getInt32(_TG1, _UG1);
            _TG1 += 4;
            _dI1._pI1 = _SG1.getInt32(_TG1,
                _UG1);
            _TG1 += 4;
        }
        _dI1._qI1 = (_dI1._hI1 > 0) ? [] : null;
        _dI1._rI1 = (_dI1._iI1 > 0) ? [] : null;
        _dI1._sI1 = (_dI1._jI1 > 0) ? [] : null;
        _dI1._tI1 = (_dI1._kI1 > 0) ? [] : null;
        _dI1._uI1 = (_dI1._lI1 > 0) ? [] : null;
        _dI1._vI1 = (_dI1._mI1) ? [] : null;
        _dI1._wI1 = (_dI1._nI1) ? [] : null;
        _dI1._xI1 = (_dI1._oI1) ? [] : null;
        _dI1._yI1 = (_dI1._pI1) ? [] : null;
        for (__2 = 0; __2 < _dI1._hI1 * 2; __2++) {
            _dI1._qI1[__2] = _SG1.getFloat32(_TG1, _UG1);
            _TG1 += 4;
        }
        for (__2 = 0; __2 < _dI1._iI1 * 2; __2++) {
            _dI1._zI1[__2] = _SG1.getInt32(_TG1, _UG1);
            _TG1 += 4;
        }
        for (__2 = 0; __2 < _dI1._jI1 * 3; __2++) {
            _dI1._sI1[__2] = _SG1.getUint32(_TG1,
                _UG1);
            _TG1 += 4;
        }
        for (__2 = 0; __2 < _dI1._kI1 * 2; __2++) {
            _dI1._tI1[__2] = _SG1.getFloat32(_TG1, _UG1);
            _TG1 += 4;
        }
        for (__2 = 0; __2 < _dI1._lI1 * 3; __2++) {
            _dI1._uI1[__2] = _SG1.getUint32(_TG1, _UG1);
            _TG1 += 4;
        }
        if (_wH1.version >= 2) {
            for (__2 = 0; __2 < _dI1._mI1 * 2; __2++) {
                _dI1._vI1[__2] = _SG1.getInt32(_TG1, _UG1);
                _TG1 += 4;
            }
            for (__2 = 0; __2 < _dI1._nI1 * 2; __2++) {
                _dI1._wI1[__2] = _SG1.getFloat32(_TG1, _UG1);
                _TG1 += 4;
            }
        }
        if (_wH1.version >= 3) {
            for (__2 = 0; __2 < _dI1._oI1 * 2; __2++) {
                _dI1._xI1[__2] = _SG1.getInt32(_TG1, _UG1);
                _TG1 += 4;
            }
            for (__2 = 0; __2 < _dI1._pI1 * 2; __2++) {
                _dI1._yI1[__2] = _SG1.getFloat32(_TG1, _UG1);
                _TG1 += 4;
            }
        }
    }
    return _TG1;
};
var _AI1 = 1.0 / 20.0;

function _BI1() {
    this._CI1 = 0;
    this._DI1 = 0;
    this._K2 = 0;
    this._M2 = 0;
    this._N2 = 0;
    this._O2 = 0;
    this._EI1 = null;
};
_BI1.prototype._FI1 = function(_SG1, _TG1, _UG1) {
    this._CI1 = _SG1.getInt32(_TG1, _UG1);
    _TG1 += 4;
    this._DI1 = _SG1.getInt32(_TG1, _UG1);
    _TG1 += 4;
    this._K2 = _SG1.getFloat32(_TG1, _UG1) * _AI1;
    _TG1 += 4;
    this._M2 = _SG1.getFloat32(_TG1, _UG1) * _AI1;
    _TG1 += 4;
    this._N2 = _SG1.getFloat32(_TG1, _UG1) * _AI1;
    _TG1 += 4;
    this._O2 = _SG1.getFloat32(_TG1, _UG1) * _AI1;
    _TG1 += 4;
    var _GI1, _HI1, _II1;
    _GI1 = _SG1.getInt32(_TG1, _UG1);
    _TG1 += 4;
    _HI1 = _SG1.getInt32(_TG1, _UG1);
    _TG1 += 4;
    _II1 = _SG1.getInt32(_TG1, _UG1);
    _TG1 += 4;
    this._EI1 = {
        _GI1: _GI1,
        _HI1: _HI1,
        _II1: _II1
    };
    this._JI1 = [];
    for (var i = 0; i < this._DI1; i++) {
        var _KI1 = {};
        this._JI1.push(_KI1);
        _KI1._LI1 = _SG1.getInt32(_TG1, _UG1);
        _TG1 += 4;
        _KI1._K2 = _SG1.getFloat32(_TG1, _UG1) * _AI1;
        _TG1 += 4;
        _KI1._M2 = _SG1.getFloat32(_TG1, _UG1) * _AI1;
        _TG1 += 4;
        _KI1._N2 = _SG1.getFloat32(_TG1, _UG1) * _AI1;
        _TG1 += 4;
        _KI1._O2 = _SG1.getFloat32(_TG1, _UG1) * _AI1;
        _TG1 += 4;
        _KI1._MI1 = [];
        for (var _k3 = 0; _k3 < _KI1._LI1; _k3++) {
            var _5p = {};
            _KI1._MI1.push(_5p);
            _5p._gz = _SG1.getInt32(_TG1, _UG1);
            _TG1 += 4;
            _5p.index = _SG1.getInt32(_TG1, _UG1);
            _TG1 += 4;
            _5p.depth = _SG1.getInt32(_TG1, _UG1);
            _TG1 += 4;
            _5p._NI1 = _SG1.getInt32(_TG1, _UG1);
            _TG1 += 4;
            var _OI1 = [];
            for (var _dt = 0; _dt < 4; _dt++) {
                _OI1[_dt] = _SG1.getInt32(_TG1, _UG1);
                _TG1 += 4;
            }
            var _PI1 = [];
            for (var _dt = 0; _dt < 4; _dt++) {
                _PI1[_dt] = _SG1.getInt32(_TG1, _UG1);
                _TG1 += 4;
            }
            _5p._QI1 = [];
            _5p._RI1 = [];
            _5p._SI1 = [];
            _5p._QI1[0] = _OI1[2];
            _5p._RI1[0] = _PI1[2];
            _5p._SI1[0] = 0;
            _5p._QI1[1] = _OI1[1];
            _5p._RI1[1] = _PI1[1];
            _5p._SI1[1] = _PI1[1];
            _5p._QI1[2] = _OI1[0];
            _5p._RI1[2] = _PI1[0];
            _5p._SI1[2] = _PI1[0];
            _5p._QI1[3] = _OI1[3];
            _5p._RI1[3] = _PI1[3];
            _5p._SI1[3] = _PI1[3];
            _5p._K2 = _SG1.getFloat32(_TG1, _UG1) * _AI1;
            _TG1 += 4;
            _5p._M2 = _SG1.getFloat32(_TG1, _UG1) * _AI1;
            _TG1 += 4;
            _5p._N2 = _SG1.getFloat32(_TG1, _UG1) * _AI1;
            _TG1 += 4;
            _5p._O2 = _SG1.getFloat32(_TG1, _UG1) * _AI1;
            _TG1 += 4;
            var _QH1 = [];
            for (var _dt = 0; _dt < 9; _dt++) {
                _QH1[_dt] = _SG1.getFloat32(_TG1, _UG1);
                _TG1 += 4;
            }
            _5p._QH1 = new _6l();
            _5p._QH1.__2[_lm] = _QH1[0];
            _5p._QH1.__2[_mm] = _QH1[1];
            _5p._QH1.__2[_om] = _QH1[2];
            _5p._QH1.__2[_pm] = _QH1[3];
            _5p._QH1.__2[_gl] = _QH1[4];
            _5p._QH1.__2[_rm] = _QH1[5];
        }
    }
    return _TG1;
};
var _TI1 = -1;
var _ya = null;
var _UI1 = 0;
var _VI1 = 0;
var _WI1 = {
    x: 0,
    y: 0,
    _96: 0
};
var _XI1 = "en";

function _YI1(canvas) {
    debug = _ZI1;
    game_end = __I1;
    os_get_language = _0J1;
    tizen.systeminfo.getPropertyValue("LOCALE", _1J1, null);
    device_get_tilt_x = _2J1;
    device_get_tilt_y = _3J1;
    device_get_tilt_z = _4J1;
    debug('------- Tizen_Init -------------');
    debug('href=' + window.location._MP);
    debug('canvas size:' + canvas.width + ',' + canvas.height);
    debug('window size:' + window.innerWidth + ',' + window.innerHeight);
    debug('clientWidth:' + document.documentElement.clientWidth);
    debug('clientHeight:' + document.documentElement.clientHeight);
    debug('displayName:' + _Pn.Options.DisplayName);
    _aQ = canvas.width;
    _cQ = canvas.height;
    var _MO = document.documentElement.clientWidth;
    var _zB = document.documentElement.clientHeight;
    _zB -= _VI1;
    if (0) {
        var _5J1 = _zB / _MO;
        var _6J1 = canvas.height / canvas.width;
        if (_5J1 > _6J1) {
            canvas.width = _MO;
            canvas.height = _MO * _6J1;
            window_set_position(0, (_zB - canvas.height) * 0.5);
        } else {
            canvas.height = _zB;
            canvas.width = _zB / _6J1;
            window_set_position((_MO - canvas.width) * 0.5, 0);
        }
    } else {
        window_set_position(0, 0);
        canvas.width = _MO;
        canvas.height = _zB;
        debug("set window rect " + _MO + "," + _zB);
    }
    display_get_orientation = _7J1;
    YoYo_OpenURL_full = _8J1;
    _9J1();
    debug("PushEnable=" + _Pn.Options.EnablePushNotification);
    if (_Pn.Options.EnablePushNotification) {
        _aJ1();
    } {
        _ya = _bJ1;
    }
    document.addEventListener("webkitvisibilitychange", _cJ1, false);
    if (window["DeviceMotionEvent"]) {
        debug("DeviceMotionEvent is supported");
        window.addEventListener('devicemotion', _dJ1, false);
    } else debug("DeviceMotionEvent NOT supported");
    window.addEventListener('tizenhwkey', _eJ1, false);
    window._fJ1 = _gJ1;
}

function _0J1() {
    return _XI1;
}

function _1J1(_hJ1) {
    var _Ks = _hJ1["language"];
    var _iJ1 = _Ks.slice(0, 2);
    _XI1 = _iJ1;
}

function __I1() {
    debug("game_end");
    tizen.application.getCurrentApplication().exit()
}

function _eJ1(_Bp) {
    var _jJ1 = 0;
    if (_Bp['keyName'] == 'back') {
        _jJ1 = 8;
    } else if (_Bp['keyName'] == 'menu') {
        _jJ1 = 77;
    }
    if (_jJ1 != 0) {
        keyboard_key_press(_jJ1);
        keyboard_key_release(_jJ1);
    }
}

function _gJ1() {
    window.famobi.log("tizenUnload");
    audio_stop_all();
}

function _kJ1() {
    var _MO = document.documentElement.clientWidth;
    var _zB = document.documentElement.clientHeight;
    debug('Tizen_ResizeCanvas: ' + _MO + ',' + _zB);
    window_set_rectangle(0, 0, _MO, _zB);
}

function _dJ1(_Bp) {
    var _lJ1 = _Bp["accelerationIncludingGravity"];
    var _mJ1 = 1.0 / 9.81;
    _WI1.x = _lJ1["x"] * _mJ1;
    _WI1.y = _lJ1["y"] * _mJ1;
    _WI1._96 = _lJ1["z"] * _mJ1;
}

function _cJ1() {
    if (_Pn.Options.FlurryId) {
        if (document.webkitHidden == true) {
            debug('pause flurry session');
            FlurryAgent._nJ1();
        } else if (document.webkitHidden == false) {
            debug('resume flurry session: ' + _Pn.Options.FlurryId);
            FlurryAgent.startSession(_Pn.Options.FlurryId);
        }
    }
}

function _oJ1() {
    tizen.systeminfo.getPropertyValue("DEVICE_ORIENTATION", _pJ1, null);
}

function _pJ1(_8I) {
    var _8I = _8I['status'];
    if (_TI1 != _8I) {
        var _qJ1 = Math.abs(_WI1._96);
        if (_qJ1 < 0.75 || _TI1 == -1) {
            _rJ1(_8I);
        }
    }
}

function _8J1(_Mg, _Qh, _mP) {
    debug("tizenUrlOpen:" + _Mg);
    var appControl = new tizen["ApplicationControl"]("http://tizen.org/appcontrol/operation/view", _Mg);
    tizen["application"]["launchAppControl"](appControl,
        null,
        function() {
            window.famobi.log("launch application control succeed");
        },
        function(e) {
            window.famobi.log("launch application control failed. reason: " + e.message);
        }, null);
}

function _rJ1(_sJ1) {
    debug("orientation changed: " + _sJ1);
    var _8I = _Pn.Options.RotateCanvas;
    if (_TI1 != -1) {
        if (_8I == 0 && (_sJ1 == "LANDSCAPE_PRIMARY" || _sJ1 == "LANDSCAPE_SECONDARY")) return 0;
        if (_8I == 1 && (_sJ1 == "PORTRAIT_PRIMARY" || _sJ1 == "PORTRAIT_SECONDARY")) return 0;
    }
    var _tJ1 = document.getElementById("gm4html5_div_id");
    var _MO = document.documentElement.clientWidth;
    var _zB = document.documentElement.clientHeight;
    var _uJ1 = false;
    var _o5 = _VI1;
    var _n5 = 0;
    switch (_sJ1) {
        case "PORTRAIT_PRIMARY":
            {
                _tJ1.style.webkitTransform = "rotate(0deg) translateX(0px) translateY(0px)";
                break;
            }
        case "PORTRAIT_SECONDARY":
            {
                if (_8I == 0 || _8I == 2) {
                    _o5 = 0;
                    _tJ1.style.webkitTransform = "rotate(180deg) translateY(-" + _zB + "px)";
                } else {
                    _tJ1.style.webkitTransform = "rotate(0deg) translateX(0px) translateY(0px)";
                }
                break;
            }
        case "LANDSCAPE_SECONDARY":
            {
                if (_8I == 2) {
                    _tJ1.style.webkitTransform = "rotate(-90deg) translateY(-" + _MO / 2 + "px) translateX(-" + (_zB - _MO / 2) + "px)";
                    _uJ1 = true;
                } else if (_8I == 1) {
                    _tJ1.style.webkitTransform = "rotate(180deg) translateX(0px) translateY(-" + _zB + "px)";
                    _o5 = 0;
                } else {
                    _tJ1.style.webkitTransform = "rotate(0deg) translateX(0px) translateY(0px)";
                }
                break;
            }
        case "LANDSCAPE_PRIMARY":
            {
                if (_8I == 2) {
                    _tJ1.style.webkitTransform = "rotate(90deg) translateX(" + _MO / 2 + "px) translateY(-" + _MO / 2 + "px)";
                    _uJ1 = true;
                    _n5 = _VI1;
                } else {
                    _tJ1.style.webkitTransform = "rotate(0deg) translateX(0px) translateY(0px)";
                }
                break;
            }
        default:
            debug("****** Unknown ori: " + _TI1);
            break
    }
    if (_uJ1) {
        _zB -= _VI1;
        debug("window_set_rectangle: " + _zB + "," + _MO);
        window_set_rectangle(0, 0, _zB, _MO);
    } else {
        _zB -= _VI1;
        debug("window_set_rectangle: " + _MO + "," + _zB);
        window_set_rectangle(0, 0, _MO, _zB);
    }
    _TI1 = _sJ1;
}

function _bJ1(_va, _za) {
    var _vJ1 = _va.pageX;
    var _wJ1 = _va.pageY;
    var _8I = _Pn.Options.RotateCanvas;
    var _MO = document.documentElement.clientWidth;
    var _zB = document.documentElement.clientHeight;
    _za.x = _vJ1;
    _za.y = _wJ1;
    switch (_TI1) {
        case "PORTRAIT_PRIMARY":
            break;
        case "PORTRAIT_SECONDARY":
            {
                if (_8I == 0 || _8I == 2) {
                    _za.x = _MO - _vJ1;
                    _za.y = _zB - _wJ1;
                }
                break;
            }
        case "LANDSCAPE_SECONDARY":
            {
                if (_8I == 2) {
                    _za.x = _zB - _wJ1;
                    _za.y = _vJ1;
                } else if (_8I == 1) {
                    _za.x = _MO - _vJ1;
                    _za.y = _zB - _wJ1;
                }
                break;
            }
        case "LANDSCAPE_PRIMARY":
            {
                if (_8I == 2) {
                    _za.x = _wJ1;
                    _za.y = _MO - _vJ1;
                }
                break;
            }
        default:
            debug("****** Unknown ori: " + _TI1);
            break
    }
}

function _7J1() {
    if (_TI1 == "PORTRAIT_PRIMARY" || _TI1 == "PORTRAIT_SECONDARY") {
        return 1;
    }
    return 0;
}

function _ZI1() {
    var index;
    for (index = 0; index < arguments.length; ++index) {
        window.famobi.log(arguments[index]);
    }
}

function _2J1() {
    return _WI1.x;
}

function _3J1() {
    return _WI1.y;
}

function _4J1() {
    return _WI1._96;
}
var _xJ1 = "Not Enabled";
var _yJ1 = "Not Available";
var _zJ1 = "Loading";
var _AJ1 = "Available";
var _BJ1 = "Processing Order";

function _CJ1() {
    this._DJ1 = _xJ1;
    this._EJ1 = false;
    this._FJ1 = "";
    this._GJ1 = 0;
    this._HJ1 = true;
    this._IJ1 = null;
    this._Yx = -1;
}
var _JJ1 = new _CJ1();
var _KJ1 = 128;

function _9J1() {
    _Ax = _LJ1;
    _Cx = _MJ1;
    _Dx = _NJ1;
    _Ex = _OJ1;
    _Fx = _PJ1;
    _Rc = _QJ1;
}

function _QJ1() {
    var _RJ1 = tizen.systeminfo.getCapabilities();
    var _SJ1 = _RJ1["duid"];
    return _SJ1.toString();
}

function _TJ1() {
    _Bx({
        type: _ox,
        status: _tx
    });
}

function _UJ1() {
    _Bx({
        type: _ox,
        status: _ux
    });
}
_CJ1.prototype._VJ1 = function(_Rw, _WJ1) {
    this._DJ1 = _Rw;
    if (_WJ1 != undefined) {
        debug("Tizen IAP State-> " + _Rw + " : " + _WJ1);
    } else {
        debug("Tizen IAP State-> " + _Rw);
    }
};
_CJ1.prototype._XJ1 = function() {
    return this._DJ1;
};
_CJ1.prototype._YJ1 = function(_ZJ1) {
    this._HJ1 = _Pn.Options.IAPSandbox;
    if (this._HJ1) {
        debug("Activating Tizen IAP in SANDBOX mode with groupID:" + _ZJ1);
    } else {
        debug("Activating Tizen IAP in COMMERCIAL mode with groupID:" + _ZJ1);
    }
    this._FJ1 = _ZJ1;
    this._VJ1(_zJ1);
    this.__J1();
};
var _0K1 = {
    onfailure: function() {
        window.famobi.log("AppControlReplyCB onfailure!");
        _JJ1._VJ1(_yJ1);
        _TJ1();
    },
    onsuccess: function(_1K1) {
        if (_1K1 != null) {
            var data = {};
            var i;
            var length = _1K1.length;
            for (i = 0; i < length; i++) {
                data[_1K1[i]._Fc] = _1K1[i].value + '';
            }
            var _2K1 = data["_result"];
            var _3K1 = _4K1(_2K1);
            var method = data["_method"];
            debug("IAP callback: method:" + method + " result:" + _2K1 + " " + _3K1);
            if (method == 'OnPurchaseItemInitialized') {
                _JJ1._5K1(data, _2K1);
            } else if (method == 'OnPurchaseItemFinished') {
                _JJ1._6K1(data, _2K1);
            } else if (method == 'OnItemInformationListReceived') {
                _JJ1._7K1(data, _2K1);
            } else if (method == 'OnPurchasedItemInformationListReceived') {
                _JJ1._8K1(data, _2K1);
            }
        }
    }
};

function _4K1(_9K1) {
    var _aK1 = parseInt(_9K1, 10);
    switch (_aK1) {
        case 0:
            return ('Success');
        case 100:
            return ('Request cancelled');
        case 200:
            return ('Network error occured');
        case 9000:
            return ('Process error occured');
        case 9200:
            return ('Service Unavailable');
        case 9201:
            return ('Item GroupId NotFound');
        case 9203:
            return ('PaymentId Not Found');
        case 9207:
            return ('ItemId Not Found');
    }
    return ('Unknown status code ' + _2K1);
}
_CJ1.prototype._bK1 = function(_Wn1,
    _cK1) {
    var _jc = new Object();
    _jc.id = _Wn1[_cK1 + '_itemId'];
    _jc.name = _Wn1[_cK1 + '_itemName'];
    _jc._dK1 = _Wn1[_cK1 + '_itemDownloadUrl'];
    _jc.description = _Wn1[_cK1 + '_itemDescription'];
    _jc._Kx = "";
    var _eK1 = _Wn1[_cK1 + '_itemPrice'];
    var _fK1 = _Wn1[_cK1 + '_currencyUnit'];
    var _gK1 = _Wn1[_cK1 + '_unitPrecedes'];
    var _hK1 = _Wn1[_cK1 + '_hasPenny'];
    var _iK1 = _eK1.split('.');
    _iK1 = _iK1[0] + '.' + _iK1[1].substr(0, 2);
    _jc._Jx = _iK1;
    return _jc;
};
_CJ1.prototype._jK1 = function(_kK1) {
    var _Nx = "{ \"productId\":\"" + _kK1.id + "\"" + ", \"title\":\"" + _kK1.name + "\"" + ", \"price\":\"" + _kK1._Jx + "\"" + ", \"description\":\"" + _kK1.description + "\"}";
    _Bx({
        type: _px,
        _Kc: _Nx
    });
};
_CJ1.prototype._lK1 = function(_mK1, _ss1, _nK1, _oK1) {
    var _pK1 = 0;
    var _qK1 = -3;
    var _Kx = (_oK1) ? _pK1 : _qK1;
    var _Nx = "{ \"productId\":\"" + _mK1 + "\"" + ", \"purchaseIndex\":" + _ss1 + ", \"purchaseState\":" + _Kx + ", \"response\":" + _nK1 + " }";
    _Bx({
        type: _qx,
        _Kc: _Nx
    });
};
var _rK1 = _CJ1._7K1;
_CJ1.prototype._7K1 = function(_Wn1, _rs1) {
    if (_rs1 == 0) {
        var _sK1 = parseInt(_Wn1["_startNumber"]);
        var _tK1 = parseInt(_Wn1["_endNumber"]);
        for (var i = _sK1; i <= _tK1; i++) {
            var _jc = this._bK1(_Wn1, i);
            _jc._Kx = "Available";
            this._jK1(_jc);
        }
        this._VJ1(_zJ1, "retrieving purchased items...");
        this._uK1();
    } else {
        this._VJ1(_yJ1, "failed to get buy item list");
        _TJ1();
    }
};
var _vK1 = _CJ1._8K1;
_CJ1.prototype._8K1 = function(_Wn1, _rs1) {
    if (_rs1 == 0) {
        var _sK1 = parseInt(_Wn1["_startNumber"]);
        var _tK1 = parseInt(_Wn1["_endNumber"]);
        for (var i = _sK1; i <= _tK1; i++) {
            var _jc = this._bK1(_Wn1, i);
            this._jK1(_jc);
            this._lK1(_jc.id, -1, 0, true);
        }
        this._VJ1(_AJ1, "got purchased item list");
        _UJ1();
        this._EJ1 = true;
    } else {
        this._VJ1(_AJ1, "failed to get purchased item list - user not signed in?");
        _UJ1();
        this._EJ1 = true;
    }
};
var _wK1 = _CJ1._5K1;
_CJ1.prototype._5K1 = function(_Wn1, _rs1) {
    var _xK1 = _Wn1['_transactionId'];
    if (_rs1 == 0) {
        var _yK1 = _Wn1['_itemId'];
        var _zK1 = [new tizen.ApplicationControlData('_transactionId', [_xK1]), new tizen.ApplicationControlData('_itemId', [_yK1]), new tizen.ApplicationControlData('_purchaseResume', ['1'])];
        this._AK1('http://tizen.org/appcontrol/operation/iap/purchase', 'tizeninapp.IapClient', _zK1, _0K1);
    } else {
        debug("IAP purchase was not successful");
        this._lK1(this._IJ1, _xK1, _rs1, false);
        this._IJ1 = null;
        this._VJ1(_AJ1);
    }
};
var _BK1 = _CJ1._6K1;
_CJ1.prototype._6K1 = function(_Wn1, _rs1) {
    var _CK1 = (_rs1 == 0);
    var _xK1 = _Wn1['_transactionId'];
    if (_CK1) {
        debug("IAP purchase was successful");
    } else {
        debug("IAP purchase failed with status:" + _4K1(_rs1));
    }
    this._lK1(this._IJ1, _xK1, _rs1, _CK1);
    this._VJ1(_AJ1, "purchase operation finished");
};
_CJ1.prototype._AK1 = function(_DK1, _Tt1, _EK1) {
    if (this._HJ1) {
        _EK1.push(new tizen.ApplicationControlData('_mcc', ['250']));
        _EK1.push(new tizen.ApplicationControlData('_mnc', ['01']));
        _EK1.push(new tizen.ApplicationControlData('_mode', ['1']));
    } else {
        _EK1.push(new tizen.ApplicationControlData('_mode', ['0']));
    }
    var _FK1 = new tizen.ApplicationControl(_DK1, null, null, null, _EK1);
    tizen.application.launchAppControl(_FK1, _Tt1, function() {}, function(e) {
        window.famobi.log("launch app control fail - Reason: " + e);
        if (_Tt1 == "tizeninapp.IapClient") {
            this._VJ1(_AJ1);
            this._lK1(this._IJ1, this._Yx, 9000, false);
        } else {
            this._VJ1(_yJ1);
            _TJ1();
        }
    }, _0K1);
};
_CJ1.prototype.__J1 = function() {
    var _GK1 = 1;
    var _HK1 = _KJ1;
    var _FJ1 = this._FJ1;
    this._GJ1 += 1;
    var _IK1 = this._GJ1;
    var _zK1 = [new tizen.ApplicationControlData('_transactionId', [_IK1]), new tizen.ApplicationControlData('_startNumber', [_GK1]), new tizen.ApplicationControlData('_endNumber', [_HK1]), new tizen.ApplicationControlData('_itemGroupId', [_FJ1])];
    this._AK1('http://tizen.org/appcontrol/operation/iap/get_item_list', 'tizeninapp.IapService', _zK1, _0K1);
};
_CJ1.prototype._uK1 = function() {
    var _GK1 = 1;
    var _HK1 = _KJ1;
    var _FJ1 = this._FJ1;
    this._GJ1 += 1;
    var _IK1 = this._GJ1;
    var _zK1 = [new tizen.ApplicationControlData('_transactionId', [_IK1]), new tizen.ApplicationControlData('_startNumber', [_GK1]), new tizen.ApplicationControlData('_endNumber', [_HK1]), new tizen.ApplicationControlData('_itemGroupId', [_FJ1])];
    this._AK1('http://tizen.org/appcontrol/operation/iap/get_purchased_item_list', 'tizeninapp.IapService', _zK1, _0K1);
};
_CJ1.prototype._JK1 = function(_my, _ss1) {
    this._IJ1 = _my;
    this._Yx = _ss1;
    var _KK1 = _my;
    var _FJ1 = this._FJ1;
    var _zK1 = [new tizen.ApplicationControlData('_itemId', [_KK1]), new tizen.ApplicationControlData('_itemGroupId', [_FJ1]), new tizen.ApplicationControlData('_transactionId', [_ss1]), ];
    this._VJ1(_BJ1);
    this._AK1('http://tizen.org/appcontrol/operation/iap/purchase', 'tizeninapp.IapClient', _zK1, _0K1);
};
_CJ1.prototype._LK1 = function() {
    if (this._EJ1) {
        return true;
    }
    debug("Store not ready - state is " + this._XJ1());
    return false;
};

function _LJ1(_ps1) {
    var _FJ1 = _Pn.Options.IAPGroupID;
    if (typeof(_FJ1) != "string" || _FJ1.length <= 0) {
        debug("Tizen Item Group ID not set");
    } else {
        _JJ1._YJ1(_FJ1);
    }
}

function _NJ1(_my, _ss1) {
    _JJ1._JK1(_my, _ss1);
}

function _OJ1(_ha) {
    debug("Tizen IAP does not support consumables");
    var _MK1 = 0;
    var _Nx = "{ \"productId\":\"" + _ha + "\"" + ", \"consumed\":\"false\"" + ", \"response\":" + _MK1 + " }";
    _Bx({
        type: _rx,
        _Kc: _Nx
    });
}

function _MJ1() {
    var _rs1 = 0;
    _Bx({
        type: _sx,
        _9e: _rs1
    });
}

function _PJ1(_ha) {
    var response = "{ \"response\":6 }";
    _Bx({
        type: _px,
        _Kc: response
    });
}
var _NK1 = 0;
var _OK1 = 1;
var _PK1 = 2;
var _QK1 = [];

function _RK1(_SK1, _y7, _TK1) {
    this._CK1 = _SK1;
    this.type = _y7;
    this.data = _TK1;
}

function _aJ1() {
    _1P = _UK1;
    _VK1 = _WK1;
    _XK1();
    _YK1();
    var _ZK1 = tizen.application.getCurrentApplication().getRequestedAppControl();
    if (_ZK1) {
        window.famobi.log("Requester AppID : " + _ZK1.callerAppId);
        var appControl = _ZK1.appControl;
        var __K1 = _0L1(appControl);
        if (__K1 != null) {
            _1L1(true, _OK1, __K1);
        }
    }
}

function _XK1() {
    debug("Register push service...");
    var _2L1 = new tizen.ApplicationControl("http://tizen.org/appcontrol/operation/push_notify");
    tizen.push.registerService(_2L1, _3L1, _4L1);
}
var _5L1 = _4L1;

function _4L1(response) {
    debug('Push registration error: ' + response['name']);
    debug('response.code= ' + response['code']);
    debug('response.message= ' + response['message']);
    _1L1(false, _NK1, response['name']);
}
var _6L1 = _3L1;

function _3L1(id) {
    debug("Push Registration succeeded with id: " + id);
    _1L1(true, _NK1, id);
    debug("Connect to push service...");
    tizen.push.connectService(_7L1, _8L1);
}
var _9L1 = _8L1;

function _8L1(response) {
    window.famobi.log('# # # # #Push error callback: ' + response['name']);
    _1L1(false, _OK1, response['name']);
}
var _aL1 = _7L1;

function _7L1(_bL1) {
    window.famobi.log("# # # # Push notification received");
    var message = _bL1['alertMessage'];
    var __K1 = _bL1['appData'];
    if (_6Q == false) {
        _cL1(message,
            __K1);
    } else {
        _1L1(true, _OK1, __K1);
    }
}

function _cL1(_zg, _Wn1) {
    window.famobi.log("PostNotification: " + _zg);
    try {
        var _dL1 = tizen.application.getAppInfo();
        var _eL1 = _dL1['id'].split(".");
        var _fL1 = "/opt/apps/" + _eL1[0] + "/res/wgt/icon.png";
        var _gL1 = {};
        _gL1['content'] = _zg;
        _gL1['iconPath'] = _fL1;
        _gL1['vibration'] = true;
        _gL1['appId'] = _dL1['id'];
        var _EK1 = new tizen.ApplicationControlData("http://tizen.org/appcontrol/data/push/appdata", [_Wn1]);
        var appControl = new tizen.ApplicationControl("http://tizen.org/appcontrol/operation/push_notify",
            null, null, null, [_EK1]);
        _gL1['appControl'] = appControl;
        var _hL1 = _eL1[1];
        var notification = new tizen.StatusNotification("SIMPLE", _hL1, _gL1);
        tizen.notification.post(notification);
    } catch (err) {
        window.famobi.log(err.name + ": " + err.message);
    }
}

function _UK1() {
    if (_QK1.length <= 0) return;
    window.famobi.log("tizenPushEventsDispatch: " + _QK1.length + " events");
    var map = ds_map_create();
    g_pBuiltIn.async_load = map;
    for (var i = 0; i < _QK1.length; ++i) {
        var _iL1 = _QK1[i];
        var _jL1 = "";
        switch (_iL1.type) {
            case 0:
                _jL1 = "register";
                break;
            case 1:
                _jL1 = "remote";
                break;
            case 2:
                _jL1 = "local";
                break;
        }
        ds_map_clear(map);
        if (!_iL1._CK1) {
            ds_map_add(map, "status", 0);
            ds_map_add(map, "type", _jL1);
            ds_map_add(map, "error", _iL1.data);
        } else if (_iL1.type == _NK1) {
            ds_map_add(map, "type", _jL1);
            ds_map_add(map, "status", 1);
            ds_map_add(map, "reg_id", _iL1.data);
        } else {
            ds_map_add(map, "type", _jL1);
            ds_map_add(map, "status", 1);
            ds_map_add(map, "data", _iL1.data);
        }
        _2q._3q(_kL1, 0);
    }
    ds_map_destroy(map);
    g_pBuiltIn.async_load = -1;
    _QK1.length = 0;
}

function _1L1(_SK1, _y7, _TK1) {
    _QK1.push(new _RK1(_SK1, _y7, _TK1));
}

function _0L1(appControl) {
    if (appControl['operation'] == "http://tizen.org/appcontrol/operation/push_notify") {
        var data = appControl['data'];
        for (var i = 0; i < data.length; i++) {
            if (data[i]['key'] == "http://tizen.org/appcontrol/data/push/appdata") {
                var __K1 = data[i].value[0];
                window.famobi.log("Got Notification payload:");
                return __K1;
            }
        }
    }
    return null;
}

function _YK1() {
    var _lL1 = tizen.notification.getAll();
    var index = 0;
    debug("***** Found " + _lL1.length + " notifications");
    for (index = 0; index < _lL1.length; index++) {
        window.famobi.log(_lL1[index]['id'] + ": title=" + _lL1[index]['title'] + " content=" + _lL1[index]['content']);
        var appControl = _lL1[index].appControl;
        var __K1 = _0L1(appControl);
        if (__K1 != null) {
            _1L1(true, _OK1, __K1);
            try {
                tizen.notification.remove(_lL1[index].id);
            } catch (err) {
                window.famobi.log(err.name + ": " + err.message);
            }
        }
    }
}

function _WK1() {
    if (!_6Q) {
        _6Q = true;
        _YK1();
    }
}(function() {
    'use strict';

    function __2(_g3) {
        throw _g3;
    }
    var _X2 = void 0,
        _d3 = this;

    function _Cb(_g3, _Cd) {
        var _Z4 = _g3.split("."),
            c = _d3;
        !(_Z4[0] in c) && c._mL1 && c._mL1("var " + _Z4[0]);
        for (var _dn; _Z4.length && (_dn = _Z4.shift());) !_Z4.length && _Cd !== _X2 ? c[_dn] = _Cd : c = c[_dn] ? c[_dn] : c[_dn] = {}
    };
    var _W1 = "undefined" !== typeof Uint8Array && "undefined" !== typeof Uint16Array && "undefined" !== typeof Uint32Array;

    function _X1(_g3) {
        var _Cd = _g3.length,
            _Z4 = 0,
            c = Number.POSITIVE_INFINITY,
            _dn, e, _Y4, h, _dt, _b3, _vt, _6d, _f3;
        for (_6d = 0; _6d < _Cd; ++_6d) _g3[_6d] > _Z4 && (_Z4 = _g3[_6d]), _g3[_6d] < c && (c = _g3[_6d]);
        _dn = 1 << _Z4;
        e = new(_W1 ? Uint32Array : Array)(_dn);
        _Y4 = 1;
        h = 0;
        for (_dt = 2; _Y4 <= _Z4;) {
            for (_6d = 0; _6d < _Cd; ++_6d)
                if (_g3[_6d] === _Y4) {
                    _b3 = 0;
                    _vt = h;
                    for (_f3 = 0; _f3 < _Y4; ++_f3) _b3 = _b3 << 1 | _vt & 1, _vt >>= 1;
                    for (_f3 = _b3; _f3 < _dn; _f3 += _dt) e[_f3] = _Y4 << 16 | _6d;
                    ++h
                }++_Y4;
            h <<= 1;
            _dt <<= 1
        }
        return [e, _Z4, c]
    };

    function w(_g3, _Cd) {
        this._Y4 = [];
        this.h = 32768;
        this._Cd = this._dn = this._Z4 = this._b3 = 0;
        this._pt = _W1 ? new Uint8Array(_g3) : _g3;
        this.__2 = !1;
        this.i = x;
        this._d3 = !1;
        if (_Cd || !(_Cd = {})) _Cd.index && (this._Z4 = _Cd.index), _Cd.__K && (this.h = _Cd.__K), _Cd._nL1 && (this.i = _Cd._nL1), _Cd._oL1 && (this._d3 = _Cd._oL1);
        switch (this.i) {
            case y:
                this._g3 = 32768;
                this.c = new(_W1 ? Uint8Array : Array)(32768 + this.h + 258);
                break;
            case x:
                this._g3 = 0;
                this.c = new(_W1 ? Uint8Array : Array)(this.h);
                this.e = this._96;
                this._X2 = this._X1;
                this._k3 = this.w;
                break;
            default:
                __2(_ja("invalid inflate mode"))
        }
    }
    var y = 0,
        x = 1,
        _96 = {
            _f3: y,
            _Cb: x
        };
    w.prototype._dt = function() {
        for (; !this.__2;) {
            var _g3 = _QQ(this, 3);
            _g3 & 1 && (this.__2 = !0);
            _g3 >>>= 1;
            switch (_g3) {
                case 0:
                    var _Cd = this._pt,
                        _Z4 = this._Z4,
                        c = this.c,
                        _dn = this._g3,
                        e = _X2,
                        _Y4 = _X2,
                        h = _X2,
                        _dt = c.length,
                        _b3 = _X2;
                    this._Cd = this._dn = 0;
                    e = _Cd[_Z4++];
                    e === _X2 && __2(_ja("invalid uncompressed block header: LEN (first byte)"));
                    _Y4 = e;
                    e = _Cd[_Z4++];
                    e === _X2 && __2(_ja("invalid uncompressed block header: LEN (second byte)"));
                    _Y4 |= e << 8;
                    e = _Cd[_Z4++];
                    e === _X2 && __2(_ja("invalid uncompressed block header: NLEN (first byte)"));
                    h = e;
                    e = _Cd[_Z4++];
                    e === _X2 && __2(_ja("invalid uncompressed block header: NLEN (second byte)"));
                    h |= e << 8;
                    _Y4 === ~h && __2(_ja("invalid uncompressed block header: length verify"));
                    _Z4 + _Y4 > _Cd.length && __2(_ja("input buffer is broken"));
                    switch (this.i) {
                        case y:
                            for (; _dn + _Y4 > c.length;) {
                                _b3 = _dt - _dn;
                                _Y4 -= _b3;
                                if (_W1) c.set(_Cd.subarray(_Z4, _Z4 + _b3), _dn), _dn += _b3, _Z4 += _b3;
                                else
                                    for (; _b3--;) c[_dn++] = _Cd[_Z4++];
                                this._g3 = _dn;
                                c = this.e();
                                _dn = this._g3
                            }
                            break;
                        case x:
                            for (; _dn + _Y4 > c.length;) c = this.e({
                                _6d: 2
                            });
                            break;
                        default:
                            __2(_ja("invalid inflate mode"))
                    }
                    if (_W1) c.set(_Cd.subarray(_Z4, _Z4 + _Y4), _dn), _dn += _Y4, _Z4 += _Y4;
                    else
                        for (; _Y4--;) c[_dn++] = _Cd[_Z4++];
                    this._Z4 = _Z4;
                    this._g3 = _dn;
                    this.c = c;
                    break;
                case 1:
                    this._k3(_0S, _US);
                    break;
                case 2:
                    _7c(this);
                    break;
                default:
                    __2(_ja("unknown BTYPE: " + _g3))
            }
        }
        return this._X2()
    };
    var _bV = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
        _211 = _W1 ? new Uint16Array(_bV) : _bV,
        _Z01 = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35,
            43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 258, 258
        ],
        __01 = _W1 ? new Uint16Array(_Z01) : _Z01,
        _pL1 = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0],
        _OT = _W1 ? new Uint8Array(_pL1) : _pL1,
        _qL1 = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577],
        _Xc1 = _W1 ? new Uint16Array(_qL1) : _qL1,
        _ki1 = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13],
        _eS = _W1 ? new Uint8Array(_ki1) : _ki1,
        _rL1 = new(_W1 ? Uint8Array : Array)(288),
        _sL1, _OZ;
    _sL1 = 0;
    for (_OZ = _rL1.length; _sL1 < _OZ; ++_sL1) _rL1[_sL1] = 143 >= _sL1 ? 8 : 255 >= _sL1 ? 9 : 279 >= _sL1 ? 7 : 8;
    var _0S = _X1(_rL1),
        _NZ = new(_W1 ? Uint8Array : Array)(30),
        _tL1, _uL1;
    _tL1 = 0;
    for (_uL1 = _NZ.length; _tL1 < _uL1; ++_tL1) _NZ[_tL1] = 5;
    var _US = _X1(_NZ);

    function _QQ(_g3, _Cd) {
        for (var _Z4 = _g3._dn, c = _g3._Cd, _dn = _g3._pt, e = _g3._Z4, _Y4; c < _Cd;) _Y4 = _dn[e++], _Y4 === _X2 && __2(_ja("input buffer is broken")), _Z4 |= _Y4 << c, c += 8;
        _Y4 = _Z4 & (1 << _Cd) - 1;
        _g3._dn = _Z4 >>> _Cd;
        _g3._Cd = c - _Cd;
        _g3._Z4 = e;
        return _Y4
    }

    function _RS(_g3, _Cd) {
        for (var _Z4 = _g3._dn, c = _g3._Cd, _dn = _g3._pt,
                e = _g3._Z4, _Y4 = _Cd[0], h = _Cd[1], _dt, _b3, _vt; c < h;) {
            _dt = _dn[e++];
            if (_dt === _X2) break;
            _Z4 |= _dt << c;
            c += 8
        }
        _b3 = _Y4[_Z4 & (1 << h) - 1];
        _vt = _b3 >>> 16;
        _g3._dn = _Z4 >> _vt;
        _g3._Cd = c - _vt;
        _g3._Z4 = e;
        return _b3 & 65535
    }

    function _7c(_g3) {
        function _Cd(_Z4, _g3, c) {
            var _Cd, e, _dn, _Y4;
            for (_Y4 = 0; _Y4 < _Z4;) switch (_Cd = _RS(this, _g3), _Cd) {
                case 16:
                    for (_dn = 3 + _QQ(this, 2); _dn--;) c[_Y4++] = e;
                    break;
                case 17:
                    for (_dn = 3 + _QQ(this, 3); _dn--;) c[_Y4++] = 0;
                    e = 0;
                    break;
                case 18:
                    for (_dn = 11 + _QQ(this, 7); _dn--;) c[_Y4++] = 0;
                    e = 0;
                    break;
                default:
                    e = c[_Y4++] = _Cd
            }
            return c
        }
        var _Z4 = _QQ(_g3,
                5) + 257,
            c = _QQ(_g3, 5) + 1,
            _dn = _QQ(_g3, 4) + 4,
            e = new(_W1 ? Uint8Array : Array)(_211.length),
            _Y4, h, _dt, _b3;
        for (_b3 = 0; _b3 < _dn; ++_b3) e[_211[_b3]] = _QQ(_g3, 3);
        _Y4 = _X1(e);
        h = new(_W1 ? Uint8Array : Array)(_Z4);
        _dt = new(_W1 ? Uint8Array : Array)(c);
        _g3._k3(_X1(_Cd.call(_g3, _Z4, _Y4, h)), _X1(_Cd.call(_g3, c, _Y4, _dt)))
    }
    w.prototype._k3 = function(_g3, _Cd) {
        var _Z4 = this.c,
            c = this._g3;
        this._Xo = _g3;
        for (var _dn = _Z4.length - 258, e, _Y4, h, _dt; 256 !== (e = _RS(this, _g3));)
            if (256 > e) c >= _dn && (this._g3 = c, _Z4 = this.e(), c = this._g3), _Z4[c++] = e;
            else {
                _Y4 = e - 257;
                _dt = __01[_Y4];
                0 < _OT[_Y4] && (_dt += _QQ(this, _OT[_Y4]));
                e = _RS(this, _Cd);
                h = _Xc1[e];
                0 < _eS[e] && (h += _QQ(this, _eS[e]));
                c >= _dn && (this._g3 = c, _Z4 = this.e(), c = this._g3);
                for (; _dt--;) _Z4[c] = _Z4[c++ - h]
            }
        for (; 8 <= this._Cd;) this._Cd -= 8, this._Z4--;
        this._g3 = c
    };
    w.prototype.w = function(_g3, _Cd) {
        var _Z4 = this.c,
            c = this._g3;
        this._Xo = _g3;
        for (var _dn = _Z4.length, e, _Y4, h, _dt; 256 !== (e = _RS(this, _g3));)
            if (256 > e) c >= _dn && (_Z4 = this.e(), _dn = _Z4.length), _Z4[c++] = e;
            else {
                _Y4 = e - 257;
                _dt = __01[_Y4];
                0 < _OT[_Y4] && (_dt += _QQ(this, _OT[_Y4]));
                e = _RS(this,
                    _Cd);
                h = _Xc1[e];
                0 < _eS[e] && (h += _QQ(this, _eS[e]));
                c + _dt > _dn && (_Z4 = this.e(), _dn = _Z4.length);
                for (; _dt--;) _Z4[c] = _Z4[c++ - h]
            }
        for (; 8 <= this._Cd;) this._Cd -= 8, this._Z4--;
        this._g3 = c
    };
    w.prototype.e = function() {
        var _g3 = new(_W1 ? Uint8Array : Array)(this._g3 - 32768),
            _Cd = this._g3 - 32768,
            _Z4, c, _dn = this.c;
        if (_W1) _g3.set(_dn.subarray(32768, _g3.length));
        else {
            _Z4 = 0;
            for (c = _g3.length; _Z4 < c; ++_Z4) _g3[_Z4] = _dn[_Z4 + 32768]
        }
        this._Y4.push(_g3);
        this._b3 += _g3.length;
        if (_W1) _dn.set(_dn.subarray(_Cd, _Cd + 32768));
        else
            for (_Z4 = 0; 32768 > _Z4;
                ++_Z4) _dn[_Z4] = _dn[_Cd + _Z4];
        this._g3 = 32768;
        return _dn
    };
    w.prototype._96 = function(_g3) {
        var _Cd, _Z4 = this._pt.length / this._Z4 + 1 | 0,
            c, _dn, e, _Y4 = this._pt,
            h = this.c;
        _g3 && ("number" === typeof _g3._6d && (_Z4 = _g3._6d), "number" === typeof _g3._W1 && (_Z4 += _g3._W1));
        2 > _Z4 ? (c = (_Y4.length - this._Z4) / this._Xo[2], e = 258 * (c / 2) | 0, _dn = e < h.length ? h.length + e : h.length << 1) : _dn = h.length * _Z4;
        _W1 ? (_Cd = new Uint8Array(_dn), _Cd.set(h)) : _Cd = h;
        return this.c = _Cd
    };
    w.prototype._X2 = function() {
        var _g3 = 0,
            _Cd = this.c,
            _Z4 = this._Y4,
            c, _dn = new(_W1 ? Uint8Array : Array)(this._b3 + (this._g3 - 32768)),
            e, _Y4, h, _dt;
        if (0 === _Z4.length) return _W1 ? this.c.subarray(32768, this._g3) : this.c.slice(32768, this._g3);
        e = 0;
        for (_Y4 = _Z4.length; e < _Y4; ++e) {
            c = _Z4[e];
            h = 0;
            for (_dt = c.length; h < _dt; ++h) _dn[_g3++] = c[h]
        }
        e = 32768;
        for (_Y4 = this._g3; e < _Y4; ++e) _dn[_g3++] = _Cd[e];
        this._Y4 = [];
        return this.buffer = _dn
    };
    w.prototype._X1 = function() {
        var _g3, _Cd = this._g3;
        _W1 ? this._d3 ? (_g3 = new Uint8Array(_Cd), _g3.set(this.c.subarray(0, _Cd))) : _g3 = this.c.subarray(0, _Cd) : (this.c.length > _Cd && (this.c.length = _Cd), _g3 = this.c);
        return this.buffer = _g3
    };

    function _vL1(_g3,
        _Cd) {
        var _Z4, c;
        this._pt = _g3;
        this._Z4 = 0;
        if (_Cd || !(_Cd = {})) _Cd.index && (this._Z4 = _Cd.index), _Cd._wL1 && (this._QQ = _Cd._wL1);
        _Z4 = _g3[this._Z4++];
        c = _g3[this._Z4++];
        switch (_Z4 & 15) {
            case _xL1:
                this.method = _xL1;
                break;
            default:
                __2(_ja("unsupported compression method"))
        }
        0 !== ((_Z4 << 8) + c) % 31 && __2(_ja("invalid fcheck flag:" + ((_Z4 << 8) + c) % 31));
        c & 32 && __2(_ja("fdict flag is not supported"));
        this._vt = new w(_g3, {
            index: this._Z4,
            __K: _Cd.__K,
            _nL1: _Cd._nL1,
            _oL1: _Cd._oL1
        })
    }
    _vL1.prototype._dt = function() {
        var _g3 = this._pt,
            _Cd, _Z4;
        _Cd = this._vt._dt();
        this._Z4 = this._vt._Z4;
        if (this._QQ) {
            _Z4 = (_g3[this._Z4++] << 24 | _g3[this._Z4++] << 16 | _g3[this._Z4++] << 8 | _g3[this._Z4++]) >>> 0;
            var c = _Cd;
            if ("string" === typeof c) {
                var _dn = c.split(""),
                    e, _Y4;
                e = 0;
                for (_Y4 = _dn.length; e < _Y4; e++) _dn[e] = (_dn[e].charCodeAt(0) & 255) >>> 0;
                c = _dn
            }
            for (var h = 1, _dt = 0, _b3 = c.length, _vt, _6d = 0; 0 < _b3;) {
                _vt = 1024 < _b3 ? 1024 : _b3;
                _b3 -= _vt;
                do h += c[_6d++], _dt += h; while (--_vt);
                h %= 65521;
                _dt %= 65521
            }
            _Z4 !== (_dt << 16 | h) >>> 0 && __2(_ja("invalid adler-32 checksum"))
        }
        return _Cd
    };
    var _xL1 = 8;
    _Cb("Zlib.Inflate",
        _vL1);
    _Cb("Zlib.Inflate.prototype.decompress", _vL1.prototype._dt);
    var _yL1 = {
            _zL1: _96._Cb,
            _AL1: _96._f3
        },
        _Hl, _Il, _Jl, $;
    if (Object._BL1) _Hl = Object._BL1(_yL1);
    else
        for (_Il in _Hl = [], _Jl = 0, _yL1) _Hl[_Jl++] = _Il;
    _Jl = 0;
    for ($ = _Hl.length; _Jl < $; ++_Jl) _Il = _Hl[_Jl], _Cb("Zlib.Inflate.BufferType." + _Il, _yL1[_Il]);
}).call(this);
var _CL1 = false,
    _nC = -1,
    _oC = -1,
    _DL1 = 0,
    _EL1 = 1,
    _FL1 = 2,
    _GL1 = 3,
    _HL1 = 4,
    _IL1 = 5,
    _JL1 = 6,
    _KL1 = 7,
    _LL1 = 8,
    _ML1 = 9,
    _NL1 = 10,
    _OL1 = 11,
    _PL1 = [0, 0, 0],
    _QL1 = [0, 0, 0],
    _RL1 = [0, 0, 0, 0, 0, 0],
    _SL1 = [0, 0, 0],
    _TL1 = [0, 0, 0],
    _UL1 = [0,
        0, 0
    ],
    _VL1 = [0, 0, 0],
    _WL1 = [0, 0, 0],
    _XL1 = [0, 0, 0],
    _YL1 = [0, 0, 0],
    _ZL1 = 0,
    __L1 = 0;

function _0M1() {
    if ((_81._91() <= 30) || (_1M1 <= 30)) {
        return 1.0;
    }
    if ((_81._91() / _1M1) < 1.2) {
        return 30.0 / _81._91();
    } else {
        return 30.0 / _1M1;
    }
}

function _2M1() {
    if (!_ZB(_nC)) {
        _nC = _9f();
        _bf(_nC, 100000);
    }
    if (!_ZB(_oC)) {
        _oC = _9f();
        _bf(_oC, -100000);
    }
    if (!_CL1) {
        _3M1();
    }
}

function _3M1() {
    var i;
    _CL1 = true;
    for (i = 0; i <= 5; i++) {
        _RL1[i] = _mf();
    }
    for (i = 0; i <= 2; i++) {
        _SL1[i] = _mf();
        _PL1[i] = _mf();
        _TL1[i] = _mf();
        _QL1[i] = _mf();
        _UL1[i] = _mf();
        _VL1[i] = _mf();
        _WL1[i] = _mf();
        _XL1[i] = _mf();
        _YL1[i] = _mf();
    }
    _ZL1 = _mf();
    __L1 = _mf();
}

function _4M1(_5M1, _h2, _i2, _l7, _e7) {
    var _dn = _0M1();
    if (_l7 === 0) {
        _of(_RL1[0], _6M1);
        _pf(_RL1[0], 0.1, 0.1, 0.05 * _dn, 0);
        _jC(_RL1[0], 0, 360, 0, 0, false);
        _Kf(_RL1[0], 0, 360, 0, 0);
        _Jf(_RL1[0], 2 * _dn, 2 * _dn, -0.1 * _dn, 0);
        _yf(_RL1[0], 0.6, 0);
        _Df(_RL1[0], _vb(10.0 / _dn), _vb(15.0 / _dn));
        _6C(_5M1, _h2, _i2, _RL1[0], _e7, 20);
        _of(_RL1[1], _6M1);
        _pf(_RL1[1], 0.1, 0.1, 0.1 * _dn, 0);
        _jC(_RL1[1], 0, 360, 0, 0, false);
        _yf(_RL1[1], 0.8, 0);
        _Df(_RL1[1], _vb(15 / _dn), _vb(15 / _dn));
        _6C(_5M1, _h2, _i2, _RL1[1], c_black, 1);
    } else if (_l7 == 2) {
        _of(_RL1[4], _6M1);
        _pf(_RL1[4], 0.4, 0.4, 0.2 * _dn, 0);
        _jC(_RL1[4], 0, 360, 0, 0, false);
        _Kf(_RL1[4], 0, 360, 0, 0);
        _Jf(_RL1[4], 7 * _dn, 7 * _dn, -0.2 * _dn, 0);
        _yf(_RL1[4], 0.6, 0);
        _Df(_RL1[4], _vb(15 / _dn), _vb(20 / _dn));
        _6C(_5M1, _h2, _i2, _RL1[4], _e7, 20);
        _of(_RL1[5], _6M1);
        _pf(_RL1[5], 0.4, 0.4, 0.4 * _dn, 0);
        _jC(_RL1[5], 0, 360, 0, 0, false);
        _yf(_RL1[5], 0.8, 0);
        _Df(_RL1[5], _vb(20 / _dn), _vb(20 / _dn));
        _6C(_5M1, _h2, _i2, _RL1[5], c_black, 1);
    } else {
        _of(_RL1[2], _6M1);
        _pf(_RL1[2], 0.3, 0.3, 0.1 * _dn, 0);
        _jC(_RL1[2], 0, 360, 0, 0, false);
        _Kf(_RL1[2],
            0, 360, 0, 0);
        _Jf(_RL1[2], 4 * _dn, 4 * _dn, -0.18 * _dn, 0);
        _yf(_RL1[2], 0.6, 0);
        _Df(_RL1[2], _vb(12 / _dn), _vb(17 / _dn));
        _6C(_5M1, _h2, _i2, _RL1[2], _e7, 20);
        _of(_RL1[3], _6M1);
        _pf(_RL1[3], 0.3, 0.3, 0.2 * _dn, 0);
        _jC(_RL1[3], 0, 360, 0, 0, false);
        _yf(_RL1[3], 0.8, 0);
        _Df(_RL1[3], _vb(17 / _dn), _vb(17 / _dn));
        _6C(_5M1, _h2, _i2, _RL1[3], c_black, 1);
    }
}

function _7M1(_5M1, _h2, _i2, _l7, _e7) {
    var _dn = _0M1();
    if (_l7 === 0) {
        _of(_SL1[0], _8M1);
        _yf(_SL1[0], 1, 0);
        _pf(_SL1[0], 0.0, 0.0, 0.15 * _dn, 0.0);
        _Df(_SL1[0], _vb(10.0 / _dn), _vb(12.0 / _dn));
        _6C(_5M1, _h2, _i2, _SL1[0],
            _e7, 1);
    } else if (_l7 == 2) {
        _of(_SL1[2], _8M1);
        _yf(_SL1[2], 1, 0);
        _pf(_SL1[2], 0, 0, 0.4 * _dn, 0);
        _Df(_SL1[2], _vb(18.0 / _dn), _vb(20.0 / _dn));
        _6C(_5M1, _h2, _i2, _SL1[2], _e7, 1);
    } else {
        _of(_SL1[1], _8M1);
        _yf(_SL1[1], 1, 0);
        _pf(_SL1[1], 0, 0, 0.25 * _dn, 0);
        _Df(_SL1[1], _vb(13.0 / _dn), _vb(15.0 / _dn));
        _6C(_5M1, _h2, _i2, _SL1[1], _e7, 1);
    }
}

function _9M1(_5M1, _h2, _i2, _l7, _e7) {
    var _dn = _0M1();
    if (_l7 === 0) {
        _of(_PL1[0], _8M1);
        _yf(_PL1[0], 1, 0);
        _pf(_PL1[0], 0, 0, 0.2 * _dn, 0);
        _bC(_PL1[0], 1, 0.5);
        _Df(_PL1[0], _vb(10.0 / _dn), _vb(12.0 / _dn));
        _6C(_5M1, _h2, _i2,
            _PL1[0], _e7, 1);
    } else if (_l7 == 2) {
        _of(_PL1[2], _8M1);
        _yf(_PL1[2], 1, 0);
        _pf(_PL1[2], 0, 0, 0.6 * _dn, 0);
        _bC(_PL1[2], 1, 0.5);
        _Df(_PL1[2], _vb(18.0 / _dn), _vb(20.0 / _dn));
        _6C(_5M1, _h2, _i2, _PL1[2], _e7, 1);
    } else {
        _of(_PL1[1], _8M1);
        _yf(_PL1[1], 1, 0);
        _pf(_PL1[1], 0, 0, 0.35 * _dn, 0);
        _bC(_PL1[1], 1, 0.5);
        _Df(_PL1[1], _vb(13.0 / _dn), _vb(15.0 / _dn));
        _6C(_5M1, _h2, _i2, _PL1[1], _e7, 1);
    }
}

function _aM1(_5M1, _h2, _i2, _l7, _e7) {
    var _dn = _0M1();
    if (_l7 === 0) {
        _of(_TL1[1], _bM1);
        _pf(_TL1[1], 0.1, 0.2, 0, 0);
        _Jf(_TL1[1], 0.5 * _dn, 3.0 * _dn, 0.0, 0.0);
        _Kf(_TL1[1],
            0, 360, 0, 0);
        _yf(_TL1[1], 1, 0.4);
        _Df(_TL1[1], _vb(15.0 / _dn), _vb(25.0 / _dn));
        _Nf(_TL1[1], 0.10 * _dn, 270);
        _6C(_5M1, _h2, _i2, _TL1[1], _e7, 75);
    } else if (_l7 == 2) {
        _of(_TL1[1], _bM1);
        _pf(_TL1[1], 0.1, 0.2, 0, 0);
        _Jf(_TL1[1], 0.5 * _dn, 8.0 * _dn, 0.0, 0.0);
        _Kf(_TL1[1], 0, 360, 0, 0);
        _yf(_TL1[1], 1, 0.4);
        _Df(_TL1[1], _vb(30.0 / _dn), _vb(40.0 / _dn));
        _Nf(_TL1[1], 0.17 * _dn, 270);
        _6C(_5M1, _h2, _i2, _TL1[1], _e7, 250);
    } else {
        _of(_TL1[1], _bM1);
        _pf(_TL1[1], 0.1, 0.2, 0, 0);
        _Jf(_TL1[1], 0.5 * _dn, 6.0 * _dn, 0.0, 0.0);
        _Kf(_TL1[1], 0, 360, 0, 0);
        _yf(_TL1[1], 1, 0.4);
        _Df(_TL1[1],
            _vb(20.0 / _dn), _vb(30.0 / _dn));
        _Nf(_TL1[1], 0.15 * _dn, 270);
        _6C(_5M1, _h2, _i2, _TL1[1], _e7, 150);
    }
}

function _cM1(_5M1, _h2, _i2, _l7, _e7) {
    var i;
    var _dn = _0M1();
    if (_l7 === 0) {
        _of(_QL1[0], _6M1);
        _pf(_QL1[0], 0.2, 0.4, -0.01 * _dn, 0);
        _yf(_QL1[0], 0.4, 0);
        _Df(_QL1[0], _vb(25.0 / _dn), _vb(25.0 / _dn));
        for (i = 0; i <= 5; i++) {
            _6C(_5M1, _h2 - 5 + _Dd(10), _i2 - 5 + _Dd(10), _QL1[0], _e7, 1);
        }
    } else if (_l7 === 2) {
        _of(_QL1[2], _6M1);
        _pf(_QL1[2], 0.4, 1, -0.01 * _dn, 0);
        _yf(_QL1[2], 0.4, 0);
        _Df(_QL1[2], _vb(50.0 / _dn), _vb(50.0 / _dn));
        for (i = 0; i <= 15; i++) {
            _6C(_5M1, _h2 - 30 + _Dd(60),
                _i2 - 30 + _Dd(60), _QL1[2], _e7, 1);
        }
    } else {
        _of(_QL1[1], _6M1);
        _pf(_QL1[1], 0.4, 0.7, -0.01 * _dn, 0);
        _yf(_QL1[1], 0.4, 0);
        _Df(_QL1[1], _vb(30.0 / _dn), _vb(30.0 / _dn));
        for (i = 0; i <= 10; i++) {
            _6C(_5M1, _h2 - 15 + _Dd(30), _i2 - 15 + _Dd(30), _QL1[1], _e7, 1);
        }
    }
}

function _dM1(_5M1, _h2, _i2, _l7, _e7) {
    var i;
    var _dn = _0M1();
    if (_l7 === 0) {
        _of(_UL1[0], _6M1);
        _pf(_UL1[0], 0.2, 0.4, -0.01 * _dn, 0);
        _yf(_UL1[0], 0.4, 0);
        _Jf(_UL1[0], 3.0 * _dn, 4.0 * _dn, 0, 0);
        _Kf(_UL1[0], 90, 90, 0, 0);
        _Df(_UL1[0], _vb(25.0 / _dn), _vb(25.0 / _dn));
        for (i = 0; i <= 5; i++) {
            _6C(_5M1, _h2 - 5 + _Dd(10), _i2 - 5 + _Dd(10),
                _UL1[0], _e7, 1);
        }
    } else if (_l7 === 2) {
        _of(_UL1[2], _6M1);
        _pf(_UL1[2], 0.4, 1, -0.01 * _dn, 0);
        _yf(_UL1[2], 0.4, 0);
        _Jf(_UL1[2], 6.0 * _dn, 7.0 * _dn, 0, 0);
        _Kf(_UL1[2], 90, 90, 0, 0);
        _Df(_UL1[2], _vb(50.0 / _dn), _vb(50.0 / _dn));
        for (i = 0; i <= 15; i++) {
            _6C(_5M1, _h2 - 30 + _Dd(60), _i2 - 30 + _Dd(60), _UL1[2], _e7, 1);
        }
    } else {
        _of(_UL1[1], _6M1);
        _pf(_UL1[1], 0.4, 0.7, -0.01 * _dn, 0);
        _yf(_UL1[1], 0.4, 0);
        _Jf(_UL1[1], 5.0 * _dn, 6.0 * _dn, 0, 0);
        _Kf(_UL1[1], 90, 90, 0, 0);
        _Df(_UL1[1], _vb(30.0 / _dn), _vb(30.0 / _dn));
        for (i = 0; i <= 10; i++) {
            _6C(_5M1, _h2 - 15 + _Dd(30), _i2 - 15 + _Dd(30),
                _UL1[1], _e7, 1);
        }
    }
}

function _eM1(_5M1, _h2, _i2, _l7, _e7) {
    var _dn = _0M1();
    if (_l7 === 0) {
        _of(_VL1[0], _fM1);
        _pf(_VL1[0], 0.4, 0.3, -0.02 * _dn, 0);
        _jC(_VL1[0], 0, 360, 0, 0, false);
        _Df(_VL1[0], _vb(20 / _dn), _vb(20 / _dn));
        _6C(_5M1, _h2, _i2, _VL1[0], _e7, 1);
    } else if (_l7 === 2) {
        _of(_VL1[2], _fM1);
        _pf(_VL1[2], 1.2, 1.2, -0.04 * _dn, 0);
        _jC(_VL1[2], 0, 360, 0, 0, false);
        _Df(_VL1[2], _vb(30 / _dn), _vb(30 / _dn));
        _6C(_5M1, _h2, _i2, _VL1[2], _e7, 1);
    } else {
        _of(_VL1[1], _fM1);
        _pf(_VL1[1], 0.75, 0.75, -0.03 * _dn, 0);
        _jC(_VL1[1], 0, 360, 0, 0, false);
        _Df(_VL1[1], _vb(25 / _dn),
            _vb(25 / _dn));
        _6C(_5M1, _h2, _i2, _VL1[1], _e7, 1);
    }
}

function _gM1(_5M1, _h2, _i2, _l7, _e7) {
    var _dn = _0M1();
    if (_l7 === 0) {
        _of(_WL1[0], _hM1);
        _pf(_WL1[0], 0.4, 0.4, -0.02 * _dn, 0);
        _jC(_WL1[0], 0, 360, 0, 0, false);
        _Df(_WL1[0], _vb(20 / _dn), _vb(20 / _dn));
        _6C(_5M1, _h2, _i2, _WL1[0], _e7, 1);
    } else if (_l7 === 2) {
        _of(_WL1[2], _hM1);
        _pf(_WL1[2], 1.2, 1.2, -0.04 * _dn, 0);
        _jC(_WL1[2], 0, 360, 0, 0, false);
        _Df(_WL1[2], _vb(30 / _dn), _vb(30 / _dn));
        _6C(_5M1, _h2, _i2, _WL1[2], _e7, 1);
    } else {
        _of(_WL1[1], _hM1);
        _pf(_WL1[1], 0.75, 0.75, -0.03 * _dn, 0);
        _jC(_WL1[1], 0, 360,
            0, 0, false);
        _Df(_WL1[1], _vb(25 / _dn), _vb(25 / _dn));
        _6C(_5M1, _h2, _i2, _WL1[1], _e7, 1);
    }
}

function _iM1(_5M1, _h2, _i2, _l7, _e7) {
    var _dn = _0M1();
    if (_l7 === 0) {
        _of(_XL1[0], _bM1);
        _pf(_XL1[0], 0.4, 0.4, -0.02 * _dn, 0);
        _jC(_XL1[0], 0, 360, 0, 0, false);
        _Df(_XL1[0], _vb(20 / _dn), _vb(20 / _dn));
        _6C(_5M1, _h2, _i2, _XL1[0], _e7, 1);
    } else if (_l7 === 2) {
        _of(_XL1[2], _bM1);
        _pf(_XL1[2], 1.2, 1.2, -0.04 * _dn, 0);
        _jC(_XL1[2], 0, 360, 0, 0, false);
        _Df(_XL1[2], _vb(30 / _dn), _vb(30 / _dn));
        _6C(_5M1, _h2, _i2, _XL1[2], _e7, 1);
    } else {
        _of(_XL1[1], _bM1);
        _pf(_XL1[1], 0.75, 0.75, -0.03 * _dn, 0);
        _jC(_XL1[1], 0, 360, 0, 0, false);
        _Df(_XL1[1], _vb(25 / _dn), _vb(25 / _dn));
        _6C(_5M1, _h2, _i2, _XL1[1], _e7, 1);
    }
}

function _jM1(_5M1, _h2, _i2, _l7, _e7) {
    var _dn = _0M1();
    if (_l7 === 0) {
        _of(_YL1[0], _6M1);
        _pf(_YL1[0], 2, 2, 0, 0);
        _bC(_YL1[0], 1, 0.5);
        _iC(_YL1[0], 0, 0.3, 0);
        _Df(_YL1[0], _vb(100.0 / _dn), _vb(100.0 / _dn));
        _6C(_5M1, _h2, _i2, _YL1[0], _e7, 1);
    } else if (_l7 === 2) {
        _of(_YL1[2], _6M1);
        _pf(_YL1[2], 8, 8, 0, 0);
        _bC(_YL1[2], 1, 0.5);
        _iC(_YL1[2], 0, 0.3, 0);
        _Df(_YL1[2], _vb(100.0 / _dn), _vb(100.0 / _dn));
        _6C(_5M1, _h2, _i2, _YL1[02], _e7, 1);
    } else {
        _of(_YL1[1], _6M1);
        _pf(_YL1[1], 4, 4, 0, 0);
        _bC(_YL1[1], 1, 0.5);
        _iC(_YL1[1], 0, 0.3, 0);
        _Df(_YL1[1], _vb(100.0 / _dn), _vb(100.0 / _dn));
        _6C(_5M1, _h2, _i2, _YL1[1], _e7, 1);
    }
}

function _kM1(_5M1, _h2, _i2, _l7, _e7) {
    var i;
    var _dn = _0M1();
    _of(_ZL1, _lM1);
    _pf(_ZL1, 0.2, 0.3, 0.0, 0.0);
    _jC(_ZL1, 0, 0, 0, 0, true);
    _Jf(_ZL1, 7 * _dn, 7 * _dn, 0, 0);
    _Kf(_ZL1, 260, 260, 0, 0);
    _hC(_ZL1, 0.4);
    _Df(_ZL1, _vb(0.2 * _81._nB() / _dn), _vb(0.2 * _81._nB() / _dn));
    if (_l7 === 0) {
        for (i = 0; i <= 1; i++) {
            _6C(_5M1, _Dd(1) * 1.2 * _81._mB(), -30.0 + _Dd(20), _ZL1, _e7, 1);
        }
    } else if (_l7 == 2) {
        for (i = 0; i <= 8; i++) {
            _6C(_5M1, _Dd(1) * 1.2 * _81._mB(), -30.0 + _Dd(20), _ZL1, _e7, 1);
        }
    } else {
        for (i = 0; i <= 4; i++) {
            _6C(_5M1, _Dd(1) * 1.2 * _81._mB(), -30.0 + _Dd(20), _ZL1, _e7, 1);
        }
    }
}

function _mM1(_5M1, _h2, _i2, _l7, _e7) {
    var i;
    var _dn = _0M1();
    _of(__L1, _nM1);
    _pf(__L1, 0.1, 0.25, 0.0, 0.0);
    _hC(__L1, 0.6);
    _jC(__L1, 0, 360, 0, 0, false);
    _Jf(__L1, 2.5 * _dn, 3.0 * _dn, 0.0, 0.0);
    _Kf(__L1, 240, 300, 0, 20);
    _Df(__L1, _vb(0.5 * _81._nB() / _dn), _vb(0.5 * _81._nB() / _dn));
    if (_l7 === 0) {
        for (i = 0; i <= 0; i++) {
            _6C(_5M1, _Dd(1) * 1.2 * _81._mB() - 60, -30.0 + _Dd(20), __L1, _e7, 1);
        }
    } else if (_l7 === 2) {
        for (i = 0; i <= 6; i++) {
            _6C(_5M1, _Dd(1) * 1.2 * _81._mB() - 60, -30.0 + _Dd(20), __L1, _e7, 1);
        }
    } else {
        for (i = 0; i <= 2; i++) {
            _6C(_5M1, _Dd(1) * 1.2 * _81._mB() - 60, -30.0 + _Dd(20), __L1, _e7, 1);
        }
    }
}

function _yg(_xg, _Q6, _h2, _i2, _l7, _e7) {
    var _UU;
    _2M1();
    if (_xg) {
        _UU = _nC;
    } else {
        _UU = _oC;
    }
    switch (_Q6) {
        case _DL1:
            _4M1(_UU, _h2, _i2, _l7, _e7);
            break;
        case _EL1:
            _7M1(_UU, _h2, _i2, _l7, _e7);
            break;
        case _FL1:
            _9M1(_UU, _h2, _i2, _l7, _e7);
            break;
        case _GL1:
            _aM1(_UU, _h2, _i2, _l7, _e7);
            break;
        case _HL1:
            _cM1(_UU, _h2, _i2, _l7, _e7);
            break;
        case _IL1:
            _dM1(_UU, _h2, _i2, _l7, _e7);
            break;
        case _JL1:
            _eM1(_UU, _h2, _i2, _l7, _e7);
            break;
        case _KL1:
            _gM1(_UU, _h2, _i2, _l7, _e7);
            break;
        case _LL1:
            _iM1(_UU, _h2, _i2, _l7, _e7);
            break;
        case _ML1:
            _jM1(_UU, _h2, _i2, _l7, _e7);
            break;
        case _NL1:
            _kM1(_UU, _h2, _i2, _l7, _e7);
            break;
        case _OL1:
            _mM1(_UU, _h2, _i2, _l7, _e7);
            break;
    }
}
var _oM1 = false,
    _4Q = false,
    _pM1 = true;

function _Gt1(_9D) {
    if (_9D) {
        _oM1 = true;
    } else {
        _4Q = false;
        _oM1 = false;
        if (_pM1) {
            _kt1 = false;
        }
    }
}

function _qM1() {
    if (window["page"] === undefined) {
        _pM1 = false;
        window.addEventListener("focus", function() {
            _Gt1(false);
        });
        window.addEventListener("blur",
            function() {
                _Gt1(true);
            });
        window.addEventListener("click", function() {
            _Gt1(false);
        });
    }
}

function _rM1() {
    if (_oM1) {
        _4Q = true;
        _oM1 = false;
    } else if (_4Q) {
        _4Q = false;
        if (_pM1) {
            _kt1 = true;
        }
    }
}

function _sM1() {
    var _Ry, i, _tM1;
    var _3a = null;
    if (_81._4a) {
        _3a = _81._6a;
    }
    var _4c = _81._Oy._4c;
    for (var _uM1 = 0; _uM1 < _4c.length; _uM1++) {
        var _Qd = _4c[_uM1];
        var _5p = _Qd._5p;
        if (!_Qd.marked) {
            if (_5p._vM1[_wM1]) {
                if (sprite_exists(_Qd.sprite_index) || sprite_exists(_Qd.mask_index)) {
                    _Ry = _Qd._pB();
                    if ((_Ry._L2 < 0) || (_Ry.left > _81._mB()) || (_Ry.bottom < 0) || (_Ry.top > _81._nB())) {
                        _Qd._B2(_wM1, _xM1, _Qd, _Qd);
                    }
                } else {
                    if ((_Qd.x < 0) || (_Qd.x > _81._mB()) || (_Qd.y < 0) || (_Qd.y > _81._nB())) {
                        _Qd._B2(_wM1, _xM1, _Qd, _Qd);
                    }
                }
            }
            if (_5p._vM1[_yM1]) {
                if (sprite_exists(_Qd.sprite_index) || sprite_exists(_Qd.mask_index)) {
                    _Ry = _Qd._pB();
                    if ((_Ry.left < 0) || (_Ry._L2 > _81._mB()) || (_Ry.top < 0) || (_Ry.bottom > _81._nB())) {
                        _Qd._B2(_yM1, _xM1, _Qd, _Qd);
                    }
                } else {
                    if ((_Qd.x < 0) || (_Qd.x > _81._mB()) || (_Qd.y < 0) || (_Qd.y > _81._nB())) {
                        _Qd._B2(_yM1, _xM1, _Qd, _Qd);
                    }
                }
            }
            if (_3a) {
                for (_tM1 = 0; _tM1 < _3a.length; _tM1++) {
                    var _zM1 = _3a[_tM1];
                    if (_zM1.visible) {
                        var _AM1 = _zM1._OG;
                        var _BM1 = _zM1._PG;
                        var _CM1 = _zM1._OG + _zM1._QG;
                        var _DM1 = _zM1._PG + _zM1._RG;
                        if (_5p._vM1[_EM1 + _tM1]) {
                            if (sprite_exists(_Qd.sprite_index) || sprite_exists(_Qd.mask_index)) {
                                _Ry = _Qd._pB();
                                if ((_Ry._L2 < _AM1) || (_Ry.left > _CM1) || (_Ry.bottom < _BM1) || (_Ry.top > _DM1)) {
                                    _Qd._B2(_EM1 + _tM1, _xM1, _Qd, _Qd);
                                }
                            } else {
                                if ((_Qd.x < _AM1) || (_Qd.x > _CM1) || (_Qd.y < _BM1) || (_Qd.y > _DM1)) {
                                    _Qd._B2(_EM1 + _tM1, _xM1, _Qd, _Qd);
                                }
                            }
                        }
                        if (_5p._vM1[_FM1 + _tM1]) {
                            if (sprite_exists(_Qd.sprite_index) || sprite_exists(_Qd.mask_index)) {
                                _Ry = _Qd._pB();
                                if ((_Ry.left < _AM1) || (_Ry._L2 > _CM1) || (_Ry.top < _BM1) || (_Ry.bottom > _DM1)) {
                                    _Qd._B2(_FM1 + _tM1, _xM1, _Qd, _Qd);
                                }
                            } else {
                                if ((_Qd.x < _AM1) || (_Qd.x > _CM1) || (_Qd.y < _BM1) || (_Qd.y > _DM1)) {
                                    _Qd._B2(_FM1 + _tM1, _xM1, _Qd, _Qd);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

function _GM1() {
    for (var _qA1 in _rA1) {
        if (!_rA1.hasOwnProperty(_qA1)) continue;
        var _HM1 = _2q._O3(_qA1);
        var _IM1 = _HM1._LD();
        for (var _iz1 = 0; _iz1 < _IM1.length; _iz1++) {
            var _JM1 = _IM1[_iz1];
            if (!_JM1.marked && _JM1.active) {
                var _KM1 = _rA1[_qA1];
                for (var _LM1 in _KM1) {
                    if (!_KM1.hasOwnProperty(_LM1)) continue;
                    var _ic1 = _KM1[_LM1];
                    var _MM1 = _2q._O3(_ic1);
                    var _NM1 = _MM1._LD();
                    for (var _jz1 = 0; _jz1 < _NM1.length; _jz1++) {
                        var _OM1 = _NM1[_jz1];
                        if (!_OM1.marked && _OM1.active) {
                            if ((_JM1._5p == _OM1._5p) && (_jz1 < _iz1)) continue;
                            if (_JM1._Ky(_OM1, true)) {
                                if ((_JM1.solid) || (_OM1.solid)) {
                                    _JM1.x = _JM1.xprevious;
                                    _JM1.y = _JM1.yprevious;
                                    _JM1._Py = true;
                                    _JM1.path_position = _JM1.path_positionprevious;
                                    _OM1.x = _OM1.xprevious;
                                    _OM1.y = _OM1.yprevious;
                                    _OM1._Py = true;
                                    _OM1.path_position = _OM1.path_positionprevious;
                                }
                                _JM1._B2(_mz1, _ic1, _JM1, _OM1);
                                _OM1._B2(_mz1, _qA1, _OM1, _JM1);
                                if ((_JM1.solid) || (_OM1.solid)) {
                                    _JM1._6z1();
                                    _OM1._6z1();
                                    _JM1._P7(_JM1.x + _JM1.hspeed, _JM1.y + _JM1.vspeed);
                                    _OM1._P7(_OM1.x + _OM1.hspeed, _OM1.y + _OM1.vspeed);
                                    if (_JM1._Ky(_OM1, true) === true) {
                                        _JM1.x = _JM1.xprevious;
                                        _JM1.y = _JM1.yprevious;
                                        _JM1._Py = true;
                                        _JM1.path_position = _JM1.path_positionprevious;
                                        _OM1.x = _OM1.xprevious;
                                        _OM1.y = _OM1.yprevious;
                                        _OM1._Py = true;
                                        _OM1.path_position = _OM1.path_positionprevious;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

function _PM1(_Bp, _QM1, _h2, _i2) {
    for (i = _81._Oy.length - 1; i >= 0; i--) {
        var _4p = _81._Oy._O3(i);
        with(_4p) {
            if (_Py) _Qy();
            if (!marked && _5p._vM1[_Bp | _QM1]) {
                var _RM1 = _le._O3(_4p.sprite_index);
                var _Mv = _RM1.xOrigin;
                var _Nv = _RM1.yOrigin;
                if ((_h2 >= _Ry.left) && (_h2 < _Ry._L2) && (_i2 >= _Ry.top) && (_i2 < _Ry.bottom)) {
                    _4p._B2(_Bp, _QM1, _4p, _4p);
                }
            }
        }
    }
}

function _SM1() {
    if (_81) {
        var _3a, _Q4;
        if (!_81._4a) {
            _3a = _5a;
        } else {
            _3a = _81._6a;
        }
        for (var _X1 = 0; _X1 < _3a.length; _X1++) {
            _7a = _3a[_X1];
            if (_7a.visible) {
                _8a(canvas, _9a);
                if (((_Aa._wz - _9a.left) >= _7a._aa) && ((_Aa._wz - _9a.left) < _7a._ba) && ((_Aa._xz - _9a.top) >= _7a._ca) && ((_Aa._xz - _9a.top) < _7a._da)) {
                    var _l3 = g_pBuiltIn.mouse_x;
                    var _n3 = g_pBuiltIn.mouse_y;
                    var _TM1 = _2q._fB();
                    for (var _Xo = 0; _Xo < _TM1.length; _Xo++) {
                        var _Wq = _TM1[_Xo];
                        var _UM1 = _Wq._vM1;
                        if (_UM1[_VM1] || _UM1[_WM1] || _UM1[_XM1] || _UM1[_YM1] || _UM1[_ZM1] || _UM1[__M1] || _UM1[_0N1] || _UM1[_1N1] || _UM1[_2N1] || _UM1[_3N1] || _UM1[_4N1] || _UM1[_5N1] || _UM1[_6N1] || _UM1[_7N1]) {
                            if (_Wq._8N1.length > 0) {
                                var _9N1 = _Wq._8N1._4c.slice(0);
                                for (var i = _9N1.length - 1; i >= 0; i--) {
                                    var _4p = _9N1[i];
                                    if (!_4p.marked) {
                                        {
                                            if (_4p._Py) _4p._Qy();
                                            if (_4p._di(_l3, _n3, true)) {
                                                var _aN1 = true;
                                                for (_Q4 = 0; _Q4 < 3; _Q4++) {
                                                    if (_Aa._J8[_Q4]) {
                                                        if (_UM1[_VM1 + _Q4]) {
                                                            _4p._B2(_VM1 + _Q4,
                                                                0, _4p, _4p);
                                                        }
                                                        _aN1 = false;
                                                    }
                                                }
                                                for (_Q4 = 0; _Q4 < 3; _Q4++) {
                                                    if (_Aa._E8[_Q4] === 1) {
                                                        if (_UM1[_YM1 + _Q4]) {
                                                            _4p._B2(_YM1 + _Q4, 0, _4p, _4p);
                                                        }
                                                        _aN1 = false;
                                                    }
                                                }
                                                for (_Q4 = 0; _Q4 < 3; _Q4++) {
                                                    if (_Aa._I8[_Q4] === 1) {
                                                        if (_UM1[_0N1 + _Q4]) {
                                                            _4p._B2(_0N1 + _Q4, 0, _4p, _4p);
                                                        }
                                                    }
                                                }
                                                if (_aN1) {
                                                    _4p._B2(_3N1, 0, _4p, _4p);
                                                }
                                                if (!_4p._bN1) {
                                                    _4p._B2(_4N1, 0, _4p, _4p);
                                                    _4p._bN1 = true;
                                                }
                                            } else {
                                                if (_4p._bN1) {
                                                    _4p._B2(_5N1, 0, _4p, _4p);
                                                    _4p._bN1 = false;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    for (_Q4 = 0; _Q4 < 3; _Q4++) {
                        if (_Aa._J8[_Q4]) {
                            _ge._B2(_cN1 + _Q4, 0);
                        }
                    }
                    for (_Q4 = 0; _Q4 < 3; _Q4++) {
                        if (_Aa._E8[_Q4] === 1) {
                            _ge._B2(_dN1 + _Q4,
                                0);
                        }
                    }
                    for (_Q4 = 0; _Q4 < 3; _Q4++) {
                        if (_Aa._I8[_Q4] === 1) {
                            _ge._B2(_eN1 + _Q4, 0);
                        }
                    }
                    if (_rz) {
                        _ge._B2(_6N1, 0);
                    }
                    if (_sz) {
                        _ge._B2(_7N1, 0);
                    }
                }
            }
        }
    }
}

function _fN1() {
    var _i5, _j5, _k3;
    var _4c = _81._Oy._4c;
    for (var _Qd = 0; _Qd < _4c.length; _Qd++) {
        var _4p = _4c[_Qd];
        if (!_4p.marked && (_4p.timeline_index >= 0)) {
            if (!_4p._Jg) {
                var _ws = _xs._O3(_4p.timeline_index);
                if ((_ws !== null) && (_ws !== undefined)) {
                    if (_4p.timeline_speed > 0) {
                        _i5 = _ws._gN1(_4p.timeline_position);
                        _4p.timeline_position += _4p.timeline_speed;
                        _j5 = _ws._gN1(_4p.timeline_position);
                        for (_k3 = _i5; _k3 < _j5; _k3++) {
                            _ts(_4p, _4p, _4p.timeline_index, _k3);
                        }
                        if (_4p._Kg && (_4p.timeline_position > _ws._qO())) {
                            _4p.timeline_position = 0;
                        }
                    } else {
                        _i5 = _ws._hN1(_4p.timeline_position);
                        _4p.timeline_position += _4p.timeline_speed;
                        _j5 = _ws._hN1(_4p.timeline_position);
                        for (_k3 = _i5; _k3 > _j5; _k3--) {
                            _ts(_4p, _4p, _4p.timeline_index, _k3);
                        }
                        if (_4p._Kg && (_4p.timeline_position < 0)) {
                            _4p.timeline_position = _ws._qO();
                        }
                    }
                }
            }
        }
    }
}

function _iN1() {
    var _4c = _81._Oy._4c;
    for (var _Qd = 0; _Qd < _4c.length; _Qd++) {
        var _4p = _4c[_Qd];
        if (!_4p.marked) {
            for (var _Z4 = 0; _Z4 < _jN1; _Z4++) {
                var event = _kN1 | (_Z4 + 1);
                var _Wq = _4p._5p;
                if (_Wq._vM1[event]) {
                    var _lN1;
                    _lN1 = ~~(_4p.alarm[_Z4]);
                    if (_lN1 >= 0) {
                        _lN1--;
                        _4p.alarm[_Z4] = _lN1;
                    }
                    if (_lN1 === 0) {
                        _4p._B2(_kN1 | (_Z4 + 1), 0, _4p, _4p);
                    }
                }
            }
        }
    }
}

function _qs(_Bp, _ns) {
    switch (_Bp) {
        case _mN1:
            return _Sd;
        case _nN1:
            return _Ly;
        case _oN1:
            switch (_ns) {
                case 0:
                    return _pN1;
                case 1:
                    return _qN1;
                case 2:
                    return _rN1;
                case 3:
                    return _sN1;
                case 4:
                    return _tN1;
                case 5:
                    return _uN1;
                case 6:
                    return _vN1;
                case 7:
                    return _wN1;
                case 8:
                    return _xN1;
                case 9:
                    return _yN1;
                case 10:
                    return _zN1;
                case 11:
                    return _AN1;
                default:
                    return _pN1;
            }
            break;
        case _BN1:
            switch (_ns) {
                case _CN1:
                    return _DN1;
                case _EN1:
                    return _FN1;
                case _GN1:
                    return _HN1;
                default:
                    return _FN1;
            }
            break;
        case _IN1:
            return _mz1;
        case _JN1:
            switch (_ns) {
                case _KN1:
                    return _VM1;
                case _LN1:
                    return _XM1;
                case _MN1:
                    return _WM1;
                case _NN1:
                    return _3N1;
                case _ON1:
                    return _YM1;
                case _PN1:
                    return __M1;
                case _QN1:
                    return _ZM1;
                case _RN1:
                    return _0N1;
                case _SN1:
                    return _2N1;
                case _TN1:
                    return _1N1;
                case _UN1:
                    return _4N1;
                case _VN1:
                    return _5N1;
                case _WN1:
                    return 0;
                case _XN1:
                    return 0;
                case _YN1:
                    return 0;
                case _ZN1:
                    return 0;
                case __N1:
                    return 0;
                case _0O1:
                    return 0;
                case _1O1:
                    return 0;
                case _2O1:
                    return 0;
                case _3O1:
                    return 0;
                case _4O1:
                    return 0;
                case _5O1:
                    return 0;
                case _6O1:
                    return 0;
                case _7O1:
                    return 0;
                case _8O1:
                    return 0;
                case _9O1:
                    return 0;
                case _aO1:
                    return 0;
                case _bO1:
                    return 0;
                case _cO1:
                    return 0;
                case _dO1:
                    return 0;
                case _eO1:
                    return 0;
                case _fO1:
                    return 0;
                case _gO1:
                    return 0;
                case _hO1:
                    return 0;
                case _iO1:
                    return 0;
                case _jO1:
                    return _cN1;
                case _kO1:
                    return _lO1;
                case _mO1:
                    return _nO1;
                case _oO1:
                    return _dN1;
                case _pO1:
                    return _qO1;
                case _rO1:
                    return _sO1;
                case _tO1:
                    return _eN1;
                case _uO1:
                    return _vO1;
                case _wO1:
                    return _xO1;
                case _yO1:
                    return _6N1;
                case _zO1:
                    return _7N1;
                default:
                    return 0;
            }
            break;
        case _Bs:
            {
                switch (_ns) {
                    case _AO1:
                        return _wM1;
                    case _BO1:
                        return _yM1;
                    case _CO1:
                        return _DO1;
                    case _EO1:
                        return _FO1;
                    case _GO1:
                        return _HO1;
                    case _IO1:
                        return _JO1;
                    case _KO1:
                        return _he;
                    case _LO1:
                        return _MO1;
                    case _NO1:
                        return _7z1;
                    case _OO1:
                        return _pe;
                    case _PO1:
                        return _QO1;
                    case _RO1:
                        return _EM1;
                    case _SO1:
                        return _TO1;
                    case _UO1:
                        return _VO1;
                    case _WO1:
                        return _XO1;
                    case _YO1:
                        return _ZO1;
                    case __O1:
                        return _0P1;
                    case _1P1:
                        return _2P1;
                    case _3P1:
                        return _4P1;
                    case _5P1:
                        return _FM1;
                    case _6P1:
                        return _7P1;
                    case _8P1:
                        return _9P1;
                    case _aP1:
                        return _bP1;
                    case _cP1:
                        return _dP1;
                    case _eP1:
                        return _fP1;
                    case _gP1:
                        return _hP1;
                    case _iP1:
                        return _jP1;
                    case _As:
                        return _kP1;
                    case _lP1:
                        return _mP1;
                    case _nP1:
                        return _oP1;
                    case _pP1:
                        return _qP1;
                    case _rP1:
                        return _sP1;
                    case _tP1:
                        return _uP1;
                    case _vP1:
                        return _wP1;
                    case _xP1:
                        return _yP1;
                    case _zP1:
                        return _AP1;
                    case _BP1:
                        return _CP1;
                    case _DP1:
                        return _EP1;
                    case _FP1:
                        return _GP1;
                    case _HP1:
                        return _IP1;
                    case _JP1:
                        return _KP1;
                    case _LP1:
                        return _MP1;
                    case _NP1:
                        return _OP1;
                    case _PP1:
                        return _C2;
                    case _QP1:
                        return _RP1;
                    case _SP1:
                        return _TP1;
                    case _UP1:
                        return _fy;
                    case _VP1:
                        return _4q;
                    case _WP1:
                        return _kL1;
                    case _XP1:
                        return _CK;
                    default:
                        return 0;
                }
                break;
            }
        case _YP1:
            return _ZP1;
        case __P1:
            return _0Q1;
        case _1Q1:
            return _2Q1;
        case _3Q1:
            return _4Q1;
        case _5Q1:
            return _6Q1;
        default:
            return 0;
    }
}

function _ss(_Bp, _ns) {
    switch (_Bp) {
        case _IN1:
        case _5Q1:
        case __P1:
        case _1Q1:
        case _3Q1:
            {
                return _ns;
            }
    }
    return 0;
}(function(window) {
    if (!Object.defineProperty) {
        throw ("Font.js requires Object.defineProperty, which this browser does not support.");
    }
    if (!document.createElement("canvas").getContext) {
        throw ("Font.js requires <canvas> and the Canvas2D API, which this browser does not support.");
    }(function(window) {
        try {
            var _Z4 = new Uint8Array(1);
            return;
        } catch (e) {}

        function subarray(start, end) {
            return this.slice(start, end);
        }

        function _7Q1(_8Q1, offset) {
            var i, _X2 = _8Q1.length;
            if (arguments.length < 2) {
                offset = 0;
            }
            for (i = 0; i < _X2; ++i, ++offset) {
                this[offset] = _8Q1[i] & 0xFF;
            }
        }

        function _9Q1(_aQ1) {
            var _9e, i;
            if (typeof _aQ1 === "number") {
                _9e = new Array(_aQ1);
                for (i = 0; i < _aQ1; ++i) {
                    _9e[i] = 0;
                }
            } else {
                _9e = _aQ1.slice(0);
            }
            _9e.subarray = subarray;
            _9e.buffer = _9e;
            _9e.byteLength = _9e.length;
            _9e.set = _7Q1;
            if (typeof _aQ1 === "object" && _aQ1.buffer) {
                _9e.buffer = _aQ1.buffer;
            }
            return _9e;
        }
        window.Uint8Array = _9Q1;
        window.Uint32Array = _9Q1;
        window.Int32Array = _9Q1;
    }(window));
    (function(window) {
        if (window.opera) return;
        if ("response" in XMLHttpRequest.prototype || "mozResponseArrayBuffer" in XMLHttpRequest.prototype || "mozResponse" in XMLHttpRequest.prototype || "responseArrayBuffer" in XMLHttpRequest.prototype) {
            return;
        }
        var getter;
        if (window._bQ1) {
            getter = function() {
                return new Uint8Array(new _bQ1(this._cQ1)._dQ1());
            };
        } else {
            getter = function() {
                return this._cQ1;
            };
        }
        Object.defineProperty(XMLHttpRequest.prototype,
            "response", {
                get: getter
            });
    }(window));
    if (!window._lH1) {
        window._lH1 = function(data) {
            var _Ms = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
            var _Ns, _Os, _Ps, _Qs, _Rs, _Ss, _Ts, _Us, i = 0,
                _Vs = 0,
                _Ws = "",
                _Xs = [];
            if (!data) {
                return data;
            }
            do {
                _Ns = data.charCodeAt(i++);
                _Os = data.charCodeAt(i++);
                _Ps = data.charCodeAt(i++);
                _Us = _Ns << 16 | _Os << 8 | _Ps;
                _Qs = _Us >> 18 & 0x3f;
                _Rs = _Us >> 12 & 0x3f;
                _Ss = _Us >> 6 & 0x3f;
                _Ts = _Us & 0x3f;
                _Xs[_Vs++] = _Ms.charAt(_Qs) + _Ms.charAt(_Rs) + _Ms.charAt(_Ss) + _Ms.charAt(_Ts);
            } while (i < data.length);
            _Ws = _Xs.join('');
            var _d3 = data.length % 3;
            return (_d3 ? _Ws.slice(0, _d3 - 3) : _Ws) + '==='.slice(_d3 || 3);
        };
    }

    function _sr() {
        this._ur = "fjs" + (999999 * Math.random() | 0);
    }
    _sr.prototype._zp = "";
    _sr.prototype._KF1 = "";
    _sr.prototype.data = "";
    _sr.prototype._eQ1 = "AAEAAAAKAIAAAwAgT1MvMgAAAAAAAACsAAAAWGNtYXAA" + "AAAAAAABBAAAACxnbHlmAAAAAAAAATAAAAAQaGVhZAAAA" + "AAAAAFAAAAAOGhoZWEAAAAAAAABeAAAACRobXR4AAAAAA" + "AAAZwAAAAIbG9jYQAAAAAAAAGkAAAACG1heHAAAAAAAAA" + "BrAAAACBuYW1lAAAAAAAAAcwAAAAgcG9zdAAAAAAAAAHs" + "AAAAEAAEAAEAZAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" + "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" + "AAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAABAAMAAQA" + "AAAwABAAgAAAABAAEAAEAAABB//8AAABB////wAABAAAA" + "AAABAAAAAAAAAAAAAAAAMQAAAQAAAAAAAAAAAABfDzz1A" + "AAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAEAAg" + "AAAAAAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAA" + "AAAAAAAAAAQAAAAAAAAAAAAAAAAAIAAAAAQAAAAIAAQAB" + "AAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAIAHgADAAEEC" + "QABAAAAAAADAAEECQACAAIAAAAAAAEAAAAAAAAAAAAAAA" + "AAAA==";
    _sr.prototype._fQ1 = {
        _gQ1: 0,
        _hQ1: 0,
        _iQ1: 0,
        _jQ1: 0,
        _kQ1: 400
    };
    _sr.prototype._lQ1 = false;
    _sr.prototype._qr = false;
    _sr.prototype.onload = function() {};
    _sr.prototype.onerror = function() {};
    _sr.prototype.canvas = false;
    _sr.prototype.context = false;
    _sr.prototype._mQ1 = function(target, _d81, _nQ1, font, _oQ1) {
        if (_oQ1 !== false && _oQ1 < 0) {
            this.onerror("Requested system font '" + this._ur + "' could not be loaded (it may not be installed).");
            return;
        }
        var _pQ1 = document._qQ1.getComputedStyle(target, '');
        var width = _pQ1.getPropertyValue("width").replace("px",
            '');
        if (width > 0) {
            document._rQ1.removeChild(_d81);
            document.body.removeChild(target);
            this._qr = true;
            this.onload();
        } else {
            setTimeout(function() {
                font._mQ1(target, _d81, _nQ1, font, _oQ1 === false ? false : _oQ1 - 50);
            }, 50);
        }
    };
    _sr.prototype._sQ1 = function() {
        var _qk1 = this;
        var chr = function(_y8) {
            return String.fromCharCode(_y8);
        };
        var _tQ1 = function(_y8) {
            if (_y8 < 256) {
                return chr(0) + chr(_y8);
            }
            var _js = _y8 >> 8;
            var _ks = _y8 & 0xFF;
            return chr(_js) + chr(_ks);
        };
        var _uQ1 = function(_y8) {
            if (_y8 < 0) {
                _y8 = 0xFFFFFFFF + _y8 + 1;
            }
            return parseInt(_y8, 10).toString(16);
        };
        var _vQ1 = function(_js, _ks) {
            return 256 * _js + _ks;
        };
        var _wQ1 = function(_js, _ks) {
            var _xQ1 = _js >> 7 === 1,
                _y8;
            _js = _js & 0x7F;
            _y8 = 256 * _js + _ks;
            if (!_xQ1) {
                return _y8;
            }
            return _y8 - 0x8000;
        };
        var _yQ1 = function(_js, _ks, _zQ1, _AQ1) {
            return 16777216 * _js + 65536 * _ks + 256 * _zQ1 + _AQ1;
        };
        var error = function(_ia) {
            _qk1.onerror(_ia);
        };
        var _BQ1 = chr(0) + chr(1) + chr(0) + chr(0);
        var _CQ1 = "OTTO";
        var data = this.data;
        var version = chr(data[0]) + chr(data[1]) + chr(data[2]) + chr(data[3]);
        var _DQ1 = (version === _BQ1);
        var _EQ1 = (_DQ1 ? false : version === _CQ1);
        if (_DQ1) {
            this._KF1 = "truetype";
        } else if (_EQ1) {
            this._KF1 = "opentype";
        } else {
            error("Error: file at " + this._zp + " cannot be interpreted as OpenType font.");
            return;
        }
        var _FQ1 = _vQ1(data[4], data[5]),
            _GQ1 = 12,
            ptr, end = _GQ1 + 16 * _FQ1,
            _HQ1 = {},
            _P71;
        for (ptr = _GQ1; ptr < end; ptr += 16) {
            _P71 = chr(data[ptr]) + chr(data[ptr + 1]) + chr(data[ptr + 2]) + chr(data[ptr + 3]);
            _HQ1[_P71] = {
                name: _P71,
                _IQ1: _yQ1(data[ptr + 4], data[ptr + 5], data[ptr + 6], data[ptr + 7]),
                offset: _yQ1(data[ptr + 8], data[ptr + 9], data[ptr + 10], data[ptr + 11]),
                length: _yQ1(data[ptr + 12], data[ptr + 13], data[ptr + 14], data[ptr + 15])
            };
        }
        var _JQ1 = function(_P71) {
            if (!_HQ1[_P71]) {
                error("Error: font is missing the required OpenType '" + _P71 + "' table.");
                return false;
            }
            return _P71;
        };
        _P71 = _JQ1("head");
        if (_P71 === false) {
            return;
        }
        ptr = _HQ1[_P71].offset;
        _HQ1[_P71].version = "" + data[ptr] + data[ptr + 1] + data[ptr + 2] + data[ptr + 3];
        var _KQ1 = _vQ1(data[ptr + 18], data[ptr + 19]);
        this._fQ1._gQ1 = _KQ1;
        _P71 = _JQ1("hhea");
        if (_P71 === false) {
            return;
        }
        ptr = _HQ1[_P71].offset;
        _HQ1[_P71].version = "" + data[ptr] + data[ptr + 1] + data[ptr + 2] + data[ptr + 3];
        this._fQ1._iQ1 = _wQ1(data[ptr + 4], data[ptr + 5]) / _KQ1;
        this._fQ1._jQ1 = _wQ1(data[ptr + 6], data[ptr + 7]) / _KQ1;
        this._fQ1._hQ1 = _wQ1(data[ptr + 8], data[ptr + 9]) / _KQ1;
        _P71 = _JQ1("OS/2");
        if (_P71 === false) {
            return;
        }
        ptr = _HQ1[_P71].offset;
        _HQ1[_P71].version = "" + data[ptr] + data[ptr + 1];
        this._fQ1._kQ1 = _vQ1(data[ptr + 4], data[ptr + 5]);
        _P71 = _JQ1("cmap");
        if (_P71 === false) {
            return;
        }
        ptr = _HQ1[_P71].offset;
        _HQ1[_P71].version = "" + data[ptr] + data[ptr + 1];
        _FQ1 = _vQ1(data[ptr + 2], data[ptr + 3]);
        var _LQ1, _MQ1, _NQ1, _OQ1, offset, _PQ1 = false;
        for (_LQ1 = 0; _LQ1 < _FQ1; _LQ1++) {
            _MQ1 = ptr + 4 + _LQ1 * 8;
            _NQ1 = _vQ1(data[_MQ1],
                data[_MQ1 + 1]);
            _OQ1 = _vQ1(data[_MQ1 + 2], data[_MQ1 + 3]);
            offset = _yQ1(data[_MQ1 + 4], data[_MQ1 + 5], data[_MQ1 + 6], data[_MQ1 + 7]);
            if (_NQ1 === 3 && _OQ1 === 1) {
                _PQ1 = offset;
            }
        }
        var _QQ1 = "A";
        this._RQ1 = [];
        if (_PQ1 !== false) {
            ptr += _PQ1;
            version = _vQ1(data[ptr], data[ptr + 1]);
            if (version === 4) {
                var _SQ1 = _vQ1(data[ptr + 6], data[ptr + 7]) / 2;
                var _TQ1 = function(chr) {
                    return [0x0009, 0x000A, 0x000B, 0x000C, 0x000D, 0x0020, 0x0085, 0x00A0, 0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x2028, 0x2029, 0x202F, 0x205F,
                        0x3000
                    ].indexOf(chr) === -1;
                };
                var i = ptr + 14,
                    e = ptr + 14 + 2 * _SQ1,
                    _UQ1 = false;
                for (; i < e; i += 2) {
                    _UQ1 = _vQ1(data[i], data[i + 1]);
                    if (_TQ1(_UQ1)) {
                        break;
                    }
                    _UQ1 = false;
                }
                var _Cb = e + 2;
                for (; i < e; i += 2, _Cb += 2) {
                    var _VQ1 = _vQ1(data[i], data[i + 1]);
                    var _WQ1 = _vQ1(data[_Cb], data[_Cb + 1]);
                    if (_VQ1 != 0xffff) {
                        for (var _X2 = _WQ1; _X2 <= _VQ1; ++_X2) {
                            this._RQ1.push(_X2);
                        }
                    }
                }
                if (_UQ1 !== false) {
                    _QQ1 = String.fromCharCode(_UQ1);
                    var _RD1 = -(_UQ1 - 1) + 65536;
                    var _XQ1 = _lH1(chr(0) + _tQ1(_UQ1) + _tQ1(0xFFFF) + _tQ1(0) + _tQ1(_UQ1) + _tQ1(0xFFFF) + _tQ1(_RD1) + _tQ1(1));
                    this._eQ1 = this._eQ1.substring(0,
                        380) + _XQ1 + this._eQ1.substring(380 + _XQ1.length);
                }
            }
        }
        this._YQ1(_QQ1, false);
    };
    _sr.prototype._YQ1 = function(_QQ1, _oQ1) {
        var _ZQ1 = this._ur + " testfont";
        var __Q1 = document.createElement("style");
        __Q1.setAttribute("type", "text/css");
        __Q1.innerHTML = "@font-face {\n" + "  font-family: '" + _ZQ1 + "';\n" + "  src: url('data:application/x-font-ttf;base64," + this._eQ1 + "')\n" + "       format('truetype');}";
        document._rQ1.appendChild(__Q1);
        var _0R1 = false;
        if (!this._lQ1) {
            _0R1 = this._1R1();
            document._rQ1.appendChild(_0R1);
        }
        var _2R1 = document.createElement("p");
        _2R1.style.cssText = "position: absolute; top: 0; left: 0; opacity: 0;";
        _2R1.style._ur = "'" + this._ur + "', '" + _ZQ1 + "'";
        _2R1.innerHTML = _QQ1 + _QQ1 + _QQ1 + _QQ1 + _QQ1 + _QQ1 + _QQ1 + _QQ1 + _QQ1 + _QQ1;
        document.body.appendChild(_2R1);
        if (!document._qQ1.getComputedStyle) {
            this.onload();
            error("Error: document.defaultView.getComputedStyle is not supported by this browser.\n" + "Consequently, Font.onload() cannot be trusted.");
        } else {
            var _3R1 = this._lQ1 ? 1000 : this._fQ1._gQ1;
            var canvas = document.createElement("canvas");
            canvas.width = _3R1;
            canvas.height = _3R1;
            this.canvas = canvas;
            var context = canvas.getContext("2d");
            context.font = "1em '" + this._ur + "'";
            context.fillStyle = "white";
            context.fillRect(-1, -1, _3R1 + 2, _3R1 + 2);
            context.fillStyle = "black";
            context.fillText("test text", 50, _3R1 / 2);
            this.context = context;
            var _JB1 = this;
            var _4R1 = function() {
                _JB1._mQ1(_2R1, __Q1, _0R1, _JB1, _oQ1);
            };
            setTimeout(_4R1, 50);
        }
    };
    _sr.prototype._5R1 = function() {
        this._lQ1 = true;
        this._fQ1 = false;
        this._YQ1("A", 1000);
    };
    _sr.prototype._6R1 = function() {
        var font = this;
        if (this._zp.indexOf(".") === -1) {
            setTimeout(function() {
                font._5R1();
            }, 10);
            return;
        }
        var _Ap = new XMLHttpRequest();
        _Ap.open('GET', font._zp, true);
        _Ap.responseType = "arraybuffer";
        _Ap.onload = function(_7R1) {
            var _8R1 = _Ap.response;
            if (_8R1) {
                font.data = new Uint8Array(_8R1);
                font._sQ1();
            } else {
                font.onerror("Error downloading font resource from " + font._zp);
            }
        };
        _Ap.send(null);
    };
    _sr.prototype._9R1 = false;
    _sr.prototype._1R1 = function() {
        if (this._9R1) {
            return this._9R1;
        }
        this._9R1 = document.createElement("style");
        this._9R1.type = "text/css";
        var _aR1 = "@font-face {\n";
        _aR1 += "  font-family: '" + this._ur + "';\n";
        _aR1 += "  src: url('" + this._zp + "') format('" + this._KF1 + "');\n";
        _aR1 += "}";
        this._9R1.innerHTML = _aR1;
        return this._9R1;
    };
    _sr.prototype.measureText = function(_bR1, _cR1) {
        if (!this._qr) {
            error("measureText() was called while the font was not yet loaded");
            return false;
        }
        this.context.font = _cR1 + "px '" + this._ur + "'";
        var _fQ1 = this.context.measureText(_bR1);
        _fQ1.fontsize = _cR1;
        _fQ1._iQ1 = 0;
        _fQ1._jQ1 = 0;
        _fQ1._jG1 = {
            _dR1: 0,
            _eR1: _fQ1.width,
            _fR1: 0,
            _gR1: 0
        };
        _fQ1.height = 0;
        var _hR1 = [],
            _iR1 = _fQ1.width / this._fQ1._gQ1;
        if (_iR1 <= 1) {
            _hR1.push(_bR1);
        } else {
            _hR1.push(_bR1);
        }
        var _jR1 = _hR1.length,
            i;
        for (i = 0; i < _jR1; i++) {
            this._kR1(_hR1[i], _cR1, _fQ1);
        }
        return _fQ1;
    };
    _sr.prototype._kR1 = function(_lR1, _cR1, _fQ1) {
        var _mR1 = function(_C7, _nR1) {
            return document._qQ1.getComputedStyle(_C7, null).getPropertyValue(_nR1);
        };
        var i, _k3, _oR1, _On, _Ib1;
        var _pR1 = document.createElement("div");
        _pR1.style.position = "absolute";
        _pR1.style.opacity = 0;
        _pR1.style.font = _cR1 + "px '" + this._ur + "'";
        var _iI1 = 10;
        _pR1.innerHTML = _lR1;
        for (i = 1; i < _iI1; i++) {
            _pR1.innerHTML += "<br/>" + _lR1;
        }
        document.body.appendChild(_pR1);
        _fQ1._hQ1 = 1.2 * _cR1;
        var _qR1 = _mR1(_pR1, "height");
        _qR1 = _qR1.replace("px", "");
        if (_qR1 >= _cR1 * _iI1) {
            _fQ1._hQ1 = (_qR1 / _iI1) | 0;
        }
        document.body.removeChild(_pR1);
        if (/^_rR1*$/.test(_lR1)) {
            return _fQ1;
        }
        var canvas = this.canvas,
            _l5 = this.context,
            _3R1 = this._lQ1 ? 1000 : this._fQ1._gQ1,
            w = _3R1,
            h = _3R1,
            _sR1 = _3R1 / 2,
            padding = 50,
            _tR1 = (_3R1 - _fQ1.width) / 2;
        if (_tR1 !== (_tR1 | 0)) {
            _tR1 = _tR1 | 0;
        }
        _l5.fillStyle = "white";
        _l5.fillRect(-padding, -padding, w + 2 * padding, h + 2 * padding);
        _l5.fillStyle = "black";
        _l5.fillText(_lR1,
            _tR1, _sR1);
        var _uR1 = (_fQ1.width + padding) | 0,
            _vR1 = 4 * _cR1,
            _wR1 = _tR1 - padding / 2,
            _xR1 = _sR1 - _vR1 / 2,
            _Pn1 = _l5.getImageData(_wR1, _xR1, _uR1, _vR1).data;
        i = 0;
        _k3 = 0;
        _oR1 = _uR1 * 4;
        _On = _Pn1.length;
        _Ib1 = _vR1 / 2;
        while (++i < _On && _Pn1[i] === 255) {}
        var _iQ1 = (i / _oR1) | 0;
        i = _On - 1;
        while (--i > 0 && _Pn1[i] === 255) {}
        var _jQ1 = (i / _oR1) | 0;
        for (i = 0, _k3 = 0; _k3 < _uR1 && _Pn1[i] === 255;) {
            i += _oR1;
            if (i >= _On) {
                _k3++;
                i = (i - _On) + 4;
            }
        }
        var _dR1 = _k3;
        var _rQ = 1;
        for (i = _On - 3, _k3 = 0; _k3 < _uR1 && _Pn1[i] === 255;) {
            i -= _oR1;
            if (i < 0) {
                _k3++;
                i = (_On - 3) - (_rQ++) * 4;
            }
        }
        var _eR1 = _uR1 - _k3;
        _fQ1._iQ1 = (_Ib1 - _iQ1);
        _fQ1._jQ1 = (_jQ1 - _Ib1);
        _fQ1._jG1 = {
            _dR1: _dR1 - (padding / 2),
            _eR1: _eR1 - (padding / 2),
            _fR1: -_fQ1._jQ1,
            _gR1: _fQ1._iQ1
        };
        _fQ1.height = 1 + (_jQ1 - _iQ1);
        return _fQ1;
    };
    Object.defineProperty(_sr.prototype, "src", {
        set: function(_zp) {
            this._zp = _zp;
            this._6R1();
        }
    });
    window._sr = _sr;
}(window));

function _yR1() {}

function logical_xor(_Z4, _g3) {
    _Z4 = (_Z4 > 0.5);
    _g3 = (_g3 > 0.5);
    return (_Z4 || _g3) && !(_Z4 && _g3);
}
var _i3 = 3.14159265,
    _zR1 = true,
    _AR1 = false,
    _jK = true,
    _iP = 0,
    _BR1 = -1,
    _CR1 = 0,
    _DR1 = 1,
    _ER1 = 2,
    _Jw = 0,
    _FR1 = -1,
    _GR1 = 0,
    _Kw = 1,
    _HR1 = 2,
    _IR1 = 3,
    _JR1 = 4,
    _KR1 = 5,
    _LR1 = 6,
    _MR1 = 7,
    _It1 = 8,
    _NR1 = 9,
    _OR1 = 10,
    _hP = 0,
    _GR1 = -1,
    _PR1 = 0,
    _QR1 = 0,
    _RR1 = 1,
    _SR1 = 2,
    _TR1 = 3,
    _UR1 = 4,
    _VR1 = 5,
    _WR1 = 6,
    _XR1 = 7,
    _YR1 = 8,
    _ZR1 = 9,
    _lP = 0,
    __R1 = -1,
    _9H = -100,
    _aH = -200,
    _0S1 = -300,
    _1S1 = -400,
    _IB = -1,
    _2S1 = -2,
    _hz = -3,
    _ai = -4,
    _3S1 = -5,
    _4S1 = -7,
    _5S1 = -6,
    _Sd = 0x000,
    _Ly = 0x100,
    _kN1 = 0x200,
    _6S1 = 0x300,
    _mz1 = 0x400,
    _0Q1 = 0x500,
    _7S1 = 0x600,
    _xM1 = 0x700,
    _ZP1 = 0x800,
    _2Q1 = 0x900,
    _4Q1 = 0xA00,
    _6Q1 = 0xB00,
    _FN1 = _6S1 | 1,
    _DN1 = _6S1 | 2,
    _HN1 = _6S1 | 3,
    _wM1 = _xM1 | 1,
    _yM1 = _xM1 | 2,
    _DO1 = _xM1 | 3,
    _FO1 = _xM1 | 4,
    _HO1 = _xM1 | 5,
    _JO1 = _xM1 | 6,
    _he = _xM1 | 7,
    _MO1 = _xM1 | 8,
    _7z1 = _xM1 | 9,
    _pe = _xM1 | 10,
    _QO1 = _xM1 | 11,
    _kP1 = _xM1 | 14,
    _mP1 = _xM1 | 15,
    _oP1 = _xM1 | 16,
    _qP1 = _xM1 | 17,
    _sP1 = _xM1 | 18,
    _uP1 = _xM1 | 19,
    _wP1 = _xM1 | 20,
    _yP1 = _xM1 | 21,
    _AP1 = _xM1 | 22,
    _CP1 = _xM1 | 23,
    _EP1 = _xM1 | 24,
    _GP1 = _xM1 | 25,
    _IP1 = _xM1 | 26,
    _KP1 = _xM1 | 27,
    _MP1 = _xM1 | 28,
    _OP1 = _xM1 | 29,
    _EM1 = _xM1 | 30,
    _TO1 = _xM1 | 31,
    _VO1 = _xM1 | 32,
    _XO1 = _xM1 | 33,
    _ZO1 = _xM1 | 34,
    _0P1 = _xM1 | 35,
    _2P1 = _xM1 | 36,
    _4P1 = _xM1 | 37,
    _FM1 = _xM1 | 40,
    _7P1 = _xM1 | 41,
    _9P1 = _xM1 | 42,
    _bP1 = _xM1 | 43,
    _dP1 = _xM1 | 44,
    _fP1 = _xM1 | 45,
    _hP1 = _xM1 | 46,
    _jP1 = _xM1 | 47,
    _C2 = _xM1 | 58;
_RP1 = _xM1 | 60, _TP1 = _xM1 | 61,
    _8S1 = _xM1 | 62, _9S1 = _xM1 | 63, _aS1 = _ZP1 | 64, _bS1 = _ZP1 | 65, _cS1 = _ZP1 | 72, _dS1 = _ZP1 | 73, _eS1 = _ZP1 | 74, _fS1 = _ZP1 | 75, _gS1 = _ZP1 | 76, _hS1 = _ZP1 | 77, _fy = _xM1 | 66, _4q = _xM1 | 70, _kL1 = _xM1 | 71, _CK = _xM1 | 72, _AL = _xM1 | 73, _lL = _xM1 | 74, _VM1 = _7S1 | 1, _XM1 = _7S1 | 2, _WM1 = _7S1 | 3, _YM1 = _7S1 | 4, __M1 = _7S1 | 5, _ZM1 = _7S1 | 6, _0N1 = _7S1 | 7, _2N1 = _7S1 | 8, _1N1 = _7S1 | 9, _cN1 = _7S1 | 10, _lO1 = _7S1 | 11, _nO1 = _7S1 | 12, _dN1 = _7S1 | 13, _qO1 = _7S1 | 14, _sO1 = _7S1 | 15, _eN1 = _7S1 | 16, _vO1 = _7S1 | 17, _xO1 = _7S1 | 18, _3N1 = _7S1 | 19, _4N1 = _7S1 | 20, _5N1 = _7S1 | 21, _6N1 = _7S1 | 22, _7N1 = _7S1 | 23, _pN1 = _kN1 | 1,
    _qN1 = _kN1 | 2, _rN1 = _kN1 | 3, _sN1 = _kN1 | 4, _tN1 = _kN1 | 5, _uN1 = _kN1 | 6, _vN1 = _kN1 | 7, _wN1 = _kN1 | 8, _xN1 = _kN1 | 9, _yN1 = _kN1 | 10, _zN1 = _kN1 | 11, _AN1 = _kN1 | 12, _mN1 = 0, _nN1 = 1, _oN1 = 2, _BN1 = 3, _IN1 = 4, __P1 = 5, _JN1 = 6, _Bs = 7, _YP1 = 8, _1Q1 = 9, _3Q1 = 10, _5Q1 = 11, _KN1 = 0, _LN1 = 1, _MN1 = 2, _NN1 = 3, _ON1 = 4, _PN1 = 5, _QN1 = 6, _RN1 = 7, _SN1 = 8, _TN1 = 9, _UN1 = 10, _VN1 = 11, _WN1 = 16, _XN1 = 17, _YN1 = 18, _ZN1 = 19, __N1 = 21, _0O1 = 22, _1O1 = 23, _2O1 = 24, _3O1 = 25, _4O1 = 26, _5O1 = 27, _6O1 = 28, _7O1 = 31, _8O1 = 32, _9O1 = 33, _aO1 = 34, _bO1 = 36, _cO1 = 37, _dO1 = 38, _eO1 = 39, _fO1 = 40, _gO1 = 41, _hO1 = 42, _iO1 = 43, _jO1 = 50,
    _kO1 = 51, _mO1 = 52, _oO1 = 53, _pO1 = 54, _rO1 = 55, _tO1 = 56, _uO1 = 57, _wO1 = 58, _yO1 = 60, _zO1 = 61, _EN1 = 0, _CN1 = 1, _GN1 = 2, _AO1 = 0, _BO1 = 1, _CO1 = 2, _EO1 = 3, _GO1 = 4, _IO1 = 5, _KO1 = 6, _LO1 = 7, _NO1 = 8, _OO1 = 9, _PO1 = 30, _RO1 = 40, _SO1 = 41, _UO1 = 42, _WO1 = 43, _YO1 = 44, __O1 = 45, _1P1 = 46, _3P1 = 47, _5P1 = 50, _6P1 = 51, _8P1 = 52, _aP1 = 53, _cP1 = 54, _eP1 = 55, _gP1 = 56, _iP1 = 57, _PP1 = 58, _As = 10, _lP1 = 11, _nP1 = 12, _pP1 = 13, _rP1 = 14, _tP1 = 15, _vP1 = 16, _xP1 = 17, _zP1 = 18, _BP1 = 19, _DP1 = 20, _FP1 = 21, _HP1 = 22, _JP1 = 23, _LP1 = 24, _NP1 = 25, _QP1 = 60, _SP1 = 61, _iS1 = 64, _jS1 = 65, _UP1 = 66, _VP1 = 70, _WP1 = 71, _XP1 = 72,
    _kS1 = _2Q1 | 0, _lS1 = _2Q1 | 1, _mS1 = _2Q1 | 1, _nS1 = _2Q1 | 8, _oS1 = _2Q1 | 9, _pS1 = _2Q1 | 13, _qS1 = _2Q1 | 16, _rS1 = _2Q1 | 17, _sS1 = _2Q1 | 18, _tS1 = _2Q1 | 19, _uS1 = _2Q1 | 27, _vS1 = _2Q1 | 32, _wS1 = _2Q1 | 33, _xS1 = _2Q1 | 34, _yS1 = _2Q1 | 35, _zS1 = _2Q1 | 36, _AS1 = _2Q1 | 37, _BS1 = _2Q1 | 38, _CS1 = _2Q1 | 39, _DS1 = _2Q1 | 40, _ES1 = _2Q1 | 45, _FS1 = _2Q1 | 46, _GS1 = _2Q1 | 48, _HS1 = _2Q1 | 49, _IS1 = _2Q1 | 50, _JS1 = _2Q1 | 51, _KS1 = _2Q1 | 52, _LS1 = _2Q1 | 53, _MS1 = _2Q1 | 54, _NS1 = _2Q1 | 55, _OS1 = _2Q1 | 56, _PS1 = _2Q1 | 57, _QS1 = _2Q1 | 65, _RS1 = _2Q1 | 66, _SS1 = _2Q1 | 67, _TS1 = _2Q1 | 68, _US1 = _2Q1 | 69, _VS1 = _2Q1 | 70, _WS1 = _2Q1 | 71,
    _XS1 = _2Q1 | 72, _YS1 = _2Q1 | 73, _ZS1 = _2Q1 | 74, __S1 = _2Q1 | 75, _0T1 = _2Q1 | 76, _1T1 = _2Q1 | 77, _2T1 = _2Q1 | 78, _3T1 = _2Q1 | 79, _4T1 = _2Q1 | 80, _5T1 = _2Q1 | 81, _6T1 = _2Q1 | 82, _7T1 = _2Q1 | 83, _8T1 = _2Q1 | 84, _9T1 = _2Q1 | 85, _aT1 = _2Q1 | 86, _bT1 = _2Q1 | 87, _cT1 = _2Q1 | 88, _dT1 = _2Q1 | 89, _eT1 = _2Q1 | 90, _fT1 = _2Q1 | 112, _gT1 = _2Q1 | 113, _hT1 = _2Q1 | 114, _iT1 = _2Q1 | 115, _jT1 = _2Q1 | 116, _kT1 = _2Q1 | 117, _lT1 = _2Q1 | 118, _mT1 = _2Q1 | 119, _nT1 = _2Q1 | 120, _oT1 = _2Q1 | 121, _pT1 = _2Q1 | 122, _qT1 = _2Q1 | 123, _rT1 = _2Q1 | 145, _sT1 = _2Q1 | 186, _tT1 = _2Q1 | 187, _uT1 = _2Q1 | 188, _vT1 = _2Q1 | 189, _wT1 = _2Q1 | 190, _xT1 = _2Q1 | 191,
    _yT1 = _2Q1 | 192, _zT1 = _2Q1 | 219, _AT1 = _2Q1 | 220, _BT1 = _2Q1 | 221, _CT1 = _2Q1 | 222, _DT1 = _2Q1 | 223, _ET1 = _2Q1 | 144, _FT1 = _2Q1 | 96, _GT1 = _2Q1 | 97, _HT1 = _2Q1 | 98, _IT1 = _2Q1 | 99, _JT1 = _2Q1 | 100, _KT1 = _2Q1 | 101, _LT1 = _2Q1 | 102, _MT1 = _2Q1 | 103, _NT1 = _2Q1 | 104, _OT1 = _2Q1 | 105, _PT1 = _2Q1 | 106, _QT1 = _2Q1 | 107, _RT1 = _2Q1 | 109, _ST1 = _2Q1 | 110, _TT1 = _2Q1 | 111, _UT1 = _0Q1 | 0, _VT1 = _0Q1 | 1, _WT1 = _0Q1 | 1, _XT1 = _0Q1 | 8, _YT1 = _0Q1 | 9, _ZT1 = _0Q1 | 13, __T1 = _0Q1 | 16, _0U1 = _0Q1 | 17, _1U1 = _0Q1 | 18, _2U1 = _0Q1 | 19, _3U1 = _0Q1 | 27, _4U1 = _0Q1 | 32, _5U1 = _0Q1 | 33, _6U1 = _0Q1 | 34, _7U1 = _0Q1 | 35, _8U1 = _0Q1 | 36,
    _9U1 = _0Q1 | 37, _aU1 = _0Q1 | 38, _bU1 = _0Q1 | 39, _cU1 = _0Q1 | 40, _dU1 = _0Q1 | 45, _eU1 = _0Q1 | 46, _fU1 = _0Q1 | 48, _gU1 = _0Q1 | 49, _hU1 = _0Q1 | 50, _iU1 = _0Q1 | 51, _jU1 = _0Q1 | 52, _kU1 = _0Q1 | 53, _lU1 = _0Q1 | 54, _mU1 = _0Q1 | 55, _nU1 = _0Q1 | 56, _oU1 = _0Q1 | 57, _pU1 = _0Q1 | 65, _qU1 = _0Q1 | 66, _rU1 = _0Q1 | 67, _sU1 = _0Q1 | 68, _tU1 = _0Q1 | 69, _uU1 = _0Q1 | 70, _vU1 = _0Q1 | 71, _wU1 = _0Q1 | 72, _xU1 = _0Q1 | 73, _yU1 = _0Q1 | 74, _zU1 = _0Q1 | 75, _AU1 = _0Q1 | 76, _BU1 = _0Q1 | 77, _CU1 = _0Q1 | 78, _DU1 = _0Q1 | 79, _EU1 = _0Q1 | 80, _FU1 = _0Q1 | 81, _GU1 = _0Q1 | 82, _HU1 = _0Q1 | 83, _IU1 = _0Q1 | 84, _JU1 = _0Q1 | 85, _KU1 = _0Q1 | 86, _LU1 = _0Q1 | 87,
    _MU1 = _0Q1 | 88, _NU1 = _0Q1 | 89, _OU1 = _0Q1 | 90, _PU1 = _0Q1 | 112, _QU1 = _0Q1 | 113, _RU1 = _0Q1 | 114, _SU1 = _0Q1 | 115, _TU1 = _0Q1 | 116, _UU1 = _0Q1 | 117, _VU1 = _0Q1 | 118, _WU1 = _0Q1 | 119, _XU1 = _0Q1 | 120, _YU1 = _0Q1 | 121, _ZU1 = _0Q1 | 122, __U1 = _0Q1 | 123, _0V1 = _0Q1 | 145, _1V1 = _0Q1 | 186, _2V1 = _0Q1 | 187, _3V1 = _0Q1 | 188, _4V1 = _0Q1 | 189, _5V1 = _0Q1 | 190, _6V1 = _0Q1 | 191, _7V1 = _0Q1 | 192, _8V1 = _0Q1 | 219, _9V1 = _0Q1 | 220, _aV1 = _0Q1 | 221, _bV1 = _0Q1 | 222, _cV1 = _0Q1 | 223, _dV1 = _0Q1 | 144, _eV1 = _0Q1 | 96, _fV1 = _0Q1 | 97, _gV1 = _0Q1 | 98, _hV1 = _0Q1 | 99, _iV1 = _0Q1 | 100, _jV1 = _0Q1 | 101, _kV1 = _0Q1 | 102, _lV1 = _0Q1 | 103,
    _mV1 = _0Q1 | 104, _nV1 = _0Q1 | 105, _oV1 = _0Q1 | 106, _pV1 = _0Q1 | 107, _qV1 = _0Q1 | 109, _rV1 = _0Q1 | 110, _sV1 = _0Q1 | 111, _tV1 = _4Q1 | 0, _uV1 = _4Q1 | 1, _vV1 = _4Q1 | 1, _wV1 = _4Q1 | 8, _xV1 = _4Q1 | 9, _yV1 = _4Q1 | 13, _zV1 = _4Q1 | 16, _AV1 = _4Q1 | 17, _BV1 = _4Q1 | 18, _CV1 = _4Q1 | 19, _DV1 = _4Q1 | 27, _EV1 = _4Q1 | 32, _FV1 = _4Q1 | 33, _GV1 = _4Q1 | 34, _HV1 = _4Q1 | 35, _IV1 = _4Q1 | 36, _JV1 = _4Q1 | 37, _KV1 = _4Q1 | 38, _LV1 = _4Q1 | 39, _MV1 = _4Q1 | 40, _NV1 = _4Q1 | 45, _OV1 = _4Q1 | 46, _PV1 = _4Q1 | 48, _QV1 = _4Q1 | 49, _RV1 = _4Q1 | 50, _SV1 = _4Q1 | 51, _TV1 = _4Q1 | 52, _UV1 = _4Q1 | 53, _VV1 = _4Q1 | 54, _WV1 = _4Q1 | 55, _XV1 = _4Q1 | 56, _YV1 = _4Q1 | 57,
    _ZV1 = _4Q1 | 65, __V1 = _4Q1 | 66, _0W1 = _4Q1 | 67, _1W1 = _4Q1 | 68, _2W1 = _4Q1 | 69, _3W1 = _4Q1 | 70, _4W1 = _4Q1 | 71, _5W1 = _4Q1 | 72, _6W1 = _4Q1 | 73, _7W1 = _4Q1 | 74, _8W1 = _4Q1 | 75, _9W1 = _4Q1 | 76, _aW1 = _4Q1 | 77, _bW1 = _4Q1 | 78, _cW1 = _4Q1 | 79, _dW1 = _4Q1 | 80, _eW1 = _4Q1 | 81, _fW1 = _4Q1 | 82, _gW1 = _4Q1 | 83, _hW1 = _4Q1 | 84, _iW1 = _4Q1 | 85, _jW1 = _4Q1 | 86, _kW1 = _4Q1 | 87, _lW1 = _4Q1 | 88, _mW1 = _4Q1 | 89, _nW1 = _4Q1 | 90, _oW1 = _4Q1 | 112, _pW1 = _4Q1 | 113, _qW1 = _4Q1 | 114, _rW1 = _4Q1 | 115, _sW1 = _4Q1 | 116, _tW1 = _4Q1 | 117, _uW1 = _4Q1 | 118, _vW1 = _4Q1 | 119, _wW1 = _4Q1 | 120, _xW1 = _4Q1 | 121, _yW1 = _4Q1 | 122, _zW1 = _4Q1 | 123,
    _AW1 = _4Q1 | 145, _BW1 = _4Q1 | 186, _CW1 = _4Q1 | 187, _DW1 = _4Q1 | 188, _EW1 = _4Q1 | 189, _FW1 = _4Q1 | 190, _GW1 = _4Q1 | 191, _HW1 = _4Q1 | 192, _IW1 = _4Q1 | 219, _JW1 = _4Q1 | 220, _KW1 = _4Q1 | 221, _LW1 = _4Q1 | 222, _MW1 = _4Q1 | 223, _NW1 = _4Q1 | 144, _OW1 = _4Q1 | 96, _PW1 = _4Q1 | 97, _QW1 = _4Q1 | 98, _RW1 = _4Q1 | 99, _SW1 = _4Q1 | 100, _TW1 = _4Q1 | 101, _UW1 = _4Q1 | 102, _VW1 = _4Q1 | 103, _WW1 = _4Q1 | 104, _XW1 = _4Q1 | 105, _YW1 = _4Q1 | 106, _ZW1 = _4Q1 | 107, __W1 = _4Q1 | 109, _0X1 = _4Q1 | 110, _1X1 = _4Q1 | 111, _2X1 = 0, _3X1 = 1, _4X1 = 2, _5X1 = [], _jN1 = 12, _6X1 = 8, _7X1 = 8, _8X1 = 8, _Qr = 10, _Se = 0x000000, _Ve = 0x000080, _We = 0x008000,
    _Xe = 0x008080, _Ye = 0x800000, _Ze = 0x800080, __e = 0x808000, _Te = 0x808080, _Ue = 0xC0C0C0, _0f = 0x0000FF, _1f = 0x00FF00, _2f = 0x00FFFF, _3f = 0xFF0000, _4f = 0xFF00FF, _5f = 0xFFFF00, _9X1 = 0xC0C0C0, _aX1 = 0x808080, _me = 0xFFFFFF, _bX1 = 0xC0DCC0, _cX1 = 0xF0CAA6, _dX1 = 0xF0FBFF, _eX1 = 0xA4A0A0, _fX1 = -1, _FL = 0, _sa = 1, global = null, _2q = null, _ge = null, _Aa = null, _oG = null, g_pBuiltIn = null, _Pn = null, _gX1 = null, _2e = null, _Ee = null, _rA1 = null, _5B = null, _xs = null, _Bh = null, _hX1 = null, _81 = null, _iX1 = null, _5a = null, _jX1 = null, _kX1 = null, _lX1 = null, _mX1 = null, _0b = null, _Yc = null,
    __w = null, _Pb = null, _ad = null, _IA = null, _N3 = null, _9d = null, _0h = null, _nX1 = null, _AP = null, _Sr = null, _Rr = null, _8s = null, _9s = null, _as = null, _Xr = null, _0s = null, _oX1 = null, _Gs = null, _Hs = null, _x4 = null, _pq = null, _9a = null, _CN = null, _BN = null, _DN = null, _EN = null, _pX1 = null, _qX1 = null, _rX1 = null, _sX1 = null, _tX1 = null, g_gmlConst = null, _4I = null, _uX1 = null, g_WebAudioContext = null, _Ko = null, _ho = null, _vX1 = null, _ra = _FL, _Zr = true, __v = true, _vq = false, _kt1 = false, _uO = false, _HI = false, _GI = false, _BJ = false, _Ln = false, _wX1 = false, _vN = false, _xX1 = false,
    _yX1 = false, _ps = false, _zX1 = false, _jo = false, _AX1 = false, _mt1 = false, _BX1 = false, _CX1 = 0, _5H = 0, _cs = 0, _DX1 = 0, _EX1 = 0, _FX1 = 0, _CO = 0, _DO = 0, _FO = 0, _GO = 0, _EO = 0, _HO = 0, _Sa = 0, _Xy = 0, _GX1 = 0, _X6 = 0, _Y6 = 0, _6r = 0, _Xu = 0, _Wu = 0, _mv = 0, _ov = 0, _IO = 0, _JO = 0, _HX1 = 0, _IX1 = 0, _JX1 = 0, _2s = 0, _3s = 0, _4s = 0, _Yr = 0, _Wr = 0, _6o = 0, _KX1 = 0, _Ds = 0, _Es = 0, _Fs = 0, _er = 0, _fr = 0, _ww = 0, _LX1 = 0, _MX1 = 0, _NX1 = 0, _OX1 = 0, _AO = 0, _PX1 = 0, _hl = 0, _zO = 0, _rd = 0, _QX1 = 0, _mu = 0, _ku = 0, _nu = false, _ou = -1, _pu = -1, _qu = 1, _ru = 1, cr_default = 0, cr_none = 0, cr_arrow = 0, cr_cross = 0, cr_beam = 0, cr_size_nesw = 0,
    cr_size_ns = 0, cr_size_nwse = 0, cr_size_we = 0, cr_uparrow = 0, cr_hourglass = 0, cr_drag = 0, cr_nodrop = 0, cr_hsplit = 0, cr_vsplit = 0, cr_multidrag = 0, cr_sqlwait = 0, cr_no = 0, cr_appstart = 0, cr_help = 0, cr_handpoint = 0, cr_size_all = 0, c_black = 0, c_white = 0, c_red = 0, c_green = 0, c_blue = 0, _RX1 = 0, _SX1 = 0, _TX1 = 0, _UX1 = 0, _VX1 = 0, _WX1 = [], _eo = 'canvas', _XX1 = '0123456789ABCDEF';

function _YX1() {
    var debug = false;
    if ((_Pn.Options) && (_Pn.Options.debugMode) && (_Pn.Options.debugMode === true)) {
        debug = true;
    }
    if (!debug) {
        instance_change = _0z;
        yyInst = _ZX1;
        ds_grid_get = _wb;
        ds_grid_set = _9b;
        ds_grid_set_pre = _bb;
        ds_grid_set_post = _eb;
    } else {
        instance_change = _5z;
        yyInst = __X1;
        ds_grid_get = _ub;
        ds_grid_set = _8b;
        ds_grid_set_pre = _ab;
        ds_grid_set_post = _cb;
    }
}

function _0Y1() {
    _WX1 = [];
    var _1Y1 = ~~0xEDB88320;
    for (var i = 0; i < 256; ++i) {
        var _2Y1 = ~~i;
        for (var _k3 = 8; _k3 > 0; --_k3) {
            if ((_2Y1 & 1) !== 0) {
                _2Y1 = ((_2Y1 >> 1) & 0x7fffffff) ^ _1Y1;
            } else {
                _2Y1 >>= 1;
                _2Y1 &= 0x7fffffff;
            }
        }
        _WX1[i] = _2Y1;
    }
}

function _3Y1(_4Y1) {
    var _5Y1 = ~~0xffffffff;
    for (var i = 0; i < _4Y1.length; i++) {
        _5Y1 = ((_5Y1 >> 8) & 0x00ffffff) ^ _WX1[(_5Y1 ^ _4Y1[i]) & 0xff];
    }
    return _5Y1;
}

function _6Y1() {
    _0Y1();
    _7Y1();
    if (_ra != _fX1) {
        try {
            var _8Y1 = new Audio();
            _8Y1.controls = false;
            _HI = !!_8Y1.canPlayType && _8Y1.canPlayType('audio/mpeg') !== "";
            _GI = !!_8Y1.canPlayType && _8Y1.canPlayType('audio/ogg; codecs="vorbis"') !== "";
            _8Y1 = null;
        } catch (e) {
            _HI = false;
            _GI = false;
        }
    }
    if (_HI) debug("Browser CAN play MP3");
    if (_GI) debug("Browser CAN play OGG");
    _YX1();
    _vX1 = _CX1 = 0;
    _81 = null;
    _kt1 = false;
    _5H = -1;
    _DN = new _9Y1();
    _iX1 = new _9Y1();
    _aY1 = new _9Y1();
    _EN = new _9Y1();
    _CN = new _Qo();
    _BN = new _Qo();
    _iX1.visible = true;
    _aY1.visible = true;
    _5a = [];
    _5a[0] = _iX1;
    _kX1 = [];
    _lX1 = [];
    _mX1 = [];
    _0b = new _VC(5);
    _Yc = new _VC(5);
    __w = new _VC(5);
    _Pb = new _VC(5);
    _ad = new _VC(5);
    _IA = new _VC(5);
    _N3 = new _VC(5);
    _0h = new _VC(5);
    _9d = new _VC(5);
    _nX1 = new _5h();
    _pq = new _VC(5);
    _9a = new _Qo();
    _qX1 = new _bY1();
    _qX1._cY1 = "DUMMY INSTANCE";
    _5X1[0] = -1;
    _5X1[1] = 0;
    _5X1[2] = 0x00000000;
    _5X1[3] = 1;
    _5X1[4] = 0;
    _5X1[5] = 0x00000000;
    _5X1[6] = 0;
    _5X1[7] = -1;
    _5X1[8] = 0x00000000;
    _5X1[9] = 0;
    _5X1[10] = 1;
    _5X1[11] = 0x00000000;
    _5X1[12] = 0;
    _5X1[13] = 0;
    _5X1[14] = 0xffffffff;
    _eo = "canvas";
    _x4 = "html5game/";
    if (typeof(g_GameMakerHTML5Dir) != "undefined") {
        _x4 = g_GameMakerHTML5Dir;
    } else {
        if (_Pn.Options && _Pn.Options.GameDir) {
            _x4 = _Pn.Options.GameDir + '/';
        }
    }
    _AP = [];
    _Sr = [];
    _Rr = [];
    _8s = "Hiscore Table";
    _9s = "<Nobody>";
    _as = "Press <ESC> to Continue";
    _2s = 0x000000;
    _Wr = -1;
    _3s = 0xffff00;
    _4s = 0xffffff;
    _Xr = "verdana";
    _Yr = 16;
    _0s = "";
    _Zr = true;
    highscore_clear();
    _mu = -1;
    _ku = -1;
    _0h._dY1();
    _Sa = 0.0000001;
    _OX1 = 512;
    _Ko = [];
    _vN = _mt1 = false;
    __v = true;
    _jo = false;
    _tX1 = _KX1 = null;
    _Ds = _Es = -1;
    _ww = 0;
    _GX1 = 1.0;
    _cs = 0;
    _DX1 = -1;
    _EX1 = 0;
    _6o = 0;
    _FX1 = 0;
    _eY1 = true;
    _JX1 = 10000000;
    _Xy = 100000;
    _X6 = 1.0;
    _6r = 0x00000000;
    _Y6 = 0x000000;
    _Xu = _Yu(_Y6);
    _Wu = _9h(_Y6, _X6);
    c_black = _Yu(0x000000);
    c_white = _Yu(0xffffff);
    c_red = _Yu(0x0000ff);
    c_green = _Yu(0x00ff00);
    c_blue = _Yu(0xff0000);
    _RX1 = _Yu(0xff000000);
    _SX1 = _Yu(0xffffffff);
    _TX1 = _Yu(0xff0000ff);
    _UX1 = _Yu(0xff00ff00);
    _VX1 = _Yu(0xffff0000);
    cr_default = 0;
    cr_none = -1;
    cr_arrow = -2;
    cr_cross = -3;
    cr_beam = -4;
    cr_size_nesw = -6;
    cr_size_ns = -7;
    cr_size_nwse = -8;
    cr_size_we = -9;
    cr_uparrow = -10;
    cr_hourglass = -11;
    cr_drag = -12;
    cr_nodrop = -13;
    cr_hsplit = -14;
    cr_vsplit = -15;
    cr_multidrag = -16;
    cr_sqlwait = -17;
    cr_no = -18;
    cr_appstart = -19;
    cr_help = -20;
    cr_handpoint = -21;
    cr_size_all = -22;
    _rd = -1;
    _zO = -1;
    _QX1 = 0;
    _fY1();
    if (_Pn.Options && _Pn.Options.showCursor === false) {
        canvas.style.cursor = "none";
    }
    _yX1 = false;
    if (_Pn.Options && _Pn.Options.CreateEventOrder === true) {
        _yX1 = true;
    }
    if (typeof _gY1 == 'function') {
        _gY1();
    }
}

function _hY1(_iY1) {
    return _iY1 * (Math.PI / 180.0);
}

function _jY1(_h2, _i2) {
    if (_h2 === 0) return 0;
    var _f3 = ((_h2 * 0x1000000) % (_i2 * 0x1000000));
    _f3 = _f3 / 0x1000000;
    return _f3;
}

function _Cl(_h2) {
    return _h2 * _h2;
}

function _Yu(_e7) {
    var _F4 = "rgb(" + ((_e7 >> 16) & 0xff).toString() + "," + ((_e7 >> 8) & 0xff).toString() + "," + (_e7 & 0xff).toString() + ")";
    return _F4;
}

function _9h(_e7, __6) {
    var _F4 = "rgba(" + ((_e7 >> 16) & 0xff).toString() + "," + ((_e7 >> 8) & 0xff).toString() + "," + (_e7 & 0xff).toString() + "," + ((__6 * 255.0) & 0xff).toString() + ")";
    return _F4;
}

function _kY1(_iY1) {
    return _i3 * _iY1 / 180.0;
}

function _07(_e7) {
    return (((_e7 & 0xff) << 16) | (_e7 & 0xff00) | ((_e7 & 0xff0000) >> 16));
}

function _Cg(_lY1) {
    var _mY1 = YoYo_GetTimer();
    while (_lY1 > 0) {
        var _nY1 = YoYo_GetTimer();
        _lY1 -= (_nY1 - _mY1);
        _mY1 = _nY1;
    }
}

function _9i(_7i, _cc, _8i, _KD) {
    var _4c, _4p, _Qd, _d3;
    var _Z4 = _9i.arguments;
    var _Ub = _9i.arguments.length;
    var _oY1 = _Z4[_Ub - 1];
    _cc = ~~_cc;
    if (_cc == _ai) return _KD;
    if (_cc == _hz) {
        _4c = _ge._fB();
        for (_Qd = 0; _Qd < _4c.length; _Qd++) {
            _4p = _4c[_Qd];
            if ((_8i) && (_4p == _7i)) continue;
            if (_4p._ID) continue;
            _d3 = _oY1(_4p);
            if (_d3 > 0) return _d3;
        }
    } else if (_cc < 100000) {
        var _Wq = _2q._O3(_cc);
        if (_Wq === null) {
            return _KD;
        }
        _4c = _Wq._LD();
        for (_Qd = 0; _Qd < _4c.length; _Qd++) {
            _4p = _4c[_Qd];
            if ((_8i) && (_7i == _4p)) continue;
            if (_4p._ID) continue;
            _d3 = _oY1(_4p);
            if (_d3 > 0) return _d3;
        }
    } else {
        _4p = _ge._pY1(_cc);
        if ((_8i) && (_7i == _4p)) {
            return _KD;
        }
        if (_4p._ID) {
            return _KD;
        }
        return _oY1(_4p);
    }
    return _KD;
}

function _Jy(_7i, _cc, _8i, _KD) {
    var _4c, _4p, _Qd, _Cd;
    var _Z4 = _Jy.arguments;
    var _Ub = _Jy.arguments.length;
    var _oY1 = _Z4[_Ub - 1];
    var _0j = 10000000000;
    var id = -1;
    _cc = ~~_cc;
    if (_cc == _ai) return _KD;
    if (_cc == _hz) {
        _4c = _ge._fB();
        for (_Qd = 0; _Qd < _4c.length; _Qd++) {
            _4p = _4c[_Qd];
            if ((_8i) && (_4p == _7i)) continue;
            if (_4p._ID) continue;
            _Cd = _oY1(_4p);
            if (_Cd < _0j) {
                _0j = _Cd;
            }
        }
        if (_0j != 10000000000) return _0j;
    } else if (_cc < 100000) {
        var _Wq = _2q._O3(_cc);
        if (_Wq === null) {
            return _KD;
        }
        _4c = _Wq._LD();
        for (_Qd = 0; _Qd < _4c.length; _Qd++) {
            _4p = _4c[_Qd];
            if ((_8i) && (_7i == _4p)) continue;
            if (_4p._ID) continue;
            _Cd = _oY1(_4p);
            if (_Cd < _0j) {
                _0j = _Cd;
            }
        }
        if (_0j != 10000000000) return _0j;
    } else {
        _4p = _ge._pY1(_cc);
        if ((_8i) && (_7i == _4p)) {
            return _KD;
        }
        if (_4p._ID) {
            return _KD;
        }
        return _oY1(_4p);
    }
    return _KD;
}
var _Lw = {
    init: function() {
        this.browser = this.searchString(this.dataBrowser) || "An unknown browser";
        this._Mw = this._qY1();
        this.version = this.searchVersion(navigator.userAgent) || this.searchVersion(navigator.appVersion) || "an unknown version";
        this._rY1 = this.searchString(this.dataOS) || "an unknown OS";
        this.os_version = this._sY1();
    },
    _qY1: function() {
        var _tY1 = navigator.userAgent.toString().toLowerCase();
        if (_tY1.indexOf("trident/5") > -1) {
            return 9.0;
        } else if (_tY1.indexOf("trident/6") > -1) {
            return 10.0;
        } else if (_tY1.indexOf("trident/7") > -1) {
            return 11.0;
        }
        return -1;
    },
    _sY1: function() {
        if (navigator.appVersion.indexOf("CPU OS 5_") != -1) {
            return 5.0;
        } else if (navigator.appVersion.indexOf("CPU OS 4_") != -1) {
            return 4.0;
        } else if (navigator.appVersion.indexOf("CPU OS 3_") != -1) {
            return 3.0;
        } else if (navigator.appVersion.indexOf("Android 4") != -1) {
            return 4.0;
        } else if (navigator.appVersion.indexOf("Android 3") != -1) {
            return 3.0;
        } else if (navigator.appVersion.indexOf("Android 2") != -1) {
            return 2.0;
        } else {
            return __R1;
        }
    },
    searchString: function(data) {
        for (var i = 0; i < data.length; i++) {
            var _uY1 = data[i].string;
            var _vY1 = data[i].prop;
            this.versionSearchString = data[i].versionSearch || data[i].identity;
            if (_uY1) {
                if (_uY1.indexOf(data[i]._wY1) != -1) {
                    return data[i].identity;
                }
            } else if (_vY1) {
                return data[i].identity;
            }
        }
    },
    searchVersion: function(_uY1) {
        var index = _uY1.indexOf(this.versionSearchString);
        if (index == -1) return;
        return parseFloat(_uY1.substring(index + this.versionSearchString.length + 1));
    },
    dataBrowser: [{
        string: navigator.userAgent,
        _wY1: "Tizen",
        identity: "Tizen"
    }, {
        string: navigator.userAgent,
        _wY1: "Chrome",
        identity: "Chrome"
    }, {
        string: navigator.userAgent,
        _wY1: "OmniWeb",
        versionSearch: "OmniWeb/",
        identity: "OmniWeb"
    }, {
        string: navigator.vendor,
        _wY1: "Apple",
        identity: "Safari",
        versionSearch: "Version"
    }, {
        prop: window.opera,
        identity: "Opera"
    }, {
        string: navigator.userAgent,
        _wY1: "KHTML",
        identity: "KHTML",
        versionSearch: "Mozilla/"
    }, {
        string: navigator.vendor,
        _wY1: "iCab",
        identity: "iCab"
    }, {
        string: navigator.vendor,
        _wY1: "KDE",
        identity: "Konqueror"
    }, {
        string: navigator.userAgent,
        _wY1: "Firefox",
        identity: "Firefox"
    }, {
        string: navigator.userAgent,
        _wY1: "IceWeasel",
        identity: "IceWeasel"
    }, {
        string: navigator.vendor,
        _wY1: "Camino",
        identity: "Camino"
    }, {
        string: navigator.userAgent,
        _wY1: "Netscape",
        identity: "Netscape"
    }, {
        string: navigator.userAgent,
        _wY1: "IEMobile",
        identity: "IEMobile"
    }, {
        string: navigator.userAgent,
        _wY1: "MSIE",
        identity: "Explorer",
        versionSearch: "MSIE"
    }, {
        string: navigator.userAgent,
        _wY1: "Trident/",
        identity: "Explorer",
        versionSearch: "rv"
    }, {
        string: navigator.userAgent,
        _wY1: "Gecko",
        identity: "Mozilla",
        versionSearch: "rv"
    }],
    dataOS: [{
        string: navigator.userAgent,
        _wY1: "Phone 8",
        identity: "WindowsPhone8"
    }, {
        string: navigator.platform,
        _wY1: "Win",
        identity: "Windows"
    }, {
        string: navigator.platform,
        _wY1: "Mac",
        identity: "Mac"
    }, {
        string: navigator.userAgent,
        _wY1: "iPhone",
        identity: "iPhone"
    }, {
        string: navigator.userAgent,
        _wY1: "iPod",
        identity: "iPhone"
    }, {
        string: navigator.userAgent,
        _wY1: "iPad",
        identity: "iPad"
    }, {
        string: navigator.userAgent,
        _wY1: "Android",
        identity: "Android"
    }, {
        string: navigator.userAgent,
        _wY1: "Tizen",
        identity: "Tizen"
    }, {
        string: navigator.platform,
        _wY1: "Linux",
        identity: "Linux"
    }]
};

function _7Y1() {
    _Lw.init();
    if (_Lw._rY1 == "Windows") {
        _hP = _PR1;
    } else if (_Lw._rY1 == "Mac") {
        _hP = _RR1;
    } else if (_Lw._rY1 == "iPhone") {
        _hP = _TR1;
    } else if (_Lw._rY1 == "iPad") {
        _hP = _TR1;
    } else if (_Lw._rY1 == "Android") {
        _hP = _UR1;
    } else if (_Lw._rY1 == "Linux") {
        _hP = _WR1;
    } else if (_Lw._rY1 == "Tizen") {
        _hP = _YR1;
    } else if (_Lw._rY1 == "WindowsPhone8") {
        _hP = _XR1;
    } else {
        _hP = _GR1;
    }
    if (_Lw._rY1 !== "") {
        debug(_Lw._rY1 + " Detected(" + _hP + ")");
    }
    _lP = _Lw.os_version;
    _Jw = _GR1;
    _iP = _BR1;
    if (_Lw.browser == "Explorer") {
        debug("Internet Explorer detected");
        _Jw = _Kw;
    } else if (_Lw.browser == "IEMobile") {
        debug("IE Mobile detected");
        _Jw = _OR1;
    } else if (_Lw.browser == "Firefox") {
        debug("Firefox detected");
        _Jw = _HR1;
    } else if (_Lw.browser == "Chrome") {
        debug("Chrome detected");
        _Jw = _IR1;
    } else if (_Lw.browser == "Safari") {
        if (_hP == _TR1) {
            _Jw = _KR1;
            _iP = _CR1;
            if (_Lw._rY1 == "iPad") _iP = _ER1;
            debug("Safari mobile detected");
        } else {
            debug("Safari detected");
            _Jw = _JR1;
        }
    } else if (_Lw.browser == "Opera") {
        debug("BrowserDetect: " + _Lw._rY1);
        debug("Opera detected");
        _Jw = _LR1;
    } else if (_Lw.browser == "KHTML") {
        debug("Default Android browser detected");
        debug("OS: " + _lP);
        _Jw = _MR1;
    } else if (_Lw.browser == "Tizen") {
        _Jw = _FR1;
    } else {
        debug("Unknown Browser - Please report these strings");
        debug("----------------------------------------------");
        if (navigator.userAgent) debug("userAgent: " + navigator.userAgent);
        debug("---");
        if (navigator.vendor) debug("vendor: " + navigator.vendor);
        debug("---");
        if (navigator.platform) debug("platform: " + navigator.platform);
        debug("----------------------------------------------");
    }
    if ((_hP != _YR1) && (true == _Pn.Options.LocalRunAlert)) {
        if (document.URL.substring(0, 5) == "file:") {
            alert("WARNING:  Running this via a file and not a web server is not advised as the browser will enable additional security, and things like files and colours won't work correctly. " + chr(13) + chr(13) + "Please check the FAQ for more details. " + chr(13) + chr(13) + "http://help.yoyogames.com/entries/40534573");
        }
    }
}

function _xY1() {
    _95.fillText("userAgent: " + navigator.userAgent, 10, 10);
    _95.fillText("vendor: " + navigator.vendor, 10, 30);
    _95.fillText("platform: " + navigator.platform, 10, 50);
}
var _yY1 = 0;
var _dK = 0;
var _zY1 = 0;
var _AY1 = 0;
var _BY1 = null;
var _CY1 = null;
var _DY1 = 0,
    _EY1 = 1,
    _FY1 = 2,
    _GY1 = 3;

function _HY1() {
    global = new _yR1();
    g_pBuiltIn = new _IY1();
    _Aa = new _JY1();
    _m8 = new _R8();
    _KY1(canvas);
    _ge = new _LY1();
    _2q = new _MY1();
    _oG = new _NY1();
    _le = new _OY1();
    _Ee = new _PY1();
    _2e = new _QY1();
    _Zn = new _RY1();
    _rA1 = [];
    _5B = new _SY1();
    _xs = new _TY1();
    _Bh = new _UY1();
    _6Y1();
}

function _VY1(_WY1) {
    switch (_WY1) {
        case 1:
            return "MEDIA_ERR_ABORTED";
        case 2:
            return "MEDIA_ERR_NETWORK";
        case 3:
            return "MEDIA_ERR_DECODE";
        case 4:
            return "MEDIA_ERR_SRC_NOT_SUPPORTED";
    }
    return "Unknown Error";
}

function _XY1(_WY1) {
    switch (_WY1) {
        case _DY1:
            return "NETWORK_EMPTY";
        case _EY1:
            return "NETWORK_IDLE";
        case _FY1:
            return "NETWORK_LOADING";
        case _GY1:
            return "NETWORK_NO_SOURCE";
    }
    return "Unknown Error";
}

function _YY1(_Bp) {
    debug("ImageLoaded: " + this.src);
    _dK++;
}

function _ZY1(_Bp) {
    debug("ImageError: " + this.src);
    _dK++;
}

function __Y1(_Bp) {
    _AY1++;
    debug("ExtensionLoaded: ");
}

function _0Z1(_Bp) {
    _AY1++;
    debug("ExtensionError: ");
}

function ClearEventListeners(__d) {
    __d.removeEventListener('canplaythrough', _1Z1, false);
    __d.removeEventListener('error', _2Z1, false);
    __d.removeEventListener("loadstart", _3Z1, false);
    __d.removeEventListener("suspend", _4Z1, false);
    __d.removeEventListener("stalled", _5Z1, false);
    __d.removeEventListener("stall", _5Z1, false);
}

function _1Z1(_Bp) {
    this.completed = true;
    if (_CY1[this.URL] !== null) {
        _CY1[this.URL] = null;
        _dK++;
    }
    ClearEventListeners(this);
    debug("SoundLoaded: " + this.URL);
}

function _2Z1(_Bp) {
    debug("SoundError: " + this.URL + "   NetworkError: " + _VY1(this.error["code"]));
    this.completed = false;
    if (_CY1[this.URL] !== null) {
        _CY1[this.URL] = null;
        _dK++;
    }
    ClearEventListeners(this);
}

function _3Z1(_Bp) {
    this._6Z1 = true;
}

function _4Z1(_Bp) {
    debug("SoundSuspended: " + this.URL);
    this.completed = true;
    if (_CY1[this.URL] !== null) {
        _CY1[this.URL] = null;
        _dK++;
    }
    ClearEventListeners(this);
}

function _5Z1(_Bp) {}

function _7Z1(_Hc) {
    debug("Loading: " + _Hc);
    var index = _w4(_Hc);
    var _L1 = new _5h();
    _L1.x = 0;
    _L1.y = 0;
    _L1.w = 63;
    _L1.h = 63;
    _L1.XOffset = -32;
    _L1.YOffset = -32;
    _L1.CropWidth = 63;
    _L1.CropHeight = 63;
    _L1.ow = _L1.w;
    _L1.oh = _L1.h;
    _L1.tp = index;
    _L1._T1 = _P1[index];
    _L1._m4 = [];
    _L1._o4 = 32;
    _L1._n4 = 0;
    var _8Z1 = _kX1.length;
    _kX1[_8Z1] = _L1;
    return _8Z1;
}

function _9Z1(_jw) {
    debug("Loading: " + _x4 + _jw);
    var e = window.document.createElement('script');
    e.setAttribute('src', _x4 + _jw);
    e.setAttribute('type', "text/javascript");
    e.onload = __Y1;
    e.onerror = _0Z1;
    window.document.body.appendChild(e);
    _zY1++;
}

function _aZ1(_bZ1) {
    if (_bZ1.Extensions !== undefined) {
        for (var i = 0; i < _bZ1.Extensions.length; i++) {
            var _cZ1 = _bZ1.Extensions[i];
            if (_cZ1.jsFiles) {
                for (var _rp = 0; _rp < _cZ1.jsFiles.length; _rp++) {
                    _9Z1(_cZ1.jsFiles[_rp]);
                }
            }
        }
    }
}

function _dZ1(_bZ1) {
    _CY1 = [];
    _zY1 = 0;
    _AY1 = 0;
    _aZ1(_bZ1);
}

function _eZ1(_Hc) {
    _yY1++;
    var _by = new XMLHttpRequest();
    _by.open('GET', _FI(_Hc), true);
    _by.send();
    _by.onload = function(_dy) {
        _dK++;
        _le._fZ1(_by.responseText);
    };
    _by.onerror = function(_dy) {
        _dK++;
    };
}

function _gZ1(_Hc) {
    _yY1++;
    var _by = new XMLHttpRequest();
    _by.open('GET', _FI(_Hc), true);
    _by.responseType = 'arraybuffer';
    _by.send();
    _by.onload = function(_dy) {
        _dK++;
        _le._hZ1(_by.response || _by.responseText);
    };
    _by.onerror = function(_dy) {
        _dK++;
    };
}

function _iZ1(_bZ1) {
    window.famobi_analytics.trackScreen("SCREEN_SPLASH");
    var _f3, id;
    if (_bZ1._6p) document.title = _bZ1._6p;
    _BY1 = document.getElementById('GM4HTML5_loadingscreen');
    if (_At1 === "") {
        _dZ1(_bZ1);
        _At1 = _jZ1;
    } else {
        try {
            _At1 = eval(_At1);
        } catch (e) {
            _At1 = _jZ1;
        }
    }
    _dK = 0;
    for (index = 0; index < _bZ1.Textures.length; index++) {
        _yY1++;
        debug("Loading: " + _x4 + _bZ1.Textures[index]);
        if (_bZ1.Textures[index] === famobi_mgb_url)
            _f3 = _w4(_bZ1.Textures[index]);
        else
            _f3 = _w4(_x4 + _bZ1.Textures[index]);
        _P1[_f3].onload = _YY1;
        _P1[_f3].onerror = _ZY1;
        _P1[_f3].URL = _bZ1.Textures[index];
    }
    if ((_bZ1.Swfs !== null) && (_bZ1.Swfs !== undefined)) {
        _gZ1(_bZ1.Swfs);
    }
    if ((_bZ1.Skel !== null) && (_bZ1.Skel !== undefined)) {
        _eZ1(_bZ1.Skel);
    }
    if (true == _Pn.Options.UseParticles) {
        for (var i = 2; i < 16; i++) {
            _yY1++;
            var _6d = _7Z1(_x4 + "particles/IDR_GIF" + i + ".png");
            _f3 = _kX1[_6d].tp;
            _P1[_f3].onload = _YY1;
            _P1[_f3].onerror = _ZY1;
            _P1[_f3].URL = "particles/IDR_GIF" + i + ".png";
        }
    }
    if (_ra == _sa) {
        for (index = 0; index < _bZ1.Sounds.length; index++) {
            if (_bZ1.Sounds[index] !== null) {
                var groupId = 0;
                if (_bZ1.Sounds[index].groupId !== undefined) {
                    groupId = _bZ1.Sounds[index].groupId;
                }
                if (groupId == 0) {
                    _yY1++;
                    debug("Loading: " + _x4 + _bZ1.Sounds[index].origName);
                    if (_bZ1.Sounds[index].kind === 0) {
                        id = _hK(_x4 + _bZ1.Sounds[index].origName, index, _bZ1.Sounds[index].extension);
                        if (id === undefined) {
                            _yY1--;
                        }
                    } else if ((_bZ1.Sounds[index].kind == 3) || (_bZ1.Sounds[index].kind == 1)) {
                        _fK(_x4 + _bZ1.Sounds[index].origName, index, _bZ1.Sounds[index].extension);
                        _yY1--;
                    } else {
                        debug("Attempting to load sound with unknown type: " + _bZ1.Sounds[index].kind);
                        _yY1--;
                    }
                }
            }
        }
    } else if (_ra == _FL) {
        for (index = 0; index < _bZ1.Sounds.length; index++) {
            if (_bZ1.Sounds[index] !== null) {
                _yY1++;
                debug("Loading: " + _x4 + _bZ1.Sounds[index].origName);
                id = _ML(_x4 + _bZ1.Sounds[index].origName, _bZ1.Sounds[index].pName, _bZ1.Sounds[index].extension, _1Z1, _2Z1);
                if ((id !== undefined) && (_mK[id]) && (_mK[id].URL)) {
                    _CY1[_mK[id].URL] = _mK[id];
                } else {
                    _yY1--;
                }
            }
        }
    }
}

function _kZ1() {
    for (var i in _CY1) {
        if (!_CY1.hasOwnProperty(i)) continue;
        var _lZ1 = _CY1[i];
        if (_lZ1) {
            if ((_lZ1.networkState !== null && _lZ1.networkState !== undefined) && (_lZ1.readyState !== null && _lZ1.readyState !== undefined)) {
                if ((_lZ1.networkState == _EY1 || _lZ1.networkState == _GY1) && (_lZ1._6Z1) && (_lZ1.readyState != 4)) {
                    if (_lZ1.completed !== true) {
                        _lZ1.completed = false;
                        _dK++;
                        _CY1[i] = null;
                        ClearEventListeners(_lZ1);
                        debug("SoundError: " + _lZ1.URL + "   NetworkState: " + _XY1(_lZ1.networkState));
                    }
                }
            }
        }
    }
}

function _mZ1(_nZ1, _Wq) {
    if (_Wq._oZ1) return;
    if (_Wq._fo !== null) {
        _mZ1(_Wq._fo._gz, _Wq._fo);
    }
    for (var _pZ1 in _Wq._qZ1) {
        if (!_Wq._qZ1.hasOwnProperty(_pZ1)) continue;
        if (_rA1[_pZ1]) {
            if (_rA1[_pZ1][_nZ1]) {
                continue;
            }
        }
        var _HB = false;
        var _rZ1 = _Wq;
        while (_rZ1 !== null) {
            var id = _rZ1._gz;
            var _sZ1 = _2q._O3(_pZ1);
            while (_sZ1 !== null) {
                var _tZ1 = _sZ1._gz;
                if (_rA1[_tZ1] && _rA1[_tZ1][id]) {
                    _HB = true;
                    break;
                }
                _sZ1 = _sZ1._fo;
            }
            _rZ1 = _rZ1._fo;
        }
        if (!_HB) {
            if (!_rA1[_nZ1]) {
                _rA1[_nZ1] = [];
            }
            _rA1[_nZ1][_pZ1] = _pZ1;
        }
    }
    _Wq._oZ1 = true;
}

function _uZ1() {
    var _4c = _2q._fB();
    for (var _nZ1 = 0; _nZ1 < _4c.length; _nZ1++) {
        var _Wq = _4c[_nZ1];
        if (_Wq._fo !== null) {
            _mZ1(_Wq._fo._gz, _Wq._fo);
        }
        _mZ1(_nZ1, _Wq);
    }
}

function _vZ1(_bZ1) {
    var index, _pG, i;
    _Xy = 1000000;
    g_pBuiltIn.game_id = _bZ1.Options.gameId;
    _AO = _bZ1.Options.ViewColour;
    _wX1 = _bZ1.Options.allowFullScreenKey;
    _gP = _bZ1.Options.Config;
    g_pBuiltIn.game_save_id = _wZ1();
    g_pBuiltIn.game_display_name = _bZ1.Options.DisplayName;
    g_pBuiltIn.game_project_name = _bZ1.Options.DisplayName;
    g_pBuiltIn.working_directory = _x4;
    g_pBuiltIn._xZ1 = _wZ1();
    if (_b4) g_pBuiltIn.webgl_enabled = true;
    _pX1 = new _yZ1(_bZ1.Triggers);
    _MX1 = _bZ1.Options.md5;
    var id = 0;
    for (var index = 0; index < _bZ1.GMObjects.length; index++) {
        var _4u = _bZ1.GMObjects[index];
        if (_4u !== null) {
            var _5p = _zZ1(id, _4u);
            _2q._1b(_5p);
        }
        id++;
    }
    _2q._AZ1();
    _uZ1();
    for (var index = 0; index < _bZ1.GMRooms.length; index++) {
        var _BZ1 = _bZ1.GMRooms[index];
        if (_BZ1 !== null) {
            _pG = new _WG();
            _pG._CZ1(_BZ1);
            _oG._1b(_pG);
        } else {
            _CX1++;
            _oG._1b(null);
        }
    }
    _MX1 = _bZ1.Options.crc;
    _oG._DZ1(_bZ1.RoomOrder);
    for (i = 0; i < _bZ1.RoomOrder.length; i++) {
        _pG = _oG._6H(i);
        _pG._3H = i;
    }
    g_pBuiltIn.room_first = _oG._6H(0).id;
    g_pBuiltIn.room_last = _oG._6H(_oG._8H.length - 1).id;
    _EZ1(_bZ1.TPageEntries);
    for (index = 0; index < _bZ1.Sprites.length; index++) {
        if (_bZ1.Sprites[index] === null) {
            _le._kM(null);
        } else {
            var _RM1 = _FZ1(_bZ1.Sprites[index]);
            _le._kM(_RM1);
        }
    }
    for (index = 0; index < _bZ1.Backgrounds.length; index++) {
        var _m5 = _Ee._GZ1(_bZ1.Backgrounds[index]);
        var _dh = _Ee._Vg(_m5);
        if (_dh !== null) _dh._fh = _HZ1;
    }
    for (index = 0; index < _bZ1.Fonts.length; index++) {
        _Zn._1b(_bZ1.Fonts[index]);
    }
    for (index = 0; index < _bZ1.Paths.length; index++) {
        var _4B = _IZ1(_bZ1.Paths[index]);
        _5B._1b(_4B);
    }
    for (index = 0; index < _bZ1.Sounds.length; index++) {
        _2e._1b(_bZ1.Sounds[index]);
    }
    if (_bZ1.Timelines !== undefined) {
        for (index = 0; index < _bZ1.Timelines.length; index++) {
            _xs._1b(_bZ1.Timelines[index]);
        }
    }
    highscore_clear();
    _Nr();
    if (typeof gmlConst == 'function') {
        g_gmlConst = new gmlConst();
    }
    if (typeof gmlInitGlobal == 'function') {
        gmlInitGlobal();
    }
    if (_bZ1.Extensions !== undefined) {
        for (i = 0; i < _bZ1.Extensions.length; i++) {
            var _cZ1 = _bZ1.Extensions[i];
            try {
                var pFunc = eval(_cZ1.init);
                if (pFunc) pFunc();
            } catch (_xq) {
                _ja("Error calling extension initialisation function: " + _cZ1.init.name);
            }
        }
    }
}

function _fY1() {
    try {
        if (('localStorage' in window) && (window['localStorage'] !== null)) {
            _vq = true;
        }
    } catch (e) {
        _vq = false;
    }
    return _vq;
}

function _wZ1() {
    var _JZ1 = "";
    if (_Pn.Options.DisplayName !== null && _Pn.Options.DisplayName !== undefined) {
        for (var i = 0; i < _Pn.Options.DisplayName.length; i++) {
            var chr = _Pn.Options.DisplayName[i];
            if ((chr >= 'a' && chr <= 'z') || (chr >= 'A' && chr <= 'Z') || (chr >= '0' && chr <= '9') || (chr === '_')) {
                _JZ1 = _JZ1 + _Pn.Options.DisplayName[i];
            }
        }
    }
    if (_JZ1.length === 0) {
        _JZ1 = "GameMaker";
    }
    return _JZ1 + "." + g_pBuiltIn.game_id + ".";
}

function _wq(_Dg) {
    return (g_pBuiltIn._xZ1 + _Dg);
}
var _lm = 0;
var _pm = 1;
var _tm = 2;
var _KZ1 = 3;
var _mm = 4;
var _gl = 5;
var _um = 6;
var _LZ1 = 7;
var _nm = 8;
var _qm = 9;
var _vm = 10;
var _MZ1 = 11;
var _om = 12;
var _rm = 13;
var _wm = 14;
var _NZ1 = 15;

function _6l(_yj) {
    this.__2 = new Float32Array(16);
    if (_6l.arguments.length > 0) {
        for (var i = 0; i < 16; i++) {
            this.__2[i] = _yj.__2[i];
        }
    } else {
        this._Vt1();
    }
}

function _UR(_yj) {
    for (var i = 0; i < 16; i++) {
        if (this.__2[i] != _yj.__2[i]) {
            return false;
        }
    }
    return true;
}
_6l.prototype.identity = function(_Z1) {
    this.__2[1] = this.__2[2] = this.__2[3] = this.__2[4] = this.__2[6] = this.__2[7] = this.__2[8] = this.__2[9] = this.__2[11] = this.__2[12] = this.__2[13] = this.__2[14] = 0.0;
    this.__2[0] = this.__2[5] = this.__2[10] = this.__2[15] = 1.0;
};
_6l.prototype._Vt1 = function(_Z1) {
    this.__2[1] = this.__2[2] = this.__2[3] = this.__2[4] = this.__2[6] = this.__2[7] = this.__2[8] = this.__2[9] = this.__2[11] = this.__2[12] = this.__2[13] = this.__2[14] = 0.0;
    this.__2[0] = this.__2[5] = this.__2[10] = this.__2[15] = 1.0;
};
_6l.prototype._al = function(_OZ1, _PZ1, _QZ1) {
    var _RZ1 = new _7l(_QZ1);
    var _SZ1 = new _7l();
    var _TZ1 = _PZ1._UZ1(_OZ1);
    _TZ1._El();
    _RZ1._El();
    _SZ1._VZ1(_RZ1, _TZ1);
    _SZ1._El();
    _RZ1._VZ1(_TZ1, _SZ1);
    _RZ1._El();
    var _Hl = _OZ1._WZ1(_SZ1);
    var _Il = _OZ1._WZ1(_RZ1);
    var _Jl = _OZ1._WZ1(_TZ1);
    this.__2[_lm] = _SZ1._Hl;
    this.__2[_pm] = _RZ1._Hl;
    this.__2[_tm] = _TZ1._Hl;
    this.__2[_KZ1] = 0.0;
    this.__2[_mm] = _SZ1._Il;
    this.__2[_gl] = _RZ1._Il;
    this.__2[_um] = _TZ1._Il;
    this.__2[_LZ1] = 0.0;
    this.__2[_nm] = _SZ1._Jl;
    this.__2[_qm] = _RZ1._Jl;
    this.__2[_vm] = _TZ1._Jl;
    this.__2[_MZ1] = 0.0;
    this.__2[_om] = -_Hl;
    this.__2[_rm] = -_Il;
    this.__2[_wm] = -_Jl;
    this.__2[_NZ1] = 1;
};
_6l.prototype._fl = function(_XZ1, _YZ1, _ZZ1, __Z1) {
    var _Z4 = _hY1(_XZ1);
    var _0_1 = 1.0 / Math.tan(_Z4 * 0.5);
    var _I91 = _0_1 / _YZ1;
    this.__2[_lm] = _I91;
    this.__2[_pm] = this.__2[_tm] = this.__2[_KZ1] = 0.0;
    this.__2[_gl] = _0_1;
    this.__2[_mm] = this.__2[_um] = this.__2[_LZ1] = 0.0;
    this.__2[_nm] = this.__2[_qm] = 0.0;
    this.__2[_MZ1] = 1.0;
    this.__2[_vm] = __Z1 / (__Z1 - _ZZ1);
    this.__2[_om] = this.__2[_om] = this.__2[_NZ1] = 0.0;
    this.__2[_wm] = -_ZZ1 * __Z1 / (__Z1 - _ZZ1);
};
_6l.prototype._ol = function(_Va, _Wa, _ZZ1, __Z1) {
    this.__2[_lm] = 2 * _ZZ1 / _Va;
    this.__2[_pm] = this.__2[_tm] = this.__2[_KZ1] = 0.0;
    this.__2[_gl] = 2 * _ZZ1 / _Wa;
    this.__2[_mm] = this.__2[_um] = this.__2[_LZ1] = 0.0;
    this.__2[_nm] = this.__2[_qm] = 0.0;
    this.__2[_MZ1] = 1.0;
    this.__2[_vm] = __Z1 / (__Z1 - _ZZ1);
    this.__2[_om] = this.__2[_rm] = this.__2[_NZ1] = 0.0;
    this.__2[_wm] = -_ZZ1 * __Z1 / (__Z1 - _ZZ1);
};
_6l.prototype._nl = function(_Va, _Wa, _ZZ1, __Z1) {
    this.__2[_lm] = 2.0 / _Va;
    this.__2[_pm] = this.__2[_tm] = 0.0;
    this.__2[_KZ1] = 0;
    this.__2[_gl] = 2.0 / _Wa;
    this.__2[_mm] = this.__2[_um] = 0.0;
    this.__2[_LZ1] = 0;
    this.__2[_nm] = this.__2[_qm] = 0.0;
    this.__2[_vm] = 1.0 / (__Z1 - _ZZ1);
    this.__2[_MZ1] = 0;
    this.__2[_om] = this.__2[_rm] = 0.0;
    this.__2[_wm] = _ZZ1 / (_ZZ1 - __Z1);
    this.__2[_NZ1] = 1.0;
};
_6l.prototype._im = function(_1_1, _2_1) {
    this.__2[_lm] = (_1_1.__2[_lm] * _2_1.__2[_lm]) + (_1_1.__2[_pm] * _2_1.__2[_mm]) + (_1_1.__2[_tm] * _2_1.__2[_nm]) + (_1_1.__2[_KZ1] * _2_1.__2[_om]);
    this.__2[_pm] = (_1_1.__2[_lm] * _2_1.__2[_pm]) + (_1_1.__2[_pm] * _2_1.__2[_gl]) + (_1_1.__2[_tm] * _2_1.__2[_qm]) + (_1_1.__2[_KZ1] * _2_1.__2[_rm]);
    this.__2[_tm] = (_1_1.__2[_lm] * _2_1.__2[_tm]) + (_1_1.__2[_pm] * _2_1.__2[_um]) + (_1_1.__2[_tm] * _2_1.__2[_vm]) + (_1_1.__2[_KZ1] * _2_1.__2[_wm]);
    this.__2[_KZ1] = (_1_1.__2[_lm] * _2_1.__2[_KZ1]) + (_1_1.__2[_pm] * _2_1.__2[_LZ1]) + (_1_1.__2[_tm] * _2_1.__2[_MZ1]) + (_1_1.__2[_KZ1] * _2_1.__2[_NZ1]);
    this.__2[_mm] = (_1_1.__2[_mm] * _2_1.__2[_lm]) + (_1_1.__2[_gl] * _2_1.__2[_mm]) + (_1_1.__2[_um] * _2_1.__2[_nm]) + (_1_1.__2[_LZ1] * _2_1.__2[_om]);
    this.__2[_gl] = (_1_1.__2[_mm] * _2_1.__2[_pm]) + (_1_1.__2[_gl] * _2_1.__2[_gl]) + (_1_1.__2[_um] * _2_1.__2[_qm]) + (_1_1.__2[_LZ1] * _2_1.__2[_rm]);
    this.__2[_um] = (_1_1.__2[_mm] * _2_1.__2[_tm]) + (_1_1.__2[_gl] * _2_1.__2[_um]) + (_1_1.__2[_um] * _2_1.__2[_vm]) + (_1_1.__2[_LZ1] * _2_1.__2[_wm]);
    this.__2[_LZ1] = (_1_1.__2[_mm] * _2_1.__2[_KZ1]) + (_1_1.__2[_gl] * _2_1.__2[_LZ1]) + (_1_1.__2[_um] * _2_1.__2[_MZ1]) + (_1_1.__2[_LZ1] * _2_1.__2[_NZ1]);
    this.__2[_nm] = (_1_1.__2[_nm] * _2_1.__2[_lm]) + (_1_1.__2[_qm] * _2_1.__2[_mm]) + (_1_1.__2[_vm] * _2_1.__2[_nm]) + (_1_1.__2[_MZ1] * _2_1.__2[_om]);
    this.__2[_qm] = (_1_1.__2[_nm] * _2_1.__2[_pm]) + (_1_1.__2[_qm] * _2_1.__2[_gl]) + (_1_1.__2[_vm] * _2_1.__2[_qm]) + (_1_1.__2[_MZ1] * _2_1.__2[_rm]);
    this.__2[_vm] = (_1_1.__2[_nm] * _2_1.__2[_tm]) + (_1_1.__2[_qm] * _2_1.__2[_um]) + (_1_1.__2[_vm] * _2_1.__2[_vm]) + (_1_1.__2[_MZ1] * _2_1.__2[_wm]);
    this.__2[_MZ1] = (_1_1.__2[_nm] * _2_1.__2[_KZ1]) + (_1_1.__2[_qm] * _2_1.__2[_LZ1]) + (_1_1.__2[_vm] * _2_1.__2[_MZ1]) + (_1_1.__2[_MZ1] * _2_1.__2[_NZ1]);
    this.__2[_om] = (_1_1.__2[_om] * _2_1.__2[_lm]) + (_1_1.__2[_rm] * _2_1.__2[_mm]) + (_1_1.__2[_wm] * _2_1.__2[_nm]) + (_1_1.__2[_NZ1] * _2_1.__2[_om]);
    this.__2[_rm] = (_1_1.__2[_om] * _2_1.__2[_pm]) + (_1_1.__2[_rm] * _2_1.__2[_gl]) + (_1_1.__2[_wm] * _2_1.__2[_qm]) + (_1_1.__2[_NZ1] * _2_1.__2[_rm]);
    this.__2[_wm] = (_1_1.__2[_om] * _2_1.__2[_tm]) + (_1_1.__2[_rm] * _2_1.__2[_um]) + (_1_1.__2[_wm] * _2_1.__2[_vm]) + (_1_1.__2[_NZ1] * _2_1.__2[_wm]);
    this.__2[_NZ1] = (_1_1.__2[_om] * _2_1.__2[_KZ1]) + (_1_1.__2[_rm] * _2_1.__2[_LZ1]) + (_1_1.__2[_wm] * _2_1.__2[_MZ1]) + (_1_1.__2[_NZ1] * _2_1.__2[_NZ1]);
};
_6l.prototype._dm = function(_l2) {
    this._Vt1();
    var _Z4 = _hY1(_l2);
    var _Cb = Math.sin(_Z4);
    var c = Math.cos(_Z4);
    this.__2[_lm] = c;
    this.__2[_pm] = -_Cb;
    this.__2[_mm] = _Cb;
    this.__2[_gl] = c;
};
_6l.prototype._cm = function(_l2) {
    this._Vt1();
    var _Z4 = _hY1(_l2);
    var _Cb = Math.sin(_Z4);
    var c = Math.cos(_Z4);
    this.__2[_lm] = c;
    this.__2[_tm] = _Cb;
    this.__2[_nm] = -_Cb;
    this.__2[_vm] = c;
};
_6l.prototype._bm = function(_l2) {
    this._Vt1();
    var _Z4 = _hY1(_l2);
    var _Cb = Math.sin(_Z4);
    var c = Math.cos(_Z4);
    this.__2[_gl] = c;
    this.__2[_um] = -_Cb;
    this.__2[_qm] = _Cb;
    this.__2[_vm] = c;
};
_6l.prototype._9m = function(_h2, _i2, _c7) {
    this._Vt1();
    this.__2[_om] = _h2;
    this.__2[_rm] = _i2;
    this.__2[_wm] = _c7;
};
_6l.prototype._am = function(_I1, _J1, _3_1) {
    this._Vt1();
    this.__2[_lm] = _I1;
    this.__2[_gl] = _J1;
    this.__2[_vm] = _3_1;
};
_6l.prototype._em = function(_27, _l2) {
    _27._El();
    var _Z4 = _hY1(_l2);
    var c = Math.cos(_Z4);
    var _Cb = Math.sin(_Z4);
    var _4_1 = 1.0 - c;
    this._Vt1();
    this.__2[0] = (_4_1 * _27._Hl * _27._Hl + c);
    this.__2[1] = (_4_1 * _27._Hl * _27._Il + _Cb * _27._Jl);
    this.__2[2] = (_4_1 * _27._Hl * _27._Jl - _Cb * _27._Il);
    this.__2[4] = (_4_1 * _27._Hl * _27._Il - _Cb * _27._Jl);
    this.__2[5] = (_4_1 * _27._Il * _27._Il + c);
    this.__2[6] = (_4_1 * _27._Il * _27._Jl + _Cb * _27._Hl);
    this.__2[8] = (_4_1 * _27._Hl * _27._Jl + _Cb * _27._Il);
    this.__2[9] = (_4_1 * _27._Il * _27._Jl - _Cb * _27._Hl);
    this.__2[10] = (_4_1 * _27._Jl * _27._Jl + c);
};
_6l.prototype._5_1 = function(_h2, _i2, _I1, _J1, _K1) {
    this._Vt1();
    var _Z4 = _hY1(_K1);
    var _Cb = Math.sin(_Z4);
    var c = Math.cos(_Z4);
    this.__2[_lm] = c;
    this.__2[_pm] = -_Cb;
    this.__2[_mm] = _Cb;
    this.__2[_gl] = c;
    this.__2[_lm] *= _I1;
    this.__2[_gl] *= _J1;
    this.__2[_om] = _h2;
    this.__2[_rm] = _i2;
};
_6l.prototype._Gm = function(_h2, _i2, _c7, _zj, _Aj, _Bj, _Ie, _Je, _Cj) {
    var _6_1 = Math.sin(_zj);
    var _7_1 = Math.cos(_zj);
    var _8_1 = Math.sin(_Aj);
    var _9_1 = Math.cos(_Aj);
    var _a_1 = Math.sin(_Bj);
    var _b_1 = Math.cos(_Bj);
    var _c_1 = -_a_1 * -_6_1;
    var _d_1 = _b_1 * -_6_1;
    this.__2[0] = ((_b_1 * _9_1) + (_c_1 * -_8_1)) * _Ie;
    this.__2[4] = (-_a_1 * _7_1) * _Ie;
    this.__2[8] = ((_b_1 * _8_1) + (_c_1 * _9_1)) * _Ie;
    this.__2[12] = _h2;
    this.__2[1] = ((_a_1 * _9_1) + (_d_1 * -_8_1)) * _Je;
    this.__2[5] = (_b_1 * _7_1) * _Je;
    this.__2[9] = ((_a_1 * _8_1) + (_d_1 * _9_1)) * _Je;
    this.__2[13] = _i2;
    this.__2[2] = (_7_1 * -_8_1) * _Cj;
    this.__2[6] = _6_1 * _Cj;
    this.__2[10] = (_7_1 * _9_1) * _Cj;
    this.__2[14] = _c7;
    this.__2[3] = this.__2[7] = this.__2[11] = 0.0;
    this.__2[15] = 1.0;
};

function _5h() {
    this.x = 0;
    this.y = 0;
    this.w = 0;
    this.h = 0;
    this.XOffset = 0;
    this.YOffset = 0;
    this.CropWidth = 0;
    this.CropHeight = 0;
    this.ow = 0;
    this.oh = 0;
    this.tp = 0;
    this._fh = _HZ1;
}

function _PM() {}

function _HZ1(_HM) {
    this.x = _HM.x;
    this.y = _HM.y;
    this.w = _HM.w;
    this.h = _HM.h;
    this.XOffset = _HM.XOffset;
    this.YOffset = _HM.YOffset;
    this.CropWidth = _HM.CropWidth;
    this.CropHeight = _HM.CropHeight;
    this.ow = _HM.ow;
    this.oh = _HM.oh;
    this.tp = _HM.tp;
}

function _e_1() {
    this.pName = "";
    this.width = 0;
    this.height = 0;
    this.bboxLeft = 0;
    this.bboxRight = 0;
    this.bboxBottom = 0;
    this.bboxTop = 0;
    this.transparent = 0;
    this.smooth = 0;
    this.preload = 0;
    this.bboxMode = 0;
    this.colCheck = 0;
    this.xOrigin = 0;
    this.yOrigin = 0;
    this._f_1 = [];
}

function _g_1() {
    this.pName = "<object>";
    this.spriteIndex = 0;
    this.visible = true;
    this.solid = true;
    this.depth = 0;
    this.persistent = false;
    this.parent = -1;
    this.spritemask = false;
}

function _h_1() {
    this.x = 0;
    this.y = 0;
    this.index = 0;
    this.id = 0;
    this.pCode = null;
}

function _i_1() {
    this.x = 0;
    this.y = 0;
    this.index = 0;
    this.xo = 0;
    this.yo = 0;
    this.w = 0;
    this.h = 0;
    this.depth = 0;
    this.id = 0;
    this.scaleX = 1.0;
    this.scaleY = 1.0;
    this.colour = -1;
}

function _j_1() {
    this.visible = false;
    this.xview = 0;
    this.yview = 0;
    this.wview = 0;
    this.hview = 0;
    this.xport = 0;
    this.yport = 0;
    this.wport = 0;
    this.hport = 0;
    this.hborder = 0;
    this.vborder = 0;
    this.hspeed = 0;
    this.vspeed = 0;
    this.index = 0;
}

function _k_1() {
    this.visible = false;
    this.foreground = 0;
    this.index = 0;
    this.x = 0;
    this.y = 0;
    this._l_1 = 0;
    this._m_1 = 0;
    this._n_1 = 0;
    this._o_1 = 0;
    this.stretch = 0;
}

function _p_1() {
    this.pName = "<room>";
    this.pCaption = "Game Maker Room";
    this.width = 640;
    this.height = 480;
    this.speed = 30;
    this.persistent = false;
    this.colour = 0;
    this.showColour = false;
    this.pCode = null;
    this.enableViews = false;
    this.pInstances = [];
    this._q_1 = [];
    this._3a = [];
    this._r_1 = [];
}

function _s_1() {
    this.GMObjects = [];
    this.GMRooms = [];
    this.Textures = [];
    this.Sprites = [];
}

function _t_1() {
    _56("execute_string()");
}

function _u_1() {
    _56("execute_file()");
}

function show_info() {
    _56("show_info()");
}

function load_info(_ej) {
    _56("load_info()");
}

function script_get_text(_Q4) {
    _56("script_get_text()");
}

function game_save(name) {
    _56("game_save()");
}

function game_load(name) {
    _56("game_load()");
}

function game_save_buffer(buffer) {
    _56("game_save_buffer()");
}

function game_load_buffer(buffer) {
    _56("game_load_buffer()");
}

function font_delete(id) {
    _Un("font_delete()");
}

function splash_show_video(_ej, loop) {
    _56("splash_show_video()");
}

function splash_show_text(_ej, _IE1) {
    _56("splash_show_text()");
}

function splash_show_image(_ej, _IE1) {
    _56("splash_show_image()");
}

function splash_show_web(_zp, _IE1) {
    _56("splash_show_web()");
}

function splash_set_main(_v_1) {
    _56("splash_set_main()");
}

function splash_set_scale(scale) {
    _56("splash_set_scale()");
}

function splash_set_cursor(_w_1) {
    _56("splash_set_cursor()");
}

function splash_set_color(_F4) {
    _56("splash_set_color()");
}
var _x_1 = splash_set_color;

function splash_set_caption(_y_1) {
    _56("splash_set_caption()");
}

function splash_set_fullscreen(_z_1) {
    _56("splash_set_fullscreen()");
}

function splash_set_border(border) {
    _56("splash_set_border()");
}

function splash_set_size(w, h) {
    _56("splash_set_size()");
}

function splash_set_position(x, y) {
    _56("splash_set_position()");
}

function splash_set_adapt(_A_1) {
    _56("splash_set_adapt()");
}

function splash_set_top(top) {
    _56("splash_set_top()");
}

function splash_set_interrupt(_B_1) {
    _56("splash_set_interrupt()");
}

function splash_set_stop_key(stop) {
    _56("splash_set_stop_key()");
}

function splash_set_stop_mouse(stop) {
    _56("splash_set_stop_mouse()");
}

function splash_set_close_button(_C_1) {
    _56("splash_set_close_button()");
}

function screen_redraw() {
    _56("screen_redraw()");
}

function screen_refresh() {
    _56("screen_refresh()");
}

function set_automatic_draw(value) {
    _56("set_automatic_draw()");
}

function set_synchronization(value) {
    _56("set_synchronization()");
}

function screen_wait_vsync() {
    _56("screen_wait_vsync()");
}

function window_set_region_size(w, h, _D_1) {
    _56("window_set_region_size()");
}

function window_get_region_width() {
    _56("window_get_region_width()");
}

function window_get_region_height() {
    _56("window_get_region_height()");
}

function screen_save(_ej) {
    _Un("screen_save()");
}

function screen_save_part(_ej, x, y, w, h) {
    _Un("screen_save_part()");
}

function transition_define(kind, name) {
    _Un("transition_define()");
}

function transition_exists(kind) {
    _Un("transition_exists()");
}

function display_get_colordepth() {
    _56("display_get_colordepth()");
}

function display_get_frequency() {
    _56("display_get_frequency()");
}

function display_set_size(w, h) {
    _56("display_set_size()");
}

function display_set_colordepth(_E_1) {
    _56("display_set_colordepth()");
}

function display_set_frequency(_Ek1) {
    _56("display_set_frequency()");
}

function display_set_all(w, h, _Ek1, _E_1) {
    _56("display_set_all()");
}

function display_test_all(w, h, _Ek1, _E_1) {
    _56("display_test_all()");
}

function display_reset(_F_1) {
    _56("display_reset()");
}

function display_mouse_set(x, y) {
    _56("display_mouse_set()");
}

function clipboard_has_text() {
    _Un("clipboard_has_text()");
}

function clipboard_get_text() {
    _Un("clipboard_get_text()");
}

function clipboard_set_text(_xc) {
    _Un("clipboard_set_text()");
}

function set_program_priority(_sI) {
    _Un("set_program_priority()");
}

function joystick_exists(id) {
    return false;
}

function joystick_name(id) {
    _56("joystick_name()");
}

function joystick_axes(id) {
    _56("joystick_axes()");
}

function joystick_buttons(id) {
    _56("joystick_buttons()");
}

function joystick_has_pov(id) {
    _56("joystick_has_pov()");
}

function joystick_direction(id) {
    _56("joystick_direction()");
}

function joystick_check_button(id, _93) {
    _56("joystick_check_button()");
}

function joystick_xpos(id) {
    _56("joystick_xpos()");
}

function joystick_ypos(id) {
    _56("joystick_ypos()");
}

function joystick_zpos(id) {
    _56("joystick_zpos()");
}

function joystick_rpos(id) {
    _56("joystick_rpos()");
}

function joystick_upos(id) {
    _56("joystick_upos()");
}

function joystick_vpos(id) {
    _56("joystick_vpos()");
}

function joystick_pov(id) {
    _56("joystick_pov()");
}

function io_handle() {
    _56("io_handle()");
}

function mouse_wait() {
    _56("mouse_wait()");
}

function keyboard_wait() {
    _56("keyboard_wait()");
}

function keyboard_get_numlock() {
    _56("keyboard_get_numlock()");
}

function keyboard_set_numlock(_G_1) {
    _56("keyboard_set_numlock()");
}

function background_save(_Q4, _ej) {
    _56("background_save()");
}

function sprite_save_strip(_Q4, _ej) {
    _56("sprite_save_strip()");
}

function object_add() {
    _56("object_add()");
}

function object_delete(_Q4) {
    _56("object_delete()");
}

function object_event_add(_Q4, _H_1, _I_1, _J_1) {
    _56("object_event_add()");
}

function object_event_clear(_Q4,
    _H_1, _I_1) {
    _56("object_event_clear()");
}

function part_changer_create(_5M1) {
    _56("part_changer_create()");
}

function part_changer_destroy(_5M1, _F1) {
    _56("part_changer_destroy()");
}

function part_changer_destroy_all(_5M1) {
    _56("part_changer_destroy_all()");
}

function part_changer_exists(_5M1, _F1) {
    _56("part_changer_exists()");
}

function part_changer_clear(_5M1, _F1) {
    _56("part_changer_clear()");
}

function part_changer_region(_5M1, _F1, _Zf, __f, _0g, _1g, _ef) {
    _56("part_changer_region()");
}

function part_changer_types(_5M1,
    _F1, _K_1, _L_1) {
    _56("part_changer_types()");
}

function part_changer_kind(_5M1, _F1, _Q6) {
    _56("part_changer_kind()");
}

function part_deflector_create(_UU) {
    _56("part_deflector_create()");
}

function part_deflector_destroy(_UU, _Q4) {
    _56("part_deflector_destroy()");
}

function part_deflector_destroy_all(_UU) {
    _56("part_deflector_destroy_all()");
}

function part_deflector_exists(_UU, _Q4) {
    _56("part_deflector_exists()");
}

function part_deflector_clear(_UU, _Q4) {
    _56("part_deflector_clear()");
}

function part_deflector_region(_UU,
    _Q4, _gB, _hB, _iB, _jB) {
    _56("part_deflector_region()");
}

function part_deflector_kind(_UU, _Q4, kind) {
    _56("part_deflector_kind()");
}

function part_deflector_friction(_UU, _Q4, friction) {
    _56("part_deflector_friction()");
}

function part_destroyer_create(_UU) {
    _56("part_destroyer_create()");
}

function part_destroyer_destroy(_UU, _Q4) {
    _56("part_destroyer_destroy()");
}

function part_destroyer_destroy_all(_UU) {
    _56("part_destroyer_destroy_all()");
}

function part_destroyer_exists(_UU, _Q4) {
    _56("part_destroyer_exists()");
}

function part_destroyer_clear(_UU,
    _Q4) {
    _56("part_destroyer_clear()");
}

function part_destroyer_region(_UU, _Q4, _gB, _hB, _iB, _jB, _jf) {
    _56("part_destroyer_region()");
}

function part_attractor_create(_UU) {
    _56("part_attractor_create()");
}

function part_attractor_destroy(_UU, _Q4) {
    _56("part_attractor_destroy()");
}

function part_attractor_destroy_all(_UU) {
    _56("part_attractor_destroy_all()");
}

function part_attractor_exists(_UU, _Q4) {
    _56("part_attractor_exists()");
}

function part_attractor_clear(_UU, _Q4) {
    _56("part_attractor_clear()");
}

function part_attractor_position(_UU,
    _Q4, x, y) {
    _56("part_attractor_position()");
}

function part_attractor_force(_UU, _Q4, _a31, _0j, kind, _M_1) {
    _56("part_attractor_force()");
}

function execute_program(_0m1, _Ce, _N_1) {
    _56("execute_program()");
}

function execute_shell(_0m1, _Ce) {
    _56("execute_shell()");
}
var secure_mode = true;

function registry_write_string(name, _xc) {
    _56("registry_write_string()");
}

function registry_write_real(name, x) {
    _56("registry_write_real()");
}

function registry_read_string(name) {
    _56("registry_read_string()");
}

function registry_read_real(name) {
    _56("registry_read_real()");
}

function registry_exists(name) {
    _56("registry_exists()");
}

function registry_write_string_ext(_Fc, name, _xc) {
    _56("registry_write_string_ext()");
}

function registry_write_real_ext(_Fc, name, x) {
    _56("registry_write_real_ext()");
}

function registry_read_string_ext(_Fc, name) {
    _56("registry_read_string_ext()");
}

function registry_read_real_ext(_Fc, name) {
    _56("registry_read_real_ext()");
}

function registry_exists_ext(_Fc, name) {
    _56("registry_exists_ext()");
}

function registry_set_root(_31) {
    _56("registry_set_root()");
}

function message_text_font(_a1, _l7, _oh, __r) {
    _56("message_text_font()");
}

function message_button(_73) {
    _56("message_button()");
}

function message_button_font(_a1, _l7, _oh, __r) {
    _56("message_button_font()");
}

function message_input_font(_a1, _l7, _oh, __r) {
    _56("message_input_font()");
}

function _O_1() {
    _56("message_text_charset()");
}

function message_mouse_color(_F4) {
    _56("message_mouse_color()");
}

function message_input_color(_F4) {
    _56("message_input_color()");
}

function message_caption(_C_1, _xc) {
    _56("message_caption()");
}

function message_position(x, y) {
    _56("message_position()");
}

function message_size(w, h) {
    _56("message_size()");
}

function show_menu(_xc, _H21) {
    _56("show_menu()");
}

function show_menu_pos(x, y, _xc, _H21) {
    _56("show_menu_pos()");
}

function get_color(_P_1) {
    _56("get_color()");
}

function get_open_filename(_041, _ej) {
    _56("get_open_filename()");
}

function get_save_filename(_041, _ej) {
    _56("get_save_filename()");
}

function get_directory(_Q_1) {
    _56("get_directory()");
}

function get_directory_alt(_R_1, _31) {
    _56("get_directory_alt()");
}

function show_error(_xc, _S_1) {
    _56("show_error()");
}

function sound_3d_set_sound_position(_1e, x, y, _96) {
    _56("sound_3d_set_sound_position()");
}

function sound_3d_set_sound_velocity(_1e, x, y, _96) {
    _56("sound_3d_set_sound_velocity()");
}

function sound_3d_set_sound_distance(_1e, _T_1, _U_1) {
    _56("sound_3d_set_sound_distance()");
}

function sound_3d_set_sound_cone(_1e, x, y, _96, _V_1, _W_1, _X_1) {
    _56("sound_3d_set_sound_cone()");
}

function sound_background_tempo(_Wi1) {
    _56("sound_background_tempo()");
}

function sound_pan(index,
    value) {
    _56("sound_pan()");
}

function sound_set_search_directory(_yB) {
    _56("sound_set_search_directory()");
}

function sound_effect_set(_1e, _Y_1) {
    _56("sound_effect_set()");
}

function sound_effect_chorus(_1e, _Z_1, depth, ___1, _Ek1, _002, _IE1, _102) {
    _56("sound_effect_chorus()");
}

function sound_effect_echo(_1e, _Z_1, ___1, _202, _302, _402) {
    _56("sound_effect_echo()");
}

function sound_effect_flanger(_1e, _Z_1, depth, ___1, _Ek1, _002, _IE1, _102) {
    _56("sound_effect_flanger()");
}

function sound_effect_gargle(_1e, _wL, _002) {
    _56("sound_effect_gargle()");
}

function sound_effect_reverb(_1e, gain, _vB1, _6e, _qe1) {
    _56("sound_effect_reverb()");
}

function sound_effect_compressor(_1e, gain, _502, _602, _702, _qe1, _IE1) {
    _56("sound_effect_compressor()");
}

function sound_effect_equalizer(_1e, _oT, _802, gain) {
    _56("sound_effect_equalizer()");
}

function sound_discard(index) {
    _56("sound_discard()");
}

function sound_restore(index) {
    _56("sound_restore()");
}

function sound_get_preload(index) {
    _56("sound_get_preload()");
}

function cd_init() {
    _56("cd_init()");
}

function cd_present() {
    _56("cd_present()");
}

function cd_number() {
    _56("cd_number()");
}

function cd_playing() {
    _56("cd_playing()");
}

function cd_paused() {
    _56("cd_paused()");
}

function cd_track() {
    _56("cd_track()");
}

function cd_length() {
    _56("cd_length()");
}

function cd_track_length(_X2) {
    _56("cd_track_length()");
}

function cd_position() {
    _56("cd_position()");
}

function cd_track_position() {
    _56("cd_track_position()");
}

function cd_play(first, last) {
    _56("cd_play()");
}

function cd_stop() {
    _56("cd_stop()");
}

function cd_pause() {
    _56("cd_pause()");
}

function cd_resume() {
    _56("cd_resume()");
}

function cd_set_position(_5c) {
    _56("cd_set_position()");
}

function cd_set_track_position(_5c) {
    _56("cd_set_track_position()");
}

function cd_open_door() {
    _56("cd_open_door()");
}

function cd_close_door() {
    _56("cd_close_door()");
}

function MCI_command(_xc) {
    _56("MCI_command()");
}

function texture_preload(_66) {
    _56("texture_preload()");
}

function texture_set_priority(_66, _902) {
    _56("texture_set_priority()");
}

function texture_get_width(_66) {
    _56("texture_get_width()");
}

function texture_get_height(_66) {
    _56("texture_get_height()");
}

function texture_set_blending(_aO) {
    _56("texture_set_blending()");
}

function texture_set_repeat(repeat) {
    _56("texture_set_repeat()");
}

function _ql() {
    _56("texture_get_repeat()");
}

function texture_set_repeat_ext(repeat) {
    _56("texture_set_repeat_ext()");
}

function texture_set_interpolation(_a02) {
    _56("texture_set_interpolation()");
}

function texture_set_interpolation_ext() {
    _56("texture_set_interpolation_ext()");
}

function file_open_read() {
    _56("file_open_read()");
}

function file_open_write() {
    _56("file_open_write()");
}

function file_open_append() {
    _56("file_open_append()");
}

function file_read_real() {
    _56("file_read_real()");
}

function file_read_string() {
    _56("file_read_string()");
}

function file_readln() {
    _56("file_readln()");
}

function file_write_real() {
    _56("file_write_real()");
}

function file_write_string() {
    _56("file_write_string()");
}

function file_writeln() {
    _56("file_writeln()");
}

function file_eof() {
    _56("file_eof()");
}

function _b02() {
    _56("file_eoln()");
}

function file_close() {
    _56("file_close()");
}

function steam_activate_overlay() {
    _56("steam_activate_overlay()");
    return -1;
}

function steam_is_overlay_enabled() {
    _56("steam_is_overlay_enabled()");
    return -1;
}

function steam_is_overlay_activated() {
    _56("steam_is_overlay_activated()");
    return -1;
}

function steam_get_persona_name() {
    _56("steam_get_persona_name()");
    return "";
}

function steam_initialised() {
    _56("steam_initialised()");
    return -1;
}

function steam_is_cloud_enabled_for_app() {
    _56("steam_is_cloud_enabled_for_app()");
    return -1;
}

function steam_is_cloud_enabled_for_account() {
    _56("steam_is_cloud_enabled_for_account()");
    return -1;
}

function steam_file_persisted() {
    _56("steam_file_persisted()");
    return -1;
}

function steam_get_quota_total() {
    _56("steam_get_quota_total()");
    return -1;
}

function steam_get_quota_free() {
    _56("steam_get_quota_free()");
    return -1;
}

function steam_file_write() {
    _56("steam_file_write()");
    return -1;
}

function steam_file_write_file() {
    _56("steam_file_write_file()");
    return -1;
}

function steam_file_read() {
    _56("steam_file_read()");
    return "";
}

function steam_file_delete() {
    _56("steam_file_delete()");
    return -1;
}

function steam_file_exists() {
    _56("steam_file_exists()");
    return -1;
}

function steam_file_size() {
    _56("steam_file_size()");
    return -1;
}

function steam_file_share() {
    _56("steam_file_share()");
    return -1;
}

function steam_publish_workshop_file() {
    _56("steam_publish_workshop_file()");
    return -1;
}

function steam_is_screenshot_requested() {
    _56("steam_is_screenshot_requested()");
    return -1;
}

function steam_send_screenshot() {
    _56("steam_send_screenshot()");
    return -1;
}

function steam_is_user_logged_on() {
    _56("steam_is_user_logged_on()");
    return -1;
}

function steam_get_user_steam_id() {
    _56("steam_get_user_steam_id()");
    return -1;
}

function steam_user_owns_dlc() {
    _56("steam_user_owns_dlc()");
    return -1;
}

function steam_user_installed_dlc() {
    _56("steam_user_installed_dlc()");
    return -1;
}

function steam_set_achievement() {
    _56("steam_set_achievement()");
    return -1;
}

function steam_get_achievement() {
    _56("steam_get_achievement()");
    return -1;
}

function steam_clear_achievement() {
    _56("steam_clear_achievement()");
    return -1;
}

function steam_set_stat_int() {
    _56("steam_set_stat_int()");
    return -1;
}

function steam_set_stat_float() {
    _56("steam_set_stat_float()");
    return -1;
}

function steam_set_stat_avg_rate() {
    _56("steam_set_stat_avg_rate()");
    return -1;
}

function steam_get_stat_int() {
    _56("steam_get_stat_int()");
    return -1;
}

function steam_get_stat_float() {
    _56("steam_get_stat_float()");
    return -1;
}

function steam_get_stat_avg_rate() {
    _56("steam_get_stat_avg_rate()");
    return -1;
}

function steam_reset_all_stats() {
    _56("steam_reset_all_stats()");
    return -1;
}

function steam_reset_all_stats_achievements() {
    _56("steam_reset_all_stats_achievements()");
    return -1;
}

function steam_stats_ready() {
    _56("steam_stats_ready()");
    return -1;
}

function steam_create_leaderboard() {
    _56("steam_create_leaderboard()");
    return -1;
}

function steam_upload_score() {
    _56("steam_upload_score()");
    return -1;
}

function steam_download_scores_around_user() {
    _56("steam_download_scores_around_user()");
    return -1;
}

function steam_download_scores() {
    _56("steam_download_scores()");
    return -1;
}

function steam_download_friends_scores() {
    _56("steam_download_friends_scores()");
    return -1;
}

function steam_upload_score_buffer() {
    _56("steam_upload_score_buffer()");
    return -1;
}

function steam_activate_overlay_browser() {
    _56("steam_activate_overlay_browser()");
    return -1;
}

function steam_activate_overlay_user() {
    _56("steam_activate_overlay_user()");
    return -1;
}

function steam_activate_overlay_store() {
    _56("steam_activate_overlay_store()");
    return -1;
}

function steam_get_user_persona_name() {
    _56("steam_get_user_persona_name()");
    return -1;
}

function steam_get_app_id() {
    _56("steam_get_app_id()");
    return -1;
}

function steam_get_user_account_id() {
    _56("steam_get_user_account_id()");
    return -1;
}

function steam_ugc_download() {
    _56("steam_ugc_download()");
    return -1;
}

function steam_ugc_create_item() {
    _56("steam_ugc_create_item()");
    return -1;
}

function steam_ugc_start_item_update() {
    _56("steam_ugc_start_item_update()");
    return -1;
}

function steam_ugc_set_item_title() {
    _56("steam_ugc_set_item_title()");
    return -1;
}

function steam_ugc_set_item_description() {
    _56("steam_ugc_set_item_description()");
    return -1;
}

function steam_ugc_set_item_visibility() {
    _56("steam_ugc_set_item_visibility()");
    return -1;
}

function steam_ugc_set_item_tags() {
    _56("steam_ugc_set_item_tags()");
    return -1;
}

function steam_ugc_set_item_content() {
    _56("steam_ugc_set_item_content()");
    return -1;
}

function steam_ugc_set_item_preview() {
    _56("steam_ugc_set_item_preview()");
    return -1;
}

function steam_ugc_submit_item_update() {
    _56("steam_ugc_submit_item_update()");
    return -1;
}

function steam_ugc_get_item_update_progress() {
    _56("steam_ugc_get_item_update_progress()");
    return -1;
}

function steam_ugc_subscribe_item() {
    _56("steam_ugc_subscribe_item()");
    return -1;
}

function steam_ugc_unsubscribe_item() {
    _56("steam_ugc_unsubscribe_item()");
    return -1;
}

function steam_ugc_num_subscribed_items() {
    _56("steam_ugc_num_subscribed_items()");
    return -1;
}

function steam_ugc_get_subscribed_items() {
    _56("steam_ugc_get_subscribed_items()");
    return -1;
}

function steam_ugc_get_item_install_info() {
    _56("steam_ugc_get_item_install_info()");
    return -1;
}

function steam_ugc_get_item_update_info() {
    _56("steam_ugc_get_item_update_info()");
    return -1;
}

function steam_ugc_request_item_details() {
    _56("steam_ugc_request_item_details()");
    return -1;
}

function steam_ugc_create_query_user() {
    _56("steam_ugc_create_query_user()");
    return -1;
}

function steam_ugc_create_query_user_ex() {
    _56("steam_ugc_create_query_user_ex()");
    return -1;
}

function steam_ugc_create_query_all() {
    _56("steam_ugc_create_query_all()");
    return -1;
}

function steam_ugc_create_query_all_ex() {
    _56("steam_ugc_create_query_all_ex()");
    return -1;
}

function steam_ugc_query_set_cloud_filename_filter() {
    _56("steam_ugc_query_set_cloud_filename_filter()");
    return -1;
}

function steam_ugc_query_set_match_any_tag() {
    _56("steam_ugc_query_set_match_any_tag()");
    return -1;
}

function steam_ugc_query_set_search_text() {
    _56("steam_ugc_query_set_search_text()");
    return -1;
}

function steam_ugc_query_set_ranked_by_trend_days() {
    _56("steam_ugc_query_set_ranked_by_trend_days()");
    return -1;
}

function steam_ugc_query_add_required_tag() {
    _56("steam_ugc_query_add_required_tag()");
    return -1;
}

function steam_ugc_query_add_excluded_tag() {
    _56("steam_ugc_query_add_excluded_tag()");
    return -1;
}

function steam_ugc_query_set_return_long_description() {
    _56("steam_ugc_query_set_return_long_description()");
    return -1;
}

function steam_ugc_query_set_return_total_only() {
    _56("steam_ugc_query_set_return_total_only()");
    return -1;
}

function steam_ugc_query_set_allow_cached_response() {
    _56("steam_ugc_query_set_allow_cached_response()");
    return -1;
}

function steam_ugc_send_query(_c02) {
    _56("steam_ugc_send_query( ugc_query_handle )");
    return -1;
}

function draw_set_alpha_test() {
    _56("draw_set_alpha_test()");
}

function draw_set_alpha_test_ref_value() {
    _56("draw_set_alpha_test_ref_value()");
}

function draw_get_alpha_test() {
    _56("draw_get_alpha_test()");
    return 0;
}

function draw_get_alpha_test_ref_value() {
    _56("draw_get_alpha_test_ref_value()");
    return 0;
}

function playhaven_add_notification_badge() {
    _56("playhaven_add_notification_badge()");
}

function playhaven_hide_notification_badge() {
    _56("playhaven_hide_notification_badge()");
}

function playhaven_update_notification_badge() {
    _56("playhaven_update_notification_badge()");
}

function playhaven_position_notification_badge() {
    _56("playhaven_position_notification_badge()");
}

function pocketchange_display_reward() {
    _56("pocketchange_display_reward()");
}

function pocketchange_display_shop() {
    _56("pocketchange_display_shop()");
}

function ads_event() {
    _56("ads_event()");
}

function ads_event_preload() {
    _56("ads_event_preload()");
}

function ads_get_display_width() {
    _56("ads_get_display_width()");
}

function ads_get_display_height() {
    _56("ads_get_display_height()");
}

function ads_interstitial_available() {
    _56("ads_interstitial_available()");
    return false;
}

function ads_interstitial_display() {
    _56("ads_interstitial_display()");
}

function ads_set_reward_callback() {
    _56("ads_set_reward_callback()");
}

function zip_unzip() {
    _56("zip_unzip()");
}

function win8_settingscharm_add_xaml_entry() {
    _56("win8_settingscharm_add_xaml_entry()");
}

function win8_settingscharm_set_xaml_property() {
    _56("win8_settingscharm_set_xaml_property()");
}

function win8_settingscharm_get_xaml_property() {
    _56("win8_settingscharm_get_xaml_property()");
}

function winphone_license_trial_version() {
    _56("winphone_license_trial_version()");
}

function gml_release_mode() {
    return 1;
}

function push_local_notification() {
    _56("push_local_notification()");
}

function push_get_first_local_notification() {
    _56("push_get_first_local_notification()");
    return -1;
}

function push_get_next_local_notification() {
    _56("push_get_next_local_notification()");
    return -1;
}

function push_cancel_local_notification() {
    _56("push_cancel_local_notification()");
    return -1;
}

function audio_create_sync_group() {
    _56("audio_create_sync_group()");
    return -1;
}

function audio_play_in_sync_group() {
    _56("audio_play_in_sync_group()");
}

function audio_start_sync_group() {
    _56("audio_start_sync_group()");
}

function audio_pause_sync_group() {
    _56("audio_pause_sync_group()");
}

function audio_resume_sync_group() {
    _56("audio_resume_sync_group()");
}

function audio_stop_sync_group() {
    _56("audio_stop_sync_group()");
}

function audio_sync_group_get_track_pos() {
    _56("audio_sync_group_get_track_pos()");
    return -1;
}

function audio_sync_group_is_playing() {
    _56("audio_sync_group_is_playing()");
    return -1;
}

function _7l(_d02, _e02, _f02) {
    if (_7l.arguments.length > 0) {
        if (_7l.arguments.length == 3) {
            this._Hl = _d02;
            this._Il = _e02;
            this._Jl = _f02;
        } else {
            this._Hl = _d02._Hl;
            this._Il = _d02._Il;
            this._Jl = _d02._Jl;
        }
    } else {
        this._Hl = 1.0;
        this._Il = 0.0;
        this._Jl = 0.0;
    }
}
_7l.prototype._g02 = function(_Z1) {
    return this._Hl == _Z1._Hl && this._Il == _Z1._Il && this._Jl == _Z1._Jl;
};
_7l.prototype._1b = function(_Z1) {
    return new _7l(this._Hl + _Z1._Hl, this._Il + _Z1._Il, this._Jl + _Z1._Jl);
};
_7l.prototype._h02 = function() {
    return new _7l(-this._Hl, -this._Il, -this._Jl);
};
_7l.prototype._UZ1 = function(_Z1) {
    return new _7l(this._Hl - _Z1._Hl, this._Il - _Z1._Il, this._Jl - _Z1._Jl);
};
_7l.prototype._i02 = function(_Z1) {
    return this._Hl * _Z1._Hl + this._Il * _Z1._Il + this._Jl * _Z1._Jl;
};
_7l.prototype._KC = function(_dn) {
    return new _7l(_dn * this._Hl, _dn * this._Il, _dn * this._Jl);
};
_7l.prototype._El = function() {
    var _On = 1.0 / Math.sqrt((this._Hl * this._Hl) + (this._Il * this._Il) + (this._Jl * this._Jl));
    this._Hl = this._Hl * _On;
    this._Il = this._Il * _On;
    this._Jl = this._Jl * _On;
};
_7l.prototype._j02 = function(_k02) {
    var x, y, _96;
    x = (this._Il * _k02._Jl) - (this._Jl * _k02._Il);
    y = (this._Jl * _k02._Hl) - (this._Hl * _k02._Jl);
    _96 = (this._Hl * _k02._Il) - (this._Il * _k02._Hl);
    return new _7l(x, y, _96);
};
_7l.prototype._VZ1 = function(_l02, _m02) {
    this._Hl = (_l02._Il * _m02._Jl) - (_l02._Jl * _m02._Il);
    this._Il = (_l02._Jl * _m02._Hl) - (_l02._Hl * _m02._Jl);
    this._Jl = (_l02._Hl * _m02._Il) - (_l02._Il * _m02._Hl);
};
_7l.prototype._WZ1 = function(_k02) {
    return (this._Hl * _k02._Hl) + (this._Il * _k02._Il) + (this._Jl * _k02._Jl);
};
(function(global, _Sk1, _n02) {
    'use strict';

    function _o02(_p02) {
        if (!_p02) return;
        if (!_p02.setTargetValueAtTime) _p02.setTargetValueAtTime = _p02.setTargetAtTime;
    }
    if(window.hasOwnProperty('AudioContext')||(window.hasOwnProperty('webkitAudioContext')&&window.webkitAudioContext.prototype.createGainNode===undefined)){

        if(window.hasOwnProperty('AudioContext')) {
            window.webkitAudioContext=AudioContext;
        } else {
            window.AudioContext=webkitAudioContext;
        }

        AudioContext.prototype._q02 = AudioContext.prototype.createGain;
        AudioContext.prototype.createGain = function() {
            var _2d = this._q02();
            _o02(_2d.gain);
            return _2d;
        };
        AudioContext.prototype._r02 = AudioContext.prototype.createDelay;
        AudioContext.prototype.createDelay = function() {
            var _2d = this._r02();
            _o02(_2d.delayTime);
            return _2d;
        };
        AudioContext.prototype._s02 = AudioContext.prototype.createBufferSource;
        AudioContext.prototype.createBufferSource = function() {
            var _2d = this._s02();
            if (!_2d.noteOn) _2d.noteOn = _2d.start;
            if (!_2d.noteGrainOn) _2d.noteGrainOn = _2d.start;
            if (!_2d.noteOff) _2d.noteOff = _2d.stop;
            _o02(_2d.playbackRate);
            return _2d;
        };
        AudioContext.prototype._t02 = AudioContext.prototype._u02;
        AudioContext.prototype._u02 = function() {
            var _2d = this._t02();
            _o02(_2d._702);
            _o02(_2d._v02);
            _o02(_2d._qe1);
            _o02(_2d._w02);
            _o02(_2d._502);
            _o02(_2d._602);
            return _2d;
        };
        AudioContext.prototype._x02 = AudioContext.prototype._y02;
        AudioContext.prototype._y02 = function() {
            var _2d = this._x02();
            _o02(_2d._Ek1);
            _o02(_2d._z02);
            _o02(_2d._NZ);
            _o02(_2d.gain);
            var _A02 = ['LOWPASS', 'HIGHPASS', 'BANDPASS', 'LOWSHELF', 'HIGHSHELF', 'PEAKING', 'NOTCH', 'ALLPASS'];
            for (var i = 0; i < _A02.length; ++i) {
                var _B02 = _A02[i];
                var _C02 = _B02.toLowerCase();
                if (!_2d.prototype.hasOwnProperty(_B02)) {
                    _2d.prototype[_B02] = _C02;
                }
            }
            return _2d;
        };
        if (AudioContext.prototype.hasOwnProperty('createOscillator')) {
            AudioContext.prototype._D02 = AudioContext.prototype._E02;
            AudioContext.prototype._E02 = function() {
                var _2d = this._D02();
                if (!_2d.noteOn) _2d.noteOn = _2d.start;
                if (!_2d.noteOff) _2d.noteOff = _2d.stop;
                _o02(_2d._Ek1);
                _o02(_2d._z02);
                var _A02 = ['SINE', 'SQUARE', 'SAWTOOTH', 'TRIANGLE', 'CUSTOM'];
                for (var i = 0; i < _A02.length; ++i) {
                    var _B02 = _A02[i];
                    var _C02 = _B02.toLowerCase();
                    if (!_2d.prototype.hasOwnProperty(_B02)) {
                        _2d.prototype[_B02] = _C02;
                    }
                }
                if (!_2d.prototype.hasOwnProperty('setWaveTable')) {
                    _2d.prototype._F02 = _2d.prototype._G02;
                }
                return _2d;
            };
        }
        AudioContext.prototype._H02 = AudioContext.prototype.createPanner;
        AudioContext.prototype.createPanner = function() {
            var _2d = this._H02();
            var _A02 = {
                'EQUALPOWER': 'equalpower',
                'HRTF': 'HRTF',
                'LINEAR_DISTANCE': 'linear',
                'INVERSE_DISTANCE': 'inverse',
                'EXPONENTIAL_DISTANCE': 'exponential',
            };
            for (var _B02 in _A02) {
                var _C02 = _A02[_B02];
                if (!_2d[_B02]) {
                    _2d[_B02] = _C02;
                }
            }
            return _2d;
        };
        if (!AudioContext.prototype.hasOwnProperty('createGainNode')) AudioContext.prototype.createGainNode = AudioContext.prototype.createGain;
        if (!AudioContext.prototype.hasOwnProperty('createDelayNode')) AudioContext.prototype._I02 = AudioContext.prototype.createDelay;
        if (!AudioContext.prototype.hasOwnProperty('createJavaScriptNode')) AudioContext.prototype._J02 = AudioContext.prototype.createScriptProcessor;
        if (!AudioContext.prototype.hasOwnProperty('createWaveTable')) AudioContext.prototype._K02 = AudioContext.prototype.createPeriodicWave;
    }
}(window));
var _L02 = 0,
    _M02 = 1,
    _N02 = 2,
    _O02 = 3,
    _P02 = 4,
    _Q02 = 5,
    _R02 = 6,
    _S02 = 7,
    _T02 = 8,
    _U02 = 9,
    _V02 = 10,
    _W02 = 11,
    _X02 = 12,
    _Y02 = 13,
    _Z02 = 14,
    __02 = 15;

function _Tl() {
    this._U9();
}
_Tl.prototype._U9 = function() {
    this._012 = [];
    this._112 = [];
};
_Tl.prototype._212 = function() {
    var _iL = "100\n";
    _iL += this._012.length.toString() + "\n";
    for (var i = 0; i < this._012.length; i++) {
        var _312 = this._012[i];
        _iL += _312._412.toString() + " ";
        switch (_312._412) {
            case _M02:
                break;
            case _L02:
                _iL += _312._512.toString();
                break;
            case _N02:
                _iL += _312.x.toString() + " ";
                _iL += _312.y.toString() + " ";
                _iL += _312._96.toString() + " ";
                _iL += "0.0 0.0 0.0 0.0 0.0 0.0 0.0\n";
                break;
            case _O02:
                _iL += _312.x.toString() + " ";
                _iL += _312.y.toString() + " ";
                _iL += _312._96.toString() + " ";
                _iL += (_312._R4 * 1.0).toString() + " ";
                _iL += _312.alpha.toString() + " ";
                _iL += "0.0 0.0 0.0 0.0 0.0\n";
                break;
            case _P02:
                _iL += _312.x.toString() + " ";
                _iL += _312.y.toString() + " ";
                _iL += _312._96.toString() + " ";
                _iL += _312._W1.toString() + " ";
                _iL += _312._X1.toString() + " ";
                _iL += "0.0 0.0 0.0 0.0 0.0\n";
                break;
            case _Q02:
                _iL += _312.x.toString() + " ";
                _iL += _312.y.toString() + " ";
                _iL += _312._96.toString() + " ";
                _iL += _312._W1.toString() + " ";
                _iL += _312._X1.toString() + " ";
                _iL += (_312._R4 * 1.0).toString() + " ";
                _iL += _312.alpha.toString() + " ";
                _iL += "0.0 0.0 0.0\n";
                break;
            case _R02:
                _iL += _312.x.toString() + " ";
                _iL += _312.y.toString() + " ";
                _iL += _312._96.toString() + " ";
                _iL += _312._a6.toString() + " ";
                _iL += _312._b6.toString() + " ";
                _iL += _312._c6.toString() + " ";
                _iL += "0.0 0.0 0.0 0.0\n";
                break;
            case _S02:
                _iL += _312.x.toString() + " ";
                _iL += _312.y.toString() + " ";
                _iL += _312._96.toString() + " ";
                _iL += _312._a6.toString() + " ";
                _iL += _312._b6.toString() + " ";
                _iL += _312._c6.toString() + " ";
                _iL += (_312._R4 * 1.0).toString() + " ";
                _iL += _312.alpha.toString() + " ";
                _iL += "0.0 0.0\n";
                break;
            case _T02:
                _iL += _312.x.toString() + " ";
                _iL += _312.y.toString() + " ";
                _iL += _312._96.toString() + " ";
                _iL += _312._a6.toString() + " ";
                _iL += _312._b6.toString() + " ";
                _iL += _312._c6.toString() + " ";
                _iL += _312._W1.toString() + " ";
                _iL += _312._X1.toString() + " ";
                _iL += "0.0 0.0\n";
                break;
            case _U02:
                _iL += _312.x.toString() + " ";
                _iL += _312.y.toString() + " ";
                _iL += _312._96.toString() + " ";
                _iL += _312._a6.toString() + " ";
                _iL += _312._b6.toString() + " ";
                _iL += _312._c6.toString() + " ";
                _iL += _312._W1.toString() + " ";
                _iL += _312._X1.toString() + " ";
                _iL += (_312._R4 * 1.0).toString() + " ";
                _iL += _312.alpha.toString() + " ";
                _iL += "\n";
                break;
            case _V02:
            case _Z02:
            case __02:
                _iL += _312._03.toString() + " ";
                _iL += _312._13.toString() + " ";
                _iL += _312._9j.toString() + " ";
                _iL += _312._23.toString() + " ";
                _iL += _312._33.toString() + " ";
                _iL += _312._aj.toString() + " ";
                _iL += (_312._rl ? 1.0 : 0.0).toString() + " ";
                _iL += (_312._sl ? 1.0 : 0.0).toString() + " ";
                _iL += "0.0 0.0\n";
                break;
            case _Y02:
                _iL += _312._03.toString() + " ";
                _iL += _312._13.toString() + " ";
                _iL += _312._9j.toString() + " ";
                _iL += _312._23.toString() + " ";
                _iL += _312._33.toString() + " ";
                _iL += _312._aj.toString() + " ";
                _iL += (_312._rl ? 1.0 : 0.0).toString() + " ";
                _iL += (_312._sl ? 1.0 : 0.0).toString() + " ";
                _iL += (_312._dj * 1.0).toString() + " ";
                _iL += "0.0\n";
                break;
            case _W02:
            case _X02:
                _iL += _312._03.toString() + " ";
                _iL += _312._13.toString() + " ";
                _iL += _312._9j.toString() + " ";
                _iL += _312._23.toString() + " ";
                _iL += _312._33.toString() + " ";
                _iL += _312._aj.toString() + " ";
                _iL += (_312._rl ? 1.0 : 0.0).toString() + " ";
                _iL += (_312._sl ? 1.0 : 0.0).toString() + " ";
                _iL += (_312.closed ? 1.0 : 0.0).toString() + " ";
                _iL += (_312._dj * 1.0).toString() + " ";
                _iL += "\n";
                break;
        }
    }
    return _iL;
};
_Tl.prototype._Ul = function(_Dg) {
    if (_vq === true) {
        var _612 = this._212();
        var _712 = file_text_open_write(_Dg);
        file_text_write_string(_712, _612);
        file_text_close(_712);
    } else {
        debug("d3d_model_save() browser does not support local storage\n");
    }
};
_Tl.prototype._812 = function(_912) {
    var _a12 = "";
    var _b12 = false;
    for (var i = 0; i < _912.length; i++) {
        var _c12 = _912.charAt(i);
        if (_c12 == ' ') {
            if (!_b12) {
                _a12 = _a12 + _c12;
            }
            _b12 = true;
        } else {
            _b12 = false;
            _a12 = _a12 + _c12;
        }
    }
    return _a12;
};
_Tl.prototype._d12 = function(_e12) {
    var _f12 = _e12.split("\n");
    var version = parseInt(_f12[0]);
    if (version == 100) {
        var _g12 = parseInt(_f12[1]);
        for (var i = 2; i < _f12.length; i++) {
            var _312 = {};
            var _h12 = this._812(_f12[i]);
            var _i12 = _h12.split(" ");
            _312._412 = parseInt(_i12[0]);
            switch (_312._412) {
                case _M02:
                    break;
                case _L02:
                    {
                        _312._512 = parseInt(_i12[1]);
                        break;
                    }
                case _N02:
                    {
                        _312.x = parseFloat(_i12[1]);
                        _312.y = parseFloat(_i12[2]);
                        _312._96 = parseFloat(_i12[3]);
                        break;
                    }
                case _O02:
                    {
                        _312.x = parseFloat(_i12[1]);
                        _312.y = parseFloat(_i12[2]);
                        _312._96 = parseFloat(_i12[3]);
                        _312._R4 = parseInt(_i12[4]);
                        _312.alpha = parseFloat(_i12[5]);
                        break;
                    }
                case _P02:
                    {
                        _312.x = parseFloat(_i12[1]);
                        _312.y = parseFloat(_i12[2]);
                        _312._96 = parseFloat(_i12[3]);
                        _312._W1 = parseFloat(_i12[4]);
                        _312._X1 = parseFloat(_i12[5]);
                        break;
                    }
                case _Q02:
                    {
                        _312.x = parseFloat(_i12[1]);
                        _312.y = parseFloat(_i12[2]);
                        _312._96 = parseFloat(_i12[3]);
                        _312._W1 = parseFloat(_i12[4]);
                        _312._X1 = parseFloat(_i12[5]);
                        _312._R4 = parseInt(_i12[6]);
                        _312.alpha = parseFloat(_i12[7]);
                        break;
                    }
                case _R02:
                    {
                        _312.x = parseFloat(_i12[1]);
                        _312.y = parseFloat(_i12[2]);
                        _312._96 = parseFloat(_i12[3]);
                        _312._a6 = parseFloat(_i12[4]);
                        _312._b6 = parseFloat(_i12[5]);
                        _312._c6 = parseFloat(_i12[6]);
                        break;
                    }
                case _S02:
                    {
                        _312.x = parseFloat(_i12[1]);
                        _312.y = parseFloat(_i12[2]);
                        _312._96 = parseFloat(_i12[3]);
                        _312._a6 = parseFloat(_i12[4]);
                        _312._b6 = parseFloat(_i12[5]);
                        _312._c6 = parseFloat(_i12[6]);
                        _312._R4 = parseInt(_i12[7]);
                        _312.alpha = parseFloat(_i12[8]);
                        break;
                    }
                case _T02:
                    {
                        _312.x = parseFloat(_i12[1]);
                        _312.y = parseFloat(_i12[2]);
                        _312._96 = parseFloat(_i12[3]);
                        _312._a6 = parseFloat(_i12[4]);
                        _312._b6 = parseFloat(_i12[5]);
                        _312._c6 = parseFloat(_i12[6]);
                        _312._W1 = parseFloat(_i12[7]);
                        _312._X1 = parseFloat(_i12[8]);
                        break;
                    }
                case _U02:
                    {
                        _312.x = parseFloat(_i12[1]);
                        _312.y = parseFloat(_i12[2]);
                        _312._96 = parseFloat(_i12[3]);
                        _312._a6 = parseFloat(_i12[4]);
                        _312._b6 = parseFloat(_i12[5]);
                        _312._c6 = parseFloat(_i12[6]);
                        _312._W1 = parseFloat(_i12[7]);
                        _312._X1 = parseFloat(_i12[8]);
                        _312._R4 = parseInt(_i12[9]);
                        _312.alpha = parseFloat(_i12[10]);
                        break;
                    }
                case _V02:
                case _Z02:
                case __02:
                    {
                        _312._03 = parseFloat(_i12[1]);
                        _312._13 = parseFloat(_i12[2]);
                        _312._9j = parseFloat(_i12[3]);
                        _312._23 = parseFloat(_i12[4]);
                        _312._33 = parseFloat(_i12[5]);
                        _312._aj = parseFloat(_i12[6]);
                        _312._rl = (parseFloat(_i12[7]) >= 0.5) ? true : false;
                        _312._sl = (parseFloat(_i12[8]) >= 0.5) ? true : false;
                        break;
                    }
                case _Y02:
                    {
                        _312._03 = parseFloat(_i12[1]);
                        _312._13 = parseFloat(_i12[2]);
                        _312._9j = parseFloat(_i12[3]);
                        _312._23 = parseFloat(_i12[4]);
                        _312._33 = parseFloat(_i12[5]);
                        _312._aj = parseFloat(_i12[6]);
                        _312._rl = (parseFloat(_i12[7]) >= 0.5) ? true : false;
                        _312._sl = (parseFloat(_i12[8]) >= 0.5) ? true : false;
                        _312._dj = ~~parseFloat(_i12[9]);
                        break;
                    }
                case _W02:
                case _X02:
                    {
                        _312._03 = parseFloat(_i12[1]);
                        _312._13 = parseFloat(_i12[2]);
                        _312._9j = parseFloat(_i12[3]);
                        _312._23 = parseFloat(_i12[4]);
                        _312._33 = parseFloat(_i12[5]);
                        _312._aj = parseFloat(_i12[6]);
                        _312._rl = (parseFloat(_i12[7]) >= 0.5) ? true : false;
                        _312._sl = (parseFloat(_i12[8]) >= 0.5) ? true : false;
                        _312.closed = (parseFloat(_i12[9]) >= 0.5) ? true : false;
                        _312._dj = ~~parseFloat(_i12[10]);
                        break;
                    }
            }
            this._012.push(_312);
        }
    }
};
_Tl.prototype._p4 = function(_Dg) {
    var _qq = _Pc(_Dg, true);
    if (_qq !== null && _qq !== undefined) {
        this._d12(_qq);
    } else {
        var _ej = _FI(_Dg);
        var self = this;
        var _j12 = new XMLHttpRequest();
        _j12.open("GET", _ej, false);
        _j12.onload = function() {

            var protocolRegex = new RegExp('^file:', 'i');
            var isFileProtocol = protocolRegex.test(_j12.responseURL);

            if (_j12.readyState == 4
            && (_j12.status == 200 || isFileProtocol && _j12.status == 0)) {
                self._d12(_j12.responseText);
            }
        };
        _j12.send(null);
    }
};
_Tl.prototype._M7 = function(kind) {
    this._012.push({
        _412: _L02,
        _512: kind
    });
};
_Tl.prototype._O7 = function() {
    this._012.push({
        _412: _M02
    });
};
_Tl.prototype.Vertex = function(x, y, _96) {
    this._012.push({
        _412: _N02,
        x: x,
        y: y,
        _96: _96
    });
};
_Tl.prototype._Vl = function(x, y, _96, _F4, alpha) {
    this._012.push({
        _412: _O02,
        x: x,
        y: y,
        _96: _96,
        _R4: _F4,
        alpha: alpha
    });
};
_Tl.prototype._Wl = function(x, y, _96, _76, _86) {
    this._012.push({
        _412: _P02,
        x: x,
        y: y,
        _96: _96,
        _W1: _76,
        _X1: _86
    });
};
_Tl.prototype._Xl = function(x, y, _96, _76, _86, _F4, alpha) {
    this._012.push({
        _412: _Q02,
        x: x,
        y: y,
        _96: _96,
        _W1: _76,
        _X1: _86,
        _R4: _F4,
        alpha: alpha
    });
};
_Tl.prototype._Yl = function(x, y, _96, _a6, _b6, _c6) {
    this._012.push({
        _412: _R02,
        x: x,
        y: y,
        _96: _96,
        _a6: _a6,
        _b6: _b6,
        _c6: _c6
    });
};
_Tl.prototype._Zl = function(x, y, _96, _a6, _b6, _c6, _F4, alpha) {
    this._012.push({
        _412: _S02,
        x: x,
        y: y,
        _96: _96,
        _a6: _a6,
        _b6: _b6,
        _c6: _c6,
        _R4: _F4,
        alpha: alpha
    });
};
_Tl.prototype.__l = function(x, y, _96, _a6, _b6, _c6, _76, _86) {
    this._012.push({
        _412: _T02,
        x: x,
        y: y,
        _96: _96,
        _a6: _a6,
        _b6: _b6,
        _c6: _c6,
        _W1: _76,
        _X1: _86
    });
};
_Tl.prototype._0m = function(x, y, _96, _a6, _b6, _c6, _76, _86, _F4, alpha) {
    this._012.push({
        _412: _U02,
        x: x,
        y: y,
        _96: _96,
        _a6: _a6,
        _b6: _b6,
        _c6: _c6,
        _W1: _76,
        _X1: _86,
        _R4: _F4,
        alpha: alpha
    });
};
_Tl.prototype._1m = function(_03, _13, _9j, _23, _33, _aj, _bj, _cj) {
    this._012.push({
        _412: _V02,
        _03: _03,
        _13: _13,
        _9j: _9j,
        _23: _23,
        _33: _33,
        _aj: _aj,
        _rl: _bj,
        _sl: _cj
    });
};
_Tl.prototype._2m = function(_03, _13, _9j, _23, _33, _aj, _bj, _cj, closed, _dj) {
    this._012.push({
        _412: _W02,
        _03: _03,
        _13: _13,
        _9j: _9j,
        _23: _23,
        _33: _33,
        _aj: _aj,
        _rl: _bj,
        _sl: _cj,
        closed: closed,
        _dj: _dj
    });
};
_Tl.prototype._3m = function(_03, _13, _9j, _23, _33, _aj, _bj, _cj, closed, _dj) {
    this._012.push({
        _412: _X02,
        _03: _03,
        _13: _13,
        _9j: _9j,
        _23: _23,
        _33: _33,
        _aj: _aj,
        _rl: _bj,
        _sl: _cj,
        closed: closed,
        _dj: _dj
    });
};
_Tl.prototype._4m = function(_03, _13, _9j, _23, _33, _aj, _bj, _cj, _dj) {
    this._012.push({
        _412: _Y02,
        _03: _03,
        _13: _13,
        _9j: _9j,
        _23: _23,
        _33: _33,
        _aj: _aj,
        _rl: _bj,
        _sl: _cj,
        _dj: _dj
    });
};
_Tl.prototype._5m = function(_03, _13, _9j, _23, _33, _aj, _bj, _cj) {
    this._012.push({
        _412: _Z02,
        _03: _03,
        _13: _13,
        _9j: _9j,
        _23: _23,
        _33: _33,
        _aj: _aj,
        _rl: _bj,
        _sl: _cj
    });
};
_Tl.prototype._6m = function(_03, _13, _9j, _23, _33, _aj, _bj, _cj) {
    this._012.push({
        _412: __02,
        _03: _03,
        _13: _13,
        _9j: _9j,
        _23: _23,
        _33: _33,
        _aj: _aj,
        _rl: _bj,
        _sl: _cj
    });
};
_Tl.prototype._k12 = function() {
    this._l12 = new _T6(_U6, _b4._V6(_b4._97), false);
    this._l12._512 = -1;
    this._l12._m12 = null;
};
_Tl.prototype._n12 = function(_J6) {
    switch (_J6) {
        case _i6:
        case _j6:
        case _l6:
            return true;
    }
    return false;
};
_Tl.prototype._o12 = function(_l4) {
    var _p12 = this._l12;
    if ((_p12._512 != -1) && ((_e6 != _p12._512) || (_f6 != _p12._m12) || (this._n12(_p12._512) === false))) {
        _p12._d8();
        this._112[_l4].push({
            _512: _I6(_p12._512),
            _m12: _p12._m12,
            _q12: _p12
        });
        this._k12();
        _p12 = this._l12;
    }
    _p12._Kr1(_h6);
    _p12._512 = _e6;
    _p12._m12 = _f6;
    _P6();
};
_Tl.prototype._r12 = function(_l4) {
    var _p12 = this._l12;
    _p12._d8();
    this._112[_l4].push({
        _512: _I6(_p12._512),
        _m12: _p12._m12,
        _q12: _p12
    });
    _P6();
};
_Tl.prototype._P51 = function(_312, _v4) {
    var _s12 = d3d_primitive_end;
    var self = this;
    d3d_primitive_end = function() {
        self._o12(_v4);
    };
    switch (_312._412) {
        case _V02:
            d3d_draw_block(_312._03, _312._13, _312._9j, _312._23, _312._33, _312._aj, _v4, _312._rl, _312._sl);
            break;
        case _W02:
            d3d_draw_cylinder(_312._03, _312._13, _312._9j, _312._23, _312._33, _312._aj, _v4, _312._rl, _312._sl, _312.closed,
                _312._dj);
            break;
        case _X02:
            d3d_draw_cone(_312._03, _312._13, _312._9j, _312._23, _312._33, _312._aj, _v4, _312._rl, _312._sl, _312.closed, _312._dj);
            break;
        case _Y02:
            d3d_draw_ellipsoid(_312._03, _312._13, _312._9j, _312._23, _312._33, _312._aj, _v4, _312._rl, _312._sl, _312._dj);
            break;
        case _Z02:
            d3d_draw_wall(_312._03, _312._13, _312._9j, _312._23, _312._33, _312._aj, _v4, _312._rl, _312._sl);
            break;
        case __02:
            d3d_draw_floor(_312._03, _312._13, _312._9j, _312._23, _312._33, _312._aj, _v4, _312._rl, _312._sl);
            break;
    }
    d3d_primitive_end = _s12;
};
_Tl.prototype._L4 = function(x, y, _96, _v4) {
    var i, _fm = new _6l();
    _fm._9m(x, y, _96);
    var _gm = _hm(_8m);
    var __2 = new _6l();
    __2._im(_fm, _gm);
    _7m(_8m, __2);
    if (this._112[_v4] === undefined) {
        this._112[_v4] = [];
        this._k12();
        for (var i = 0; i < this._012.length; i++) {
            var _312 = this._012[i];
            switch (_312._412) {
                case _L02:
                    d3d_primitive_begin_texture(_312._512, _v4);
                    break;
                case _M02:
                    this._o12(_v4);
                    break;
                case _N02:
                    d3d_vertex(_312.x, _312.y, _312._96);
                    break;
                case _O02:
                    d3d_vertex_color(_312.x, _312.y, _312._96, _312._R4, _312.alpha);
                    break;
                case _P02:
                    d3d_vertex_texture(_312.x,
                        _312.y, _312._96, _312._W1, _312._X1);
                    break;
                case _Q02:
                    d3d_vertex_texture_color(_312.x, _312.y, _312._96, _312._W1, _312._X1, _312._R4, _312.alpha);
                    break;
                case _R02:
                    d3d_vertex_normal(_312.x, _312.y, _312._96, _312._a6, _312._b6, _312._c6);
                    break;
                case _S02:
                    d3d_vertex_normal_color(_312.x, _312.y, _312._96, _312._a6, _312._b6, _312._c6, _312._R4, _312.alpha);
                    break;
                case _T02:
                    d3d_vertex_normal_texture(_312.x, _312.y, _312._96, _312._a6, _312._b6, _312._c6, _312._W1, _312._X1);
                    break;
                case _U02:
                    d3d_vertex_normal_texture_color(_312.x, _312.y,
                        _312._96, _312._a6, _312._b6, _312._c6, _312._W1, _312._X1, _312._R4, _312.alpha);
                    break;
                case _V02:
                case _W02:
                case _X02:
                case _Y02:
                case _Z02:
                case __02:
                    this._P51(_312, _v4);
                    break;
            }
        }
        this._r12(_v4);
        this._l12 = null;
    }
    var _t12 = this._112[_v4];
    for (i = 0; i < _t12.length; i++) {
        var _u12 = _t12[i];
        var _87 = _u12._m12 ? _u12._m12._C5 : null;
        _b4._k8(_u12._512, _87, _u12._q12, 0);
    }
    _7m(_8m, _gm);
};

function _VC(_v12) {
    var _Tb = _VC.arguments;
    var _Ub = _VC.arguments.length;
    this._4c = [];
    this._bd = [];
    this.length = 0;
    this._n4 = 0;
    if (_Ub > 0) {
        for (var i = 0; i < _Ub; i++) {
            this._4c[i] = null;
            this._bd.push(i);
        }
    }
}
_VC.prototype._dY1 = function() {
    var _X2;
    if (this._bd.length === 0) {
        _X2 = this._4c.length;
        this._4c[_X2] = null;
        return _X2;
    }
    return this._bd.pop();
};
_VC.prototype._1b = function(_w12) {
    var index = this._dY1();
    this._4c[index] = _w12;
    this._n4++;
    this.length = this._4c.length;
    return index;
};
_VC.prototype._O3 = function(_9A) {
    var _ec = this._4c[_9A];
    if (_ec === undefined) _ec = null;
    return _ec;
};
_VC.prototype._x12 = function(_kK1) {
    for (var _b3 = 0; _b3 < this._4c.length; _b3++) {
        if (this._4c[_b3] == _kK1) return _b3;
    }
    return -1;
};
_VC.prototype._y12 = function(_kK1) {
    var index = _x12(_kK1);
    if (index < 0) return;
    _4c[index] = null;
    _bd.push(index);
    this._n4--;
};
_VC.prototype._2b = function(_9A) {
    if (_9A < 0 || _9A >= this._4c.length) return;
    this._4c[_9A] = null;
    this._bd.push(_9A);
    this._n4--;
};
_VC.prototype._U9 = function() {
    this._4c = [];
    this._bd = [];
    this._n4 = 0;
    this.length = this._4c.length;
};
_VC.prototype._7b = function(_tb, _f2) {
    if (_tb < 0 || _tb >= this._4c.length) return;
    this._4c[_tb] = _f2;
};
var _z12 = 0,
    _A12 = 1,
    _wM = 2,
    _Ch = 3,
    _QL = 4,
    _xw = 5,
    _zo = 6,
    _B12 = 0,
    _to = 1,
    _xo = -1,
    _mw = 0,
    _C12 = 1,
    _kw = -1;
var _D12 = [];
var _E12 = [];

function _F12(_cc, _Wn1) {
    _D12.push(_cc);
    _E12.push(_Wn1);
}

function _qo(_cc) {
    var i = 0;
    for (i = 0; i < _D12.length; i++) {
        if (_D12[i] == _cc) {
            var _oq = _E12[i];
            _E12.splice(i, 1);
            _D12.splice(i, 1);
            return _oq;
        }
    }
    return undefined;
}

function _G12() {
    this._H12 = "";
    this._I12 = -1;
    this._so = 0;
    this._Wc = null;
    this._J12 = _z12;
    this._ro = false;
}

function _zh(_Bp) {
    var _L1, _O1, _oq = _qo(_Bp.currentTarget);
    if (!_oq) return;
    _oq._ro = true;
    _oq._so = _to;
    if (_oq._J12 == _wM) {
        var _7p = _le._O3(_oq._I12);
        if (_7p === null) return;
        if (!_7p._M1[0]) return;
        if (!_7p._M1) return;
        if (!_7p._M1[0]._T1) return;
        _O1 = _7p._M1[0]._T1;
        _O1._C5 = undefined;
        var w = _O1.width;
        var h = _O1.height;
        var _K12 = w / _7p._93;
        var x = 0;
        _7p.width = w;
        _7p.height = h;
        _7p._Ry._L2 = w;
        _7p._Ry.bottom = h;
        _7p._rM();
        for (var i = 0; i < _7p._93; i++) {
            _L1 = _7p._M1[i];
            _L1.x = x;
            _L1.w = _K12;
            _L1.h = h;
            _L1.CropWidth = _L1.w;
            _L1.CropHeight = _L1.h;
            _L1.ow = _L1.w;
            _L1.oh = _L1.h;
            _L1._m4 = [];
            _L1._n4 = 0;
            _L1._o4 = 4;
            x += _K12;
        }
        return;
    }
    if (_oq._J12 == _Ch) {
        var _Wg = _Ee._Vg(_oq._I12);
        if (_Wg === null) return;
        _L1 = _Wg._Xg;
        _O1 = _L1._T1;
        _O1._C5 = undefined;
        _L1.w = _O1.width;
        _L1.h = _O1.height;
        _L1.CropWidth = _L1.w;
        _L1.CropHeight = _L1.h;
        _L1.ow = _L1.w;
        _L1.oh = _L1.h;
        _L1._m4 = [];
        _L1._n4 = 0;
        _L1._o4 = 4;
        return;
    }
    if (_oq._J12 == _QL) {
        _oq._Wc.complete = true;
        var _PL = _2e._O3(_oq._I12);
        _PL._yK(_mK[_oq._H12]);
        return;
    }
}

function _Ah(_Bp) {
    var _oq = _qo(_Bp.currentTarget);
    if (!_oq) return;
    _oq._ro = true;
    _oq._so = _xo;
}

function _UY1() {
    this._4c = new _VC(5);
}
_UY1.prototype._fB = function() {
    return this._4c;
};
_UY1.prototype._1b = function(_ha, _Hc, _y7, _L12) {
    var _oq = new _G12();
    _oq._I12 = _ha;
    _oq._H12 = _Hc;
    _oq._Wc = _L12;
    _oq._J12 = _y7;
    this._4c._1b(_oq);
    _F12(_L12, _oq);
};
_UY1.prototype._M12 = function() {
    var map = ds_map_create();
    g_pBuiltIn.async_load = map;
    var _4c = this._4c._4c;
    for (var i = 0; i < _4c.length; i++) {
        var _oq = _4c[i];
        if (_oq !== null) {
            if (_oq._ro) {
                ds_map_clear(map);
                if (_oq._J12 == _xw) {
                    ds_map_add(map, "filename", "");
                    ds_map_add(map, "url", _oq._H12);
                    ds_map_add(map, "result", _oq._lw);
                    ds_map_add(map, "http_status", _oq._qw);
                    ds_map_add(map, "response_headers", _oq._rw);
                } else if (_oq._J12 == _zo) {
                    ds_map_add(map, "username", _oq._no);
                    ds_map_add(map, "password", _oq._oo);
                    ds_map_add(map, "url", "");
                    ds_map_add(map, "result", _oq._9e);
                    ds_map_add(map, "value", _oq.value);
                    ds_map_add(map, "http_status", 0);
                } else {
                    ds_map_add(map, "url", "");
                    ds_map_add(map, "result", "");
                    ds_map_add(map, "http_status", 0);
                    ds_map_add(map, "filename", _oq._H12);
                }
                ds_map_add(map, "id", _oq._I12);
                ds_map_add(map, "status", _oq._so);
                if (_oq._J12 == _A12) _2q._3q(_RP1, 0);
                else if (_oq._J12 == _wM) _2q._3q(_RP1, 0);
                else if (_oq._J12 == _Ch) _2q._3q(_RP1, 0);
                else if (_oq._J12 == _QL) _2q._3q(_TP1, 0);
                else if (_oq._J12 == _xw) _2q._3q(_8S1, 0);
                else if (_oq._J12 == _zo) _2q._3q(_9S1,
                    0);
                this._4c._2b(i);
                if (_oq._J12 == _xw) {
                    ds_map_destroy(_oq._rw);
                }
            }
        }
    }
    ds_map_destroy(map);
    g_pBuiltIn.async_load = -1;
};

function _4h() {
    this.__type = "[Background]";
    this.pName = "";
    this.transparent = false;
    this.smooth = false;
    this.preload = false;
    this._Xg = null;
}

function _N12(_O12) {
    var _dh = new _4h();
    _dh.pName = _O12.pName;
    if (_O12.transparent != undefined) _dh.transparent = _O12.transparent;
    if (_O12.smooth != undefined) _dh.smooth = _O12.smooth;
    if (_O12.preload != undefined) _dh.preload = _O12.preload;
    _dh._Xg = _P12(_O12.TPEntryIndex);
    return _dh;
}

function _Q12(_O12) {
    this._U9();
    if (_O12.visible != undefined) this.visible = _O12.visible;
    if (_O12.foreground != undefined) this.foreground = _O12.foreground;
    if (_O12.index != undefined) this.index = _O12.index;
    if (_O12.x != undefined) this.x = _O12.x;
    if (_O12.y != undefined) this.y = _O12.y;
    if (_O12.htiled != undefined) this._l_1 = _O12.htiled;
    if (_O12.vtiled != undefined) this._m_1 = _O12.vtiled;
    if (_O12.hspeed != undefined) this._n_1 = _O12.hspeed;
    if (_O12.vspeed != undefined) this._o_1 = _O12.vspeed;
    if (_O12.stretch != undefined) this.stretch = _O12.stretch;
    if (_O12.alpha != undefined) this.alpha = _O12.alpha;
    if (_O12._aO != undefined) this._aO = _O12._aO;
}
_Q12.prototype._U9 = function() {
    this.visible = false;
    this.foreground = false;
    this.index = -1;
    this.x = 0;
    this.y = 0;
    this._l_1 = true;
    this._m_1 = true;
    this._n_1 = 0;
    this._o_1 = 0;
    this._NF = 1;
    this._OF = 1;
    this.stretch = false;
    this.alpha = 1.0;
    this._aO = 0xffffff;
};

function _PY1() {
    this._R12 = [];
    this._De = [];
}
_PY1.prototype._Vg = function(_tb) {
    return this._R12[_tb];
};
_PY1.prototype._O3 = function(_tb) {
    return this._De[_tb];
};
_PY1.prototype._bh = function(_tb) {
    if (this._R12[_tb] != undefined) {
        this._R12[_tb] = undefined;
    }
};
_PY1.prototype._U9 = function() {
    this._De = [];
};
_PY1.prototype._GZ1 = function(_O12) {
    var _Wg = null;
    if (_O12 != null) {
        _Wg = _N12(_O12);
    }
    return this._6h(_Wg);
};
_PY1.prototype._6h = function(_S12) {
    var i = this._R12.length;
    this._R12[i] = _S12;
    return i;
};
_PY1.prototype._hh = function(_tb, _S12) {
    this._R12[_tb] = _S12;
};
_PY1.prototype._1b = function(_O12) {
    var _Wg = null;
    if (_O12 != null) {
        _Wg = new _Q12(_O12);
    }
    this._De[this._De.length] = _Wg;
};
var _T12 = -1,
    _U12 = -2,
    _V12 = -3,
    _W12 = -4,
    _X12 = -5;
var _Y12 = 0,
    _Z12 = 1,
    __12 = 2,
    _1L = 3,
    _022 = 4;
var _122 = 0,
    _5x = 1,
    _222 = 2,
    _3L = 3,
    _YK = 4,
    _2L = 5,
    _7B1 = 6,
    _322 = 7,
    _6B1 = 8,
    _422 = 9,
    _522 = 10,
    _622 = 11;
var _yL = 0,
    _722 = 1,
    _ZK = 2;

function _822(data, _922, _4Y1, _a22, _b22, _c22) {
    var _Ms = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var _Ns, _Os, _Ps, _Qs, _Rs, _Ss, _Ts, _Us;
    var i = 0;
    var _Vs = _a22;
    var _Ys = "";
    var _d22 = Math.floor(_c22 / 3);
    i = _d22 * 4;
    var _e22 = _c22 % 3;
    if (!data) {
        return data;
    }
    data += '';
    do {
        _Qs = _Rs = _Ss = _Ts = -1;
        while (_Qs < 0) {
            _Qs = _Ms.indexOf(data.charAt(i++));
        }
        while (_Rs < 0) {
            _Rs = _Ms.indexOf(data.charAt(i++));
        }
        while (_Ss < 0) {
            _Ss = _Ms.indexOf(data.charAt(i++));
        }
        while (_Ts < 0) {
            _Ts = _Ms.indexOf(data.charAt(i++));
        }
        var _f22 = (_Qs << 2) | (_Rs >> 4);
        var _g22 = ((_Rs & 15) << 4) | (_Ss >> 2);
        var _h22 = ((_Ss & 3) << 6) | _Ts;
        _4Y1[_Vs++] = _f22;
        if (_Vs >= _922) return _4Y1;
        if (_Ss != 64) {
            _4Y1[_Vs++] = _g22;
            if (_Vs >= _922) return _4Y1;
        }
        if (_Ts != 64) {
            _4Y1[_Vs++] = _h22;
            if (_Vs >= _922) return _4Y1;
        }
    } while (i < data.length);
    if (_b22 && _i22 < _922) {
        _4Y1[_i22++] = '\0';
    }
    return _4Y1;
}

function _j22(_pt, length) {
    var _k22 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var _rt = "";
    var _f22, _g22, _h22 = "";
    var _l22, _m22, _n22, _o22 = "";
    var i = 0;
    do {
        _f22 = _pt.charCodeAt(i++);
        _g22 = _pt.charCodeAt(i++);
        _h22 = _pt.charCodeAt(i++);
        _l22 = _f22 >> 2;
        _m22 = ((_f22 & 3) << 4) | (_g22 >> 4);
        _n22 = ((_g22 & 15) << 2) | (_h22 >> 6);
        _o22 = _h22 & 63;
        if (isNaN(_g22)) {
            _n22 = _o22 = 64;
        } else if (isNaN(_h22)) {
            _o22 = 64;
        }
        _rt = _rt + _k22.charAt(_l22) + _k22.charAt(_m22) + _k22.charAt(_n22) + _k22.charAt(_o22);
        _f22 = _g22 = _h22 = "";
        _l22 = _m22 = _n22 = _o22 = "";
    } while (i < length);
    return _rt;
}

function _Kn1(_l7) {
    var size = 1;
    while (size <= 1024) {
        if (_l7 <= size) return size;
        size = size << 1;
    }
    return 1024;
}

function _p22(_l7, _y7, _q22) {
    _q22 = _Kn1(_q22 & 0x1ff);
    this._r22 = _l7 + _q22;
    this._J12 = _y7;
    this._s22 = _l7;
    this._t22 = _q22;
    this._u22 = 0;
    this._0x = 0;
    this._2x = new ArrayBuffer(_l7);
    this._v22 = new DataView(this._2x);
}

function _w22(_y7) {
    switch (_y7) {
        case _5x:
        case _222:
        case _522:
            return 1;
        case _3L:
        case _YK:
        case _322:
            return 2;
        case _2L:
        case _7B1:
        case _6B1:
            return 4;
        case _422:
            return 8;
    }
    return -1;
}
_p22.prototype._x22 = function(_Pr1) {
    var _y22 = new ArrayBuffer(_Pr1);
    var _z22 = new Uint8Array(this._2x);
    var _A22 = new Uint8Array(_y22);
    _A22.set(_z22);
    this._2x = _y22;
    this._v22 = new DataView(this._2x);
    this._s22 = _Pr1;
};
_p22.prototype._B22 = function(_y7) {
    this._0x = (((this._0x + this._u22) + (this._t22 - 1)) & ~(this._t22 - 1)) - this._u22;
    if (this._0x >= this._s22 && this._J12 == __12) {
        while (this._0x >= this._s22) {
            this._C22();
            this._0x -= this._s22;
        }
    }
    if (this._0x >= this._s22) return (_y7 == _622) ? "" : _V12;
    var _D22;
    switch (_y7) {
        case _522:
            _D22 = this._v22.getUint8(this._0x++);
            if (_D22 == 1) {
                _D22 = true;
            } else {
                _D22 = false;
            }
            break;
        case _5x:
            {
                _D22 = this._v22.getUint8(this._0x++);
            }
            break;
        case _622:
            {
                _D22 = "";
                var chr = -1,
                    _E22 = 0;
                do {
                    _E22 = this._v22.getUint16(this._0x, true);
                    chr = String.fromCharCode(_E22);
                    this._0x += 2;
                    _D22 += chr;
                } while (chr != '\0');
            }
            break;
        case _222:
            _D22 = this._v22.getInt8(this._0x++);
            break;
        case _3L:
            _D22 = this._v22.getUint16(this._0x, true);
            this._0x += 2;
            break;
        case _YK:
            _D22 = this._v22.getInt16(this._0x, true);
            this._0x += 2;
            break;
        case _7B1:
            _D22 = this._v22.getInt32(this._0x, true);
            this._0x += 4;
            break;
        case _2L:
            _D22 = this._v22.getUint32(this._0x, true);
            this._0x += 4;
            break;
        case _6B1:
            _D22 = this._v22.getFloat32(this._0x,
                true);
            this._0x += 4;
            break;
        case _422:
            _D22 = this._v22.getFloat64(this._0x, _F22, true);
            this._0x += 8;
            break;
    }
    return _D22;
};
_p22.prototype._C22 = function() {
    this._u22 = (this._u22 + this._s22) % this._t22;
};

function _G22(_y7) {
    var _H22 = 0;
    switch (_y7) {
        case _522:
        case _5x:
        case _222:
            _H22 = 1;
            break;
        case _3L:
        case _YK:
            _H22 = 2;
            break;
        case _7B1:
        case _2L:
        case _6B1:
            _H22 = 4;
            break;
        case _422:
            _H22 = 8;
            break;
    }
    return _H22;
}
_p22.prototype._I22 = function(_TK, _l7) {
    if (this._s22 == 0) return;
    if (_l7 < 0) _l7 = this._s22;
    if (this._J12 == __12) {
        while (_TK < 0) _TK += this._s22;
        while (_TK >= this._s22) _TK -= this._s22;
    } else {
        if (_TK < 0) _TK = 0;
        if (_TK >= this._s22) _TK = this._s22 - 1;
        if ((_TK + _l7) > this._s22) _l7 = this._s22 - _TK;
    }
    if (_l7 > this._s22 - _TK) return "";
    else return _Zs(String.fromCharCode.apply(null, new Uint8Array(this._2x, _TK, _l7)));
};
_p22.prototype._J22 = function(_TK, _l7) {
    if (this._s22 == 0) return;
    if (_l7 < 0) _l7 = this._s22;
    if (this._J12 == __12) {
        while (_TK < 0) _TK += this._s22;
        while (_TK >= this._s22) _TK -= this._s22;
    } else {
        if (_TK < 0) _TK = 0;
        if (_TK >= this._s22) _TK = this._s22 - 1;
        if ((_TK + _l7) > this._s22) _l7 = this._s22 - _TK;
    }
    if (_l7 > this._s22 - _TK) return "";
    else return sha1_string_utf8(String.fromCharCode.apply(null, new Uint8Array(this._2x, _TK, _l7)));
};
_p22.prototype._K22 = function(_L22, offset, size) {
    _Mc(_L22, this._M22(offset, size));
};
_p22.prototype._M22 = function(_TK, _l7) {
    if (this._s22 == 0) return;
    if (_l7 < 0) _l7 = this._s22;
    if (_l7 == 0) return "";
    if (this._J12 == __12) {
        while (_TK < 0) _TK += this._s22;
        while (_TK >= this._s22) _TK -= this._s22;
    } else {
        if (_TK < 0) _TK = 0;
        if (_TK >= this._s22) _TK = this._s22 - 1;
        if ((_TK + _l7) > this._s22) _l7 = this._s22 - _TK;
    }
    if (_l7 > this._s22 - _TK) {
        return "";
    } else {
        var _N22 = new Uint16Array(this._2x,
            _TK, _l7);
        var _Uw = String.fromCharCode.apply(null, _N22);
        return _j22(_Uw, _l7);
    }
};
_p22.prototype._O22 = function(_P22, _TK) {
    var _Q22 = new Uint8Array(this._2x);
    return _822(_P22, _Q22.length - _TK, _Q22, _TK, false, 0);
};
_p22.prototype._4x = function(_y7, _qe) {
    var size = 0;
    this._0x = (((this._0x + this._u22) + (this._t22 - 1)) & ~(this._t22 - 1)) - this._u22;
    if (this._0x >= this._s22 && this._J12 == __12) {
        while (this._0x >= this._s22) {
            this._C22();
            this._0x -= this._s22;
        }
    }
    if ((this._0x >= this._s22) && (this._J12 != _Z12)) {
        return _U12;
    }
    var _H22 = _G22(_y7);
    if (_y7 == _622) {
        _H22 = (_qe.length + 1) * 2;
    }
    if ((this._0x + _H22) > this._s22) {
        if (this._J12 == _Z12) {
            var _R22 = this._s22;
            var _Pr1 = this._s22;
            while ((this._0x + _H22) > _Pr1) {
                _Pr1 = (_Pr1 << 1);
            }
            this._x22(_Pr1);
        } else {
            if (this._J12 != __12) {
                return _U12;
            }
        }
    }
    switch (_y7) {
        case _522:
            if (_qe == true) {
                _qe = 1;
            } else {
                _qe = 0;
            }
        case _5x:
            {
                this._v22.setUint8(this._0x, _qe);
                this._0x++;
            }
            break;
        case _622:
            {
                var i = 0;
                for (i = 0; i < _qe.length; i++) {
                    var _S22 = _qe.charCodeAt(i);
                    this._v22.setUint16(this._0x, _S22, true);
                    this._0x += 2;
                }
                this._v22.setUint16(this._0x, '\0', true);
                this._0x += 2;
            }
            break;
        case _222:
            this._v22.setInt8(this._0x, _qe);
            this._0x++;
            break;
        case _3L:
            this._v22.setUint16(this._0x, _qe, true);
            this._0x += 2;
            break;
        case _YK:
            this._v22.setInt16(this._0x, _qe, true);
            this._0x += 2;
            break;
        case _7B1:
            this._v22.setInt32(this._0x, _qe, true);
            this._0x += 4;
            break;
        case _2L:
            this._v22.setUint32(this._0x, _qe, true);
            this._0x += 4;
            break;
        case _6B1:
            this._v22.setFloat32(this._0x, _qe, true);
            this._0x += 4;
            break;
        case _422:
            this._v22.setFloat64(this._0x, _qe, true);
            this._0x += 8;
            break;
    }
};
_p22.prototype._T22 = function(_y7, _TK) {
    var size = _G22(_y7);
    if (_TK < 0) return 0;
    if (this._J12 != __12) {
        if (_TK > (this._s22 - size)) return 0;
    } else {
        while (_TK >= this._s22) {
            _TK -= this._s22;
        }
    }
    var _D22;
    switch (_y7) {
        case _522:
            _D22 = this._v22.getUint8(_TK);
            if (_D22 == 1) {
                _D22 = true;
            } else {
                _D22 = false;
            }
            break;
        case _5x:
            {
                _D22 = this._v22.getUint8(_TK);
            }
            break;
        case _222:
            _D22 = this._v22.getInt8(_TK);
            break;
        case _3L:
            _D22 = this._v22.getUint16(_TK, true);
            break;
        case _YK:
            _D22 = this._v22.getInt16(_TK, true);
            break;
        case _7B1:
            _D22 = this._v22.getInt32(_TK, true);
            break;
        case _2L:
            _D22 = this._v22.getUint32(_TK, true);
            break;
        case _6B1:
            _D22 = this._v22.getFloat32(_TK, true);
            break;
        case _422:
            _D22 = this._v22.getFloat64(_TK, true);
            break;
    }
    return _D22;
};
_p22.prototype._U22 = function(_TK, _l7, _y7, _qe, _V22, _W22) {
    if (this._s22 == 0) return;
    if (_l7 < 0) _l7 = this._s22;
    if (this._J12 == __12) {
        while (_TK < 0) _TK += this._s22;
        while (_TK >= this._s22) _TK -= this._s22;
    } else {
        if (_TK < 0) return;
        if (_TK >= this._s22) return;
        if ((_TK + _l7) > this._s22) _l7 = this._s22 - _TK;
    }
    var _Q22 = new Uint8Array(this._2x);
    var _X22 = _TK;
    var _Y22 = _TK;
    var _Z22 = _X22;
    var __22 = 0;
    var _032 = _TK + _l7;
    var _132 = _G22(_y7);
    var _232;
    if (_V22 <= 0) _232 = true;
    else {
        _232 = false;
        _132 = _e3(_132, _V22);
    }
    var _332;
    if (((_232 && ((_X22 % this._t22) == 0)) || !_232) && (_132 <= _l7)) {
        _332 = true;
    } else {
        _332 = false;
    }
    var i;
    while (__22 < _l7) {
        _Y22 = _X22 % this._s22;
        if (_332) {
            if ((_Y22 + _132) <= this._s22) {
                this._432(_y7, _Y22, _qe);
                _Y22 += _132;
                _X22 += _132;
            } else {
                this._432(_y7, _Y22, _qe);
                _Y22 += _132;
                if (_Y22 >= this._s22) {
                    _Y22 = 0;
                }
                _X22 += _132;
            }
            __22 += _132;
            _332 = false;
        } else {
            var _532;
            if (_232) _532 = (_X22 + (this._t22 - 1)) & ~(this._t22 - 1);
            else _532 = _Z22 + _V22;
            if (_532 > _032) {
                _532 = _032;
            }
            var _632 = _532 - _X22;
            if (_W22) {
                if ((_Y22 + _632) <= this._s22) {
                    for (i = 0; i < _632; i++) {
                        _Q22[_Y22 + i] = 0;
                    }
                    _Y22 += _632;
                } else {
                    var _732 = _632;
                    while (_732 > 0) {
                        var _832 = _e3(_732, this._s22 - _Y22);
                        for (i = 0; i < _832; i++) {
                            _Q22[_Y22 + i] = 0;
                        }
                        _Y22 += _832;
                        _Y22 = _Y22 % this._s22;
                        _732 -= _832;
                    }
                }
            } else {
                _Y22 += _632;
            }
            _X22 += _632;
            __22 += _632;
            _Z22 = _X22;
            if ((__22 + _132) <= _l7) {
                _332 = true;
            }
        }
    }
    return;
};
_p22.prototype._432 = function(_y7, _TK, _qe) {
    if (_TK < 0) return;
    var size = _G22(_y7);
    if (this._J12 != __12) {
        if (_TK > (this._s22 - size)) return 0;
    } else {
        while (_TK >= this._s22) {
            _TK -= this._s22;
        }
    }
    switch (_y7) {
        case _522:
            if (_qe == true) {
                _qe = 1;
            } else {
                _qe = 0;
            }
        case _5x:
            {
                this._v22.setUint8(_TK, _qe);
            }
            break;
        case _222:
            this._v22.setInt8(_TK, _qe);
            break;
        case _3L:
            this._v22.setUint16(_TK, _qe, true);
            break;
        case _YK:
            this._v22.setInt16(_TK, _qe, true);
            break;
        case _7B1:
            this._v22.setInt32(_TK, _qe, true);
            break;
        case _2L:
            this._v22.setUint32(_TK, _qe, true);
            break;
        case _6B1:
            this._v22.setFloat32(_TK, _qe, true);
            break;
        case _422:
            this._v22.setFloat64(_TK, _qe, true);
            break;
    }
};
_p22.prototype._8B1 = function(_932, _TK) {
    switch (_932) {
        case _yL:
            this._0x = _TK;
            break;
        case _722:
            this._0x += _TK;
            break;
        case _ZK:
            this._0x = this._s22 - _TK;
            break;
    }
    return this._0x;
};

function buffer_seek(buffer, _a32, offset) {
    var _F5 = __w._O3(buffer);
    if (!_F5) return 0;
    return _F5._8B1(_a32, offset);
}

function buffer_read(buffer, type) {
    var _F5 = __w._O3(buffer);
    if (!_F5) return 0;
    return _F5._B22(type);
}

function buffer_peek(buffer, offset, type) {
    var _F5 = __w._O3(buffer);
    if (!_F5) return 0;
    return _F5._T22(type, offset);
}

function buffer_poke(buffer, offset, type, value) {
    var _F5 = __w._O3(buffer);
    if (!_F5) return 0;
    return _F5._432(type, offset,
        value);
}

function buffer_create(_l7, _y7, _q22) {
    try {
        return __w._1b(new _p22(_l7, _y7, _q22));
    } catch (e) {
        alert("ArrayBuffer Error : This functionality requires at least IE10");
        return -1;
    }
}

function buffer_write(_tb, _y7, _qe) {
    var _F5 = __w._O3(_tb);
    if (!_F5) return _X12;
    return _F5._4x(_y7, _qe);
}

function buffer_tell(_tb) {
    var _F5 = __w._O3(_tb);
    if (!_F5) return _X12;
    return _F5._0x;
}

function _b32(_c32, _d32, _e32, _f32, _g32, _h32, _i32, _Id, _j32) {
    if (_e32 <= 0) return 0;
    if (_g32 < 0) _g32 = _e32;
    if (_j32) {
        while (_f32 < 0) _f32 += _e32;
        while (_f32 >= _e32) _f32 -= _e32;
        if ((_f32 + _g32) <= _e32) _j32 = false;
    } else {
        if (_f32 < 0) _f32 = 0;
        if (_f32 >= _e32) _f32 = _e32 - 1;
        if ((_f32 + _g32) > _e32) _g32 = _e32 - _f32;
    }
    var _k32 = _g32;
    if (!_i32) {
        if (_c32._s22 <= 0) {
            return 0;
        }
        if (_Id) {
            while (_h32 < 0) _h32 += _c32._s22;
            while (_h32 >= _c32._s22) _h32 -= _c32._s22;
            if ((_h32 + _k32) <= _c32._s22) _Id = false;
        } else {
            if (_h32 < 0) _h32 = 0;
            if (_h32 >= _c32._s22) _h32 = _c32._s22 - 1;
            if ((_h32 + _k32) > _c32._s22) _k32 = _c32._s22 - _h32;
        }
    } else {
        if (_h32 < 0) _h32 = 0;
        if ((_h32 + _k32) > _c32._s22) {
            var _l32 = _h32 + _k32;
            _c32._x22(_l32);
        }
    }
    var _m32 = new Uint8Array(_d32._2x);
    var _Q22 = new Uint8Array(_c32._2x);
    if (_Id || _j32) {
        var _n32 = _k32;
        while (_n32 > 0) {
            var _o32 = _e3(_n32, (_c32._s22 - _h32));
            _o32 = _e3(_o32, _e32 - _f32);
            for (i = 0; i < _o32; i++) {
                _Q22[_h32 + i] = _m32[_f32 + i];
            }
            _h32 += _o32;
            _f32 += _o32;
            _h32 = _h32 % _c32._s22;
            _f32 = _f32 % _e32;
            _n32 -= _o32;
        }
    } else {
        for (i = 0; i < _k32; i++) {
            _Q22[_h32 + i] = _m32[_f32 + i];
        }
    }
    return 1;
}

function buffer_copy(_p32, _q32, size, _r32, _s32) {
    var _F5 = __w._O3(_p32);
    if (!_F5) return _X12;
    var _t32 = __w._O3(_r32);
    if (!_t32) return _X12;
    var _u32;
    if ((_t32._J12 == _Z12) || (_t32._s22 == 0)) _u32 = true;
    else _u32 = false;
    var _Jd;
    if (_t32._J12 == __12) _Jd = true;
    else _Jd = false;
    var _v32;
    if (_F5._J12 == __12) _v32 = true;
    else _v32 = false;
    var _w32 = _b32(_t32, _F5, _F5._s22, _q32, _F5._s22, _s32, _u32, _Jd, _v32);
}

function buffer_get_size(_tb) {
    var _F5 = __w._O3(_tb);
    if (!_F5) return _X12;
    return _F5._s22;
}

function buffer_resize(_tb, _x32) {
    var _F5 = __w._O3(_tb);
    if (!_F5) return _X12;
    return _F5._x22(_x32);
}

function buffer_sizeof(_y7) {
    return _G22(_y7);
}

function buffer_fill(buffer, offset, type, value, size) {
    var _F5 = __w._O3(buffer);
    if (!_F5) return _X12;
    return _F5._U22(offset, size, type, value, -1, true);
}

function buffer_md5(buffer,
    offset, size) {
    var _F5 = __w._O3(buffer);
    if (!_F5) return _X12;
    return _F5._I22(offset, size);
}

function buffer_sha1(buffer, offset, size) {
    var _F5 = __w._O3(buffer);
    if (!_F5) return _X12;
    return _F5._J22(offset, size);
}

function buffer_base64_encode(buffer, offset, size) {
    var _F5 = __w._O3(buffer);
    if (!_F5) return _X12;
    return _F5._M22(offset, size);
}

function buffer_base64_decode(_y32) {
    var _z32 = buffer_create(_y32.length * 2, _5x, 1);
    var _F5 = __w._O3(_z32);
    if (!_F5) return _X12;
    _F5._O22(_y32, 0);
    return _z32;
}

function buffer_base64_decode_ext(buffer,
    _y32, offset) {
    var _F5 = __w._O3(buffer);
    if (!_F5) return _X12;
    _F5._O22(_y32, offset);
}

function buffer_save(buffer, _L22) {
    var _F5 = __w._O3(buffer);
    if (!_F5) return _X12;
    return _F5._K22(_L22, 0, _F5._s22);
}

function buffer_delete(_tb) {
    var _F5 = __w._O3(_tb);
    if (!_F5) return _X12;
    _F5._2x = null;
    _F5._v22 = null;
    return 0;
}

function buffer_load(_Dg) {
    var _qq = _Pc(_Dg, true);
    if (_qq == null) _qq = _Pc(_Dg, false);
    if (_qq == null) return -1;
    return buffer_base64_decode(_qq);
}

function buffer_save_ext(buffer, _L22, offset, size) {
    var _F5 = __w._O3(buffer);
    if (!_F5) return _X12;
    return _F5._K22(_L22, offset, size);
}

function buffer_load_ext(buffer, _L22, offset) {
    var _F5 = __w._O3(buffer);
    if (!_F5) return _X12;
    var _qq = _Pc(_L22, true);
    if (_qq == null) _qq = _Pc(_L22, false);
    if (_qq == null) return -1;
    _F5._O22(_qq, offset);
}

function buffer_load_partial(buffer, _L22, _q32, _On, _A32) {
    var _F5 = __w._O3(buffer);
    if (!_F5) return _X12;
    var _qq = _Pc(_L22, true);
    if (_qq == null) _qq = _Pc(_L22, false);
    if (_qq == null) return -1;
    var _Q22 = new Uint8Array(_F5._2x);
    _822(_qq, _Q22.length - _A32, _Q22, _A32, false, _q32);
}

function buffer_get_address(_tb) {
    var _F5 = __w._O3(_tb);
    if (!_F5) return undefined;
    return _F5._2x;
}

function buffer_get_surface(_MB, _B32, _Tg, _TK, _C32) {
    _Un("buffer_get_surface()");
}
vertex_create_buffer = function() {
    _56("vertex_create_buffer");
};
vertex_create_buffer_ext = function(size) {
    _56("vertex_create_buffer_ext");
};
vertex_delete_buffer = function(buffer) {
    _56("vertex_delete_buffer");
};
vertex_begin = function(buffer, _KF1) {
    _56("vertex_begin");
};
vertex_end = function(buffer) {
    _56("vertex_end");
};
vertex_position = function(buffer, x, y) {
    _56("vertex_position");
};
vertex_position_3d = function(buffer, x, y, _96) {
    _56("vertex_position_3d");
};
vertex_colour = function(buffer, _F4, alpha) {
    _56("vertex_colour");
};
_D32 = function(buffer, _d3, _Y4, _g3, _Z4) {
    _56("vertex_rgba");
};
vertex_argb = function(buffer, _d3, _Y4, _g3, _Z4) {
    _56("vertex_argb");
};
vertex_texcoord = function(buffer, _W1, _X1) {
    _56("vertex_texcoord");
};
vertex_normal = function(buffer, x, y, _96) {
    _56("vertex_normal");
};
vertex_float1 = function(buffer, x) {
    _56("vertex_float1");
};
vertex_float2 = function(buffer, x, y) {
    _56("vertex_float2");
};
vertex_float3 = function(buffer, x, y, _96) {
    _56("vertex_float3");
};
vertex_float4 = function(buffer, x, y, _96, w) {
    _56("vertex_float4");
};
vertex_ubyte4 = function(buffer, x, y, _96, w) {
    _56("vertex_ubyte4");
};
vertex_freeze = function(buffer) {
    _56("vertex_freeze");
};
vertex_submit = function(buffer) {
    _56("vertex_submit");
};
var _E32 = 8 * 1024;
var _F32 = [];

function _G32() {
    vertex_create_buffer = _H32;
    vertex_create_buffer_ext = _I32;
    vertex_delete_buffer = _J32;
    vertex_begin = _K32;
    vertex_end = _L32;
    vertex_position = _M32;
    vertex_position_3d = _N32;
    vertex_colour = _O32;
    _D32 = _P32;
    vertex_argb = _Q32;
    vertex_texcoord = _R32;
    vertex_normal = _S32;
    vertex_float1 = _T32;
    vertex_float2 = _U32;
    vertex_float3 = _V32;
    vertex_float4 = _W32;
    vertex_ubyte4 = _X32;
    vertex_freeze = _Y32;
    vertex_submit = _Z32;
}

function _H32() {
    return vertex_create_buffer_ext(_E32);
}

function _I32(_l7) {
    var __32 = new _k7(_l7);
    var _042 = _F32.length;
    for (var i = 0; i < _F32; i++) {
        if ((_F32[i] === null) || (_F32[i] === undefined)) {
            _042 = i;
            break;
        }
    }
    _F32[_042] = __32;
    return _042;
}

function _J32(_MB) {
    _F32[_MB] = null;
}

function _K32(_MB, _6L) {
    _F32[_MB]._M7(_6L);
}

function _L32(_MB) {
    _F32[_MB]._O7();
}

function _M32(_MB, x, y) {
    _F32[_MB]._P7(x, y);
}

function _N32(_MB, x, y, _96) {
    _F32[_MB]._S7(x, y, _96);
}

function _O32(_MB, _F4, alpha) {
    _F32[_MB]._U7(_F4, alpha);
}

function _P32(_MB, _Z7) {
    _F32[_MB]._Y7(_Z7);
}

function _Q32(_MB, _08) {
    _F32[_MB].__7(_08);
}

function _R32(_MB, _W1, _X1) {
    _F32[_MB]._18(_W1, _X1);
}

function _S32(_MB, x, y, _96) {
    _F32[_MB]._38(x, y, _96);
}

function _T32(_MB, x) {
    _F32[_MB]._58(x);
}

function _U32(_MB, x, y) {
    _F32[_MB]._78(x, y);
}

function _V32(_MB, x, y, _96) {
    _F32[_MB]._88(x, y, _96);
}

function _W32(_MB,
    x, y, _96, w) {
    _F32[_MB]._98(x, y, _96, w);
}

function _X32(_MB, x, y, _96, w) {
    _F32[_MB]._b8(x, y, _96, w);
}

function _Y32(_MB) {
    var __32 = _F32[_MB];
    if (__32) {
        __32._d8();
    }
}

function _Z32(_MB, _i8, _j8) {
    var _57, __32 = _F32[_MB];
    if (__32) {
        __32._h8(_I6(_i8), _j8);
    }
}

function _IY1() {
    this.__type = "[BuiltIn]";
    this.room = 0;
    this.room_first = 0;
    this.room_last = 0;
    this.transition_kind = 0;
    this.transition_steps = 0;
    this.score = 0;
    this.lives = 0;
    this.health = 100;
    this.game_id = 0;
    this.working_directory = "/";
    this.temp_directory = "/";
    this.program_directory = "/";
    this.delta_time = 0;
    this._142 = 0;
    this.room_width = 0;
    this.room_height = 0;
    this.room_caption = "room";
    this.room_speed = 30;
    this.room_persistent = false;
    this.background_color = 0x00000000;
    this.background_showcolor = false;
    this.background_visible = false;
    this.background_foreground = false;
    this.background_index = 0;
    this.background_x = 0;
    this.background_y = 0;
    this.background_width = 0;
    this.background_height = 0;
    this.background_htiled = 0;
    this.background_vtiled = 0;
    this.background_xscale = 1.0;
    this.background_yscale = 1.0;
    this.background_hspeed = 0;
    this.background_vspeed = 0;
    this.background_blend = 0;
    this.background_alpha = 1.0;
    this.view_enabled = false;
    this.view_current = 0;
    this.view_visible = 0;
    this.view_xview = 0;
    this.view_yview = 0;
    this.view_wview = 0;
    this.view_hview = 0;
    this.view_xport = 0;
    this.view_yport = 0;
    this.view_wport = 0;
    this.view_hport = 0;
    this.view_angle = 0;
    this.view_hborder = 0;
    this.view_vborder = 0;
    this.view_hspeed = 0;
    this.view_vspeed = 0;
    this.view_object = 0;
    this.mouse_x = 0;
    this.mouse_y = 0;
    this.mouse_button = 0;
    this.mouse_lastbutton = 0;
    this.keyboard_key = 0;
    this.keyboard_lastkey = 0;
    this.keyboard_lastchar = "";
    this.keyboard_string = "";
    this.webgl_enabled = false;
    this.show_score = false;
    this.show_lives = false;
    this.show_health = false;
    this.caption_score = "score";
    this.caption_lives = "lives";
    this.caption_health = "health";
    this.fps = 0;
    this.fps_real = 0;
    this.current_time = 0;
    this.current_year = 0;
    this.current_month = 0;
    this.current_day = 0;
    this.current_weekday = 0;
    this.current_hour = 0;
    this.current_minute = 0;
    this.current_second = 0;
    this.event_action = 0;
    this.secure_mode = 0;
    this.error_occurred = 0;
    this.error_last = 0;
    this.gamemaker_registered = true;
    this.gamemaker_pro = true;
    this._242 = 8.2;
    this.async_load = -1;
    this._ey = -1;
    this.debug_mode = false;
    this.application_surface = -1;
    this.view_visible = [];
    this.view_xview = [];
    this.view_yview = [];
    this.view_wview = [];
    this.view_hview = [];
    this.view_xport = [];
    this.view_yport = [];
    this.view_wport = [];
    this.view_hport = [];
    this.view_angle = [];
    this.view_hborder = [];
    this.view_vborder = [];
    this.view_hspeed = [];
    this.view_vspeed = [];
    this.view_object = [];
    this.view_surface_id = [];
    this.background_visible = [];
    this.background_foreground = [];
    this.background_index = [];
    this.background_x = [];
    this.background_y = [];
    this.background_width = [];
    this.background_height = [];
    this.background_htiled = [];
    this.background_vtiled = [];
    this.background_xscale = [];
    this.background_yscale = [];
    this.background_hspeed = [];
    this.background_vspeed = [];
    this.background_blend = [];
    this.background_alpha = [];
}
_IY1.prototype.get_argument_relative = function(_tb) {
    return _cd;
};
_IY1.prototype.get_instance_id = function(_tb) {
    return _81._Oy._O3(_tb).id;
};
_IY1.prototype.get_instance_count = function() {
    return _81._Oy.length;
};
_IY1.prototype.set_view_enable = function(_Xk) {
    _81._4a = _Xk;
};
_IY1.prototype.get_view_enable = function() {
    return _81._4a;
};
_IY1.prototype.get_browser_width = function() {
    return _yu();
};
_IY1.prototype.get_browser_height = function() {
    return _zu();
};
_IY1.prototype.get_delta_time = function() {
    return this.delta_time;
};
_IY1.prototype.get_os_type = function() {
    return _hP;
};
_IY1.prototype.get_os_device = function() {
    return YoYo_GetDevice();
};
_IY1.prototype.get_os_browser = function() {
    return _jP();
};
_IY1.prototype.get_os_version = function() {
    return _kP();
};
_IY1.prototype.get_async_load = function() {
    return this.async_load;
};
_IY1.prototype.get_display_aa = function() {
    return 0;
};
_IY1.prototype.get_iap_data = function() {
    return this._ey;
};
_IY1.prototype.set_current_room = function(_7f) {
    room_goto(_7f);
};
_IY1.prototype.get_current_room = function() {
    return _81.id;
};
_IY1.prototype.setbackground_color = function(_f2) {
    _81._342 = this.background_color = _f2;
};
_IY1.prototype.getbackground_color = function() {
    return this.background_color;
};
_IY1.prototype._442 = function() {
    return g_pBuiltIn.application_surface;
};
_IY1.prototype._542 = function(_f2) {
    g_pBuiltIn.view_visible[0] = ~~_f2;
};
_IY1.prototype._642 = function(_f2) {
    g_pBuiltIn.view_xview[0] = ~~_f2;
};
_IY1.prototype._742 = function(_f2) {
    g_pBuiltIn.view_yview[0] = ~~_f2;
};
_IY1.prototype._842 = function(_f2) {
    g_pBuiltIn.view_wview[0] = ~~_f2;
};
_IY1.prototype._942 = function(_f2) {
    g_pBuiltIn.view_hview[0] = ~~_f2;
};
_IY1.prototype._a42 = function(_f2) {
    g_pBuiltIn.view_xport[0] = ~~_f2;
};
_IY1.prototype._b42 = function(_f2) {
    g_pBuiltIn.view_yport[0] = ~~_f2;
};
_IY1.prototype._c42 = function(_f2) {
    g_pBuiltIn.view_wport[0] = ~~_f2;
};
_IY1.prototype._d42 = function(_f2) {
    g_pBuiltIn.view_hport[0] = ~~_f2;
};
_IY1.prototype._e42 = function(_f2) {
    g_pBuiltIn.view_angle[0] = _f2;
};
_IY1.prototype._f42 = function(_f2) {
    g_pBuiltIn.view_hborder[0] = ~~_f2;
};
_IY1.prototype._g42 = function(_f2) {
    g_pBuiltIn.view_vborder[0] = ~~_f2;
};
_IY1.prototype._h42 = function(_f2) {
    g_pBuiltIn.view_hspeed[0] = ~~_f2;
};
_IY1.prototype._i42 = function(_f2) {
    g_pBuiltIn.view_vspeed[0] = ~~_f2;
};
_IY1.prototype._j42 = function(_f2) {
    g_pBuiltIn.view_object[0] = ~~_f2;
};
_IY1.prototype._k42 = function(_f2) {
    g_pBuiltIn.view_surface_id[0] = ~~_f2;
};
_IY1.prototype._l42 = function(_f2) {
    return g_pBuiltIn.view_visible[0];
};
_IY1.prototype._m42 = function(_f2) {
    return g_pBuiltIn.view_xview[0];
};
_IY1.prototype._n42 = function(_f2) {
    return g_pBuiltIn.view_yview[0];
};
_IY1.prototype._o42 = function(_f2) {
    return g_pBuiltIn.view_wview[0];
};
_IY1.prototype._p42 = function(_f2) {
    return g_pBuiltIn.view_hview[0];
};
_IY1.prototype._q42 = function(_f2) {
    return g_pBuiltIn.view_xport[0];
};
_IY1.prototype._r42 = function(_f2) {
    return g_pBuiltIn.view_yport[0];
};
_IY1.prototype._s42 = function(_f2) {
    return g_pBuiltIn.view_wport[0];
};
_IY1.prototype._t42 = function(_f2) {
    return g_pBuiltIn.view_hport[0];
};
_IY1.prototype._u42 = function(_f2) {
    return g_pBuiltIn.view_angle[0];
};
_IY1.prototype._v42 = function(_f2) {
    return g_pBuiltIn.view_hborder[0];
};
_IY1.prototype._w42 = function(_f2) {
    return g_pBuiltIn.view_vborder[0];
};
_IY1.prototype._x42 = function(_f2) {
    return g_pBuiltIn.view_hspeed[0];
};
_IY1.prototype._y42 = function(_f2) {
    return g_pBuiltIn.view_vspeed[0];
};
_IY1.prototype._z42 = function(_f2) {
    return g_pBuiltIn.view_object[0];
};
_IY1.prototype._A42 = function(_f2) {
    return g_pBuiltIn.view_surface_id[0];
};
_IY1.prototype._B42 = function(_f2) {
    g_pBuiltIn.background_visible[0] = _f2;
};
_IY1.prototype._C42 = function(_f2) {
    g_pBuiltIn.background_foreground[0] = _f2;
};
_IY1.prototype._D42 = function(_f2) {
    g_pBuiltIn.background_index[0] = _f2;
};
_IY1.prototype._E42 = function(_f2) {
    g_pBuiltIn.background_x[0] = ~~_f2;
};
_IY1.prototype._F42 = function(_f2) {
    g_pBuiltIn.background_y[0] = ~~_f2;
};
_IY1.prototype._G42 = function(_f2) {
    g_pBuiltIn.background_width[0] = ~~_f2;
};
_IY1.prototype._H42 = function(_f2) {
    g_pBuiltIn.background_height[0] = ~~_f2;
};
_IY1.prototype._I42 = function(_f2) {
    g_pBuiltIn.background_htiled[0] = _f2;
};
_IY1.prototype._J42 = function(_f2) {
    g_pBuiltIn.background_vtiled[0] = _f2;
};
_IY1.prototype._K42 = function(_f2) {
    g_pBuiltIn.background_xscale[0] = _f2;
};
_IY1.prototype._L42 = function(_f2) {
    g_pBuiltIn.background_yscale[0] = _f2;
};
_IY1.prototype._M42 = function(_f2) {
    g_pBuiltIn.background_hspeed[0] = _f2;
};
_IY1.prototype._N42 = function(_f2) {
    g_pBuiltIn.background_vspeed[0] = _f2;
};
_IY1.prototype._O42 = function(_f2) {
    g_pBuiltIn.background_blend[0] = _f2 & 0xffffff;
};
_IY1.prototype.setbackground_showcolor = function(_f2) {
    _81._P42 = _f2;
};
_IY1.prototype.getbackground_showcolor = function(_f2) {
    return _81._P42;
};
_IY1.prototype._Q42 = function(_f2) {
    if (_f2 < 0) _f2 = 0;
    if (_f2 > 1) _f2 = _b3;
    g_pBuiltIn.background_alpha[0] = _f2;
};
_IY1.prototype._R42 = function() {
    return g_pBuiltIn.background_visible[0];
};
_IY1.prototype._S42 = function() {
    return g_pBuiltIn.background_foreground[0];
};
_IY1.prototype._T42 = function() {
    return g_pBuiltIn.background_index[0];
};
_IY1.prototype._U42 = function() {
    return g_pBuiltIn.background_x[0];
};
_IY1.prototype._V42 = function() {
    return g_pBuiltIn.background_y[0];
};
_IY1.prototype._W42 = function() {
    return g_pBuiltIn.background_width[0];
};
_IY1.prototype._X42 = function() {
    return g_pBuiltIn.background_height[0];
};
_IY1.prototype._Y42 = function() {
    return g_pBuiltIn.background_htiled[0];
};
_IY1.prototype._Z42 = function() {
    return g_pBuiltIn.background_vtiled[0];
};
_IY1.prototype.__42 = function() {
    return g_pBuiltIn.background_xscale[0];
};
_IY1.prototype._052 = function() {
    return g_pBuiltIn.background_yscale[0];
};
_IY1.prototype._152 = function() {
    return g_pBuiltIn.background_hspeed[0];
};
_IY1.prototype._252 = function() {
    return g_pBuiltIn.background_vspeed[0];
};
_IY1.prototype._352 = function() {
    return g_pBuiltIn.background_blend[0];
};
_IY1.prototype._452 = function() {
    return g_pBuiltIn.background_alpha[0];
};
_IY1.prototype.set_room_speed = function(_f2) {
    return _81._552(_f2);
};
_IY1.prototype.set_room_caption = function(_f2) {
    return _81._652(_f2);
};
_IY1.prototype.set_room_width = function(_f2) {
    return _81._752(_f2);
};
_IY1.prototype.set_room_height = function(_f2) {
    return _81._852(_f2);
};
_IY1.prototype.set_room_persistent = function(_f2) {
    return _81._952((_f2 > 0.5) ? true : false);
};
_IY1.prototype.set_cursor_sprite = function(_f2) {
    _rd = _f2;
};
_IY1.prototype.get_cursor_sprite = function() {
    return _rd;
};
_IY1.prototype.get_current_time = function() {
    var _f3 = get_timer();
    return ~~(_f3 / 1000);
};
_IY1.prototype.get_current_year = function() {
    var _Cd = new Date();
    return (_Vm) ? _Cd.getFullYear() : _Cd.getUTCFullYear();
};
_IY1.prototype.get_current_month = function() {
    var _Cd = new Date();
    return (_Vm) ? _Cd.getMonth() + 1 : _Cd.getUTCMonth() + 1;
};
_IY1.prototype.get_current_day = function() {
    var _Cd = new Date();
    return (_Vm) ? _Cd.getDate() : _Cd.getUTCDate();
};
_IY1.prototype.get_current_weekday = function() {
    var _Cd = new Date();
    return (_Vm) ? _Cd.getDay() : _Cd.getUTCDay();
};
_IY1.prototype.get_current_hour = function() {
    var _Cd = new Date();
    return (_Vm) ? _Cd.getHours() : _Cd.getUTCHours();
};
_IY1.prototype.get_current_minute = function() {
    var _Cd = new Date();
    return (_Vm) ? _Cd.getMinutes() : _Cd.getUTCMinutes();
};
_IY1.prototype.get_current_second = function() {
    var _Cd = new Date();
    return (_Vm) ? _Cd.getSeconds() : _Cd.getUTCSeconds();
};
_IY1.prototype.get_current_event_type = function() {
    return _a52;
};
_IY1.prototype.get_current_event_number = function() {
    return _b52;
};
_IY1.prototype.get_current_event_object = function() {
    return _c52._gz;
};
_IY1.prototype.set_lives_function = function(_ee) {
    var _fe = this.lives;
    this.lives = _vb(_ee);
    if ((_fe > 0) && (this.lives <= 0)) {
        _ge._B2(_he, 0);
    }
};
_IY1.prototype.set_health_function = function(_ne) {
    var _oe = 0.0;
    _oe = this.health;
    this.health = _ne;
    if ((_oe > 0) && (this.health <= 0)) {
        _ge._B2(_pe, 0);
    }
};
_IY1.prototype._Ya = function(_d52) {
    for (var _X1 = 0; _X1 < _d52.length; _X1++) {
        var _6d = _d52[_X1];
        this[_X1] = _6d;
    }
};

function _or() {
    this.__type = "[Font]";
    this._pr = false;
    this._e52 = false;
    this.pName = "";
    this._hr = "";
    this.size = 12;
    this.bold = false;
    this.italic = false;
    this.first = 32;
    this.last = 127;
    this._tr = "";
    this.prop = false;
    this._f52 = 0;
    this._g52 = null;
    this.antialias = 0;
    this.charset = 0;
    this._q2 = 1;
    this._r2 = 1;
    this._h52 = 0.5;
    this.glyphs = null;
    this._Xg = null;
    this._Ar = null;
}
_or.prototype._i52 = function(_O12) {
    this.pName = _O12.pName;
    this._hr = _O12.fontname;
    this.size = _O12.size;
    this.bold = _O12.bold;
    this.italic = _O12.italic;
    this.first = _O12.first & 0xffff;
    this._pr = false;
    this.antialias = 0;
    this.charset = 0;
    if (((_O12.first >> 16) & 0xff) !== 0) this.charset = (_O12.first >> 16) & 0xff;
    if (((_O12.first >> 24) & 0xff) !== 0) this.antialias = ((_O12.first >> 24) & 0xff) - 1;
    this.last = _O12.last;
    this._q2 = _O12.scaleX;
    this._r2 = _O12.scaleY;
    this.glyphs = [];
    var _dn = 99999999;
    var _b3 = -99999999;
    var maxHeight = 0;
    for (var _j52 = 0; _j52 < _O12.glyphs.length; _j52++) {
        var index = -2;
        _k52 = _O12.glyphs[_j52];
        if (_k52.c != undefined) index = _k52.c.charCodeAt(0);
        else if (_k52.i != undefined) index = _k52.i;
        this.glyphs[index] = _k52;
        if (index < _dn) _dn = index;
        if (index > _b3) _b3 = index;
        if (_k52.h > maxHeight) maxHeight = _k52.h;
    }
    this._l52 = maxHeight;
    this.first = _dn;
    this.last = _b3;
    this._Xg = _P12(_O12.TPageEntry);
};
_or.prototype._xr = function(_73, _lr, _wr, _7r, _m52) {
    this._pr = true;
    this._Ar = _le._O3(_73);
    this.pName = "sprite_font: " + this._Ar.pName;
    this._hr = "spritefont";
    this.size = _73.width;
    this.bold = false;
    this.italic = false;
    this.first = _lr;
    this._g52 = _m52;
    this._e52 = true;
    this.prop = _wr;
    this.last = _lr + this._Ar._93;
    this._f52 = _7r;
    this.antialias = 0;
    this.charset = 10;
    this._q2 = 1;
    this._r2 = 1;
    this.glyphs = null;
    this._Xg = null;
    this._n52 = 0;
    for (var i = 0; i < this._Ar._M1.length; i++) {
        var _L1 = this._Ar._M1[i];
        if (this.prop) {
            this._n52 = _c3(this._n52, _L1.CropWidth);
        } else {
            this._n52 = _c3(this._n52, _L1.ow);
        }
    }
    this._o52();
};
_or.prototype._o52 = function() {
    var height = 0;
    for (var _X2 = 0; _X2 < this._Ar._M1.length; _X2++) {
        var _L1 = this._Ar._M1[_X2];
        height = _c3(height, _L1.oh);
    }
    this.size = height;
};
_or.prototype._p52 = function(_Ge) {
    if ((this._g52 != null) && (this._g52 != undefined)) {
        var _xc = "";
        for (var i = 0; i < _Ge.length; i++) {
            if (_Ge.charAt(i) === '\n') {
                _xc = _xc + _Ge.charAt(i);
            } else {
                var _Vq = this._g52.indexOf(_Ge.charAt(i));
                if ((_Vq >= 0) && (_Vq < this._g52.length)) {
                    _xc = _xc + String.fromCharCode(this.first + _Vq);
                }
            }
        }
        return _xc;
    }
    return _Ge;
};
_or.prototype._br = function(_Ge) {
    if ((!_Ge) || (0 === _Ge.length)) return 0;
    if (this._pr) {
        return this.size;
    } else {
        return this._l52;
    }
};
_or.prototype._cr = function(_Ge) {
    if ((!_Ge) || (0 === _Ge.length)) return 0;
    var _xc = this._p52(_q52(_Ge));
    var _8G1 = _xc.split('\n');
    if (this._pr) {
        if (this._e52) {
            var _8e = 0;
            for (var i = 0; i < _8G1.length; i++) {
                var _r52 = 0;
                var _Cq = _8G1[i];
                for (var _k3 = 0; _k3 < _Cq.length; _k3++) {
                    _r52 += this._s52(_xc.charCodeAt(_k3));
                }
                _8e = _c3(_8e, _r52);
            }
            return _8e;
        } else {
            var _8e = 0;
            _95.font = this._tr;
            for (var i = 0; i < _8G1.length; i++) {
                var _fQ1 = _95.measureText(_8G1[i]);
                _8e = _c3(_8e, _fQ1.width);
            }
            return _8e;
        }
    } else {
        var _8e = 0;
        for (var i = 0; i < _8G1.length; i++) {
            var _r52 = 0;
            var _Cq = _8G1[i];
            for (var _k3 = 0; _k3 < _Cq.length; _k3++) {
                var c = _Cq.charCodeAt(_k3);
                var _k52 = this.glyphs[c];
                if (!_k52) {
                    _k52 = this.glyphs[this.first];
                }
                _r52 += _k52.shift;
            }
            _8e = _c3(_8e, _r52);
        }
        return _8e;
    }
};
_or.prototype._s52 = function(_fQ) {
    if (this._pr) {
        if (this._e52) {
            var _8e = this._f52;
            if ((_fQ >= this.first) && (_fQ < this.last)) {
                var _L1 = this._Ar._M1[_fQ - this.first];
                if (this.prop) {
                    _8e += _L1.CropWidth;
                } else {
                    _8e += _L1.ow;
                }
            } else if (_fQ === 32) {
                _8e += this._n52;
            }
            return _8e;
        } else {
            _95.font = this._tr;
            if (_95.measureText) {
                var _fQ1 = _95.measureText(String.fromCharCode(_fQ));
                return _fQ1.width;
            }
            return 0;
        }
    }
    var _k52 = this.glyphs[_fQ];
    if (_k52) {
        return _k52.shift;
    } else if (0x20 >= this.first && 0x20 <= this.last) {
        return this.glyphs[0x20].shift;
    } else {
        return this.glyphs[this.first].shift;
    }
};
_or.prototype._t52 = function(_h2, _i2, _u52, _Ie, _Je, _l2, _e7, __6) {
    var _v52;
    var _w52 = this._Xg;
    if (!_w52._T1.complete) return;
    var _On = _u52.length;
    _e7 = _e7 & 0xffffff | ((__6 * 255) << 24);
    for (var i = 0; i < _On; i++) {
        _fQ = _u52.charCodeAt(i);
        var _k52 = this.glyphs[_fQ];
        if (!_k52) _k52 = this.glyphs[0x20];
        var _C4 = _k52.x;
        var _D4 = _k52.y;
        var _lv = _k52.w;
        var _nv = _k52.h;
        if (Math.abs(_l2) < 0.001) {
            _95._hM(_w52, _C4 + _w52.x, _D4 + _w52.y, _lv, _nv, _h2 + (_k52.offset * _Ie), _i2, _lv * this._q2 * _Ie, _nv * this._r2 * _Je, _e7);
        } else {
            _95._hM(_w52, _C4 + _w52.x, _D4 + _w52.y, _lv, _nv, _h2 + (_k52.offset * _Ie), _i2, _lv, _nv, _e7);
        }
        _h2 += _Ie * this._s52(_fQ);
    }
};
_or.prototype._x52 = function(_h2, _i2, _l2) {
    var _fm = new _6l();
    _fm._9m(-_h2, -_i2, 0);
    var _km = new _6l();
    _km._dm(_l2);
    var _nR = new _6l();
    _nR._im(_fm, _km);
    _fm._9m(_h2, _i2, 0);
    var _y52 = new _6l();
    _y52._im(_nR, _fm);
    return _y52;
};
_or.prototype._z52 = function(_h2, _i2, _u52, _Ie,
    _Je, _l2, _e7, __6) {
    if (this._pr) {
        this._t52(_h2, _i2, _u52, _Ie, _Je, _l2, _e7, __6);
    }
    var _v52;
    var _w52 = this._Xg;
    if (!_w52._T1.complete) return;
    var _On = _u52.length;
    _e7 = _e7 & 0xffffff | ((__6 * 255) << 24);
    var _Oe = _e7,
        _Pe = _e7,
        _Qe = _e7,
        _Re = _e7;
    if (_A52) {
        _Oe &= 0xfffefffe;
        _Pe &= 0xfffefffe;
        _Qe &= 0xfffefffe;
        _Re &= 0xfffefffe;
        _Pe |= 0x00010000;
        _Qe |= 0x00000001;
        _Re |= 0x00010001;
    }
    var _F5, _N5, _P5, _R5;
    if (!_w52._T1._C5) _D5(_w52);
    var _B52;
    if (Math.abs(_l2) > 0.001) {
        _B52 = _hm(_8m);
        _7m(_8m, this._x52(_h2, _i2, _l2));
    }
    var _E5 = _On * 6;
    _F5 = _b4._G5(_H5._I5, _w52._T1._C5,
        _b4._J5, _E5);
    var _K5 = _F5._L5() >> 2;
    var index = _K5 * _F5._M5;
    _F5._M5 += _E5;
    var _T5 = index,
        _U5 = _T5 + _K5,
        _Z1 = _U5 + _K5,
        _V5 = _Z1 + _K5,
        _W5 = _V5 + _K5,
        _X5 = _W5 + _K5;
    _N5 = _F5._O5;
    _P5 = _F5._Q5;
    _R5 = _F5._S5;
    var scaleX, scaleY;
    if (Math.abs(_l2) < 0.001) {
        scaleX = this._q2 * _Ie;
        scaleY = this._r2 * _Je;
    } else {
        scaleX = 1;
        scaleY = 1;
    }
    var _C52 = this._h52,
        _D52 = 1.0 / _w52._T1.width,
        _E52 = 1.0 / _w52._T1.height;
    for (var i = 0; i < _On; i++) {
        _fQ = _u52.charCodeAt(i);
        var _k52 = this.glyphs[_fQ];
        if (!_k52) {
            _k52 = this.glyphs[0x20];
        }
        var _C4 = _k52.x,
            _D4 = _k52.y,
            _lv = _k52.w,
            _nv = _k52.h;
        var x = _h2 + (_k52.offset * _Ie);
        _N5[_T5 + 0] = _N5[_W5 + 0] = _N5[_X5 + 0] = x - _C52;
        _N5[_T5 + 1] = _N5[_U5 + 1] = _N5[_X5 + 1] = _i2 - _C52;
        _N5[_U5 + 0] = _N5[_Z1 + 0] = _N5[_V5 + 0] = x + _C52 + (_lv * scaleX);
        _N5[_Z1 + 1] = _N5[_V5 + 1] = _N5[_W5 + 1] = _i2 + _C52 + (_nv * scaleY);
        _N5[_T5 + 2] = _N5[_U5 + 2] = _N5[_Z1 + 2] = _N5[_V5 + 2] = _N5[_W5 + 2] = _N5[_X5 + 2] = _Y5;
        _R5[_T5 + 0] = _R5[_W5 + 0] = _R5[_X5 + 0] = (_w52.x + _C4 - _C52) * _D52;
        _R5[_T5 + 1] = _R5[_U5 + 1] = _R5[_X5 + 1] = (_w52.y + _D4 - _C52) * _E52;
        _R5[_U5 + 0] = _R5[_Z1 + 0] = _R5[_V5 + 0] = (_w52.x + _C4 + _lv + _C52) * _D52;
        _R5[_Z1 + 1] = _R5[_V5 + 1] = _R5[_W5 + 1] = (_w52.y + _D4 + _nv + _C52) * _E52;
        _P5[_T5] = _P5[_X5] = _Oe;
        _P5[_U5] = _Pe;
        _P5[_Z1] = _P5[_V5] = _Qe;
        _P5[_W5] = _Re;
        _T5 += (_K5 * 6);
        _U5 += (_K5 * 6);
        _Z1 += (_K5 * 6);
        _V5 += (_K5 * 6);
        _W5 += (_K5 * 6);
        _X5 += (_K5 * 6);
        _h2 += _Ie * _k52.shift;
    }
    if (_B52 != undefined) {
        _7m(_8m, _B52);
    }
};
_or.prototype._F52 = function(_h2, _i2, _u52, _Ie, _Je, _l2, _e7, __6) {
    var _v52;
    var _w52 = _P1[this._Xg.tp];
    if (!_w52.complete) return;
    _95.globalAlpha = __6;
    var _On = _u52.length;
    _e7 = _e7 & 0xffffff;
    if (_e7 != 0xffffff) {
        _v52 = _b5(this._Xg, _e7);
    }
    _l2 = _kY1(_l2);
    if (Math.abs(_l2) > 0.001) {
        _G52(_h2, _i2, this._q2 * _Ie, this._q2 * _Je, -_l2);
        _h2 = 0;
        _i2 = 0;
    }
    _h2 = ~~(_h2 + 0.5);
    _i2 = ~~(_i2 + 0.5);
    for (var i = 0; i < _On; i++) {
        _fQ = _u52.charCodeAt(i);
        var _k52 = this.glyphs[_fQ];
        if (!_k52) {
            _k52 = this.glyphs[0x20];
        }
        var _C4 = _k52.x;
        var _D4 = _k52.y;
        var _lv = _k52.w;
        var _nv = _k52.h;
        if (_lv == 99999) {
            continue;
        }
        if ((_e7 != 0xffffff) && (_v52 != null)) {
            if (Math.abs(_l2) < 0.001) {
                _95._hM(_v52, _C4, _D4, _lv, _nv, _h2 + (_k52.offset * _Ie), _i2, _lv * this._q2 * _Ie, _nv * this._r2 * _Je);
            } else {
                _95._hM(_v52, _C4, _D4, _lv, _nv, _h2 + _k52.offset, _i2, _lv, _nv);
            }
        } else {
            if (Math.abs(_l2) < 0.001) {
                _95._hM(_w52, _C4 + this._Xg.x,
                    _D4 + this._Xg.y, _lv, _nv, _h2 + (_k52.offset * _Ie), _i2, _lv * this._q2 * _Ie, _nv * this._r2 * _Je);
            } else {
                _95._hM(_w52, _C4 + this._Xg.x, _D4 + this._Xg.y, _lv, _nv, _h2 + _k52.offset, _i2, _lv, _nv);
            }
        }
        if (Math.abs(_l2) < 0.001) {
            _h2 += _Ie * this._s52(_fQ);
        } else {
            _h2 += this._s52(_fQ);
        }
    }
    if (Math.abs(_l2) > 0.001) _H52();
};
_or.prototype._I52 = function(_h2, _i2, _u52, _Ie, _Je, _l2, _e7, __6) {
    if (this._Ar == null) return;
    _95.globalAlpha = __6;
    var _On = _u52.length;
    _e7 = _e7 & 0xffffff;
    var _F4 = _e7 | (_X6 * 255) << 24;
    _l2 = _kY1(_l2);
    var _F3 = Math.sin(_l2);
    var _G3 = Math.cos(_l2);
    var _J52 = _F3 * _Ie;
    var _K52 = _G3 * _Ie;
    var _L52 = this._q2 * _Ie;
    var _M52 = this._r2 * _Je;
    for (var i = 0; i < _On; i++) {
        _fQ = _u52.charCodeAt(i);
        if (_fQ < this.first || _fQ >= this.last) {} else {
            var x = _h2;
            var y = _i2;
            var _L1 = this._Ar._M1[_fQ - this.first];
            var _w52 = _P1[_L1.tp];
            if (_w52.complete) {
                var _Mv = _L1.XOffset;
                var _Nv = _L1.YOffset;
                if (this.prop) _Mv = 0;
                if (_e7 != 0xffffff) {
                    var _v52;
                    if (!_b4) {
                        _v52 = _b5(_L1, _e7);
                    } else {
                        _v52 = _L1;
                    }
                    if (Math.abs(_l2) < 0.001) {
                        _95._hM(_v52, 0, 0, _L1.CropWidth, _L1.CropHeight, x + (_Mv * _L52), y + (_Nv * _M52), _L1.CropWidth * _L52, _L1.CropHeight * _M52);
                    } else {
                        _G52(x, y, _L52, _M52, -_l2);
                        _95._hM(_v52, 0, 0, _L1.CropWidth, _L1.CropHeight, _Mv, _Nv, _L1.CropWidth, _L1.CropHeight);
                        _H52();
                    }
                } else {
                    if (_b4) {
                        _w52 = _L1;
                    }
                    if (Math.abs(_l2) < 0.001) {
                        _95._hM(_w52, _L1.x, _L1.y, _L1.w, _L1.h, x + (_Mv * _L52), y + (_Nv * _M52), _L1.CropWidth * _L52, _L1.CropHeight * _M52);
                    } else {
                        _G52(x, y, _L52, _M52, -_l2);
                        _95._hM(_w52, _L1.x, _L1.y, _L1.w, _L1.h, _Mv, _Nv, _L1.CropWidth, _L1.CropHeight);
                        _H52();
                    }
                }
            }
        }
        var shift = this._s52(_fQ);
        _h2 = _h2 + _K52 * shift;
        _i2 = _i2 - _J52 * shift;
    }
};
_or.prototype._N52 = function(_h2, _i2, _u52, _Ie,
    _Je, _l2, _e7, __6) {
    if (this._Ar == null) return;
    _95.globalAlpha = __6;
    var _On = _u52.length;
    _e7 = _e7 & 0xffffff;
    var _F4 = _e7 | (_X6 * 255) << 24;
    var _O52 = _kY1(_l2);
    var _F3 = Math.sin(_O52);
    var _G3 = Math.cos(_O52);
    var _J52 = _F3 * _Ie;
    var _K52 = _G3 * _Ie;
    var _L52 = this._q2 * _Ie;
    var _M52 = this._r2 * _Je;
    var __2 = undefined;
    var _P52 = undefined;
    if (Math.abs(_l2) >= 0.001) {
        __2 = new _6l();
        _P52 = _hm(_8m);
    }
    for (var i = 0; i < _On; i++) {
        _fQ = _u52.charCodeAt(i);
        if (_fQ < this.first || _fQ > this.last) {} else {
            var x = _h2;
            var y = _i2;
            var _L1 = this._Ar._M1[_fQ - this.first];
            var _w52 = _P1[_L1.tp];
            if (_w52.complete) {
                var _Mv = _L1.XOffset;
                var _Nv = _L1.YOffset;
                if (this.prop) _Mv = 0;
                if (_P52 === undefined) {
                    _95._hM(_L1, _L1.x, _L1.y, _L1.w, _L1.h, x + (_Mv * _L52), y + (_Nv * _M52), _L1.CropWidth * _L52, _L1.CropHeight * _M52, _F4);
                } else {
                    __2._5_1(x, y, _L52, _M52, _l2);
                    _7m(_8m, __2);
                    _95._hM(_L1, _L1.x, _L1.y, _L1.w, _L1.h, _Mv, _Nv, _L1.CropWidth, _L1.CropHeight, _F4);
                }
            }
        }
        var shift = this._s52(_fQ);
        _h2 = _h2 + _K52 * shift;
        _i2 = _i2 - _J52 * shift;
    }
    if (_P52 !== undefined) {
        _7m(_8m, _P52);
    }
};

function _RY1() {
    this.Fonts = [];
    this.length = 0;
    this._ar = null;
    this._2r = 0;
    this._1r = 0;
    this._0r = 0;
    var _gr = _ir("Arial", 12, false, false, 32, 127, false);
    this.Fonts[-1] = _gr;
    _PX1 = -1;
    this._2r = _PX1;
}
_RY1.prototype._Q52 = function(_tb) {
    return this.Fonts[_tb];
};
_RY1.prototype._U9 = function() {
    this.Fonts = [];
    length = 0;
};
_RY1.prototype._1b = function(_O12) {
    var _gr = null;
    if (_O12 != null) {
        _gr = new _or();
        _gr._i52(_O12);
    }
    this.Fonts[this.Fonts.length] = _gr;
    return this.Fonts.length - 1;
};
_RY1.prototype._vr = function(_R52) {
    this.Fonts[this.Fonts.length] = _R52;
    return this.Fonts.length - 1;
};
_RY1.prototype._8r = function() {
    if (this._2r >= 0 && this._2r <= this.Fonts.length && this.Fonts[this._2r] != null) {
        this._ar = this.Fonts[this._2r];
    } else {
        this._ar = this.Fonts[-1];
    }
};
_RY1.prototype._O3 = function(_ha) {
    if (_ha >= 0 && _ha <= this.Fonts.length && this.Fonts[_ha]) {
        return this.Fonts[_ha];
    }
    return null;
};

function _q52(_xc) {
    if (_xc == null) return 0;
    var _S52 = _xc;
    var _Yh1 = "";
    var i = 0;
    var _mb = 0;
    while (_mb < _S52.length) {
        var _Cb = _S52[_mb];
        if (_Cb == '#') {
            if ((i > 0) && (_S52[_mb - 1] == '\\')) {
                _Yh1 = _Yh1.substring(0, _Yh1.length - 1) + '#';
            } else {
                _Yh1 += String.fromCharCode(0x0a);
                i++;
            }
        } else {
            _Yh1 += _Cb;
            i++;
        }
        _mb++;
    }
    return _Yh1;
}
_RY1.prototype.__n = function(_u52,
    _T52, _ar) {
    if (_u52 == null) return;
    if (_T52 < 0) _T52 = 10000000;
    var _U52 = _ar ? _ar._p52(" ") : " ";
    var _Nn = String.fromCharCode(0x0a);
    _Yn = [];
    var _V52 = 0;
    _u52 = _q52(_u52);
    var _On = _u52.length;
    var _3h = _u52;
    var start = 0;
    var end = 0;
    while (start < _On) {
        var _W52 = 0;
        if (_T52 == 10000000) {
            while (end < _On && _3h[end] != _Nn) {
                end++;
            }
            _Yn[_V52++] = _3h.substring(start, end);
        } else {
            while (end < _On) {
                if (_3h[end] != _U52) break;
                end++;
            }
            while (end < _On && _W52 < _T52) {
                c = _3h[end];
                if (c == _Nn) break;
                _W52 += this._ar._s52(c.charCodeAt(0));
                end++;
            }
            if (_W52 > _T52) {
                end--;
                _W52 -= this._ar._s52(_3h.charCodeAt(end));
            }
            if (_3h[end] == _Nn) {
                _Yn[_V52++] = _3h.substring(start, end);
            } else {
                if (end == start) return _Yn;
                if (end != _On) {
                    if ((_3h[end] != _U52) || (_3h[end] != _U52 && _3h[end + 1] != _U52)) {
                        while (end > start) {
                            if (_3h[--end] == _U52) break;
                        }
                    }
                }
                if (end > start) {
                    while (_3h[end - 1] == _U52) {
                        end--;
                    }
                } else if (end == start) {
                    while (_3h[end] != _U52 && end < _On) {
                        end++;
                    }
                }
                _Yn[_V52++] = _3h.substring(start, end);
            }
        }
        start = ++end;
    }
    return _Yn;
};
_RY1.prototype._3r = function(_Ge, x, y, _X52, _T52, _l2, _Ie, _Je) {
    var _NF = _Ie;
    var _OF = _Je;
    var _Y52 = 0.0;
    var _Z52 = 0.0;
    var _Yn = [];
    var i = 0;
    this._8r();
    var _ar = this._ar;
    var _xc = _ar._p52(_Ge);
    _Yn = this.__n(_xc, _T52, _ar);
    var _xF = _kY1(_l2);
    var _F3 = Math.sin(_xF);
    var _G3 = Math.cos(_xF);
    if (_X52 < 0) {
        _X52 = _ar ? _ar._br('M') : 20;
    }
    var __52 = _F3 * _OF * _X52;
    var _062 = _G3 * _OF * _X52;
    if (this._1r == 1) {
        y = y - Math.round((_Yn.length * _062) / 2.0);
        x = x - Math.round((_Yn.length * __52) / 2.0);
    }
    if (this._1r == 2) {
        y = y - Math.round(_Yn.length * _062);
        x = x - Math.round(_Yn.length * __52);
    }
    if (!_ar) {
        _95.fillStyle = _Wu;
        _95.globalAlpha = _X6;
        for (i = 0; i <= _Yn.length - 1; i++) {
            var _162 = _Yn[i];
            if (_162 != null) {
                _95.fillText(_162,
                    x, y + 13);
                y = y + _062;
                x = x + __52;
            }
        }
    } else {
        for (i = 0; i <= _Yn.length - 1; i++) {
            _Y52 = 0;
            _Z52 = 0;
            var _162 = _Yn[i];
            if (_162 != null) {
                if (this._0r == 1) _Y52 = -(_NF * _ar._cr(_162) / 2);
                if (this._0r == 2) _Y52 = -(_NF * _ar._cr(_162));
                if (_ar._e52) {
                    _Y52 -= (_NF * _ar._Ar.xOrigin);
                    _Z52 -= (_OF * _ar._Ar.yOrigin);
                }
                var _l3 = x + (_G3 * _Y52) + (_F3 * _Z52);
                var _n3 = y - (_F3 * _Y52) + (_G3 * _Z52);
                if (_ar._pr) {
                    if (_ar._e52) {
                        if (!_b4) {
                            _ar._I52(_l3, _n3, _162, _NF, _OF, _l2, _Y6, _X6);
                        } else {
                            _ar._N52(_l3, _n3, _162, _NF, _OF, _l2, _Y6, _X6);
                        }
                    } else {
                        if (_ar._qr) {
                            _262(_ar._tr, _162, _l3, _n3, 1, 1, _xF,
                                _Y6, _X6);
                        }
                    }
                } else {
                    if (_b4) {
                        _ar._z52(_l3, _n3, _162, _NF, _OF, _l2, _Y6, _X6);
                    } else {
                        _ar._F52(_l3, _n3, _162, _NF, _OF, _l2, _Y6, _X6);
                    }
                }
            }
            y = y + _062;
            x = x + __52;
        }
    }
};
_RY1.prototype._dr = function(_Ge, x, y, _X52, _T52) {
    _er = _fr = 0;
    var _Yn = [];
    var i = 0;
    this._8r();
    var _ar = this._ar;
    _Yn = this.__n(_Ge, _T52, _ar);
    if (_X52 < 0) {
        _X52 = _ar._br("M");
    }
    var _162;
    if (_Yn.length > 0) {
        for (i = 0; i < _Yn.length - 1; i++) {
            _162 = _Yn[i];
            if (_162 != null) {
                if (_er < _ar._cr(_162)) {
                    _er = _ar._cr(_162);
                }
            }
            _fr += _X52;
        }
        _fr += _ar._br("M");
    }
    _162 = _Yn[_Yn.length - 1];
    if (_er < _ar._cr(_162)) _er = _ar._cr(_162);
};
var _362;
var _P1;
var _462 = null;
var _KO = 1024;
var _LO = 768;
var _8M = 1;
var _aM = 1;
var _Fu = 0;
var _Gu = 0;
var _Hu = 0;
var _Iu = 0;
var _562 = 0;
var _662 = 0;
var _762 = 0;
var _862 = 0;
var _962 = [];
var _a62 = 0;
var _a5 = 0xffffff;
var _ih;
var _kh;
var _HN;
var _IN;
var _H52;
var _Au;
var _G52;
var _nh;

function _b62() {
    return _KO;
}

function _c62() {
    return _LO;
}

function _6M(_d62) {
    if (!_d62) return;
    _d62._e62 = _d62.transform;
    _d62._Eu = _d62.setTransform;
    _d62._Cu = _d62.save;
    _d62._Ju = _d62.restore;
    _d62._6v = _d62.fillRect;
    _d62._5v = _d62.strokeRect;
    _d62._ev = _d62.beginPath;
    _d62._Tv = _d62.arc;
    _d62._iv = _d62.stroke;
    _d62._hv = _d62.closePath;
    _d62.lineWidth = _d62.lineWidth;
    _d62._fv = _d62.moveTo;
    _d62._gv = _d62.lineTo;
    _d62._rv = _d62.fill;
    _d62._hM = _d62.drawImage;
    _d62._MN = _d62.getImageData;
    _d62._f62 = _d62.createImageData;
    _d62._g62 = _d62.putImageData;
    _d62._h62 = _d62.clip;
    _d62._i62 = _d62.rect;
}

function _mN(_d62) {
    _d62.imageSmoothingEnabled = false;
    _d62.webkitImageSmoothingEnabled = false;
    _d62.mozImageSmoothingEnabled = false;
    _d62.msImageSmoothingEnabled = false;
    _d62.oImageSmoothingEnabled = false;
    _d62.imagerendering = "pixelated";
    _d62.msInterpolationMode = "nearest-neighbor";
}

function _KY1(_0l1) {
    _P1 = [];
    _462 = null;
    _Fu = 0;
    _Gu = 0;
    _Hu = 0;
    _Iu = 0;
    _562 = 0;
    _662 = 0;
    _762 = 0;
    _862 = 0;
    _962 = [];
    _962[0] = 1;
    _962[1] = 0;
    _962[2] = 0;
    _962[3] = 0;
    _962[4] = 1;
    _962[5] = 0;
    if (!_b4) {
        if (_zR1) {
            _ih = _j62;
        } else {
            _ih = _k62;
        }
        _kh = _l62;
        _ph = _m62;
        _HN = _n62;
        _IN = _o62;
        _p62 = _q62;
        _H52 = _r62;
        _Au = _s62;
        _G52 = _t62;
        _nh = _u62;
        _v62 = _w62;
        _x62 = _y62;
        _262 = _z62;
        _A62 = _B62;
        _C62 = _D62;
        _E62 = _F62;
        _G62 = function() {};
        _H62 = function() {};
        if (_AR1) {
            if (_zR1) {
                _a5 = 0x1ffffff;
                _ih = _I62;
            } else {
                _ih = _J62;
            }
            _kh = _l62;
            _ph = _K62;
        }
    } else {
        _L62();
    }
    _HN(0, 0, _CO, _DO);
    _IN(0, 0, _CO, _DO);
}

function _w62() {
    _95._Cu();
}

function _y62() {
    _95._Ju();
}

function _sM(_HM) {
    _HM._m4 = [];
    _HM._n4 = 0;
    _HM._o4 = 4;
    _HM._oN = 0;
    _HM._Eh = null;
    _HM._4M = null;
    _HM._T1 = _P1[_HM.tp];
}

function _EZ1(_M62) {
    _462 = _M62;
    for (var i = 0; i < _M62.length; i++) {
        var _L1 = _M62[i];
        _sM(_L1);
    }
}

function _N62() {
    this._dh = null;
    this._O62 = 0;
}

function _b5(_HM, _Z6) {
    var _P62 = _HM._m4[_Z6];
    if (_P62 != null) {
        _P62._O62 = _a62;
        return _P62._dh;
    }
    var _Q62 = -9999999999;
    _P62 = null;
    if (_HM._n4 < _HM._o4) {
        _P62 = new _N62();
        _HM._n4++;
    } else {
        var _R62 = -1;
        for (var i in _HM._m4) {
            if (!_HM._m4.hasOwnProperty(i)) continue;
            var _S62 = _HM._m4[i];
            if (_S62 != null) {
                var _f3 = _a62 - _S62._O62;
                if (_f3 > _Q62) {
                    _R62 = i;
                    _P62 = _S62;
                    _Q62 = _f3;
                }
            }
        }
        if (_R62 >= 0) delete _HM._m4[_R62];
    }
    _HM._m4[_Z6] = _P62;
    _P62._O62 = _a62;
    _P62._dh = _T62(_HM, _Z6);
    return _P62._dh;
}

function _P12(_tb) {
    return _462[_tb];
}

function _r62() {
    _95._Eu(_962[0], _962[3], _962[1], _962[4], _962[2], _962[5]);
}

function _s62(_e7) {
    _95._Cu();
    var _Du = [];
    _Du[0] = 1;
    _Du[1] = 0;
    _Du[2] = 0;
    _Du[3] = 1;
    _Du[4] = 0;
    _Du[5] = 0;
    _95._Eu(_Du[0], _Du[1], _Du[2],
        _Du[3], _Du[4], _Du[5]);
    _95.fillStyle = _Yu(_e7 | 0xff000000);
    _95._6v(_Fu, _Gu, _Hu, _Iu);
    _95._Ju();
}

function _n62(_Vl1, _Wl1, _Xl1, _Yl1) {
    _Fu = _Vl1;
    _Gu = _Wl1;
    _Hu = _Xl1;
    _Iu = _Yl1;
}

function _U62(_h2, _i2, _Va, _Wa, _l2) {
    var _V62 = new _7l((_h2 + _Va / 2.0), (_i2 + _Wa / 2.0), -16000.0);
    var _W62 = new _7l((_h2 + _Va / 2.0), (_i2 + _Wa / 2.0), 0.0);
    var _X62 = new _7l(Math.sin(-_l2 * (Math.PI / 180.0)), Math.cos(-_l2 * (Math.PI / 180.0)), 0.0);
    _sX1._al(_V62, _W62, _X62);
    _rX1._nl(_Va, -_Wa * _hl, 1.0, 32000.0);
}

function _t62(_h2, _i2, _I1, _J1, _l2) {
    var _Du = [];
    _Du[0] = Math.cos(_l2);
    _Du[3] = Math.sin(_l2);
    _Du[1] = -_Du[3];
    _Du[4] = _Du[0];
    _Du[0] *= _I1;
    _Du[3] *= _I1;
    _Du[1] *= _J1;
    _Du[4] *= _J1;
    _Du[2] = _h2;
    _Du[5] = _i2;
    _95._e62(_Du[0], _Du[3], _Du[1], _Du[4], _Du[2], _Du[5]);
}

function _q62(_Ed, _Fd, _Y62, _Z62) {
    if ((_Fu === 0 && _Gu === 0) && (_Hu == _95.canvas.width && _Iu === _95.canvas.height)) {} else {
        _962[0] = 1;
        _962[1] = 0;
        _962[2] = 0;
        _962[3] = 1;
        _962[4] = 0;
        _962[5] = 0;
        _95._Eu(_962[0], _962[1], _962[2], _962[3], _962[4], _962[5]);
        _95.moveTo(_Fu, _Gu);
        _95.lineTo(_Fu + _Hu, _Gu);
        _95.lineTo(_Fu + _Hu, _Gu + _Iu);
        _95.lineTo(_Fu, _Gu + _Iu);
        if (!(_Jw == _MR1 && _lP == 4.0)) {
            _95.clip();
        }
    }
    _962[0] = _Ed;
    _962[1] = 0;
    _962[2] = _Y62;
    _962[3] = 0;
    _962[4] = _Fd;
    _962[5] = _Z62;
    _95._Eu(_962[0], _962[3], _962[1], _962[4], _962[2], _962[5]);
}

function _o62(__62, _072, _172, _272, _l2) {
    if ((_Fu === 0 && _Gu === 0) && (_Hu == _95.canvas.width && _Iu === _95.canvas.height)) {} else {
        _962[0] = 1;
        _962[1] = 0;
        _962[2] = 0;
        _962[3] = 1;
        _962[4] = 0;
        _962[5] = 0;
        _95._Eu(_962[0], _962[1], _962[2], _962[3], _962[4], _962[5]);
        _95.beginPath();
        _95.moveTo(_Fu, _Gu);
        _95.lineTo(_Fu + _Hu, _Gu);
        _95.lineTo(_Fu + _Hu, _Gu + _Iu);
        _95.lineTo(_Fu, _Gu + _Iu);
        if (!(_Jw == _MR1 && _lP == 4.0)) {
            _95.clip();
        }
    }
    var w = _Hu / _172;
    var h = _Iu / _272;
    _562 = __62;
    _662 = _072;
    _762 = _172;
    _862 = _272;
    _962[0] = w;
    _962[1] = 0;
    _962[2] = -(__62 * w) + _Fu;
    _962[3] = 0;
    _962[4] = h;
    _962[5] = -(_072 * h) + _Gu;
    _95._Eu(_962[0], _962[3], _962[1], _962[4], _962[2], _962[5]);
}

function _w4(_a1) {
    var i = _P1.length;
    var _T1 = new Image();
    _a1 = _FI(_a1);
    _T1.src = _a1;
    _P1[i] = _T1;
    return i;
}

function _372(_j4, _k4) {
    var c = document.createElement("canvas");
    c.width = _j4;
    c.height = _k4;
    var i = _P1.length;
    var _T1 = new Image(_j4, _k4);
    _T1.src = c.toDataURL();
    _P1[i] = _T1;
    return i;
}

function _472(_j8,
    _h2, _i2, _0l1) {
    var context = _j8.getContext('2d');
    context.globalCompositeOperation = 'copy';
    context.drawImage(_0l1, _h2, _i2);
}

function _gh(_572) {
    var i = _P1.length;
    _P1[i] = _572;
    return i;
}

function _B62() {
    _a62++;
}

function _D62() {}

function _eh(_HM) {
    var _4M = document.createElement(_eo);
    var _1h = _4M.getContext('2d');
    _6M(_1h);
    _4M.width = _HM.w;
    _4M.height = _HM.h;
    _1h._hM(_HM._T1, _HM.x, _HM.y, _HM.w, _HM.h, 0, 0, _HM.w, _HM.h);
    _4M.complete = true;
    return _4M;
}

function _MM(_HM) {
    var _JM = [];
    var _CA = _HM.ow * _HM.oh * 4;
    for (var i = 0; i < _CA; i++) _JM[i] = 0;
    if (_HM._T1._C5) _672 = _772(_HM);
    else {
        var _4M = document.createElement(_eo);
        var _1h = _4M.getContext('2d');
        _6M(_1h);
        _4M.width = _HM.w;
        _4M.height = _HM.h;
        _1h._hM(_HM._T1, _HM.x, _HM.y, _HM.w, _HM.h, 0, 0, _HM.w, _HM.h);
        _4M.complete = true;
        var data, _NN, _872, _972;
        try {
            data = _1h.getImageData(0, 0, _HM.w, _HM.h);
        } catch (_xq) {
            return _JM;
        }
        _672 = data.data;
    }
    var _a72 = (_HM.XOffset + (_HM.YOffset * _HM.ow)) * 4;
    var _D3 = _HM.w * 4;
    for (y = 0; y < _HM.h; y++) {
        var _b72 = _a72;
        var _c72 = y * _D3;
        for (x = 0; x < _D3; x++) {
            _JM[_b72++] = _672[_c72++];
        }
        _a72 += _HM.ow * 4;
    }
    return _JM;
}

function _772(_HM) {
    var _1l1 = this._zl1.prototype._xl1;
    var _T1 = _HM._T1._C5;
    var _87 = _T1.__n1;
    var w = _T1._0o1;
    var h = _T1._1o1;
    var _Un1 = _1l1.getParameter(_1l1.FRAMEBUFFER_BINDING);
    var _2o1 = _1l1.createFramebuffer();
    _1l1.bindFramebuffer(_1l1.FRAMEBUFFER, _2o1);
    _1l1.framebufferTexture2D(_1l1.FRAMEBUFFER, _1l1.COLOR_ATTACHMENT0, _1l1.TEXTURE_2D, _87, 0);
    data = new Uint8Array(w * h * 4);
    _1l1.readPixels(0, 0, w, h, _1l1.RGBA, _1l1.UNSIGNED_BYTE, data);
    _672 = data;
    _1l1.bindFramebuffer(_1l1.FRAMEBUFFER, _Un1);
    _1l1.deleteFramebuffer(_2o1);
    return data;
}

function _j62(_HM,
    _h2, _i2, __6) {
    if (!_HM._T1) return;
    if (!_HM._T1.complete) return;
    if (_HM._4M == null) _HM._4M = _eh(_HM);
    _h2 += _HM.XOffset;
    _i2 += _HM.YOffset;
    _95.globalAlpha = __6;
    _95._hM(_HM._4M, ~~_h2, ~~_i2);
}

function _I62(_HM, _h2, _i2, __6) {
    _j62(_HM, _h2, _i2, __6);
}

function _k62(_HM, _h2, _i2, __6) {
    if (!_HM._T1) return;
    if (!_HM._T1.complete) return;
    _95.globalAlpha = __6;
    _95._hM(_HM._T1, ~~_HM.x, ~~_HM.y, _HM.w, _HM.h, Math.floor(_h2) + _HM.XOffset, Math.floor(_i2) + _HM.YOffset, _HM.CropWidth, _HM.CropHeight);
}

function _J62(_HM, _h2, _i2, __6) {
    _k62(_HM, _h2,
        _i2, __6);
}

function _d72(_0l1) {
    try {
        _95._hM(_0l1, 0, 0, _0l1.width, _0l1.height, canvas.width, canvas.height, 0, 0);
    } catch (e) {
        return false;
    }
    var _l5 = _0l1.getContext('2d');
    _l5.fillStyle = "white";
    _l5.fillRect(0, 0, 1, 1);
    var _e72 = _l5.getImageData(0, 0, 1, 1);
    return (_e72.data[0] === 255);
}

function _l62(_HM, _h2, _i2, _f72, _g72, _h72, _i72, _e7, __6) {
    var _O1 = _HM._T1;
    if (!_O1) return;
    if (!_O1.complete) return;
    if (_HM.w == 0 || _HM.h == 0) return;
    var i = 0;
    if (_h72) i = 1;
    if (_i72) i |= 2;
    if (i === 0) {
        _95.globalAlpha = __6;
        _95._hM(_O1, _HM.x, _HM.y, _HM.w, _HM.h, _h2 + _HM.XOffset,
            _i2 + _HM.YOffset, (_HM.CropWidth * _f72), (_HM.CropHeight * _g72));
        return;
    }
    var w = _HM.ow;
    var h = _HM.oh;
    if (_i72) {
        w = (((((_EN._QG + (_HM.ow - 1)) / _HM.ow) & 0xffffffff) + 2) * _HM.ow);
        _h2 = _562 + (((_h2 - _562) % _HM.ow) - _HM.ow);
    }
    if (_h72) {
        h = (((((_EN._RG + (_HM.oh - 1)) / _HM.oh) & 0xffffffff) + 2) * _HM.oh);
        _i2 = _662 + (((_i2 - _662) % _HM.oh) - _HM.oh);
    }
    if ((_HM._Eh != null) && (_HM._Eh.width < (w * _HM._j72) || _HM._Eh.height < (h * _HM._j72))) {
        _HM._Eh = null;
        _HM._Fh = 0;
    }
    if ((_HM._oN != i) || (!_HM._Eh)) {
        _HM._oN = i;
        var buffer = document.createElement(_eo);
        var _1h = buffer.getContext('2d');
        _6M(_1h);
        try {
            buffer.width = w;
            buffer.height = h;
            _95.globalAlpha = 1;
            var _k72 = 1;
            while ((_d72(buffer) === false) && (buffer.width >= 64) && (buffer.height >= 64)) {
                debug("WARNING: Tiled image quality reduction");
                buffer.width /= 2;
                buffer.height /= 2;
                _k72 /= 2;
            }
            var _kB = _HM.x;
            var _lB = _HM.y;
            if (_e7 != _a5) {
                _O1 = _b5(_HM, _e7);
                _kB = 0;
                _lB = 0;
            }
            var _Vi = w / _HM.ow;
            var _Wi = h / _HM.oh;
            for (var y = 0; y < _Wi; y++) {
                for (var x = 0; x < _Vi; x++) {
                    _1h._hM(_O1, _kB, _lB, _HM.w, _HM.h, _HM.XOffset + ((x * _HM.ow) * _k72), _HM.YOffset + ((y * _HM.oh) * _k72), _HM.CropWidth * _k72, _HM.CropHeight * _k72);
                }
            }
            _HM._j72 = _k72;
        } catch (e) {
            alert("Tiled image failed " + e.message);
        }
        _HM._Eh = buffer;
    }
    _95.globalAlpha = __6;
    _95._hM(_HM._Eh, _h2, _i2, _HM._Eh.width / _HM._j72, _HM._Eh.height / _HM._j72);
}

function _m62(_HM, _2M, _3M, _h2, _i2, _f72, _g72, _K1, _cg, _Ne, _8v, _9v, __6) {
    if (!_HM._T1) return;
    if (!_HM._T1.complete) return;
    if ((abs(_f72) <= 0.0001) || (abs(_g72) <= 0.0001) || (__6 <= 0)) {
        return;
    }
    _cg &= 0xffffff;
    var _Mv = -(_2M - _HM.XOffset);
    var _Nv = -(_3M - _HM.YOffset);
    _95.globalAlpha = __6;
    if (_cg != _a5) {
        var _v52 = _b5(_HM, _cg);
        var _d3 = Math.abs(_K1);
        if ((_d3 < 0.0001) && (_f72 == 1) && (_g72 == 1) && (_HM.w === _HM.CropWidth) && (_HM.h === _HM.CropHeight)) {
            _95._hM(_v52, _h2 + _Mv, _i2 + _Nv);
        } else {
            if ((_f72 < 0) || (_g72 < 0) || (_d3 > 0.0001)) {
                _G52(_h2, _i2, _f72, _g72, -_K1);
                _95._hM(_v52, 0, 0, _HM.w, _HM.h, _Mv, _Nv, _HM.CropWidth, _HM.CropHeight);
                _H52();
            } else {
                _95._hM(_v52, 0, 0, _HM.w, _HM.h, _h2 + (_Mv * _f72), _i2 + (_Nv * _g72), _HM.CropWidth * _f72, _HM.CropHeight * _g72);
            }
        }
    } else {
        var _d3 = Math.abs(_K1);
        if ((_d3 < 0.0001) && (_f72 == 1) && (_g72 == 1) && (_HM.w === _HM.CropWidth) && (_HM.h === _HM.CropHeight)) {
            if (_HM._4M == null) {
                _HM._4M = _eh(_HM);
            }
            _95._hM(_HM._4M, _h2 + _Mv, _i2 + _Nv);
        } else {
            if (_f72 < 0 || _g72 < 0 || _d3 > 0.001) {
                _G52(_h2, _i2, _f72, _g72, -_K1);
                _95._hM(_HM._T1, _HM.x, _HM.y, _HM.w, _HM.h, _Mv, _Nv, _HM.CropWidth, _HM.CropHeight);
                _H52();
            } else {
                _95._hM(_HM._T1, _HM.x, _HM.y, _HM.w, _HM.h, _h2 + (_Mv * _f72), _i2 + (_Nv * _g72), _HM.CropWidth * _f72, _HM.CropHeight * _g72);
            }
        }
    }
}

function _K62(_HM, _2M, _3M, _h2, _i2, _f72, _g72, _K1, _cg, _Ne, _8v, _9v, __6) {
    try {
        _m62(_HM._T1, _2M, _3M, _h2, _i2, _f72, _g72, _K1, _cg, _Ne, _8v, _9v, __6);
    } catch (_xq) {
        debug("error drawing image");
    }
}

function _T62(_HM, _e7) {
    var buffer = document.createElement(_eo);
    var _1h = buffer.getContext('2d');
    _6M(_1h);
    buffer.width = _HM.w;
    buffer.height = _HM.h;
    _1h._hM(_HM._T1, _HM.x, _HM.y, _HM.w, _HM.h, 0, 0, _HM.w, _HM.h);
    if (~~_e7 != 0xffffff) {
        var data, _NN, _872, _972;
        try {
            data = _1h._MN(0, 0, buffer.width, buffer.height);
        } catch (_xq) {
            return buffer;
        }
        _NN = data.data;
        _l72 = _1h._f62(buffer.width, buffer.height);
        _972 = _l72.data;
        var _d3 = ((_e7 >> 16) & 0xff) / 255;
        var _Y4 = ((_e7 >> 8) & 0xff) / 255;
        var _g3 = (_e7 & 0xff) / 255;
        var _W52 = (data.height * data.width * 4);
        for (var i = _W52 - 4; i >= 0; i -= 4) {
            _972[i] = (_NN[i] * _d3) | 0;
            _972[i + 1] = (_NN[i + 1] * _Y4) | 0;
            _972[i + 2] = (_NN[i + 2] * _g3) | 0;
            _972[i + 3] = (_NN[i + 3]);
        }
        _l72.data = _972;
        _1h._g62(_l72, 0, 0);
    }
    return buffer;
}

function _m72(_HM, _v3, _w3, _S2, _T2, _Ki, _Li, _1O, _2O, __6) {
    var _O1 = _HM._T1;
    if (!_O1) return;
    if (!_O1.complete) return;
    _95.globalAlpha = __6;
    _n72(_O1, _v3, _w3, _S2, _T2, _Ki, _Li, _HM.x, _HM.y, _HM.x + _HM.w, _HM.y, _HM.x + _HM.w, _HM.y + _HM.h);
    _n72(_O1, _Ki, _Li, _1O, _2O, _v3, _w3, _HM.x + _HM.w, _HM.y + _HM.h, _HM.x, _HM.y + _HM.h, _HM.x, _HM.y);
}

function _n72(_m5, _n5, _o5, _03, _13, _23, _33, _p5, _q5, _r5, _s5, _t5, _u5) {
    _95._Cu();
    _95._ev();
    _95._fv(_n5, _o5);
    _95._gv(_03, _13);
    _95._gv(_23,
        _33);
    _95._hv();
    _95._h62();
    var _v5 = _p5 * (_u5 - _s5) - _r5 * _u5 + _t5 * _s5 + (_r5 - _t5) * _q5;
    if (_v5 == 0) return;
    var _w5 = -(_q5 * (_23 - _03) - _s5 * _23 + _u5 * _03 + (_s5 - _u5) * _n5) / _v5;
    var _x5 = (_s5 * _33 + _q5 * (_13 - _33) - _u5 * _13 + (_u5 - _s5) * _o5) / _v5;
    var _y5 = (_p5 * (_23 - _03) - _r5 * _23 + _t5 * _03 + (_r5 - _t5) * _n5) / _v5;
    var _z5 = -(_r5 * _33 + _p5 * (_13 - _33) - _t5 * _13 + (_t5 - _r5) * _o5) / _v5;
    var _A5 = (_p5 * (_u5 * _03 - _s5 * _23) + _q5 * (_r5 * _23 - _t5 * _03) + (_t5 * _s5 - _r5 * _u5) * _n5) / _v5;
    var _B5 = (_p5 * (_u5 * _13 - _s5 * _33) + _q5 * (_r5 * _33 - _t5 * _13) + (_t5 * _s5 - _r5 * _u5) * _o5) / _v5;
    _95._e62(_w5, _x5, _y5,
        _z5, _A5, _B5);
    _95._hM(_m5, 0, 0);
    _95._Ju();
}

function _u62(_HM, _lh, _mh, _j4, _k4, _h2, _i2, _Ie, _Je, _oh, __6) {
    if (!_HM) return;
    if (!_HM._T1) return;
    if (!_HM._T1.complete) return;
    _oh &= 0xffffff;
    _95.globalAlpha = __6;
    if (_lh < _HM.XOffset) {
        var _o72 = _HM.XOffset - _lh;
        _h2 += _o72;
        _j4 -= _o72;
        _lh = 0;
    } else {
        _lh -= _HM.XOffset;
    }
    if (_mh < _HM.YOffset) {
        var _o72 = _HM.YOffset - _mh;
        _i2 += _o72;
        _k4 -= _o72;
        _mh = 0;
    } else {
        _mh -= _HM.YOffset;
    }
    if (_j4 > (_HM.CropWidth - _lh)) _j4 = _HM.CropWidth - _lh;
    if (_k4 > (_HM.CropHeight - _mh)) _k4 = _HM.CropHeight - _mh;
    if (_j4 <= 0 || _k4 <= 0) return;
    _h2 = ~~_h2;
    _i2 = ~~_i2;
    if (_oh != _a5) {
        var _v52 = _b5(_HM, _oh);
        if (_Ie < 0 || _Je < 0) {
            _G52(_h2, _i2, _Ie, _Je, 0);
            _95._hM(_v52, _lh, _mh, _j4, _k4, 0, 0, _j4, _k4);
            _H52();
        } else {
            _95._hM(_v52, _lh, _mh, _j4, _k4, _h2, _i2, _j4 * _Ie, _k4 * _Je);
        }
    } else {
        if (_Ie < 0 || _Je < 0) {
            _G52(_h2, _i2, _Ie, _Je, 0);
            _95._hM(_HM._T1, _lh + _HM.x, _mh + _HM.y, _j4, _k4, 0, 0, _j4, _k4);
            _H52();
        } else {
            _95._hM(_HM._T1, _lh + _HM.x, _mh + _HM.y, _j4, _k4, _h2, _i2, _j4 * _Ie, _k4 * _Je);
        }
    }
}

function _jh(_HM, _h2, _i2, _Va, _Wa, _oh, __6) {
    if (!_HM) return;
    if (!_HM._T1) return;
    if ((_HM._T1 instanceof HTMLImageElement) && (!_HM._T1.complete)) return;
    _h2 = ~~_h2;
    _i2 = ~~_i2;
    var _kB = _Va / _HM.ow;
    var _lB = _Wa / _HM.oh;
    _ph(_HM, 0, 0, _h2, _i2, _kB, _lB, 0, _oh, _oh, _oh, _oh, __6);
}

function _uh(_HM, _lh, _mh, _j4, _k4, _h2, _i2, _Ie, _Je, _K1, _qh, _rh, _sh, _th, __6) {
    if (!_HM) return;
    if (!_HM._T1) return;
    if (!_HM._T1.complete) return;
    if (_lh < _HM.XOffset) {
        var _o72 = _HM.XOffset - _lh;
        _h2 += _o72;
        _j4 -= _o72;
        _lh = 0;
    } else {
        var _o72 = _HM.XOffset;
        _lh -= _o72;
    }
    if (_mh < _HM.YOffset) {
        var _o72 = _HM.YOffset - _mh;
        _i2 += _o72;
        _k4 -= _o72;
        _mh = 0;
    } else {
        var _o72 = _HM.YOffset;
        _mh -= _o72;
    }
    if (_j4 > (_HM.CropWidth - _lh - _HM.XOffset)) {
        _j4 = _HM.CropWidth - _lh - _HM.XOffset;
    }
    if (_k4 > (_HM.CropHeight - _mh - _HM.YOffset)) {
        _k4 = _HM.CropHeight - _mh - _HM.YOffset;
    }
    if (_j4 <= 0 || _k4 <= 0) {
        return;
    }
    _nX1.x = _lh + _HM.x;
    _nX1.y = _mh + _HM.y;
    _nX1.w = _j4;
    _nX1.h = _k4;
    _nX1.XOffset = 0;
    _nX1.YOffset = 0;
    _nX1.CropWidth = _nX1.w;
    _nX1.CropHeight = _nX1.h;
    _nX1.ow = _nX1.w;
    _nX1.oh = _nX1.h;
    _nX1.tp = _HM.tp;
    _nX1._T1 = _HM._T1;
    _nX1._m4 = [];
    _nX1._n4 = 0;
    _nX1._o4 = 1;
    _nX1._oN = 0;
    _nX1._Eh = null;
    _nX1._4M = null;
    _h2 = ~~_h2;
    _i2 = ~~_i2;
    _ph(_nX1, 0, 0, _h2, _i2, _Ie, _Je, _K1, _qh, _rh, _sh, _th, __6);
}

function _vh(_p72, _q72) {
    if (_b4) return;
    var buffer = document.createElement(_eo);
    var _1h = buffer.getContext('2d');
    _6M(_1h);
    buffer.width = _p72.w;
    buffer.height = _p72.h;
    _1h.drawImage(_q72._T1, _q72.x, _q72.y, _q72.w, _q72.h, 0, 0, _p72.w, _p72.h);
    var _r72, _s72, _t72, _u72, _v72;
    try {
        _s72 = _1h.getImageData(0, 0, _p72.w, _p72.h);
        _v72 = _p72._T1.getContext('2d');
        _6M(_v72);
        _t72 = _v72.getImageData(_p72.x, _p72.y, _p72.w, _p72.h);
    } catch (_xq) {
        return false;
    }
    _r72 = _s72.data;
    _u72 = _t72.data;
    var _W52 = (_t72.height * _t72.width * 4);
    for (var i = _W52 - 4; i >= 0; i -= 4) {
        var c = ~~((_r72[i] + _r72[i + 1] + _r72[i + 2]) / 3);
        _u72[i + 3] = c;
    }
    _t72.data = _u72;
    _v72.putImageData(_t72, 0, 0);
    return true;
}

function _z62(_Le, _Ge, _h2, _i2, _Ie, _Je, _l2, _e7, __6) {
    _95.globalAlpha = __6;
    _95.fillStyle = _9h(_e7, 1.0);
    _95.font = _Le;
    _95.textBaseline = "top";
    _G52(_h2, _i2, _Ie, _Je, -_l2);
    _95.fillText(_Ge, 0, 0);
    _H52();
}

function _2h(_w72, _Va, _Wa) {
    try {
        var data, _NN, _872, _972;
        data = _w72._MN(0, 0, _Va, _Wa);
        _NN = _972 = data.data;
        var _x72 = (_Wa - 1) * _Va * 4;
        var _d3 = _NN[_x72 + 0];
        var _Y4 = _NN[_x72 + 1];
        var _g3 = _NN[_x72 + 2];
        var _Z4 = _NN[_x72 + 3];
        var _W52 = (data.height * data.width * 4);
        for (var i = _W52 - 4; i >= 0; i -= 4) {
            _972[i + 0] = _NN[i + 0];
            _972[i + 1] = _NN[i + 1];
            _972[i + 2] = _NN[i + 2];
            if ((_972[i + 0] == _d3) && (_972[i + 1] == _Y4) && (_972[i + 2] == _g3)) {
                _972[i + 3] = 0x0;
            } else {
                _972[i + 3] = _NN[i + 3];
            }
        }
        _w72._g62(data, 0, 0);
    } catch (_xq) {
        return false;
    }
    return true;
}

function _F62(_He) {}
var _y72 = 0,
    _z72 = 0;

function _ty(_A72) {
    this._B72 = false;
    this._Dy = [];
    this._C72 = _A72;
    this._D72 = "";
    this._E72 = 0;
    this._F72 = 0;
}

function _py(_oy) {
    _G72 = new _ty(null);
    _G72._D72 = _oy;
    _G72._H72();
    var _n4 = 0;
    for (var i in _G72._Dy) {
        if (!_G72._Dy.hasOwnProperty(i)) continue;
        _n4++;
        break;
    }
    if (_n4 == 0) return null;
    return _G72;
}

function _sy(_I72, _J72) {
    var _oq = _Pc(_I72, _J72);
    _G72 = new _ty(_I72);
    _G72._D72 = _oq;
    _G72._H72();
    var _n4 = 0;
    for (var i in _G72._Dy) {
        if (!_G72._Dy.hasOwnProperty(i)) continue;
        _n4++;
        break;
    }
    if (_n4 == 0) return null;
    return _G72;
}
_ty.prototype._lq = function() {
    while ((this._D72.charCodeAt(this._E72) != 0x0a) && (this._D72.charCodeAt(this._E72) != 0x0d) && (this._E72 < this._s22)) {
        this._E72++;
    }
    this._F72++;
    this._E72++;
    if (this._E72 >= this._s22) return;
    if ((this._D72.charCodeAt(this._E72) == 0x0a) && (this._D72.charCodeAt(this._E72) == 0x0d)) {
        this._E72++;
    }
};
_ty.prototype._K72 = function() {
    with(this) {
        if (this._E72 >= _s22) return false;
        var c = _D72.charCodeAt(_E72);
        if (c == 0x20 || c == 0x09 || c == 0x0a || c == 0x0d || c == ord('#') || c == ord(';')) {
            return true;
        } else {
            return false;
        }
    }
};
_ty.prototype._mq = function() {
    with(this) {
        while (_K72() && (_E72 < _s22)) {
            var c = _D72.charCodeAt(_E72);
            if (c == '#' || c == ';') {
                _lq();
            } else if (c == 0x0a) {
                _F72++;
            }
            _E72++;
        }
        if (_E72 >= _s22) return;
    }
};
_ty.prototype._L72 = function() {
    with(this) {
        _mq();
        while ((_D72.charAt(_E72) != '[') && (_E72 < _s22)) {
            _E72++;
        }
        if (_E72 >= _s22) return null;
        _E72++;
        var _M72 = _E72;
        while ((_D72.charAt(_E72) != ']') && (_E72 < _s22)) {
            _E72++;
        }
        if (_E72 >= _s22) return null;
        var _On = _E72 - _M72;
        var _Cy = [];
        _Cy._N72 = _D72.substr(_M72, _On);
        _E72++;
        return _Cy;
    }
};
_ty.prototype._O72 = function(_P72) {
    with(this) {
        _mq();
        if (_E72 >= _s22 || _D72.charAt(_E72) == '[') return false;
        var _M72 = _E72;
        var _Q72 = -1;
        while ((_D72.charAt(_E72) != '=') && (_E72 < _s22)) {
            if (_K72()) {
                if (_Q72 < 0) _Q72 = _E72;
            } else {
                _Q72 = -1;
            }
            _E72++;
        }
        if (_E72 >= _s22) return false;
        if (_Q72 < 0) _Q72 = _E72;
        var _On = _Q72 - _M72;
        var _Ay = _D72.substr(_M72, _On);
        while ((_D72.charAt(_E72) != '=') && (_E72 < _s22)) {
            _E72++;
        }
        if (_E72 >= _s22) return false;
        _E72++;
        var _Cq = _F72;
        _mq();
        if (_Cq != _F72) return false;
        var _R72 = ord('#');
        var _S72 = ord(';');
        var _T72 = false;
        var _G3 = _D72.charCodeAt(_E72);
        if (_G3 == ord('"')) {
            _R72 = ord('"');
            _S72 = ord('"');
            _T72 = true;
            _E72++;
        } else if (_G3 == ord('\'')) {
            _R72 = ord('\'');
            _S72 = ord('\'');
            _T72 = true;
            _E72++;
        }
        _M72 = _E72;
        var _U72 = -1;
        var c = _D72.charCodeAt(_E72);
        while ((c != 0x0a) && (c != 0x0d) && (c != _R72) && (c != _S72) && (_E72 < _s22)) {
            if (c == 0x20 || c == 0x09) {
                if (_U72 < 0) _U72 = _E72;
            } else {
                _U72 = -1;
            }
            if (c == ord('\\')) _E72++;
            _E72++;
            c = _D72.charCodeAt(_E72);
        }
        if (_U72 >= 0) {
            _On = _U72 - _M72;
        } else {
            _On = _E72 - _M72;
        }
        var _V72 = _D72.substr(_M72, _On);
        _P72[_Ay] = _V72;
        if (_T72) {
            _G3 = _D72.charCodeAt(_E72);
            if ((_G3 == _R72) && (_G3 == _S72)) {
                while ((_D72.charCodeAt(_E72) != 0x0a) && (_D72.charCodeAt(_E72) != 0x0d) && (_E72 < _s22)) {
                    _E72++;
                }
            }
        }
        return true;
    }
};
_ty.prototype._H72 = function() {
    with(this) {
        if (_D72 == null) return false;
        _s22 = _D72.length;
        _E72 = 0;
        _F72 = 0;
        var _Cy = _L72();
        if (_Cy == null) {
            _D72 = null;
            return false;
        }
        _Dy[_Cy._N72] = _Cy;
        while (_E72 < _s22) {
            var _HB = _O72(_Cy);
            if (!_HB) {
                if (_E72 < _s22) {
                    if (_D72.charAt(_E72) == '[') {
                        _Cy = _L72();
                        if (_Cy == null) {
                            _D72 = null;
                            return true;
                        }
                        _Dy[_Cy._N72] = _Cy;
                    }
                }
            }
        }
        _D72 = null;
        return true;
    }
};
_ty.prototype._By = function(_W72, _X72) {
    with(this) {
        var _Cy = _Dy[_W72];
        if (_Cy != null && _Cy != undefined) {
            var _V72 = _Cy[_X72];
            if (_V72 != undefined) return _V72;
        }
        return null;
    }
};
_ty.prototype._Y72 = function(_W72, _X72, _wy) {
    with(this) {
        var _Ay = _By(_W72, _X72);
        if (_Ay != null) {
            return parseInt(_Ay, 10);
        } else {
            return _wy;
        }
    }
};
_ty.prototype._yy = function(_W72, _X72, _wy) {
    with(this) {
        var _Ay = _By(_W72, _X72);
        if (_Ay != null) {
            return parseFloat(_Ay);
        } else {
            return parseFloat(_wy);
        }
    }
};
_ty.prototype._xy = function(_W72, _X72, _wy) {
    with(this) {
        var _Ay = _By(_W72, _X72);
        if (_Ay != null) {
            return _Ay;
        } else {
            return _wy;
        }
    }
};
_ty.prototype._zy = function(_W72, _X72, _Z72) {
    this._B72 = true;
    var _Cy = this._Dy[_W72];
    if (_Cy == null || _Cy == undefined) {
        _Cy = [];
        _Cy._N72 = _W72;
        this._Dy[_Cy._N72] = _Cy;
    }
    _Cy[_X72] = _Z72;
    return true;
};
_ty.prototype._Ey = function(_W72, _X72) {
    var _Cy = this._Dy[_W72];
    if (_Cy == null || _Cy == undefined) return false;
    var _Ay = _Cy[_X72];
    if (_Ay == null || _Ay == undefined) return false;
    this._B72 = true;
    _Cy[_X72] = null;
    return true;
};
_ty.prototype._Fy = function(_W72) {
    var _Cy = this._Dy[_W72];
    if (_Cy == null || _Cy == undefined) return false;
    this._B72 = true;
    this._Dy[_W72] = null;
    return true;
};
_ty.prototype._uy = function() {
    var _oq = "";
    var _Nn = chr(0x0d) + chr(0x0a);
    for (var __72 in this._Dy) {
        if (!this._Dy.hasOwnProperty(__72)) continue;
        _oq = _oq + "[" + __72 + "]" + _Nn;
        var _Cy = this._Dy[__72];
        for (var _Fc in _Cy) {
            if (!_Cy.hasOwnProperty(_Fc)) continue;
            if (_Fc != "__m_pIniFileName__") {
                var _V72 = _Cy[_Fc];
                _oq = _oq + _Fc + "=" + '"' + _V72 + '"' + _Nn;
            }
        }
    }
    if (this._B72) {
        _Mc(this._C72, _oq);
        this._B72 = false;
    }
    return _oq;
};

function _FI(_I72) {
    if (_I72.substring(0, 5) == "file:") return _I72;
    if ((_I72.substring(0, 7) == "http://") || (_I72.substring(0, 8) == "https://")) return _I72;
    if (_I72.substring(0, _x4.length) == _x4) return _I72;
    if (_I72 === window.famobi_mgb_url) return _I72;
    return _x4 + _I72;
}

function _082(_I72) {
    if (_I72.substring(0, 5) == "file:") return false;
    if (_I72.substring(0, 4) == "ftp:") return false;
    if (_I72.substring(0, 7) == "gopher:") return false;
    if (_I72.substring(0, 7) == "mailto:") return false;
    if (_I72.substring(0, 5) == "news:") return false;
    if (_I72.substring(0,
            5) == "nntp:") return false;
    if (_I72.substring(0, 7) == "telnet:") return false;
    if (_I72.substring(0, 5) == "wais:") return false;
    if (_I72.substring(0, 5) == "news:") return false;
    if (_I72.substring(1, 1) == ":") return false;
    return true;
}

function _182(_Mg) {
    try {
        var _282 = new XMLHttpRequest();
        _282.open('HEAD', _Mg, false);
        _282.send();
        _z72 = _282.status;
        var _382 = (_282.status != 404 && _282.status != 0);
        if (_hP == _YR1 && _282.responseText.length > 0) {
            _382 = true;
        }
        return _382;
    } catch (e) {
        return false;
    }
}

function _482(_vL1, _xL1) {
    try {
        var _Hl = !window.XMLHttpRequest ? new ActiveXObject('Microsoft.XMLHTTP') : new XMLHttpRequest();
        _Hl.open(_xL1 ? 'PUT' : 'GET', _vL1, false);
        _Hl.setRequestHeader('Content-Type', 'text/html');
        _Hl.send(_xL1 ? _xL1 : '');
        _z72 = _Hl.status;
        return _Hl.responseText;
    } catch (e) {
        return null;
    }
}

function _582(_vL1) {
    try {
        var _Hl = !window.XMLHttpRequest ? new ActiveXObject('Microsoft.XMLHTTP') : new XMLHttpRequest();
        _Hl.open("DELETE", _vL1, false);
        _Hl.send('');
        _z72 = _Hl.status;
        return _Hl.status;
    } catch (e) {
        return false;
    }
}

function _Mc(_Hc, _jw) {
    if (_682) {
        return false;
    } else if (_vq) {
        try {
            localStorage[_wq(_Hc)] = _jw;
            return true;
        } catch (_xq) {
            return false;
        }
    }
}

function _Pc(_I72, _J72) {
    var _oq = null;
    if (_I72.substring(0, 5) == "file:") return null;
    if (_J72) {
        if ((_I72.substring(0, 7) == "http://") || (_I72.substring(0, 8) == "https://")) return;
        if (_682) {
            return null;
        } else if (_vq) {
            try {
                _oq = localStorage[_wq(_I72)];
            } catch (_xq) {
                return null;
            }
            if ((_oq == undefined) || (_oq == null)) return null;
        }
    } else {
        if (!_082(_I72)) return null;
        _I72 = _FI(_I72);
        _oq = _482(_I72, false);
        if ((_oq == null) || (_oq == undefined)) return null;
        if (_z72 == 404) return null;
    }
    return _oq;
}

function _uq(_I72, _J72) {
    var _oq = null;
    if (_I72.substring(0,
            5) == "file:") return null;
    if (_J72) {
        if (_682) {
            return false;
        } else if (_vq) {
            try {
                var name = _wq(_I72);
                if (localStorage[name] && (localStorage[name] !== undefined)) {
                    return true;
                }
                return false;
            } catch (_xq) {
                return false;
            }
        }
    } else {
        if (!_082(_I72)) {
            return false;
        }
        _I72 = _FI(_I72);
        return _182(_I72);
    }
}

function _782(_Hc) {
    var _Ap = new XMLHttpRequest();
    _Ap.open("GET", _Hc, false);
    _Ap.send(null);
    buffer = _Ap._882;
    if (buffer) {
        var _982 = new Uint8Array(buffer);
        for (var i = 0; i < _982.byteLength; i++) {}
    }
}

function _a82(_Hc) {
    var _b82 = new XMLHttpRequest();
    _b82.open('GET',
        _Hc, false);
    _b82._c82('text/plain; charset=x-user-defined');
    _b82.send(null);
    var protocolRegex = new RegExp('^file:', 'i');
    var isFileProtocol = protocolRegex.test(_b82.responseURL);
    if (_b82.status != 200 && !(isFileProtocol && _b82.status == 0)) return '';
    return _b82.responseText;
}
var _d82 = new Array("StepEvent", "DrawEvent", "LeftButtonPressed", "RightButtonPressed", "NoButtonPressed");
var _e82 = new _Qo(0, 0, 0, 0);
var _c52 = null;
var _a52 = -1;
var _b52 = -1;

function _bY1() {}

function _Wy(_OC, _PC, _ha, _f82, _g82) {
    this.__type = "[instance]";
    this.x = _OC;
    this.y = _PC;
    this.xprevious = _OC;
    this.yprevious = _PC;
    this.xstart = _OC;
    this.ystart = _PC;
    this.hspeed = 0;
    this.vspeed = 0;
    this.direction = 0;
    this.speed = 0;
    this.friction = 0;
    this.gravity = 0;
    this.gravity_direction = 270;
    this.object_index = _f82;
    this.id = _ha;
    this.active = true;
    this.alarm = [];
    for (var i = 0; i <= (_jN1 - 1); i++) {
        this.alarm[i] = -1;
    }
    this.solid = true;
    this.visible = true;
    this.persistent = false;
    this.depth = 0;
    this._Ry = new _Qo(0, 0, 0, 0);
    this.sprite_index = 0;
    this.image_index = 0;
    this.image_number = 0;
    this.sprite_width = 0;
    this.sprite_height = 0;
    this.sprite_xoffset = 0;
    this.sprite_yoffset = 0;
    this.image_xscale = 1.0;
    this.image_yscale = 1.0;
    this.image_angle = 0;
    this.image_alpha = 1.0;
    this.image_blend = 0xffffff;
    this.image_speed = 1;
    this.mask_index = -1;
    this.path_index = -1;
    this.path_position = 0;
    this.path_positionprevious = 0;
    this.path_speed = 0;
    this.path_scale = 1;
    this.path_orientation = 0;
    this.path_endaction = 0;
    this.path_end = 0;
    this._9p = 0;
    this._ap = 0;
    this.timeline_index = -1;
    this.timeline_position = 0;
    this.timeline_speed = 1;
    this._Jg = true;
    this._Kg = false;
    this._h82 = -1;
    this._i82 = false;
    this.marked = false;
    this._j82 = null;
    this._k82 = false;
    this._Py = true;
    this._bN1 = false;
    this._5p = null;
    this._l82 = null;
    this._ZD = null;
    this._9w = null;
    this._1z(_f82, _g82, true);
    this._2z(this._5p._3z);
}
_Wy.prototype.get_bbox_left = function() {
    if (this._Py) this._Qy();
    return this._Ry.left;
};
_Wy.prototype.get_bbox_right = function() {
    if (this._Py) this._Qy();
    return this._Ry._L2;
};
_Wy.prototype.get_bbox_top = function() {
    if (this._Py) this._Qy();
    return this._Ry.top;
};
_Wy.prototype.get_bbox_bottom = function() {
    if (this._Py) this._Qy();
    return this._Ry.bottom;
};
_Wy.prototype.setx = function(_h2) {
    if (this.x === _h2) return;
    this.x = _h2;
    this._Py = true;
};
_Wy.prototype.sety = function(_i2) {
    if (this.y === _i2) return;
    this.y = _i2;
    this._Py = true;
};
_Wy.prototype.setangle = function(_NA1) {
    if (this.image_angle === _NA1) return;
    this.image_angle = _NA1;
    this._Py = true;
};
_Wy.prototype.setxscale = function(_ud) {
    if (this.image_xscale === _ud) return;
    this.image_xscale = _ud;
    this._Py = true;
};
_Wy.prototype.setyscale = function(_ud) {
    if (this.image_yscale === _ud) return;
    this.image_yscale = _ud;
    this._Py = true;
};
_Wy.prototype._m82 = function(_E31) {
    this._Py = _E31;
};
_Wy.prototype._n82 = function() {
    return this._Py;
};
_Wy.prototype.getdepth = function() {
    return this.depth;
};
_Wy.prototype.set_imageblend = function(_e7) {
    this.image_blend = _07(_e7);
};
_Wy.prototype.get_imageblend = function() {
    return _07(this.image_blend);
};
_Wy.prototype.set_sprite_index = function(_ha) {
    this.sprite_index = _ha;
    this._Py = true;
    this._o82 = null;
};
_Wy.prototype.set_timeline_running = function(_p82) {
    if (_p82 >= 0.5) {
        this._Jg = false;
    } else {
        this._Jg = true;
    }
};
_Wy.prototype.get_timeline_running = function() {
    if (this._Jg) {
        return 0;
    } else {
        return 1;
    }
};
_Wy.prototype.set_timeline_loop = function(_0e) {
    if (_0e >= 0.5) {
        this._Kg = true;
    } else {
        this._Kg = false;
    }
};
_Wy.prototype.get_timeline_loop = function() {
    if (this._Kg) {
        return 1;
    } else {
        return 0;
    }
};
_Wy.prototype.get_image_single = function() {
    if (this.image_speed == 0) {
        return this.image_index;
    } else {
        return -1;
    }
};
_Wy.prototype.set_image_single = function(_Cz) {
    if (_Cz < 0) {
        this.image_speed = 1;
    } else {
        this.image_speed = 0;
        this.image_index = _Cz;
    }
};
_Wy.prototype.set_image_index = function(_8w) {
    this.image_index = _8w;
};
_Wy.prototype.get_image_number = function() {
    var _RM1 = _le._O3(this.sprite_index);
    if (!_RM1) return 0;
    var _0w = this._M4();
    if (_0w) {
        return _0w._61();
    } else if ((this._q82 !== null) && (this._q82 !== undefined)) {
        return this._q82._DI1;
    }
    return _RM1._M1.length;
};
_Wy.prototype.get_sprite_width = function() {
    var _RM1 = _le._O3(this.sprite_index);
    if (!_RM1) return 0;
    return _RM1.width * this.image_xscale;
};
_Wy.prototype.get_sprite_height = function() {
    var _RM1 = _le._O3(this.sprite_index);
    if (!_RM1) return 0;
    return _RM1.height * this.image_yscale;
};
_Wy.prototype.get_sprite_xoffset = function() {
    var _RM1 = _le._O3(this.sprite_index);
    if (!_RM1) return 0;
    return _RM1.xOrigin * this.image_xscale;
};
_Wy.prototype.get_sprite_yoffset = function() {
    var _RM1 = _le._O3(this.sprite_index);
    if (!_RM1) return 0;
    return _RM1.yOrigin * this.image_yscale;
};
_Wy.prototype.setdepth = function(_Uc) {
    if (this.depth != _Uc) {
        this.depth = _Uc;
        _81._r82[_81._r82.length] = this;
    }
};
_Wy.prototype._P7 = function(_s82, _e02) {
    if ((this.x == _s82) && (this.y == _e02)) return;
    this.x = _s82;
    this.y = _e02;
    this._Py = true;
};
_Wy.prototype._Zy = function(_7i, _t82) {
    if (this._5p != null) {
        this._5p._u82(this);
        this._5p = null;
    }
    for (var _X1 in _7i) {
        var _6d = _7i[_X1];
        this[_X1] = _6d;
    }
    this._Ry = new _Qo();
    this._Ry._Ya(_7i._Ry);
    for (var i = 0; i <= _jN1 - 1; i++) {
        var _Z4 = _7i.alarm[i];
        this.alarm[i] = _Z4;
    }
    if (_t82 && this._5p != null) {
        this._5p._v82(this);
    }
    var _0w = this._M4();
    if (_0w) {
        this._o82 = _0w._T();
    }
};
_Wy.prototype._1z = function(_Sy, _t82, _w82) {
    this.object_index = _Sy;
    if (this._5p != null) {
        this._5p._u82(this);
        this._5p = null;
        this._l82 = null;
    }
    if (_Sy == -1) _Sy = 0;
    this._l82 = this._5p = _2q._O3(_Sy);
    if (this._5p != null) {
        if (_t82) {
            this._5p._v82(this);
        }
        this._vM1 = this._5p._vM1;
        this.mask_index = this._5p._SB;
        if (_w82) {
            this.depth = this._5p._QB;
        } else {
            this.setdepth(this._5p._QB);
        }
        this.solid = this._5p._OB;
        this.visible = this._5p._PB;
        this.persistent = this._5p._RB;
        this._Py = true;
    }
};
_Wy.prototype._2z = function(_tb) {
    var _RM1 = _le._O3(_tb);
    if (_RM1) {
        this._Ry.left = _RM1._Ry.left;
        this._Ry._L2 = _RM1._Ry._L2;
        this._Ry.top = _RM1._Ry.top;
        this._Ry.bottom = _RM1._Ry.bottom;
    }
    this.sprite_index = _tb;
    this._o82 = null;
    if (this._5p !== null) {
        this._M4();
    }
};
_Wy.prototype._4z = function(_7f) {
    if (_7f && this._ZD) {
        _7f._ZC._v51(this._ZD);
    }
    this._ZD = null;
    if (this._5p._TB.physicsObject) {
        this._x82();
        this._Py = true;
    }
};
_Wy.prototype._x82 = function() {
    if (!this._5p._TB.physicsObject) {
        return;
    }
    if (!sprite_exists(this.sprite_index)) {
        return;
    }
    var _ke = _le._O3(this.sprite_index);
    if (!_81._ZC) {
        return;
    }
    var _cD = physics_fixture_create();
    var _y82 = this._5p._TB,
        _z82 = 0.0,
        _A82 = 0.0;
    switch (_y82.physicsShape) {
        case _B82:
            {
                var _C82 = 1.0;
                if (Math.abs(this.image_xscale - this.image_yscale) < 0.0001) {
                    _C82 = this.image_xscale;
                } else {
                    debug("Image scale for physics object using circle collision should not vary across axes: " + this._5p._6p);
                }
                _z82 = -_y82.physicsShapeVertices[0] * _C82;
                _A82 = -_y82.physicsShapeVertices[1] * _C82;
                var _pF = _y82.physicsShapeVertices[2] * _C82;
                physics_fixture_set_circle_shape(_cD, _pF);
            }
            break;
        case _D82:
        case _E82:
            {
                physics_fixture_set_polygon_shape(_cD);
                if ((this.image_xscale * this.image_yscale) < 0) {
                    for (var _X2 = _y82.physicsShapeVertices.length - 2; _X2 >= 0; _X2 -= 2) {
                        physics_fixture_add_point(_cD, _y82.physicsShapeVertices[_X2 + 0] * this.image_xscale, _y82.physicsShapeVertices[_X2 + 1] * this.image_yscale);
                    }
                } else {
                    for (var _X2 = 0; _X2 < _y82.physicsShapeVertices.length; _X2 += 2) {
                        physics_fixture_add_point(_cD, _y82.physicsShapeVertices[_X2 + 0] * this.image_xscale, _y82.physicsShapeVertices[_X2 + 1] * this.image_yscale);
                    }
                }
            }
            break;
    }
    physics_fixture_set_angular_damping(_cD, _y82.physicsAngularDamping);
    physics_fixture_set_linear_damping(_cD, _y82.physicsLinearDamping);
    physics_fixture_set_sensor(_cD, _y82.physicsSensor);
    physics_fixture_set_collision_group(_cD, _y82.physicsGroup);
    physics_fixture_set_density(_cD, _y82.physicsDensity);
    physics_fixture_set_restitution(_cD, _y82.physicsRestitution);
    if (_y82.physicsFriction != undefined) {
        physics_fixture_set_friction(_cD, _y82.physicsFriction);
    }
    if (_y82.physicsAwake != undefined) {
        physics_fixture_set_awake(_cD, _y82.physicsAwake);
    }
    if (_y82.physicsKinematic != undefined) {
        physics_fixture_set_kinematic(_cD, _y82.physicsKinematic);
    }
    physics_fixture_bind(this, _cD, this.id, _z82, _A82);
};
_Wy.prototype._F82 = function() {
    with(this) {
        if (this.hspeed == 0) {
            if (this.vspeed > 0) {
                this.direction = 270;
            } else if (this.vspeed < 0) {
                this.direction = 90;
            } else {
                this.direction = 0;
            }
        } else {
            var _Iv = _G82(180 * (Math.atan2(this.vspeed,
                this.hspeed)) / _i3);
            if (_Iv <= 0) {
                this.direction = -_Iv;
            } else {
                this.direction = 360.0 - _Iv;
            }
        }
        if (Math.abs(this.direction - _vb(this.direction)) < 0.0001) {
            this.direction = _vb(this.direction);
        }
        this.direction = _jY1(this.direction, 360.0);
        this.speed = Math.sqrt(_Cl(this.hspeed) + _Cl(this.vspeed));
        if (Math.abs(this.speed - _vb(this.speed)) < 0.0001) this.speed = _vb(this.speed);
    }
};
_Wy.prototype._H82 = function() {
    this.hspeed = this.speed * _G82(Math.cos(this.direction * 0.0174532925));
    this.vspeed = -this.speed * _G82(Math.sin(this.direction * 0.0174532925));
    if (Math.abs(this.hspeed - _vb(this.hspeed)) < 0.0001) {
        this.hspeed = _vb(this.hspeed);
    }
    if (Math.abs(this.vspeed - _vb(this.vspeed)) < 0.0001) {
        this.vspeed = _vb(this.vspeed);
    }
};

function _G82(_I82) {
    return _Iv = (~~(_I82 * 1000000)) / 1000000.0;
}
_Wy.prototype._xd = function(_wd, _nn) {
    this.hspeed += _nn * _G82(Math.cos(_wd * 0.0174532925));
    this.vspeed -= _nn * _G82(Math.sin(_wd * 0.0174532925));
    this._F82();
};
_Wy.prototype._J82 = function() {
    if (this.friction != 0.0) {
        var _K82;
        if (this.speed > 0) {
            _K82 = this.speed - this.friction;
        } else {
            _K82 = this.speed + this.friction;
        }
        if ((this.speed > 0) && (_K82 < 0)) {
            this.setspeed(0);
        } else if ((this.speed < 0) && (_K82 > 0)) {
            this.setspeed(0);
        } else if (this.speed != 0) {
            this.setspeed(_K82);
        }
    }
    if (this.gravity != 0) {
        this._xd(this.gravity_direction, this.gravity);
    }
};
_Wy.prototype._L82 = function() {
    var _0w = this._M4();
    if (_0w) {
        return _0w._61();
    }
    return _le._M82(this.sprite_index);
};
_Wy.prototype._B2 = function(_Bp, _tb, _7i, _ms, _N82) {
    if (_N82 == undefined) {
        _N82 = _7i._5p;
    }
    var _O82 = _c52;
    var _P82 = _a52;
    var _Q82 = _b52;
    var _9e = false;
    var _R82 = false;
    if (_Bp == _mz1) {
        var _S82 = _ms._5p;
        while (_S82 != null && !_R82) {
            var _Wq = _N82;
            while (_Wq != null && !_R82) {
                if (_Wq.Event[_Bp]) {
                    if (_Wq._qZ1[_S82._gz]) {
                        _c52 = _Wq;
                        _a52 = _Bp;
                        _b52 = _S82._gz;
                        _9e = _Wq._B2(_Bp, _S82._gz, _7i, _ms);
                        _R82 = true;
                        break;
                    }
                }
                _Wq = _Wq._fo;
            }
            _S82 = _S82._fo;
        }
        var _Wq = _N82;
        while (_Wq != null && !_R82) {
            if (_Wq._qZ1[_tb]) {
                _c52 = _Wq;
                _a52 = _Bp;
                _b52 = _tb;
                _9e = _Wq._B2(_Bp, _tb, _7i, _ms);
                _R82 = true;
            }
            _Wq = _Wq._fo;
        }
    } else {
        var _Wq = _N82;
        var _T82 = _Bp | _tb;
        while (_Wq != null) {
            if (_Wq.Event[_T82]) {
                _c52 = _Wq;
                _a52 = _Bp;
                _b52 = _tb;
                _9e = _Wq._B2(_Bp, _tb, _7i, _ms);
                break;
            }
            _Wq = _Wq._fo;
        }
    }
    _c52 = _O82;
    _a52 = _P82;
    _b52 = _Q82;
    return _9e;
};
_Wy.prototype._Cs = function(_Bp, _tb, _ms) {
    if (_c52 != null) {
        if (_c52._fo != null) {
            this._B2(_Bp, _tb, this, _ms, _c52._fo);
        }
    }
};
_Wy.prototype.sethspeed = function(_f2) {
    if (this.hspeed == _f2) return;
    this.hspeed = _f2;
    this._F82();
};
_Wy.prototype.setvspeed = function(_f2) {
    if (this.vspeed == _f2) return;
    this.vspeed = _f2;
    this._F82();
};
_Wy.prototype.setdirection = function(_f2) {
    while (_f2 < 0.0) {
        _f2 += 360.0;
    }
    while (_f2 > 360.0) {
        _f2 -= 360.0;
    }
    this.direction = _jY1(_f2, 360.0);
    this._H82();
};
_Wy.prototype.setspeed = function(_f2) {
    if (this.speed == _f2) return;
    this.speed = _f2;
    this._H82();
};
_Wy.prototype._Qy = function() {
    var _ke, _f3;
    var _gb = (this.mask_index >= 0) ? this.mask_index : this.sprite_index;
    if (_gb < 0 || _gb > _le.Sprites.length) {
        if (!this._Ry) {
            this._Ry = new _Qo(0, 0, 0, 0);
        }
        this._Ry.left = -100000;
        this._Ry.top = -100000;
        this._Ry._L2 = -100000;
        this._Ry.bottom = -100000;
        this._k82 = false;
    } else {
        var _Ry = this._Ry;
        _ke = _le.Sprites[_gb];
        if (this.image_angle == 0) {
            var _U82 = _ke._Ry;
            _Ry.left = Math.floor((this.x + this.image_xscale * (_U82.left - _ke.xOrigin)) + 0.5);
            _Ry._L2 = Math.floor((this.x + this.image_xscale * (_U82._L2 - _ke.xOrigin + 1)) + 0.5);
            if (_Ry.left > _Ry._L2) {
                _f3 = _Ry.left;
                _Ry.left = _Ry._L2;
                _Ry._L2 = _f3;
            }
            _Ry.top = Math.floor((this.y + this.image_yscale * (_U82.top - _ke.yOrigin)) + 0.5);
            _Ry.bottom = Math.floor((this.y + this.image_yscale * (_U82.bottom - _ke.yOrigin + 1)) + 0.5);
            if (_Ry.top > _Ry.bottom) {
                _f3 = _Ry.top;
                _Ry.top = _Ry.bottom;
                _Ry.bottom = _f3;
            }
            _Ry._L2 -= 1;
            _Ry.bottom -= 1;
            this._k82 = _ke._V82();
        } else {
            var _U82 = _ke._Ry;
            var _gB, _hB;
            _gB = this.image_xscale * (_U82.left - _ke.xOrigin);
            _hB = this.image_xscale * (_U82._L2 - _ke.xOrigin + 1);
            var _iB, _jB;
            _iB = this.image_yscale * (_U82.top - _ke.yOrigin);
            _jB = this.image_yscale * (_U82.bottom - _ke.yOrigin + 1);
            var _G3, _F3;
            _G3 = Math.cos(this.image_angle * _i3 / 180.0);
            _F3 = Math.sin(this.image_angle * _i3 / 180.0);
            var _W82 = _G3 * _hB;
            var _X82 = _G3 * _gB;
            var _Y82 = _F3 * _jB;
            var _Z82 = _F3 * _iB;
            var _f3;
            if (_W82 < _X82) {
                _f3 = _X82;
                _X82 = _W82;
                _W82 = _f3;
            }
            if (_Y82 < _Z82) {
                _f3 = _Z82;
                _Z82 = _Y82;
                _Y82 = _f3;
            }
            _Ry.left = Math.floor((this.x + _X82 + _Z82) + 0.5);
            _Ry._L2 = Math.floor((this.x + _W82 + _Y82) - 0.5);
            var __82 = _G3 * _jB;
            var _092 = _G3 * _iB;
            var _192 = _F3 * _hB;
            var _292 = _F3 * _gB;
            if (__82 < _092) {
                _f3 = _092;
                _092 = __82;
                __82 = _f3;
            }
            if (_192 < _292) {
                _f3 = _292;
                _292 = _192;
                _192 = _f3;
            }
            _Ry.top = Math.floor((this.y + _092 - _192) + 0.5);
            _Ry.bottom = Math.floor((this.y + __82 - _292) - 0.5);
            this._k82 = _ke._V82();
        }
        this._Ry = _Ry;
    }
    this._Py = false;
};
_Wy.prototype._di = function(_h2, _i2, _Ra) {
    if (this.marked) return false;
    var _0w = this._M4();
    if (_0w) {
        if (_0w._G2(this._Ry, this.image_index, this.x, this.y, this.image_xscale, this.image_yscale, this.image_angle)) {
            this._k82 = true;
            this._Py = false;
        }
    }
    if (this._Py) this._Qy();
    var _Ry = this._Ry;
    if (_h2 >= _Ry._L2 + 1) return false;
    if (_h2 < _Ry.left) return false;
    if (_i2 >= _Ry.bottom + 1) return false;
    if (_i2 < _Ry.top) return false;
    if ((!_Ra) || (!this._k82)) return true;
    var _8e = false;
    if (_0w) {
        _8e = _0w._u3(this.image_index, this.x, this.y, this.image_xscale, this.image_yscale, this.image_angle, _h2, _i2);
    } else {
        var _7p;
        if (this.mask_index < 0) {
            _7p = _le._O3(this.sprite_index);
        } else {
            _7p = _le._O3(this.mask_index);
        }
        if ((_7p === null) || (_7p._93 === 0)) return false;
        _8e = _7p._392(Math.floor(this.image_index), _Ry, _vb(this.x), _vb(this.y), this.image_xscale, this.image_yscale, this.image_angle, _vb(_h2), _vb(_i2));
    }
    return _8e;
};
_Wy.prototype._ei = function(_v3,
    _w3, _S2, _T2, _Ra) {
    if (this.marked) return false;
    var _0w = this._M4();
    if (_0w) {
        if (_0w._G2(this._Ry, this.image_index, this.x, this.y, this.image_xscale, this.image_yscale, this.image_angle)) {
            this._k82 = true;
            this._Py = false;
        }
    }
    if (this._Py) this._Qy();
    var _Ry = this._Ry;
    if (_e3(_v3, _S2) >= _Ry._L2 + 1) return false;
    if (_c3(_v3, _S2) < _Ry.left) return false;
    if (_e3(_w3, _T2) >= _Ry.bottom + 1) return false;
    if (_c3(_w3, _T2) < _Ry.top) return false;
    if ((!_Ra) || (!this._k82)) return true;
    var _8e = false;
    if (_0w) {
        _8e = _0w._y3(this.image_index, this.x, this.y,
            this.image_xscale, this.image_yscale, this.image_angle, _v3, _w3, _S2, _T2);
    } else {
        var _7p;
        if (this.mask_index < 0) {
            _7p = _le._O3(this.sprite_index);
        } else {
            _7p = _le._O3(this.mask_index);
        }
        if ((_7p === null) || (_7p._93 == 0)) return false;
        _e82.left = _vb(_e3(_v3, _S2));
        _e82.top = _vb(_e3(_w3, _T2));
        _e82._L2 = _vb(_c3(_v3, _S2));
        _e82.bottom = _vb(_c3(_w3, _T2));
        _8e = _7p._492(Math.floor(this.image_index), _Ry, _vb(this.x), _vb(this.y), this.image_xscale, this.image_yscale, this.image_angle, _e82);
    }
    return _8e;
};
_Wy.prototype._ii = function(_v3, _w3,
    _S2, _T2, _Ra) {
    if (this.marked) return false;
    var _0w = this._M4();
    if (_0w) {
        if (_0w._G2(this._Ry, this.image_index, this.x, this.y, this.image_xscale, this.image_yscale, this.image_angle)) {
            this._k82 = true;
            this._Py = false;
        }
    }
    if (this._Py) this._Qy();
    _v3 = _vb(_v3);
    _S2 = _vb(_S2);
    _w3 = _vb(_w3);
    _T2 = _vb(_T2);
    var _592, _692, _792, _892;
    if (_v3 < _S2) {
        _792 = _v3;
        _592 = _S2;
    } else {
        _792 = _S2;
        _592 = _v3;
    }
    if (_w3 < _T2) {
        _992 = _w3;
        _692 = _T2;
    } else {
        _992 = _T2;
        _692 = _w3;
    }
    var _Ry = this._Ry;
    if (_792 >= _Ry._L2) return false;
    if (_592 < _Ry.left) return false;
    if (_992 >= _Ry.bottom) return false;
    if (_692 < _Ry.top) return false;
    if ((_v3 == _S2) || (_w3 == _T2)) {
        return this._ei(_v3, _w3, _S2, _T2, _Ra);
    }
    if ((!_Ra) || (!this._k82)) return true;
    _e82.left = _792;
    _e82.top = _992;
    _e82._L2 = _592;
    _e82.bottom = _692;
    if (_0w) {
        return _0w._z3(this.image_index, this.x, this.y, this.image_xscale, this.image_yscale, this.image_angle, _e82);
    } else {
        var _7p;
        if (this.mask_index < 0) {
            _7p = _le._O3(this.sprite_index);
        } else {
            _7p = _le._O3(this.mask_index);
        }
        if ((_7p === null) || (_7p._93 == 0)) return false;
        _a92++;
        return _7p._b92(Math.floor(this.image_index), _Ry, _vb(this.x),
            _vb(this.y), this.image_xscale, this.image_yscale, this.image_angle, _e82);
    }
};
_Wy.prototype._li = function(_v3, _w3, _S2, _T2, _Ra) {
    if (this.marked) return false;
    var _0w = this._M4();
    if (_0w) {
        if (_0w._G2(this._Ry, this.image_index, this.x, this.y, this.image_xscale, this.image_yscale, this.image_angle)) {
            this._k82 = true;
            this._Py = false;
        }
    }
    if (this._Py) this._Qy();
    var _c92 = this._Ry;
    if (_e3(_v3, _S2) >= _c92._L2 + 1) {
        return false;
    }
    if (_c3(_v3, _S2) < _c92.left) {
        return false;
    }
    if (_e3(_w3, _T2) >= _c92.bottom + 1) {
        return false;
    }
    if (_c3(_w3, _T2) < _c92.top) {
        return false;
    }
    if (_S2 < _v3) {
        var _y8 = _S2;
        _S2 = _v3;
        _v3 = _y8;
        _y8 = _T2;
        _T2 = _w3;
        _w3 = _y8;
    }
    if (_v3 < _c92.left) {
        _w3 = _w3 + (_c92.left - _v3) * (_T2 - _w3) / (_S2 - _v3);
        _v3 = _c92.left;
    }
    if (_S2 > (_c92._L2 + 1)) {
        _T2 = _T2 + (_c92._L2 + 1 - _S2) * (_T2 - _w3) / (_S2 - _v3);
        _S2 = _c92._L2 + 1;
    }
    if ((_w3 < _c92.top) && (_T2 < _c92.top)) {
        return false;
    }
    if ((_w3 >= _c92.bottom + 1) && (_T2 >= _c92.bottom + 1)) {
        return false;
    }
    if (!_Ra || !this._k82) {
        return true;
    }
    if (_0w) {
        return _0w._x3(this.image_index, this.x, this.y, this.image_xscale, this.image_yscale, this.image_angle, _v3, _w3, _S2, _T2);
    } else {
        var _7p;
        if (this.mask_index < 0) {
            _7p = _le._O3(this.sprite_index);
        } else {
            _7p = _le._O3(this.mask_index);
        }
        if ((_7p == null) || (_7p == undefined) || (_7p._N1() == 0)) return false;
        return _7p._d92(this.image_index | 0, _c92, _vb(this.x), _vb(this.y), this.image_xscale, this.image_yscale, this.image_angle, _vb(_v3), _vb(_w3), _vb(_S2), _vb(_T2));
    }
};
_Wy.prototype._e92 = function(_Qd, _ji) {
    var _f92 = this._M4();
    var _g92 = _Qd._M4();
    var _h92 = _le._O3(this.sprite_index);
    if (_f92._G2(this._Ry, this.image_index, this.x, this.y, this.image_xscale, this.image_yscale,
            this.image_angle)) {
        this._Py = false;
    }
    if (_g92) {
        if (_g92._G2(_Qd._Ry, _Qd.image_index, _Qd.x, _Qd.y, _Qd.image_xscale, _Qd.image_yscale, _Qd.image_angle)) {
            _Qd._Py = false;
        }
    }
    if (this._Py) this._Qy();
    if (_Qd._Py) _Qd._Qy();
    if (_Qd._Ry.left >= this._Ry._L2 + 1) return false;
    if (_Qd._Ry._L2 + 1 <= this._Ry.left) return false;
    if (_Qd._Ry.top >= this._Ry.bottom + 1) return false;
    if (_Qd._Ry.bottom + 1 <= this._Ry.top) return false;
    var _h92 = _le._O3(this.sprite_index);
    var _i92 = (_Qd.mask_index < 0) ? _le._O3(_Qd.sprite_index) : _le._O3(_Qd.mask_index);
    if (_i92 === null) return false;
    if (!_ji || (!this._k82 && !_Qd._k82)) return true;
    if (_g92) {
        return _f92._P2(this.image_index, this.x, this.y, this.image_xscale, this.image_yscale, this.image_angle, _g92, _Qd.image_index, _Qd.x, _Qd.y, _Qd.image_xscale, _Qd.image_yscale, _Qd.image_angle);
    } else {
        return _f92._63(this.image_index, this.x, this.y, this.image_xscale, this.image_yscale, this.image_angle, _i92, _Qd._Ry, _Qd.image_index, _Qd.x, _Qd.y, _Qd.image_xscale, _Qd.image_yscale, _Qd.image_angle);
    }
};
_Wy.prototype._Ky = function(_7i, _Ra) {
    if (this != _7i && !this.marked && !_7i.marked) {
        if (this._M4()) {
            return this._e92(_7i, _Ra);
        }
        if (_7i._M4()) {
            return _7i._e92(this, _Ra);
        }
        if (this._Py) this._Qy();
        if (_7i._Py) _7i._Qy();
        var _j92 = _7i._Ry;
        var _k92 = this._Ry;
        if (_j92.left >= (_k92._L2 + 1)) return false;
        if ((_j92._L2 + 1) <= _k92.left) return false;
        if (_j92.top >= (_k92.bottom + 1)) return false;
        if ((_j92.bottom + 1) <= _k92.top) return false;
        if (!_Ra || (!this._k82 && !_7i._k82)) return true;
        var _l92 = null;
        var _m92 = null;
        if (this.mask_index < 0) {
            _l92 = _le._O3(this.sprite_index);
        } else {
            _l92 = _le._O3(this.mask_index);
        }
        if ((_l92 == null) || (_l92._93 == 0)) return false;
        if (_7i.mask_index < 0) {
            _m92 = _le._O3(_7i.sprite_index);
        } else {
            _m92 = _le._O3(_7i.mask_index);
        }
        if ((_m92 == null) || (_m92._93 == 0)) return false;
        return _l92._n92(this.image_index | 0, this._Ry, _vb(this.x), _vb(this.y), this.image_xscale, this.image_yscale, this.image_angle, _m92, _7i.image_index | 0, _7i._Ry, _vb(_7i.x), _vb(_7i.y), _7i.image_xscale, _7i.image_yscale, _7i.image_angle);
    }
    return false;
};
_Wy.prototype._pg = function(_F1, _yd, _ud, _o92, _CC, _p92) {
    this.path_index = -1;
    if (_F1 < 0) return;
    var _4B = _5B.Paths[_F1];
    if (!_4B) return;
    if (_4B.length <= 0) return;
    if (_ud < 0) return;
    this.path_index = _F1;
    this.path_speed = _yd;
    if (this.path_speed >= 0) {
        this.path_position = 0;
    } else {
        this.path_position = 1;
    }
    this.path_positionprevious = this.path_position;
    this.path_scale = _ud;
    this.path_orientation = _o92;
    this.path_end = _p92;
    if (_CC) {
        if (this.path_speed >= 0) {
            this._P7(_4B._qC(0), _4B._rC(0));
        } else {
            this._P7(_4B._qC(1), _4B._rC(1));
        }
    }
    this._9p = this.x;
    this._ap = this.y;
};
_Wy.prototype._6z1 = function() {
    var _Ep, _l3, _n3;
    if (this.path_index < 0) return false;
    var _4B = _5B.Paths[this.path_index];
    if (!_4B) return;
    if (_4B.length <= 0) return;
    var _q92 = false;
    var _r92 = this.path_orientation * Math.PI / 180.0;
    var _3d = _4B._IC(this.path_position);
    _l3 = _3d.x;
    _n3 = _3d.y;
    _Ep = _3d.speed;
    _3d = null;
    _Ep = _Ep / (100 * this.path_scale);
    this.path_position = this.path_position + this.path_speed * _Ep / _4B.length;
    var _s92 = _4B._IC(0);
    if ((this.path_position >= 1) || (this.path_position <= 0)) {
        _q92 = (this.path_speed == 0) ? false : true;
        switch (this.path_end) {
            case 0:
                {
                    if (this.path_speed != 0) {
                        this.path_position = 1;
                        this.path_index = -1;
                    }
                    break;
                }
            case 1:
                {
                    if (this.path_position < 0) {
                        this.path_position++;
                    } else {
                        this.path_position--;
                    }
                    break;
                }
            case 2:
                {
                    var _t92 = _4B._IC(1);
                    _l3 = _t92.x - _s92.x;
                    _n3 = _t92.y - _s92.y;
                    var _u92 = this.path_scale * (_l3 * Math.cos(_r92) + _n3 * Math.sin(_r92));
                    var _v92 = this.path_scale * (_n3 * Math.cos(_r92) - _l3 * Math.sin(_r92));
                    if (this.path_position < 0) {
                        this._9p = this._9p - _u92;
                        this._ap = this._ap - _v92;
                        this.path_position++;
                    } else {
                        this._9p = this._9p + _u92;
                        this._ap = this._ap + _v92;
                        this.path_position--;
                    }
                    break;
                }
            case 3:
                {
                    if (this.path_position < 0) {
                        this.path_position = -this.path_position;
                        this.path_speed = Math.abs(this.path_speed);
                    } else {
                        this.path_position = 2 - this.path_position;
                        this.path_speed = -Math.abs(this.path_speed);
                    }
                    break;
                }
            default:
                {
                    this.path_position = 1;
                    this.path_index = -1;
                }
        }
    }
    _3d = _4B._IC(this.path_position);
    _l3 = _3d.x - _s92.x;
    _n3 = _3d.y - _s92.y;
    var _bA = this._9p + this.path_scale * (_l3 * Math.cos(_r92) + _n3 * Math.sin(_r92));
    var _cA = this._ap + this.path_scale * (_n3 * Math.cos(_r92) - _l3 * Math.sin(_r92));
    this.sethspeed(_bA - this.x);
    this.setvspeed(_cA - this.y);
    this.setspeed(0);
    this._P7(_bA, _cA);
    return _q92;
};
_Wy.prototype.get_timer = function(_tb) {
    var _8e = -1;
    if ((_tb >= 0) && (_tb < _jN1)) {
        _8e = this.alarm[_tb];
    }
    return _8e;
};
_Wy.prototype._7e = function(_tb, _f2) {
    if ((_tb >= 0) && (_tb < _jN1)) {
        this.alarm[_tb] = _f2;
    }
};
_Wy.prototype._pB = function() {
    if (this._Py) {
        this._Qy();
    }
    return this._Ry;
};
_Wy.prototype._Jd = function(_qB, _bv) {
    var w, h;
    if (!sprite_exists(this.sprite_index)) {
        w = h = 0;
    } else {
        var _7p = _le._O3(this.sprite_index);
        w = _7p.width * this.image_xscale;
        h = _7p.height * this.image_yscale;
    }
    if (_qB) {
        if ((this.hspeed < 0) && (this.x < 0)) {
            this._P7(this.x + _81._mB() + w, this.y);
        }
        if ((this.hspeed > 0) && (this.x >= _81._mB())) {
            this._P7(this.x - _81._mB() - w, this.y);
        }
    }
    if (_bv) {
        if ((this.vspeed < 0) && (this.y < 0)) {
            this._P7(this.x, this.y + _81._nB() + h);
        }
        if ((this.vspeed > 0) && (this.y >= _81._nB())) {
            this._P7(this.x, this.y - _81._nB() - h);
        }
    }
};
_Wy.prototype._sz1 = function(_l2, _w92) {
    var _x92 = {};
    if ((_w92.x != 0.0) || (_w92.y != 0.0)) {
        var _QQ = _l2;
        var _y92 = Math.cos(_QQ);
        var _z92 = Math.sin(_QQ);
        _x92.x = ((_w92.x * _y92) - (_w92.y * _z92));
        _x92.y = ((_w92.y * _y92) + (_w92.x * _z92));
    } else {
        _x92.x = _w92.x;
        _x92.y = _w92.y;
    }
    return _x92;
};
_Wy.prototype._az1 = function(_A92) {
    var _9z1 = 1.0 / _81._ZC._xD;
    var _rz1 = this._sz1(_A92._kS(), this._ZD._bv1);
    this.x = (_A92._IC().x * _9z1) + _rz1.x;
    this.y = (_A92._IC().y * _9z1) + _rz1.y;
    this.image_angle = (-_A92._kS() * 180.0) / _i3;
    this._Py = true;
    this.phy_rotation = (_A92._kS() * 180.0) / Math.PI;
    this.phy_position_x = this.x;
    this.phy_position_y = this.y;
    this.phy_angular_velocity = (_A92._931() * 180.0) / Math.PI;
    this.phy_linear_velocity_x = _A92._731().x * _9z1;
    this.phy_linear_velocity_y = _A92._731().y * _9z1;
    this.phy_speed_x = this.phy_linear_velocity_x / _81._91();
    this.phy_speed_y = this.phy_linear_velocity_y / _81._91();
    this.phy_bullet = _A92._F31();
    this.phy_mass = _A92._g31();
    this.phy_inertia = _A92._h31();
    this.phy_com_x = _A92._431().x * _9z1;
    this.phy_com_y = _A92._431().y * _9z1;
    this.phy_dynamic = (_A92._QT === _gu1._ix1._t21);
    this.phy_kinematic = (_A92._QT === _gu1._ix1._B21);
    this.phy_sleeping = !_A92._I31();
    this.phy_fixed_rotation = _A92._M31();
    this.phy_active = _A92._K31();
    this.phy_speed = Math.sqrt((this.phy_speed_x * this.phy_speed_x) + (this.phy_speed_y * this.phy_speed_y));
    this.phy_angular_damping = _A92._u31();
    this.phy_linear_damping = _A92._t31();
    if (this.phy_position_xprevious === undefined) {
        this.phy_position_xprevious = _A92._IC().x * _9z1;
    }
    if (this.phy_position_yprevious === undefined) {
        this.phy_position_yprevious = _A92._IC().y * _9z1;
    }
};
_Wy.prototype.set_physics_rotation = function(_rv1) {
    this._ZD._qv1(_rv1);
    this._az1(this._ZD._9v1);
};
_Wy.prototype.set_physics_omega = function(_uv1) {
    this._ZD._831(_uv1);
    this._az1(this._ZD._9v1);
};
_Wy.prototype.set_physics_position_x = function(_0c) {
    this._ZD._sv1(_0c * _81._ZC._xD);
    this._az1(this._ZD._9v1);
};
_Wy.prototype.set_physics_position_y = function(_0c) {
    this._ZD._tv1(_0c * _81._ZC._xD);
    this._az1(this._ZD._9v1);
};
_Wy.prototype.set_physics_linear_velocity_x = function(_wv1) {
    this._ZD._vv1(_wv1 * _81._ZC._xD);
    this._az1(this._ZD._9v1);
};
_Wy.prototype.set_physics_linear_velocity_y = function(_wv1) {
    this._ZD._yv1(_wv1 * _81._ZC._xD);
    this._az1(this._ZD._9v1);
};
_Wy.prototype.set_physics_speed_x = function(_yd) {
    this._ZD._vv1(_yd * _81._ZC._xD * _81._91());
    this._az1(this._ZD._9v1);
};
_Wy.prototype.set_physics_speed_y = function(_yd) {
    this._ZD._yv1(_yd * _81._ZC._xD * _81._91());
    this._az1(this._ZD._9v1);
};
_Wy.prototype.set_physics_angular_damping = function(_qD) {
    this._ZD._9v1._sD(_qD);
    this._az1(this._ZD._9v1);
};
_Wy.prototype.set_physics_linear_damping = function(_qD) {
    this._ZD._9v1._rD(_qD);
    this._az1(this._ZD._9v1);
};
_Wy.prototype.set_physics_bullet = function(_zv1) {
    this._ZD._D31((_zv1 > 0.5) ? true : false);
    this._az1(this._ZD._9v1);
};
_Wy.prototype.set_physics_fixed_rotation = function(_Av1) {
    this._ZD._L31((_Av1 > 0.5) ? true : false);
    this._az1(this._ZD._9v1);
};
_Wy.prototype.set_physics_active = function(_Bv1) {
    this._ZD._J31((_Bv1 > 0.5) ? true : false);
    this._az1(this._ZD._9v1);
};
_Wy.prototype._M4 = function() {
    if (sprite_exists(this.sprite_index)) {
        var _ke = _le._O3(this.sprite_index);
        if (_ke._9w) {
            if (!this._o82) {
                this._o82 = new _H(_ke._9w);
            }
        }
    }
    return this._o82;
};

function _LY1() {
    this._B92 = new _Nb();
    this._B92._Ob = true;
    this._Zo = [];
}
_LY1.prototype._U9 = function() {
    this._Zo = [];
    this._B92._U9();
};
_LY1.prototype._fB = function() {
    return this._B92._4c;
};
_LY1.prototype._1b = function(_4p) {
    this._Zo[_4p.id] = _4p;
    this._B92._1b(_4p);
};
_LY1.prototype._pY1 = function(_ha) {
    return this._Zo[_ha];
};
_LY1.prototype._O3 = function(_ha) {
    var _4p = this._Zo[_ha];
    if (_4p != null) return _4p;
    var _Wq = _2q._O3(_ha);
    if (_Wq != null) {
        _4p = _Wq._Lr._4c[0];
        if (_4p != null) return _4p;
    }
    return null;
};
_LY1.prototype._C92 = function(_7i) {
    this._B92._y12(_7i);
    var id = _7i.id;
    this._Zo[id] = null;
};
_LY1.prototype._D92 = function() {
    var _4c = _81._Oy._4c;
    for (var index = 0; index < _4c.length; index++) {
        var _4p = _4c[index];
        _4p.xprevious = _4p.x;
        _4p.yprevious = _4p.y;
        _4p.path_positionprevious = _4p.path_position;
    }
};
_LY1.prototype._E92 = function() {
    var _4c = _81._Oy._4c;
    for (var index = 0; index < _4c.length; index++) {
        var _4p = _4c[index];
        _4p._J82();
        if (_4p._6z1()) {
            _4p._B2(_7z1, 0, _4p, _4p);
        }
        if (_4p.hspeed !== 0 || _4p.vspeed !== 0) {
            _4p.x += _4p.hspeed;
            _4p.y += _4p.vspeed;
            _4p._Py = true;
        }
    }
};
_LY1.prototype._F92 = function() {
    var _4c = _81._Oy._4c;
    for (var index = 0; index < _4c.length; index++) {
        var _4p = _4c[index];
        _4p.image_index += _4p.image_speed;
        var _Vr = _4p._L82();
        if (_4p.image_index >= _Vr) {
            _4p.image_index -= _Vr;
            var _5p = _4p._5p;
            if (_5p._vM1[_MO1]) {
                _4p._B2(_MO1, 0, _4p, _4p);
            }
        } else if (_4p.image_index < 0) {
            _4p.image_index += _Vr;
            var _5p = _4p._5p;
            if (_5p._vM1[_MO1]) {
                _4p._B2(_MO1, 0, _4p, _4p);
            }
        }
    }
};
_LY1.prototype._B2 = function(_Bp, _tb) {
    var _L11 = true;
    if (_81) {
        var _T82 = _Bp;
        if (_T82 != _mz1) _T82 |= _tb;
        var _4c = _81._Oy._4c;
        for (var index = 0; index < _4c.length; index++) {
            var _4p = _4c[index];
            if (!_4p.marked) {
                var _5p = _4p._5p;
                if (_5p._vM1[_T82]) {
                    _L11 = _4p._B2(_Bp, _tb, _4p, _4p);
                }
            }
        }
    }
    return _L11;
};
var yyInst;

function _ZX1(_ha) {
    var _4p = _ge._O3(_ha);
    if (!_4p) {
        _4p = _2q._O3(_ha);
        if (_4p) _4p = _4p._8N1._O3(0);
    }
    return _4p;
}

function __X1(_ha) {
    var _4p = _ge._O3(_ha);
    if (!_4p) {
        _4p = _2q._O3(_ha);
        if (!_4p) {
            _Qn("Unknown instance ID: " + _ha);
            debug(_Rn());
            return _qX1;
        }
        _4p = _4p._8N1._O3(0);
        _Qn("Warning: Object ID being used to access instance" + _ha);
        debug(_Rn());
    }
    return _4p;
}
var _yz = 256;
var _G92 = 3;
var _H92 = 1024;
var _wP = 1;
var _BP = 2;
var _I92 = 4;
var _Ia = 1;
var _Ga = 2;
var _Ha = 0x80000000;
var _J92 = 128;
var _K92 = 0,
    _Da = 0,
    _Ba = 0,
    _Ca = 0,
    _L92 = -1,
    _M92 = 0,
    _N92 = 0,
    _O92 = 0,
    _P92 = 0,
    _mz = 0,
    _6Q = false,
    _rz = 0,
    _sz = 0,
    _Q92 = false,
    _R92 = 0;
var _kz = [];
var _lz = [];
var _nz = [];
var _xP = [];
var _3Q = [];
var _Ea = [];
var _S92 = 0;
var _oa = [];
var _T92 = {
    8: String.fromCharCode(8),
    9: 0,
    13: 0,
    16: 0,
    17: 0,
    18: 0,
    19: 0,
    20: 0,
    27: 0,
    22: 0,
    32: " ",
    34: 0,
    35: 0,
    36: 0,
    37: 0,
    38: 0,
    39: 0,
    40: 0,
    45: 0,
    46: 0,
    47: 0,
    48: "0",
    49: "1",
    50: "2",
    51: "3",
    52: "4",
    53: "5",
    54: "6",
    55: "7",
    56: "8",
    57: "9",
    58: "0",
    59: ";",
    61: "=",
    65: "a",
    66: "b",
    67: "c",
    68: "d",
    69: "e",
    70: "f",
    71: "g",
    72: "h",
    73: "i",
    74: "j",
    75: "k",
    76: "l",
    77: "m",
    78: "n",
    79: "o",
    80: "p",
    81: "q",
    82: "r",
    83: "s",
    84: "t",
    85: "u",
    86: "v",
    87: "w",
    88: "x",
    89: "y",
    90: "z",
    91: 0,
    92: 0,
    93: 0,
    96: "0",
    97: "1",
    98: "2",
    99: "3",
    100: "4",
    101: "5",
    102: "6",
    103: "7",
    104: "8",
    105: "9",
    106: "*",
    107: "+",
    109: "-",
    110: ".",
    111: "/",
    112: 0,
    113: 0,
    114: 0,
    115: 0,
    116: 0,
    117: 0,
    118: 0,
    119: 0,
    120: 0,
    121: 0,
    122: 0,
    123: 0,
    144: 0,
    145: 0,
    173: "-",
    186: ";",
    187: "=",
    188: ",",
    189: "-",
    190: ".",
    191: "/",
    192: "'",
    219: "[",
    220: "\\",
    221: "]",
    222: "#",
    223: "`"
};
var _U92 = {
    8: String.fromCharCode(8),
    9: 0,
    13: 0,
    16: 0,
    17: 0,
    18: 0,
    19: 0,
    20: 0,
    27: 0,
    22: 0,
    32: " ",
    34: 0,
    35: 0,
    36: 0,
    37: 0,
    38: 0,
    39: 0,
    40: 0,
    45: 0,
    46: 0,
    47: 0,
    48: ")",
    49: "!",
    50: "\"",
    51: "£",
    52: "$",
    53: "%",
    54: "^",
    55: "&",
    56: "*",
    57: "(",
    58: ")",
    59: ":",
    61: "+",
    65: "A",
    66: "B",
    67: "C",
    68: "D",
    69: "E",
    70: "F",
    71: "G",
    72: "H",
    73: "I",
    74: "J",
    75: "K",
    76: "L",
    77: "M",
    78: "N",
    79: "O",
    80: "P",
    81: "Q",
    82: "R",
    83: "S",
    84: "T",
    85: "U",
    86: "V",
    87: "W",
    88: "X",
    89: "Y",
    90: "Z",
    91: 0,
    92: 0,
    93: 0,
    96: "0",
    97: "1",
    98: "2",
    99: "3",
    100: "4",
    101: "5",
    102: "6",
    103: "7",
    104: "8",
    105: "9",
    106: "*",
    107: "+",
    109: "-",
    110: ".",
    111: "/",
    112: 0,
    113: 0,
    114: 0,
    115: 0,
    116: 0,
    117: 0,
    118: 0,
    119: 0,
    120: 0,
    121: 0,
    122: 0,
    123: 0,
    144: 0,
    145: 0,
    173: "_",
    186: ":",
    187: "+",
    188: "<",
    189: "_",
    190: ">",
    191: "?",
    192: "@",
    219: "{",
    220: "|",
    221: "}",
    222: "~",
    223: "¬"
};

function _VK1() {
    _6Q = true;
}

function _V92() {
    _6Q = false;
    _W92();
}

function _X92(which) {
    if (!document.getElementById) return;
    if (which.style.display == "block") {
        which.style.display = "none";
    } else {
        which.style.display = "block";
    }
}

function _Y92(_Z92, __92) {
    try {
        if (_Z92) {
            if (_Z92.JSON_game) {
                if (_Z92.JSON_game.Options) {
                    if (_Z92.JSON_game.Options.gameGuid) {
                        if (_Z92.JSON_game.Options.gameGuid == JSON_game.Options.gameGuid) {
                            _Z92.focus();
                            __92.focus();
                            return true;
                        }
                    }
                }
            }
        }
    } catch (err) {}
    return false;
}

function _0a2() {
    var _Th = document.getElementById(_eo);
    var _1a2;
    if ((_Jw == _IR1) || (_Jw == _HR1) || (_Jw == _JR1) || (_Jw == _KR1)) {
        _1a2 = parent.frames;
        for (var _2a2 = 0; _2a2 < _1a2.length; _2a2++) {
            var _3a2 = _1a2[_2a2];
            if (_Y92(_3a2, _Th)) break;
        }
    } else {
        _1a2 = parent.document.getElementsByTagName("IFRAME");
        for (var _2a2 in _1a2) {
            var _3a2 = _1a2[_2a2].contentWindow;
            if (_Y92(_3a2, _Th)) break;
        }
    }
}
var _4a2;
var _5a2;
var _6a2;
var _7a2;
var _8a2;
var _9a2;
var _aa2;
var _ba2;
var _ca2;
var _da2;
var _ea2;

function _fa2() {
    var _7N = document.getElementById("gm4html5_div_id");
    if (_7N) {
        _5a2 = _7N.style.left;
        _6a2 = _7N.style.top;
        _7a2 = _7N.style.margin;
        var top = window.parent;
        if (top != null) {
            if (top.chrome != null && top.chrome.app != null && top.chrome.app.window != null) {
                var _ga2 = top.chrome.app.window.current();
                if (_ga2 != null) {
                    var _ha2 = window.parent.document.getElementById("container");
                    var _ia2 = window.parent.document.getElementById("game");
                    if (_ha2 != null) {
                        _8a2 = _ha2.style.width;
                        _9a2 = _ha2.style.height;
                        _ca2 = _ha2.style.left;
                        _aa2 = _ha2.style.margin;
                        _ba2 = _ha2.style.position;
                    }
                    if (_ia2 != null) {
                        _da2 = _ia2.style.width;
                        _ea2 = _ia2.style.height;
                    }
                    _ga2.fullscreen();
                    var _ja2 = _ga2.getBounds();
                    if (_ha2 != null) {
                        _ha2.style.width = "100%";
                        _ha2.style.height = "100%";
                        _ha2.style.left = "0";
                        _ha2.style.margin = 'auto';
                        _ha2.style.position = 'relative';
                    }
                    if (_ia2 != null) {
                        _ia2.style.width = "100%";
                        _ia2.style.height = "100%";
                        canvas.style.width = "100%";
                        canvas.style.height = "100%";
                    }
                }
            }
        }
        _7N.style.margin = "0px";
        _7N.style.top = "0";
        _7N.style.left = "0";
        _7N.style._ka2 = "0px";
        _7N.style._la2 = "0px";
        if (_7N.mozRequestFullScreen) {
            _7N.mozRequestFullScreen();
        } else if (_7N.webkitRequestFullScreen) {
            _7N.onwebkitfullscreenchange = function(e) {
                _7N.onwebkitfullscreenchange = _ma2;
            };
            if (_Jw == _JR1) {
                _7N.webkitRequestFullScreen();
            } else {
                _7N.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);
            }
        } else if (document.documentElement.requestFullScreen) {
            document.documentElement.requestFullScreen();
        }
        _BX1 = true;
        return;
    }
    if (canvas.mozRequestFullScreen) {
        canvas.style.margin = "0px";
        canvas.style.top = "";
        canvas.style.left = "";
        canvas.style._ka2 = "0px";
        canvas.style._la2 = "0px";
        canvas.mozRequestFullScreen();
    } else if (canvas.webkitRequestFullScreen) {
        canvas.style.margin = "0px";
        canvas.style.top = "";
        canvas.style.left = "";
        canvas.style._ka2 = "0px";
        canvas.style._la2 = "0px";
        canvas.onwebkitfullscreenchange = function(e) {
            canvas.onwebkitfullscreenchange = _ma2;
        };
        if (_Jw == _JR1) {
            canvas.webkitRequestFullScreen();
        } else {
            canvas.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);
        }
    } else if (document.documentElement.requestFullScreen) {
        canvas.style.margin = "0px";
        canvas.style.top = "";
        canvas.style.left = "";
        canvas.style._ka2 = "0px";
        canvas.style._la2 = "0px";
        document.documentElement.requestFullScreen();
    }
    _BX1 = true;
}

function _ma2() {
    if (_uO) {
        var _7N = document.getElementById("gm4html5_div_id");
        if (_7N) {
            _7N.style.left = _5a2;
            _7N.style.top = _6a2;
            _7N.style.margin = _7a2;
        }
        var top = window.parent;
        if (top != null) {
            if (top.chrome != null && top.chrome.app != null && top.chrome.app.window != null) {
                var _ga2 = top.chrome.app.window.current();
                if (_ga2 != null) _ga2.restore();
            }
        }
        _BX1 = true;
    }
}

function _na2() {
    var top = window.parent;
    if (top != null) {
        if (top.chrome != null && top.chrome.app != null && top.chrome.app.window != null) {
            var _ga2 = top.chrome.app.window.current();
            if (_ga2 != null) {
                _ga2.restore();
                _BX1 = true;
                var _ha2 = window.parent.document.getElementById("container");
                if (_ha2 != null) {
                    _ha2.style.width = _8a2;
                    _ha2.style.height = _9a2;
                    _ha2.style.left = _ca2;
                    _ha2.style.margin = _aa2;
                    _ha2.style.position = _ba2;
                }
                var _ia2 = window.parent.document.getElementById("game");
                if (_ia2 != null) {
                    _ia2.style.width = _da2;
                    _ia2.style.height = _ea2;
                    canvas.style.width = _da2;
                    canvas.style.height = _ea2;
                }
            }
        }
    }
    if (document.webkitCancelFullScreen) {
        document.webkitCancelFullScreen();
    } else if (document.mozCancelFullScreen) {
        document.mozCancelFullScreen();
        _ma2();
    } else {
        _BX1 = true;
    }
}

function _uo() {
    if (_zX1) return;
    window.onkeyup = function() {
        _oa2(arguments[0] || window.event);
    };
    window.onkeydown = function() {
        var _7R1 = arguments[0] || window.event;
        if ((_wX1) && (_7R1 != null) && (_7R1.which == 121) && (!_7R1.repeat) && (canvas.mozRequestFullScreen)) {
            if (!document.mozFullScreen) {
                _pa2();
                _fa2();
            } else {
                _qa2();
            }
            _7R1.preventDefault();
            return false;
        }
        if (_ra2(_7R1) == false) {
            _7R1.preventDefault();
            return false;
        }
    };
    _zX1 = true;
}

function _io() {
    if (_zX1 == false) return;
    window.onkeydown = null;
    window.onkeyup = null;
    _zX1 = false;
}

function _sa2(_ta2) {
    if (_ta2 == 121) {
        return true;
    }
    if (window.chrome && window.chrome.app) {
        if (_ta2 == 183) return true;
    }
    return false;
}

function _ra2(_7R1) {
    var _ta2;
    if (_7R1 == null) {
        _ta2 = window.event.which;
        if (_ta2 == 122) return true;
        if (_ta2 != 121) window.event.preventDefault();
        else _BX1 = true;
        window.event.preventDefault();
    } else {
        if (_7R1.repeat) return false;
        _ta2 = _7R1.which;
        if (_ta2 == 122) return true;
        if (_ta2 == 120) {} else if (!_sa2(_ta2)) {
            _7R1.preventDefault();
        } else {
            if (_wX1) {
                if (!_uO) {
                    _pa2();
                    _fa2();
                } else {
                    _na2();
                }
            }
        }
        _7R1.preventDefault();
    }
    if (_kz[_ta2]) return false;
    _kz[_ta2] = 1;
    _lz[_ta2] = 1;
    _mz = _ta2;
    if (_Jw == _Kw) {
        _P92 = _7R1.char;
    } else {
        if (_7R1.shiftKey) {
            _P92 = _U92[_ta2];
        } else {
            _P92 = _T92[_ta2];
        }
    }
    if (!_P92) _P92 = "";
    return false;
}

function _oa2(_7R1) {
    var _ta2;
    if (_7R1 == null) {
        _ta2 = window.event.which;
        if (_ta2 == 122) return;
        window.event.preventDefault();
    } else {
        _ta2 = _7R1.which;
        if (_ta2 == 122) return;
        _7R1.preventDefault();
    }
    _nz[_ta2] = 1;
    _kz[_ta2] = 0;
    return false;
}

function _ua2(_Ht1) {}

function _va2(_a1, _Ht1) {
    var target, _iL1;
    var _wa2 = canvas.style.display;
    canvas.style.display = "none";
    target = document.elementFromPoint(_Ht1.clientX, _Ht1.clientY);
    canvas.style.display = _wa2;
    target = "canvas";
    _iL1 = document.createEvent('MouseEvents');
    _iL1.initMouseEvent(_a1,
        true, true, document._qQ1, 1, _Ht1.screenX, _Ht1.screenY, _Ht1.clientX, _Ht1.clientY, false, false, false, false, _Ht1.button, null);
    _iL1.target = target;
    target.dispatchEvent(_iL1);
}

function _Xh(_Ht1) {
    _Ba = _Ht1.pageX;
    _Ca = _Ht1.pageY;
    _Ea[_Ht1.button].x = _Ba;
    _Ea[_Ht1.button].y = _Ca;
}

function _pN(_Ht1) {
    if (!_6Q) {
        _0a2();
    }
    _K92 = _Ht1.button;
    if (_K92 == 2) _K92 = 1;
    else if (_K92 == 1) _K92 = 2;
    _N92 = _L92;
    _L92 = _K92;
    _Da |= (1 << _K92);
    _Ea[_Ht1.button]._Fa = _Ga | _Ha | _Ia;
    _Ea[_Ht1.button].x = _Ht1.pageX;
    _Ea[_Ht1.button].y = _Ht1.pageY;
    return _Ht1;
}

function _qN(_Ht1) {
    _K92 = _Ht1.button;
    if (_K92 == 2) _K92 = 1;
    else if (_K92 == 1) _K92 = 2;
    _O92 = _M92;
    _M92 = _K92;
    _Da &= ~(1 << _K92);
    _L92 = -1;
    _Ea[_Ht1.button]._Fa = 0;
    return false;
}

function _xa2(_Ht1) {
    if (_Ht1.detail) {
        _R92 = -_Ht1.detail;
    } else {
        _R92 = _Ht1.wheelDelta;
    }
}

function _ya2() {
    _ge._B2(_FO1, 0);
    return undefined;
}

function _JY1() {
    this._za2 = "a";
    this._Aa2 = [];
    this._Ba2 = this._Ca2 = -1;
    this._tz = [];
    this._vz = [];
    this._uz = [];
    this._Da2 = this._Ea2 = 0;
    this._J8 = [];
    this._I8 = [];
    this._E8 = [];
    this._Fa2 = this._Ga2 = false;
    this._zz = [];
    this._Ha2 = this._qz = this._Ia2 = this._Ja2 = this._wz = this._xz = this._61 = 0;
    for (var _b3 = 0; _b3 < _H92; _b3++) {
        this._Aa2[_b3] = "";
    }
    for (var _b3 = 0; _b3 < _yz; _b3++) {
        this._tz[_b3] = this._vz[_b3] = this._uz[_b3] = false;
        this._zz[_b3] = _b3;
    }
    for (var _b3 = 0; _b3 < _G92; _b3++) {
        this._J8[_b3] = this._I8[_b3] = this._E8[_b3] = false;
    }
    this._V9 = _Ka2;
    this._La2 = _Ma2;
    this._Na2 = _Na2;
    this._Oa2 = _Oa2;
    this._Pa2 = _Pa2;
    this._Qa2 = _Qa2;
    this._Ra2 = _Ra2;
    this._Sa2 = _Sa2;
    this._Ta2 = _Ta2;
    this._Ua2 = _Ua2;
    this._Va2 = _Va2;
    this._Wa2 = _Wa2;
    this._Xa2 = _Xa2;
    this._lg = _lg;
    this._Ya2 = _Ya2;
    this._Za2 = _Za2;
    this._jg = _jg;
    this.__a2 = __a2;
    this._kg = _kg;
    this._0b2 = _0b2;
    this._1b2 = _1b2;
    this._2b2 = _3b2;
    this._4b2 = _5b2;
    this._6b2 = _7b2;
    this._8b2 = _8b2;
    for (var _b3 = 0; _b3 < _yz; _b3++) {
        _kz[_b3] = _nz[_b3] = false;
    }
    if (!_682) {
        window._9b2 = _ya2;
    }
    _3Q = new Array(_J92);
    _Ea = new Array(_J92);
    for (var _ab2 = 0; _ab2 < _J92; _ab2++) {
        _3Q[_ab2] = new _bb2();
        _Ea[_ab2] = new _bb2();
    }
    browser_input_capture(true);
}

function browser_input_capture(_1l) {
    if (_Q92 == _1l) return;
    _W92();
    _Q92 = _1l;
    if (_1l) {
        canvas.onmousemove = _Xh;
        canvas.onmousedown = _pN;
        canvas.onmouseup = _qN;
        canvas.onmousewheel = _xa2;
        canvas.onselectstart = function() {
            return false;
        };
        canvas.addEventListener("DOMMouseScroll", _xa2, false);
        var _b3 = document.getElementById("loading_screen");
        if (_b3) {
            _b3.onmousemove = _Xh;
            _b3.onmousedown = _pN;
            _b3.onmouseup = _qN;
            _b3.onmousewheel = _xa2;
            _b3.addEventListener("DOMMouseScroll", _xa2, false);
        }
        document.body.onfocusin = _VK1;
        document.body.onfocusout = _V92;
        document.onfocusin = _VK1;
        document.onfocusout = _V92;
        window.onfocus = _VK1;
        window.onblur = _V92;
        if (typeof(_Pn.Options.GenerateSpotifyApp) == "undefined") _uo();
    } else {
        canvas.onmousemove = null;
        canvas.onmousedown = null;
        canvas.onmouseup = null;
        canvas.onmousewheel = null;
        canvas.onselectstart = null;
        canvas.removeEventListener("DOMMouseScroll", _xa2);
        var _b3 = document.getElementById("loading_screen");
        if (_b3) {
            _b3.onmousemove = null;
            _b3.onmousedown = null;
            _b3.onmouseup = null;
            _b3.onmousewheel = null;
            _b3.removeEventListener("DOMMouseScroll", _xa2);
        }
        document.body.onfocusin = null;
        document.body.onfocusout = null;
        document.onfocusin = null;
        document.onfocusout = null;
        window.onfocus = null;
        window.onblur = null;
        if (typeof(_Pn.Options.GenerateSpotifyApp) == "undefined") _io();
    }
}

function _bb2() {
    this._Fa = 0;
    this.x = 0;
    this.y = 0;
}

function _W92() {
    _cb2();
    _db2();
    g_pBuiltIn.keyboard_key = 0;
    g_pBuiltIn.keyboard_key = "";
    _mz = 0;
    _P92 = "";
}
_JY1.prototype._U9 = function() {
    this._eb2();
    this._1b2();
    g_pBuiltIn.keyboard_key = 0;
    g_pBuiltIn.keyboard_lastkey = 0;
    g_pBuiltIn.keyboard_key = "";
    _mz = 0;
    _P92 = "";
    g_pBuiltIn.keyboard_lastchar = "";
    g_pBuiltIn.keyboard_string = "";
};

function _Na2() {
    return this._za2;
}

function _Oa2(_fb2) {
    this._za2 = _fQ;
}

function _Pa2() {
    return this._Ca2;
}

function _Qa2() {
    return this._Ba2;
}

function _Ra2(_gc) {
    if (_gc < 0 || _gc > 255) return false;
    this._Ca2 = _gc;
}

function _Sa2(_gc) {
    if (_gc < 0 || _gc > 255) return false;
    this._Ba2 = _gc;
}

function _Ta2(_gc) {
    if (_gc < 0 || _gc > 255) return false;
    return this._tz[_gc];
}

function _Ua2(_gc) {
    if (_gc < 0 || _gc > 255) return false;
    return this._uz[_gc];
}

function _Va2(_gc) {
    if (_gc < 0 || _gc > 255) return false;
    return this._vz[_gc];
}

function _Wa2(_gc) {
    if (_gc < 0 || _gc > 255) return;
    this._tz[_gc] = 0;
    this._uz[_gc] = 0;
    this._vz[_gc] = 0;
}
_JY1.prototype._eb2 = function() {
    this._Ca2 = 0;
    this._Ba2 = 0;
    this._za2 = 0;
    for (var i = 0; i <= _yz; i++) {
        this._tz[i] = 0;
        this._uz[i] = 0;
        this._vz[i] = 0;
    }
};

function _cb2() {
    for (var i = 0; i < _yz; i++) {
        _lz[i] = 0;
        _nz[i] = 0;
        _kz[i] = 0;
    }
}

function _Xa2() {
    return this._Da2;
}

function _lg() {
    return this._Ea2;
}

function _Ya2(_5i) {
    if ((_5i < 1) || (_5i > 3)) return;
    this._Da2 = _5i;
}

function _Za2(_5i) {
    if ((_5i < 1) || (_5i > 3)) return;
    this._Ea2 = _5i;
}

function _jg(_5i) {
    _5i--;
    if (_5i >= 0 && _5i < _G92) {
        return this._J8[_5i];
    }
    return false;
}

function __a2(_5i) {
    _5i--;
    if (_5i >= 0 && _5i < _G92) {
        return this._E8[_5i];
    }
}

function _kg(_5i) {
    _5i--;
    if (_5i >= 0 && _5i < _G92) {
        return this._I8[_5i];
    }
    return false;
}

function _0b2(_5i) {
    _5i--;
    if (_5i >= 0 && _5i < _G92) {
        this._J8[_5i] = false;
        this._E8[_5i] = false;
        this._I8[_5i] = false;
    }
}

function _1b2() {
    this._Da2 = 0;
    this._Ea2 = 0;
    for (var i = 0; i <= _G92; i++) {
        this._J8[i] = false;
        this._E8[i] = false;
        this._I8[i] = false;
    }
    this._Ga2 = false;
    this._Fa2 = false;
    for (var _ua = 0; _ua < _oa.length; _ua++) {
        _oa[_ua]._U9();
    }
}

function _db2() {
    _O92 = -1;
    _M92 = -1;
    _L92 = -1;
    _Da = 0;
    _Ea[0]._Fa = 0;
    _Ea[0].x = 0;
    _Ea[0].y = 0;
    _K92 = -1;
}

function _Ka2() {
    for (var _ua = 0; _ua < _oa.length; _ua++) {
        var _va = _oa[_ua];
        if (_va._J8) {
            _va._I8 = 0;
            _va._E8 = _va._1a ^ _va._J8;
        } else {
            _va._I8 = _va._1a ^ _va._J8;
            _va._E8 = 0;
        }
        _va._1a = _va._J8;
    }
    for (var _ab2 = 0; _ab2 < _Ea.length; _ab2++) {
        _3Q[_ab2]._Fa = _Ea[_ab2]._Fa;
        _3Q[_ab2].x = _Ea[_ab2].x;
        _3Q[_ab2].y = _Ea[_ab2].y;
        _Ea[_ab2]._Fa &= ~_Ia;
    }
    if (g_pBuiltIn.keyboard_key != 0) {
        g_pBuiltIn.keyboard_lastkey = g_pBuiltIn.keyboard_key;
    }
    g_pBuiltIn.keyboard_key = _mz;
    if (_mz) {
        if (_P92) {
            if (_mz == 13) {} else if (_mz == 8) {
                g_pBuiltIn.keyboard_lastchar = _P92;
                if (g_pBuiltIn.keyboard_string.length > 0) {
                    g_pBuiltIn.keyboard_string = g_pBuiltIn.keyboard_string.substring(0, g_pBuiltIn.keyboard_string.length - 1);
                }
            } else {
                g_pBuiltIn.keyboard_lastchar = _P92;
                g_pBuiltIn.keyboard_string += g_pBuiltIn.keyboard_lastchar;
                if (g_pBuiltIn.keyboard_string.length > 1024) {
                    g_pBuiltIn.keyboard_string = g_pBuiltIn.keyboard_string.substring(1, g_pBuiltIn.keyboard_string.length - 1);
                }
            }
        }
        _mz = 0;
    }
    this._wz = _Ba;
    this._xz = _Ca;
    this._qz = _Da;
    if ((this._qz & 1) != 0) {
        this._J8[0] = 1;
        if (((this._Ia2 ^ this._qz) & 0x1) != 0) {
            this._E8[0] = 1;
        }
    } else {
        this._J8[0] = 0;
        if (((this._Ia2 ^ this._qz) & 0x1) != 0) {
            this._I8[0] = 1;
        }
    }
    if ((this._qz & 2) != 0) {
        this._J8[1] = 1;
        if (((this._Ia2 ^ this._qz) & 0x2) != 0) {
            this._E8[1] = 1;
        }
    } else {
        this._J8[1] = 0;
        if (((this._Ia2 ^ this._qz) & 0x2) != 0) {
            this._I8[1] = 1;
        }
    }
    if ((this._qz & 4) != 0) {
        this._J8[2] = 1;
        if (((this._Ia2 ^ this._qz) & 0x4) != 0) {
            this._E8[2] = 1;
        }
    } else {
        this._J8[2] = 0;
        if (((this._Ia2 ^ this._qz) & 0x4) != 0) {
            this._I8[2] = 1;
        }
    }
    this._Ia2 = this._qz;
    g_pBuiltIn.mouse_x = this._wz;
    g_pBuiltIn.mouse_y = this._xz;
    g_pBuiltIn.mouse_button = _L92 + 1;
    g_pBuiltIn.mouse_lastbutton = _N92;
    this._8b2();
}

function _8b2() {
    var _gb2 = 0;
    var _E7 = 0;
    var w = _mu;
    var h = _ku;
    var _D3 = window_get_width();
    var _KM = window_get_height();
    if (w < 0) w = _D3;
    if (h < 0) h = _KM;
    for (var _ab2 = 0; _ab2 < _3Q.length; _ab2++) {
        var _hb2 = _3Q[_ab2];
        if ((_hb2._Fa & _Ha) != 0) {
            _E7 = 1;
            for (var _ib2 = 0; _ib2 < _xP.length; _ib2++) {
                var _tP = _xP[_ib2];
                if ((_tP._vP & _wP) != 0) {
                    var x = (w * (_hb2.x - _9a.left)) / _D3;
                    var y = (h * (_hb2.y - _9a.top)) / _KM;
                    if ((x >= _tP.x) && (x < _tP._23) && (y >= _tP.y) && (y < _tP._33)) {
                        _gb2 |= _E7;
                    }
                }
                _E7 <<= 1;
            }
            _hb2._Fa = 0;
        }
    }
    _E7 = 1;
    var _jb2 = _S92 ^ _gb2;
    for (var _ib2 = 0; _ib2 < _xP.length; _ib2++) {
        var _tP = _xP[_ib2];
        if ((_tP._vP & _wP) != 0) {
            var _kb2 = _gb2 & _E7;
            var _yn = _jb2 & _E7;
            if (_tP._Fc != 0) {
                this._uz[_tP._Fc] |= (_kb2 && _yn);
                this._tz[_tP._Fc] |= (_kb2 && !_yn);
                this._vz[_tP._Fc] |= (!_kb2 && _yn);
            } else {
                this._E8[_tP.button - 1] |= (_kb2 && _yn);
                this._J8[_tP.button - 1] |= (_kb2 && !_yn);
                this._I8[_tP.button - 1] |= (!_kb2 && _yn);
            }
        }
        _E7 <<= 1;
    }
    _S92 = _gb2;
}

function _2b2(_lb2) {
    var _7R1 = _0Q1 | _lb2;
    var _4c = _81._Oy._4c;
    var _mb2 = _4c.length;
    for (var _Xo = 0; _Xo < _mb2; _Xo++) {
        var _4p = _4c[_Xo];
        var _Wq = _4p._5p;
        if (_Wq._vM1[_7R1]) {
            _4p._B2(_0Q1, _lb2, _4p, _4p);
        }
    }
}

function _nb2(_ob2) {
    var _7R1 = _2Q1 | _ob2;
    var _4c = _81._Oy._4c;
    var _mb2 = _4c.length;
    for (var _Xo = 0; _Xo < _mb2; _Xo++) {
        var _4p = _4c[_Xo];
        if (_4p.marked) {
            continue;
        }
        var _Wq = _4p._5p;
        if (_Wq._vM1[_7R1]) {
            _4p._B2(_2Q1, _ob2, _4p, _4p);
        }
    }
}

function _6b2(_pb2) {
    var _7R1 = _4Q1 | _pb2;
    var _4c = _81._Oy._4c;
    var _mb2 = _4c.length;
    for (var _Xo = 0; _Xo < _mb2; _Xo++) {
        var _4p = _4c[_Xo];
        var _Wq = _4p._5p;
        if (_Wq._vM1[_7R1]) {
            _4p._B2(_4Q1, _pb2, _4p, _4p);
        }
    }
}

function _3b2() {
    var _qb2 = 0;
    for (var i = 2; i < _yz; i++) {
        if (this._tz[i]) {
            _qb2 = 1;
            _2b2(i);
        }
    }
    _2b2(_qb2);
}

function _5b2() {
    var _rb2 = 0;
    for (var i = 2; i < _yz; i++) {
        if (this._uz[i]) {
            _rb2 = 1;
            _nb2(i);
        }
    }
    _nb2(_rb2);
}

function _7b2() {
    var _sb2 = 0;
    for (var i = 2; i < _yz; i++) {
        if (this._vz[i]) {
            _sb2 = 1;
            _6b2(i);
        }
    }
    _6b2(_sb2);
}

function _Ma2() {
    var _tb2 = 0,
        _ub2 = 0,
        _vb2 = 0;
    this._61++;
    for (var i = 0; i < _yz; i++) {
        this._uz[i] = this._vz[i] = this._tz[i] = 0;
    }
    for (var i = 0; i < _yz; i++) {
        var _Fc = this._zz[i];
        this._uz[_Fc] |= _lz[i];
        this._vz[_Fc] |= _nz[i];
        this._tz[_Fc] |= _kz[i];
        _tb2 |= _lz[i];
        _ub2 |= _kz[i];
        _vb2 |= _nz[i];
        _lz[i] = 0;
        _nz[i] = 0;
    }
    this._uz[1] = _tb2;
    this._tz[1] = _ub2;
    this._vz[1] = _vb2;
    this._uz[0] = _tb2 ^ 1;
    this._tz[0] = _ub2 ^ 1;
    this._vz[0] = _vb2 ^ 1;
    _rz = _sz = 0;
    if (_R92 > 0) {
        _rz = 1;
    } else if (_R92 < 0) {
        _sz = 1;
    }
    _R92 = 0;
    for (var i = 0; i <= _G92; i++) {
        this._E8[i] = false;
        this._I8[i] = false;
    }
    this._Ga2 = false;
    this._Fa2 = false;
    this._V9();
    var _3a;
    if (!_81._4a) {
        _3a = _5a;
    } else {
        _3a = _81._6a;
    }
    for (var _X1 = 0; _X1 <= 7; ++_X1) {
        _7a = _3a[_X1];
        if (_7a && _7a.visible) {
            g_pBuiltIn.mouse_x = _7a._ea(_Aa._wz);
            g_pBuiltIn.mouse_y = _7a._fa(_Aa._xz);
            break;
        }
    }
    for (var _X1 = 7; _X1 >= 0; _X1--) {
        _7a = _3a[_X1];
        if (_7a && _7a.visible) {
            _8a(canvas, _9a);
            if (((this._wz - _9a.left) >= _7a._aa) && ((this._wz - _9a.left) < _7a._ba) && ((this._xz - _9a.top) >= _7a._ca) && ((this._xz - _9a.top) < _7a._da)) {
                g_pBuiltIn.mouse_x = _7a._ea(_Aa._wz);
                g_pBuiltIn.mouse_y = _7a._fa(_Aa._xz);
                break;
            }
        }
    }
}

function _wb2() {
    _Aa._2b2();
    _Aa._4b2();
    _Aa._6b2();
}

function _xb2(index) {
    this._vP = 0;
    this.index = index;
    this.x = 0;
    this.y = 0;
    this._23 = 0;
    this._33 = 0;
    this.w = 0;
    this.h = 0;
    this._W1 = 0;
    this._X1 = 0;
    this._Fc = 0;
    this.button = 0;
}

function _uP() {
    for (var _b3 = 0; _b3 < _xP.length; ++_b3) {
        if (_xP[_b3]._vP == 0) {
            return _xP[_b3];
        }
    }
    var i = _xP.length;
    _xP[i] = new _xb2(i);
    return _xP[i];
}

function _yP(_yb2) {
    _xP[_yb2]._vP = 0;
}

function _zb2() {
    for (var _b3 = 0; _b3 < _xP.length; ++_b3) {
        _xP[_b3]._vP = 0;
    }
}
_JY1.prototype._Ab2 = function() {
    _yo();
    _v62();
    var _Du = [];
    _Du[0] = 1;
    _Du[1] = 0;
    _Du[2] = 0;
    _Du[3] = 1;
    _Du[4] = 0;
    _Du[5] = 0;
    _H52(_Du);
    var _4r = draw_get_alpha();
    var _Bb2 = draw_get_color();
    draw_set_color(0xffffff);
    for (var _b3 = 0; _b3 < _AP.length; ++_b3) {
        var _Ay = _AP[_b3];
        draw_rectangle(_Ay.x, _Ay.y, _Ay.x + _Ay.w - 1, _Ay.y + _Ay.h - 1, true);
    }
    draw_set_color(_Bb2);
    draw_set_alpha(_4r);
    _x62();
};

function _Nb() {
    this._Cb2 = [];
    this._4c = [];
    this._Ob = false;
    this.length = 0;
    this._n4 = 0;
}
_Nb.prototype._dY1 = function() {
    if (this._Cb2.length == 0) {
        return this._4c.length;
    }
    return this._Cb2.pop();
};
_Nb.prototype._1b = function(_w12) {
    var index;
    if (this._Ob) {
        index = this._4c.length;
    } else {
        index = this._dY1();
    }
    this._4c[index] = _w12;
    this._n4++;
    this.length = this._4c.length;
    return index;
};
_Nb.prototype._O3 = function(_9A) {
    if (_9A < 0 || _9A >= this._4c.length) return null;
    return this._4c[_9A];
};
_Nb.prototype._x12 = function(_kK1) {
    for (var _b3 = 0; _b3 < this._4c.length; _b3++) {
        if (this._4c[_b3] == _kK1) return _b3;
    }
};
_Nb.prototype._y12 = function(_kK1) {
    for (var _b3 = 0; _b3 < this._4c.length; _b3++) {
        if (this._4c[_b3] == _kK1) {
            if (this._Ob) {
                this._4c.splice(_b3,
                    1);
            } else {
                this._4c[_b3] = null;
                this._Cb2.push(_b3);
            }
            this._n4--;
            this.length = this._4c.length;
            return true;
        }
    }
    return false;
};
_Nb.prototype._2b = function(_9A) {
    if (_9A < 0 || _9A >= this._4c.length) return false;
    if (this._Ob) {
        this._4c.splice(_9A, 1);
    } else {
        this._4c[_9A] = null;
        this._Cb2.push(_9A);
    }
    this._n4--;
    this.length = this._4c.length;
    return true;
};
_Nb.prototype._U9 = function() {
    this._4c = [];
    this._Cb2 = [];
    this._n4 = 0;
    this.length = this._4c.length;
};
_Nb.prototype._1c = function(_tb, _f2) {
    if (_tb < 0 || _tb > this._4c.length) return;
    for (var i = 0; i < this._Cb2.length; i++) {
        if (this._Cb2[i] >= _tb) {
            this._Cb2[i]++;
        }
    }
    this._4c.splice(_tb, 0, _f2);
    this._n4++;
    this.length = this._4c.length;
};
_Nb.prototype._7b = function(_tb, _f2) {
    if (_tb < 0 || _tb >= this._4c.length) return;
    this._4c[_tb] = _f2;
};
_Nb.prototype.__b = function(_tb, _f2) {
    if (_tb < 0) return _f2;
    if (_tb >= this._4c.length) {
        var _b3 = this._4c.length;
        while (_tb >= _b3) {
            this._1b(0);
            ++_b3;
        }
    }
    var _db = this._4c[_tb];
    this._4c[_tb] = _f2;
    return _db;
};
_Nb.prototype._Db2 = function(_Eb2) {
    if (_Eb2) {
        this._4c.sort(function(_Z4, _g3) {
            return _Z4 - _g3;
        });
    } else {
        this._4c.sort(function(_Z4, _g3) {
            return _g3 - _Z4;
        });
    }
    this._Cb2 = [];
    for (var i = 0; i < this._4c.length; i++) {
        if (this._4c[i] == null || this._4c[i] == undefined) {
            this._Cb2.push(i);
        }
    }
};
_Nb.prototype._Fb2 = function() {
    this._4c.sort(function() {
        return 0.5 - Math.random();
    });
};
_Nb.prototype._9c = function() {
    this._4c.sort(function() {
        return 0.5 - Math.random();
    });
};
_Nb.prototype._Ya = function(_Za) {
    this._4c = _Za._4c.slice();
    this._Cb2 = _Za._Cb2.slice();
    this._Ob = _Za._Ob;
    this.length = _Za.length;
    this._n4 = _Za._n4;
};
var _B82 = 0,
    _D82 = 1,
    _E82 = 2;

function _Gb2() {
    this._Hb2 = null;
    this._Ib2 = 0;
    this._Jb2 = null;
}

function _Kb2() {
    this._Hb2 = null;
    this._Lb2 = false;
    this._Wc = null;
}

function _Mb2() {
    this.physicsObject = false;
}

function _pz1(_Nb2, _a1) {
    this.__type = "[Object]";
    this._Fa = 0;
    this._gz = _Nb2;
    this._6p = _a1;
    this._SB = -1;
    this._3z = 0;
    this._QB = 0;
    this._OB = false;
    this._PB = false;
    this._RB = false;
    this._ez = 0;
    this._fo = null;
    this._Ob2 = -1;
    this._oZ1 = false;
    this._8N1 = new _Nb();
    this._Lr = new _Nb();
    this._8N1._Ob = true;
    this._Lr._Ob = true;
    this._Pb2 = [];
    for (var _Z4 = 0; _Z4 < _jN1; _Z4++) {
        this._Pb2[_Z4] = null;
    }
    this._Qb2 = [];
    this._Rb2 = [];
    this._Sb2 = [];
    this._qZ1 = [];
    this.Triggers = [];
    this.Event = [];
    this._vM1 = [];
    this._TB = new _Mb2();
}
_pz1.prototype._fB = function() {
    return this._8N1._4c;
};
_pz1.prototype._LD = function() {
    return this._Lr._4c;
};

function _zZ1(_Tb2, _Ub2) {
    var _Wq = new _pz1(_Tb2, _Ub2.pName);
    with(_Wq) {
        if (_Ub2.spriteIndex != undefined) _3z = _Ub2.spriteIndex;
        if (_Ub2.visible != undefined) _PB = _Ub2.visible;
        if (_Ub2.solid != undefined) _OB = _Ub2.solid;
        if (_Ub2.depth != undefined) _QB = _Ub2.depth;
        if (_Ub2.persistent != undefined) _RB = _Ub2.persistent;
        if (_Ub2.parent != undefined) _ez = _Ub2.parent;
        if (_Ub2.spritemask != undefined) _SB = _Ub2.spritemask;
        if (_Ub2.CreateEvent) {
            _Wq.CreateEvent = _Ub2.CreateEvent;
            _Wq.Event[_Sd] = true;
        }
        if (_Ub2.DestroyEvent) {
            _Wq.DestroyEvent = _Ub2.DestroyEvent;
            _Wq.Event[_Ly] = true;
        }
        if (_Ub2.StepBeginEvent) {
            _Wq.StepBeginEvent = _Ub2.StepBeginEvent;
            _Wq.Event[_DN1] = true;
        }
        if (_Ub2.StepNormalEvent) {
            _Wq.StepNormalEvent = _Ub2.StepNormalEvent;
            _Wq.Event[_FN1] = true;
        }
        if (_Ub2.StepEndEvent) {
            _Wq.StepEndEvent = _Ub2.StepEndEvent;
            _Wq.Event[_HN1] = true;
        }
        if (_Ub2.DrawEvent) {
            _Wq.DrawEvent = _Ub2.DrawEvent;
            _Wq.Event[_ZP1] = true;
        }
        if (_Ub2.DrawGUI) {
            _Wq.DrawGUI = _Ub2.DrawGUI;
            _Wq.Event[_aS1] = true;
        }
        if (_Ub2.DrawEventBegin) {
            _Wq.DrawEventBegin = _Ub2.DrawEventBegin;
            _Wq.Event[_cS1] = true;
        }
        if (_Ub2.DrawEventEnd) {
            _Wq.DrawEventEnd = _Ub2.DrawEventEnd;
            _Wq.Event[_dS1] = true;
        }
        if (_Ub2.DrawGUIBegin) {
            _Wq.DrawGUIBegin = _Ub2.DrawGUIBegin;
            _Wq.Event[_eS1] = true;
        }
        if (_Ub2.DrawGUIEnd) {
            _Wq.DrawGUIEnd = _Ub2.DrawGUIEnd;
            _Wq.Event[_fS1] = true;
        }
        if (_Ub2.DrawPre) {
            _Wq.DrawPre = _Ub2.DrawPre;
            _Wq.Event[_gS1] = true;
        }
        if (_Ub2.DrawPost) {
            _Wq.DrawPost = _Ub2.DrawPost;
            _Wq.Event[_hS1] = true;
        }
        if (_Ub2.DrawResize) {
            _Wq.DrawResize = _Ub2.DrawResize;
            _Wq.Event[_bS1] = true;
        }
        if (_Ub2.NoButtonPressed) {
            _Wq.NoButtonPressed = _Ub2.NoButtonPressed;
            _Wq.Event[_3N1] = true;
        }
        if (_Ub2.LeftButtonDown) {
            _Wq.LeftButtonDown = _Ub2.LeftButtonDown;
            _Wq.Event[_VM1] = true;
        }
        if (_Ub2.RightButtonDown) {
            _Wq.RightButtonDown = _Ub2.RightButtonDown;
            _Wq.Event[_XM1] = true;
        }
        if (_Ub2.MiddleButtonDown) {
            _Wq.MiddleButtonDown = _Ub2.MiddleButtonDown;
            _Wq.Event[_WM1] = true;
        }
        if (_Ub2.LeftButtonPressed) {
            _Wq.LeftButtonPressed = _Ub2.LeftButtonPressed;
            _Wq.Event[_YM1] = true;
        }
        if (_Ub2.RightButtonPressed) {
            _Wq.RightButtonPressed = _Ub2.RightButtonPressed;
            _Wq.Event[__M1] = true;
        }
        if (_Ub2.MiddleButtonPressed) {
            _Wq.MiddleButtonPressed = _Ub2.MiddleButtonPressed;
            _Wq.Event[_ZM1] = true;
        }
        if (_Ub2.LeftButtonReleased) {
            _Wq.LeftButtonReleased = _Ub2.LeftButtonReleased;
            _Wq.Event[_0N1] = true;
        }
        if (_Ub2.RightButtonReleased) {
            _Wq.RightButtonReleased = _Ub2.RightButtonReleased;
            _Wq.Event[_2N1] = true;
        }
        if (_Ub2.MiddleButtonReleased) {
            _Wq.MiddleButtonReleased = _Ub2.MiddleButtonReleased;
            _Wq.Event[_1N1] = true;
        }
        if (_Ub2.MouseWheelUp) {
            _Wq.MouseWheelUp = _Ub2.MouseWheelUp;
            _Wq.Event[_6N1] = true;
        }
        if (_Ub2.MouseWheelDown) {
            _Wq.MouseWheelDown = _Ub2.MouseWheelDown;
            _Wq.Event[_7N1] = true;
        }
        if (_Ub2.GlobalLeftButtonDown) {
            _Wq.GlobalLeftButtonDown = _Ub2.GlobalLeftButtonDown;
            _Wq.Event[_cN1] = true;
        }
        if (_Ub2.GlobalRightButtonDown) {
            _Wq.GlobalRightButtonDown = _Ub2.GlobalRightButtonDown;
            _Wq.Event[_lO1] = true;
        }
        if (_Ub2.GlobalMiddleButtonDown) {
            _Wq.GlobalMiddleButtonDown = _Ub2.GlobalMiddleButtonDown;
            _Wq.Event[_nO1] = true;
        }
        if (_Ub2.GlobalLeftButtonPressed) {
            _Wq.GlobalLeftButtonPressed = _Ub2.GlobalLeftButtonPressed;
            _Wq.Event[_dN1] = true;
        }
        if (_Ub2.GlobalRightButtonPressed) {
            _Wq.GlobalRightButtonPressed = _Ub2.GlobalRightButtonPressed;
            _Wq.Event[_qO1] = true;
        }
        if (_Ub2.GlobalMiddleButtonPressed) {
            _Wq.GlobalMiddleButtonPressed = _Ub2.GlobalMiddleButtonPressed;
            _Wq.Event[_sO1] = true;
        }
        if (_Ub2.GlobalLeftButtonReleased) {
            _Wq.GlobalLeftButtonReleased = _Ub2.GlobalLeftButtonReleased;
            _Wq.Event[_eN1] = true;
        }
        if (_Ub2.GlobalRightButtonReleased) {
            _Wq.GlobalRightButtonReleased = _Ub2.GlobalRightButtonReleased;
            _Wq.Event[_vO1] = true;
        }
        if (_Ub2.GlobalMiddleButtonReleased) {
            _Wq.GlobalMiddleButtonReleased = _Ub2.GlobalMiddleButtonReleased;
            _Wq.Event[_xO1] = true;
        }
        if (_Ub2.MouseEnter) {
            _Wq.MouseEnter = _Ub2.MouseEnter;
            _Wq.Event[_4N1] = true;
        }
        if (_Ub2.MouseLeave) {
            _Wq.MouseLeave = _Ub2.MouseLeave;
            _Wq.Event[_5N1] = true;
        }
        if (_Ub2.OutsideEvent) {
            _Wq.OutsideEvent = _Ub2.OutsideEvent;
            _Wq.Event[_wM1] = true;
        }
        if (_Ub2.BoundaryEvent) {
            _Wq.BoundaryEvent = _Ub2.BoundaryEvent;
            _Wq.Event[_yM1] = true;
        }
        if (_Ub2.StartGameEvent) {
            _Wq.StartGameEvent = _Ub2.StartGameEvent;
            _Wq.Event[_DO1] = true;
        }
        if (_Ub2.EndGameEvent) {
            _Wq.EndGameEvent = _Ub2.EndGameEvent;
            _Wq.Event[_FO1] = true;
        }
        if (_Ub2.StartRoomEvent) {
            _Wq.StartRoomEvent = _Ub2.StartRoomEvent;
            _Wq.Event[_HO1] = true;
        }
        if (_Ub2.EndRoomEvent) {
            _Wq.EndRoomEvent = _Ub2.EndRoomEvent;
            _Wq.Event[_JO1] = true;
        }
        if (_Ub2.NoLivesEvent) {
            _Wq.NoLivesEvent = _Ub2.NoLivesEvent;
            _Wq.Event[_he] = true;
        }
        if (_Ub2.AnimationEndEvent) {
            _Wq.AnimationEndEvent = _Ub2.AnimationEndEvent;
            _Wq.Event[_MO1] = true;
        }
        if (_Ub2.EndOfPathEvent) {
            _Wq.EndOfPathEvent = _Ub2.EndOfPathEvent;
            _Wq.Event[_7z1] = true;
        }
        if (_Ub2.NoHealthEvent) {
            _Wq.NoHealthEvent = _Ub2.NoHealthEvent;
            _Wq.Event[_pe] = true;
        }
        if (_Ub2.CloseButtonEvent) {
            _Wq.CloseButtonEvent = _Ub2.CloseButtonEvent;
            _Wq.Event[_QO1] = true;
        }
        if (_Ub2.OutsideView0Event) {
            _Wq.OutsideView0Event = _Ub2.OutsideView0Event;
            _Wq.Event[_EM1] = true;
        }
        if (_Ub2.OutsideView1Event) {
            _Wq.OutsideView1Event = _Ub2.OutsideView1Event;
            _Wq.Event[_TO1] = true;
        }
        if (_Ub2.OutsideView2Event) {
            _Wq.OutsideView2Event = _Ub2.OutsideView2Event;
            _Wq.Event[_VO1] = true;
        }
        if (_Ub2.OutsideView3Event) {
            _Wq.OutsideView3Event = _Ub2.OutsideView3Event;
            _Wq.Event[_XO1] = true;
        }
        if (_Ub2.OutsideView4Event) {
            _Wq.OutsideView4Event = _Ub2.OutsideView4Event;
            _Wq.Event[_ZO1] = true;
        }
        if (_Ub2.OutsideView5Event) {
            _Wq.OutsideView5Event = _Ub2.OutsideView5Event;
            _Wq.Event[_0P1] = true;
        }
        if (_Ub2.OutsideView6Event) {
            _Wq.OutsideView6Event = _Ub2.OutsideView6Event;
            _Wq.Event[_2P1] = true;
        }
        if (_Ub2.OutsideView7Event) {
            _Wq.OutsideView7Event = _Ub2.OutsideView7Event;
            _Wq.Event[_4P1] = true;
        }
        if (_Ub2.BoundaryView0Event) {
            _Wq.BoundaryView0Event = _Ub2.BoundaryView0Event;
            _Wq.Event[_FM1] = true;
        }
        if (_Ub2.BoundaryView1Event) {
            _Wq.BoundaryView1Event = _Ub2.BoundaryView1Event;
            _Wq.Event[_7P1] = true;
        }
        if (_Ub2.BoundaryView2Event) {
            _Wq.BoundaryView2Event = _Ub2.BoundaryView2Event;
            _Wq.Event[_9P1] = true;
        }
        if (_Ub2.BoundaryView3Event) {
            _Wq.BoundaryView3Event = _Ub2.BoundaryView3Event;
            _Wq.Event[_bP1] = true;
        }
        if (_Ub2.BoundaryView4Event) {
            _Wq.BoundaryView4Event = _Ub2.BoundaryView4Event;
            _Wq.Event[_dP1] = true;
        }
        if (_Ub2.BoundaryView5Event) {
            _Wq.BoundaryView5Event = _Ub2.BoundaryView5Event;
            _Wq.Event[_fP1] = true;
        }
        if (_Ub2.BoundaryView6Event) {
            _Wq.BoundaryView6Event = _Ub2.BoundaryView6Event;
            _Wq.Event[_hP1] = true;
        }
        if (_Ub2.BoundaryView7Event) {
            _Wq.BoundaryView7Event = _Ub2.BoundaryView7Event;
            _Wq.Event[_jP1] = true;
        }
        if (_Ub2.AnimationUpdateEvent) {
            _Wq.AnimationUpdateEvent = _Ub2.AnimationUpdateEvent;
            _Wq.Event[_C2] = true;
        }
        if (_Ub2.UserEvent0) {
            _Wq.UserEvent0 = _Ub2.UserEvent0;
            _Wq.Event[_kP1] = true;
        }
        if (_Ub2.UserEvent1) {
            _Wq.UserEvent1 = _Ub2.UserEvent1;
            _Wq.Event[_mP1] = true;
        }
        if (_Ub2.UserEvent2) {
            _Wq.UserEvent2 = _Ub2.UserEvent2;
            _Wq.Event[_oP1] = true;
        }
        if (_Ub2.UserEvent3) {
            _Wq.UserEvent3 = _Ub2.UserEvent3;
            _Wq.Event[_qP1] = true;
        }
        if (_Ub2.UserEvent4) {
            _Wq.UserEvent4 = _Ub2.UserEvent4;
            _Wq.Event[_sP1] = true;
        }
        if (_Ub2.UserEvent5) {
            _Wq.UserEvent5 = _Ub2.UserEvent5;
            _Wq.Event[_uP1] = true;
        }
        if (_Ub2.UserEvent6) {
            _Wq.UserEvent6 = _Ub2.UserEvent6;
            _Wq.Event[_wP1] = true;
        }
        if (_Ub2.UserEvent7) {
            _Wq.UserEvent7 = _Ub2.UserEvent7;
            _Wq.Event[_yP1] = true;
        }
        if (_Ub2.UserEvent8) {
            _Wq.UserEvent8 = _Ub2.UserEvent8;
            _Wq.Event[_AP1] = true;
        }
        if (_Ub2.UserEvent9) {
            _Wq.UserEvent9 = _Ub2.UserEvent9;
            _Wq.Event[_CP1] = true;
        }
        if (_Ub2.UserEvent10) {
            _Wq.UserEvent10 = _Ub2.UserEvent10;
            _Wq.Event[_EP1] = true;
        }
        if (_Ub2.UserEvent11) {
            _Wq.UserEvent11 = _Ub2.UserEvent11;
            _Wq.Event[_GP1] = true;
        }
        if (_Ub2.UserEvent12) {
            _Wq.UserEvent12 = _Ub2.UserEvent12;
            _Wq.Event[_IP1] = true;
        }
        if (_Ub2.UserEvent13) {
            _Wq.UserEvent13 = _Ub2.UserEvent13;
            _Wq.Event[_KP1] = true;
        }
        if (_Ub2.UserEvent14) {
            _Wq.UserEvent14 = _Ub2.UserEvent14;
            _Wq.Event[_MP1] = true;
        }
        if (_Ub2.UserEvent15) {
            _Wq.UserEvent15 = _Ub2.UserEvent15;
            _Wq.Event[_OP1] = true;
        }
        if (_Ub2.WebImageLoadedEvent) {
            _Wq.WebImageLoadedEvent = _Ub2.WebImageLoadedEvent;
            _Wq.Event[_RP1] = true;
        }
        if (_Ub2.WebSoundLoadedEvent) {
            _Wq.WebSoundLoadedEvent = _Ub2.WebSoundLoadedEvent;
            _Wq.Event[_TP1] = true;
        }
        if (_Ub2.WebAsyncEvent) {
            _Wq.WebAsyncEvent = _Ub2.WebAsyncEvent;
            _Wq.Event[_8S1] = true;
        }
        if (_Ub2.WebUserInteractionEvent) {
            _Wq.WebUserInteractionEvent = _Ub2.WebUserInteractionEvent;
            _Wq.Event[_9S1] = true;
        }
        if (_Ub2.WebIAPEvent) {
            _Wq.WebIAPEvent = _Ub2.WebIAPEvent;
            _Wq.Event[_fy] = true;
        }
        if (_Ub2.SocialEvent) {
            _Wq.SocialEvent = _Ub2.SocialEvent;
            _Wq.Event[_4q] = true;
        }
        if (_Ub2.PushNotificationEvent) {
            _Wq.PushNotificationEvent = _Ub2.PushNotificationEvent;
            _Wq.Event[_kL1] = true;
        }
        if (_Ub2.AsyncSaveLoadEvent) {
            _Wq.AsyncSaveLoadEvent = _Ub2.AsyncSaveLoadEvent;
            _Wq.Event[_CK] = true;
        }
        if (_Ub2._Vb2) {
            _Wq._Vb2 = _Ub2._Vb2;
            _Wq.Event[_lL] = true;
        }
        if (_Ub2._Wb2) {
            _Wq._Wb2 = _Ub2._Wb2;
            _Wq.Event[_AL] = true;
        }
        if (_Ub2.ObjAlarm0) {
            _Wq._Pb2[0] = _Ub2.ObjAlarm0;
            _Wq.Event[_pN1] = true;
        }
        if (_Ub2.ObjAlarm1) {
            _Wq._Pb2[1] = _Ub2.ObjAlarm1;
            _Wq.Event[_qN1] = true;
        }
        if (_Ub2.ObjAlarm2) {
            _Wq._Pb2[2] = _Ub2.ObjAlarm2;
            _Wq.Event[_rN1] = true;
        }
        if (_Ub2.ObjAlarm3) {
            _Wq._Pb2[3] = _Ub2.ObjAlarm3;
            _Wq.Event[_sN1] = true;
        }
        if (_Ub2.ObjAlarm4) {
            _Wq._Pb2[4] = _Ub2.ObjAlarm4;
            _Wq.Event[_tN1] = true;
        }
        if (_Ub2.ObjAlarm5) {
            _Wq._Pb2[5] = _Ub2.ObjAlarm5;
            _Wq.Event[_uN1] = true;
        }
        if (_Ub2.ObjAlarm6) {
            _Wq._Pb2[6] = _Ub2.ObjAlarm6;
            _Wq.Event[_vN1] = true;
        }
        if (_Ub2.ObjAlarm7) {
            _Wq._Pb2[7] = _Ub2.ObjAlarm7;
            _Wq.Event[_wN1] = true;
        }
        if (_Ub2.ObjAlarm8) {
            _Wq._Pb2[8] = _Ub2.ObjAlarm8;
            _Wq.Event[_xN1] = true;
        }
        if (_Ub2.ObjAlarm9) {
            _Wq._Pb2[9] = _Ub2.ObjAlarm9;
            _Wq.Event[_yN1] = true;
        }
        if (_Ub2.ObjAlarm10) {
            _Wq._Pb2[10] = _Ub2.ObjAlarm10;
            _Wq.Event[_zN1] = true;
        }
        if (_Ub2.ObjAlarm11) {
            _Wq._Pb2[11] = _Ub2.ObjAlarm11;
            _Wq.Event[_AN1] = true;
        }
        if (_Ub2.KeyPressed_NOKEY) {
            _Wq._Rb2[_kS1] = _Ub2.KeyPressed_NOKEY;
            _Wq.Event[_kS1] = true;
        }
        if (_Ub2.KeyPressed_ANYKEY) {
            _Wq._Rb2[_mS1] = _Ub2.KeyPressed_ANYKEY;
            _Wq.Event[_mS1] = true;
        }
        if (_Ub2.KeyPressed_BACKSPACE) {
            _Wq._Rb2[_nS1] = _Ub2.KeyPressed_BACKSPACE;
            _Wq.Event[_nS1] = true;
        }
        if (_Ub2.KeyPressed_TAB) {
            _Wq._Rb2[_oS1] = _Ub2.KeyPressed_TAB;
            _Wq.Event[_oS1] = true;
        }
        if (_Ub2.KeyPressed_ENTER) {
            _Wq._Rb2[_pS1] = _Ub2.KeyPressed_ENTER;
            _Wq.Event[_pS1] = true;
        }
        if (_Ub2.KeyPressed_SHIFT) {
            _Wq._Rb2[_qS1] = _Ub2.KeyPressed_SHIFT;
            _Wq.Event[_qS1] = true;
        }
        if (_Ub2.KeyPressed_CTRL) {
            _Wq._Rb2[_rS1] = _Ub2.KeyPressed_CTRL;
            _Wq.Event[_rS1] = true;
        }
        if (_Ub2.KeyPressed_ALT) {
            _Wq._Rb2[_sS1] = _Ub2.KeyPressed_ALT;
            _Wq.Event[_sS1] = true;
        }
        if (_Ub2.KeyPressed_PAUSE) {
            _Wq._Rb2[_tS1] = _Ub2.KeyPressed_PAUSE;
            _Wq.Event[_tS1] = true;
        }
        if (_Ub2.KeyPressed_ESCAPE) {
            _Wq._Rb2[_uS1] = _Ub2.KeyPressed_ESCAPE;
            _Wq.Event[_uS1] = true;
        }
        if (_Ub2.KeyPressed_SPACE) {
            _Wq._Rb2[_vS1] = _Ub2.KeyPressed_SPACE;
            _Wq.Event[_vS1] = true;
        }
        if (_Ub2.KeyPressed_PAGEUP) {
            _Wq._Rb2[_wS1] = _Ub2.KeyPressed_PAGEUP;
            _Wq.Event[_wS1] = true;
        }
        if (_Ub2.KeyPressed_PAGEDOWN) {
            _Wq._Rb2[_xS1] = _Ub2.KeyPressed_PAGEDOWN;
            _Wq.Event[_xS1] = true;
        }
        if (_Ub2.KeyPressed_END) {
            _Wq._Rb2[_yS1] = _Ub2.KeyPressed_END;
            _Wq.Event[_yS1] = true;
        }
        if (_Ub2.KeyPressed_HOME) {
            _Wq._Rb2[_zS1] = _Ub2.KeyPressed_HOME;
            _Wq.Event[_zS1] = true;
        }
        if (_Ub2.KeyPressed_LEFT) {
            _Wq._Rb2[_AS1] = _Ub2.KeyPressed_LEFT;
            _Wq.Event[_AS1] = true;
        }
        if (_Ub2.KeyPressed_UP) {
            _Wq._Rb2[_BS1] = _Ub2.KeyPressed_UP;
            _Wq.Event[_BS1] = true;
        }
        if (_Ub2.KeyPressed_RIGHT) {
            _Wq._Rb2[_CS1] = _Ub2.KeyPressed_RIGHT;
            _Wq.Event[_CS1] = true;
        }
        if (_Ub2.KeyPressed_DOWN) {
            _Wq._Rb2[_DS1] = _Ub2.KeyPressed_DOWN;
            _Wq.Event[_DS1] = true;
        }
        if (_Ub2.KeyPressed_INSERT) {
            _Wq._Rb2[_ES1] = _Ub2.KeyPressed_INSERT;
            _Wq.Event[_ES1] = true;
        }
        if (_Ub2.KeyPressed_DELETE) {
            _Wq._Rb2[_FS1] = _Ub2.KeyPressed_DELETE;
            _Wq.Event[_FS1] = true;
        }
        if (_Ub2.KeyPressed_0) {
            _Wq._Rb2[_GS1] = (_Ub2.KeyPressed_0);
            _Wq.Event[_GS1] = true;
        }
        if (_Ub2.KeyPressed_1) {
            _Wq._Rb2[_HS1] = (_Ub2.KeyPressed_1);
            _Wq.Event[_HS1] = true;
        }
        if (_Ub2.KeyPressed_2) {
            _Wq._Rb2[_IS1] = (_Ub2.KeyPressed_2);
            _Wq.Event[_IS1] = true;
        }
        if (_Ub2.KeyPressed_3) {
            _Wq._Rb2[_JS1] = (_Ub2.KeyPressed_3);
            _Wq.Event[_JS1] = true;
        }
        if (_Ub2.KeyPressed_4) {
            _Wq._Rb2[_KS1] = (_Ub2.KeyPressed_4);
            _Wq.Event[_KS1] = true;
        }
        if (_Ub2.KeyPressed_5) {
            _Wq._Rb2[_LS1] = (_Ub2.KeyPressed_5);
            _Wq.Event[_LS1] = true;
        }
        if (_Ub2.KeyPressed_6) {
            _Wq._Rb2[_MS1] = (_Ub2.KeyPressed_6);
            _Wq.Event[_MS1] = true;
        }
        if (_Ub2.KeyPressed_7) {
            _Wq._Rb2[_NS1] = (_Ub2.KeyPressed_7);
            _Wq.Event[_NS1] = true;
        }
        if (_Ub2.KeyPressed_8) {
            _Wq._Rb2[_OS1] = (_Ub2.KeyPressed_8);
            _Wq.Event[_OS1] = true;
        }
        if (_Ub2.KeyPressed_9) {
            _Wq._Rb2[_PS1] = (_Ub2.KeyPressed_9);
            _Wq.Event[_PS1] = true;
        }
        if (_Ub2.KeyPressed_A) {
            _Wq._Rb2[_QS1] = (_Ub2.KeyPressed_A);
            _Wq.Event[_QS1] = true;
        }
        if (_Ub2.KeyPressed_B) {
            _Wq._Rb2[_RS1] = (_Ub2.KeyPressed_B);
            _Wq.Event[_RS1] = true;
        }
        if (_Ub2.KeyPressed_C) {
            _Wq._Rb2[_SS1] = (_Ub2.KeyPressed_C);
            _Wq.Event[_SS1] = true;
        }
        if (_Ub2.KeyPressed_D) {
            _Wq._Rb2[_TS1] = (_Ub2.KeyPressed_D);
            _Wq.Event[_TS1] = true;
        }
        if (_Ub2.KeyPressed_E) {
            _Wq._Rb2[_US1] = (_Ub2.KeyPressed_E);
            _Wq.Event[_US1] = true;
        }
        if (_Ub2.KeyPressed_F) {
            _Wq._Rb2[_VS1] = (_Ub2.KeyPressed_F);
            _Wq.Event[_VS1] = true;
        }
        if (_Ub2.KeyPressed_G) {
            _Wq._Rb2[_WS1] = (_Ub2.KeyPressed_G);
            _Wq.Event[_WS1] = true;
        }
        if (_Ub2.KeyPressed_H) {
            _Wq._Rb2[_XS1] = (_Ub2.KeyPressed_H);
            _Wq.Event[_XS1] = true;
        }
        if (_Ub2.KeyPressed_I) {
            _Wq._Rb2[_YS1] = (_Ub2.KeyPressed_I);
            _Wq.Event[_YS1] = true;
        }
        if (_Ub2.KeyPressed_J) {
            _Wq._Rb2[_ZS1] = (_Ub2.KeyPressed_J);
            _Wq.Event[_ZS1] = true;
        }
        if (_Ub2.KeyPressed_K) {
            _Wq._Rb2[__S1] = (_Ub2.KeyPressed_K);
            _Wq.Event[__S1] = true;
        }
        if (_Ub2.KeyPressed_L) {
            _Wq._Rb2[_0T1] = (_Ub2.KeyPressed_L);
            _Wq.Event[_0T1] = true;
        }
        if (_Ub2.KeyPressed_M) {
            _Wq._Rb2[_1T1] = (_Ub2.KeyPressed_M);
            _Wq.Event[_1T1] = true;
        }
        if (_Ub2.KeyPressed_N) {
            _Wq._Rb2[_2T1] = (_Ub2.KeyPressed_N);
            _Wq.Event[_2T1] = true;
        }
        if (_Ub2.KeyPressed_O) {
            _Wq._Rb2[_3T1] = (_Ub2.KeyPressed_O);
            _Wq.Event[_3T1] = true;
        }
        if (_Ub2.KeyPressed_P) {
            _Wq._Rb2[_4T1] = (_Ub2.KeyPressed_P);
            _Wq.Event[_4T1] = true;
        }
        if (_Ub2.KeyPressed_Q) {
            _Wq._Rb2[_5T1] = (_Ub2.KeyPressed_Q);
            _Wq.Event[_5T1] = true;
        }
        if (_Ub2.KeyPressed_R) {
            _Wq._Rb2[_6T1] = (_Ub2.KeyPressed_R);
            _Wq.Event[_6T1] = true;
        }
        if (_Ub2.KeyPressed_S) {
            _Wq._Rb2[_7T1] = (_Ub2.KeyPressed_S);
            _Wq.Event[_7T1] = true;
        }
        if (_Ub2.KeyPressed_T) {
            _Wq._Rb2[_8T1] = (_Ub2.KeyPressed_T);
            _Wq.Event[_8T1] = true;
        }
        if (_Ub2.KeyPressed_U) {
            _Wq._Rb2[_9T1] = (_Ub2.KeyPressed_U);
            _Wq.Event[_9T1] = true;
        }
        if (_Ub2.KeyPressed_V) {
            _Wq._Rb2[_aT1] = (_Ub2.KeyPressed_V);
            _Wq.Event[_aT1] = true;
        }
        if (_Ub2.KeyPressed_W) {
            _Wq._Rb2[_bT1] = (_Ub2.KeyPressed_W);
            _Wq.Event[_bT1] = true;
        }
        if (_Ub2.KeyPressed_X) {
            _Wq._Rb2[_cT1] = (_Ub2.KeyPressed_X);
            _Wq.Event[_cT1] = true;
        }
        if (_Ub2.KeyPressed_Y) {
            _Wq._Rb2[_dT1] = (_Ub2.KeyPressed_Y);
            _Wq.Event[_dT1] = true;
        }
        if (_Ub2.KeyPressed_Z) {
            _Wq._Rb2[_eT1] = (_Ub2.KeyPressed_Z);
            _Wq.Event[_eT1] = true;
        }
        if (_Ub2.KeyPressed_F1) {
            _Wq._Rb2[_fT1] = (_Ub2.KeyPressed_F1);
            _Wq.Event[_fT1] = true;
        }
        if (_Ub2.KeyPressed_F2) {
            _Wq._Rb2[_gT1] = (_Ub2.KeyPressed_F2);
            _Wq.Event[_gT1] = true;
        }
        if (_Ub2.KeyPressed_F3) {
            _Wq._Rb2[_hT1] = (_Ub2.KeyPressed_F3);
            _Wq.Event[_hT1] = true;
        }
        if (_Ub2.KeyPressed_F4) {
            _Wq._Rb2[_iT1] = (_Ub2.KeyPressed_F4);
            _Wq.Event[_iT1] = true;
        }
        if (_Ub2.KeyPressed_F5) {
            _Wq._Rb2[_jT1] = (_Ub2.KeyPressed_F5);
            _Wq.Event[_jT1] = true;
        }
        if (_Ub2.KeyPressed_F6) {
            _Wq._Rb2[_kT1] = (_Ub2.KeyPressed_F6);
            _Wq.Event[_kT1] = true;
        }
        if (_Ub2.KeyPressed_F7) {
            _Wq._Rb2[_lT1] = (_Ub2.KeyPressed_F7);
            _Wq.Event[_lT1] = true;
        }
        if (_Ub2.KeyPressed_F8) {
            _Wq._Rb2[_mT1] = (_Ub2.KeyPressed_F8);
            _Wq.Event[_mT1] = true;
        }
        if (_Ub2.KeyPressed_F9) {
            _Wq._Rb2[_nT1] = (_Ub2.KeyPressed_F9);
            _Wq.Event[_nT1] = true;
        }
        if (_Ub2.KeyPressed_F10) {
            _Wq._Rb2[_oT1] = (_Ub2.KeyPressed_F10);
            _Wq.Event[_oT1] = true;
        }
        if (_Ub2.KeyPressed_F11) {
            _Wq._Rb2[_pT1] = (_Ub2.KeyPressed_F11);
            _Wq.Event[_pT1] = true;
        }
        if (_Ub2.KeyPressed_F12) {
            _Wq._Rb2[_qT1] = (_Ub2.KeyPressed_F12);
            _Wq.Event[_qT1] = true;
        }
        if (_Ub2.KeyPressed_NUM_LOCK) {
            _Wq._Rb2[_ET1] = (_Ub2.KeyPressed_NUM_LOCK);
            _Wq.Event[_ET1] = true;
        }
        if (_Ub2.KeyPressed_NUM_0) {
            _Wq._Rb2[_FT1] = (_Ub2.KeyPressed_NUM_0);
            _Wq.Event[_FT1] = true;
        }
        if (_Ub2.KeyPressed_NUM_1) {
            _Wq._Rb2[_GT1] = (_Ub2.KeyPressed_NUM_1);
            _Wq.Event[_GT1] = true;
        }
        if (_Ub2.KeyPressed_NUM_2) {
            _Wq._Rb2[_HT1] = (_Ub2.KeyPressed_NUM_2);
            _Wq.Event[_HT1] = true;
        }
        if (_Ub2.KeyPressed_NUM_3) {
            _Wq._Rb2[_IT1] = (_Ub2.KeyPressed_NUM_3);
            _Wq.Event[_IT1] = true;
        }
        if (_Ub2.KeyPressed_NUM_4) {
            _Wq._Rb2[_JT1] = (_Ub2.KeyPressed_NUM_4);
            _Wq.Event[_JT1] = true;
        }
        if (_Ub2.KeyPressed_NUM_5) {
            _Wq._Rb2[_KT1] = (_Ub2.KeyPressed_NUM_5);
            _Wq.Event[_KT1] = true;
        }
        if (_Ub2.KeyPressed_NUM_6) {
            _Wq._Rb2[_LT1] = (_Ub2.KeyPressed_NUM_6);
            _Wq.Event[_LT1] = true;
        }
        if (_Ub2.KeyPressed_NUM_7) {
            _Wq._Rb2[_MT1] = (_Ub2.KeyPressed_NUM_7);
            _Wq.Event[_MT1] = true;
        }
        if (_Ub2.KeyPressed_NUM_8) {
            _Wq._Rb2[_NT1] = (_Ub2.KeyPressed_NUM_8);
            _Wq.Event[_NT1] = true;
        }
        if (_Ub2.KeyPressed_NUM_9) {
            _Wq._Rb2[_OT1] = (_Ub2.KeyPressed_NUM_9);
            _Wq.Event[_OT1] = true;
        }
        if (_Ub2.KeyPressed_NUM_STAR) {
            _Wq._Rb2[_PT1] = (_Ub2.KeyPressed_NUM_STAR);
            _Wq.Event[_PT1] = true;
        }
        if (_Ub2.KeyPressed_NUM_PLUS) {
            _Wq._Rb2[_QT1] = (_Ub2.KeyPressed_NUM_PLUS);
            _Wq.Event[_QT1] = true;
        }
        if (_Ub2.KeyPressed_NUM_MINUS) {
            _Wq._Rb2[_RT1] = (_Ub2.KeyPressed_NUM_MINUS);
            _Wq.Event[_RT1] = true;
        }
        if (_Ub2.KeyPressed_NUM_DOT) {
            _Wq._Rb2[_ST1] = (_Ub2.KeyPressed_NUM_DOT);
            _Wq.Event[_ST1] = true;
        }
        if (_Ub2.KeyPressed_NUM_DIV) {
            _Wq._Rb2[_TT1] = (_Ub2.KeyPressed_NUM_DIV);
            _Wq.Event[_TT1] = true;
        }
        if (_Ub2.Key_NOKEY) {
            _Wq._Qb2[_UT1] = (_Ub2.Key_NOKEY);
            _Wq.Event[_UT1] = true;
        }
        if (_Ub2.Key_ANYKEY) {
            _Wq._Qb2[_WT1] = (_Ub2.Key_ANYKEY);
            _Wq.Event[_WT1] = true;
        }
        if (_Ub2.Key_BACKSPACE) {
            _Wq._Qb2[_XT1] = (_Ub2.Key_BACKSPACE);
            _Wq.Event[_XT1] = true;
        }
        if (_Ub2.Key_TAB) {
            _Wq._Qb2[_YT1] = (_Ub2.Key_TAB);
            _Wq.Event[_YT1] = true;
        }
        if (_Ub2.Key_ENTER) {
            _Wq._Qb2[_ZT1] = (_Ub2.Key_ENTER);
            _Wq.Event[_ZT1] = true;
        }
        if (_Ub2.Key_SHIFT) {
            _Wq._Qb2[__T1] = (_Ub2.Key_SHIFT);
            _Wq.Event[__T1] = true;
        }
        if (_Ub2.Key_CTRL) {
            _Wq._Qb2[_0U1] = (_Ub2.Key_CTRL);
            _Wq.Event[_0U1] = true;
        }
        if (_Ub2.Key_ALT) {
            _Wq._Qb2[_1U1] = (_Ub2.Key_ALT);
            _Wq.Event[_1U1] = true;
        }
        if (_Ub2.Key_PAUSE) {
            _Wq._Qb2[_2U1] = (_Ub2.Key_PAUSE);
            _Wq.Event[_2U1] = true;
        }
        if (_Ub2.Key_ESCAPE) {
            _Wq._Qb2[_3U1] = (_Ub2.Key_ESCAPE);
            _Wq.Event[_3U1] = true;
        }
        if (_Ub2.Key_SPACE) {
            _Wq._Qb2[_4U1] = (_Ub2.Key_SPACE);
            _Wq.Event[_4U1] = true;
        }
        if (_Ub2.Key_PAGEUP) {
            _Wq._Qb2[_5U1] = (_Ub2.Key_PAGEUP);
            _Wq.Event[_5U1] = true;
        }
        if (_Ub2.Key_PAGEDOWN) {
            _Wq._Qb2[_6U1] = (_Ub2.Key_PAGEDOWN);
            _Wq.Event[_6U1] = true;
        }
        if (_Ub2.Key_END) {
            _Wq._Qb2[_7U1] = (_Ub2.Key_END);
            _Wq.Event[_7U1] = true;
        }
        if (_Ub2.Key_HOME) {
            _Wq._Qb2[_8U1] = (_Ub2.Key_HOME);
            _Wq.Event[_8U1] = true;
        }
        if (_Ub2.Key_LEFT) {
            _Wq._Qb2[_9U1] = (_Ub2.Key_LEFT);
            _Wq.Event[_9U1] = true;
        }
        if (_Ub2.Key_UP) {
            _Wq._Qb2[_aU1] = (_Ub2.Key_UP);
            _Wq.Event[_aU1] = true;
        }
        if (_Ub2.Key_RIGHT) {
            _Wq._Qb2[_bU1] = (_Ub2.Key_RIGHT);
            _Wq.Event[_bU1] = true;
        }
        if (_Ub2.Key_DOWN) {
            _Wq._Qb2[_cU1] = (_Ub2.Key_DOWN);
            _Wq.Event[_cU1] = true;
        }
        if (_Ub2.Key_INSERT) {
            _Wq._Qb2[_dU1] = (_Ub2.Key_INSERT);
            _Wq.Event[_dU1] = true;
        }
        if (_Ub2.Key_DELETE) {
            _Wq._Qb2[_eU1] = (_Ub2.Key_DELETE);
            _Wq.Event[_eU1] = true;
        }
        if (_Ub2.Key_0) {
            _Wq._Qb2[_fU1] = (_Ub2.Key_0);
            _Wq.Event[_fU1] = true;
        }
        if (_Ub2.Key_1) {
            _Wq._Qb2[_gU1] = (_Ub2.Key_1);
            _Wq.Event[_gU1] = true;
        }
        if (_Ub2.Key_2) {
            _Wq._Qb2[_hU1] = (_Ub2.Key_2);
            _Wq.Event[_hU1] = true;
        }
        if (_Ub2.Key_3) {
            _Wq._Qb2[_iU1] = (_Ub2.Key_3);
            _Wq.Event[_iU1] = true;
        }
        if (_Ub2.Key_4) {
            _Wq._Qb2[_jU1] = (_Ub2.Key_4);
            _Wq.Event[_jU1] = true;
        }
        if (_Ub2.Key_5) {
            _Wq._Qb2[_kU1] = (_Ub2.Key_5);
            _Wq.Event[_kU1] = true;
        }
        if (_Ub2.Key_6) {
            _Wq._Qb2[_lU1] = (_Ub2.Key_6);
            _Wq.Event[_lU1] = true;
        }
        if (_Ub2.Key_7) {
            _Wq._Qb2[_mU1] = (_Ub2.Key_7);
            _Wq.Event[_mU1] = true;
        }
        if (_Ub2.Key_8) {
            _Wq._Qb2[_nU1] = (_Ub2.Key_8);
            _Wq.Event[_nU1] = true;
        }
        if (_Ub2.Key_9) {
            _Wq._Qb2[_oU1] = (_Ub2.Key_9);
            _Wq.Event[_oU1] = true;
        }
        if (_Ub2.Key_A) {
            _Wq._Qb2[_pU1] = (_Ub2.Key_A);
            _Wq.Event[_pU1] = true;
        }
        if (_Ub2.Key_B) {
            _Wq._Qb2[_qU1] = (_Ub2.Key_B);
            _Wq.Event[_qU1] = true;
        }
        if (_Ub2.Key_C) {
            _Wq._Qb2[_rU1] = (_Ub2.Key_C);
            _Wq.Event[_rU1] = true;
        }
        if (_Ub2.Key_D) {
            _Wq._Qb2[_sU1] = (_Ub2.Key_D);
            _Wq.Event[_sU1] = true;
        }
        if (_Ub2.Key_E) {
            _Wq._Qb2[_tU1] = (_Ub2.Key_E);
            _Wq.Event[_tU1] = true;
        }
        if (_Ub2.Key_F) {
            _Wq._Qb2[_uU1] = (_Ub2.Key_F);
            _Wq.Event[_uU1] = true;
        }
        if (_Ub2.Key_G) {
            _Wq._Qb2[_vU1] = (_Ub2.Key_G);
            _Wq.Event[_vU1] = true;
        }
        if (_Ub2.Key_H) {
            _Wq._Qb2[_wU1] = (_Ub2.Key_H);
            _Wq.Event[_wU1] = true;
        }
        if (_Ub2.Key_I) {
            _Wq._Qb2[_xU1] = (_Ub2.Key_I);
            _Wq.Event[_xU1] = true;
        }
        if (_Ub2.Key_J) {
            _Wq._Qb2[_yU1] = (_Ub2.Key_J);
            _Wq.Event[_yU1] = true;
        }
        if (_Ub2.Key_K) {
            _Wq._Qb2[_zU1] = (_Ub2.Key_K);
            _Wq.Event[_zU1] = true;
        }
        if (_Ub2.Key_L) {
            _Wq._Qb2[_AU1] = (_Ub2.Key_L);
            _Wq.Event[_AU1] = true;
        }
        if (_Ub2.Key_M) {
            _Wq._Qb2[_BU1] = (_Ub2.Key_M);
            _Wq.Event[_BU1] = true;
        }
        if (_Ub2.Key_N) {
            _Wq._Qb2[_CU1] = (_Ub2.Key_N);
            _Wq.Event[_CU1] = true;
        }
        if (_Ub2.Key_O) {
            _Wq._Qb2[_DU1] = (_Ub2.Key_O);
            _Wq.Event[_DU1] = true;
        }
        if (_Ub2.Key_P) {
            _Wq._Qb2[_EU1] = (_Ub2.Key_P);
            _Wq.Event[_EU1] = true;
        }
        if (_Ub2.Key_Q) {
            _Wq._Qb2[_FU1] = (_Ub2.Key_Q);
            _Wq.Event[_FU1] = true;
        }
        if (_Ub2.Key_R) {
            _Wq._Qb2[_GU1] = (_Ub2.Key_R);
            _Wq.Event[_GU1] = true;
        }
        if (_Ub2.Key_S) {
            _Wq._Qb2[_HU1] = (_Ub2.Key_S);
            _Wq.Event[_HU1] = true;
        }
        if (_Ub2.Key_T) {
            _Wq._Qb2[_IU1] = (_Ub2.Key_T);
            _Wq.Event[_IU1] = true;
        }
        if (_Ub2.Key_U) {
            _Wq._Qb2[_JU1] = (_Ub2.Key_U);
            _Wq.Event[_JU1] = true;
        }
        if (_Ub2.Key_V) {
            _Wq._Qb2[_KU1] = (_Ub2.Key_V);
            _Wq.Event[_KU1] = true;
        }
        if (_Ub2.Key_W) {
            _Wq._Qb2[_LU1] = (_Ub2.Key_W);
            _Wq.Event[_LU1] = true;
        }
        if (_Ub2.Key_X) {
            _Wq._Qb2[_MU1] = (_Ub2.Key_X);
            _Wq.Event[_MU1] = true;
        }
        if (_Ub2.Key_Y) {
            _Wq._Qb2[_NU1] = (_Ub2.Key_Y);
            _Wq.Event[_NU1] = true;
        }
        if (_Ub2.Key_Z) {
            _Wq._Qb2[_OU1] = (_Ub2.Key_Z);
            _Wq.Event[_OU1] = true;
        }
        if (_Ub2.Key_F1) {
            _Wq._Qb2[_PU1] = (_Ub2.Key_F1);
            _Wq.Event[_PU1] = true;
        }
        if (_Ub2.Key_F2) {
            _Wq._Qb2[_QU1] = (_Ub2.Key_F2);
            _Wq.Event[_QU1] = true;
        }
        if (_Ub2.Key_F3) {
            _Wq._Qb2[_RU1] = (_Ub2.Key_F3);
            _Wq.Event[_RU1] = true;
        }
        if (_Ub2.Key_F4) {
            _Wq._Qb2[_SU1] = (_Ub2.Key_F4);
            _Wq.Event[_SU1] = true;
        }
        if (_Ub2.Key_F5) {
            _Wq._Qb2[_TU1] = (_Ub2.Key_F5);
            _Wq.Event[_TU1] = true;
        }
        if (_Ub2.Key_F6) {
            _Wq._Qb2[_UU1] = (_Ub2.Key_F6);
            _Wq.Event[_UU1] = true;
        }
        if (_Ub2.Key_F7) {
            _Wq._Qb2[_VU1] = (_Ub2.Key_F7);
            _Wq.Event[_VU1] = true;
        }
        if (_Ub2.Key_F8) {
            _Wq._Qb2[_WU1] = (_Ub2.Key_F8);
            _Wq.Event[_WU1] = true;
        }
        if (_Ub2.Key_F9) {
            _Wq._Qb2[_XU1] = (_Ub2.Key_F9);
            _Wq.Event[_XU1] = true;
        }
        if (_Ub2.Key_F10) {
            _Wq._Qb2[_YU1] = (_Ub2.Key_F10);
            _Wq.Event[_YU1] = true;
        }
        if (_Ub2.Key_F11) {
            _Wq._Qb2[_ZU1] = (_Ub2.Key_F11);
            _Wq.Event[_ZU1] = true;
        }
        if (_Ub2.Key_F12) {
            _Wq._Qb2[__U1] = (_Ub2.Key_F12);
            _Wq.Event[__U1] = true;
        }
        if (_Ub2.Key_NUM_LOCK) {
            _Wq._Qb2[_dV1] = (_Ub2.Key_NUM_LOCK);
            _Wq.Event[_dV1] = true;
        }
        if (_Ub2.Key_NUM_0) {
            _Wq._Qb2[_eV1] = (_Ub2.Key_NUM_0);
            _Wq.Event[_eV1] = true;
        }
        if (_Ub2.Key_NUM_1) {
            _Wq._Qb2[_fV1] = (_Ub2.Key_NUM_1);
            _Wq.Event[_fV1] = true;
        }
        if (_Ub2.Key_NUM_2) {
            _Wq._Qb2[_gV1] = (_Ub2.Key_NUM_2);
            _Wq.Event[_gV1] = true;
        }
        if (_Ub2.Key_NUM_3) {
            _Wq._Qb2[_hV1] = (_Ub2.Key_NUM_3);
            _Wq.Event[_hV1] = true;
        }
        if (_Ub2.Key_NUM_4) {
            _Wq._Qb2[_iV1] = (_Ub2.Key_NUM_4);
            _Wq.Event[_iV1] = true;
        }
        if (_Ub2.Key_NUM_5) {
            _Wq._Qb2[_jV1] = (_Ub2.Key_NUM_5);
            _Wq.Event[_jV1] = true;
        }
        if (_Ub2.Key_NUM_6) {
            _Wq._Qb2[_kV1] = (_Ub2.Key_NUM_6);
            _Wq.Event[_kV1] = true;
        }
        if (_Ub2.Key_NUM_7) {
            _Wq._Qb2[_lV1] = (_Ub2.Key_NUM_7);
            _Wq.Event[_lV1] = true;
        }
        if (_Ub2.Key_NUM_8) {
            _Wq._Qb2[_mV1] = (_Ub2.Key_NUM_8);
            _Wq.Event[_mV1] = true;
        }
        if (_Ub2.Key_NUM_9) {
            _Wq._Qb2[_nV1] = (_Ub2.Key_NUM_9);
            _Wq.Event[_nV1] = true;
        }
        if (_Ub2.Key_NUM_STAR) {
            _Wq._Qb2[_oV1] = (_Ub2.Key_NUM_STAR);
            _Wq.Event[_oV1] = true;
        }
        if (_Ub2.Key_NUM_PLUS) {
            _Wq._Qb2[_pV1] = (_Ub2.Key_NUM_PLUS);
            _Wq.Event[_pV1] = true;
        }
        if (_Ub2.Key_NUM_MINUS) {
            _Wq._Qb2[_qV1] = (_Ub2.Key_NUM_MINUS);
            _Wq.Event[_qV1] = true;
        }
        if (_Ub2.Key_NUM_DOT) {
            _Wq._Qb2[_rV1] = (_Ub2.Key_NUM_DOT);
            _Wq.Event[_rV1] = true;
        }
        if (_Ub2.Key_NUM_DIV) {
            _Wq._Qb2[_sV1] = (_Ub2.Key_NUM_DIV);
            _Wq.Event[_sV1] = true;
        }
        if (_Ub2.KeyReleased_NOKEY) {
            _Wq._Sb2[_tV1] = (_Ub2.KeyReleased_NOKEY);
            _Wq.Event[_tV1] = true;
        }
        if (_Ub2.KeyReleased_ANYKEY) {
            _Wq._Sb2[_vV1] = (_Ub2.KeyReleased_ANYKEY);
            _Wq.Event[_vV1] = true;
        }
        if (_Ub2.KeyReleased_BACKSPACE) {
            _Wq._Sb2[_wV1] = (_Ub2.KeyReleased_BACKSPACE);
            _Wq.Event[_wV1] = true;
        }
        if (_Ub2.KeyReleased_TAB) {
            _Wq._Sb2[_xV1] = (_Ub2.KeyReleased_TAB);
            _Wq.Event[_xV1] = true;
        }
        if (_Ub2.KeyReleased_ENTER) {
            _Wq._Sb2[_yV1] = (_Ub2.KeyReleased_ENTER);
            _Wq.Event[_yV1] = true;
        }
        if (_Ub2.KeyReleased_SHIFT) {
            _Wq._Sb2[_zV1] = (_Ub2.KeyReleased_SHIFT);
            _Wq.Event[_zV1] = true;
        }
        if (_Ub2.KeyReleased_CTRL) {
            _Wq._Sb2[_AV1] = (_Ub2.KeyReleased_CTRL);
            _Wq.Event[_AV1] = true;
        }
        if (_Ub2.KeyReleased_ALT) {
            _Wq._Sb2[_BV1] = (_Ub2.KeyReleased_ALT);
            _Wq.Event[_BV1] = true;
        }
        if (_Ub2.KeyReleased_PAUSE) {
            _Wq._Sb2[_CV1] = (_Ub2.KeyReleased_PAUSE);
            _Wq.Event[_CV1] = true;
        }
        if (_Ub2.KeyReleased_ESCAPE) {
            _Wq._Sb2[_DV1] = (_Ub2.KeyReleased_ESCAPE);
            _Wq.Event[_DV1] = true;
        }
        if (_Ub2.KeyReleased_SPACE) {
            _Wq._Sb2[_EV1] = (_Ub2.KeyReleased_SPACE);
            _Wq.Event[_EV1] = true;
        }
        if (_Ub2.KeyReleased_PAGEUP) {
            _Wq._Sb2[_FV1] = (_Ub2.KeyReleased_PAGEUP);
            _Wq.Event[_FV1] = true;
        }
        if (_Ub2.KeyReleased_PAGEDOWN) {
            _Wq._Sb2[_GV1] = (_Ub2.KeyReleased_PAGEDOWN);
            _Wq.Event[_GV1] = true;
        }
        if (_Ub2.KeyReleased_END) {
            _Wq._Sb2[_HV1] = (_Ub2.KeyReleased_END);
            _Wq.Event[_HV1] = true;
        }
        if (_Ub2.KeyReleased_HOME) {
            _Wq._Sb2[_IV1] = (_Ub2.KeyReleased_HOME);
            _Wq.Event[_IV1] = true;
        }
        if (_Ub2.KeyReleased_LEFT) {
            _Wq._Sb2[_JV1] = (_Ub2.KeyReleased_LEFT);
            _Wq.Event[_JV1] = true;
        }
        if (_Ub2.KeyReleased_UP) {
            _Wq._Sb2[_KV1] = (_Ub2.KeyReleased_UP);
            _Wq.Event[_KV1] = true;
        }
        if (_Ub2.KeyReleased_RIGHT) {
            _Wq._Sb2[_LV1] = (_Ub2.KeyReleased_RIGHT);
            _Wq.Event[_LV1] = true;
        }
        if (_Ub2.KeyReleased_DOWN) {
            _Wq._Sb2[_MV1] = (_Ub2.KeyReleased_DOWN);
            _Wq.Event[_MV1] = true;
        }
        if (_Ub2.KeyReleased_INSERT) {
            _Wq._Sb2[_NV1] = (_Ub2.KeyReleased_INSERT);
            _Wq.Event[_NV1] = true;
        }
        if (_Ub2.KeyReleased_DELETE) {
            _Wq._Sb2[_OV1] = (_Ub2.KeyReleased_DELETE);
            _Wq.Event[_OV1] = true;
        }
        if (_Ub2.KeyReleased_0) {
            _Wq._Sb2[_PV1] = (_Ub2.KeyReleased_0);
            _Wq.Event[_PV1] = true;
        }
        if (_Ub2.KeyReleased_1) {
            _Wq._Sb2[_QV1] = (_Ub2.KeyReleased_1);
            _Wq.Event[_QV1] = true;
        }
        if (_Ub2.KeyReleased_2) {
            _Wq._Sb2[_RV1] = (_Ub2.KeyReleased_2);
            _Wq.Event[_RV1] = true;
        }
        if (_Ub2.KeyReleased_3) {
            _Wq._Sb2[_SV1] = (_Ub2.KeyReleased_3);
            _Wq.Event[_SV1] = true;
        }
        if (_Ub2.KeyReleased_4) {
            _Wq._Sb2[_TV1] = (_Ub2.KeyReleased_4);
            _Wq.Event[_TV1] = true;
        }
        if (_Ub2.KeyReleased_5) {
            _Wq._Sb2[_UV1] = (_Ub2.KeyReleased_5);
            _Wq.Event[_UV1] = true;
        }
        if (_Ub2.KeyReleased_6) {
            _Wq._Sb2[_VV1] = (_Ub2.KeyReleased_6);
            _Wq.Event[_VV1] = true;
        }
        if (_Ub2.KeyReleased_7) {
            _Wq._Sb2[_WV1] = (_Ub2.KeyReleased_7);
            _Wq.Event[_WV1] = true;
        }
        if (_Ub2.KeyReleased_8) {
            _Wq._Sb2[_XV1] = (_Ub2.KeyReleased_8);
            _Wq.Event[_XV1] = true;
        }
        if (_Ub2.KeyReleased_9) {
            _Wq._Sb2[_YV1] = (_Ub2.KeyReleased_9);
            _Wq.Event[_YV1] = true;
        }
        if (_Ub2.KeyReleased_A) {
            _Wq._Sb2[_ZV1] = (_Ub2.KeyReleased_A);
            _Wq.Event[_ZV1] = true;
        }
        if (_Ub2.KeyReleased_B) {
            _Wq._Sb2[__V1] = (_Ub2.KeyReleased_B);
            _Wq.Event[__V1] = true;
        }
        if (_Ub2.KeyReleased_C) {
            _Wq._Sb2[_0W1] = (_Ub2.KeyReleased_C);
            _Wq.Event[_0W1] = true;
        }
        if (_Ub2.KeyReleased_D) {
            _Wq._Sb2[_1W1] = (_Ub2.KeyReleased_D);
            _Wq.Event[_1W1] = true;
        }
        if (_Ub2.KeyReleased_E) {
            _Wq._Sb2[_2W1] = (_Ub2.KeyReleased_E);
            _Wq.Event[_2W1] = true;
        }
        if (_Ub2.KeyReleased_F) {
            _Wq._Sb2[_3W1] = (_Ub2.KeyReleased_F);
            _Wq.Event[_3W1] = true;
        }
        if (_Ub2.KeyReleased_G) {
            _Wq._Sb2[_4W1] = (_Ub2.KeyReleased_G);
            _Wq.Event[_4W1] = true;
        }
        if (_Ub2.KeyReleased_H) {
            _Wq._Sb2[_5W1] = (_Ub2.KeyReleased_H);
            _Wq.Event[_5W1] = true;
        }
        if (_Ub2.KeyReleased_I) {
            _Wq._Sb2[_6W1] = (_Ub2.KeyReleased_I);
            _Wq.Event[_6W1] = true;
        }
        if (_Ub2.KeyReleased_J) {
            _Wq._Sb2[_7W1] = (_Ub2.KeyReleased_J);
            _Wq.Event[_7W1] = true;
        }
        if (_Ub2.KeyReleased_K) {
            _Wq._Sb2[_8W1] = (_Ub2.KeyReleased_K);
            _Wq.Event[_8W1] = true;
        }
        if (_Ub2.KeyReleased_L) {
            _Wq._Sb2[_9W1] = (_Ub2.KeyReleased_L);
            _Wq.Event[_9W1] = true;
        }
        if (_Ub2.KeyReleased_M) {
            _Wq._Sb2[_aW1] = (_Ub2.KeyReleased_M);
            _Wq.Event[_aW1] = true;
        }
        if (_Ub2.KeyReleased_N) {
            _Wq._Sb2[_bW1] = (_Ub2.KeyReleased_N);
            _Wq.Event[_bW1] = true;
        }
        if (_Ub2.KeyReleased_O) {
            _Wq._Sb2[_cW1] = (_Ub2.KeyReleased_O);
            _Wq.Event[_cW1] = true;
        }
        if (_Ub2.KeyReleased_P) {
            _Wq._Sb2[_dW1] = (_Ub2.KeyReleased_P);
            _Wq.Event[_dW1] = true;
        }
        if (_Ub2.KeyReleased_Q) {
            _Wq._Sb2[_eW1] = (_Ub2.KeyReleased_Q);
            _Wq.Event[_eW1] = true;
        }
        if (_Ub2.KeyReleased_R) {
            _Wq._Sb2[_fW1] = (_Ub2.KeyReleased_R);
            _Wq.Event[_fW1] = true;
        }
        if (_Ub2.KeyReleased_S) {
            _Wq._Sb2[_gW1] = (_Ub2.KeyReleased_S);
            _Wq.Event[_gW1] = true;
        }
        if (_Ub2.KeyReleased_T) {
            _Wq._Sb2[_hW1] = (_Ub2.KeyReleased_T);
            _Wq.Event[_hW1] = true;
        }
        if (_Ub2.KeyReleased_U) {
            _Wq._Sb2[_iW1] = (_Ub2.KeyReleased_U);
            _Wq.Event[_iW1] = true;
        }
        if (_Ub2.KeyReleased_V) {
            _Wq._Sb2[_jW1] = (_Ub2.KeyReleased_V);
            _Wq.Event[_jW1] = true;
        }
        if (_Ub2.KeyReleased_W) {
            _Wq._Sb2[_kW1] = (_Ub2.KeyReleased_W);
            _Wq.Event[_kW1] = true;
        }
        if (_Ub2.KeyReleased_X) {
            _Wq._Sb2[_lW1] = (_Ub2.KeyReleased_X);
            _Wq.Event[_lW1] = true;
        }
        if (_Ub2.KeyReleased_Y) {
            _Wq._Sb2[_mW1] = (_Ub2.KeyReleased_Y);
            _Wq.Event[_mW1] = true;
        }
        if (_Ub2.KeyReleased_Z) {
            _Wq._Sb2[_nW1] = (_Ub2.KeyReleased_Z);
            _Wq.Event[_nW1] = true;
        }
        if (_Ub2.KeyReleased_F1) {
            _Wq._Sb2[_oW1] = (_Ub2.KeyReleased_F1);
            _Wq.Event[_oW1] = true;
        }
        if (_Ub2.KeyReleased_F2) {
            _Wq._Sb2[_pW1] = (_Ub2.KeyReleased_F2);
            _Wq.Event[_pW1] = true;
        }
        if (_Ub2.KeyReleased_F3) {
            _Wq._Sb2[_qW1] = (_Ub2.KeyReleased_F3);
            _Wq.Event[_qW1] = true;
        }
        if (_Ub2.KeyReleased_F4) {
            _Wq._Sb2[_rW1] = (_Ub2.KeyReleased_F4);
            _Wq.Event[_rW1] = true;
        }
        if (_Ub2.KeyReleased_F5) {
            _Wq._Sb2[_sW1] = (_Ub2.KeyReleased_F5);
            _Wq.Event[_sW1] = true;
        }
        if (_Ub2.KeyReleased_F6) {
            _Wq._Sb2[_tW1] = (_Ub2.KeyReleased_F6);
            _Wq.Event[_tW1] = true;
        }
        if (_Ub2.KeyReleased_F7) {
            _Wq._Sb2[_uW1] = (_Ub2.KeyReleased_F7);
            _Wq.Event[_uW1] = true;
        }
        if (_Ub2.KeyReleased_F8) {
            _Wq._Sb2[_vW1] = (_Ub2.KeyReleased_F8);
            _Wq.Event[_vW1] = true;
        }
        if (_Ub2.KeyReleased_F9) {
            _Wq._Sb2[_wW1] = (_Ub2.KeyReleased_F9);
            _Wq.Event[_wW1] = true;
        }
        if (_Ub2.KeyReleased_F10) {
            _Wq._Sb2[_xW1] = (_Ub2.KeyReleased_F10);
            _Wq.Event[_xW1] = true;
        }
        if (_Ub2.KeyReleased_F11) {
            _Wq._Sb2[_yW1] = (_Ub2.KeyReleased_F11);
            _Wq.Event[_yW1] = true;
        }
        if (_Ub2.KeyReleased_F12) {
            _Wq._Sb2[_zW1] = (_Ub2.KeyReleased_F12);
            _Wq.Event[_zW1] = true;
        }
        if (_Ub2.KeyReleased_NUM_LOCK) {
            _Wq._Sb2[_NW1] = (_Ub2.KeyReleased_NUM_LOCK);
            _Wq.Event[_NW1] = true;
        }
        if (_Ub2.KeyReleased_NUM_0) {
            _Wq._Sb2[_OW1] = (_Ub2.KeyReleased_NUM_0);
            _Wq.Event[_OW1] = true;
        }
        if (_Ub2.KeyReleased_NUM_1) {
            _Wq._Sb2[_PW1] = (_Ub2.KeyReleased_NUM_1);
            _Wq.Event[_PW1] = true;
        }
        if (_Ub2.KeyReleased_NUM_2) {
            _Wq._Sb2[_QW1] = (_Ub2.KeyReleased_NUM_2);
            _Wq.Event[_QW1] = true;
        }
        if (_Ub2.KeyReleased_NUM_3) {
            _Wq._Sb2[_RW1] = (_Ub2.KeyReleased_NUM_3);
            _Wq.Event[_RW1] = true;
        }
        if (_Ub2.KeyReleased_NUM_4) {
            _Wq._Sb2[_SW1] = (_Ub2.KeyReleased_NUM_4);
            _Wq.Event[_SW1] = true;
        }
        if (_Ub2.KeyReleased_NUM_5) {
            _Wq._Sb2[_TW1] = (_Ub2.KeyReleased_NUM_5);
            _Wq.Event[_TW1] = true;
        }
        if (_Ub2.KeyReleased_NUM_6) {
            _Wq._Sb2[_UW1] = (_Ub2.KeyReleased_NUM_6);
            _Wq.Event[_UW1] = true;
        }
        if (_Ub2.KeyReleased_NUM_7) {
            _Wq._Sb2[_VW1] = (_Ub2.KeyReleased_NUM_7);
            _Wq.Event[_VW1] = true;
        }
        if (_Ub2.KeyReleased_NUM_8) {
            _Wq._Sb2[_WW1] = (_Ub2.KeyReleased_NUM_8);
            _Wq.Event[_WW1] = true;
        }
        if (_Ub2.KeyReleased_NUM_9) {
            _Wq._Sb2[_XW1] = (_Ub2.KeyReleased_NUM_9);
            _Wq.Event[_XW1] = true;
        }
        if (_Ub2.KeyReleased_NUM_STAR) {
            _Wq._Sb2[_YW1] = (_Ub2.KeyReleased_NUM_STAR);
            _Wq.Event[_YW1] = true;
        }
        if (_Ub2.KeyReleased_NUM_PLUS) {
            _Wq._Sb2[_ZW1] = (_Ub2.KeyReleased_NUM_PLUS);
            _Wq.Event[_ZW1] = true;
        }
        if (_Ub2.KeyReleased_NUM_MINUS) {
            _Wq._Sb2[__W1] = (_Ub2.KeyReleased_NUM_MINUS);
            _Wq.Event[__W1] = true;
        }
        if (_Ub2.KeyReleased_NUM_DOT) {
            _Wq._Sb2[_0X1] = (_Ub2.KeyReleased_NUM_DOT);
            _Wq.Event[_0X1] = true;
        }
        if (_Ub2.KeyReleased_NUM_DIV) {
            _Wq._Sb2[_1X1] = (_Ub2.KeyReleased_NUM_DIV);
            _Wq.Event[_1X1] = true;
        }
        var i = 0;
        if (_Ub2.TriggerEvents != undefined) {
            while (i < _Ub2.TriggerEvents.length) {
                var _Fc = parseInt(_Ub2.TriggerEvents[i]) + 1;
                var pFunc = _Ub2.TriggerEvents[i + 1];
                var _Xb2 = _pX1._O3(_Fc);
                _Wq.Event[_6Q1] = true;
                _Wq.Event[_6Q1 | _Fc] = true;
                var _Yb2 = new _Gb2();
                _Yb2._Hb2 = pFunc;
                _Yb2._Jb2 = _Xb2;
                _Yb2._Ib2 = _Fc;
                _Wq.Triggers[_6Q1 | _Fc] = _Yb2;
                i += 2;
            }
        }
        i = 0;
        if (_Ub2.CollisionEvents != undefined) {
            while (i < _Ub2.CollisionEvents.length) {
                _Wq.Event[_mz1] = true;
                var _Fc = parseInt(_Ub2.CollisionEvents[i]);
                var _oO = _Ub2.CollisionEvents[i + 1];
                var _Zb2 = new _Kb2();
                _Zb2._Hb2 = _oO;
                _Zb2.__b2 = false;
                _Zb2._Wc = this;
                _Wq._qZ1[_Fc] = _Zb2;
                i += 2;
            }
        }
        if (_Ub2.physicsObject != undefined) {
            _Wq._TB.physicsObject = _Ub2.physicsObject;
            _Wq._TB.physicsSensor = _Ub2.physicsSensor;
            _Wq._TB.physicsShape = _Ub2.physicsShape;
            _Wq._TB.physicsDensity = _Ub2.physicsDensity;
            _Wq._TB.physicsRestitution = _Ub2.physicsRestitution;
            _Wq._TB.physicsGroup = _Ub2.physicsGroup;
            _Wq._TB.physicsLinearDamping = _Ub2.physicsLinearDamping;
            _Wq._TB.physicsAngularDamping = _Ub2.physicsAngularDamping;
            _Wq._TB.physicsFriction = _Ub2.physicsFriction;
            _Wq._TB.physicsAwake = _Ub2.physicsAwake;
            _Wq._TB.physicsKinematic = _Ub2.physicsKinematic;
            _Wq._TB.physicsShapeVertices = _Ub2.physicsShapeVertices;
        }
    }
    return _Wq;
}
_pz1.prototype._0c2 = function(_Bp, _ns) {
    if (this.Event[_Bp]) return true;
    return false;
};
_pz1.prototype._B2 = function(_Bp, index, _7i, _ms) {
    if (_5H != -1) {
        return;
    }
    var _1c2 = _Ds;
    var _2c2 = _Es;
    var _3c2 = _KX1;
    var _4c2 = _cd;
    _KX1 = this;
    _Ds = _Bp;
    _Es = index;
    _cd = false;
    var _L11 = true;
    switch (_Bp) {
        case _Sd:
            if (this.CreateEvent) this.CreateEvent(_7i,
                _ms);
            else _L11 = false;
            break;
        case _Ly:
            if (this.DestroyEvent) this.DestroyEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _kN1:
            _L11 = false;
            break;
        case _6S1:
            _L11 = false;
            break;
        case _mz1:
            if (this._qZ1[index]) this._qZ1[index]._Hb2(_7i, _ms);
            break;
        case _0Q1:
            if (this._Qb2[_Bp | index]) this._Qb2[_Bp | index](_7i, _ms);
            else _L11 = false;
            break;
        case _7S1:
            _L11 = false;
            break;
        case _xM1:
            _L11 = false;
            break;
        case _ZP1:
            if (this.DrawEvent) this.DrawEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _2Q1:
            if (this._Rb2[_Bp | index]) this._Rb2[_Bp | index](_7i, _ms);
            else _L11 = false;
            break;
        case _4Q1:
            if (this._Sb2[_Bp | index]) this._Sb2[_Bp | index](_7i, _ms);
            else _L11 = false;
            break;
        case _6Q1:
            if (this.Triggers[_Bp | index]) {
                var _5c2 = this.Triggers[_Bp | index];
                var _Yb2 = _5c2._Jb2;
                var _9e = _Yb2.pFunc(_7i, _ms);
                if (_9e | _ps) {
                    _5c2._Hb2(_7i, _ms);
                }
            }
            break;
        case _aS1:
            if (this.DrawGUI) this.DrawGUI(_7i, _ms);
            else _L11 = false;
            break;
        case _cS1:
            if (this.DrawEventBegin) this.DrawEventBegin(_7i, _ms);
            else _L11 = false;
            break;
        case _dS1:
            if (this.DrawEventEnd) this.DrawEventEnd(_7i, _ms);
            else _L11 = false;
            break;
        case _eS1:
            if (this.DrawGUIBegin) this.DrawGUIBegin(_7i,
                _ms);
            else _L11 = false;
            break;
        case _fS1:
            if (this.DrawGUIEnd) this.DrawGUIEnd(_7i, _ms);
            else _L11 = false;
            break;
        case _gS1:
            if (this.DrawPre) this.DrawPre(_7i, _ms);
            else _L11 = false;
            break;
        case _hS1:
            if (this.DrawPost) this.DrawPost(_7i, _ms);
            else _L11 = false;
            break;
        case _bS1:
            if (this.DrawResize) this.DrawResize(_7i, _ms);
            else _L11 = false;
            break;
        case _DN1:
            if (this.StepBeginEvent) this.StepBeginEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _FN1:
            if (this.StepNormalEvent) this.StepNormalEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _HN1:
            if (this.StepEndEvent) this.StepEndEvent(_7i,
                _ms);
            else _L11 = false;
            break;
        case _wM1:
            if (this.OutsideEvent) this.OutsideEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _yM1:
            if (this.BoundaryEvent) this.BoundaryEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _DO1:
            if (this.StartGameEvent) this.StartGameEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _FO1:
            if (this.EndGameEvent) this.EndGameEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _HO1:
            if (this.StartRoomEvent) this.StartRoomEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _JO1:
            if (this.EndRoomEvent) this.EndRoomEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _he:
            if (this.NoLivesEvent) this.NoLivesEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _MO1:
            if (this.AnimationEndEvent) this.AnimationEndEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _7z1:
            if (this.EndOfPathEvent) this.EndOfPathEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _pe:
            if (this.NoHealthEvent) this.NoHealthEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _QO1:
            if (this.CloseButtonEvent) this.CloseButtonEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _EM1:
            if (this.OutsideView0Event) this.OutsideView0Event(_7i, _ms);
            else _L11 = false;
            break;
        case _TO1:
            if (this.OutsideView1Event) this.OutsideView1Event(_7i, _ms);
            else _L11 = false;
            break;
        case _VO1:
            if (this.OutsideView2Event) this.OutsideView2Event(_7i, _ms);
            else _L11 = false;
            break;
        case _XO1:
            if (this.OutsideView3Event) this.OutsideView3Event(_7i, _ms);
            else _L11 = false;
            break;
        case _ZO1:
            if (this.OutsideView4Event) this.OutsideView4Event(_7i, _ms);
            else _L11 = false;
            break;
        case _0P1:
            if (this.OutsideView5Event) this.OutsideView5Event(_7i, _ms);
            else _L11 = false;
            break;
        case _2P1:
            if (this.OutsideView6Event) this.OutsideView6Event(_7i,
                _ms);
            else _L11 = false;
            break;
        case _4P1:
            if (this.OutsideView7Event) this.OutsideView7Event(_7i, _ms);
            else _L11 = false;
            break;
        case _FM1:
            if (this.BoundaryView0Event) this.BoundaryView0Event(_7i, _ms);
            else _L11 = false;
            break;
        case _7P1:
            if (this.BoundaryView1Event) this.BoundaryView1Event(_7i, _ms);
            else _L11 = false;
            break;
        case _9P1:
            if (this.BoundaryView2Event) this.BoundaryView2Event(_7i, _ms);
            else _L11 = false;
            break;
        case _bP1:
            if (this.BoundaryView3Event) this.BoundaryView3Event(_7i, _ms);
            else _L11 = false;
            break;
        case _dP1:
            if (this.BoundaryView4Event) this.BoundaryView4Event(_7i,
                _ms);
            else _L11 = false;
            break;
        case _fP1:
            if (this.BoundaryView5Event) this.BoundaryView5Event(_7i, _ms);
            else _L11 = false;
            break;
        case _hP1:
            if (this.BoundaryView6Event) this.BoundaryView6Event(_7i, _ms);
            else _L11 = false;
            break;
        case _jP1:
            if (this.BoundaryView7Event) this.BoundaryView7Event(_7i, _ms);
            else _L11 = false;
            break;
        case _C2:
            if (this.AnimationUpdateEvent) this.AnimationUpdateEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _RP1:
            if (this.WebImageLoadedEvent) this.WebImageLoadedEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _TP1:
            if (this.WebSoundLoadedEvent) this.WebSoundLoadedEvent(_7i,
                _ms);
            else _L11 = false;
            break;
        case _8S1:
            if (this.WebAsyncEvent) this.WebAsyncEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _9S1:
            if (this.WebUserInteractionEvent) this.WebUserInteractionEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _fy:
            if (this.WebIAPEvent) this.WebIAPEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _4q:
            if (this.SocialEvent) this.SocialEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _kL1:
            if (this.PushNotificationEvent) this.PushNotificationEvent(_7i, _ms);
            else _L11 = false;
            break;
        case _CK:
            if (this.AsyncSaveLoadEvent) this.AsyncSaveLoadEvent(_7i,
                _ms);
            else _L11 = false;
            break;
        case _lL:
            if (this._Vb2) this._Vb2(_7i, _ms);
            else _L11 = false;
            break;
        case _AL:
            if (this._Wb2) this._Wb2(_7i, _ms);
            else _L11 = false;
            break;
        case _kP1:
            if (this.UserEvent0) this.UserEvent0(_7i, _ms);
            else _L11 = false;
            break;
        case _mP1:
            if (this.UserEvent1) this.UserEvent1(_7i, _ms);
            else _L11 = false;
            break;
        case _oP1:
            if (this.UserEvent2) this.UserEvent2(_7i, _ms);
            else _L11 = false;
            break;
        case _qP1:
            if (this.UserEvent3) this.UserEvent3(_7i, _ms);
            else _L11 = false;
            break;
        case _sP1:
            if (this.UserEvent4) this.UserEvent4(_7i, _ms);
            else _L11 = false;
            break;
        case _uP1:
            if (this.UserEvent5) this.UserEvent5(_7i, _ms);
            else _L11 = false;
            break;
        case _wP1:
            if (this.UserEvent6) this.UserEvent6(_7i, _ms);
            else _L11 = false;
            break;
        case _yP1:
            if (this.UserEvent7) this.UserEvent7(_7i, _ms);
            else _L11 = false;
            break;
        case _AP1:
            if (this.UserEvent8) this.UserEvent8(_7i, _ms);
            else _L11 = false;
            break;
        case _CP1:
            if (this.UserEvent9) this.UserEvent9(_7i, _ms);
            else _L11 = false;
            break;
        case _EP1:
            if (this.UserEvent10) this.UserEvent10(_7i, _ms);
            else _L11 = false;
            break;
        case _GP1:
            if (this.UserEvent11) this.UserEvent11(_7i,
                _ms);
            else _L11 = false;
            break;
        case _IP1:
            if (this.UserEvent12) this.UserEvent12(_7i, _ms);
            else _L11 = false;
            break;
        case _KP1:
            if (this.UserEvent13) this.UserEvent13(_7i, _ms);
            else _L11 = false;
            break;
        case _MP1:
            if (this.UserEvent14) this.UserEvent14(_7i, _ms);
            else _L11 = false;
            break;
        case _OP1:
            if (this.UserEvent15) this.UserEvent15(_7i, _ms);
            else _L11 = false;
            break;
        case _3N1:
            if (this.NoButtonPressed) this.NoButtonPressed(_7i, _ms);
            else _L11 = false;
            break;
        case _VM1:
            if (this.LeftButtonDown) this.LeftButtonDown(_7i, _ms);
            else _L11 = false;
            break;
        case _XM1:
            if (this.RightButtonDown) this.RightButtonDown(_7i,
                _ms);
            else _L11 = false;
            break;
        case _WM1:
            if (this.MiddleButtonDown) this.MiddleButtonDown(_7i, _ms);
            else _L11 = false;
            break;
        case _YM1:
            if (this.LeftButtonPressed) this.LeftButtonPressed(_7i, _ms);
            else _L11 = false;
            break;
        case __M1:
            if (this.RightButtonPressed) this.RightButtonPressed(_7i, _ms);
            else _L11 = false;
            break;
        case _ZM1:
            if (this.MiddleButtonPressed) this.MiddleButtonPressed(_7i, _ms);
            else _L11 = false;
            break;
        case _0N1:
            if (this.LeftButtonReleased) this.LeftButtonReleased(_7i, _ms);
            else _L11 = false;
            break;
        case _2N1:
            if (this.RightButtonReleased) this.RightButtonReleased(_7i,
                _ms);
            else _L11 = false;
            break;
        case _1N1:
            if (this.MiddleButtonReleased) this.MiddleButtonReleased(_7i, _ms);
            else _L11 = false;
            break;
        case _6N1:
            if (this.MouseWheelUp) this.MouseWheelUp(_7i, _ms);
            else _L11 = false;
            break;
        case _7N1:
            if (this.MouseWheelDown) this.MouseWheelDown(_7i, _ms);
            else _L11 = false;
            break;
        case _cN1:
            if (this.GlobalLeftButtonDown) this.GlobalLeftButtonDown(_7i, _ms);
            else _L11 = false;
            break;
        case _lO1:
            if (this.GlobalRightButtonDown) this.GlobalRightButtonDown(_7i, _ms);
            else _L11 = false;
            break;
        case _nO1:
            if (this.GlobalMiddleButtonDown) this.GlobalMiddleButtonDown(_7i,
                _ms);
            else _L11 = false;
            break;
        case _dN1:
            if (this.GlobalLeftButtonPressed) this.GlobalLeftButtonPressed(_7i, _ms);
            else _L11 = false;
            break;
        case _qO1:
            if (this.GlobalRightButtonPressed) this.GlobalRightButtonPressed(_7i, _ms);
            else _L11 = false;
            break;
        case _sO1:
            if (this.GlobalMiddleButtonPressed) this.GlobalMiddleButtonPressed(_7i, _ms);
            else _L11 = false;
            break;
        case _eN1:
            if (this.GlobalLeftButtonReleased) this.GlobalLeftButtonReleased(_7i, _ms);
            else _L11 = false;
            break;
        case _vO1:
            if (this.GlobalRightButtonReleased) this.GlobalRightButtonReleased(_7i,
                _ms);
            else _L11 = false;
            break;
        case _xO1:
            if (this.GlobalMiddleButtonReleased) this.GlobalMiddleButtonReleased(_7i, _ms);
            else _L11 = false;
            break;
        case _4N1:
            if (this.MouseEnter) this.MouseEnter(_7i, _ms);
            else _L11 = false;
            break;
        case _5N1:
            if (this.MouseLeave) this.MouseLeave(_7i, _ms);
            else _L11 = false;
            break;
        case _pN1:
            if (this._Pb2[0] != null) this._Pb2[0](_7i, _ms);
            else _L11 = false;
            break;
        case _qN1:
            if (this._Pb2[1] != null) this._Pb2[1](_7i, _ms);
            else _L11 = false;
            break;
        case _rN1:
            if (this._Pb2[2] != null) this._Pb2[2](_7i, _ms);
            else _L11 = false;
            break;
        case _sN1:
            if (this._Pb2[3] != null) this._Pb2[3](_7i, _ms);
            else _L11 = false;
            break;
        case _tN1:
            if (this._Pb2[4] != null) this._Pb2[4](_7i, _ms);
            else _L11 = false;
            break;
        case _uN1:
            if (this._Pb2[5] != null) this._Pb2[5](_7i, _ms);
            else _L11 = false;
            break;
        case _vN1:
            if (this._Pb2[6] != null) this._Pb2[6](_7i, _ms);
            else _L11 = false;
            break;
        case _wN1:
            if (this._Pb2[7] != null) this._Pb2[7](_7i, _ms);
            else _L11 = false;
            break;
        case _xN1:
            if (this._Pb2[8] != null) this._Pb2[8](_7i, _ms);
            else _L11 = false;
            break;
        case _yN1:
            if (this._Pb2[9] != null) this._Pb2[9](_7i, _ms);
            else _L11 = false;
            break;
        case _zN1:
            if (this._Pb2[10] != null) this._Pb2[10](_7i, _ms);
            else _L11 = false;
            break;
        case _AN1:
            if (this._Pb2[11] != null) this._Pb2[11](_7i, _ms);
            else _L11 = false;
            break;
        default:
            _L11 = false;
    }
    _cd = _4c2;
    _Ds = _1c2;
    _Es = _2c2;
    _KX1 = _3c2;
    return _L11;
};
_pz1.prototype._v82 = function(_bi) {
    this._8N1._1b(_bi);
    var _Wq = this;
    while (_Wq != null) {
        _Wq._Lr._1b(_bi);
        _Wq = _Wq._fo;
    }
};
_pz1.prototype._u82 = function(_bi) {
    this._8N1._y12(_bi);
    var _6c2 = this;
    while (_6c2 != null) {
        _6c2._Lr._y12(_bi);
        _6c2 = _6c2._fo;
    }
};
_pz1.prototype._7c2 = function(_Bp, _tb) {
    if (!this.Event[_Bp | _tb]) return;
    var _4c = this._Lr._4c;
    for (var i = 0; i < _4c.length; i++) {
        var _4p = _4c[i];
        this._B2(_Bp, _tb, _4p, _4p);
    }
};

function _MY1() {
    this._8c2 = [];
    this._wA1 = [];
    this.length = 0;
}
_MY1.prototype._fB = function() {
    return this._wA1;
};
_MY1.prototype._1b = function(_9c2) {
    this.length++;
    this._8c2[_9c2._6p] = _9c2;
    this._wA1[_9c2._gz] = _9c2;
};
_MY1.prototype._O3 = function(_Tb2) {
    return this._wA1[_Tb2];
};
_MY1.prototype._6z = function(_ha) {
    if (!this._wA1[_ha]) return false;
    else return true;
};
_MY1.prototype._ac2 = function(_Tb2) {
    var _Wq = this._wA1[_tb];
    if (!_Wq) {
        return "<undefined>";
    } else {
        return _Wq._6p;
    }
};
_MY1.prototype._bc2 = function(_a1) {
    var _Wq = this._8c2[_a1];
    if (_Wq != null) return _Wq._gz;
    return -1;
};
_MY1.prototype._3q = function(_Bp, _tb) {
    for (var _Xo = 0; _Xo < _2q._wA1.length; _Xo++) {
        var _Wq = _2q._wA1[_Xo];
        if (_Wq.Event[_Bp | _tb]) {
            _Wq._7c2(_Bp | _tb);
        }
    }
};
_MY1.prototype._AZ1 = function() {
    var _4c = this._wA1;
    for (var index = 0; index < _4c.length; index++) {
        var _Wq = _4c[index];
        _Wq._fo = _2q._O3(_Wq._ez);
        if (!_Wq._fo) _Wq._fo = null;
        for (var e = 0; e < _Wq.Event.length; e++) {
            var _7R1 = _Wq.Event[e];
            if (_7R1) {
                _Wq._vM1[e] = true;
            }
        }
    }
    for (var index = 0; index < _4c.length; index++) {
        var _l82 = _4c[index];
        var _Wq = _l82._fo;
        while (_Wq != null) {
            for (var e = 0; e < _Wq.Event.length; e++) {
                var _7R1 = _Wq.Event[e];
                if (_7R1) {
                    _l82._vM1[e] = true;
                }
            }
            _Wq = _Wq._fo;
        }
    }
};

function GetWithArray(_Tb2) {
    if (_Tb2 === _hz) {
        return _81._fB().slice(0);
    }
    var _Wq = _2q._O3(_Tb2);
    if (_Wq != null) {
        return _Wq._Lr._4c.slice(0);
    }
    var _4p = _ge._O3(_Tb2);
    if (_4p != null) {
        var _f3 = [];
        _f3[0] = _4p;
        return _f3;
    }
    return null;
}

function object_set_sprite(_F1, _73) {
    var _Wq = _2q._wA1[_F1];
    if (!_Wq) return;
    var _7p = _le._O3(_73);
    if (!_7p) return;
    _Wq._3z = _73;
}

function object_set_solid(_F1, _UB) {
    var _Wq = _2q._wA1[_F1];
    if (!_Wq) return;
    var _g3 = false;
    if (_UB > 0.5) _g3 = true;
    _Wq._OB = _g3;
}

function object_set_visible(_F1, _VB) {
    var _Wq = _2q._wA1[_F1];
    if (!_Wq) return;
    var _g3 = false;
    if (_VB > 0.5) _g3 = true;
    _Wq._PB = _g3;
}

function object_set_depth(_F1, _Uc) {
    var _Wq = _2q._wA1[_F1];
    if (!_Wq) return;
    _Wq._QB = _Uc;
}

function object_set_persistent(_F1, _WB) {
    var _Wq = _2q._wA1[_F1];
    if (!_Wq) return;
    var _g3 = false;
    if (_WB > 0.5) _g3 = true;
    _Wq._RB = _g3;
}

function object_set_mask(_F1, _73) {
    _Un("object_set_mask()");
}

function object_set_parent(_F1, _cc) {
    _Un("object_set_parent()");
}

function _Xc() {
    this._4c = [];
    this.length = 0;
    this._n4 = 0;
    this._cc2 = -1;
}
_Xc.prototype._O3 = function(_tb) {
    return this._4c[_tb];
};
_Xc.prototype._1b = function(_w12) {
    for (var i = 0; i < this._4c.length; i++) {
        if (_w12.depth < this._4c[i].depth) {
            this._4c.splice(i, 0, _w12);
            this._n4++;
            this.length = this._4c.length;
            return i;
        }
    }
    this._4c[this._4c.length] = _w12;
    this._n4++;
    this.length = this._4c.length;
    return this.length - 1;
};
_Xc.prototype._az = function(_w12) {
    if (this._cc2 < 0) {
        this._cc2 = this._4c.length;
    }
    this._4c[this._4c.length] = _w12;
    this._n4++;
    this.length = this._4c.length;
    return this.length - 1;
};
_Xc.prototype._Db2 = function(_w12) {
    var i = this._cc2;
    if (i < 0) return;
    var _Qb = [];
    while (i < this._4c.length) {
        _Qb[_Qb.length] = this._4c[i];
        i++;
    }
    this._4c.splice(this._cc2, this._4c.length - this._cc2);
    for (i = 0; i < _Qb.length; i++) {
        this._1b(_Qb[i]);
    }
    this._cc2 = -1;
};
_Xc.prototype._4d = function(_w12) {
    for (var i = 0; i < this._4c.length; i++) {
        if (_w12 == this._4c[i]) {
            this._4c.splice(i, 1);
            this._n4--;
            this.length = this._4c.length;
            return true;
        }
    }
    return false;
};
_Xc.prototype._U9 = function() {
    this._4c = [];
    this.length = this._n4 = 0;
};
_Xc.prototype._O3 = function(_tb) {
    return this._4c[_tb];
};
_Xc.prototype._Ya = function(_Za) {
    this._4c = _Za._4c.slice();
    this.length = _Za.length;
    this._n4 = _Za._n4;
    this._cc2 = _Za._cc2;
};
var _dc2 = 0,
    _ec2 = 1,
    _fc2 = 2,
    _lM1 = 3,
    _fM1 = 4,
    _gc2 = 5,
    _8M1 = 6,
    _hc2 = 7,
    _bM1 = 8,
    _hM1 = 9,
    _6M1 = 10,
    _ic2 = 11,
    _jc2 = 12,
    _nM1 = 13,
    _kc2 = 14,
    _lc2 = 0,
    _mc2 = 1,
    _nc2 = 2,
    _oc2 = 3,
    _pc2 = 4,
    _qc2 = 5,
    _6g = 0,
    _rc2 = 1,
    _sc2 = 2,
    _tc2 = 0,
    _uc2 = 1,
    _vc2 = 2,
    _wc2 = 3;

function _xc2() {
    this._JT = _yc2;
    this._U9 = _yc2;
    this._JT();
}

function _yc2() {
    this.__type = "[ParticleType]";
    this._Td = true;
    this._LF = -1;
    this._zc2 = true;
    this._Ac2 = false;
    this._Bc2 = false;
    this._jf = _dc2;
    this._Cc2 = 1.0;
    this._Dc2 = 1.0;
    this._Ec2 = 0.0;
    this._Fc2 = 0.0;
    this._NF = 1.0;
    this._OF = 1.0;
    this._Gc2 = 100;
    this._Hc2 = 100;
    this._Ic2 = 0;
    this._Jc2 = 0;
    this._Kc2 = 0;
    this._Lc2 = 0;
    this._Mc2 = 0.0;
    this._Nc2 = 0.0;
    this._Oc2 = 0.0;
    this._Pc2 = 0.0;
    this._Qc2 = 0.0;
    this._Rc2 = 0.0;
    this._Sc2 = 0.0;
    this._Tc2 = 0.0;
    this._Uc2 = 0.0;
    this._Vc2 = 0.0;
    this._Wc2 = 0.0;
    this._Xc2 = 0.0;
    this._Yc2 = 0.0;
    this._Zc2 = 0.0;
    this.__c2 = 270.0;
    this._0d2 = _lc2;
    this._1d2 = [];
    this._1d2[0] = _me;
    this._1d2[1] = _me;
    this._1d2[2] = _me;
    this._2d2 = 1.0;
    this._3d2 = 1.0;
    this._4d2 = 1.0;
    this._5d2 = false;
}

function _6d2() {
    this._U9 = _7d2;
    this._JT = _7d2;
    this._JT();
}

function _7d2() {
    this._Td = true;
    this._9g = 0;
    this._8d2 = 0;
    this._gB = 0.0;
    this._hB = 0.0;
    this._iB = 0.0;
    this._jB = 0.0;
    this._jf = _tc2;
    this._9d2 = _6g;
}

function _ad2() {
    this._bd2 = false;
    this._8d2 = 0;
    this._cd2 = 0;
    this._dd2 = 0;
    this.x = 0;
    this.y = 0;
    this.speed = 0;
    this._yB = 0;
    this._xF = 0;
    this._R4 = 0xffffff;
    this.alpha = 1.0;
    this.size = 0;
    this._ed2 = 0;
    this._fd2 = 0;
}

function _gd2() {
    this._U9 = _hd2;
    this._JT = _hd2;
    this._JT();
}

function _hd2() {
    this._Td = false;
    this._id2 = [];
    this._jd2 = [];
    this._kd2 = true;
    this.depth = 0.0;
    this._ld2 = 0.0;
    this._md2 = 0.0;
    this._nd2 = true;
    this._od2 = true;
}

function _Dd(_27) {
    var _d3 = _Oz();
    return _d3 * _27;
}

function _pd2(_qd2, _rd2, _sd2) {
    var _8j = _rd2 - _qd2;
    if (_8j <= 0) return _qd2;
    var _l3 = 0.0;
    var _8e = 0.0;
    switch (_sd2) {
        case _6g:
            _8e = _qd2 + _Dd(1) * _8j;
            break;
        case _rc2:
            {
                do {
                    _l3 = (_Dd(1) - 0.5) * 6.0;
                } while ((exp(-(_l3 * _l3) * 0.5) <= _Dd(1)));
                _8e = _qd2 + ((_l3 + 3.0) * (1.0 / 6.0)) * _8j;
            }
            break;
        case _sc2:
            {
                do {
                    _l3 = (_Dd(1) - 0.5) * 6.0;
                } while (!(exp(-(_l3 * _l3) * 0.5) > _Dd(1)));
                if (_l3 < 0.0) _l3 += 6.0;
                _8e = _qd2 + (_l3 * (1.0 / 6.0)) * _8j;
            }
            break;
        default:
            _8e = _qd2 + _Dd(1) * _8j;
    }
    return _8e;
}

function _td2(_Wa, _27) {
    var _yB;
    if (_Wa == 0) {
        if (_27 > 0) {
            _yB = 270;
        } else if (_27 < 0) {
            _yB = 90;
        } else {
            _yB = 0;
        }
    } else {
        var _Iv = 180.0 * (Math.atan2(_27, _Wa)) / Math.PI;
        if (_Iv <= 0) {
            _yB = -_Iv;
        } else {
            _yB = 360.0 - _Iv;
        }
    }
    return _yB - 360.0 * Math.floor(_yB / 360.0);
}

function _ud2(_wd, _vd2) {
    return _vd2 * Math.cos(_wd * Math.PI / 180.0);
}

function _wd2(_wd,
    _vd2) {
    return -_vd2 * Math.sin(_wd * Math.PI / 180.0);
}

function _xd2(_yd2) {
    _zd2 = _lX1[_yd2._8d2]; {
        if (_yd2._cd2 <= 0 || _yd2._dd2 <= 0) {
            switch (_zd2._0d2) {
                case _lc2:
                    _yd2._R4 = _zd2._1d2[0];
                    break;
                case _mc2:
                    _yd2._R4 = _zd2._1d2[0];
                    break;
                case _nc2:
                    _yd2._R4 = _zd2._1d2[0];
                    break;
                case _oc2:
                    {
                        var _d3 = ~~(_pd2(_zd2._1d2[0], _zd2._1d2[1], _6g));
                        var _Y4 = ~~(_pd2(_zd2._1d2[2], _zd2._1d2[3], _6g));
                        var _g3 = ~~(_pd2(_zd2._1d2[4], _zd2._1d2[5], _6g));
                        _yd2._R4 = (_d3 << 16) + (_Y4 << 8) + _g3;
                    }
                    break;
                case _pc2:
                    {
                        var h = ~~(_pd2(_zd2._1d2[0], _zd2._1d2[1], _6g));
                        var _Cb = ~~(_pd2(_zd2._1d2[2],
                            _zd2._1d2[3], _6g));
                        var _X1 = ~~(_pd2(_zd2._1d2[4], _zd2._1d2[5], _6g));
                        _yd2._R4 = 0xffffff;
                    }
                    break;
                case _qc2:
                    _yd2._R4 = _07(_ls(_zd2._1d2[0], _zd2._1d2[1], _Dd(1)));
                    break;
            }
        } else {
            switch (_zd2._0d2) {
                case _mc2:
                    {
                        var _y8 = _yd2._cd2 / _yd2._dd2;
                        if (_y8 > 1) _y8 = 1;
                        _yd2._R4 = _ls((_zd2._1d2[0]), (_zd2._1d2[1]), _y8);
                    }
                    break;
                case _nc2:
                    {
                        var _y8 = 2.0 * _yd2._cd2 / _yd2._dd2;
                        if (_y8 > 2) _y8 = 2;
                        if (_y8 < 1) {
                            _yd2._R4 = _ls(_zd2._1d2[0], _zd2._1d2[1], _y8);
                        } else {
                            _yd2._R4 = _ls(_zd2._1d2[1], _zd2._1d2[2], _y8 - 1);
                        }
                    }
                    break;
            }
        }
    }
}

function _nF(_h2, _i2, _Ad2) {
    var _8e = new _ad2;
    _Bd2 = _lX1[_Ad2];
    if (_Bd2 == null || _Bd2 == undefined) return null;
    _8e._bd2 = true;
    _8e._8d2 = _Ad2;
    _8e.x = _h2;
    _8e.y = _i2;
    _8e.speed = _pd2(_Bd2._Mc2, _Bd2._Nc2, 0);
    _8e._yB = _pd2(_Bd2._Qc2, _Bd2._Rc2, 0);
    _8e._xF = _pd2(_Bd2._Uc2, _Bd2._Vc2, 0);
    _8e._dd2 = _pd2(_Bd2._Gc2, _Bd2._Hc2, 0);
    _8e._cd2 = 0;
    _8e._R4 = 0xffffff;
    _xd2(_8e);
    _8e.alpha = _Bd2._2d2;
    _8e.size = _pd2(_Bd2._Cc2, _Bd2._Dc2, 0);
    _8e._5d2 = _Bd2._5d2;
    if (_Bd2._Bc2) {
        _8e._ed2 = _Dd(10000);
    } else {
        _8e._ed2 = 0;
    }
    _8e._fd2 = _Dd(100000);
    return _8e;
}

function _mf() {
    var _Q4 = _lX1.length;
    _lX1[_Q4] = new _xc2();
    return _Q4;
}

function _8C(_F1) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return false;
    _lX1[_F1] = null;
    return true;
}

function _aC(_F1) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return false;
    _lX1[_F1]._U9();
    return true;
}

function _Dd2() {
    _lX1 = [];
}

function _9C(_F1) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return false;
    return true;
}

function _of(_F1, _ef) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._jf = _ef;
    _Cd2._LF = -1;
}

function _sf(_F1, _5w, _24, _Ed2, _Fd2) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._LF = _5w;
    _Cd2._zc2 = _24;
    _Cd2._Ac2 = _Ed2;
    _Cd2._Bc2 = _Fd2;
}

function _pf(_F1, _Gd2, _Hd2, _Id2, _Jd2) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._Cc2 = _Gd2;
    _Cd2._Dc2 = _Hd2;
    _Cd2._Ec2 = _Id2;
    _Cd2._Fc2 = _Jd2;
}

function _bC(_F1, _Ie, _Je) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._NF = _Ie;
    _Cd2._OF = _Je;
}

function _Df(_F1, _Kd2, _Ld2) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._Gc2 = _Kd2;
    _Cd2._Hc2 = _Ld2;
}

function _Wf(_F1, _Md2, _Nd2) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._Jc2 = _Md2;
    _Cd2._Ic2 = _Nd2;
}

function _Xf(_F1, _Od2, _Pd2) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._Lc2 = _Od2;
    _Cd2._Kc2 = _Pd2;
}

function _Jf(_F1, _Qd2, _Rd2, _Sd2, _Td2) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._Mc2 = _Qd2;
    _Cd2._Nc2 = _Rd2;
    _Cd2._Oc2 = _Sd2;
    _Cd2._Pc2 = _Td2;
}

function _Kf(_F1, _Ud2, _Vd2, _Wd2, _Xd2) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._Qc2 = _Ud2;
    _Cd2._Rc2 = _Vd2;
    _Cd2._Sc2 = _Wd2;
    _Cd2._Tc2 = _Xd2;
}

function _jC(_F1, _Yd2, _Zd2, __d2, _0e2, _1e2) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._Uc2 = _Yd2;
    _Cd2._Vc2 = _Zd2;
    _Cd2._Wc2 = __d2;
    _Cd2._Xc2 = _0e2;
    _Cd2._Yc2 = _1e2;
}

function _Nf(_F1, _2e2, _3e2) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._Zc2 = _2e2;
    _Cd2.__c2 = _3e2;
}

function _fC(_F1, _4e2, _5e2, _6e2, _7e2, _8e2, _9e2) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._0d2 = _oc2;
    _Cd2._1d2[0] = _4e2;
    _Cd2._1d2[1] = _5e2;
    _Cd2._1d2[2] = _6e2;
    _Cd2._1d2[3] = _7e2;
    _Cd2._1d2[4] = _8e2;
    _Cd2._1d2[5] = _9e2;
}

function _xf(_F1, _cg, _Ne) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._0d2 = _qc2;
    _Cd2._1d2[0] = _07(_cg);
    _Cd2._1d2[1] = _07(_Ne);
}

function _gC(_F1, _ae2, _be2, _ce2, _de2, _ee2, _fe2) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._0d2 = _pc2;
    _Cd2._1d2[0] = _ae2;
    _Cd2._1d2[1] = _be2;
    _Cd2._1d2[2] = _ce2;
    _Cd2._1d2[3] = _de2;
    _Cd2._1d2[4] = _ee2;
    _Cd2._1d2[5] = _fe2;
}

function _dC(_F1, _ge2) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._0d2 = _lc2;
    _Cd2._1d2[0] = _07(_ge2);
}

function _qf(_F1, _ge2, _he2) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._0d2 = _mc2;
    _Cd2._1d2[0] = _07(_ge2);
    _Cd2._1d2[1] = _07(_he2);
}

function _eC(_F1, _ge2, _ie2, _he2) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._0d2 = (_b4 === null) ? _lc2 : _nc2;
    _Cd2._1d2[0] = _07(_ge2);
    _Cd2._1d2[1] = _07(_ie2);
    _Cd2._1d2[2] = _07(_he2);
}

function _hC(_F1, _je2) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._2d2 = _je2;
    _Cd2._3d2 = _je2;
    _Cd2._4d2 = _je2;
}

function _yf(_F1, _je2, _ke2) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._2d2 = _je2;
    _Cd2._3d2 = (_je2 + _ke2) / 2.0;
    _Cd2._4d2 = _ke2;
}

function _iC(_F1, _je2, _le2, _ke2) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._2d2 = _je2;
    _Cd2._3d2 = _le2;
    _Cd2._4d2 = _ke2;
}

function _cC(_F1, _me2) {
    var _Cd2 = _lX1[_F1];
    if (_Cd2 == null || _Cd2 == undefined) return;
    _Cd2._5d2 = _me2;
}

function _3g(_5M1) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return -1;
    var _Q4 = _ne2._jd2.length;
    _ne2._jd2[_Q4] = new _6d2();
    return _Q4;
}

function _7g(_5M1, _F1) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return false;
    var _oe2 = _ne2._jd2[_F1];
    if (_oe2 == null || _oe2 == undefined) return false;
    _ne2._jd2[_F1] = null;
    return true;
}

function _kC(_5M1) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return false;
    _ne2._jd2 = [];
    return true;
}

function _lC(_5M1, _F1) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return false;
    var _oe2 = _ne2._jd2[_F1];
    if (_oe2 == null || _oe2 == undefined) return false;
    return true;
}

function _mC(_5M1, _F1) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return false;
    var _oe2 = _ne2._jd2[_F1];
    if (_oe2 == null || _oe2 == undefined) return false;
    _oe2._JT();
}

function _5g(_5M1, _F1, _Zf, __f, _0g, _1g, _ef,
    _pe2) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return;
    var _oe2 = _ne2._jd2[_F1];
    if (_oe2 == null || _oe2 == undefined) return;
    _oe2._gB = _Zf;
    _oe2._hB = __f;
    _oe2._iB = _0g;
    _oe2._jB = _1g;
    _oe2._jf = _ef;
    _oe2._9d2 = _pe2;
}

function _ag(_5M1, _F1, _qe2, _Tr) {
    if (_Tr < 0) {
        var _Oz = _Dd(-_Tr) | 0;
        if (_Oz == 0) {
            _Tr = 1;
        } else {
            return;
        }
    }
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return;
    var _oe2 = _ne2._jd2[_F1];
    if (_oe2 == null || _oe2 == undefined) return;
    for (var i = 0; i <= _Tr - 1; i++) {
        var _l3, _n3;
        var _re2 = false;
        while (_re2 == false) {
            _l3 = _pd2(0.0, 1.0,
                _oe2._9d2);
            _n3 = _pd2(0.0, 1.0, _oe2._9d2);
            if ((_oe2._9d2 == _sc2) && (_oe2._jf != _wc2)) {
                if (_Dd() < 0.5) {
                    _l3 = _pd2(0.0, 1.0, 0);
                } else {
                    _n3 = _pd2(0.0, 1.0, 0);
                }
            }
            switch (_oe2._jf) {
                case _tc2:
                    _re2 = true;
                    break;
                case _uc2:
                    {
                        var _A5 = _l3 - 0.5;
                        var _B5 = _n3 - 0.5;
                        if ((_A5 * _A5 + _B5 * _B5) <= 0.25) _re2 = true;
                        break;
                    }
                case _vc2:
                    if ((Math.abs(_l3 - 0.5) + Math.abs(_n3 - 0.5)) <= 0.5) _re2 = true;
                    break;
                case _wc2:
                    _re2 = true;
                    break;
                default:
                    _re2 = true;
                    break;
            }
        }
        if (_oe2._jf == _wc2) {
            _5C(_5M1, _oe2._gB + (_oe2._hB - _oe2._gB) * _l3, _oe2._iB + (_oe2._jB - _oe2._iB) * _l3, _qe2, 1);
        } else {
            _5C(_5M1,
                _oe2._gB + (_oe2._hB - _oe2._gB) * _l3, _oe2._iB + (_oe2._jB - _oe2._iB) * _n3, _qe2, 1);
        }
    }
}

function _bg(_5M1, _F1, _qe2, _Tr) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return;
    var _oe2 = _ne2._jd2[_F1];
    if (_oe2 == null || _oe2 == undefined) return;
    _oe2._9g = _Tr;
    _oe2._8d2 = _qe2;
}

function _5C(_5M1, _h2, _i2, _Ad2, _Tr) {
    _Tr = ~~_Tr;
    _Ad2 = ~~_Ad2;
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return;
    var _Bd2 = _lX1[_Ad2];
    if (_Bd2 == null || _Bd2 == undefined) return false;
    for (var i = 0; i < _Tr; i++) {
        var index = _ne2._id2.length;
        _ne2._id2[index] = _nF(_h2,
            _i2, _Ad2);
    }
}

function _6C(_5M1, _h2, _i2, _Ad2, _e7, _Tr) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return;
    var _Bd2 = _lX1[_Ad2];
    if (_Bd2 == null || _Bd2 == undefined) return false;
    for (var i = 1; i <= _Tr; i++) {
        var index = _ne2._id2.length;
        _ne2._id2[index] = _nF(_h2, _i2, _Ad2);
        _ne2._id2[index]._R4 = _07(_e7);
    }
}

function _df(_5M1) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return false;
    _ne2._id2 = [];
    return true;
}

function _se2(_te2, _tb) {
    _ue2.splice(_tb, 1);
}

function _7C(_5M1) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return 0;
    return _ne2._id2.length;
}

function _9f() {
    var index = _mX1.length;
    _mX1[index] = new _gd2();
    _mX1[index]._U9();
    return index;
}

function _ZB(_5M1) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return false;
    return true;
}

function _cf(_5M1) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return;
    _mX1[_5M1] = null;
    return true;
}

function _ve2() {
    _mX1 = [];
}

function _af(_5M1) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return;
    _ne2._U9();
}

function _we2() {
    for (var _UU = 0; _UU < _mX1.length; _UU++) {
        if (!_mX1.hasOwnProperty(_UU)) continue;
        var _ne2 = _mX1[_UU];
        if (_ne2) {
            _ne2._id2 = [];
        }
    }
}

function __B(_5M1, _xe2) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return;
    _ne2._kd2 = _xe2;
}

function _bf(_5M1, _Uc) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return;
    _ne2.depth = _Uc;
}

function _0C(_5M1, _h2, _i2) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return;
    _ne2._ld2 = _h2;
    _ne2._md2 = _i2;
}

function _1C(_5M1, _ye2) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return;
    _ne2._nd2 = _ye2;
}

function _2C(_5M1, _ye2) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return;
    _ne2._od2 = _ye2;
}

function _ze2(_5M1) {
    var i = 0;
    var _93 = 0;
    var _Q4 = 0;
    var _ne2 = _mX1[_5M1];
    var _ue2 = _ne2._id2;
    i = 0;
    while (i < _ue2.length) {
        var _Ae2 = _ue2[i];
        var _Bd2 = _lX1[_Ae2._8d2];
        _Ae2._cd2++;
        if (_Ae2._cd2 >= _Ae2._dd2) {
            _93 = _Bd2._Lc2;
            if (_93 < 0) {
                if (_Dd(-_93) == 0) _93 = 1;
            }
            if (_93 > 0) {
                _5C(_5M1, _Ae2.x, _Ae2.y, _Bd2._Kc2, _93);
            }
            _ue2.splice(i, 1);
        } else {
            _93 = _Bd2._Jc2;
            if (_93 < 0) {
                if (_Dd(-_93) == 0) _93 = 1;
            }
            if (_93 > 0) {
                _5C(_5M1, _Ae2.x, _Ae2.y, _Bd2._Ic2, _93);
            }
            i++;
        }
    }
}

function _Be2(_5M1) {
    var i = 0;
    var _k3 = 0;
    var hspeed = 0.0;
    var vspeed = 0.0;
    var _Rs = 0.0;
    var _Z1 = 0.0;
    var _Ce2 = 0.0;
    var _6b1 = 0.0;
    var _De2 = 0.0;
    var _Ee2 = 0.0;
    var _Fe2 = 0.0;
    var _Ge2 = 0.0;
    var _He2 = 0.0;
    var _ne2 = _mX1[_5M1];
    var _ue2 = _ne2._id2;
    for (i = 0; i < _ue2.length; i++) {
        var _Ae2 = _ue2[i];
        var _Bd2 = _lX1[_Ae2._8d2];
        _Ae2.speed = _Ae2.speed + _Bd2._Oc2;
        if (_Ae2.speed < 0) _Ae2.speed = 0;
        _Ae2._yB = _Ae2._yB + _Bd2._Sc2;
        _Ae2._xF = _Ae2._xF + _Bd2._Wc2;
        _Ee2 = 0;
        _Fe2 = 0;
        if ((_Bd2._Zc2 != 0) || (_ne2._Ie2 > 0)) {
            hspeed = _ud2(_Ae2._yB, _Ae2.speed);
            vspeed = _wd2(_Ae2._yB, _Ae2.speed);
            if (_Bd2._Zc2 != 0) {
                _Rs = _ud2(_Bd2.__c2, _Bd2._Zc2);
                _Z1 = _wd2(_Bd2.__c2, _Bd2._Zc2);
                hspeed = hspeed + _Rs;
                vspeed = vspeed + _Z1;
            }
            _Ae2._yB = _td2(hspeed, vspeed);
            _Ae2.speed = Math.sqrt(hspeed * hspeed + vspeed * vspeed);
        }
        _Ge2 = ((_Ae2._cd2 + 3 * _Ae2._fd2) % 24) / 6.0;
        if (_Ge2 > 2.0) {
            _Ge2 = 4.0 - _Ge2;
        }
        _Ge2 = _Ge2 - 1.0;
        _He2 = ((_Ae2._cd2 + 4 * _Ae2._fd2) % 20) / 5.0;
        if (_He2 > 2.0) {
            _He2 = 4.0 - _He2;
        }
        _He2 = _He2 - 1.0;
        hspeed = _ud2(_Ae2._yB + _Ge2 * _Bd2._Tc2, _Ae2.speed + _He2 * _Bd2._Pc2);
        vspeed = _wd2(_Ae2._yB + _Ge2 * _Bd2._Tc2, _Ae2.speed + _He2 * _Bd2._Pc2);
        _Ae2.x = _Ae2.x + hspeed + _Ee2;
        _Ae2.y = _Ae2.y + vspeed + _Fe2;
    }
}

function _Je2(_5M1) {
    var _ne2 = _mX1[_5M1];
    var _ue2 = _ne2._id2;
    for (var i = 0; i < _ue2.length; i++) {
        var _Ae2 = _ue2[i];
        var _Bd2 = _lX1[_Ae2._8d2];
        _Ae2.size = _Ae2.size + _Bd2._Ec2;
        if (_Ae2.size < 0) {
            _Ae2.size = 0;
        }
        _xd2(_Ae2);
        var _Ke2;
        if (_Ae2._dd2 > 0) {
            _Ke2 = 2.0 * _Ae2._cd2 / _Ae2._dd2;
        } else {
            _Ke2 = 1;
        }
        if (_Ke2 < 1) {
            _Ae2.alpha = _Bd2._2d2 * (1.0 - _Ke2) + _Bd2._3d2 * _Ke2;
        } else {
            _Ae2.alpha = _Bd2._3d2 * (2.0 - _Ke2) + _Bd2._4d2 * (_Ke2 - 1);
        }
    }
}

function _3C(_5M1) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return 0;
    _ze2(_5M1);
    _Be2(_5M1);
    _Je2(_5M1);
    var _Le2 = _ne2._jd2;
    if (_Le2) {
        for (var i = 0; i < _Le2.length; i++) {
            if (_Le2[i] != null && _Le2[i]._9g != 0) {
                _ag(_5M1, i, _Le2[i]._8d2, _Le2[i]._9g);
            }
        }
    }
}

function _Me2() {
    for (var i = 0; i < _mX1.length; i++) {
        var _ne2 = _mX1[i];
        if (_ne2 != null) {
            if (_ne2._nd2) {
                _3C(i);
            }
        }
    }
}

function _Ne2(_yd2, _EC, _FC) {
    var _ke = null;
    var _O1 = null;
    if (_yd2._dd2 <= 0) return;
    var _Bd2 = _lX1[_yd2._8d2];
    _ke = _le._O3(_Bd2._LF);
    if (_ke == null) {
        var _jf = _Bd2._jf;
        if ((_jf >= 0) && (_jf < _kc2)) {
            _O1 = _kX1[_jf];
        } else {
            return;
        }
    }
    var _X2;
    if (_O1 != null) {} else {
        if (_ke._Vr <= 0) return;
        if (!_Bd2._zc2) {
            _X2 = _yd2._ed2;
        } else if (_Bd2._Ac2) {
            _X2 = _yd2._ed2 + (_ke._93 * _yd2._cd2 / _yd2._dd2);
        } else {
            _X2 = _yd2._ed2 + _yd2._cd2;
        }
    }
    var _d3 = ((_yd2._cd2 + 2 * _yd2._fd2) % 16) / 4.0;
    if (_d3 > 2.0) _d3 = 4.0 - _d3;
    _d3 = _d3 - 1.0;
    var _7c = _yd2._xF;
    if (_Bd2._Yc2) _7c = _7c + _yd2._yB;
    _7c = _7c + _d3 * _Bd2._Xc2;
    _d3 = ((_yd2._cd2 + _yd2._fd2) % 16) / 4.0;
    if (_d3 > 2.0) _d3 = 4.0 - _d3;
    _d3 = _d3 - 1.0;
    draw_set_blend_mode(_yd2._5d2 ? 1 : 0);
    var _Cb = _yd2.size + _d3 * _Bd2._Fc2;
    var c = _yd2._R4;
    if (_O1 != null) {
        var _NF, _OF, _xF;
        var _L52 = _Bd2._NF * _Cb;
        var _M52 = _Bd2._OF * _Cb;
        var _Oe2 = _7c;
        var _Pe2 = ~~(_yd2.x + _EC);
        var _Qe2 = ~~(_yd2.y + _FC);
        if (_L52 == 1 && _M52 == 1 && _Oe2 == 0 && _yd2._R4 == 0xffffff) {
            _ih(_O1, _Pe2, _Qe2, _yd2.alpha);
        } else {
            _ph(_O1, 0, 0, _Pe2, _Qe2, _L52, _M52, _Oe2 * 0.017453293, c, c, c, c, _yd2.alpha);
        }
    } else {
        _ke._L4(_X2, _yd2.x + _EC, _yd2.y + _FC, _lX1[_yd2._8d2]._NF * _Cb, _lX1[_yd2._8d2]._OF * _Cb, _7c, c, _yd2.alpha);
    }
}

function _4C(_5M1) {
    var _ne2 = _mX1[_5M1];
    if (_ne2 == null || _ne2 == undefined) return;
    var _ue2 = _ne2._id2;
    if (_ne2._kd2) {
        for (var i = 0; i < _ne2._id2.length; i++) {
            _Ne2(_ue2[i], _ne2._ld2, _ne2._md2);
        }
    } else {
        for (var i = _ne2._id2.length - 1; i >= 0; i--) {
            _Ne2(_ue2[i], _ne2._ld2, _ne2._md2);
        }
    }
    draw_set_blend_mode(0);
}

function _Re2(_Vz) {
    for (var i = 0; i < _mX1.length; i++) {
        var _ne2 = _mX1[i];
        if (_ne2 != null) {
            if (_ne2._od2) {
                if (Math.abs(_ne2.depth - _Vz) < 0.01) _4C(i);
            }
        }
    }
}

function _Se2() {
    var _8e = -1000000000;
    for (var i = 0; i < _mX1.length; i++) {
        var _ne2 = _mX1[i];
        if (_ne2 != null && _ne2._id2.length > 0) {
            if (_ne2._od2) {
                if (_ne2.depth > _8e) _8e = _ne2.depth;
            }
        }
    }
    return _8e;
}

function _Te2(_Vz) {
    var _8e = -1000000000;
    for (var i = 0; i < _mX1.length; i++) {
        var _ne2 = _mX1[i];
        if (_ne2 != null && _ne2._id2.length > 0) {
            if (_ne2._od2) {
                if ((_ne2.depth > _8e) && (_ne2.depth < _Vz)) _8e = _ne2.depth;
            }
        }
    }
    return _8e;
}
var _bB = 0,
    _Ue2 = 1;
var _Ve2 = 0;

function _We2(_h2,
    _i2, _yd) {
    this.x = _h2;
    this.y = _i2;
    this.speed = _yd;
    this._b3 = 0;
}

function _xC() {
    this.__type = "[Path]";
    this.name = "";
    this.id = _Ve2++;
    this.kind = 0;
    this.closed = 1;
    this.precision = 4;
    this._U9();
}
_xC.prototype._U9 = function() {
    this.points = [];
    this._Xe2 = [];
    this._n4 = 0;
    this._Ye2 = 0;
    this.length = 0;
};

function _Ze2(_tb) {
    if ((_tb < 0) || (_tb >= _n4)) {
        return _We2(0, 0, 0);
    }
    return this.points[_tb];
}
_xC.prototype._tC = function(_f2) {
    if ((_f2 < 0) || (_f2 > 1)) {
        this.kind = 0;
    } else {
        this.kind = _f2;
    }
    this.__e2();
};
_xC.prototype._vC = function(_f2) {
    this.closed = _f2;
    this.__e2();
};
_xC.prototype._wC = function(_f2) {
    if (_f2 < 0) _f2 = 0;
    if (_f2 > 8) _f2 = 8;
    this.precision = _f2;
    this.__e2();
};
_xC.prototype._0f2 = function() {
    var i = 0;
    this.length = 0;
    if (this._Ye2 <= 0) return;
    this._Xe2[0]._b3 = 0;
    for (i = 1; i < this._Ye2; i++) {
        this._Xe2[i]._b3 = this.length = this.length + sqrt(_Cl(this._Xe2[i].x - this._Xe2[i - 1].x) + _Cl(this._Xe2[i].y - this._Xe2[i - 1].y));
    }
};
_xC.prototype._1f2 = function(_OC, _PC, _2f2) {
    this._Ye2++;
    var _3f2 = new _We2();
    this._Xe2[this._Ye2 - 1] = _3f2;
    _3f2.x = _OC;
    _3f2.y = _PC;
    _3f2.speed = _2f2;
};
_xC.prototype._4f2 = function() {
    this._Ye2 = 0;
    if (this._n4 <= 0) return;
    for (var i = 0; i < this._n4; i++) {
        this._1f2(this.points[i].x, this.points[i].y, this.points[i].speed);
    }
    if (this.closed) {
        this._1f2(this.points[0].x, this.points[0].y, this.points[0].speed);
    }
};
_xC.prototype._5f2 = function(_Uc, _v3, _w3, _Hm, _S2, _T2, _Im, _Ki, _Li, _6f2) {
    if (_Uc == 0) return;
    var _B3 = (_v3 + _S2 + _S2 + _Ki) / 4.0;
    var _C3 = (_w3 + _T2 + _T2 + _Li) / 4.0;
    var _jm = (_Hm + _Im + _Im + _6f2) / 4.0;
    if (_Cl(_S2 - _v3) + _Cl(_T2 - _w3) > 16.0) {
        this._5f2(_Uc - 1, _v3, _w3, _Hm, (_S2 + _v3) / 2.0, (_T2 + _w3) / 2.0, (_Im + _Hm) / 2.0, _B3, _C3,
            _jm);
    }
    this._1f2(_B3, _C3, _jm);
    if (_Cl(_S2 - _Ki) + _Cl(_T2 - _Li) > 16.0) {
        this._5f2(_Uc - 1, _B3, _C3, _jm, (_Ki + _S2) / 2.0, (_Li + _T2) / 2.0, (_6f2 + _Im) / 2.0, _Ki, _Li, _6f2);
    }
};
_xC.prototype._7f2 = function() {
    var i = 0;
    var _X2 = 0;
    this._Ye2 = 0;
    if (this._n4 <= 0) return;
    if (!this.closed) {
        this._1f2(this.points[0].x, this.points[0].y, this.points[0].speed);
    }
    if (this.closed) {
        _X2 = this._n4 - 1;
    } else {
        _X2 = this._n4 - 3;
    }
    for (i = 0; i <= _X2; i++) {
        var _061 = this.points[i % this._n4];
        var _161 = this.points[(i + 1) % this._n4];
        var _8f2 = this.points[(i + 2) % this._n4];
        this._5f2(this.precision, (_061.x + _161.x) / 2.0, (_061.y + _161.y) / 2.0, (_061.speed + _161.speed) / 2.0, _161.x, _161.y, _161.speed, (_161.x + _8f2.x) / 2.0, (_161.y + _8f2.y) / 2.0, (_161.speed + _8f2.speed) / 2.0);
    }
    if (!this.closed) {
        this._1f2(this.points[this._n4 - 1].x, this.points[this._n4 - 1].y, this.points[this._n4 - 1].speed);
    } else {
        this._1f2(this._Xe2[0].x, this._Xe2[0].y, this._Xe2[0].speed);
    }
};
_xC.prototype.__e2 = function() {
    if (this.kind == 1) {
        this._7f2();
    } else {
        this._4f2();
    }
    this._0f2();
};

function _IZ1(_O12) {
    var _4B = new _xC();
    if ((_O12 != undefined) && (_O12 != null)) {
        if (_O12.precision != undefined) {
            _4B.precision = _O12.precision;
        }
        if (_O12.closed != undefined) {
            _4B.closed = _O12.closed;
        }
        if (_O12.kind != undefined) {
            _4B.kind = _O12.kind;
        }
        if (_O12.pName != undefined) {
            _4B.name = _O12.pName;
        }
        if (_O12.points != undefined) {
            _4B._n4 = _O12.points.length;
        }
        for (var _6d = 0; _6d < _O12.points.length; _6d++) {
            var _9f2 = _O12.points[_6d];
            var _af2 = new _We2(_9f2.x, _9f2.y, _9f2.speed);
            _4B.points[_4B.points.length] = _af2;
        }
        _4B.__e2();
    }
    return _4B;
}
var _bf2 = new _We2(0, 0, 100);
_xC.prototype._IC = function(_F1) {
    var _5c = 0;
    if (this._Ye2 <= 0) {
        _bf2.x = 0;
        _bf2.y = 0;
        _bf2.speed = 0;
        return _bf2;
    }
    if ((this._Ye2 == 1) || (this.length == 0) || (_F1 <= 0)) {
        return this._Xe2[0];
    }
    if (_F1 >= 1) {
        return this._Xe2[this._Ye2 - 1];
    }
    var _b3 = this.length * _F1;
    _5c = 0;
    while ((_5c < this._Ye2 - 2) && (_b3 >= this._Xe2[_5c + 1]._b3)) {
        _5c++;
    }
    var _3d = this._Xe2[_5c];
    _b3 = _b3 - _3d._b3;
    var w = this._Xe2[_5c + 1]._b3 - _3d._b3;
    if (w != 0) {
        _5c++;
        _bf2.x = _3d.x + _b3 * (this._Xe2[_5c].x - _3d.x) / w;
        _bf2.y = _3d.y + _b3 * (this._Xe2[_5c].y - _3d.y) / w;
        _bf2.speed = _3d.speed + _b3 * (this._Xe2[_5c].speed - _3d.speed) / w;
        _3d = _bf2;
    }
    return _3d;
};
_xC.prototype._qC = function(_F1) {
    _6d = this._IC(_F1);
    return _6d.x;
};
_xC.prototype._rC = function(_F1) {
    _6d = this._IC(_F1);
    return _6d.y;
};
_xC.prototype._sC = function(_F1) {
    _6d = this._IC(_F1);
    return _6d.speed;
};
_xC.prototype._Zy = function(_cf2) {
    this.points = null;
    this._Xe2 = null;
    this.name = _cf2.name;
    this._n4 = _cf2._n4;
    this.kind = _cf2.kind;
    this.closed = _cf2.closed;
    this.precision = _cf2.precision;
    this._Ye2 = _cf2._Ye2;
    this.length = _cf2.length;
    this.points = [];
    var _df2;
    var _ef2 = _cf2.points;
    var _Zv = this.points;
    for (var _6d = 0; _6d < _ef2.length; _6d++) {
        _9f2 = _ef2[_6d];
        _df2 = new _We2(_9f2.x,
            _9f2.y, _9f2.speed);
        _df2._b3 = _9f2._b3;
        _Zv[_Zv.length] = _df2;
    }
    this._Xe2 = [];
    var _ff2 = _cf2._Xe2;
    var _Zv = this._Xe2;
    for (var _6d = 0; _6d < _ff2.length; _6d++) {
        _9f2 = _ff2[_6d];
        _df2 = new _We2(_9f2.x, _9f2.y, _9f2.speed);
        _df2._b3 = _9f2._b3;
        _Zv[_Zv.length] = _df2;
    }
};
_xC.prototype._JC = function(_EC, _FC) {
    for (var i = 0; i <= this._n4 - 1; i++) {
        this.points[i].x += _EC;
        this.points[i].y += _FC;
    }
    this.__e2();
};
_xC.prototype._gf2 = function() {
    var _gB = 100000000;
    var _hB = -100000000;
    var _iB = 100000000;
    var _jB = -100000000;
    for (var i = 0; i <= this._n4 - 1; i++) {
        if (this.points[i].x < _gB) _gB = this.points[i].x;
        if (this.points[i].x > _hB) _hB = this.points[i].x;
        if (this.points[i].y < _iB) _iB = this.points[i].y;
        if (this.points[i].y > _jB) _jB = this.points[i].y;
    }
    return new _We2((_gB + _hB) / 2.0, (_iB + _jB) / 2.0, 0);
};
_xC.prototype._dB = function() {
    if (this._n4 <= 1) return;
    var _hf2 = [];
    for (var i = this._n4 - 1; i >= 0; i--) {
        _hf2[_hf2.length] = this.points[i];
    }
    this.points = _hf2;
    this.__e2();
};
_xC.prototype._NC = function() {
    var _if2 = this._gf2();
    this._JC(-_if2.x, -_if2.y);
    for (var i = 0; i <= this._n4 - 1; i++) {
        this.points[i].x = -this.points[i].x;
    }
    this._JC(_if2.x, _if2.y);
    this.__e2();
};
_xC.prototype._MC = function() {
    var _if2 = this._gf2();
    this._JC(-_if2.x, -_if2.y);
    for (var i = 0; i <= this._n4 - 1; i++) {
        this.points[i].y = -this.points[i].y;
    }
    this._JC(_if2.x, _if2.y);
    this.__e2();
};
_xC.prototype._LC = function(_l2) {
    var _if2 = this._gf2();
    this._JC(-_if2.x, -_if2.y);
    for (var i = 0; i <= this._n4 - 1; i++) {
        var _l3 = this.points[i].x;
        var _n3 = this.points[i].y;
        var _jf2 = _l2 * Math.PI / 180.0;
        this.points[i].x = _l3 * Math.cos(_jf2) + _n3 * Math.sin(_jf2);
        this.points[i].y = _n3 * Math.cos(_jf2) - _l3 * Math.sin(_jf2);
    }
    this._JC(_if2.x,
        _if2.y);
    this.__e2();
};
_xC.prototype._KC = function(_Ie, _Je) {
    var _if2 = this._gf2();
    this._JC(-_if2.x, -_if2.y);
    for (var i = 0; i <= this._n4 - 1; i++) {
        this.points[i].x = this.points[i].x * _Ie;
        this.points[i].y = this.points[i].y * _Je;
    }
    this._JC(_if2.x, _if2.y);
    this.__e2();
};
_xC.prototype._QC = function(_F1, _OC, _PC, _2f2) {
    if (_F1 < 0 || _F1 >= this._n4) return;
    this.points[_F1].x = _OC;
    this.points[_F1].y = _PC;
    this.points[_F1].speed = _2f2;
    this.__e2();
};
_xC.prototype._TC = function(_F1) {
    if (_F1 < 0 || _F1 >= this._n4) return;
    this.points.splice(_F1, 1);
    this._n4--;
    this.__e2();
};
_xC.prototype._RC = function(_cf2) {
    if (_cf2._n4 == 0) return;
    for (var i = 0; i <= _cf2._n4 - 1; i++) {
        this.points[this.points.length] = _cf2.points[i];
        this._n4++;
    }
    this.__e2();
};
_xC.prototype._SC = function(_F1, _OC, _PC, _2f2) {
    if (_F1 < 0 || _F1 > this._n4) return;
    this._n4++;
    _9f2 = new _We2(_OC, _PC, _2f2);
    this.points.splice(_F1, 0, _9f2);
    this.__e2();
};
_xC.prototype._cB = function(_OC, _PC, _2f2) {
    _9f2 = new _We2(_OC, _PC, _2f2);
    if (!this.points) this.points = [];
    this.points[this.points.length] = _9f2;
    this._n4++;
    this.__e2();
};

function _SY1() {
    this.Paths = [];
    _Ve2 = 0;
}
_SY1.prototype._1b = function(_cf2) {
    this.Paths[_cf2.id] = _cf2;
};
_SY1.prototype._4d = function(_cf2) {
    this.Paths[_cf2.id] = undefined;
};

function _kf2(_Uc) {
    this.depth = _Uc;
    this.visible = true;
    this._lf2 = new _Nb();
}
_kf2.prototype._1b = function(_mf2) {
    this._lf2._1b(_mf2);
};
_kf2.prototype._4d = function(_mf2) {
    this._lf2._y12(_mf2);
};
_kf2.prototype._L4 = function(_i62) {
    if (!this.visible) {
        return;
    }
    var _4c = this._lf2._4c;
    for (var index = 0; index < _4c.length; index++) {
        var _4O = _4c[index];
        if (_4O != null) {
            var _Ki1 = _4O.x + (_4O._NF * _4O.w),
                _nf2 = _4O.y + (_4O._OF * _4O.h);
            var _03 = (_4O.x < _Ki1) ? _4O.x : _Ki1,
                _23 = (_4O.x > _Ki1) ? _4O.x : _Ki1,
                _13 = (_4O.y < _nf2) ? _4O.y : _nf2,
                _33 = (_4O.y > _nf2) ? _4O.y : _nf2;
            if ((_03 <= _i62._L2) && (_13 <= _i62.bottom) && (_23 >= _i62.left) && (_33 >= _i62.top)) {
                _4O._L4();
            }
        }
    }
};
_kf2.prototype._fB = function() {
    return this._lf2._4c;
};

function _of2() {
    this._pf2 = new _Xc();
    this._qf2 = -1;
}
_of2.prototype._O3 = function(_Uc) {
    var _fO;
    for (var index = 0; index < this._pf2._n4; index++) {
        _fO = this._pf2._O3(index);
        if (_fO.depth == _Uc) return _fO;
    }
    return null;
};
_of2.prototype._4d = function(_Uc) {
    var _fO = this._O3(_Uc);
    if (_fO) {
        this._pf2._4d(_fO);
    }
};
_of2.prototype._1b = function(_mf2) {
    var _fO;
    _fO = this._O3(_mf2.depth);
    if (!_fO) {
        _fO = new _kf2(_mf2.depth);
        this._pf2._1b(_fO);
    }
    _fO._1b(_mf2);
};
_of2.prototype._8O = function(_mf2) {
    _fO = this._O3(_mf2.depth);
    if (_fO) {
        _fO._4d(_mf2);
    }
};
_of2.prototype._rf2 = function() {
    this._qf2 = this._pf2.length - 1;
    return this._pf2._O3(this._qf2);
};
_of2.prototype._Q31 = function() {
    this._qf2--;
    if (this._qf2 < 0) return null;
    return this._pf2._O3(this._qf2);
};
_of2.prototype._dO = function(_Uc, _VB) {
    var _fO = this._O3(_Uc);
    if (_fO) _fO.visible = (_VB >= 0.5);
};

function _6B() {
    this._7d = [];
    this.offset = 0;
    this._9B = _6B.prototype._sf2;
    this._7B = _6B.prototype._tf2;
};
_6B.prototype._LR = function() {
    return (this._7d.length - this.offset);
};
_6B.prototype._8B = function(_YM) {
    return ((this._7d.length - this.offset) >= _YM);
};
_6B.prototype._uf2 = function() {
    return (this._7d.length == 0);
};
_6B.prototype._tf2 = function(_kK1) {
    this._7d.push(_kK1);
};
_6B.prototype._sf2 = function() {
    if (this._uf2()) return undefined;
    var _jc = this._7d[this.offset];
    if ((++this.offset * 2) >= this._7d.length) {
        this._7d = this._7d.slice(this.offset);
        this.offset = 0;
    }
    return _jc;
};
_6B.prototype._vf2 = function() {
    if (this._7d.length > 0) {
        return this._7d[this.offset];
    } else {
        return undefined;
    }
};

function _WG() {
    this.id = _CX1++;
    this._lI();
}
_WG.prototype._lI = function() {
    this.__type = "[Room]";
    this._wf2 = "";
    this._uG = "";
    this._xf2 = 30;
    this._rG = 1024;
    this._tG = 768;
    this._yf2 = false;
    this._zf2 = false;
    this._342 = 0xc0c0c0;
    this._P42 = true;
    this._Af2 = true;
    this._Bf2 = true;
    this._Cf2 = [];
    for (var _f3 = 0; _f3 < _6X1; _f3++) {
        this._Cf2[_f3] = null;
    }
    this._4a = false;
    this._vG = null;
    this._Oy = new _Xc();
    this._8z = new _Nb();
    this._8z._Ob = true;
    this._r82 = [];
    this._iO = 0;
    this._9O = [];
    this._cO = new _of2();
    this._6a = [];
    this._Df2 = [];
    this._sG = null;
    this._qG = "Room";
    this._ZC = null;
};
_WG.prototype._Ef2 = function() {
    return this._4a;
};
_WG.prototype._mB = function() {
    return this._rG;
};
_WG.prototype._nB = function() {
    return this._tG;
};
_WG.prototype._91 = function() {
    return this._xf2;
};
_WG.prototype._Ff2 = function() {
    return this._qG;
};
_WG.prototype._Gf2 = function() {
    return this._uG;
};
_WG.prototype._Hf2 = function() {
    return this._yf2;
};
_WG.prototype._fB = function() {
    return this._Oy._4c;
};
_WG.prototype._752 = function(_f2) {
    this._rG = _f2;
    g_pBuiltIn.room_width = _f2;
};
_WG.prototype._852 = function(_f2) {
    this._tG = _f2;
    g_pBuiltIn.room_height = _f2;
};
_WG.prototype._552 = function(_f2) {
    this._xf2 = _f2;
    g_pBuiltIn.room_speed = _f2;
};
_WG.prototype._If2 = function(_a1) {
    this._qG = _a1;
};
_WG.prototype._652 = function(_5s) {
    this._uG = _5s;
    g_pBuiltIn.room_caption = _5s;
};
_WG.prototype._952 = function(_f2) {
    this._yf2 = _f2;
    g_pBuiltIn.room_persistent = _f2;
};
_WG.prototype._XG = function() {
    this._sG = {
        pName: "room_empty_" + this.id,
        width: 640,
        height: 480,
        backgrounds: [{}, {}, {}, {}, {}, {}, {}, {}],
        views: [{}, {}, {}, {}, {}, {}, {}, {}],
        pInstances: [],
        tiles: []
    };
    this._CZ1(this._sG);
};
_WG.prototype._Jf2 = function(_O12) {
    if (_O12 != null) {
        this._sG.width = _O12.width;
        this._sG.height = _O12.height;
        this._sG.colour = _O12.colour;
        this._sG.showColour = _O12.showColour;
        this._sG.enableViews = _O12.enableViews;
        this._sG.viewClearScreen = _O12.viewClearScreen;
        this._sG.pCaption = _O12.pCaption;
        this._sG.speed = _O12.speed;
        this._sG.persistent = _O12.persistent;
        for (var i = 0; i < _O12.backgrounds.length; i++) {
            var _Kf2 = _O12.backgrounds[i];
            if (_Kf2 != null) {
                this._sG.backgrounds[i] = {
                    visible: _Kf2.visible,
                    index: _Kf2.index,
                    vspeed: _Kf2.vspeed,
                    hspeed: _Kf2.hspeed,
                    foreground: _Kf2.foreground,
                    x: _Kf2.x,
                    y: _Kf2.y,
                    htiled: _Kf2.htiled,
                    vtiled: _Kf2.vtiled,
                    hspeed: _Kf2.hspeed,
                    vspeed: _Kf2.vspeed,
                    stretch: _Kf2.stretch,
                    alpha: _Kf2.alpha,
                    _aO: _Kf2._aO
                };
            }
        }
        for (var i = 0; i < _O12.views.length; i++) {
            var _Lf2 = _O12.views[i];
            if (_Lf2) {
                this._sG.views[i] = {
                    visible: _Lf2.visible,
                    xview: _Lf2.xview,
                    yview: _Lf2.yview,
                    wview: _Lf2.wview,
                    hview: _Lf2.hview,
                    xport: _Lf2.xport,
                    yport: _Lf2.yport,
                    wport: _Lf2.wport,
                    hport: _Lf2.hport,
                    hborder: _Lf2.hborder,
                    vborder: _Lf2.vborder,
                    hspeed: _Lf2.hspeed,
                    vspeed: _Lf2.vspeed,
                    index: _Lf2.index
                };
            }
        }
        this._sG.pInstances = new Array(_O12.pInstances.length);
        for (var i = 0; i < _O12.pInstances.length; i++) {
            var _Mf2 = _O12.pInstances[i];
            if (_Mf2) {
                this._sG.pInstances[i] = {
                    x: _Mf2.x,
                    y: _Mf2.y,
                    index: _Mf2.index,
                    id: _Mf2.id,
                    rotation: _Mf2.image_angle,
                    scaleX: _Mf2.scaleX,
                    scaleY: _Mf2.scaleY,
                    colour: _Mf2.image_blend
                };
            }
        }
        this._sG.tiles = new Array(_O12.pInstances.length);
        for (var i = 0; i < _O12.tiles.length; i++) {
            var _Nf2 = _O12.tiles[i];
            if (_Nf2 != null) {
                this._sG.tiles[i] = {
                    x: _Nf2.x,
                    y: _Nf2.y,
                    index: _Nf2.index,
                    xo: _Nf2.xo,
                    yo: _Nf2.yo,
                    w: _Nf2.w,
                    h: _Nf2.h,
                    depth: _Nf2.depth,
                    id: _Nf2.id
                };
            }
        }
    }
};
_WG.prototype._CZ1 = function(_Of2) {
    this._lI();
    this._sG = _Of2;
    if (_Of2.pName != undefined) this._If2(_Of2.pName);
    if (_Of2.pCaption != undefined) this._652(_Of2.pCaption);
    if (_Of2.width != undefined) this._752(_Of2.width);
    if (_Of2.height != undefined) this._852(_Of2.height);
    if (_Of2.speed != undefined) this._552(_Of2.speed);
    if (_Of2.persistent != undefined) this._952(_Of2.persistent);
    if (_Of2.colour != undefined) this._342 = _Of2.colour;
    if (_Of2.showColour != undefined) this._P42 = _Of2.showColour;
    if (_Of2.enableViews != undefined) this._4a = _Of2.enableViews;
    if (_Of2.viewClearScreen != undefined) this._Af2 = _Of2.viewClearScreen;
    if (_Of2._Pf2 != undefined) this._Bf2 = _Of2._Pf2;
    this._752(this._rG);
    this._852(this._tG);
    this._552(this._xf2);
    this._652(this._uG);
    this._952(this._yf2);
    this._6a = [];
    this._iO = 0;
    for (var index = 0; index < _Of2.tiles.length; index++) {
        var _Qf2 = _Of2.tiles[index];
        if (_Qf2 != null) {
            var _4O = _Rf2(_Qf2);
            this._cO._1b(_4O);
            this._9O[_4O.id] = _4O;
            this._iO++;
        }
    }
    if (_Of2.pCode != undefined) this._vG = _Of2.pCode;
    for (var _X1 = 0; _X1 < _Of2.views.length; _X1++) {
        this._6a[_X1] = _Sf2(_Of2.views[_X1]);
    }
};
_WG.prototype._Tf2 = function() {
    if (this._sG.physicsWorld) {
        this._ZC = new _1D(this._sG.physicsPixToMeters, this._91());
        this._ZC._6D(this._sG.physicsGravityX, this._sG.physicsGravityY);
    }
};
_WG.prototype._Uf2 = function() {
    var i;
    var _Vf2 = 0;
    var _Wf2 = [];
    for (i = this._Oy.length - 1; i >= 0; i--) {
        this._Xf2(this._Oy._O3(0));
    }
    for (i = this._8z.length - 1; i >= 0; i--) {
        this._Xf2(this._8z._O3(0));
    }
};
_WG.prototype._0H = function() {
    this._sG.pInstances = [];
};
_WG.prototype._Yf2 = function() {
    var i, w, h;
    if (_81._Ef2()) {} else {
        w = _81._mB();
        h = _81._nB();
    }
    if (w > _b62()) w = _b62();
    if (h > _c62()) h = _c62();
};
_WG.prototype._Rd = function(_h2, _i2, _Od) {
    return this._v82(_h2, _i2, _Xy++, _Od, true);
};
_WG.prototype._v82 = function(_h2, _i2, _ha, _Sy, _Zf2, __f2,
    _rv1, _Z6) {
    var _0g2 = _Zf2;
    if (_0g2 != true && _0g2 != false) {
        _0g2 = true;
    } else {
        _Zf2 = undefined;
    }
    var _1g2 = new _Wy(_h2, _i2, _ha, _Sy, _0g2);
    this._Oy._az(_1g2);
    _ge._1b(_1g2);
    if (_Zf2 != undefined) _1g2.image_xscale = _Zf2;
    if (__f2 != undefined) _1g2.image_yscale = __f2;
    if (_rv1 != undefined) _1g2.image_angle = _rv1;
    if (_Z6 != undefined) _1g2.image_blend = _Z6;
    _1g2._x82();
    return _1g2;
};
_WG.prototype.__y = function(_7i) {
    this._Oy._az(_7i);
    _ge._1b(_7i);
};
_WG.prototype._2g2 = function() {
    var index = 0;
    for (var i = 0; i < this._6a.length; i++) {
        _7a = this._6a[i];
        g_pBuiltIn.view_visible[index] = _7a.visible;
        g_pBuiltIn.view_xview[index] = _7a._OG;
        g_pBuiltIn.view_yview[index] = _7a._PG;
        g_pBuiltIn.view_wview[index] = _7a._QG;
        g_pBuiltIn.view_hview[index] = _7a._RG;
        g_pBuiltIn.view_xport[index] = _7a._SG;
        g_pBuiltIn.view_yport[index] = _7a._TG;
        g_pBuiltIn.view_wport[index] = _7a._UG;
        g_pBuiltIn.view_hport[index] = _7a._VG;
        g_pBuiltIn.view_angle[index] = _7a._E4;
        g_pBuiltIn.view_hborder[index] = _7a.hborder;
        g_pBuiltIn.view_vborder[index] = _7a.vborder;
        g_pBuiltIn.view_hspeed[index] = _7a.hspeed;
        g_pBuiltIn.view_vspeed[index] = _7a.vspeed;
        g_pBuiltIn.view_object[index] = _7a._Pd;
        g_pBuiltIn.view_surface_id[index] = _7a._3g2;
        index++;
    }
};
_WG.prototype._4g2 = function() {
    var index = 0;
    for (var i = 0; i < this._6a.length; i++) {
        _7a = this._6a[i];
        _7a.visible = g_pBuiltIn.view_visible[index];
        _7a._OG = g_pBuiltIn.view_xview[index];
        _7a._PG = g_pBuiltIn.view_yview[index];
        _7a._QG = g_pBuiltIn.view_wview[index];
        _7a._RG = g_pBuiltIn.view_hview[index];
        _7a._SG = g_pBuiltIn.view_xport[index];
        _7a._TG = g_pBuiltIn.view_yport[index];
        _7a._UG = g_pBuiltIn.view_wport[index];
        _7a._VG = g_pBuiltIn.view_hport[index];
        _7a._E4 = g_pBuiltIn.view_angle[index];
        _7a.hborder = g_pBuiltIn.view_hborder[index];
        _7a.vborder = g_pBuiltIn.view_vborder[index];
        _7a.hspeed = g_pBuiltIn.view_hspeed[index];
        _7a.vspeed = g_pBuiltIn.view_vspeed[index];
        _7a._Pd = g_pBuiltIn.view_object[index];
        _7a._3g2 = g_pBuiltIn.view_surface_id[index];
        index++;
    }
};
_WG.prototype._5g2 = function() {
    for (var i = 0; i < _Ee._De.length; i++) {
        var _Wg = _Ee._O3(i);
        _Wg.hspeed = g_pBuiltIn.background_hspeed[i];
        _Wg.vspeed = g_pBuiltIn.background_vspeed[i];
        _Wg.x = g_pBuiltIn.background_x[i];
        _Wg.y = g_pBuiltIn.background_y[i];
        _Wg.x += _Wg.hspeed;
        _Wg.y += _Wg.vspeed;
        g_pBuiltIn.background_x[i] = _Wg.x;
        g_pBuiltIn.background_y[i] = _Wg.y;
    }
};
_WG.prototype._6g2 = function() {
    var i;
    var _b3, _f3, _gb, _7g2;
    var _7a;
    var _4p;
    if (!this._4a) return;
    this._4g2();
    for (i = 0; i < this._6a.length; i++) {
        _7a = this._6a[i];
        if ((_7a.visible) && (_7a._Pd >= 0)) {
            _4p = null;
            if (_7a._Pd < 100000) {
                var _Wq = _2q._O3(_7a._Pd);
                if (_Wq != null) {
                    var _4c = _Wq._LD();
                    for (var _Xo = 0; _Xo < _4c.length; _Xo++) {
                        _4p = _4c[_Xo];
                        if (!_4p.marked) break;
                        _4p = null;
                    }
                }
            } else {
                _4p = _ge._O3(_7a._Pd);
                if (!_4p && _4p.marked) _4p = null;
            }
            if (_4p != null) {
                _b3 = _7a._OG;
                _f3 = _7a._PG;
                _gb = _4p.x;
                _7g2 = _4p.y;
                if (2 * _7a.hborder >= _7a._QG) {
                    _b3 = _gb - _7a._QG / 2;
                } else if (_gb - _7a.hborder < _7a._OG) {
                    _b3 = _gb - _7a.hborder;
                } else if (_gb + _7a.hborder > _7a._OG + _7a._QG) {
                    _b3 = _gb + _7a.hborder - _7a._QG;
                }
                if (2 * _7a.vborder >= _7a._RG) {
                    _f3 = _7g2 - _7a._RG / 2;
                } else if (_7g2 - _7a.vborder < _7a._PG) {
                    _f3 = _7g2 - _7a.vborder;
                } else if (_7g2 + _7a.vborder > _7a._PG + _7a._RG) {
                    _f3 = _7g2 + _7a.vborder - _7a._RG;
                }
                if (_b3 < 0) _b3 = 0;
                if (_b3 + _7a._QG > this._rG) _b3 = this._rG - _7a._QG;
                if (_f3 < 0) _f3 = 0;
                if (_f3 + _7a._RG > this._tG) _f3 = this._tG - _7a._RG;
                if (_7a.hspeed >= 0) {
                    if ((_b3 < _7a._OG) && (_7a._OG - _b3 > _7a.hspeed)) _b3 = _7a._OG - _7a.hspeed;
                    if ((_b3 > _7a._OG) && (_b3 - _7a._OG > _7a.hspeed)) _b3 = _7a._OG + _7a.hspeed;
                }
                if (_7a.vspeed >= 0) {
                    if ((_f3 < _7a._PG) && (_7a._PG - _f3 > _7a.vspeed)) _f3 = _7a._PG - _7a.vspeed;
                    if ((_f3 > _7a._PG) && (_f3 - _7a._PG > _7a.vspeed)) _f3 = _7a._PG + _7a.vspeed;
                }
                _7a._OG = _b3;
                _7a._PG = _f3;
            }
        }
    }
    this._2g2();
};
var _8g2 = false;
_WG.prototype._9g2 = function(_i62) {
    var _fO = this._cO._rf2();
    var _ag2 = _fO.depth;
    for (var i = this._Oy.length - 1; i >= 0; i--) {
        var _4p = this._Oy._O3(i);
        if (_4p.marked || _4p.visible == 0) continue;
        while (_ag2 > _4p.depth) {
            _fO._L4(_i62);
            _fO = this._cO._Q31();
            if (_fO) {
                _ag2 = _fO.depth;
            } else {
                _ag2 = -1000000000000;
            }
        }
        if (!_4p._vM1[_ZP1]) {
            var _RM1 = _le._O3(_4p.sprite_index);
            if (_RM1) {
                if ((_4p.image_xscale == 1.0) && (_4p.image_yscale == 1.0) && (_4p.image_angle == 0.0) && (_4p.image_blend == 0xffffff)) {
                    _RM1._0O(_4p.image_index, _4p.x, _4p.y, _4p.image_alpha * _X6);
                } else {
                    _RM1._L4(_4p.image_index, _4p.x, _4p.y, _4p.image_xscale, _4p.image_yscale, _4p.image_angle, _4p.image_blend, _4p.image_alpha * _X6);
                }
            }
        } else {
            _4p._B2(_ZP1, 0, _4p, _4p);
        }
    }
    while (_fO) {
        _fO._L4(_i62);
        _fO = this._cO._Q31();
    }
};
_WG.prototype._bg2 = function(_i62) {
    var _RM1, _4p, i, _4c, _Ar;
    _4c = this._Oy._4c;
    _Ar = _le.Sprites;
    for (i = _4c.length - 1; i >= 0; i--) {
        _4p = _4c[i];
        if (_4p.marked || !_4p.visible) continue;
        if (!_4p._vM1[_ZP1]) {
            _RM1 = _Ar[_4p.sprite_index];
            if (_RM1) {
                _44 = _4p;
                if ((_4p.image_xscale == 1.0) && (_4p.image_yscale == 1.0) && (_4p.image_angle == 0.0) && (_4p.image_blend == 0xffffff)) {
                    _RM1._0O(_4p.image_index, _4p.x, _4p.y, _4p.image_alpha * _X6);
                } else {
                    _RM1._L4(_4p.image_index, _4p.x, _4p.y, _4p.image_xscale, _4p.image_yscale,
                        _4p.image_angle, _4p.image_blend, _4p.image_alpha * _X6);
                }
                _44 = null;
            }
        } else {
            _4p._B2(_ZP1, 0, _4p, _4p);
        }
    }
};
_WG.prototype._cg2 = function(_i62) {
    var _dg2 = _Se2();
    for (var i = this._Oy.length - 1; i >= 0; i--) {
        var _4p = this._Oy._O3(i);
        if (_4p.marked || _4p.visible == 0) continue;
        var _eg2 = _dg2;
        while (_dg2 > _4p.depth) {
            _Re2(_dg2);
            _dg2 = _Te2(_dg2);
            if (_dg2 == _eg2) {
                break;
            }
            _eg2 = _dg2;
        }
        if (!_4p._vM1[_ZP1]) {
            var _RM1 = _le._O3(_4p.sprite_index);
            if (_RM1) {
                if ((_4p.image_xscale == 1.0) && (_4p.image_yscale == 1.0) && (_4p.image_angle == 0.0) && (_4p.image_blend == 0xffffff)) {
                    _RM1._0O(_4p.image_index, _4p.x, _4p.y, _4p.image_alpha * _X6);
                } else {
                    _RM1._L4(_4p.image_index, _4p.x, _4p.y, _4p.image_xscale, _4p.image_yscale, _4p.image_angle, _4p.image_blend, _4p.image_alpha * _X6);
                }
            }
        } else {
            _4p._B2(_ZP1, 0, _4p, _4p);
        }
    }
    while (_dg2 > -1000000000) {
        _Re2(_dg2);
        _dg2 = _Te2(_dg2);
    }
};
_WG.prototype._fg2 = function(_i62) {
    var _dg2 = _Se2();
    var _fO = this._cO._rf2();
    var _gg2 = _fO.depth;
    for (var i = this._Oy.length - 1; i >= 0; i--) {
        var _4p = this._Oy._O3(i);
        if (_4p.marked || _4p.visible == 0) continue;
        while (true) {
            if (_gg2 > _4p.depth) {
                if (_gg2 > _dg2) {
                    _fO._L4(_i62);
                    _fO = this._cO._Q31();
                    if (_fO) {
                        _gg2 = _fO.depth;
                    } else {
                        _gg2 = -1000000000000;
                    }
                } else {
                    _Re2(_dg2);
                    _dg2 = _Te2(_dg2);
                }
            } else if (_dg2 > _4p.depth) {
                _Re2(_dg2);
                _dg2 = _Te2(_dg2);
            } else {
                break;
            }
        }
        if (!_4p._vM1[_ZP1]) {
            var _RM1 = _le._O3(_4p.sprite_index);
            if (_RM1) {
                if ((_4p.image_xscale == 1.0) && (_4p.image_yscale == 1.0) && (_4p.image_angle == 0.0) && (_4p.image_blend == 0xffffff)) {
                    _RM1._0O(_4p.image_index, _4p.x, _4p.y, _4p.image_alpha * _X6);
                } else {
                    _RM1._L4(_4p.image_index, _4p.x, _4p.y, _4p.image_xscale, _4p.image_yscale, _4p.image_angle,
                        _4p.image_blend, _4p.image_alpha * _X6);
                }
            }
        } else {
            _4p._B2(_ZP1, 0, _4p, _4p);
        }
    }
    while (true) {
        if (_gg2 > _dg2) {
            _fO._L4(_i62);
            _fO = this._cO._Q31();
            if (_fO) {
                _gg2 = _fO.depth;
            } else {
                _gg2 = -1000000000000;
            }
        } else {
            if (_dg2 <= -1000000000) break;
            _Re2(_dg2);
            _dg2 = _Te2(_dg2);
        }
    }
};
_WG.prototype._hg2 = function(_i62) {
    _CN = _i62;
    if (this._P42) {
        _Au(_07(g_pBuiltIn.background_color));
    }
    this._ig2(_i62, _cS1);
    for (var i = 0; i < _Ee._De.length; i++) {
        var _Wg = _Ee._O3(i);
        if (_Wg) {
            _Wg.visible = g_pBuiltIn.background_visible[i];
            _Wg.foreground = g_pBuiltIn.background_foreground[i];
            _Wg.x = g_pBuiltIn.background_x[i];
            _Wg.y = g_pBuiltIn.background_y[i];
            _Wg.index = g_pBuiltIn.background_index[i];
            _Wg._l_1 = g_pBuiltIn.background_htiled[i];
            _Wg._m_1 = g_pBuiltIn.background_vtiled[i];
            _Wg.alpha = g_pBuiltIn.background_alpha[i];
            _Wg._aO = g_pBuiltIn.background_blend[i];
            _Wg.hspeed = g_pBuiltIn.background_hspeed[i];
            _Wg.vspeed = g_pBuiltIn.background_vspeed[i];
            _Wg._NF = g_pBuiltIn.background_xscale[i];
            _Wg._OF = g_pBuiltIn.background_yscale[i];
            if (_Wg != null && _Wg.visible && !_Wg.foreground) {
                var _dh = _Ee._Vg(_Wg.index);
                if (_dh != null) {
                    if (_Wg.stretch) {
                        _jh(_dh._Xg, _Wg.x, _Wg.y, this._rG, this._tG, _Wg._aO, _Wg.alpha);
                    } else {
                        _kh(_dh._Xg, _Wg.x, _Wg.y, _Wg._NF, _Wg._OF, _Wg._m_1, _Wg._l_1, _Wg._aO, _Wg.alpha);
                    }
                }
            }
        }
    }
    if (this._cO._pf2._n4 > 0) {
        if (_mX1.length != 0) {
            this._fg2(_i62)
        } else {
            this._9g2(_i62);
        }
    } else if (_mX1.length != 0) {
        this._cg2(_i62);
    } else {
        this._bg2(_i62);
    }
    for (var i = 0; i < _Ee._De.length; i++) {
        var _Wg = _Ee._O3(i);
        if (_Wg != null && _Wg.visible && _Wg.foreground) {
            var _dh = _Ee._Vg(_Wg.index);
            if (_dh != null) {
                if (_Wg.stretch) {
                    _jh(_dh._Xg, _Wg.x, _Wg.y, this._rG,
                        this._tG, _Wg._aO, _Wg.alpha);
                } else {
                    _kh(_dh._Xg, _Wg.x, _Wg.y, _Wg._NF, _Wg._OF, _Wg._m_1, _Wg._l_1, _Wg._aO, _Wg.alpha);
                }
            }
        }
    }
    this._ig2(_i62, _dS1);
};
_WG.prototype._jg2 = function() {
    if (_rd >= 0) {
        var _7p = _le._O3(_rd);
        if (_7p != null) {
            _7p._L4(_QX1, _Aa._wz - _9a.left, _Aa._xz - _9a.top, 1.0, 1.0, 0, 0xffffff, 1.0);
        }
        _QX1++;
        if (_QX1 > _7p._93) _QX1 -= _7p._93;
    }
};
_WG.prototype._ig2 = function(_i62, _Bp) {
    var _RM1, _4p, i, _4c, _Ar;
    _4c = this._Oy._4c;
    _Ar = _le.Sprites;
    for (i = _4c.length - 1; i >= 0; i--) {
        _4p = _4c[i];
        if (_4p.marked || !_4p.visible) continue;
        if (_4p._vM1[_Bp]) {
            _4p._B2(_Bp, 0, _4p, _4p);
        }
    }
};
_WG.prototype._kg2 = function(_d3) {
    _EN = _aY1;
    _EN._aa = 0;
    _EN._ca = 0;
    _EN._FN = _d3._L2;
    _EN._GN = _d3.bottom;
    _EN._ba = _d3._L2;
    _EN._da = _d3.bottom;
    _EN._lg2 = 1.0;
    _EN._mg2 = 1.0;
    _v62(); {
        _HN(0, 0, _d3._L2, _d3.bottom);
        _IN(0, 0, _d3._L2, _d3.bottom, 0);
        if (this._Bf2 && _hQ) {
            _Au(_AO);
        }
        this._ig2(_d3, _gS1);
    }
    _x62();
};
_WG.prototype._ng2 = function() {
    if (_hQ) {
        if (_fN < 0) {
            _fN = surface_create(_aQ, _cQ);
            g_pBuiltIn.application_surface = _fN;
            debug("Application Surface created: w=" + _aQ + ", h=" + _cQ);
        }
        if (_gN) {
            _gN = false;
            surface_create(_hN,
                _iN, _fN);
            _aQ = _hN;
            _cQ = _iN;
            debug("Application Surface resized: w=" + _aQ + ", h=" + _cQ);
            _og2();
        }
        _sN(_fN);
    }
};
_WG.prototype._pg2 = function(_d3) {
    var _qg2 = new _Qo();
    _qg2._Ya(_CN);
    this._6g2();
    var _3a;
    if (!this._4a) {
        _3a = _5a;
        _8M = _aQ / _81._rG;
        _aM = _cQ / _81._tG;
    } else {
        _3a = this._6a;
        if (this._Af2) {
            _HN(0, 0, _aQ, _cQ);
            _IN(0, 0, _aQ, _cQ, 0);
            _Au(_AO);
        }
    }
    var _rg2 = _CN._L2 - _CN.left;
    var _sg2 = _CN.bottom - _CN.top;
    var _tg2 = _iQ.w / _rg2;
    var _ug2 = _iQ.h / _sg2;
    var _kB = _aQ / _rg2;
    var _lB = _cQ / _sg2;
    _vX1 = 0;
    for (i = 0; i < _3a.length; i++) {
        _EN = _3a[i];
        if (_EN.visible) {
            var _vg2 = _LN;
            _v62(); {
                if (_EN._3g2 != -1) {
                    _sN(_EN._3g2);
                }
                _EN._aa = _EN._SG * _tg2 + _iQ.x;
                _EN._ca = _EN._TG * _ug2 + _iQ.y;
                _EN._FN = _EN._UG * _tg2;
                _EN._GN = _EN._VG * _ug2;
                _EN._ba = _EN._aa + _EN._FN;
                _EN._da = _EN._ca + _EN._GN;
                _EN._lg2 = _EN._FN / _EN._QG;
                _EN._mg2 = _EN._GN / _EN._RG;
                if (_EN._3g2 != -1) {
                    _HN(0, 0, surface_get_width(_EN._3g2), surface_get_height(_EN._3g2));
                } else {
                    _HN(_EN._SG * _kB, _EN._TG * _lB, _EN._UG * _kB, _EN._VG * _lB);
                }
                _IN(_EN._OG, _EN._PG, _EN._QG, _EN._RG, _EN._E4);
                if (Math.abs(_EN._E4) < 0.001) {
                    _d3.left = _EN._OG;
                    _d3.top = _EN._PG;
                    _d3._L2 = _EN._OG + _EN._QG;
                    _d3.bottom = _EN._PG + _EN._RG;
                } else {
                    var _Xi = _EN._E4 * (_i3 / 180);
                    var _Cb = Math.abs(Math.sin(_Xi));
                    var c = Math.abs(Math.cos(_Xi));
                    var _xq = (c * _EN._QG) + (_Cb * _EN._RG);
                    var _YR = (_Cb * _EN._QG) + (c * _EN._RG);
                    _d3.left = _EN._OG + (_EN._QG - _xq) / 2;
                    _d3._L2 = _EN._OG + (_EN._QG + _xq) / 2;
                    _d3.top = _EN._PG + (_EN._RG - _YR) / 2;
                    _d3.bottom = _EN._PG + (_EN._RG + _YR) / 2;
                }
                g_pBuiltIn.view_current = _vX1;
                this._hg2(_d3);
                if (_EN._3g2 != -1) {
                    surface_reset_target();
                }
                _vX1++;
            }
            _x62();
        }
    }
    _CN._Ya(_qg2);
};
_WG.prototype._wg2 = function(_d3) {
    if (_7Q && _hQ) {
        _v62({
            _xg2: true,
            _yg2: true
        });
        _d3.left = 0;
        _d3.top = 0;
        _d3._L2 = window_get_width();
        _d3.bottom = window_get_height();
        var rect = _iQ;
        _HN(0, 0, _d3._L2, _d3.bottom);
        _IN(0, 0, _d3._L2, _d3.bottom, 0);
        draw_surface_stretched(_fN, rect.x, rect.y, rect.w, rect.h);
        _x62({
            _zg2: true,
            _Ag2: true
        });
    }
};
_WG.prototype._Bg2 = function(_d3) {
    _d3.left = 0;
    _d3.top = 0;
    _d3._L2 = window_get_width();
    _d3.bottom = window_get_height();
    _EN = _aY1;
    _EN._aa = 0;
    _EN._ca = 0;
    _EN._FN = _d3._L2;
    _EN._GN = _d3.bottom;
    _EN._ba = _d3._L2;
    _EN._da = _d3.bottom;
    _EN._lg2 = 1.0;
    _EN._mg2 = 1.0;
    _v62(); {
        _HN(0, 0, _d3._L2, _d3.bottom);
        _IN(0, 0, _d3._L2, _d3.bottom, 0);
        this._ig2(_d3, _hS1);
    }
    _x62();
};
_WG.prototype.DrawGUI = function(_d3) {
    var _Cg2 = _8M;
    var _Dg2 = _aM;
    var _lu = _mu;
    var _ju = _ku;
    if (_lu < 0) _lu = window_get_width();
    if (_ju < 0) _ju = window_get_height();
    _v62({
        _xg2: true
    }); {
        _d3.left = 0;
        _d3.top = 0;
        _d3._L2 = window_get_width();
        _d3.bottom = window_get_height();
        _8M = _d3._L2 / _lu;
        _aM = _d3.bottom / _ju;
        _EN = _aY1;
        _EN._aa = 0;
        _EN._ca = 0;
        _EN._FN = _d3._L2;
        _EN._GN = _d3.bottom;
        _EN._ba = _d3._L2;
        _EN._da = _d3.bottom;
        _EN._lg2 = _8M;
        _EN._mg2 = _aM;
        _su = true;
        _HN(0, 0, _d3._L2, _d3.bottom);
        _tu();
        var _qg2 = new _Qo();
        _qg2._Ya(_CN);
        _CN.left = 0;
        _CN.top = 0;
        _CN._L2 = _lu;
        _CN.bottom = _ju;
        this._ig2(_d3, _eS1);
        this._ig2(_d3, _aS1);
        this._ig2(_d3, _fS1);
        _su = false;
        _CN._Ya(_qg2);
    }
    _x62({
        _zg2: true
    });
    _8M = _Cg2;
    _aM = _Dg2;
};
_WG.prototype._Eg2 = function(_d3) {
    if (_rd >= 0) {
        _v62();
        _HN(0, 0, _d3._L2, _d3.bottom);
        _IN(0, 0, _d3._L2, _d3.bottom, 0);
        this._jg2();
        _x62();
    }
};
_WG.prototype._L4 = function() {
    _v62();
    var _d3 = new _Qo();
    _d3.left = 0;
    _d3.top = 0;
    _d3._L2 = window_get_width();
    _d3.bottom = window_get_height();
    this._kg2(_d3);
    this._ng2();
    this._pg2(_d3);
    if (_hQ) {
        surface_reset_target();
    }
    if (_dN.length != 0) {
        _ja("Unbalanced surface stack. You MUST use surface_reset_target() for each set.");
        return;
    }
    this._Bg2(_d3);
    this._wg2(_d3);
    this.DrawGUI(_d3);
    this._Eg2(_d3);
    _x62();
};

function _tu() {
    var _lu = _mu;
    var _ju = _ku;
    if (_lu < 0) _lu = _CO;
    if (_ju < 0) _ju = _DO;
    var _kB = 1;
    var _lB = 1;
    var _vJ1 = 0;
    var _wJ1 = 0;
    if (_nu) {
        _kB = _qu;
        _lB = _ru;
        _vJ1 = _ou;
        _wJ1 = _pu;
        _p62(_kB, _lB, _vJ1, _wJ1);
    } else {
        _vJ1 = _iQ.x;
        _wJ1 = _iQ.y;
        if (_mu > 0) {
            _kB = _iQ.w / _lu;
        }
        if (_ku > 0) {
            _lB = _iQ.h / _ju;
        }
        _p62(_kB, _lB, _vJ1, _wJ1);
    }
}
_WG.prototype._Fg2 = function() {
    var _Gg2 = [];
    var _Hy = _ge._B92._4c;
    for (var i = 0; i < _Hy.length; i++) {
        var _4p = _Hy[i];
        if (_4p.marked) {
            _Gg2[_Gg2.length] = _4p;
        }
    }
    for (var i = 0; i < _Gg2.length; i++) {
        var _4p = _Gg2[i];
        this._Xf2(_4p);
    }
};
_WG.prototype._Xf2 = function(_4p) {
    if (this._ZC && _4p._ZD) {
        this._ZC._v51(_4p._ZD);
    }
    _ge._C92(_4p);
    this._Oy._4d(_4p);
    this._8z._y12(_4p);
    _4p._5p._u82(_4p);
};
_WG.prototype._9z = function(_7i) {
    if (_7i.active) {
        this._Oy._4d(_7i);
        _7i._5p._u82(_7i);
        this._8z._1b(_7i);
        _7i.active = false;
    }
};
_WG.prototype._bz = function(_7i) {
    if (!_7i.active) {
        this._8z._y12(_7i);
        this._Oy._az(_7i);
        _7i._5p._v82(_7i);
        _7i.active = true;
    }
};
_WG.prototype._7O = function(_mf2) {
    this._cO._1b(_mf2);
    this._9O[_mf2.id] = _mf2;
    this._iO++;
};
_WG.prototype._8O = function(_ha) {
    var _4O = this._9O[_ha];
    if (_4O) {
        this._cO._8O(_4O);
        this._9O[_ha] = undefined;
        this._iO--;
    }
};
_WG.prototype._eO = function(_Uc) {
    var _fO = this._cO._O3(_Uc);
    if (_fO != null && _fO != undefined) {
        var _4c = _fO._fB();
        for (var _gO = 0; _gO < _4c.length; _gO++) {
            var _4O = _4c[_gO];
            if (_4O) {
                this._9O[_4O.id] = null;
                this._iO--;
            }
        }
    }
    this._cO._4d(_Uc);
};
_WG.prototype._Hg2 = function() {
    this._iO = 0;
    this._9O = [];
};
_WG.prototype._2H = function() {
    this._sG.tiles = [];
};
_WG.prototype._Ig2 = function() {
    if (this._r82.length == 0) return;
    var _Qb = this._r82;
    var active = this._Oy;
    var _Jg2;
    if (active._cc2 < 0) {
        _Kg2 = active._4c.length;
    } else {
        _Kg2 = active._cc2;
    }
    var _n4 = 0;
    for (var i = 0; i < _Qb.length; i++) {
        var _4p = _Qb[i];
        for (var _k3 = 0; _k3 < _Kg2; _k3++) {
            if (_4p == active._4c[_k3]) {
                active._4c.splice(_k3, 1);
                active._4c[active._4c.length] = _4p;
                _n4 += 1;
                _Kg2 -= 1;
                _Lg2 = true;
                break;
            }
        }
    }
    if (_n4 > 0) {
        if (active._cc2 < 0) {
            active._cc2 = active._4c.length - _n4;
        } else {
            active._cc2 -= _n4;
        }
    }
    this._r82 = [];
};

function _NY1() {
    this._4H = [];
    this._8H = [];
}
_NY1.prototype._DZ1 = function(_Gm1) {
    this._8H = _Gm1;
};
_NY1.prototype._1b = function(_Mg2) {
    return this._4H[this._4H.length] = _Mg2;
};
_NY1.prototype._O3 = function(_Ng2) {
    return this._4H[_Ng2];
};
_NY1.prototype._6H = function(_Ng2) {
    return this._4H[this._8H[_Ng2]];
};
_NY1.prototype._4d = function(_Ng2) {
    this._4H[_Ng2] = null;
};
_NY1.prototype._YG = function(_Ng2) {
    var _Og2 = _oG._O3(_Ng2);
    var _Pg2 = new _WG();
    _Pg2._XG();
    _Pg2._Jf2(_Og2._sG);
    this._1b(_Pg2);
    return _Pg2.id;
};
_NY1.prototype._ZG = function(_fc, _3b) {
    var _Qg2 = this._4H[_fc];
    var _Rg2 = this._4H[_3b];
    if (!_Qg2 || !_Rg2) {
        return;
    }
    _Qg2._Jf2(_Rg2._sG);
};
_NY1.prototype._Sg2 = function() {
    for (var _Tg2 in this._4H) {
        if (!this._4H.hasOwnProperty(_Tg2)) continue;
        var room = this._4H[_Tg2];
        room._CZ1(room._sG);
    }
};
var _mK = [];

function _Ug2(_Vg2) {}

function _Wg2(_YV) {
    try {
        var _BL = new Audio();
        if (_BL.canPlayType('audio/mpeg') == "probably") _YV(true);
        _BL.addEventListener('canplaythrough', function(e) {
            _YV(true);
        }, false);
        _BL.addEventListener('error',
            function(e) {
                _YV(false, this.error)
            }, false);
        _BL.src = "data:audio/mpeg;base64,/+MYxAAAAANIAAAAAExBTUUzLjk4LjIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA";
        _BL.load();
    } catch (e) {
        _YV(false, e);
    }
}

function _Xg2() {
    this.__type = "[sound]";
    this.pName = "";
    this.kind = 0;
    this.extension = "";
    this.origName = "";
    this.effects = 0;
    this.volume = 1;
    this.pan = 0;
    this.preload = true;
    this._Yg2 = 1.0;
    this._Zg2 = 0;
    this._RL = [];
}
_Xg2.prototype.__g2 = function(_O12) {
    this.pName = _O12.pName;
    this.kind = _O12.kind;
    this.extension = _O12.extension;
    this.origName = _O12.origName;
    this.effects = _O12.effects;
    this.volume = _O12.volume;
    this.pan = _O12.pan;
    this.preload = _O12.preload;
    this._Yg2 = this.volume;
    this._yK(this.pName);
};
_Xg2.prototype._yK = function(__d) {
    this._Zg2 = 0;
    this._RL = [];
    if ((_Jw == _IR1) || (_Jw == _Kw)) {
        _8X1 = 1;
        this._RL[0] = _mK[this.pName];
    } else {
        if (_mK[this.pName] != null) {
            for (var i = 0; i < _8X1; i++) {
                this._RL[i] = _mK[this.pName].cloneNode(true);
            }
        }
    }
};
var _0h2 = false;

function _ML(_Mg, _ha, _gK, _pw, _iH1) {
    _Mg = _FI(_Mg);
    if (_jK == false) {
        return undefined;
    }
    var _1h2 = false;
    var _EI;
    var index;
    index = _Mg.indexOf(_gK);
    if (index > 0) {
        _Mg = _Mg.substr(0, index);
    }
    if (_GI) {
        _gK = "ogg";
    } else if (_HI) {
        _gK = "mp3";
    } else {
        _gK = "ogg";
    }
    _1h2 = true;
    if (_1h2) {
        _Mg = _Mg + "." + _gK;
        try {
            var _1e = new Audio();
            _1e.URL = _Mg;
            _1e._Yg2 = 1.0;
            _1e.autobuffer = true;
            if (typeof _1e.loop == 'boolean') _1e.loop = false;
            _1e.preload = 'auto';
            _1e._6Z1 = false;
            _1e._2h2 = false;
            var _Sb = document.createElement('source');
            _Sb.setAttribute("src", _Mg);
            if (_gK == "ogg") {
                _Sb.setAttribute("type", 'audio/ogg');
                _Sb.setAttribute("codecs", 'vorbis');
            } else {
                _Sb.setAttribute("type",
                    'audio/mpeg');
            }
            _1e.setAttribute("networkState", 0);
            _1e.insertBefore(_Sb, null);
            document.body.appendChild(_1e);
            _mK[_ha] = _1e;
            _1e.addEventListener('canplaythrough', _pw, false);
            _1e.addEventListener('error', _iH1, false);
            _1e.addEventListener("loadstart", _3Z1, false);
            _1e.addEventListener("suspend", _4Z1, false);
            _1e.addEventListener("stalled", _5Z1, false);
            _1e.addEventListener("stall", _5Z1, false);
            _1e.load();
        } catch (e) {
            if (_Jw == _JR1 && _0h2 == false) {
                var _3h2 = navigator;
                _0h2 = true;
                var _4h2 = _3h2.userAgent.indexOf("Windows");
                if (_4h2 != -1) {
                    alert("Audio Error: Please ensure that quicktime is installed");
                }
            }
        }
    }
    return _ha;
}

function _QY1() {
    this.Sounds = [];
    this.length = 0;
}
_QY1.prototype._4d = function(_tb) {
    if (this.Sounds[_tb]) {
        this._vg(_tb);
        this.Sounds[_tb] = undefined;
    }
};

function _5h2() {
    this._2h2 = false;
}
_QY1.prototype._6h2 = function(_tb) {
    try {
        var _7h2 = this.Sounds[_tb];
        if (!_7h2) return null;
        var _8h2 = _7h2._RL[this.Sounds[_tb]._Zg2];
        this.Sounds[_tb]._Zg2++;
        if (this.Sounds[_tb]._Zg2 >= _8X1) {
            this.Sounds[_tb]._Zg2 = 0;
        }
        return _8h2;
    } catch (e) {
        debug("Sound buffer unavailable for sound: " + _tb);
    }
    return null;
};
_QY1.prototype._4e = function(_tb) {
    var _7h2 = this._6h2(_tb);
    if (_7h2 != null) {
        try {
            if (_7h2._2h2) return;
            var buffered = _7h2.buffered;
            var _9h2 = _7h2.buffered.length;
            var i;
            for (i = 0; i < _9h2; i++) {
                var start = _7h2.buffered.start(i);
                var end = _7h2.buffered.end(i);
            }
            _7h2.removeEventListener('ended', _ah2, false);
            _7h2.removeEventListener('ended', _5h2, false);
            if (typeof _7h2.loop == 'boolean') {
                _7h2.loop = false;
            }
            try {
                if (_7h2.currentTime != 0) {
                    _7h2.currentTime = 0;
                }
            } catch (_xq) {
                if (_BJ) debug("Error setting current sound time: " + this.Sounds[_tb].pName);
            }
            _7h2.volume = this.Sounds[_tb]._Yg2 * _GX1;
            _7h2.addEventListener('ended', _5h2, false);
            _7h2._2h2 = true;
            _7h2.play();
        } catch (_xq) {
            if (_BJ) debug("Error playing sound: " + this.Sounds[_tb].pName);
        }
    }
};
_QY1.prototype._vg = function(_y7) {
    with(this) {
        var _bh2 = this.Sounds[_y7];
        if (!_bh2) return;
        _bh2 = _bh2._RL;
        for (var i = 0; i < _bh2.length; i++) {
            _7h2 = _bh2[i];
            if (_7h2 != null) {
                try {
                    _7h2.pause();
                    _7h2._2h2 = false;
                } catch (_xq) {
                    if (_BJ) debug("Error stopping sound: " + this.Sounds[_y7].pName);
                }
            }
        }
    }
};
_QY1.prototype._GL = function() {
    for (var _ch2 = 0; _ch2 < this.Sounds.length; _ch2++) {
        if (this.Sounds[_ch2]) {
            var _bh2 = this.Sounds[_ch2]._RL;
            for (var i = 0; i < _bh2.length; i++) {
                _7h2 = _bh2[i];
                if (_7h2 != null) {
                    try {
                        _7h2.pause();
                        _7h2._2h2 = false;
                    } catch (_xq) {
                        if (_BJ) debug("Error stopping sound: " + _7h2.pName);
                    }
                }
            }
        }
    }
};
_QY1.prototype._IL = function(_KK) {
    _GX1 = _KK;
    for (var _ch2 = 0; _ch2 < this.Sounds.length; _ch2++) {
        if (this.Sounds[_ch2]) {
            var _bh2 = this.Sounds[_ch2]._RL;
            for (var i = 0; i < _bh2.length; i++) {
                _7h2 = _bh2[i];
                if (_7h2 != null) {
                    try {
                        _7h2.volume = _7h2._Yg2 * _GX1;
                    } catch (_xq) {
                        if (_BJ) debug("Error setting volume: " + this.Sounds[_ch2].pName);
                    }
                }
            }
        }
    }
};

function _ah2() {
    try {
        this.currentTime = 0;
    } catch (_xq) {
        if (_BJ) debug("Error setting current sound time: " + this.Sounds[_tb].pName);
    }
    this.play();
}
_QY1.prototype._3e = function(_tb) {
    var _7h2 = this._6h2(_tb);
    if (_7h2 != null) {
        try {
            if (typeof _7h2.loop == 'boolean') {
                _7h2.loop = true;
            } else {
                _7h2.removeEventListener('ended', _ah2, false);
                _7h2.removeEventListener('ended', _5h2, false);
                _7h2.addEventListener('ended', _ah2, false);
                _7h2.onended = null;
            }
            try {
                if (_7h2.currentTime != 0) {
                    _7h2.currentTime = 0;
                }
            } catch (_xq) {
                if (_BJ) {
                    debug("Error setting current sound time: " + this.Sounds[_tb].pName);
                }
            }
            _7h2.volume = this.Sounds[_tb]._Yg2 * _GX1;
            _7h2._2h2 = true;
            _7h2.play();
        } catch (_xq) {
            if (_BJ) {
                debug("Error looping sound: " + this.Sounds[_tb].pName);
            }
        }
    }
};
_QY1.prototype._HL = function(_y7, _dh2) {
    with(this) {
        var _bh2 = this.Sounds[_y7];
        if (!_bh2) return;
        _bh2 = _bh2._RL;
        for (var i = 0; i < _bh2.length; i++) {
            _7h2 = _bh2[i];
            if (_7h2 != null) {
                try {
                    Sounds[_y7]._Yg2 = _dh2;
                    _7h2.volume = _dh2 * _GX1;
                } catch (_xq) {
                    if (_BJ) debug("Error volume: " + this.Sounds[_y7].pName);
                }
            }
        }
    }
};
_QY1.prototype._JL = function(_tb, _dh2, _E2) {
    var _LI = this.Sounds[_tb];
    if (!_LI) return;
    var _bh2 = _LI._RL;
    for (var i = 0; i < _bh2.length; i++) {
        var _7h2 = _bh2[i];
        if (_7h2 != null && _7h2._2h2) {
            try {
                var _eh2 = 50;
                var _fh2 = _LI._Yg2;
                var _gh2 = _dh2;
                var _hh2 = Math.abs(_fh2 - _gh2) / (_E2 / _eh2);

                function _CJ(_ih2) {
                    setTimeout(function() {
                        var _jh2;
                        if ((_fh2 < _gh2) && (_7h2.volume < _gh2)) {
                            _jh2 = _LI._Yg2 + _hh2;
                        } else if ((_fh2 > _gh2) && (_7h2.volume > _gh2)) {
                            _jh2 = _LI._Yg2 - _hh2;
                        } else {
                            return;
                        }
                        if (_jh2 < 0) {
                            _jh2 = 0;
                        }
                        if (_jh2 > 1) {
                            _jh2 = 1;
                        }
                        _LI._Yg2 = _jh2;
                        _ih2.volume = _jh2 * _GX1;
                        _CJ(_ih2);
                    }, _eh2);
                }
                _CJ(_7h2);
            } catch (_xq) {
                if (_BJ) debug("Error volume: " + _LI.pName);
            }
        }
    }
};
_QY1.prototype._wg = function(_y7) {
    with(this) {
        var _bh2 = Sounds[_y7];
        if (!_bh2) return;
        _bh2 = _bh2._RL;
        var playing = false;
        for (var i = 0; i < _bh2.length; i++) {
            _7h2 = _bh2[i];
            if (_7h2 != null) {
                try {
                    if (_7h2._2h2) {
                        playing = true;
                        break;
                    }
                } catch (_xq) {
                    if (_BJ) debug("Error checking play state: " + this.Sounds[_y7].pName);
                }
            }
        }
        return playing;
    }
};
_QY1.prototype._O3 = function(_tb) {
    return this.Sounds[_tb];
};
_QY1.prototype._U9 = function() {
    this.Sounds = [];
    length = 0;
};
_QY1.prototype._1b = function(_O12) {
    with(this) {
        var _Wg = null;
        if (_O12 != null) {
            _Wg = new _Xg2();
            _Wg.__g2(_O12);
        }
        Sounds[Sounds.length] = _Wg;
    }
};
_QY1.prototype._OL = function() {
    var _PL = new _Xg2();
    this.Sounds[this.Sounds.length] = _PL;
    return this.Sounds.length - 1;
};

function _Qo() {
    this.left = 0;
    this.top = 0;
    this._L2 = 0;
    this.bottom = 0;
}
_Qo.prototype._Ya = function(_IM) {
    this.left = _IM.left;
    this._L2 = _IM._L2;
    this.top = _IM.top;
    this.bottom = _IM.bottom;
};

function _jM() {
    this.__type = "[sprite]";
    this.pName = "sprite";
    this.width = 16;
    this.height = 16;
    this._Ry = new _Qo;
    this.transparent = true;
    this.smooth = true;
    this.preload = true;
    this._lM = 0;
    this._Fg = false;
    this.xOrigin = 0;
    this.yOrigin = 0;
    this._fh = false;
    this._93 = 0;
    this._mM = 8;
    this._nM = false;
    this._oM = false;
    this._a3 = [];
    this._kh2 = [];
    this._M1 = [];
    this.Masks = [];
}
_jM.prototype._V82 = function() {
    return this._Fg;
};
_jM.prototype._lh2 = function() {
    return this.xOrigin;
};
_jM.prototype._mh2 = function() {
    return this.yOrigin;
};
_jM.prototype._nh2 = function() {
    return this._Ry;
};
_jM.prototype._N1 = function() {
    return this._93;
};
_jM.prototype._rM = function() {
    var _oh2 = (this.yOrigin * this.yOrigin);
    var _ph2 = (this.xOrigin * this.xOrigin);
    var _qh2 = (this.width - this.xOrigin) * (this.width - this.xOrigin);
    var _rh2 = (this.height - this.yOrigin) * (this.height - this.yOrigin);
    var _sh2 = ~~ceil(sqrt(_ph2 + _oh2));
    var _th2 = ~~ceil(sqrt(_qh2 + _oh2));
    var _uh2 = ~~ceil(sqrt(_ph2 + _rh2));
    var _vh2 = ~~ceil(sqrt(_qh2 + _rh2));
    this._mM = _c3(_sh2, _c3(_th2, _c3(_uh2, _vh2)));
};
_jM.prototype._wh2 = function(_xh2, _G1, _H1) {
    try {
        if (_le._yh2 !== undefined) {
            var _zh2 = true;
            var _Ah2 = 0;
            var _Bh2 = _le._yh2[_xh2];
            var _Yn1 = new DataView(_Bh2);
            if (_Yn1 !== undefined) {
                var _Ch2 = _Yn1.getInt32(_Ah2, _zh2);
                var _Dh2 = (1 << 31);
                if ((_Ch2 & _Dh2) != 0) {
                    _Ch2 &= (~_Dh2);
                    _Ah2 += 4;
                }
                _Ah2 += 4;
                var _Eh2 = null;
                if (_Ch2 > 0) {
                    _Eh2 = new Uint8Array(_Bh2, _Ah2, _Ch2);
                    _Ah2 += ((_Ch2 + 3) & ~3);
                }
                var _Fh2 = _Yn1.getUint32(_Ah2, _zh2);
                _Ah2 += 4;
                this._Gh2 = [];
                for (var i = 0; i < _Fh2; i++) {
                    var type = _Yn1.getInt32(_Ah2, _zh2);
                    _Ah2 += 4;
                    var id = _Yn1.getInt32(_Ah2, _zh2);
                    _Ah2 += 4;
                    var _Hh2 = null;
                    if (type === _oH1) {
                        _Hh2 = new _xH1(type, id);
                        _Ah2 = _Hh2._yH1(_Yn1, _Ah2, _zh2, this._Gh2);
                    } else if (type === _pH1) {
                        _Hh2 = new _QG1(type, id);
                        _Ah2 = _Hh2._RG1(_Bh2, _Yn1, _Ah2, _zh2, _Eh2);
                    } else {
                        _Hh2 = {
                            type: _nH1,
                            id: id
                        };
                    }
                    this._Gh2.push(_Hh2);
                }
                this._q82 = new _BI1();
                _Ah2 = this._q82._FI1(_Yn1, _Ah2, _zh2);
                if (this._q82._EI1._GI1 > 0) {
                    _Ah2 = this._Ih2(_Yn1, _Ah2, _zh2);
                } else {
                    this.width = this._q82._M2;
                    this.height = this._q82._O2;
                    this._Fg = false;
                }
                this._lM = 0;
                this.preload = true;
                if (!this._Fg) {
                    this._Ry.left = this._q82._K2;
                    this._Ry._L2 = this._q82._M2;
                    this._Ry.top = this._q82._N2;
                    this._Ry.bottom = this._q82._O2;
                    this.xOrigin = _G1;
                    this.yOrigin = _H1;
                }
                this._rM();
                this._Jh2();
            }
        }
    } catch (e) {
        debug("Cannot build SWF data " + e.message);
    }
};
_jM.prototype._Ih2 = function(_SG1, _TG1, _UG1) {
    if (true != this._Fg) {
        return;
    }
    this._a3 = [];
    this.width = this._q82._EI1._HI1;
    this.height = this._q82._EI1._II1;
    var _GI1 = this._q82._EI1._GI1;
    for (var i = 0; i < _GI1; i++) {
        var _Kh2 = _SG1.getInt32(_TG1, _UG1);
        _TG1 += 4;
        var _Lh2 = _TG1;
        var _Mh2 = 0;
        var _aK = [];
        for (var _k3 = 0; _k3 < _Kh2; _k3++) {
            var _Nh2 = _SG1.getUint8(_TG1, _UG1);
            _TG1 += 1;
            var _Oh2 = ((_Nh2) & 0x80) != 0 ? true : false;
            var _Ph2 = ((_Nh2) & 0x7f) + 1;
            for (var _dt = 0; _dt < _Ph2; _dt++) {
                _aK[_Mh2++] = _Oh2;
            }
        }
        this._a3[i] = _aK;
        _TG1 = _Lh2 + ((_Kh2 + 3) & ~3);
    }
    this._nM = true;
    return _TG1;
};
_jM.prototype._Jh2 = function() {
    this._L4 = function(_F1, _h2, _i2, _Ie, _Je, _l2, _Z6, __6) {
        _G62(this._Gh2, this._q82, _F1, this.xOrigin, this.yOrigin, _h2, _i2, _Ie, _Je, _l2, _Z6, __6);
    };
    this._0O = function(_Qh2, _h2, _i2, __6) {
        _G62(this._Gh2, this._q82, _Qh2, this.xOrigin, this.yOrigin, _h2, _i2, 1.0, 1.0, 0.0, 0xffffffff, __6);
    };
};
_jM.prototype._Rh2 = function(_Sh2) {
    if (_Sh2 >= 0) {
        if (_le._uD1 !== undefined) {
            var _FD1 = _le._uD1[_Sh2];
            this._9w = new _74();
            this._9w._p4(_FD1._Kc, _FD1._52, _FD1.width, _FD1.height);
        }
        this._L4 = function(_F1, _h2, _i2, _Ie, _Je, _l2, _Z6, __6) {
            this._9w._L4(_F1,
                _h2, _i2, _Ie, _Je, _l2, _Z6, __6);
        };
        this._0O = function(_F1, _h2, _i2, __6) {
            this._9w._L4(_F1, _h2, _i2, 1, 1, 0, 0xffffff, __6);
        };
    }
};

function _Th2(_Uh2, _Eq) {
    if (_Uh2.Masks[_Eq] != null) {
        var __2 = [];
        var src = 0;
        var _Zv = 0;
        var _Cd;
        while (src < _Uh2.Masks[_Eq].length) {
            var _Vh2 = _Uh2.Masks[_Eq][src++];
            if (_Vh2 & 0x80) {
                _Vh2 = (_Vh2 & 0x7f) + 1;
                _Cd = _Uh2.Masks[_Eq][src++];
                for (var _X1 = 0; _X1 < _Vh2; _X1++) {
                    __2[_Zv++] = _Cd;
                }
            } else {
                _Vh2++;
                for (var _X1 = 0; _X1 < _Vh2; _X1++) {
                    __2[_Zv++] = _Uh2.Masks[_Eq][src++];
                }
            }
        }
    }
    _Uh2.Masks[_Eq] = __2;
}

function _FZ1(_Wh2) {
    var _RM1 = new _jM();
    if (_Wh2.pName !== undefined) _RM1.pName = _Wh2.pName;
    if (_Wh2.width !== undefined) _RM1.width = _Wh2.width;
    if (_Wh2.height !== undefined) _RM1.height = _Wh2.height;
    if (_Wh2.bboxLeft !== undefined) _RM1._Ry.left = _Wh2.bboxLeft;
    if (_Wh2.bboxRight !== undefined) _RM1._Ry._L2 = _Wh2.bboxRight;
    if (_Wh2.bboxTop !== undefined) _RM1._Ry.top = _Wh2.bboxTop;
    if (_Wh2.bboxBottom !== undefined) _RM1._Ry.bottom = _Wh2.bboxBottom;
    if (_Wh2.transparent !== undefined) _RM1.transparent = _Wh2.transparent;
    if (_Wh2.smooth !== undefined) _RM1.smooth = _Wh2.smooth;
    if (_Wh2.preload !== undefined) _RM1.preload = _Wh2.preload;
    if (_Wh2.bboxMode !== undefined) _RM1._lM = _Wh2.bboxMode;
    if (_Wh2.colCheck !== undefined) _RM1._Fg = _Wh2.colCheck;
    if (_Wh2.xOrigin !== undefined) _RM1.xOrigin = _Wh2.xOrigin;
    if (_Wh2.yOrigin !== undefined) _RM1.yOrigin = _Wh2.yOrigin;
    _RM1.Masks = null;
    if (_Wh2.swf !== undefined) {
        _RM1._wh2(_Wh2.swf, _RM1.xOrigin, _RM1.yOrigin);
    }
    if (_Wh2.skel !== undefined) {
        _RM1._Rh2(_Wh2.skel);
    }
    if (_Wh2.Masks !== undefined) _RM1.Masks = _Wh2.Masks;
    _RM1._M1 = [];
    for (var i = _Wh2.TPEntryIndex.length - 1; i >= 0; i--) {
        _RM1._M1[i] = _Wh2.TPEntryIndex[i];
    }
    _RM1._93 = _RM1._M1.length;
    _RM1._rM();
    for (var i = 0; i < _RM1._M1.length; i++) {
        _RM1._M1[i] = _P12(_RM1._M1[i]);
        if (_RM1._M1[i] != null) {
            if (_RM1._M1[i].CropWidth == 0) _RM1._M1[i].CropWidth = 1;
            if (_RM1._M1[i].CropHeight == 0) _RM1._M1[i].CropHeight = 1;
        }
    }
    if (_RM1.Masks) {
        for (var i = 0; i < _Wh2.Masks.length; i++) {
            if (!_Wh2._Xh2) _Th2(_RM1, i);
            _RM1._nM = true;
            var size = _RM1.width * _RM1.height;
            var _aK = [];
            _aK[size - 1] = 0;
            var _Yh2 = ((_RM1.width + 7) >> 3);
            var _x92 = 0;
            for (var y = 0; y < _RM1.height; ++y, _x92 += _Yh2) {
                var __2 = 0x80;
                var _Zh2 = _x92;
                for (var x = 0; x < _RM1.width; ++x, __2 >>= 1) {
                    if (__2 == 0) {
                        __2 = 0x80;
                        ++_Zh2;
                    }
                    _aK[x + (y * _RM1.width)] = ((_RM1.Masks[i][_Zh2] & __2) != 0);
                }
            }
            _RM1._a3[i] = _aK;
        }
    }
    _Wh2._Xh2 = true;
    return _RM1;
}
_jM.prototype._0O = function(_Qh2, _h2, _i2, __6) {
    if (this._93 <= 0) return;
    var _mM = this._mM;
    if (((_CN.top - _i2) <= _mM) && ((_i2 - _CN.bottom) <= _mM) && ((_CN.left - _h2) <= _mM) && ((_h2 - _CN._L2) <= _mM)) {
        _Qh2 = (~~_Qh2) % this._93;
        if (_Qh2 < 0) _Qh2 = _Qh2 + this._93;
        var _L1 = this._M1[_Qh2];
        if ((_L1.w == _L1.CropWidth) && (_L1.h == _L1.CropHeight)) {
            _ih(_L1, _h2 - this.xOrigin, _i2 - this.yOrigin, __6);
        } else {
            var _F4 = 0xffffffff;
            _ph(_L1,
                0, 0, _h2 - this.xOrigin, _i2 - this.yOrigin, 1, 1, 0, _F4, _F4, _F4, _F4, 1);
        }
    }
};
_jM.prototype._L4 = function(_F1, _h2, _i2, _Ie, _Je, _l2, _Z6, __6) {
    if (this._93 <= 0) return;
    var __h2 = abs(this._mM * _Ie);
    var _0i2 = abs(this._mM * _Je);
    var _mM;
    if (__h2 > _0i2) {
        _mM = __h2
    } else {
        _mM = _0i2;
    }
    if (((_CN.top - _i2) <= _mM) && ((_i2 - _CN.bottom) <= _mM) && ((_CN.left - _h2) <= _mM) && ((_h2 - _CN._L2) <= _mM)) {
        _F1 = (~~_F1) % this._93;
        if (_F1 < 0) _F1 += this._93;
        _l2 = _jY1(_l2, 360.0);
        _ph(this._M1[_F1], this.xOrigin, this.yOrigin, _h2, _i2, _Ie, _Je, _l2 * Math.PI / 180.0, _Z6, undefined, undefined,
            undefined, __6);
    }
};
_jM.prototype._3O = function(_Qh2, _v3, _w3, _S2, _T2, _Ki, _Li, _1O, _2O, __6) {
    if (this._93 <= 0) return;
    _Qh2 = (~~_Qh2) % this._93;
    if (_Qh2 < 0) _Qh2 = _Qh2 + this._93;
    _m72(this._M1[_Qh2], _v3, _w3, _S2, _T2, _Ki, _Li, _1O, _2O, __6);
};
_jM.prototype._392 = function(_1i2, _2i2, _v3, _w3, _j2, _k2, _l2, _h2, _i2) {
    var _l3, _n3;
    if (!this._nM) return true;
    if (this._93 <= 0) return false;
    _1i2 = _1i2 % this._a3.length;
    if (_1i2 < 0) _1i2 = _1i2 + this._a3.length;
    if (Math.abs(_l2) < 0.0001) {
        _l3 = Math.floor((_h2 - _v3) / _j2 + this.xOrigin);
        _n3 = Math.floor((_i2 - _w3) / _k2 + this.yOrigin);
    } else {
        var _F3 = Math.sin(-_l2 * Math.PI / 180.0);
        var _G3 = Math.cos(-_l2 * Math.PI / 180.0);
        _l3 = Math.floor((_G3 * (_h2 - _v3) + _F3 * (_i2 - _w3)) / _j2 + this.xOrigin);
        _n3 = Math.floor((_G3 * (_i2 - _w3) - _F3 * (_h2 - _v3)) / _k2 + this.yOrigin);
    }
    if ((_l3 < 0) || (_l3 >= this.width)) return false;
    if ((_n3 < 0) || (_n3 >= this.height)) return false;
    return this._a3[_1i2][_l3 + (_n3 * this.width)];
};
_jM.prototype._492 = function(_1i2, _2i2, _v3, _w3, _j2, _k2, _l2, _A3) {
    if (!this._nM) return true;
    if (this._93 <= 0) return false;
    _1i2 = _1i2 % this._a3.length;
    if (_1i2 < 0) {
        _1i2 = _1i2 + this._a3.length;
    }
    var _b3 = _c3(_2i2.left, _A3.left);
    var _d3 = _e3(_2i2._L2, _A3._L2);
    var _f3 = _c3(_2i2.top, _A3.top);
    var _g3 = _e3(_2i2.bottom, _A3.bottom);
    if ((_j2 == 1) && (_k2 == 1) && (Math.abs(this._E4) < 0.0001)) {
        for (var i = _b3; i <= _d3; i++) {
            for (var _k3 = _f3; _k3 <= _g3; _k3++) {
                var _l3 = i - _v3 + this.xOrigin;
                var _n3 = _k3 - _w3 + this.yOrigin;
                if ((_l3 < 0) || (_l3 >= this.w)) continue;
                if ((_n3 < 0) || (_n3 >= this.h)) continue;
                if (this._a3[_1i2][_l3 + (_n3 * this.w)] == true) return true;
            }
        }
    } else {
        var _F3 = Math.sin(-_l2 * _i3 / 180.0);
        var _G3 = Math.cos(-_l2 * _i3 / 180.0);
        var _3i2 = 1.0 / _j2;
        var _4i2 = 1.0 / _k2;
        for (var i = _b3; i <= _d3; i++) {
            for (var _k3 = _f3; _k3 <= _g3; _k3++) {
                var _l3 = Math.floor((_G3 * (i - _v3) + _F3 * (_k3 - _w3)) * _3i2 + this.xOrigin);
                var _n3 = Math.floor((_G3 * (_k3 - _w3) - _F3 * (i - _v3)) * _4i2 + this.yOrigin);
                if ((_l3 < 0) || (_l3 >= this.width)) continue;
                if ((_n3 < 0) || (_n3 >= this.height)) continue;
                if (this._a3[_1i2][_l3 + (_n3 * this.width)]) return true;
            }
        }
    }
    return false;
};
_jM.prototype._b92 = function(_1i2, _2i2, _v3, _w3, _j2, _k2, _l2, _A3) {
    var i, _k3;
    if (!this._nM) return true;
    if (_a92 > 3) {
        _a92 = (1 + _a92) - 1;
    }
    if (this._93 <= 0) return false;
    _1i2 = _1i2 % this._a3.length;
    if (_1i2 < 0) _1i2 = _1i2 + this._a3.length;
    var _b3 = _c3(_2i2.left, _A3.left);
    var _d3 = _e3(_2i2._L2, _A3._L2);
    var _f3 = _c3(_2i2.top, _A3.top);
    var _g3 = _e3(_2i2.bottom, _A3.bottom);
    var _B3 = ((_A3._L2 + _A3.left) / 2);
    var _C3 = ((_A3.bottom + _A3.top) / 2);
    var _D3 = 1.0 / ((_A3._L2 - _A3.left) / 2);
    var _E3 = 1.0 / ((_A3.bottom - _A3.top) / 2);
    var _5i2 = this._a3[_1i2];
    var _Gg2;
    if ((_j2 == 1) && (_k2 == 1) && (Math.abs(_l2) < 0.0001)) {
        for (i = _b3; i <= _d3; i++) {
            _Gg2 = (i - _B3) * _D3;
            var _6i2 = _Gg2 * _Gg2;
            var _l3 = i - _v3 + this.xOrigin;
            if ((_l3 < 0) || (_l3 >= this.width)) continue;
            for (_k3 = _f3; _k3 <= _g3; _k3++) {
                _Gg2 = (_k3 - _C3) * _E3;
                if (_6i2 + (_Gg2 * _Gg2) > 1) continue;
                var _n3 = _k3 - _w3 + this.yOrigin;
                if ((_n3 < 0) || (_n3 >= this.height)) continue;
                if (_5i2[_l3 + (_n3 * this.width)]) return true;
            }
        }
    } else {
        var _F3 = Math.sin(-_l2 * Math.PI / 180.0);
        var _G3 = Math.sin(-_l2 * Math.PI / 180.0);
        var _3i2 = 1.0 / _j2;
        var _4i2 = 1.0 / _k2;
        for (i = _b3; i <= _d3; i++) {
            var _7i2 = (i - _v3);
            var _8i2 = _G3 * _7i2;
            var _9i2 = _F3 * _7i2;
            var _Gg2 = (i - _B3) * _D3;
            var _ai2 = _Gg2 * _Gg2;
            for (_k3 = _f3; _k3 <= _g3; _k3++) {
                var _bi2 = (_k3 - _C3) * _E3;
                if ((_ai2 + (_bi2 * _bi2)) > 1) continue;
                var _ci2 = _k3 - _w3;
                var _l3 = ~~((_8i2 + _F3 * _ci2 * _3i2) + this.xOrigin);
                if ((_l3 < 0) || (_l3 >= this.width)) continue;
                var _n3 = ~~((_G3 * _ci2 - _9i2 * _4i2) + this.yOrigin);
                if ((_n3 < 0) || (_n3 >= this.height)) continue;
                if (_5i2[_l3 + (_n3 * this.width)]) return true;
            }
        }
    }
    return false;
};
_jM.prototype._n92 = function(_1i2, _2i2, _v3, _w3, _di2, _ei2, _fi2, _E1, _gi2, _83, _S2, _T2, _U2, _V2, _W2) {
    if (_E1 == null) return false;
    if (this._93 <= 0) return false;
    if (_E1._93 <= 0) return false;
    if (this._a3.length > 0) _1i2 = _1i2 % this._a3.length;
    if (_1i2 < 0) {
        _1i2 = _1i2 + this._a3.length;;
    }
    if (_E1._a3.length > 0) _gi2 = _gi2 % _E1._a3.length;
    if (_gi2 < 0) {
        _gi2 = _gi2 + _E1._a3.length;
    }
    _di2 = 1.0 / _di2;
    _ei2 = 1.0 / _ei2;
    _U2 = 1.0 / _U2;
    _V2 = 1.0 / _V2;
    var _b3 = _c3(_2i2.left, _83.left);
    var _d3 = _e3(_2i2._L2, _83._L2);
    var _f3 = _c3(_2i2.top, _83.top);
    var _g3 = _e3(_2i2.bottom, _83.bottom);
    if ((_di2 == 1) && (_U2 == 1) && (_ei2 == 1) && (_V2 == 1) && (_fi2 == 0) && (_W2 == 0)) {
        for (var i = _b3; i <= _d3; i++) {
            for (var _k3 = _f3; _k3 <= _g3; _k3++) {
                var _l3 = i - _v3 + this.xOrigin;
                var _n3 = _k3 - _w3 + this.yOrigin;
                if ((_l3 < 0) || (_l3 >= this.width)) continue;
                if ((_n3 < 0) || (_n3 >= this.height)) continue;
                if (this._nM) {
                    if (!this._a3[_1i2][_l3 + (_n3 * this.width)]) continue;
                }
                _l3 = i - _S2 + _E1.xOrigin;
                _n3 = _k3 - _T2 + _E1.yOrigin;
                if ((_l3 < 0) || (_l3 >= _E1.width)) continue;
                if ((_n3 < 0) || (_n3 >= _E1.height)) continue;
                if (_E1._nM) {
                    if (!_E1._a3[_gi2][_l3 + (_n3 * _E1.width)]) continue;
                }
                return true;
            }
        }
    } else if ((_fi2 == 0) && (_W2 == 0)) {
        for (var i = _b3; i <= _d3; i++) {
            for (var _k3 = _f3; _k3 <= _g3; _k3++) {
                var _l3 = Math.floor(((i - _v3) * _di2 + this.xOrigin));
                var _n3 = Math.floor(((_k3 - _w3) * _ei2 + this.yOrigin));
                if ((_l3 < 0) || (_l3 >= this.width)) continue;
                if ((_n3 < 0) || (_n3 >= this.height)) continue;
                if (this._nM) {
                    if (!this._a3[_1i2][_l3 + (_n3 * this.width)]) continue;
                }
                _l3 = Math.floor(((i - _S2) * _U2 + _E1.xOrigin));
                _n3 = Math.floor(((_k3 - _T2) * _V2 + _E1.yOrigin));
                if ((_l3 < 0) || (_l3 >= _E1.width)) continue;
                if ((_n3 < 0) || (_n3 >= _E1.height)) continue;
                if (_E1._nM) {
                    if (!_E1._a3[_gi2][_l3 + (_n3 * _E1.width)]) continue;
                }
                return true;
            }
        }
    } else {
        var _hi2 = Math.sin(-_fi2 * _i3 / 180);
        var _ii2 = Math.cos(-_fi2 * _i3 / 180);
        var _h3 = Math.sin(-_W2 * _i3 / 180);
        var _j3 = Math.cos(-_W2 * _i3 / 180);
        for (var i = _b3; i <= _d3; i++) {
            for (var _k3 = _f3; _k3 <= _g3; _k3++) {
                var _l3 = Math.floor(((_ii2 * (i - _v3) + _hi2 * (_k3 - _w3)) * _di2 + this.xOrigin));
                var _n3 = Math.floor(((_ii2 * (_k3 - _w3) - _hi2 * (i - _v3)) * _ei2 + this.yOrigin));
                if ((_l3 < 0) || (_l3 >= this.width)) continue;
                if ((_n3 < 0) || (_n3 >= this.height)) continue;
                if (this._nM) {
                    if (!this._a3[_1i2][_l3 + (_n3 * this.width)]) continue;
                }
                _l3 = Math.floor(((_j3 * (i - _S2) + _h3 * (_k3 - _T2)) * _U2 + _E1.xOrigin));
                _n3 = Math.floor(((_j3 * (_k3 - _T2) - _h3 * (i - _S2)) * _V2 + _E1.yOrigin));
                if ((_l3 < 0) || (_l3 >= _E1.width)) continue;
                if ((_n3 < 0) || (_n3 >= _E1.height)) continue;
                if (_E1._nM) {
                    if (!_E1._a3[_gi2][_l3 + (_n3 * _E1.width)]) continue;
                }
                return true;
            }
        }
    }
    return false;
};
_jM.prototype._d92 = function(_1i2, _2i2, _v3, _w3, _j2, _k2, _l2, _ji2, _ki2,
    _li2, _mi2) {
    if (!this._nM) {
        return true;
    }
    if (this._93 <= 0) {
        return false;
    }
    _1i2 = _1i2 % this._a3.length;
    if (_1i2 < 0) {
        _1i2 = _1i2 + this._a3.length;
    }
    if ((_ji2 == _li2) || (_ki2 == _mi2)) {
        var _ni2 = new _Qo();
        _ni2.left = _ji2;
        _ni2.top = _e3(_ki2, _mi2);
        _ni2._L2 = _li2;
        _ni2.bottom = _c3(_ki2, _mi2);
        return this._492(_1i2, _2i2, _v3, _w3, _j2, _k2, _l2, _ni2);
    }
    var _F3 = Math.sin(-_l2 * Math.PI / 180.0);
    var _G3 = Math.cos(-_l2 * Math.PI / 180.0);
    if (Math.abs(_li2 - _ji2) >= Math.abs(_mi2 - _ki2)) {
        if (_li2 < _ji2) {
            var _y8 = _li2;
            _li2 = _ji2;
            _ji2 = _f2;
            _y8 = _mi2;
            _mi2 = _oi2;
            _ki2 = _y8;
        }
        var _Iv = (_mi2 - _ki2) / (_li2 - _ji2);
        for (var i = _c3(_2i2.left, _ji2); i <= _e3(_2i2._L2, _li2); i++) {
            var _l3 = Math.floor((_G3 * (i - _v3) + _F3 * (_ki2 + (i - _ji2) * _Iv - _w3)) / _j2 + this.xOrigin);
            var _n3 = Math.floor((_G3 * (_ki2 + (i - _ji2) * _Iv - _w3) - _F3 * (i - _v3)) / _k2 + this.yOrigin);
            if ((_l3 < 0) || (_l3 >= this.width)) continue;
            if ((_n3 < 0) || (_n3 >= this.height)) continue;
            if (this._a3[_1i2][_l3 + (_n3 * this.width)]) return true;
        }
    } else {
        if (_mi2 < _ki2) {
            var _y8 = _mi2;
            _mi2 = _ki2;
            _ki2 = _y8;
            _y8 = _li2;
            _li2 = _ji2;
            _ji2 = _y8;
        }
        var _Iv = (_li2 - _ji2) / (_mi2 - _ki2);
        for (var i = _c3(_2i2.top,
                _ki2); i <= _e3(_2i2.bottom, _mi2); i++) {
            var _l3 = Math.floor((_G3 * (_ji2 + (i - _ki2) * _Iv - _v3) + _F3 * (i - _w3)) / _j2 + this.xOrigin);
            var _n3 = Math.floor((_G3 * (i - _w3) - _F3 * (_ji2 + (i - _ki2) * _Iv - _v3)) / _k2 + this.yOrigin);
            if ((_l3 < 0) || (_l3 >= this.width)) continue;
            if ((_n3 < 0) || (_n3 >= this.height)) continue;
            if (this._a3[_1i2][_l3 + (_n3 * this.width)]) return true;
        }
    }
    return false;
};
_jM.prototype._TM = function(_F1) {
    if (this._93 <= 0) {
        return null;
    }
    _F1 = _F1 % this._93;
    if (_F1 < 0) {
        _F1 = _F1 + this._93;
    }
    if (this._M1) {
        return this._M1[_F1];
    }
    return null;
};

function _OY1() {
    this.Sprites = [];
}
_OY1.prototype._kM = function(_Uh2) {
    var _X2 = this.Sprites.length;
    this.Sprites[_X2] = _Uh2;
    return _X2;
};
_OY1.prototype._M82 = function(_pi2) {
    if (_pi2 < 0 || _pi2 > this.Sprites.length) return null;
    var _LF = this.Sprites[_pi2];
    if ((_LF._q82 !== null) && (_LF._q82 !== undefined)) {
        return _LF._q82._DI1;
    }
    return _LF._M1.length;
};
_OY1.prototype._O3 = function(_pi2) {
    if (_pi2 < 0 || _pi2 > this.Sprites.length) return null;
    return this.Sprites[_pi2];
};
_OY1.prototype._4d = function(_ha) {
    if (this.Sprites[_ha] != undefined) this.Sprites[_ha] = undefined;
};
_OY1.prototype._hZ1 = function(_Wn1) {
    try {
        var _qi2 = {
            data: new Uint8Array(_Wn1),
            offset: 0
        };

        function _ri2(_si2) {
            var _ti2 = ";";
            var _xc = "";
            while (_qi2.offset < _si2.data.byteLength) {
                if (_si2.data[_qi2.offset] === _ti2.charCodeAt(0)) {
                    _qi2.offset++;
                    break;
                }
                _xc = _xc + String.fromCharCode(_si2.data[_qi2.offset]);
                _qi2.offset++;
            }
            return _xc;
        };
        var type = _ri2(_qi2);
        if (type == "rswf") {
            var version = _ri2(_qi2),
                _ui2 = version.split('.', 3);
            _wH1._pR = parseInt(_ui2[0]);
            _wH1._qR = parseInt(_ui2[1]);
            _wH1.version = parseInt(_ui2[2]);
            var _vi2 = parseInt(_ri2(_qi2)),
                _wi2 = parseInt(_ri2(_qi2));
            this._yh2 = [];
            var _F7 = _vi2;
            for (var i = 0; i < _wi2; i++) {
                var _xi2 = parseInt(_ri2(_qi2));
                this._yh2[i] = _Wn1.slice(_F7, _F7 + _xi2);
                _F7 += _xi2;
            }
        }
    } catch (e) {
        debug("Cannot parse SWF data " + e.message);
    }
};
_OY1.prototype._fZ1 = function(_yi2) {
    function _zi2(_Z4, _g3) {
        var _Ce2 = (_Z4 >> 16) & 0xffff,
            _lN1 = _Z4 & 0xffff;
        var _zB = (_g3 >> 16) & 0xffff,
            _Nk1 = _g3 & 0xffff;
        var _oc = ((_Ce2 * _Nk1) + (_lN1 * _zB)) & 0xffff;
        return ((_oc << 16) >>> 0) + (_lN1 * _Nk1);
    };

    function _Ai2(_Wn1) {
        var _Bi2 = Math.pow(2, 32);
        var _Ci2 = 6 * 7;
        var _Di2 = "";
        for (var _k3 = 0; _k3 < _Wn1.length; _k3++) {
            _Di2 += String.fromCharCode((_Wn1.charCodeAt(_k3) - (_Ci2 & 0xff)) & 0xff);
            _Ci2 = _zi2(_Ci2, (_Ci2 + 1) % _Bi2) % _Bi2;
        }
        return _Di2;
    };
    this._uD1 = [];
    try {
        var _Ei2 = _yi2.split(';', 4);
        if (_Ei2[0] == "skel") {
            var version = _Ei2[1];
            var _F7 = parseInt(_Ei2[2]);
            var _Fi2 = parseInt(_Ei2[3]);
            var _Gi2 = 4 + _Fi2;
            _Ei2 = _yi2.split(';', _Gi2);
            for (var i = 0; i < _Fi2; i++) {
                var _Hi2 = parseInt(_Ei2[4 + i]);
                var _Ii2 = _yi2.substr(_F7, _Hi2);
                var _Ji2 = _Ii2.split(';', 4);
                var _Q4 = 0;
                var _Ki2 = parseInt(_Ji2[_Q4++]);
                var _Li2 = parseInt(_Ji2[_Q4++]);
                var _Mi2 = parseInt(_Ji2[_Q4++]);
                var _Ni2 = _Ji2[_Q4].substr(0, _Ki2);
                var _Oi2 = _Ji2[_Q4].substr(_Ki2, _Ji2[_Q4].length - _Ki2);
                this._uD1.push({
                    _Kc: _Ai2(base64_decode(_Ni2)),
                    _52: _Ai2(base64_decode(_Oi2)),
                    width: _Li2,
                    height: _Mi2
                });
                _F7 += _Hi2;
            }
        }
    } catch (e) {
        debug("Cannot parse Spine data " + e.message);
    }
};

function _5O() {
    this.__type = "[Tile]";
    this.x = 0;
    this.y = 0;
    this.index = 0;
    this.xo = 0;
    this.yo = 0;
    this.w = 0;
    this.h = 0;
    this.depth = 0.0;
    this.id = _JX1++;
    this._NF = 1.0;
    this._OF = 1.0;
    this._aO = 0xffffff;
    this.alpha = 1.0;
    this.visible = true;
    this._Pi2 = false;
}
_5O.prototype._6O = function() {
    var _dh = _Ee._Vg(this.index);
    if (_dh != null) {
        var _L1 = _dh._Xg;
        if (_L1.tp >= _P1.length) return;
        if (!_P1[_L1.tp].complete) return;
        if (this.xo < 0) {
            this.w += this.xo;
            this.xo = 0;
        }
        if (this.yo < 0) {
            this.h += this.yo;
            this.yo = 0;
        }
        if (_L1 != null) {
            if ((this.xo + this.w) >= _L1.w) {
                this.w = _L1.w - this.xo;
            }
            if ((this.yo + this.h) >= _L1.h) {
                this.h = _L1.h - this.yo;
            }
        }
    }
};

function _Rf2(_Qi2) {
    var _4O = new _5O();
    if (_Qi2.x != undefined) _4O.x = _Qi2.x;
    if (_Qi2.y != undefined) _4O.y = _Qi2.y;
    if (_Qi2.index != undefined) _4O.index = _Qi2.index;
    if (_Qi2.xo != undefined) _4O.xo = _Qi2.xo;
    if (_Qi2.yo != undefined) _4O.yo = _Qi2.yo;
    if (_Qi2.w != undefined) _4O.w = _Qi2.w;
    if (_Qi2.h != undefined) _4O.h = _Qi2.h;
    if (_Qi2.depth != undefined) _4O.depth = _Qi2.depth;
    if (_Qi2.id != undefined) _4O.id = _Qi2.id;
    if (_Qi2.scaleX != undefined) _4O._NF = _Qi2.scaleX;
    if (_Qi2.scaleY != undefined) _4O._OF = _Qi2.scaleY;
    if (_Qi2.colour != undefined) {
        _4O._aO = (_Qi2.colour & 0xffffff);
        _4O.alpha = ((_Qi2.colour >> 24) & 0xff) / 255.0;
    }
    _4O._6O();
    if (_JX1 < _Qi2.id) _JX1 = _Qi2.id + 1;
    return _4O;
}
_5O.prototype._L4 = function() {
    if (!this.visible) return false;
    var _dh = _Ee._Vg(this.index);
    if (_dh != null) {
        var _L1 = _dh._Xg;
        if ((_L1._T1 instanceof HTMLImageElement) && (_L1.tp >= _P1.length)) return;
        if ((_P1[_L1.tp] instanceof HTMLImageElement) && (!_P1[_L1.tp].complete)) return;
        var _q2 = _L1.w / _L1.ow;
        var _r2 = _L1.h / _L1.oh;
        if (!_b4) {
            _95.globalAlpha = this.alpha;
            if (this._aO != 0xffffff) {
                _v52 = _b5(_L1, this._aO);
                if (this._NF <= 0 || this._OF <= 0) {
                    _G52(this.x, this.y, this._NF, this._OF, 0.0);
                    _95._hM(_v52, (this.xo * _q2), (this.yo * _r2), this.w * _q2, this.h * _r2, 0, 0, this.w, this.h);
                    _H52();
                } else {
                    _95._hM(_v52, (this.xo * _q2), (this.yo * _r2), (this.w * _q2), (this.h * _r2), this.x, this.y, this.w * this._NF, this.h * this._OF);
                }
            } else {
                var _O1 = -1;
                if (_L1._T1 instanceof HTMLImageElement) _O1 = _P1[_L1.tp];
                else _O1 = _L1._T1;
                if (this._NF <= 0 || this._OF <= 0) {
                    _G52(this.x, this.y, this._NF, this._OF, 0.0);
                    _95._hM(_O1, _L1.x + (this.xo * _q2), _L1.y + (this.yo * _q2), this.w * _q2, this.h * _r2, 0, 0, this.w, this.h);
                    _H52();
                } else {
                    _95._hM(_O1, _L1.x + (this.xo * _q2), _L1.y + (this.yo * _q2), this.w * _q2, this.h * _r2, this.x, this.y, this.w * this._NF, this.h * this._OF);
                }
            }
        } else {
            var _F4 = this._aO | ((this.alpha * 255) << 24);
            _95._hM(_L1, _L1.x + (this.xo * _q2), _L1.y + (this.yo * _q2), this.w * _q2, this.h * _q2, this.x, this.y, this.w * this._NF, this.h * this._OF, _F4);
        }
    }
};

function _Ri2(_O12) {
    this.__type = "[Timeline]";
    if ((_O12 != null) && (_O12 != undefined)) {
        this.pName = _O12.pName;
        this.Events = _O12.Events;
    } else {
        this.pName = "";
        this.Events = [];
    }
}
_Ri2.prototype._gN1 = function(_Si2) {
    if (this.Events.length == 0) {
        return 0;
    }
    if (_Si2 > this.Events[this.Events.length - 1].Time) {
        return this.Events.length;
    }
    for (var i = 0; i < this.Events.length; i++) {
        if (this.Events[i].Time >= _Si2) {
            return i;
        }
    }
    return this.Events.length;
};
_Ri2.prototype._hN1 = function(_Si2) {
    if (this.Events.length == 0) {
        return 0;
    }
    if (_Si2 < this.Events[0].Time) {
        return -1;
    }
    for (var i = this.Events.length - 1; i >= 0; i--) {
        if (this.Events[i].Time <= _Si2) {
            return i;
        }
    }
    return -1;
};
_Ri2.prototype._qO = function() {
    return this.Events[this.Events.length - 1].Time;
};

function _TY1() {
    this.Timelines = [];
}
_TY1.prototype._1b = function(_O12) {
    var _Wg = null;
    if (_O12 != null) {
        _Wg = new _Ri2(_O12);
    }
    this.Timelines[this.Timelines.length] = _Wg;
};
_TY1.prototype._O3 = function(_F1) {
    if ((_F1 < 0) || (_F1 >= this.Timelines.length)) {
        return undefined;
    }
    return this.Timelines[_F1];
};
_TY1.prototype._Ti2 = function(_a1) {
    for (var i = 0; i < this.Timelines.length; i++) {
        if (this.Timelines[i].pName == _a1) {
            return i;
        }
    }
    return -1;
};
_TY1.prototype._U9 = function(_F1) {
    if ((_F1 >= 0) || (_F1 < this.Timelines.length)) {
        this.Timelines[_F1].Events._U9();
    }
};
_TY1.prototype._kO = function() {
    var index = this.Timelines.length;
    var _ws = new _Ri2(null);
    _ws.pName = "__newtimeline" + index;
    this.Timelines[index] = _ws;
    return index;
};
_TY1.prototype._4d = function(_F1) {
    if ((_F1 >= 0) || (_F1 < this.Timelines.length)) {
        this.Timelines[_F1] = null;
    }
};
_TY1.prototype._pO = function(_F1, _Si2, _mO) {
    if ((_F1 >= 0) || (_F1 < this.Timelines.length)) {
        var _ws = this.Timelines[_F1];
        var _ab2 = _ws._hN1(_Si2) + 1;
        var _Sh = [];
        _Sh.Time = _Si2;
        _Sh.Event = _mO;
        _ws.Events.splice(_ab2, 0, _Sh);
    }
};
_TY1.prototype._rO = function(_F1, _Si2) {
    if ((_F1 >= 0) || (_F1 < this.Timelines.length)) {
        var _ws = this.Timelines[_F1];
        for (var i = 0; i < _ws.Events.length; i++) {
            if (_ws.Events[i].Time == _Si2) {
                _ws.Events.splice(i, 1);
                break;
            }
        }
    }
};

function _Ui2() {
    pName = "";
    moment = 0;
    _Vi2 = "";
    pFunc = null;
}

function _yZ1(_Wi2) {
    if (!_Wi2) {
        this._4c = [];
    } else {
        this._4c = _Wi2;
    }
}
_yZ1.prototype._Ti2 = function(_oY1) {
    for (var i = 1; i < this._4c.length; i++) {
        if (this._4c[i].pFunc == _oY1) {
            return i;
        }
    }
    return -1;
};
_yZ1.prototype._O3 = function(_tb) {
    return this._4c[_tb];
};
_yZ1.prototype._M12 = function(_Xi2) {
    for (var i = 1; i < this._4c.length; i++) {
        var _Xb2 = this._4c[i];
        if (_Xb2.moment == _Xi2) {
            _ge._B2(_6Q1, i);
        }
    }
};

function _Yi2(_A72, _Zi2) {
    this.__type = "[Array]";
    this._qG = _A72;
    this.__i2 = [];
    this._0j2 = _Zi2;
}

function array_get_2D(_Cz,
    _1j2, _2j2) {
    return _Cz[_1j2][_2j2];
}

function array_set_2D(_Cz, _1j2, _2j2, _27) {
    if (!(_Cz[_1j2] instanceof Array)) _Cz[_1j2] = [];
    _Cz[_1j2][_2j2] = _27;
}

function array_set_2D_pre(_Cz, _1j2, _2j2, _27) {
    if (!(_Cz[_1j2] instanceof Array)) _Cz[_1j2] = [];
    _Cz[_1j2][_2j2] = _27;
    return _27;
}

function array_set_2D_post(_Cz, _1j2, _2j2, _27) {
    if (!(_Cz[_1j2] instanceof Array)) _Cz[_1j2] = [];
    var _db = _Cz[_1j2][_2j2];
    _Cz[_1j2][_2j2] = _27;
    return _db;
}

function array_get(_Cz, _1j2) {
    return _Cz[_1j2];
}

function array_set(_Cz, _1j2, _27) {
    if (!(_Cz instanceof Array)) _Cz = [];
    _Cz[_1j2] = _27;
}

function array_set_pre(_Cz, _1j2, _27) {
    if (!(_Cz instanceof Array)) _Cz = [];
    _Cz[_1j2] = _27;
    return _27;
}

function array_set_post(_Cz, _1j2, _27) {
    if (!(_Cz instanceof Array)) _Cz = [];
    var _db = _Cz[_1j2];
    _Cz[_1j2] = _27;
    return _db;
}

function _3j2(_a1) {
    return "\"" + _a1.substr(5, _a1.length - 7) + "\"";
}

function _4j2(_a1) {
    return _a1.substr(5, _a1.length - 7);
}

function variable_global_exists(_ae) {
    _56("variable_global_exists");
}

function variable_local_exists(_7i, _ae) {
    _56("variable_local_exists");
}

function variable_global_get(_ae) {
    _56("variable_global_get");
}

function variable_global_set(_a1, _f2) {
    _56("variable_global_set");
}

function variable_local_get(_7i, _ae) {
    _56("variable_local_get");
    return _ae;
}

function variable_local_set(_a1, _f2) {
    _56("variable_local_set");
}

function variable_global_array_get(_a1, _F1) {
    _56("variable_global_array_get");
    return 0;
}

function variable_global_array_set(_a1, _YB, _qe) {
    _56("variable_global_array_set");
}

function variable_global_array2_get(_a1, _YB, _R2) {
    _56("variable_global_array2_get");
    return 0;
}

function variable_global_array2_set(_a1,
    _YB, _R2, _qe) {
    _56("variable_global_array2_set");
    return 0;
}

function variable_local_array_get(_td, _a1, _F1) {
    _56("variable_local_array_get");
    return 0;
}

function variable_local_array_set(_td, _a1, _YB, _qe) {
    _56("variable_local_array_set");
}

function variable_local_array2_get(_td, _a1, _YB, _R2) {
    _56("variable_local_array2_get");
    return 0;
}

function variable_local_array2_set(_td, _a1, _YB, _R2, _qe) {
    _56("variable_local_array2_set");
}

function vertex_format_begin() {
    _56("vertex_format_begin");
}

function vertex_format_end() {
    _56("vertex_format_end");
}

function vertex_format_delete(_5j2) {
    _56("vertex_format_delete");
}

function vertex_format_add_position() {
    _56("vertex_format_add_position");
}

function vertex_format_add_position_3d() {
    _56("vertex_format_add_position_3d");
}

function vertex_format_add_colour() {
    _56("vertex_format_add_colour");
}

function vertex_format_add_normal() {
    _56("vertex_format_add_normal");
}

function vertex_format_add_textcoord() {
    _56("vertex_format_add_textcoord");
}

function vertex_format_add_custom(type, _D7) {
    _56("vertex_format_add_custom");
}
var _6j2 = null;

function _7j2() {
    vertex_format_begin = _8j2;
    vertex_format_end = _9j2;
    vertex_format_delete = _aj2;
    vertex_format_add_position = _bj2;
    vertex_format_add_position_3d = _cj2;
    vertex_format_add_colour = _dj2;
    vertex_format_add_normal = _ej2;
    vertex_format_add_textcoord = _fj2;
    vertex_format_add_custom = _gj2;
}

function _8j2() {
    if (_6j2 != null) {
        debug("ERROR vertex_format_begin: Vertex format is already under construction");
    } else {
        _6j2 = new _zl1();
    }
}

function _bj2() {
    if (_6j2 == null) {
        debug("ERROR vertex_format_add_position: No vertex format is under construction");
    } else {
        _6j2._8s1();
    }
}

function _cj2() {
    if (_6j2 == null) {
        debug("ERROR vertex_format_add_position_3d: No vertex format is under construction");
    } else {
        _6j2._Kl1();
    }
}

function _dj2() {
    if (_6j2 == null) {
        debug("ERROR vertex_format_add_colour: No vertex format is under construction");
    } else {
        _6j2._Ll1();
    }
}

function _ej2() {
    if (_6j2 == null) {
        debug("ERROR vertex_format_add_normal: No vertex format is under construction");
    } else {
        _6j2._Nl1();
    }
}

function _fj2() {
    if (_6j2 == null) {
        debug("ERROR vertex_format_add_textcoord: No vertex format is under construction");
    } else {
        _6j2._Ml1();
    }
}

function _gj2(_y7, _x7) {
    if (_6j2 == null) {
        debug("ERROR vertex_format_add_normal: No vertex format is under construction");
    } else {
        _6j2._9s1(_y7, _x7);
    }
}

function _9j2() {
    if (_6j2 == null) {
        debug("ERROR vertex_format_end: No vertex format under construction");
        return -1;
    }
    var _7r1 = _b4._Ql1(_6j2);
    _6j2 = null;
    return _7r1;
}

function _aj2(_hj2) {
    debug("WARNING vertex_format_delete not implemented on HTML5 (System shares vertex formats but doesn't reference count)");
}

function _9Y1() {
    this.__type = "[View]";
    this.visible = false;
    this._OG = 0;
    this._PG = 0;
    this._QG = 640;
    this._RG = 480;
    this._SG = 0;
    this._TG = 0;
    this._UG = 640;
    this._VG = 480;
    this._E4 = 0;
    this._aa = 0;
    this._ca = 0;
    this._ba = 0;
    this._da = 0;
    this._FN = 0;
    this._GN = 0;
    this._lg2 = 1;
    this._mg2 = 1;
    this.hborder = 32;
    this.vborder = 32;
    this.hspeed = -1;
    this.vspeed = -1;
    this._Pd = -1;
    this._3g2 = -1;
}
_9Y1.prototype._Ya = function(_Za) {
    this.visible = _Za.visible;
    this._OG = _Za._OG;
    this._PG = _Za._PG;
    this._QG = _Za._QG;
    this._RG = _Za._RG;
    this._SG = _Za._SG;
    this._TG = _Za._TG;
    this._UG = _Za._UG;
    this._VG = _Za._VG;
    this._E4 = _Za._E4;
    this._aa = _Za._aa;
    this._ca = _Za._ca;
    this._ba = _Za._ba;
    this._da = _Za._da;
    this._FN = _Za._FN;
    this._GN = _Za._GN;
    this._lg2 = _Za._lg2;
    this._mg2 = _Za._mg2;
    this.hborder = _Za.hborder;
    this.vborder = _Za.vborder;
    this.hspeed = _Za.hspeed;
    this.vspeed = _Za.vspeed;
    this._Pd = _Za._Pd;
    this._3g2 = _Za._3g2;
};
_9Y1.prototype._ea = function(_h2) {
    return ((_h2 - _9a.left - this._aa) / this._lg2) + this._OG;
};
_9Y1.prototype._fa = function(_i2) {
    return ((_i2 - _9a.top - this._ca) / this._mg2) + this._PG;
};

function _Sf2(_ij2) {
    _5l = new _9Y1();
    if (_ij2.visible != undefined) _5l.visible = _ij2.visible;
    if (_ij2.xview != undefined) _5l._OG = _ij2.xview;
    if (_ij2.yview != undefined) _5l._PG = _ij2.yview;
    if (_ij2.wview != undefined) _5l._QG = _ij2.wview;
    if (_ij2.hview != undefined) _5l._RG = _ij2.hview;
    if (_ij2.xport != undefined) _5l._SG = _ij2.xport;
    if (_ij2.yport != undefined) _5l._TG = _ij2.yport;
    if (_ij2.wport != undefined) _5l._UG = _ij2.wport;
    if (_ij2.hport != undefined) _5l._VG = _ij2.hport;
    if (_ij2._E4 != undefined) _5l._VG = _ij2._E4;
    if (_ij2.hborder != undefined) _5l.hborder = _ij2.hborder;
    if (_ij2.vborder != undefined) _5l.vborder = _ij2.vborder;
    if (_ij2.hspeed != undefined) _5l.hspeed = _ij2.hspeed;
    if (_ij2.vspeed != undefined) _5l.vspeed = _ij2.vspeed;
    if (_ij2.index != undefined) _5l._Pd = _ij2.index;
    return _5l;
}
var _b4 = null;
var _jj2 = null;
var _kj2 = null;
var _Pk = false,
    _2l = false,
    _lj2 = _H5._Eo1,
    _mj2 = _H5._Fo1,
    _nj2 = 0,
    _oj2 = 0.0,
    _pj2 = [],
    __k = {
        _4j: true,
        _5j: true,
        _6j: true,
        alpha: true
    };
var _Y5 = 0.0,
    _Rk = true,
    _Tk = true,
    _Vk = true,
    _qj2 = _H5._ll;
var _Gl = null,
    _Ll = null,
    _Kl = null,
    _Pl = null,
    _Rl = null,
    _Nl = [];
var _A52 = false,
    _cw = false,
    _fw = 1.0;
var _rj2 = [];
var _Em = null,
    _sj2 = null,
    _tj2 = 0;
var _uj2 = 0,
    _vj2 = 1,
    _8m = 2,
    _wj2 = 16;
var _xj2 = [];
var _U6 = 16384;
var _yj2 = 36,
    _zj2 = [],
    _Aj2 = [];

function _L62() {
    _Gj();
    _7j2();
    _G32();
    _p6();
    _Bj2(_yj2);
    _07 = _Cj2;
    _IN = _Dj2;
    _HN = _Ej2;
    _H52 = _Fj2;
    _p62 = _Gj2;
    _Au = _Hj2;
    _G52 = _Ij2;
    _v62 = _Jj2;
    _x62 = _Kj2;
    _262 = _Lj2;
    _A62 = _Mj2;
    _C62 = _Nj2;
    _E62 = _Oj2;
    _472 = _Pj2;
    _ih = _Qj2;
    _kh = _Rj2;
    _ph = _Sj2;
    _m72 = _Tj2;
    _G62 = _Uj2;
    _H62 = _Vj2;
    _nh = _Wj2;
    draw_rectangle = _Xj2;
    draw_roundrect_color_ext = _Yj2;
    draw_rectangle_color = _Zj2;
    draw_roundrect_colour_ext = _Yj2;
    draw_rectangle_colour = _Zj2;
    _dg = __j2;
    draw_point = _0k2;
    draw_getpixel = _1k2;
    draw_getpixel_ext = _2k2;
    draw_triangle = _3k2;
    draw_triangle_color = _4k2;
    draw_ellipse_color = _5k2;
    draw_circle_color = _6k2;
    draw_point_color = _7k2;
    draw_triangle_colour = _4k2;
    draw_ellipse_colour = _5k2;
    draw_circle_colour = _6k2;
    draw_point_colour = _7k2;
    draw_line = _8k2;
    draw_line_width = _9k2;
    draw_line_width_color = _ak2;
    draw_line_width_colour = _ak2;
    draw_clear_alpha = _bk2;
    draw_set_color = _ck2;
    draw_set_colour = _ck2;
    draw_set_alpha = _dk2;
    draw_set_blend_mode_ext = _ek2;
    draw_enable_alphablend = _fk2;
    draw_surface = _gk2;
    draw_path = _hk2;
    mp_grid_draw = _ik2;
    _b4._hM = _jk2;
    surface_create = _kk2;
    surface_set_target = _lk2;
    _sN = _mk2;
    surface_reset_target = _nk2;
    surface_free = _ok2;
    surface_getpixel = _pk2;
    surface_getpixel_ext = _qk2;
    surface_copy = _rk2;
    surface_copy_part = _sk2;
    background_create_from_screen = _tk2;
    background_create_from_surface = _uk2;
    sprite_add_from_screen = _vk2;
    sprite_create_from_surface = _wk2;
    sprite_add_from_surface = _xk2;
    _bH = _yk2;
    _cH = _zk2;
    _dH = _Ak2;
    _eH = _Bk2;
    _fH = _Ck2;
    _gH = _Dk2;
    _hH = _Ek2;
    _iH = _Fk2;
    _jH = _Gk2;
    _kH = _Hk2;
    _lH = _Ik2;
    _mH = _Jk2;
    _nH = _Kk2;
    _oH = _Lk2;
    shaders_are_supported = _Mk2;
    texture_set_blending = _Nk2;
    texture_set_repeat = _Ok2;
    texture_set_repeat_ext = _Pk2;
    texture_set_interpolation = _Qk2;
    texture_set_interpolation_ext = _Rk2;
    _ql = _Sk2;
    texture_get_width = _Tk2;
    texture_get_height = _Uk2;
    draw_set_alpha_test = _Vk2;
    draw_set_alpha_test_ref_value = _Wk2;
    draw_get_alpha_test = _Xk2;
    draw_get_alpha_test_ref_value = _Yk2;
    _Zk2();
}

function __k2(_0l1) {
    var options = {
        _Gl1: ((_Pn.Swfs !== undefined) ? true : false),
        _Hl1: (_Pn.Options._0l2 ? true : false),
        _sl1: _AX1
    };
    _b4 = new __k1(_0l1, options);
    if (!_b4._gl1) {
        _b4 = null;
        return false;
    }
    if (!_1l2()) return false;
    if (!_2l2()) return false;
    if (!_3l2()) return false;
    _Em = [];
    _Em[_uj2] = new _6l();
    _Em[_vj2] = new _6l();
    _Em[_8m] = new _6l();
    _sj2 = [];
    for (var i = 0; i < _wj2; i++) {
        _sj2[i] = new _6l();
    }
    _tj2 = -1;
    _hl = 1;
    _rX1 = new _6l();
    _sX1 = new _6l();
    var _4l2 = _b4._7n1();
    for (var i = 0; i < _4l2; i++) {
        _pj2[i] = false;
    }
    return true;
}

function _Bj2(_Tr) {
    _yj2 = 4 * (_e3(64, _c3(4, _Tr)) / 4);
    _zj2[0] = 1;
    _Aj2[0] = 0;
    for (var i = 1; i < _yj2; i++) {
        _zj2[i] = Math.cos(i * 2 * Math.PI / _yj2);
        _Aj2[i] = Math.sin(i * 2 * Math.PI / _yj2);
    }
    _zj2[_yj2] = 1;
    _Aj2[_yj2] = 0;
}

function _Zk2() {
    d3d_set_fog(0, 0xff000000, 0, 0);
    draw_set_alpha_test(0);
    draw_get_alpha_test_ref_value(0);
    _5l2();
}

function _1l2() {
    return _6l2();
}

function _2l2() {
    var _7l2 = document.createElement(_eo);
    _7l2._a7 = _7l2.width = 16;
    _7l2._b7 = _7l2.height = 16;
    _7l2.complete = true;
    _7l2._lN = false;
    _7l2.name = "";
    _7l2._95 = _7l2.getContext('2d');
    _7l2._95.save();
    _7l2._95.setTransform(1, 0, 0, 1, 0, 0);
    _7l2._95.globalAlpha = 1;
    _7l2._95.fillStyle = '#ffffff';
    _7l2._95.fillRect(0, 0, 16, 16);
    _7l2._95.restore();
    var _L1 = new _5h();
    _L1.x = 0;
    _L1.y = 0;
    _L1.w = 15;
    _L1.h = 15;
    _L1.XOffset = 0;
    _L1.YOffset = 0;
    _L1.CropWidth = 15;
    _L1.CropHeight = 15;
    _L1.ow = _L1.w;
    _L1.oh = _L1.h;
    _L1.tp = -1;
    _L1._T1 = _7l2;
    _L1._m4 = [];
    _L1._o4 = 1;
    _L1._n4 = 0;
    _D5(_L1);
    _b4._go1(_L1._T1._C5);
    return true;
}

function _3l2() {
    _Gl = new Float32Array(_H5._mo1 * 4);
    _Ll = new Float32Array(_H5._mo1 * 4);
    _Kl = new Float32Array(_H5._mo1 * 4);
    _Pl = new Float32Array(4);
    var _Fl;
    for (var i = 0; i < _H5._mo1; i++) {
        _Kl[i] = 0;
        _Fl = i * 4;
        _Gl[_Fl + 0] = 0;
        _Gl[_Fl + 1] = 0;
        _Gl[_Fl + 2] = 0;
        _Gl[_Fl + 3] = 0;
        _Ll[_Fl + 0] = 0;
        _Ll[_Fl + 1] = 0;
        _Ll[_Fl + 2] = 0;
        _Ll[_Fl + 3] = 0;
        _Nl[i] = false;
    }
    return true;
}

function _5l2() {
    var _8l2 = sprite_get_texture;
    sprite_get_texture = function(_RM,
        _9l2) {
        var _T1 = _8l2(_RM, _9l2);
        if (_T1 && !_T1._R6._C5) {
            _D5(_T1._S6);
        }
        return _T1;
    };
    var _al2 = background_get_texture;
    background_get_texture = function(_F1) {
        var _T1 = _al2(_F1);
        if (_T1 && !_T1._R6._C5) {
            _D5(_T1._S6);
        }
        return _T1;
    };
}

function _Mj2() {
    _b4._zm1();
    _b4._3l(_4l());
    _b4._Wm1(_nj2, _oj2);
    _b4._Sl(_Rl);
    _b4._Ql(_Pl);
    _b4._0l(__k._4j, __k._5j, __k._6j, __k.alpha);
    for (var i = 0; i < _H5._mo1; i++) {
        _b4._Ml(i, _Ll.subarray(i * 4, (i + 1) * 4), _Gl.subarray(i * 4, (i + 1) * 4), _Kl.subarray(i * 4, (i + 1) * 4));
    }
}

function _Nj2() {
    _b4._Am1();
}

function _Jj2(_bl2) {
    if (_bl2) {
        _jj2 = {};
        if (_bl2._xg2) {
            _jj2._Pk = _Pk;
            _jj2._2l = _2l;
            _jj2._Rl = new Float32Array(_Rl);
            _Pk = false;
            _2l = false;
            d3d_set_fog(0, 0xff000000, 0, 0);
            _b4._Qk(false);
            _b4._Uk(false);
            _b4._Sk(false);
            _b4._3l(_4l());
        }
        if (_bl2._yg2) {
            _jj2._cl2 = _lj2;
            _jj2._dl2 = _mj2;
            _b4._Cm1(_H5._Bo1, _H5._Ao1);
        }
    }
}

function _Kj2(_el2) {
    if (_jj2 && _el2) {
        if (_el2._zg2) {
            _Pk = _jj2._Pk;
            _2l = _jj2._2l;
            _Rl = new Float32Array(_jj2._Rl);
            _b4._Sl(_Rl);
            if (_Pk) {
                _b4._Qk(_Rk);
                _b4._Sk(_Tk);
                _b4._Uk(_Vk);
            }
            _b4._3l(_4l());
        }
        if (_el2._Ag2) {
            _b4._Cm1(_jj2._cl2, _jj2._dl2);
        }
        _jj2 = null;
    }
}

function _4l() {
    var _1m1 = undefined;
    if (_2l) {
        _1m1 = _b4._il1;
    } else {
        _1m1 = _b4._hl1;
    }
    return _1m1;
}

function _Gj2(_Ed, _Fd, _Y62, _Z62) {
    var _fl2 = _CO;
    var _gl2 = _DO;
    _sX1._Vt1();
    var w = _CO / _Ed;
    var h = _DO / _Fd;
    _sX1._9m((_fl2 * -0.5 + _Y62) / _Ed, (_gl2 * -0.5 + _Z62) / _Fd, 16000);
    _rX1._nl(w, -h * _hl, 1.0, 32000.0);
    _7m(_vj2, _sX1);
    _7m(_uj2, _rX1);
}

function _Dj2(__62, _072, _172, _272, _l2) {
    if (!_Pk) {
        _U62(__62, _072, _172, _272, _l2);
    } else {
        var _E4 = -_l2 * (Math.PI / 180.0);
        var _V62 = new _7l((__62 + _172 / 2.0), (_072 + _272 / 2.0), -_172);
        var _W62 = new _7l((__62 + _172 / 2.0), (_072 + _272 / 2.0),
            0.0);
        var _X62 = new _7l(Math.sin(_E4), Math.cos(_E4), 0.0);
        _sX1._al(_V62, _W62, _X62);
        _rX1._ol(1.0, _272 / _172, 1.0, 32000.0);
        _rX1.__2[_gl] *= _hl;
    }
    _7m(_vj2, _sX1);
    _7m(_uj2, _rX1);
    _7m(_8m, _Em[_8m]);
    _562 = __62;
    _662 = _072;
    _762 = _172;
    _862 = _272;
}

function _Ej2(_Vl1, _Wl1, _Xl1, _Yl1) {
    _Fu = _Vl1;
    _Gu = _Wl1;
    _Hu = _Xl1;
    _Iu = _Yl1;
    var _n3 = _Wl1;
    if (_hl == 1) {
        _n3 = window_get_height() - (_Yl1 + _Wl1);
    }
    _b4._Ul1(_Vl1, _n3, _Xl1, _Yl1);
}

function _Hj2(_e7) {
    _b4._En1(true, true, false, _07(_e7) | 0xff000000);
}

function _bk2(_e7, __6) {
    var _F4 = ((__6 * 255.0) << 24) | _07(_e7);
    _b4._En1(true, true, false, _F4);
}

function _Cj2(_e7) {
    return (_e7 & 0x00ffffff);
}

function _dk2(__6) {
    if (__6 < 0) {
        __6 = 0;
    }
    if (__6 > 1) {
        __6 = 1;
    }
    _X6 = __6;
}

function _Fj2(_od) {
    if (_Fj2.arguments.length > 0) {
        var _Du = _Fj2.arguments[0];
    } else {}
}

function _Ij2(_h2, _i2, _I1, _J1, _l2) {}

function _Lj2(_Le, _Ge, _h2, _i2, _Ie, _Je, _l2, _e7, __6) {
    if (!_kj2) {
        var _D3 = 1024;
        var _E3 = 1024;
        var _yh = _372(_D3, _E3);
        var _L1 = new _5h();
        _L1.x = 0;
        _L1.y = 0;
        _L1.w = _D3;
        _L1.h = _E3;
        _L1.XOffset = 0;
        _L1.YOffset = 0;
        _L1.CropWidth = _L1.w;
        _L1.CropHeight = _L1.h;
        _L1.ow = _L1.w;
        _L1.oh = _L1.h;
        _L1.tp = _yh;
        _L1._T1 = _P1[_L1.tp];
        _kj2 = _L1;
    }
    var c = document.createElement("canvas");
    var _l5 = c.getContext("2d");
    _Le = "20px arial";
    _l5.font = _Le;
    _l5.textBaseline = "top";
    _l5.textAlign = "left";
    var _hl2 = _l5.measureText(_Ge);
    var width = _hl2.width;
    var height = 20;
    c.width = width;
    c.height = height;
    _l5.globalAlpha = 0.0;
    _l5.globalCompositeOperation = "copy";
    _l5.fillStyle = "black";
    _l5.fillRect(0, 0, c.width, c.height);
    _l5.globalAlpha = 1.0;
    _l5.globalCompositeOperation = "source-over";
    _l5.fillStyle = "white";
    _l5.fillText(_Ge, 0, 0);
}

function _zm(_yj) {
    if (_tj2 >= _wj2) {
        return false;
    }
    _tj2++;
    if (_tj2 == 0) {
        _sj2[_tj2] = new _6l(_yj);
    } else {
        _sj2[_tj2]._im(_sj2[_tj2 - 1], _yj);
    }
    return true;
}

function _Am(_yj) {
    if (_tj2 < 0) {
        return false;
    }
    _7m(_8m, _sj2[_tj2]);
    _tj2--;
    return true;
}

function _xm() {
    _tj2 = -1;
}

function _ym() {
    if (_tj2 < 0) {
        return true;
    }
    return false;
}

function _Bm() {
    if (_tj2 < 0) {
        return false;
    }
    _7m(_8m, _sj2[_tj2]);
    return true;
}

function _Cm() {
    if (_tj2 < 0) {
        return false;
    }
    _tj2--;
    return true;
}

function _Qj2(_HM, _h2, _i2, __6) {
    var _F5, _kb2, _il2, _N5, _P5, _R5, _F4;
    if (!_HM._T1._C5) _D5(_HM);
    _F5 = _b4._G5(_H5._I5,
        _HM._T1._C5, _b4._J5, 6);
    var _K5 = _F5._L5() >> 2;
    var index = _K5 * _F5._M5;
    _F5._M5 += 6;
    var _T5 = index;
    var _U5 = _T5 + _K5;
    var _Z1 = _U5 + _K5;
    var _V5 = _Z1 + _K5;
    var _W5 = _V5 + _K5;
    var _X5 = _W5 + _K5;
    _N5 = _F5._O5;
    _P5 = _F5._Q5;
    _R5 = _F5._S5;
    _h2 = _h2 + _HM.XOffset;
    _i2 = _i2 + _HM.YOffset;
    _N5[_T5 + 0] = _N5[_W5 + 0] = _N5[_X5 + 0] = _h2;
    _N5[_T5 + 1] = _N5[_U5 + 1] = _N5[_X5 + 1] = _i2;
    _N5[_U5 + 0] = _N5[_Z1 + 0] = _N5[_V5 + 0] = _h2 + _HM.CropWidth;
    _N5[_Z1 + 1] = _N5[_V5 + 1] = _N5[_W5 + 1] = _i2 + _HM.CropHeight;
    _N5[_T5 + 2] = _N5[_U5 + 2] = _N5[_Z1 + 2] = _N5[_V5 + 2] = _N5[_W5 + 2] = _N5[_X5 + 2] = _Y5;
    _R5[_T5 + 0] = _R5[_W5 + 0] = _R5[_X5 + 0] = _HM.x / _HM._T1.width;
    _R5[_T5 + 1] = _R5[_U5 + 1] = _R5[_X5 + 1] = _HM.y / _HM._T1.height;
    _R5[_U5 + 0] = _R5[_Z1 + 0] = _R5[_V5 + 0] = (_HM.x + _HM.w) / _HM._T1.width;
    _R5[_Z1 + 1] = _R5[_V5 + 1] = _R5[_W5 + 1] = (_HM.y + _HM.h) / _HM._T1.height;
    _F4 = ((__6 * 255.0) << 24) | 0xffffff;
    var _Oe = _F4,
        _Pe = _F4,
        _Qe = _F4,
        _Re = _F4;
    if (_A52) {
        _Oe &= 0xfffefffe;
        _Pe &= 0xfffefffe;
        _Qe &= 0xfffefffe;
        _Re &= 0xfffefffe;
        _Pe |= 0x00010000;
        _Qe |= 0x00000001;
        _Re |= 0x00010001;
    }
    _P5[_T5] = _P5[_X5] = _Oe;
    _P5[_U5] = _Pe;
    _P5[_Z1] = _P5[_V5] = _Qe;
    _P5[_W5] = _Re;
}

function _jk2(_HM, _Y62, _Z62, _jl2, _kl2, _h2, _i2, _Va, _Wa, _e7) {
    var _F5,
        _kb2, _il2, _N5, _P5, _R5, _F4;
    if (!_HM._T1._C5) _D5(_HM);
    if (_e7 == undefined) _e7 = 0xffffffff;
    _F5 = _b4._G5(_H5._I5, _HM._T1._C5, _b4._J5, 6);
    var _K5 = _F5._L5() >> 2;
    var index = _K5 * _F5._M5;
    _F5._M5 += 6;
    var _T5 = index;
    var _U5 = _T5 + _K5;
    var _Z1 = _U5 + _K5;
    var _V5 = _Z1 + _K5;
    var _W5 = _V5 + _K5;
    var _X5 = _W5 + _K5;
    _N5 = _F5._O5;
    _P5 = _F5._Q5;
    _R5 = _F5._S5;
    _N5[_T5 + 0] = _N5[_W5 + 0] = _N5[_X5 + 0] = _h2;
    _N5[_T5 + 1] = _N5[_U5 + 1] = _N5[_X5 + 1] = _i2;
    _N5[_U5 + 0] = _N5[_Z1 + 0] = _N5[_V5 + 0] = _h2 + _Va;
    _N5[_Z1 + 1] = _N5[_V5 + 1] = _N5[_W5 + 1] = _i2 + _Wa;
    _N5[_T5 + 2] = _N5[_U5 + 2] = _N5[_Z1 + 2] = _N5[_V5 + 2] = _N5[_W5 + 2] = _N5[_X5 + 2] = _Y5;
    _R5[_T5 + 0] = _R5[_W5 + 0] = _R5[_X5 + 0] = _Y62 / _HM._T1.width;
    _R5[_T5 + 1] = _R5[_U5 + 1] = _R5[_X5 + 1] = _Z62 / _HM._T1.height;
    _R5[_U5 + 0] = _R5[_Z1 + 0] = _R5[_V5 + 0] = (_Y62 + _jl2) / _HM._T1.width;
    _R5[_Z1 + 1] = _R5[_V5 + 1] = _R5[_W5 + 1] = (_Z62 + _kl2) / _HM._T1.height;
    var _Oe = _e7,
        _Pe = _e7,
        _Qe = _e7,
        _Re = _e7;
    if (_A52) {
        _Oe &= 0xfffefffe;
        _Pe &= 0xfffefffe;
        _Qe &= 0xfffefffe;
        _Re &= 0xfffefffe;
        _Pe |= 0x00010000;
        _Qe |= 0x00000001;
        _Re |= 0x00010001;
    }
    _P5[_T5] = _P5[_X5] = _Oe;
    _P5[_U5] = _Pe;
    _P5[_Z1] = _P5[_V5] = _Qe;
    _P5[_W5] = _Re;
}

function _Rj2(_HM, _h2, _i2, _f72, _g72, vtiled, htiled,
    _e7, __6) {
    var _F5, _kb2, _il2, _N5, _P5, _R5, w, h;
    if (!_HM._T1._C5) _D5(_HM);
    _ll2 = _HM.ow + ~~_h2;
    _ml2 = _HM.oh + ~~_i2;
    var _D3 = ~~(_f72 * _HM.ow);
    var _E3 = ~~(_g72 * _HM.oh);
    var _nl2 = _CN._L2 - _CN.left;
    var _ol2 = _CN.bottom - _CN.top;
    if (htiled) {
        _h2 = (((~~(_CN.left / _D3)) * _D3) + (~~_h2) % _D3) - _D3;
        _ll2 = (((((_nl2 + (_D3 - 1)) / _D3) & 0xffffffff) + 2) * _D3) + ~~_h2 + 1;
    }
    if (vtiled) {
        _i2 = (((~~(_CN.top / _E3)) * _E3) + (~~_i2) % _E3) - _E3;
        _ml2 = (((((_ol2 + (_E3 - 1)) / _E3) & 0xffffffff) + 2) * _E3) + ~~_i2 + 1;
    }
    _h2 = ~~_h2;
    _i2 = ~~_i2;
    var _2M = 0;
    var _3M = 0;
    if ((_D3 <= 0) || (_E3 <= 0)) return;
    var colour = _07(_e7) | (~~((__6 * 255.0) << 24));
    var _Oe = colour,
        _Pe = colour,
        _Qe = colour,
        _Re = colour;
    if (_A52) {
        _Oe &= 0xfffefffe;
        _Pe &= 0xfffefffe;
        _Qe &= 0xfffefffe;
        _Re &= 0xfffefffe;
        _Pe |= 0x00010000;
        _Qe |= 0x00000001;
        _Re |= 0x00010001;
    }
    var _03 = (-_f72 * (_2M - _HM.XOffset));
    var _13 = (-_g72 * (_3M - _HM.YOffset));
    var _pl2 = _f72 * _HM.CropWidth;
    var _ql2 = _g72 * _HM.CropHeight;
    var _l3 = _h2 + _03;
    var _n3 = ~~_i2 + _13;
    var _W1 = _HM.x;
    var _Y1 = _W1 + _HM.w;
    var _X1 = _HM.y;
    var _Z1 = _HM.y + _HM.h;
    _W1 /= _HM._T1.width;
    _Y1 /= _HM._T1.width;
    _X1 /= _HM._T1.height;
    _Z1 /= _HM._T1.height;
    var _Nv = _n3;
    while (_l3 < _ll2) {
        _n3 = _Nv;
        var _Cv = _l3 + _pl2;
        while (_n3 < _ml2) {
            _F5 = _b4._G5(_H5._I5, _HM._T1._C5, _b4._J5, 6);
            var _K5 = _F5._L5() >> 2;
            var index = _K5 * _F5._M5;
            _F5._M5 += 6;
            _N5 = _F5._O5;
            _P5 = _F5._Q5;
            _R5 = _F5._S5;
            var _Ev = _n3 + _ql2;
            _P5[index] = _Re;
            _N5[index + 0] = _l3;
            _N5[index + 1] = _n3;
            _N5[index + 2] = _Y5;
            _R5[index + 0] = _W1;
            _R5[index + 1] = _X1;
            index += _K5;
            _P5[index] = _Oe;
            _N5[index + 0] = _Cv;
            _N5[index + 1] = _n3;
            _N5[index + 2] = _Y5;
            _R5[index + 0] = _Y1;
            _R5[index + 1] = _X1;
            index += _K5;
            _P5[index] = _Pe;
            _N5[index + 0] = _Cv;
            _N5[index + 1] = _Ev;
            _N5[index + 2] = _Y5;
            _R5[index + 0] = _Y1;
            _R5[index + 1] = _Z1;
            index += _K5;
            _P5[index] = _Pe;
            _N5[index + 0] = _Cv;
            _N5[index + 1] = _Ev;
            _N5[index + 2] = _Y5;
            _R5[index + 0] = _Y1;
            _R5[index + 1] = _Z1;
            index += _K5;
            _P5[index] = _Qe;
            _N5[index + 0] = _l3;
            _N5[index + 1] = _Ev;
            _N5[index + 2] = _Y5;
            _R5[index + 0] = _W1;
            _R5[index + 1] = _Z1;
            index += _K5;
            _P5[index] = _Oe;
            _N5[index + 0] = _l3;
            _N5[index + 1] = _n3;
            _N5[index + 2] = _Y5;
            _R5[index + 0] = _W1;
            _R5[index + 1] = _X1;
            if (!vtiled) {
                break;
            }
            _n3 = _n3 + _E3;
        }
        if (!htiled) {
            break;
        }
        _l3 = _l3 + _D3;
    }
}

function _Uj2(_rl2, _q82, _Q4, _sl2, _tl2, x, y, _NF, _OF, _E4, _R4, alpha) {
    var _ul2 = __k;
    var _vl2 = _Pk;
    _Q4 = ~~_Q4 % (_q82._DI1);
    if (_Q4 < 0) {
        _Q4 = _Q4 + (_q82._DI1);
    }
    var _wl2 = [];
    _wl2[0] = _R4 & 0xff;
    _wl2[1] = (_R4 >> 8) & 0xff;
    _wl2[2] = (_R4 >> 16) & 0xff;
    _wl2[3] = (alpha * 255) & 0xff;
    var _xl2 = new _6l();
    _xl2._9m(x, y, 0.0);
    var _yl2 = new _6l();
    _yl2._dm(_E4);
    var _zl2 = new _6l();
    _zl2._9m(-_sl2 / _AI1, -_tl2 / _AI1, 0.0);
    var _Al2 = new _6l();
    _Al2._am(_AI1 * _NF, _AI1 * _OF, 1.0);
    var _Bl2 = new _6l();
    _Bl2._im(_zl2, _Al2);
    var _Cl2 = new _6l();
    _Cl2._im(_Bl2, _yl2);
    var _Dl2 = new _6l();
    _Dl2._im(_Cl2, _xl2);
    var translate = new _6l();
    translate._9m(0.5, 0.5, 0.0);
    var scale = new _6l();
    scale._am(1.0 / 32768.0, 1.0 / 32768.0, 1.0);
    var _El2 = new _6l();
    _El2._im(scale, translate);
    var _KI1 = _q82._JI1[_Q4];
    var _Fl2 = [],
        _Gl2 = 0,
        _Hl2 = 0,
        _Il2 = true;
    for (var i = 0; i < _KI1._LI1; i++) {
        var _5p = _KI1._MI1[i];
        for (var _k3 = 0; _k3 < _Gl2;) {
            var _Jl2 = _Fl2[_k3];
            if (_Jl2._NI1 < _5p.depth) {
                _b4._an1(_H5._jp1);
                _b4._cn1(_H5._bp1);
                _b4._0l(false, false, false, false);
                _b4._Sk(false);
                _Hl2 += _H62(_rl2, _Jl2, _Dl2, _El2, _R4, _wl2, false);
                _b4._fn1(_Gl2 - 1);
                _b4._an1(_H5._ep1);
                _b4._cn1(_H5._4p1);
                _b4._0l(_ul2._4j, _ul2._5j, _ul2._6j, _ul2.alpha);
                _b4._Sk(_vl2);
                _Il2 = true;
                _Gl2--;
                for (var _dt = _k3; _dt < _Gl2; _dt++) {
                    _Fl2[_dt] = _Fl2[_dt + 1];
                }
            } else {
                _k3++;
            }
        }
        if (_5p._NI1 > 0) {
            _Fl2[_Gl2++] = _5p;
            _b4._8n1(true);
            _b4._an1(_H5._jp1);
            _b4._cn1(_H5._ap1);
            _b4._0l(false, false, false, false);
            _b4._Sk(false);
            _Il2 = false;
        }
        if (_Gl2 == 0) {
            _b4._8n1(false);
            _Il2 = true;
        }
        _Hl2 += _H62(_rl2, _5p, _Dl2, _El2, _R4, _wl2, _Il2 ? _cw : false);
        if (_5p._NI1 > 0) {
            _b4._fn1(_Gl2);
            _b4._an1(_H5._ep1);
            _b4._cn1(_H5._4p1);
            _b4._0l(_ul2._4j, _ul2._5j, _ul2._6j, _ul2.alpha);
            _b4._Sk(_vl2);
            _Il2 = true;
        }
    }
    if (_Gl2 > 0) {
        _b4._an1(_H5._jp1);
        _b4._cn1(_H5._bp1);
        _b4._0l(false, false, false, false);
        _b4._Sk(false);
        for (var _k3 = 0; _k3 < _Gl2; _k3++) {
            var _Jl2 = _Fl2[_k3];
            _Hl2 += _H62(_rl2, _Jl2, _Dl2, _El2, _R4, _wl2, false);
        }
    }
    _b4._8n1(false);
    _b4._0l(_ul2._4j, _ul2._5j, _ul2._6j, _ul2.alpha);
    _b4._Sk(_vl2);
}

function _Vj2(_Gh2, _Kl2, _Ll2, _Ml2, _Nl2, _Ol2, _Pl2) {
    var _Ql2 = [];
    _Ql2[0] = _Ol2[0], _Ql2[1] = _Ol2[1], _Ql2[2] = _Ol2[2], _Ql2[3] = 0;
    var _Rl2 = new _6l();
    _Rl2._im(_Kl2._QH1, _Ll2);
    var _Sl2 = 1.0;
    if (_Pl2) {
        _Sl2 = _Tl2(_Kl2, _Rl2) * _fw;
    }
    var _OI1 = [],
        _PI1 = [],
        _Ul2 = [];
    for (var i = 0; i < 4; i++) {
        _OI1[i] = _Kl2._QI1[i];
        _PI1[i] = _Kl2._RI1[i];
        _Ul2[i] = _Kl2._SI1[i];
    }
    var _Vl2 = 0;
    if (_Kl2._gz !== 0) {
        var _5d = _Gh2[_Kl2.index];
        if (_5d.type === _oH1) {
            var _Hh2 = _5d;
            for (var _k3 = 0; _k3 < _Hh2._BH1.length; _k3++) {
                var _DK = _Hh2._BH1[_k3];
                for (var _dt = 0; _dt < _DK._EH1; _dt++) {
                    var _dI1 = _DK._IH1[_dt];
                    if ((_dI1._fI1 >= 0) && (_dI1._jI1 > 0)) {
                        var _Wl2 = _DK._GH1[_dI1._fI1];
                        if ((_Wl2 !== null) && (_Wl2 !== undefined)) {
                            var _NH1 = _Wl2.type;
                            if (_NH1 === _rH1) {
                                _Vl2 += _Xl2(_Kl2, _Wl2, _dI1, _Rl2, _Ol2, _Ql2, _OI1, _PI1, _Ul2, _Pl2);
                            } else if ((_NH1 == _sH1) || (_NH1 == _tH1)) {
                                _Vl2 += _Yl2(_Gh2, _Kl2, _NH1, _Wl2, _dI1, _Ml2, _Rl2, _Ol2, _Ql2, _Nl2, _OI1, _PI1, _Ul2, _Pl2);
                            }
                        }
                    }
                    if ((_dI1._gI1 >= 0) && (_dI1._lI1 > 0)) {
                        var _F4 = _DK._HH1[_dI1._gI1]._F4;
                        var _bI1 = [];
                        _bI1[0] = ((_F4 & 0xff) * _Ol2[0]) >> 8;
                        _bI1[1] = (((_F4 >> 8) & 0xff) * _Ol2[1]) >> 8;
                        _bI1[2] = (((_F4 >> 16) & 0xff) * _Ol2[2]) >> 8;
                        _bI1[3] = (((_F4 >> 24) & 0xff) * _Ol2[3]) >> 8;
                        for (var _f3 = 0; _f3 < 4; _f3++) {
                            _bI1[_f3] = ((_bI1[_f3] * _OI1[_f3]) >> 8) + _PI1[_f3];
                            _bI1[_f3] = Math.max(0, Math.min(_bI1[_f3], 255));
                        }
                        var _Zl2 = _bI1[0] | (_bI1[1] << 8) | (_bI1[2] << 16) | (_bI1[3] << 24);
                        var __l2 = [];
                        __l2[0] = ((_F4 & 0xff) * _Ql2[0]) >> 8;
                        __l2[1] = (((_F4 >> 8) & 0xff) * _Ql2[1]) >> 8;
                        __l2[2] = (((_F4 >> 16) & 0xff) * _Ql2[2]) >> 8;
                        __l2[3] = (((_F4 >> 24) & 0xff) * _Ql2[3]) >> 8;
                        for (var _f3 = 0; _f3 < 4; _f3++) {
                            __l2[_f3] = ((__l2[_f3] * _OI1[_f3]) >> 8) + _Ul2[_f3];
                            __l2[_f3] = _c3(0, _e3(__l2[_f3], 255));
                        }
                        var _0m2 = __l2[0] | (__l2[1] << 8) | (__l2[2] << 16) | (__l2[3] << 24);
                        if (_Pl2 && (_dI1._oI1 > 0)) {
                            var _E5 = _dI1._oI1 * 6;
                            var _F5 = _b4._G5(_H5._I5, null, _b4._J5, _E5);
                            var _K5 = _F5._L5() >> 2;
                            var _1m2 = _K5 * _F5._M5;
                            _F5._M5 += _E5;
                            _N5 = _F5._O5;
                            _P5 = _F5._Q5;
                            _R5 = _F5._S5;
                            _Vl2 += _dI1._oI1 * 2;
                            for (var _f3 = 0; _f3 < _dI1._oI1; _f3++) {
                                var _C01 = _dI1._xI1[(_f3 * 2) + 0],
                                    _D01 = _dI1._xI1[(_f3 * 2) + 1];
                                var _2m2 = _dI1._tI1[(_C01 * 2) + 0],
                                    _3m2 = _dI1._tI1[(_C01 * 2) + 1];
                                var _4m2 = _dI1._yI1[(_C01 * 2) + 0],
                                    _5m2 = _dI1._yI1[(_C01 * 2) + 1];
                                var _6m2 = _dI1._tI1[(_D01 * 2) + 0],
                                    _7m2 = _dI1._tI1[(_D01 * 2) + 1];
                                var _8m2 = _dI1._yI1[(_D01 * 2) + 0],
                                    _9m2 = _dI1._yI1[(_D01 * 2) + 1];
                                var _03 = (_2m2 * _Rl2.__2[_lm]) + (_3m2 * _Rl2.__2[_mm]) + _Rl2.__2[_om],
                                    _13 = (_2m2 * _Rl2.__2[_pm]) + (_3m2 * _Rl2.__2[_gl]) + _Rl2.__2[_rm],
                                    _23 = (_6m2 * _Rl2.__2[_lm]) + (_7m2 * _Rl2.__2[_mm]) + _Rl2.__2[_om],
                                    _33 = (_6m2 * _Rl2.__2[_pm]) + (_7m2 * _Rl2.__2[_gl]) + _Rl2.__2[_rm];
                                _4m2 *= _Sl2;
                                _5m2 *= _Sl2;
                                _8m2 *= _Sl2;
                                _9m2 *= _Sl2;
                                var _wi = (_4m2 * _Rl2.__2[_lm]) + (_5m2 * _Rl2.__2[_mm]) + _03,
                                    _xi = (_4m2 * _Rl2.__2[_pm]) + (_5m2 * _Rl2.__2[_gl]) + _13,
                                    _tG1 = (_8m2 * _Rl2.__2[_lm]) + (_9m2 * _Rl2.__2[_mm]) + _23,
                                    _uG1 = (_8m2 * _Rl2.__2[_pm]) + (_9m2 * _Rl2.__2[_gl]) + _33;
                                _N5[_1m2 + 0] = _03;
                                _N5[_1m2 + 1] = _13;
                                _N5[_1m2 + 2] = _Y5;
                                _P5[_1m2] = _Zl2;
                                _1m2 += _K5;
                                _N5[_1m2 + 0] = _23;
                                _N5[_1m2 + 1] = _33;
                                _N5[_1m2 + 2] = _Y5;
                                _P5[_1m2] = _Zl2;
                                _1m2 += _K5;
                                _N5[_1m2 + 0] = _wi;
                                _N5[_1m2 + 1] = _xi;
                                _N5[_1m2 + 2] = _Y5;
                                _P5[_1m2] = _0m2;
                                _1m2 += _K5;
                                _N5[_1m2 + 0] = _wi;
                                _N5[_1m2 + 1] = _xi;
                                _N5[_1m2 + 2] = _Y5;
                                _P5[_1m2] = _0m2;
                                _1m2 += _K5;
                                _N5[_1m2 + 0] = _23;
                                _N5[_1m2 + 1] = _33;
                                _N5[_1m2 + 2] = _Y5;
                                _P5[_1m2] = _Zl2;
                                _1m2 += _K5;
                                _N5[_1m2 + 0] = _tG1;
                                _N5[_1m2 + 1] = _uG1;
                                _N5[_1m2 + 2] = _Y5;
                                _P5[_1m2] = _0m2;
                                _1m2 += _K5;
                            }
                        }
                        var _E5 = _dI1._lI1 * 3;
                        var _F5 = _b4._G5(_H5._I5, null, _b4._J5, _E5);
                        var _K5 = _F5._L5() >> 2;
                        var _1m2 = _K5 * _F5._M5;
                        _F5._M5 += _E5;
                        _N5 = _F5._O5;
                        _P5 = _F5._Q5;
                        _R5 = _F5._S5;
                        _Vl2 += _dI1._lI1;
                        var _am2 = 0;
                        for (var _f3 = _dI1._lI1 * 3; _f3 > 0; --_f3) {
                            var index = _dI1._uI1[_am2++];
                            var _bm2 = _dI1._tI1[index * 2];
                            var _cm2 = _dI1._tI1[(index * 2) + 1];
                            var x = (_bm2 * _Rl2.__2[_lm]) + (_cm2 * _Rl2.__2[_mm]) + _Rl2.__2[_om];
                            var y = (_bm2 * _Rl2.__2[_pm]) + (_cm2 * _Rl2.__2[_gl]) + _Rl2.__2[_rm];
                            _N5[_1m2 + 0] = x;
                            _N5[_1m2 + 1] = y;
                            _N5[_1m2 + 2] = _Y5;
                            _P5[_1m2] = _Zl2;
                            _1m2 += _K5;
                        }
                    }
                }
            }
        }
    }
    return _Vl2;
}

function _Yl2(_Gh2, _Kl2, _dm2, _em2, _fm2, _Ml2, _gm2, _Ol2, _hm2, _Nl2, _im2, _jm2, _km2, _Pl2) {
    var _N5, _P5, _R5, _L1 = null,
        _Sl2 = 1.0,
        _lm2 = new _6l();
    if (_Pl2) {
        _Sl2 = _Tl2(_Kl2, _gm2) * _fw;
    }
    if (_dm2 === _sH1) {
        var _mm2 = _em2;
        _L1 = _mm2._S6;
        _lm2._im(_mm2._QH1, _Ml2);
    } else if (_dm2 === _tH1) {
        var _mm2 = _em2;
        if (_mm2._WH1 !== -1) {
            var _nm2 = _Gh2[_mm2._WH1];
            var _O1 = _nm2._O1;
            _L1 = {
                _T1: _O1
            };
            if (_O1 !== null) {
                var _om2 = new _6l();
                _om2._am(1.0 / _O1.width, 1.0 / _O1.height, 1.0);
                _lm2._im(_mm2._QH1, _om2);
                if ((_mm2._UH1 === _MG1) || (_mm2._UH1 === _OG1)) {
                    _b4._Ym1(0, true);
                } else {
                    _b4._Ym1(0, false);
                }
            }
        }
    }
    var _Vl2 = 0;
    if (_L1 !== null) {
        _Vl2 += _fm2._jI1;
        if (_Pl2 && (_fm2._mI1 > 0)) {
            _Vl2 += _fm2._mI1 * 2;
            var _bI1 = [];
            for (var _f3 = 0; _f3 < 4; _f3++) {
                _bI1[_f3] = ((_Ol2[_f3] * _im2[_f3]) >> 8) + _jm2[_f3];
                _bI1[_f3] = Math.max(0, Math.min(_bI1[_f3], 255));
            }
            var _Zl2 = _bI1[0] | (_bI1[1] << 8) | (_bI1[2] << 16) | (_bI1[3] << 24);
            var __l2 = [];
            for (var _f3 = 0; _f3 < 4; _f3++) {
                __l2[_f3] = ((_hm2[_f3] * _im2[_f3]) >> 8) + _km2[_f3];
                __l2[_f3] = Math.max(0, Math.min(__l2[_f3],
                    255));
            }
            var _0m2 = __l2[0] | (__l2[1] << 8) | (__l2[2] << 16) | (__l2[3] << 24);
            var _E5 = _fm2._mI1 * 6;
            var _F5 = _b4._G5(_H5._I5, _L1._T1._C5, _b4._J5, _E5);
            var _K5 = _F5._L5() >> 2;
            var _1m2 = _K5 * _F5._M5;
            _F5._M5 += _E5;
            _N5 = _F5._O5, _P5 = _F5._Q5, _R5 = _F5._S5;
            var _pm2 = 0;
            for (_f3 = _fm2._mI1; _f3 > 0; _f3--) {
                var _C01 = _fm2._vI1[_pm2++],
                    _D01 = _fm2._vI1[_pm2++];
                var _qm2 = _C01 * 2,
                    _rm2 = _C01 * 2;
                var _2m2 = _fm2._qI1[_qm2];
                _qm2++;
                var _3m2 = _fm2._qI1[_qm2];
                var _4m2 = _fm2._wI1[_rm2];
                _rm2++;
                var _5m2 = _fm2._wI1[_rm2];
                _qm2 = _D01 * 2;
                _rm2 = _D01 * 2;
                var _6m2 = _fm2._qI1[_qm2];
                _qm2++;
                var _7m2 = _fm2._qI1[_qm2];
                var _8m2 = _fm2._wI1[_rm2];
                _rm2++;
                var _9m2 = _fm2._wI1[_rm2];
                var _03 = (_2m2 * _gm2.__2[_lm]) + (_3m2 * _gm2.__2[_mm]) + _gm2.__2[_om],
                    _13 = (_2m2 * _gm2.__2[_pm]) + (_3m2 * _gm2.__2[_gl]) + _gm2.__2[_rm],
                    _23 = (_6m2 * _gm2.__2[_lm]) + (_7m2 * _gm2.__2[_mm]) + _gm2.__2[_om],
                    _33 = (_6m2 * _gm2.__2[_pm]) + (_7m2 * _gm2.__2[_gl]) + _gm2.__2[_rm];
                _4m2 *= _Sl2;
                _5m2 *= _Sl2;
                _8m2 *= _Sl2;
                _9m2 *= _Sl2;
                var _wi = (_4m2 * _gm2.__2[_lm]) + (_5m2 * _gm2.__2[_mm]) + _03,
                    _xi = (_4m2 * _gm2.__2[_pm]) + (_5m2 * _gm2.__2[_gl]) + _13,
                    _tG1 = (_8m2 * _gm2.__2[_lm]) + (_9m2 * _gm2.__2[_mm]) + _23,
                    _uG1 = (_8m2 * _gm2.__2[_pm]) + (_9m2 * _gm2.__2[_gl]) + _33;
                _4m2 += _2m2;
                _5m2 += _3m2;
                _8m2 += _6m2;
                _9m2 += _7m2;
                _N5[_1m2 + 0] = _03;
                _N5[_1m2 + 1] = _13;
                _N5[_1m2 + 2] = _Y5;
                _R5[_1m2 + 0] = (_2m2 * _lm2.__2[_lm]) + (_3m2 * _lm2.__2[_mm]) + _lm2.__2[_om];
                _R5[_1m2 + 1] = (_2m2 * _lm2.__2[_pm]) + (_3m2 * _lm2.__2[_gl]) + _lm2.__2[_rm];
                _P5[_1m2] = _Zl2;
                _1m2 += _K5;
                _N5[_1m2 + 0] = _23;
                _N5[_1m2 + 1] = _33;
                _N5[_1m2 + 2] = _Y5;
                _R5[_1m2 + 0] = (_6m2 * _lm2.__2[_lm]) + (_7m2 * _lm2.__2[_mm]) + _lm2.__2[_om];
                _R5[_1m2 + 1] = (_6m2 * _lm2.__2[_pm]) + (_7m2 * _lm2.__2[_gl]) + _lm2.__2[_rm];
                _P5[_1m2] = _Zl2;
                _1m2 += _K5;
                _N5[_1m2 + 0] = _wi;
                _N5[_1m2 + 1] = _xi;
                _N5[_1m2 + 2] = _Y5;
                _R5[_1m2 + 0] = (_4m2 * _lm2.__2[_lm]) + (_5m2 * _lm2.__2[_mm]) + _lm2.__2[_om];
                _R5[_1m2 + 1] = (_4m2 * _lm2.__2[_pm]) + (_5m2 * _lm2.__2[_gl]) + _lm2.__2[_rm];
                _P5[_1m2] = _0m2;
                _1m2 += _K5;
                _N5[_1m2 + 0] = _wi;
                _N5[_1m2 + 1] = _xi;
                _N5[_1m2 + 2] = _Y5;
                _R5[_1m2 + 0] = (_4m2 * _lm2.__2[_lm]) + (_5m2 * _lm2.__2[_mm]) + _lm2.__2[_om];
                _R5[_1m2 + 1] = (_4m2 * _lm2.__2[_pm]) + (_5m2 * _lm2.__2[_gl]) + _lm2.__2[_rm];
                _P5[_1m2] = _0m2;
                _1m2 += _K5;
                _N5[_1m2 + 0] = _23;
                _N5[_1m2 + 1] = _33;
                _N5[_1m2 + 2] = _Y5;
                _R5[_1m2 + 0] = (_6m2 * _lm2.__2[_lm]) + (_7m2 * _lm2.__2[_mm]) + _lm2.__2[_om];
                _R5[_1m2 + 1] = (_6m2 * _lm2.__2[_pm]) + (_7m2 * _lm2.__2[_gl]) + _lm2.__2[_rm];
                _P5[_1m2] = _Zl2;
                _1m2 += _K5;
                _N5[_1m2 + 0] = _tG1;
                _N5[_1m2 + 1] = _uG1;
                _N5[_1m2 + 2] = _Y5;
                _R5[_1m2 + 0] = (_8m2 * _lm2.__2[_lm]) + (_9m2 * _lm2.__2[_mm]) + _lm2.__2[_om];
                _R5[_1m2 + 1] = (_8m2 * _lm2.__2[_pm]) + (_9m2 * _lm2.__2[_gl]) + _lm2.__2[_rm];
                _P5[_1m2] = _0m2;
                _1m2 += _K5;
            }
        }
        var _E5 = _fm2._jI1 * 3;
        var _F5 = _b4._G5(_H5._I5, _L1._T1._C5, _b4._J5, _E5);
        var _K5 = _F5._L5() >> 2;
        var _1m2 = _K5 * _F5._M5;
        _F5._M5 += _E5;
        _N5 = _F5._O5, _P5 = _F5._Q5, _R5 = _F5._S5;
        var _am2 = 0;
        for (var _f3 = _fm2._jI1 * 3; _f3 > 0;
            --_f3) {
            var index = _fm2._sI1[_am2++];
            var _bm2 = _fm2._qI1[index * 2];
            var _cm2 = _fm2._qI1[(index * 2) + 1];
            var x = (_bm2 * _gm2.__2[_lm]) + (_cm2 * _gm2.__2[_mm]) + _gm2.__2[_om];
            var y = (_bm2 * _gm2.__2[_pm]) + (_cm2 * _gm2.__2[_gl]) + _gm2.__2[_rm];
            _N5[_1m2 + 0] = x;
            _N5[_1m2 + 1] = y;
            _N5[_1m2 + 2] = _Y5;
            _P5[_1m2] = _Nl2;
            _R5[_1m2 + 0] = (_bm2 * _lm2.__2[_lm]) + (_cm2 * _lm2.__2[_mm]) + _lm2.__2[_om];
            _R5[_1m2 + 1] = (_bm2 * _lm2.__2[_pm]) + (_cm2 * _lm2.__2[_gl]) + _lm2.__2[_rm];
            _1m2 += _K5;
        }
    }
    return _Vl2;
}

function _Xl2(_Kl2, _em2, _fm2, _gm2, _Ol2, _hm2, _im2, _jm2, _km2, _Pl2) {
    var _Sl2 = 1.0;
    if (_Pl2) {
        _Sl2 = _Tl2(_Kl2, _gm2) * _fw;
    }
    var _sm2 = false;
    var _mm2 = _em2,
        _F4 = _mm2._F4,
        _Vl2 = 0,
        _f3 = 0;
    var _bI1 = [];
    var _d3 = ((_F4 >> 16) & 0xff),
        _Y4 = ((_F4 >> 8) & 0xff),
        _g3 = (_F4 & 0xff),
        _Z4 = ((_F4 >> 24) & 0xff);
    _bI1[0] = (_d3 * _Ol2[0]) >> 8;
    _bI1[1] = (_Y4 * _Ol2[1]) >> 8;
    _bI1[2] = (_g3 * _Ol2[2]) >> 8;
    _bI1[3] = (_Z4 * _Ol2[3]) >> 8;
    for (_f3 = 0; _f3 < 4; _f3++) {
        _bI1[_f3] = ((_bI1[_f3] * _im2[_f3]) >> 8) + _jm2[_f3];
        _bI1[_f3] = _c3(0, _e3(_bI1[_f3], 255));
    }
    var _Zl2 = _bI1[2] | (_bI1[1] << 8) | (_bI1[0] << 16) | (_bI1[3] << 24);
    var __l2 = [];
    __l2[0] = ((_F4 & 0xff) * _hm2[0]) >> 8;
    __l2[1] = (((_F4 >> 8) & 0xff) * _hm2[1]) >> 8;
    __l2[2] = (((_F4 >> 16) & 0xff) * _hm2[2]) >> 8;
    __l2[3] = (((_F4 >> 24) & 0xff) * _hm2[3]) >> 8;
    for (_f3 = 0; _f3 < 4; _f3++) {
        __l2[_f3] = ((__l2[_f3] * _im2[_f3]) >> 8) + _km2[_f3];
        __l2[_f3] = _c3(0, _e3(__l2[_f3], 255));
    }
    var _0m2 = __l2[0] | (__l2[1] << 8) | (__l2[2] << 16) | (__l2[3] << 24);
    if (_sm2) {} else if (_Pl2 && (_fm2._mI1 > 0)) {
        _Vl2 += _fm2._mI1 * 2;
        var _E5 = _fm2._mI1 * 6;
        var _F5 = _b4._G5(_H5._I5, null, _b4._J5, _E5);
        var _K5 = _F5._L5() >> 2;
        var _1m2 = _K5 * _F5._M5;
        _F5._M5 += _E5;
        _N5 = _F5._O5;
        _P5 = _F5._Q5;
        var _pm2 = 0;
        for (_f3 = _fm2._mI1; _f3 > 0; _f3--) {
            var _C01 = _fm2._vI1[_pm2++],
                _D01 = _fm2._vI1[_pm2++];
            var _qm2 = _C01 * 2,
                _rm2 = _C01 * 2;
            var _2m2 = _fm2._qI1[_qm2];
            _qm2++;
            var _3m2 = _fm2._qI1[_qm2];
            var _4m2 = _fm2._wI1[_rm2];
            _rm2++;
            var _5m2 = _fm2._wI1[_rm2];
            _qm2 = _D01 * 2;
            _rm2 = _D01 * 2;
            var _6m2 = _fm2._qI1[_qm2];
            _qm2++;
            var _7m2 = _fm2._qI1[_qm2];
            var _8m2 = _fm2._wI1[_rm2];
            _rm2++;
            var _9m2 = _fm2._wI1[_rm2];
            var _03 = (_2m2 * _gm2.__2[_lm]) + (_3m2 * _gm2.__2[_mm]) + _gm2.__2[_om],
                _13 = (_2m2 * _gm2.__2[_pm]) + (_3m2 * _gm2.__2[_gl]) + _gm2.__2[_rm],
                _23 = (_6m2 * _gm2.__2[_lm]) + (_7m2 * _gm2.__2[_mm]) + _gm2.__2[_om],
                _33 = (_6m2 * _gm2.__2[_pm]) + (_7m2 * _gm2.__2[_gl]) + _gm2.__2[_rm];
            _4m2 *= _Sl2;
            _5m2 *= _Sl2;
            _8m2 *= _Sl2;
            _9m2 *= _Sl2;
            var _wi = (_4m2 * _gm2.__2[_lm]) + (_5m2 * _gm2.__2[_mm]) + _03,
                _xi = (_4m2 * _gm2.__2[_pm]) + (_5m2 * _gm2.__2[_gl]) + _13,
                _tG1 = (_8m2 * _gm2.__2[_lm]) + (_9m2 * _gm2.__2[_mm]) + _23,
                _uG1 = (_8m2 * _gm2.__2[_pm]) + (_9m2 * _gm2.__2[_gl]) + _33;
            _N5[_1m2 + 0] = _03;
            _N5[_1m2 + 1] = _13;
            _N5[_1m2 + 2] = _Y5;
            _P5[_1m2] = _Zl2;
            _1m2 += _K5;
            _N5[_1m2 + 0] = _23;
            _N5[_1m2 + 1] = _33;
            _N5[_1m2 + 2] = _Y5;
            _P5[_1m2] = _Zl2;
            _1m2 += _K5;
            _N5[_1m2 + 0] = _wi;
            _N5[_1m2 + 1] = _xi;
            _N5[_1m2 + 2] = _Y5;
            _P5[_1m2] = _0m2;
            _1m2 += _K5;
            _N5[_1m2 + 0] = _wi;
            _N5[_1m2 + 1] = _xi;
            _N5[_1m2 + 2] = _Y5;
            _P5[_1m2] = _0m2;
            _1m2 += _K5;
            _N5[_1m2 + 0] = _23;
            _N5[_1m2 + 1] = _33;
            _N5[_1m2 + 2] = _Y5;
            _P5[_1m2] = _Zl2;
            _1m2 += _K5;
            _N5[_1m2 + 0] = _tG1;
            _N5[_1m2 + 1] = _uG1;
            _N5[_1m2 + 2] = _Y5;
            _P5[_1m2] = _0m2;
            _1m2 += _K5;
        }
    }
    var _E5 = _fm2._jI1 * 3;
    var _F5 = _b4._G5(_H5._I5, null, _b4._J5, _E5);
    var _K5 = _F5._L5() >> 2;
    var _1m2 = _K5 * _F5._M5;
    _F5._M5 += _E5;
    _N5 = _F5._O5;
    _P5 = _F5._Q5;
    _Vl2 += _fm2._jI1;
    var _am2 = 0;
    for (var _f3 = _fm2._jI1 * 3; _f3 > 0; --_f3) {
        var index = _fm2._sI1[_am2++];
        var _bm2 = _fm2._qI1[index * 2];
        var _cm2 = _fm2._qI1[(index * 2) + 1];
        var x = (_bm2 * _gm2.__2[_lm]) + (_cm2 * _gm2.__2[_mm]) + _gm2.__2[_om];
        var y = (_bm2 * _gm2.__2[_pm]) + (_cm2 * _gm2.__2[_gl]) + _gm2.__2[_rm];
        _N5[_1m2 + 0] = x;
        _N5[_1m2 + 1] = y;
        _N5[_1m2 + 2] = _Y5;
        _P5[_1m2] = _Zl2;
        _1m2 += _K5;
    }
    return _Vl2;
}

function _Tl2(_Kl2, _gm2) {
    if (_cw) {
        if (_Kl2._Sl2 !== undefined) {
            return _Kl2._Sl2;
        }
        var _P52 = _hm(_8m);
        var _tm2 = _hm(_vj2);
        var _um2 = _hm(_uj2);
        var _vm2 = new _6l();
        _vm2._im(_P52, _tm2);
        var _wm2 = new _6l();
        _wm2._im(_vm2, _um2);
        var _xm2 = new _6l();
        _xm2._im(_gm2, _wm2);
        var _ym2 = _b4._jl1,
            _zm2 = _b4._kl1;
        var _Am2 = [];
        _Am2[0] = 0.0;
        _Am2[1] = 0.0;
        _Am2[2] = 1.0;
        _Am2[3] = 0.0;
        _Am2[4] = 0.0;
        _Am2[5] = 1.0;
        var _Bm2 = [];
        for (var i = 0; i < 3; i++) {
            var _yL1 = (_Am2[i * 2] * _xm2.__2[_KZ1]) + (_Am2[(i * 2) + 1] * _xm2.__2[_LZ1]) + (_Y5 * _xm2.__2[_MZ1]) + _xm2.__2[_NZ1];
            var index = (i * 2) + 0;
            _Bm2[index] = (_Am2[i * 2] * _xm2.__2[_lm]) + (_Am2[(i * 2) + 1] * _xm2.__2[_mm]) + (_Y5 * _xm2.__2[_nm]) + _xm2.__2[_om];
            _Bm2[index] = _Bm2[index] / _yL1;
            _Bm2[index] = _Bm2[index] * _ym2;
            index++;
            _Bm2[index] = (_Am2[i * 2] * _xm2.__2[_pm]) + (_Am2[(i * 2) + 1] * _xm2.__2[_gl]) + (_Y5 * _xm2.__2[_qm]) + _xm2.__2[_rm];
            _Bm2[index] = _Bm2[index] / _yL1;
            _Bm2[index] = _Bm2[index] * _zm2;
        }
        var _Cm2 = [];
        _Cm2[0] = _Bm2[2] - _Bm2[0];
        _Cm2[1] = _Bm2[3] - _Bm2[1];
        _Cm2[2] = _Bm2[4] - _Bm2[0];
        _Cm2[3] = _Bm2[5] - _Bm2[1];
        var _Dm2 = 0.0,
            _Sl2 = 1.0,
            index = 0;
        for (var i = 0; i < 2; i++) {
            var length = _Cm2[index] * _Cm2[index];
            index++;
            length += _Cm2[index] * _Cm2[index];
            index++;
            if (length > 0.0) {
                length = Math.sqrt(length);
            }
            _Dm2 = Math.max(length, _Dm2);
        }
        _Dm2 *= 0.5;
        if (_Dm2 > 0.0) {
            _Sl2 = 1.0 / _Dm2;
        }
        _Kl2._Sl2 = _Sl2;
        return _Sl2;
    }
    return 1.0;
}

function _Sj2(_HM, _2M, _3M, _h2, _i2, _f72, _g72, _K1, _e7, _Ne, _8v, _9v, __6) {
    var _F5, _kb2, _il2, _N5, _P5, _R5;
    if (!_HM._T1._C5) _D5(_HM);
    _F5 = _b4._G5(_H5._I5, _HM._T1._C5,
        _b4._J5, 6);
    var _K5 = _F5._L5() >> 2;
    var index = _K5 * _F5._M5;
    _F5._M5 += 6;
    var _T5 = index;
    var _U5 = _T5 + _K5;
    var _Z1 = _U5 + _K5;
    var _V5 = _Z1 + _K5;
    var _W5 = _V5 + _K5;
    var _X5 = _W5 + _K5;
    _N5 = _F5._O5;
    _P5 = _F5._Q5;
    _R5 = _F5._S5;
    var _03 = -_f72 * (_2M - _HM.XOffset);
    var _13 = -_g72 * (_3M - _HM.YOffset);
    var _23 = _03 + (_f72 * _HM.CropWidth);
    var _33 = _13 + (_g72 * _HM.CropHeight);
    if (Math.abs(_K1) < 0.001) {
        _N5[_T5 + 0] = _N5[_W5 + 0] = _N5[_X5 + 0] = _h2 + _03;
        _N5[_T5 + 1] = _N5[_U5 + 1] = _N5[_X5 + 1] = _i2 + _13;
        _N5[_U5 + 0] = _N5[_Z1 + 0] = _N5[_V5 + 0] = _h2 + _23;
        _N5[_Z1 + 1] = _N5[_V5 + 1] = _N5[_W5 + 1] = _i2 + _33;
        _N5[_T5 + 2] = _N5[_U5 + 2] = _N5[_Z1 + 2] = _N5[_V5 + 2] = _N5[_W5 + 2] = _N5[_X5 + 2] = _Y5;
    } else {
        var _F3 = Math.sin(_K1);
        var _G3 = Math.cos(_K1);
        var _dB1 = _03 * _G3;
        var _eB1 = _23 * _G3;
        var _fB1 = _13 * _G3;
        var _gB1 = _33 * _G3;
        var _hB1 = _03 * _F3;
        var _iB1 = _23 * _F3;
        var _jB1 = _13 * _F3;
        var _kB1 = _33 * _F3;
        _N5[_T5 + 0] = _N5[_X5 + 0] = _h2 + _dB1 + _jB1;
        _N5[_T5 + 1] = _N5[_X5 + 1] = _i2 - _hB1 + _fB1;
        _N5[_Z1 + 0] = _N5[_V5 + 0] = _h2 + _eB1 + _kB1;
        _N5[_Z1 + 1] = _N5[_V5 + 1] = _i2 - _iB1 + _gB1;
        _N5[_U5 + 1] = _i2 - _iB1 + _fB1;
        _N5[_U5 + 0] = _h2 + _eB1 + _jB1;
        _N5[_W5 + 0] = _h2 + _dB1 + _kB1;
        _N5[_W5 + 1] = _i2 - _hB1 + _gB1;
        _N5[_T5 + 2] = _N5[_U5 + 2] = _N5[_Z1 + 2] = _N5[_V5 + 2] = _N5[_W5 + 2] = _N5[_X5 + 2] = _Y5;
    }
    _R5[_T5 + 0] = _R5[_W5 + 0] = _R5[_X5 + 0] = _HM.x / _HM._T1.width;
    _R5[_T5 + 1] = _R5[_U5 + 1] = _R5[_X5 + 1] = _HM.y / _HM._T1.height;
    _R5[_U5 + 0] = _R5[_Z1 + 0] = _R5[_V5 + 0] = (_HM.x + _HM.w) / _HM._T1.width;
    _R5[_Z1 + 1] = _R5[_V5 + 1] = _R5[_W5 + 1] = (_HM.y + _HM.h) / _HM._T1.height;
    var _Z4 = (__6 * 255.0) << 24;
    _e7 = _Z4 | (_e7 & 0xffffff);
    if (_Ne == undefined) {
        _Ne = _e7;
        _8v = _e7;
        _9v = _e7;
    } else {
        _Ne = _Ne | _Z4;
        _8v = _8v | _Z4;
        _9v = _9v | _Z4;
    }
    if (_A52) {
        _e7 &= 0xfffefffe;
        _Ne &= 0xfffefffe;
        _8v &= 0xfffefffe;
        _9v &= 0xfffefffe;
        _Ne |= 0x00010000;
        _8v |= 0x00000001;
        _9v |= 0x00010001;
    }
    _P5[_T5] = _P5[_X5] = _e7;
    _P5[_U5] = _Ne;
    _P5[_Z1] = _P5[_V5] = _8v;
    _P5[_W5] = _9v;
}

function _Tj2(_HM, _v3, _w3, _S2, _T2, _Ki, _Li, _1O, _2O, __6) {
    var _F4 = ~~((__6 * 255.0) << 24) | 0xffffff;
    _Pe = _F4, _Qe = _F4, _Re = _F4;
    var _F5, _kb2, _il2, _N5, _P5, _R5;
    if (!_HM._T1._C5) _D5(_HM);
    _F5 = _b4._G5(_H5._I5, _HM._T1._C5, _b4._J5, 6);
    var _K5 = _F5._L5() >> 2;
    var index = _K5 * _F5._M5;
    _F5._M5 += 6;
    var _T5 = index,
        _U5 = _T5 + _K5,
        _Z1 = _U5 + _K5,
        _V5 = _Z1 + _K5,
        _W5 = _V5 + _K5,
        _X5 = _W5 + _K5;
    _N5 = _F5._O5;
    _P5 = _F5._Q5;
    _R5 = _F5._S5;
    _N5[_T5 + 0] = _N5[_X5 + 0] = _v3;
    _N5[_T5 + 1] = _N5[_X5 + 1] = _w3;
    _N5[_U5 + 0] = _S2;
    _N5[_U5 + 1] = _T2;
    _N5[_Z1 + 0] = _N5[_V5 + 0] = _Ki;
    _N5[_Z1 + 1] = _N5[_V5 + 1] = _Li;
    _N5[_W5 + 0] = _1O;
    _N5[_W5 + 1] = _2O;
    _N5[_T5 + 2] = _N5[_U5 + 2] = _N5[_Z1 + 2] = _N5[_V5 + 2] = _N5[_W5 + 2] = _N5[_X5 + 2] = _Y5;
    _R5[_T5 + 0] = _R5[_W5 + 0] = _R5[_X5 + 0] = _HM.x / _HM._T1.width;
    _R5[_T5 + 1] = _R5[_U5 + 1] = _R5[_X5 + 1] = _HM.y / _HM._T1.height;
    _R5[_U5 + 0] = _R5[_Z1 + 0] = _R5[_V5 + 0] = (_HM.x + _HM.w) / _HM._T1.width;
    _R5[_Z1 + 1] = _R5[_V5 + 1] = _R5[_W5 + 1] = (_HM.y + _HM.h) / _HM._T1.height;
    if (_A52) {
        _F4 &= 0xfffefffe;
        _Pe &= 0xfffefffe;
        _Qe &= 0xfffefffe;
        _Re &= 0xfffefffe;
        _Pe |= 0x00010000;
        _Qe |= 0x00000001;
        _Re |= 0x00010001;
    }
    _P5[_T5] = _P5[_X5] = _F4;
    _P5[_U5] = _Pe;
    _P5[_Z1] = _P5[_V5] = _Qe;
    _P5[_W5] = _Re;
}

function _Em2(_HM, _2M, _3M, _j4, _k4, _h2, _i2, _f72, _g72, _K1, _e7, _Ne, _8v, _9v, __6) {
    var _F5, _kb2, _il2, _N5, _P5, _R5;
    if (!_HM._T1._C5) _D5(_HM);
    _F5 = _b4._G5(_H5._I5, _HM._T1._C5, _b4._J5, 6);
    var _K5 = _F5._L5() >> 2;
    var index = _K5 * _F5._M5;
    _F5._M5 += 6;
    var _T5 = index;
    var _U5 = _T5 + _K5;
    var _Z1 = _U5 + _K5;
    var _V5 = _Z1 + _K5;
    var _W5 = _V5 + _K5;
    var _X5 = _W5 + _K5;
    _N5 = _F5._O5;
    _P5 = _F5._Q5;
    _R5 = _F5._S5;
    var _03 = -_f72 * (_2M - _HM.XOffset);
    var _13 = -_g72 * (_3M - _HM.YOffset);
    var _23 = _03 + (_f72 * _j4);
    var _33 = _13 + (_g72 * _k4);
    if (Math.abs(_K1) < 0.001) {
        _N5[_T5 + 0] = _N5[_W5 + 0] = _N5[_X5 + 0] = _h2 + _03;
        _N5[_T5 + 1] = _N5[_U5 + 1] = _N5[_X5 + 1] = _i2 + _13;
        _N5[_U5 + 0] = _N5[_Z1 + 0] = _N5[_V5 + 0] = _h2 + _23;
        _N5[_Z1 + 1] = _N5[_V5 + 1] = _N5[_W5 + 1] = _i2 + _33;
        _N5[_T5 + 2] = _N5[_U5 + 2] = _N5[_Z1 + 2] = _N5[_V5 + 2] = _N5[_W5 + 2] = _N5[_X5 + 2] = _Y5;
    } else {
        var _F3 = Math.sin(_K1);
        var _G3 = Math.cos(_K1);
        var _dB1 = _03 * _G3;
        var _eB1 = _23 * _G3;
        var _fB1 = _13 * _G3;
        var _gB1 = _33 * _G3;
        var _hB1 = _03 * _F3;
        var _iB1 = _23 * _F3;
        var _jB1 = _13 * _F3;
        var _kB1 = _33 * _F3;
        _N5[_T5 + 0] = _N5[_X5 + 0] = _h2 + _dB1 + _jB1;
        _N5[_T5 + 1] = _N5[_X5 + 1] = _i2 - _hB1 + _fB1;
        _N5[_Z1 + 0] = _N5[_V5 + 0] = _h2 + _eB1 + _kB1;
        _N5[_Z1 + 1] = _N5[_V5 + 1] = _i2 - _iB1 + _gB1;
        _N5[_U5 + 1] = _i2 - _iB1 + _fB1;
        _N5[_U5 + 0] = _h2 + _eB1 + _jB1;
        _N5[_W5 + 0] = _h2 + _dB1 + _kB1;
        _N5[_W5 + 1] = _i2 - _hB1 + _gB1;
        _N5[_T5 + 2] = _N5[_U5 + 2] = _N5[_Z1 + 2] = _N5[_V5 + 2] = _N5[_W5 + 2] = _N5[_X5 + 2] = _Y5;
    }
    _R5[_T5 + 0] = _R5[_W5 + 0] = _R5[_X5 + 0] = _HM.x / _HM._T1.width;
    _R5[_T5 + 1] = _R5[_U5 + 1] = _R5[_X5 + 1] = _HM.y / _HM._T1.height;
    _R5[_U5 + 0] = _R5[_Z1 + 0] = _R5[_V5 + 0] = (_HM.x + _j4) / _HM._T1.width;
    _R5[_Z1 + 1] = _R5[_V5 + 1] = _R5[_W5 + 1] = (_HM.y + _k4) / _HM._T1.height;
    var _Z4 = (__6 * 255.0) << 24;
    _e7 = _Z4 | (_e7 & 0xffffff);
    if (_Ne == undefined) {
        _Ne = _e7;
        _8v = _e7;
        _9v = _e7;
    } else {
        _Ne = _Ne | _Z4;
        _8v = _8v | _Z4;
        _9v = _9v | _Z4;
    }
    if (_A52) {
        _e7 &= 0xfffefffe;
        _Ne &= 0xfffefffe;
        _8v &= 0xfffefffe;
        _9v &= 0xfffefffe;
        _Ne |= 0x00010000;
        _8v |= 0x00000001;
        _9v |= 0x00010001;
    }
    _P5[_T5] = _P5[_X5] = _e7;
    _P5[_U5] = _Ne;
    _P5[_Z1] = _P5[_V5] = _8v;
    _P5[_W5] = _9v;
}

function _Pj2(_j8, _h2, _i2, _0l1) {
    _b4._tn1(_j8, _h2, _i2, _0l1);
}

function _Wj2(_HM, _lh, _mh, _j4, _k4, _h2, _i2, _Ie, _Je, _oh, __6) {
    if (!_HM) return;
    if (!_HM._T1) return;
    if (!_HM._T1.complete) return;
    _oh &= 0xffffff;
    _oh |= (__6 * 255) << 24;
    if (_lh < _HM.XOffset) {
        var _o72 = _HM.XOffset - _lh;
        _h2 += _o72;
        _j4 -= _o72;
        _lh = 0;
    } else {
        _lh -= _HM.XOffset;
    }
    if (_mh < _HM.YOffset) {
        var _o72 = _HM.YOffset - _mh;
        _i2 += _o72;
        _k4 -= _o72;
        _mh = 0;
    } else {
        _mh -= _HM.YOffset;
    }
    if (_j4 > (_HM.CropWidth - _lh)) _j4 = _HM.CropWidth - _lh;
    if (_k4 > (_HM.CropHeight - _mh)) _k4 = _HM.CropHeight - _mh;
    if (_j4 <= 0 || _k4 <= 0) return;
    _jk2(_HM, _lh + _HM.x, _mh + _HM.y, _j4, _k4, _h2, _i2, _j4 * _Ie, _k4 * _Je, _oh);
}

function _Xj2(_v3, _w3, _S2, _T2, _Ke) {
    var _F5, _kb2, _il2, _N5, _P5, _R5;
    _v3 = ~~_v3;
    _w3 = ~~_w3;
    _S2 = ~~_S2;
    _T2 = ~~_T2;
    var _KF1 = _H5._I5;
    var _n4 = 6;
    if (_Ke) {
        _KF1 = _H5._L6;
        _n4 = 8;
    }
    _F5 = _b4._G5(_KF1, null, _b4._J5, _n4);
    var _K5 = _F5._L5() >> 2;
    var index = _K5 * _F5._M5;
    _F5._M5 += _n4;
    var _T5 = index;
    var _U5 = _T5 + _K5;
    var _Z1 = _U5 + _K5;
    var _V5 = _Z1 + _K5;
    var _W5 = _V5 + _K5;
    var _X5 = _W5 + _K5;
    var _Fm2 = _X5 + _K5;
    var _Gm2 = _Fm2 + _K5;
    _N5 = _F5._O5;
    _P5 = _F5._Q5;
    _R5 = _F5._S5;
    var _F4 = ~~((_X6 * 255.0) << 24) | (_Y6 & 0xffffff);
    if (!_Ke) {
        _N5[_T5 + 0] = _N5[_W5 + 0] = _N5[_X5 + 0] = _v3;
        _N5[_T5 + 1] = _N5[_U5 + 1] = _N5[_X5 + 1] = _w3;
        _N5[_U5 + 0] = _N5[_Z1 + 0] = _N5[_V5 + 0] = _S2;
        _N5[_Z1 + 1] = _N5[_V5 + 1] = _N5[_W5 + 1] = _T2;
        _N5[_T5 + 2] = _N5[_U5 + 2] = _N5[_Z1 + 2] = _N5[_V5 + 2] = _N5[_W5 + 2] = _N5[_X5 + 2] = _Y5;
        _P5[_T5] = _P5[_U5] = _P5[_Z1] = _P5[_V5] = _P5[_W5] = _P5[_X5] = _F4;
    } else {
        _P5[_T5] = _P5[_U5] = _P5[_Z1] = _P5[_V5] = _P5[_W5] = _P5[_X5] = _P5[_Fm2] = _P5[_Gm2] = _F4;
        _N5[_X5 + 0] = _N5[_Gm2 + 0] = _N5[_Fm2 + 0] = _N5[_T5 + 0] = _v3;
        _N5[_Gm2 + 1] = _N5[_Z1 + 1] = _N5[_U5 + 1] = _N5[_T5 + 1] = _w3;
        _N5[_W5 + 0] = _N5[_V5 + 0] = _N5[_Z1 + 0] = _N5[_U5 + 0] = _S2;
        _N5[_V5 + 1] = _N5[_W5 + 1] = _N5[_X5 + 1] = _N5[_Fm2 + 1] = _T2;
        _N5[_T5 + 2] = _N5[_U5 + 2] = _N5[_Z1 + 2] = _N5[_V5 + 2] = _N5[_W5 + 2] = _N5[_X5 + 2] = _N5[_Fm2 + 2] = _N5[_Gm2 + 2] = _Y5;
    }
}

function _Yj2(_v3, _w3, _S2, _T2, _Zu, __u, _cg, _Ne, _Ke) {
    var i, w, h;
    w = _Zu;
    h = __u;
    if (w > Math.abs(_S2 - _v3)) {
        w = Math.abs(_S2 - _v3);
    }
    if (h > Math.abs(_T2 - _w3)) {
        h = Math.abs(_T2 - _w3);
    }
    _Bc = (_07(_cg) & 0xffffff) | ((_X6 * 255.0) << 24);
    _Cc = (_07(_Ne) & 0xffffff) | ((_X6 * 255.0) << 24);
    var _Hm2 = _yj2 / 4;
    var _KF1 = _H5._O6;
    var _n4 = ((_Hm2 + 1) * 4) + 2;
    if (_Ke) {
        _KF1 = _H5._M6;
    }
    var _Qv = (_v3 + _S2) * 0.5;
    var _Rv = (_w3 + _T2) * 0.5;
    var _ul = Math.abs(_S2 - _v3) * 0.5 - w * 0.5;
    var _vl = Math.abs(_T2 - _w3) * 0.5 - h * 0.5;
    _F5 = _b4._G5(_KF1, null, _b4._J5, _n4);
    var _K5 = _F5._L5() >> 2;
    var index = _K5 * _F5._M5;
    var _Im2 = index;
    _F5._M5 += _n4;
    _N5 = _F5._O5;
    _P5 = _F5._Q5;
    _N5[index] = _Qv;
    _N5[index + 1] = _Rv;
    _N5[index + 2] = _Y5;
    _P5[index] = _Bc;
    index += _K5;
    for (i = 0; i <= _Hm2; i++) {
        _N5[index] = (_Qv + _ul + w * _zj2[i] / 2);
        _N5[index + 1] = (_Rv + _vl + h * _Aj2[i] / 2);
        _N5[index + 2] = _Y5;
        _P5[index] = _Cc;
        index += _K5;
    }
    for (i = _Hm2; i <= (_Hm2 * 2); i++) {
        _N5[index] = (_Qv - _ul + w * _zj2[i] / 2);
        _N5[index + 1] = (_Rv + _vl + h * _Aj2[i] / 2);
        _N5[index + 2] = _Y5;
        _P5[index] = _Cc;
        index += _K5;
    }
    for (i = (_Hm2 * 2); i <= (_Hm2 * 3); i++) {
        _N5[index] = (_Qv - _ul + w * _zj2[i] / 2);
        _N5[index + 1] = (_Rv - _vl + h * _Aj2[i] / 2);
        _N5[index + 2] = _Y5;
        _P5[index] = _Cc;
        index += _K5;
    }
    for (i = (_Hm2 * 3); i <= (_Hm2 * 4); i++) {
        _N5[index] = (_Qv + _ul + w * _zj2[i] / 2);
        _N5[index + 1] = (_Rv - _vl + h * _Aj2[i] / 2);
        _N5[index + 2] = _Y5;
        _P5[index] = _Cc;
        index += _K5;
    }
    _N5[index] = _N5[_Im2 + _K5];
    _N5[index + 1] = _N5[_Im2 + _K5 + 1];
    _N5[index + 2] = _Y5;
    _P5[index] = _Cc;
    if (_Ke) {
        _N5[_Im2] = _N5[_Im2 + _K5];
        _N5[_Im2 + 1] = _N5[_Im2 + _K5 + 1];
        _N5[_Im2 + 2] = _Y5;
        _P5[_Im2] = _P5[_Im2 + _K5];
    }
}

function _Zj2(_v3, _w3, _S2, _T2, _cg, _Ne, _8v, _9v, _Ke) {
    var _F5, _kb2, _il2, _N5, _P5, _R5;
    _v3 = ~~_v3;
    _w3 = ~~_w3;
    _S2 = ~~_S2;
    _T2 = ~~_T2;
    var _Z4 = ((_X6 * 255.0) << 24);
    _cg = _07(_cg) | _Z4;
    _Ne = _07(_Ne) | _Z4;
    _8v = _07(_8v) | _Z4;
    _9v = _07(_9v) | _Z4;
    var _KF1 = _H5._I5;
    var _n4 = 6;
    if (_Ke) {
        _KF1 = _H5._L6;
        _n4 = 8;
    }
    _F5 = _b4._G5(_KF1, null, _b4._J5, _n4);
    var _K5 = _F5._L5() >> 2;
    var index = _K5 * _F5._M5;
    _F5._M5 += _n4;
    var _T5 = index;
    var _U5 = _T5 + _K5;
    var _Z1 = _U5 + _K5;
    var _V5 = _Z1 + _K5;
    var _W5 = _V5 + _K5;
    var _X5 = _W5 + _K5;
    var _Fm2 = _X5 + _K5;
    var _Gm2 = _Fm2 + _K5;
    _N5 = _F5._O5;
    _P5 = _F5._Q5;
    _R5 = _F5._S5;
    var _F4 = ~~((_X6 * 255.0) << 24) | (_Y6 & 0xffffff);
    if (!_Ke) {
        _N5[_T5 + 0] = _N5[_W5 + 0] = _N5[_X5 + 0] = _v3;
        _N5[_T5 + 1] = _N5[_U5 + 1] = _N5[_X5 + 1] = _w3;
        _N5[_U5 + 0] = _N5[_Z1 + 0] = _N5[_V5 + 0] = _S2;
        _N5[_Z1 + 1] = _N5[_V5 + 1] = _N5[_W5 + 1] = _T2;
        _N5[_T5 + 2] = _N5[_U5 + 2] = _N5[_Z1 + 2] = _N5[_V5 + 2] = _N5[_W5 + 2] = _N5[_X5 + 2] = _Y5;
        _P5[_T5] = _P5[_X5] = _cg;
        _P5[_Z1] = _P5[_V5] = _8v;
        _P5[_U5] = _Ne;
        _P5[_W5] = _9v;
    } else {
        _P5[_T5] = _P5[_Gm2] = _cg;
        _P5[_U5] = _P5[_Z1] = _Ne;
        _P5[_V5] = _P5[_W5] = _8v;
        _P5[_X5] = _P5[_Fm2] = _9v;
        _N5[_X5 + 0] = _N5[_Gm2 + 0] = _N5[_Fm2 + 0] = _N5[_T5 + 0] = _v3;
        _N5[_Gm2 + 1] = _N5[_Z1 + 1] = _N5[_U5 + 1] = _N5[_T5 + 1] = _w3;
        _N5[_W5 + 0] = _N5[_V5 + 0] = _N5[_Z1 + 0] = _N5[_U5 + 0] = _S2;
        _N5[_V5 + 1] = _N5[_W5 + 1] = _N5[_X5 + 1] = _N5[_Fm2 + 1] = _T2;
        _N5[_T5 + 2] = _N5[_U5 + 2] = _N5[_Z1 + 2] = _N5[_V5 + 2] = _N5[_W5 + 2] = _N5[_X5 + 2] = _N5[_Fm2 + 2] = _N5[_Gm2 + 2] = _Y5;
    }
}

function _7k2(_h2, _i2, _e7) {
    var _F5, _N5, _P5, _R5;
    _F5 = _b4._G5(_H5._K6, null, _b4._J5, 1);
    var _K5 = _F5._L5() >> 2;
    var _T5 = _K5 * _F5._M5;
    _F5._M5++;
    _N5 = _F5._O5;
    _P5 = _F5._Q5;
    _R5 = _F5._S5;
    var _F4 = ~~((_X6 * 255.0) << 24) | _07(_e7);
    _N5[_T5 + 0] = ~~_h2;
    _N5[_T5 + 1] = ~~_i2;
    _N5[_T5 + 2] = _Y5;
    _P5[_T5] = _F4;
}

function _3k2(_v3, _w3, _S2, _T2, _Ki, _Li, _Ke) {
    var _F5, _N5, _P5, _R5;
    if (_Ke) {
        _F5 = _b4._G5(_H5._M6, null, _b4._J5, 4);
    } else {
        _F5 = _b4._G5(_H5._I5, null, _b4._J5, 3);
    }
    var _K5 = _F5._L5() >> 2;
    var index = _K5 * _F5._M5;
    _F5._M5 += 3;
    var _T5 = index;
    var _U5 = _T5 + _K5;
    var _Z1 = _U5 + _K5;
    var _V5 = _Z1 + _K5;
    _N5 = _F5._O5;
    _P5 = _F5._Q5;
    _N5[_T5 + 0] = _v3;
    _N5[_T5 + 1] = _w3;
    _N5[_T5 + 2] = _Y5;
    _N5[_U5 + 0] = _S2;
    _N5[_U5 + 1] = _T2;
    _N5[_U5 + 2] = _Y5;
    _N5[_Z1 + 0] = _Ki;
    _N5[_Z1 + 1] = _Li;
    _N5[_Z1 + 2] = _Y5;
    if (_Ke) {
        _N5[_V5 + 0] = _v3;
        _N5[_V5 + 1] = _w3;
        _N5[_V5 + 2] = _Y5;
        _F5._M5++;
    }
    _P5[_T5] = _P5[_U5] = _P5[_Z1] = _P5[_V5] = ((_X6 * 255.0) << 24) | _Y6;
}

function __j2(_v3, _w3, _S2, _T2, _cg, _Ne, _bv, _Ke) {
    if (_bv) {
        _Zj2(_v3, _w3, _S2, _T2, _cg, _cg, _Ne, _Ne, _Ke);
    } else {
        _Zj2(_v3, _w3, _S2, _T2, _cg, _Ne, _Ne, _cg, _Ke);
    }
}

function _0k2(_h2, _i2) {
    _7k2(_h2, _i2, _6r);
}

function _1k2(_h2,
    _i2) {
    return _2k2(_h2, _i2) & 0x00ffffff;
}

function _2k2(_h2, _i2) {
    _h2 = ~~_h2;
    _i2 = ~~_i2;
    if (_hl < 0) {
        _i2 = _b4._ml1 - _i2;
    }
    return _b4._4o1(_h2, _i2);
}

function _4k2(_v3, _w3, _S2, _T2, _Ki, _Li, _qh, _rh, _sh, _Ke) {
    var _F5, _N5, _P5, _R5;
    var _Z4 = ((_X6 * 255.0) << 24);
    _qh = _Z4 | _07(_qh);
    _rh = _Z4 | _07(_rh);
    _sh = _Z4 | _07(_sh);
    if (_Ke) {
        _F5 = _b4._G5(_H5._M6, null, _b4._J5, 4);
    } else {
        _F5 = _b4._G5(_H5._I5, null, _b4._J5, 3);
    }
    var _K5 = _F5._L5() >> 2;
    var index = _K5 * _F5._M5;
    _F5._M5 += 3;
    var _T5 = index;
    var _U5 = _T5 + _K5;
    var _Z1 = _U5 + _K5;
    var _V5 = _Z1 + _K5;
    _N5 = _F5._O5;
    _P5 = _F5._Q5;
    _N5[_T5 + 0] = _v3;
    _N5[_T5 + 1] = _w3;
    _N5[_T5 + 2] = _Y5;
    _N5[_U5 + 0] = _S2;
    _N5[_U5 + 1] = _T2;
    _N5[_U5 + 2] = _Y5;
    _N5[_Z1 + 0] = _Ki;
    _N5[_Z1 + 1] = _Li;
    _N5[_Z1 + 2] = _Y5;
    if (_Ke) {
        _N5[_V5 + 0] = _v3;
        _N5[_V5 + 1] = _w3;
        _N5[_V5 + 2] = _Y5;
        _F5._M5++;
    }
    _P5[_T5] = _qh;
    _P5[_U5] = _rh;
    _P5[_Z1] = _sh;
    _P5[_V5] = _qh;
}

function _5k2(_v3, _w3, _S2, _T2, _cg, _Ne, _Ke) {
    var _Qv = (_v3 + _S2) / 2;
    var _Rv = (_w3 + _T2) / 2;
    var _ul = Math.abs((_v3 - _S2) / 2);
    var _vl = Math.abs((_w3 - _T2) / 2);
    var _Z4 = ((_X6 * 255.0) << 24);
    _cg = _Z4 | _07(_cg);
    _Ne = _Z4 | _07(_Ne);
    var _Jm2;
    var _X1;
    if (_Ke) {
        var _Km2 = _yj2 + 1;
        _F5 = _b4._G5(_H5._M6,
            null, _b4._J5, _Km2);
        var _K5 = _F5._L5() >> 2;
        var index = _K5 * _F5._M5;
        _F5._M5 += _Km2;
        _N5 = _F5._O5;
        _P5 = _F5._Q5;
        for (var i = 0; i <= _yj2; i++) {
            _N5[index] = (_Qv + (_ul * _zj2[i]));
            _N5[index + 1] = (_Rv + (_vl * _Aj2[i]));
            _N5[index + 2] = _Y5;
            _P5[index] = _Ne;
            index += _K5;
        }
    } else {
        var _Lm2 = _yj2 * 3;
        _F5 = _b4._G5(_H5._I5, null, _b4._J5, _Lm2);
        var _K5 = _F5._L5() >> 2;
        var index = _K5 * _F5._M5;
        _F5._M5 += _Lm2;
        _N5 = _F5._O5;
        _P5 = _F5._Q5;
        for (var i = 0; i < _yj2; i++) {
            _N5[index] = _Qv;
            _N5[index + 1] = _Rv;
            _N5[index + 2] = _Y5;
            _P5[index] = _cg;
            index += _K5;
            _N5[index] = (_Qv + _ul * _zj2[i]);
            _N5[index + 1] = (_Rv + _vl * _Aj2[i]);
            _N5[index + 2] = _Y5;
            _P5[index] = _Ne;
            index += _K5;
            _N5[index] = (_Qv + _ul * _zj2[i + 1]);
            _N5[index + 1] = (_Rv + _vl * _Aj2[i + 1]);
            _N5[index + 2] = _Y5;
            _P5[index] = _Ne;
            index += _K5;
        }
    }
}

function _6k2(_h2, _i2, _fb, _cg, _Ne, _Ke) {
    _5k2(_h2 - _fb, _i2 - _fb, _h2 + _fb, _i2 + _fb, _cg, _Ne, _Ke);
}

function _8k2(_v3, _w3, _S2, _T2) {
    _ak2(_v3, _w3, _S2, _T2, 1.0, _6r, _6r);
}

function _9k2(_v3, _w3, _S2, _T2, _Va) {
    _ak2(_v3, _w3, _S2, _T2, _Va, _6r, _6r);
}

function _ak2(_v3, _w3, _S2, _T2, _Va, _cg, _Ne) {
    var _Z4 = ((_X6 * 255.0) << 24);
    _cg = _Z4 | _07(_cg);
    _Ne = _Z4 | _07(_Ne);
    var _l3 = (_S2 - _v3);
    var _n3 = (_T2 - _w3);
    var _b3 = (_l3 * _l3) + (_n3 * _n3);
    if (_b3 < 0.0001) return;
    _b3 = Math.sqrt(_b3);
    if (_b3 < 0.0001) return;
    _l3 = 0.5 * _Va * _l3 / _b3;
    _n3 = 0.5 * _Va * _n3 / _b3;
    _F5 = _b4._G5(_H5._I5, null, _b4._J5, 6);
    var _K5 = _F5._L5() >> 2;
    var index = _K5 * _F5._M5;
    _F5._M5 += 6;
    var _T5 = index;
    var _U5 = _T5 + _K5;
    var _Z1 = _U5 + _K5;
    var _V5 = _Z1 + _K5;
    var _W5 = _V5 + _K5;
    var _X5 = _W5 + _K5;
    _N5 = _F5._O5;
    _P5 = _F5._Q5;
    _N5[_T5 + 0] = (_v3 - _n3);
    _N5[_T5 + 1] = (_w3 + _l3);
    _N5[_U5 + 0] = (_S2 - _n3);
    _N5[_U5 + 1] = (_T2 + _l3);
    _N5[_Z1 + 0] = (_S2 + _n3);
    _N5[_Z1 + 1] = (_T2 - _l3);
    _N5[_V5 + 0] = (_S2 + _n3);
    _N5[_V5 + 1] = (_T2 - _l3);
    _N5[_W5 + 0] = (_v3 + _n3);
    _N5[_W5 + 1] = (_w3 - _l3);
    _N5[_X5 + 0] = (_v3 - _n3);
    _N5[_X5 + 1] = (_w3 + _l3);
    _N5[_T5 + 2] = _N5[_U5 + 2] = _N5[_Z1 + 2] = _N5[_V5 + 2] = _N5[_W5 + 2] = _N5[_X5 + 2] = _Y5;
    _P5[_T5] = _P5[_W5] = _P5[_X5] = _cg;
    _P5[_U5] = _P5[_Z1] = _P5[_V5] = _Ne;
}

function _Mm2(_HM, _Va, _Wa) {
    var _co1 = _b4._6o1(_Va, _Wa);
    _HM._Nm2 = _co1;
    _HM._do1 = _co1._do1;
    _HM._T1._C5 = _co1.__n1;
}

function _kk2(_Va, _Wa, _kN) {
    var _L1 = new _5h();
    _L1._T1 = document.createElement("surf");
    _L1._a7 = _Va;
    _L1._b7 = _Wa;
    _L1._T1.width = _Va;
    _L1._T1.height = _Wa;
    _L1._T1._a7 = _Va;
    _L1._T1._b7 = _Wa;
    if (_kN != undefined) {
        var _8h = _0h._O3(_kN);
        if (_8h && _8h._Nm2) {
            _b4._fo1(_8h._Nm2);
        }
    }
    _Mm2(_L1, _Va, _Wa);
    _L1.x = 0;
    _L1.y = 0;
    _L1.w = _Va;
    _L1.h = _Wa;
    _L1.XOffset = 0;
    _L1.YOffset = 0;
    _L1.CropWidth = _L1.w;
    _L1.CropHeight = _L1.h;
    _L1.ow = _L1.w;
    _L1.oh = _L1.h;
    if (_kN != undefined) {
        _0h._7b(_kN, _L1);
        _L1.tp = _kN;
    } else {
        _L1.tp = _0h._1b(_L1);
    }
    _L1._nN = _L1;
    _L1._T1.complete = true;
    _L1._m4 = [];
    _L1._n4 = 0;
    _L1._o4 = 4;
    _L1._oN = 0;
    _L1._Eh = null;
    _L1._4M = _L1._T1;
    return _L1.tp;
}
_sN = _tN;

function _mk2(_ha) {
    var _8h = _0h._O3(_ha);
    if (_8h != null) {
        _xj2.push({
            _do1: _tX1,
            _Om2: _hl,
            _Pm2: _b4._ll1,
            _Qm2: _b4._ml1,
            _OG: _562,
            _PG: _662,
            _QG: _762,
            _RG: _862
        });
        _hl = -1;
        _tX1 = _8h._do1;
        _b4._Gn1(_8h._do1);
        _vN = false;
    }
}

function _lk2(_ha) {
    var _8h = _0h._O3(_ha);
    if (_8h != null) {
        _xj2.push({
            _do1: _tX1,
            _Om2: _hl,
            _Pm2: _b4._ll1,
            _Qm2: _b4._ml1,
            _OG: _562,
            _PG: _662,
            _QG: _762,
            _RG: _862
        });
        _b4._ll1 = _8h._a7;
        _b4._ml1 = _8h._b7;
        _BN.left = _CN.left;
        _BN.top = _CN.top;
        _BN._L2 = _CN._L2;
        _BN.bottom = _CN.bottom;
        _CN.left = 0;
        _CN.top = 0;
        _CN._L2 = _8h._a7;
        _CN.bottom = _8h._b7;
        _DN._Ya(_EN);
        _EN._OG = 0;
        _EN._PG = 0;
        _EN._QG = _8h._a7;
        _EN._RG = _8h._b7;
        _EN._SG = 0;
        _EN._TG = 0;
        _EN._UG = _8h._a7;
        _EN._VG = _8h._b7;
        _EN._aa = 0;
        _EN._ca = 0;
        _EN._FN = _8h._a7;
        _EN._GN = _8h._b7;
        _EN._ba = _EN._aa + _EN._FN;
        _EN._da = _EN._ca + _EN._GN;
        _tX1 = _8h._do1;
        _b4._Gn1(_8h._do1);
        _hl = -1;
        _wN = _Fu;
        _xN = _Gu;
        _yN = _Hu;
        _zN = _Iu;
        _HN(0, 0, _8h._a7, _8h._b7);
        _IN(_EN._OG, _EN._PG, _EN._QG, _EN._RG, _EN._E4);
        _vN = true;
    }
}

function _nk2() {
    if (_vN) {
        _CN.left = _BN.left;
        _CN._L2 = _BN._L2;
        _CN.top = _BN.top;
        _CN.bottom = _BN.bottom;
        _EN._Ya(_DN);
    }
    var _Rm2 = _xj2.pop();
    if (_Rm2) {
        _hl = _Rm2._Om2;
        _tX1 = _Rm2._do1;
        _b4._ll1 = _Rm2._Pm2;
        _b4._ml1 = _Rm2._Qm2;
        if (_vN) {
            _HN(_wN, _xN, _yN, _zN);
            _IN(_Rm2._OG, _Rm2._PG,
                _Rm2._QG, _Rm2._RG, _EN._E4);
        }
    } else {
        _hl = 1;
        _tX1 = null;
        _b4._ll1 = _b4._jl1;
        _b4._ml1 = _b4._kl1;
        if (_vN) {
            _HN(_wN, _xN, _yN, _zN);
            _IN(_EN._OG, _EN._PG, _EN._QG, _EN._RG, _EN._E4);
        }
    }
    _b4._Gn1(_tX1);
}

function _ok2(_ha) {
    var _8h = _0h._O3(_ha);
    if (_8h && _8h._Nm2) {
        _b4._fo1(_8h._Nm2);
        _8h._T1._C5 = undefined;
        _0h._2b(_ha);
    }
}

function _pk2(_ha, _h2, _i2) {
    return _qk2(_ha, _h2, _i2) & 0x00ffffff;
}

function _qk2(_ha, _h2, _i2) {
    var _8h = _0h._O3(_ha);
    if (_8h != null) {
        _h2 = ~~_h2;
        _i2 = ~~_i2;
        _b4._5o1(_8h._do1, _h2, _i2);
    }
    return 0x00000000;
}

function _gk2(_ha, _h2, _i2) {
    var _8h = _0h._O3(_ha);
    if (!_8h) return;
    _h2 = ~~_h2;
    _i2 = ~~_i2;
    _95._hM(_8h, 0, 0, _8h._a7, _8h._b7, _h2, _i2, _8h._a7, _8h._b7, 0xffffffff);
}

function _rk2(_XN, _h2, _i2, _3b) {
    _Un("surface_copy() (WebGL)");
}

function _sk2(_XN, _h2, _i2, _3b, _I1, _J1, _YN, _ZN) {
    var _Rb = _0h._O3(_XN);
    var _Sb = _0h._O3(_3b);
    if (_Rb != null && _Sb != null) {}
    _Un("surface_copy_part() (WebGL)");
}

function _vk2(_F1, _h2, _i2, _Va, _Wa, _Yg, _Zg) {
    _Un("sprite_add_from_screen() (WebGL)");
    return -1;
}

function _uk2(_ha, _h2, _i2, _Va, _Wa, _Yg, _Zg) {
    var _8h = _0h._O3(_ha);
    if (_8h != null) {
        _h2 = ~~_h2;
        _i2 = ~~_i2;
        _Va = ~~_Va;
        _Wa = ~~_Wa;
        var _4M = document.createElement(_eo);
        var _5M = _4M.getContext('2d');
        _6M(_5M);
        var _87 = _b4._Sn1(_4M, _8h._do1, _h2, _i2, _Va, _Wa, _Yg, _Zg);
        var _L1 = new _5h();
        _L1.x = 0;
        _L1.y = 0;
        _L1.w = _87._0o1;
        _L1.h = _87._1o1;
        _L1.XOffset = 0;
        _L1.YOffset = 0;
        _L1.CropWidth = _L1.w;
        _L1.CropHeight = _L1.h;
        _L1.ow = _Va;
        _L1.oh = _Wa;
        _L1.tp = _gh(_4M);
        _L1._T1 = _P1[_L1.tp];
        _L1._T1._C5 = _87;
        _L1._T1._a7 = _4M.width;
        _L1._T1._b7 = _4M.height;
        var _3h = new _4h();
        _3h._Xg = _L1;
        return _Ee._6h(_3h);
    }
    debug("Surface " + _ha + " does not exist");
    return -1;
}

function _tk2(_h2, _i2, _Va, _Wa, _Yg, _Zg) {
    _h2 = ~~_h2;
    _i2 = ~~_i2;
    var _4M = document.createElement(_eo);
    var _5M = _4M.getContext('2d');
    _6M(_5M);
    var _87 = _b4._Ln1(_4M, _h2, _i2, _Va, _Wa, _Yg, _Zg, (_hl > 0));
    var _L1 = new _5h();
    _L1.x = 0;
    _L1.y = 0;
    _L1.w = _87._0o1;
    _L1.h = _87._1o1;
    _L1.XOffset = 0;
    _L1.YOffset = 0;
    _L1.CropWidth = _L1.w;
    _L1.CropHeight = _L1.h;
    _L1.ow = _Va;
    _L1.oh = _Wa;
    _L1.tp = _gh(_4M);
    _L1._T1 = _P1[_L1.tp];
    _L1._T1._C5 = _87;
    _L1._T1.width = w;
    _L1._T1.height = h;
    _L1._T1._a7 = w;
    _L1._T1._b7 = h;
    var _3h = new _4h();
    _3h._Xg = _L1;
    return _Ee._6h(_3h);
}

function _wk2(_ha, _h2, _i2, _Va, _Wa, _Yg, _Zg, _2M, _3M) {
    var _8h = _0h._O3(_ha);
    if (_8h != null) {
        _h2 = ~~_h2;
        _i2 = ~~_i2;
        _Va = ~~_Va;
        _Wa = ~~_Wa;
        var _4M = document.createElement(_eo);
        var _5M = _4M.getContext('2d');
        _6M(_5M);
        var _87 = _b4._Sn1(_4M, _8h._do1, _h2, _i2, _Va, _Wa, _Yg, _Zg);
        var _L1 = new _5h();
        _L1.x = 0;
        _L1.y = 0;
        _L1.w = _87._0o1;
        _L1.h = _87._1o1;
        _L1.XOffset = 0;
        _L1.YOffset = 0;
        _L1.CropWidth = _L1.w;
        _L1.CropHeight = _L1.h;
        _L1.ow = _Va;
        _L1.oh = _Wa;
        _L1.tp = _gh(_4M);
        _L1._T1 = _P1[_L1.tp];
        _L1._T1._C5 = _87;
        _L1._T1._a7 = _4M.width;
        _L1._T1._b7 = _4M.height;
        var _iM = new _jM();
        _iM.pName = "surface.copy";
        _iM.width = _Va;
        _iM.height = _Wa;
        _iM._Ry = new _Qo();
        _iM._Ry._L2 = _iM.width;
        _iM._Ry.bottom = _iM.height;
        _iM.transparent = true;
        _iM.smooth = true;
        _iM.preload = true;
        _iM._lM = 0;
        _iM._Fg = false;
        _iM.xOrigin = _2M;
        _iM.yOrigin = _3M;
        _iM._fh = true;
        _iM._93 = 1;
        _iM._mM = 0;
        _iM._nM = false;
        _iM._oM = false;
        _iM._a3 = [];
        _iM._M1 = [];
        _iM.Masks = [];
        _iM._rM();
        _iM._M1[0] = _L1;
        var _NL = _le._kM(_iM);
        return _NL;
    }
    debug("Surface " + _ha + " does not exist");
    return -1;
}

function _xk2(_F1, _ha, _h2, _i2, _Va, _Wa, _Yg, _Zg) {
    var _8h = _0h._O3(_ha);
    if (_8h != null) {
        _h2 = ~~_h2;
        _i2 = ~~_i2;
        _Va = ~~_Va;
        _Wa = ~~_Wa;
        var _4M = document.createElement(_eo);
        var _5M = _4M.getContext('2d');
        _6M(_5M);
        var _87 = _b4._Sn1(_4M, _8h._do1, _h2, _i2, _Va, _Wa, _Yg, _Zg);
        var _L1 = new _5h();
        _L1.x = 0;
        _L1.y = 0;
        _L1.w = _7p.width;
        _L1.h = _7p.height;
        _L1.XOffset = 0;
        _L1.YOffset = 0;
        _L1.CropWidth = _L1.w;
        _L1.CropHeight = _L1.h;
        _L1.ow = _L1.w;
        _L1.oh = _L1.h;
        _L1.tp = _gh(_4M);
        _L1._T1 = _P1[_L1.tp];
        _L1._T1._C5 = _87;
        _L1._T1._a7 = _4M.width;
        _L1._T1._b7 = _4M.height;
        _7p = _le._O3(_F1);
        _7p._M1[_7p._M1.length] = _L1;
        _7p._93++;
        return _F1;
    }
    debug("Surface " + _ha + " does not exist");
    return -1;
}

function _ik2(_ha) {
    var _JA = _IA._O3(_ha);
    if (_JA) {
        var _F5, _K5, index, _kb2, _il2, _N5, _P5, _R5, _v3, _w3, _S2, _T2;
        var _4j = ~~((_X6 * 255.0) << 24) | 0x0000ff;
        var _5j = ~~((_X6 * 255.0) << 24) | 0x00ff00;
        var _n4 = 6 * (_JA._yA * _JA._xA);
        _F5 = _b4._G5(_H5._I5, null, _b4._J5, _n4);
        _K5 = _F5._L5() >> 2;
        index = _K5 * _F5._M5;
        _il2 = _F5._M5;
        _F5._M5 += _n4;
        _N5 = _F5._O5;
        _P5 = _F5._Q5;
        for (var y = 0; y < _JA._yA; y++) {
            for (var x = 0; x < _JA._xA; x++, index += _K5 * 6) {
                var _F4 = _5j;
                var _T5 = index,
                    _U5 = _T5 + _K5,
                    _Z1 = _U5 + _K5,
                    _V5 = _Z1 + _K5,
                    _W5 = _V5 + _K5,
                    _X5 = _W5 + _K5;
                if (_JA._BA[(_JA._yA * x) + y] < 0) _F4 = _4j;
                _v3 = ~~(_JA._vA + x * _JA._zA);
                _w3 = ~~(_JA._wA + y * _JA._AA);
                _S2 = _v3 + _JA._zA;
                _T2 = _w3 + _JA._AA;
                _N5[_X5 + 0] = _N5[_W5 + 0] = _N5[_T5 + 0] = _v3;
                _N5[_X5 + 1] = _N5[_U5 + 1] = _N5[_T5 + 1] = _w3;
                _N5[_V5 + 0] = _N5[_Z1 + 0] = _N5[_U5 + 0] = _S2;
                _N5[_W5 + 1] = _N5[_V5 + 1] = _N5[_Z1 + 1] = _T2;
                _N5[_T5 + 2] = _N5[_U5 + 2] = _N5[_Z1 + 2] = _N5[_V5 + 2] = _N5[_W5 + 2] = _N5[_X5 + 2] = _Y5;
                _P5[_T5] = _P5[_U5] = _P5[_Z1] = _P5[_V5] = _P5[_W5] = _P5[_X5] = _F4;
            }
        }
        return;
    }
    _ja("Error: invalid mp_grid ID (mp_grid_draw)");
}

function _hk2(_ha, _EC, _FC, _CC) {
    var _4B = _5B.Paths[_ha];
    if (!_4B) return;
    var _F5, _1m2, _N5, _P5, _R5, _K5;
    var _F4 = ~~((_X6 * 255.0) << 24) | (_Y6 & 0xffffff);
    var _l3, _n3, _Ep;
    var _GC = 0;
    var _HC = _4B._IC(0);
    if (!_CC) {
        _EC = _EC - _HC.x;
        _FC = _FC - _HC.y;
    } else {
        _EC = 0;
        _FC = 0;
    }
    _GC = _vb(_4B.length / 4.0);
    if (_GC == 0) return;
    var _n4 = _GC * 2;
    _F5 = _b4._G5(_H5._L6, null, _b4._J5, _n4);
    _K5 = _F5._L5() >> 2;
    _1m2 = _K5 * _F5._M5;
    _F5._M5 += _n4;
    _N5 = _F5._O5;
    _P5 = _F5._Q5;
    for (var i = 0; i < _GC; i++) {
        _HC = _4B._IC(i / _GC);
        _v3 = ~~(_EC + _HC.x);
        _w3 = ~~(_FC + _HC.y);
        _P5[_1m2 + 0] = _F4;
        _N5[_1m2 + 0] = _v3;
        _N5[_1m2 + 1] = _w3;
        _N5[_1m2 + 2] = _Y5;
        _1m2 += _K5;
        _HC = _4B._IC((i + 1) / _GC);
        _S2 = ~~(_EC + _HC.x);
        _T2 = ~~(_FC + _HC.y);
        _P5[_1m2 + 0] = _F4;
        _N5[_1m2 + 0] = _S2;
        _N5[_1m2 + 1] = _T2;
        _N5[_1m2 + 2] = _Y5;
        _1m2 += _K5;
    }
}

function _Oj2(_He) {
    _b4._sn1(_He);
}

function _ek2(_Za, _fc) {
    _lj2 = _Za;
    _mj2 = _fc;
    _b4._Cm1(_lj2, _mj2);
}

function _fk2(_Sm2) {
    if (_Sm2) {
        draw_set_blend_mode(0);
    } else {
        draw_set_blend_mode_ext(_9u, _8u);
    }
}

function _yk2(_l4) {
    if (_l4) {
        return 1.0 / _l4._R6._a7;
    }
    return 1.0;
}

function _zk2(_l4) {
    if (_l4) {
        return 1.0 / _l4._R6._b7;
    }
    return 1;
}

function _Ak2(_pH, _j8) {
    _b4._un1(_pH, _j8._R6._C5);
}

function _Bk2(_qH) {
    if (_rj2[_qH] && _rj2[_qH]._mm1) {
        return 1;
    }
    return 0;
}

function _Ck2(_qH) {
    var _1m1 = (_qH == -1) ? _4l() : _rj2[_qH]._mm1;
    if (_1m1) {
        _b4._3l(_1m1);
    }
}

function _Dk2(_qH, _rH) {
    var _1m1 = (_qH == -1) ? _4l() : _rj2[_qH]._mm1;
    if (_1m1) {
        return _b4._jn1(_rj2[_qH]._mm1, _rH);
    }
    return undefined;
}

function _Ek2(_uH, _nn1) {
    if (_uH) {
        _b4._Tm2(_uH, _nn1);
    }
}

function _Fk2(_uH, _nn1) {
    if (_uH) {
        _b4._on1(_uH, _nn1);
    }
}

function _Gk2(_uH, _nn1) {
    if (_uH) {
        var _gm = _hm(_8m);
        _b4._pn1(_uH, new Float32Array(_gm.__2));
    }
}

function _Hk2(_qH, _j8) {
    if (_rj2[_qH]) {
        var _1m1 = _rj2[_qH];
        if (_1m1) {
            for (var i = 0; i < _1m1._nm1.length; i++) {
                if (_1m1._nm1[i] == _j8) {
                    return Number(i);
                }
            }
        }
    }
    return 0;
}

function _Ik2(_tH) {
    _A52 = _tH;
}

function _Jk2(_uH, _3u) {
    if (_3u instanceof Array) {
        var _sH = new Int32Array(_3u);
        _b4._qn1(_uH, _sH);
    } else {
        alert('ERROR: shader_set_uniform_i_array() Data is not an array');
    }
}

function _Kk2(_uH, _3u) {
    if (_3u instanceof Array) {
        var _sH = new Float32Array(_3u);
        _b4._rn1(_uH, _sH);
    } else {
        alert('ERROR: shader_set_uniform_f_array() Data is not an array');
    }
}

function _Lk2(_uH, _3u) {
    if (_3u instanceof Array) {
        var _sH = new Float32Array(_3u);
        _b4._pn1(_uH, _sH);
    } else {
        alert('ERROR: shader_set_uniform_matrix_array() Data is not an array');
    }
}

function _Nk2(_Xv) {}

function _Ok2(_Um2) {
    var _qm1 = _b4._7n1();
    for (var _rm1 = 0; _rm1 < _qm1; _rm1++) {
        texture_set_repeat_ext(_rm1, _Um2);
    }
}

function _Pk2(_pH, _Um2) {
    _pj2[_pH] = _Um2 ? true : false;
    _b4._Ym1(_pH, _pj2[_pH]);
}

function _Qk2(_a02) {
    var _qm1 = _b4._7n1();
    for (var _rm1 = 0; _rm1 < _qm1; _rm1++) {
        texture_set_interpolation_ext(_rm1, _a02);
    }
}

function _Rk2(_pH, _a02) {
    _b4._3n1(_pH, _a02 ? _H5._kp1 : _H5._lp1);
}

function _Sk2() {
    return _pj2[0];
};

function _Tk2(_l4) {
    if (typeof(_l4) == "object") {
        return 1.0;
    } else if ((_l4 != -1) && _P1[_l4]) {
        return 1.0;
    }
    return 0;
}

function _Uk2(_l4) {
    if (typeof(_l4) == "object") {
        return 1.0;
    } else if ((_l4 != -1) && _P1[_l4]) {
        return 1.0;
    }
    return 0;
}

function _Mk2() {
    return 1;
}

function _Vk2(_1l) {
    _nj2 = (_1l > 0.5) ? true : false;
    _b4._Wm1(_nj2, _oj2);
}

function _Wk2(_qe) {
    _oj2 = _qe / 255.0;
    _b4._Wm1(_nj2, _oj2);
}

function _Xk2() {
    return (_nj2 ? 1.0 : 0.0);
}

function _Yk2() {
    return _oj2;
}

function _7m(_y7, _yj) {
    _Em[_y7] = new _6l(_yj);
    switch (_y7) {
        case _uj2:
            _b4._il(_Em[_y7]);
            _b4._jl((_hl < 0) ? _H5._kl : _H5._ll);
            break;
        case _vj2:
            _b4._bl(_Em[_y7]);
            break;
        case _8m:
            _b4._zn1(_Em[_y7]);
            break;
    }
}

function _hm(_y7) {
    switch (_y7) {
        case _uj2:
        case _vj2:
        case _8m:
            return _Em[_y7];
            break;
    }
}

function _6l2() {
    if (_Pn.Shaders) {
        for (var i = 0; i < _Pn.Shaders.length; i++) {
            var _lm1 = _Pn.Shaders[i];
            _rj2[i] = _b4._hm1(_lm1.Vertex, _lm1.Fragment, _lm1.Attributes);
        }
    }
    return true;
}

function _ck2(_Z6) {
    _6r = _Z6;
    _Y6 = _07(_Z6);
}

function _D5(_HM) {
    if (!_HM._C5) {
        var _87 = _b4._Bn1(_HM._T1);
        _HM._T1._C5 = _87;
        _HM._T1._a7 = _HM._T1.width;
        _HM._T1._b7 = _HM._T1.height;
    }
}
var _Vm2 = 0;
var _Wm2 = 100;
var canvas = null;
var _Xm2, _Ym2, _Zm2, __m2, _0n2, _1n2, _2n2, _3n2;
var _682 = false;
var _95 = null;
var g_CurrentGraphics;
var _4n2 = null;
var _LN = null;
var _5n2 = 0;
var _6n2 = false;
var _7n2 = 0;
var _8n2 = 0;
var _9n2 = 0;
var _an2 = 0;
var _yn = 0;
var _bn2 = 0;
var _1M1 = 60;
var _cn2;
var _dn2 = new Date().getTime();
var _en2;
var _fn2 = null;
var _fN = -1;
var _aQ = -1;
var _cQ = -1;
var _7Q = true;
var _8Q = true;
var _hQ = true;
var _9Q = -1;
var _bQ = -1;
var _hN = -1;
var _iN = -1;
var _gN = false;
var _gQ = true;
var _iQ = {
    x: 0,
    y: 0,
    w: 0,
    h: 0
};
var _su = false;
if (window.chrome && window.chrome.app) {
    _682 = true;
    try {
        if (window && window['localStorage']) {
            _682 = false;
        }
    } catch (e) {}
}
window.famobi_onload = _gn2;
window.requestAnimFrame = (function() {
    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(_YV, _C7) {
        _cn2 = window.setTimeout(_YV, 1000 / 60);
    };
})();
var _Mn = null;

function _hn2() {
    if (_Mn) {
        _Mn.document.getElementById("debug_console").value = "";
    }
}

function _in2() {
    if (_Mn) {
        if (_kt1) {
            _kt1 = false;
        } else {
            _kt1 = true;
        }
    }
}

function CreateDebugConsole() {
    try {
        _Mn = open('', 'gamemakerstudio_debugconsole_window', 'width=990,height=600,titlebar=yes,scrollbars,resizable');
        if (_Mn) {
            if (!_Mn.document.getElementById("debug_console")) {
                with(_Mn.document) {
                    write('<!DOCTYPE html><html>' + '<header>' + '<title>GameMaker: Studio - DEBUG console</title>' + '</header>' + '<body>' + '<table border="0"><tr>' + '<td>Debug Output</td><td>Instances</td><td>InstanceData</td></tr>' + '<tr><td><textarea id="debug_console" wrap="off" style="width: 450px; height:500px;  display: block;" cols="70"></textarea></td>' + '<td>' + '<select id="debug_instances" size=31 style="width: 120px; height: 500px; font-family: monospace;" > ' + '</select>' + '</td>' + '<td ALIGN="left" VALIGN="top" style="min-width:350px; width:300px; height:500px; font-family: monospace; border:solid 1px #666"><div id="debug_Instance_Data"  style="width:100%; height:100%;overflow: auto;"></div></td>' + '</tr></table>' + '<br><button type="button" id="clear_console_button" onclick="ClearConsoleCallback()">Clear Console</button>' + '<button type="button" id="gm_pause_button" onclick="ToggleDebugPause()">Pause/Resume</button>' + '</body>' + '</html>');
                }
                var _jn2 = _Mn.document.getElementById("clear_console_button");
                _jn2.onclick = function() {
                    _hn2();
                };
                var _jn2 = _Mn.document.getElementById("gm_pause_button");
                _jn2.onclick = function() {
                    _in2();
                };
            }
        }
        _WO = 0x71562;
    } catch (e) {
        debug(e.message);
    }
}

function _Ct1() {
    if (_hP == _YR1) {
        _kJ1();
    }
    var c = document.getElementById(_eo);
    var _Sh = c.parentNode;
    var load = document.createElement('canvas');
    load.style.position = "absolute";
    load.style.left = "0px";
    load.style.top = "0px";
    load.width = c.width;
    load.height = c.height;
    load.setAttribute("id", "loading_screen");
    _Sh.insertBefore(load, c.nextSibling);
    _4n2 = load.getContext('2d');
    _6M(_4n2);
    _4n2._Cu();
    _4n2.globalCompositeOperation = 'copy';
    _4n2.fillStyle = _Yu(0x00000000);
    _4n2.globalAlpha = 1;
    _4n2._6v(0, 0, c.width, c.height);
    _4n2._Ju();
}

function _kn2(_Ge) {
    var _Cb = "";
    var _b3 = _Ge.length;
    for (var i = 0; i < _b3; i++) {
        _Cb = _Cb + String.fromCharCode(_Ge.charCodeAt(i) ^ 0x1a);
    }
    return _Cb;
}

function _Dt1() {
    var c = document.getElementById(_eo);
    var _b3 = document.getElementById("loading_screen");
    var _Sh = c.parentNode;
    _Sh.removeChild(_b3);
    _4n2 = null;
    _6n2 = false;
}

function _8a(_0l1, _i62) {
    _i62.left = 0;
    _i62.top = 0;
    _3d = _0l1; {
        while (_3d != null) {
            _i62.left += _3d.offsetLeft;
            _i62.top += _3d.offsetTop;
            _3d = _3d.offsetParent;
        }
    }
    _i62._L2 = _i62.left + _CO;
    _i62.bottom = _i62.top + _DO;
}

function _ln2(_Mg) {
    _oX1 = [];
    _Gs = [];
    _Hs = [];
    _Fs = 0;
    var _0t = _Mg.search;
    var _zp = _Mg.protocol + "//" + _Mg.host + _Mg.pathname;
    _Gs[0] = _zp;
    _Hs[0] = null;
    if (_0t[0] == "?") _0t = _0t.substring(1, _0t.length);
    var index = start = 0;
    var _Ce = "";
    var _y8 = null;
    while (index < _0t.length) {
        var c = _0t[index];
        if (c == "&") {
            if (_Ce != "") {
                if (start != index) _y8 = _0t.substring(start,
                    index);
                _Gs[_Gs.length] = _Ce;
                _Hs[_Hs.length] = _y8;
                _oX1[_Ce] = _y8;
                _Fs++;
                _Ce = "";
                _y8 = null;
            }
            start = index + 1;
        } else if (c == "=") {
            _Ce = _0t.substring(start, index);
            _y8 = null;
            start = index + 1;
        }
        index++;
    }
    if (_Ce != "") {
        if (start != index) _y8 = _0t.substring(start, index);
        _Gs[_Gs.length] = _Ce;
        _Hs[_Hs.length] = _y8;
        _oX1[_Ce] = _y8;
        _Fs++;
        _Ce = _y8 = "";
    }
}

function _pa2() {
    _Xm2 = canvas.style.position;
    _Ym2 = canvas.style.left;
    _Zm2 = canvas.style.top;
    __m2 = canvas.style;
    _0n2 = canvas.parentNode;
    _1n2 = canvas.nextSibling;
    _2n2 = false;
    _3n2 = canvas.margin;
    if ((_0n2 == document.body) || (canvas.mozRequestFullScreen) || (canvas.webkitRequestFullScreen)) {
        _2n2 = true;
    }
}

function _gn2() {
    debug('------- GameMaker_Init -------------');
    if (!document.getElementById || !document.createElement) return;
    canvas = document.getElementById(_eo);
    _95 = null;
    if (!canvas) return;
    _ln2(window.location);
    _Pn = JSON_game;
    _7Y1();
    if (_hP == _YR1) {
        _YI1(canvas);
    }
    _qM1();
    _xX1 = false;
    if ((_Pn.Options.WebGL) && (_Pn.Options.WebGL != 0)) {
        _AX1 = _Pn.Options.interpolatePixels;
        var _mn2 = undefined;
        if (_Jw != _LR1) {
            _mn2 = __k2(canvas);
        }
        if (_mn2) {
            _95 = _b4;
        } else {
            if (_Pn.Options.WebGL == 1) {
                _xX1 = true;
            }
            _95 = canvas.getContext('2d');
        }
    } else {
        _95 = canvas.getContext('2d');
    }
    g_CurrentGraphics = _95;
    _HX1 = canvas.width;
    _IX1 = canvas.height;
    if (typeof(_Pn.Options.GenerateSpotifyApp) != "undefined") {
        _ra = _fX1;
    } else if (_Pn.Options.UseNewAudio == true) {
        _ra = _sa;
    }
    if (_hP == _YR1) {
        _ra = _sa;
    }
    if (_ra == _sa) {
        try {
            g_WebAudioContext = new webkitAudioContext();
            if (!g_WebAudioContext.createGainNode) {
                g_WebAudioContext.createGainNode = g_WebAudioContext.createGain;
            }
        } catch (e) {
            debug('Web Audio API not supported in this browser');
            _ra = _FL;
        }
        _3I();
    }
    document.body.style._nn2 = "hidden";
    _LN = _95;
    _mv = canvas.width;
    _ov = canvas.height;
    _CO = _mv;
    _DO = _ov;
    if (_hP != _YR1) {
        _aQ = _CO;
        _cQ = _DO;
    }
    _gQ = (_Pn.Options.scale != 0);
    _9a = new _Qo();
    _8a(canvas, _9a);
    _EO = _9a.top;
    _FO = _9a.left;
    _GO = _9a._L2;
    _HO = _9a.bottom;
    if (_Pn.Options.Facebook) {
        _up(_Pn.Options.Facebook);
    } else if (_Pn.Options && _Pn.Options.debugMode && _Pn.Options.CreateDebugConsole_ref) {
        _Pn.Options.CreateDebugConsole_ref();
    }
    _pa2();
    _6M(_95);
    if (typeof(_Pn.Options.GenerateSpotifyApp) == "undefined") {
        document.body.oncontextmenu = function() {
            return false;
        };
    }
    _Ja();
    _BY1 = document.getElementById('GM4HTML5_loadingscreen');
    if ((_Pn.Options && _Pn.Options.debugMode) || (_Pn.Options && _Pn.Options.debugMode == undefined)) {
        _Ln = true;
    }
    if (_b4 && _Ln) {
        debug("WebGL Enabled!");
        debug("Max Texture Size=" + _b4._Tl1());
    }
    _HY1();
    _FP();
    if (_xX1) {
        _5n2 = -2;
    } else {
        if (_Ln) g_pBuiltIn.debug_mode = _Pn.Options.debugMode;
        _At1 = "";
        _Bt1 = function() {};
        if (_Pn.Options) {
            if (_Pn.Options.loadingBarCallback) {
                _At1 = _Pn.Options.loadingBarCallback;
            }
        }
        if (_At1 != "") {
            _dZ1(_Pn);
            _5n2 = -1;
        } else {
            _iZ1(_Pn);
            _5n2 = 0;
        }
    }
    if (typeof(_Pn.Options.GenerateSpotifyApp) != "undefined") {
        if (_b4) _fn2 = setInterval(_on2,
            1000 / (30));
        else _fn2 = setInterval(_on2, 1000 / (20));
    } else {
        requestAnimFrame(_on2);
    }
}

function _on2() {
    if (typeof(_Pn.Options.GenerateSpotifyApp) == "undefined" || _fn2 == null) {
        requestAnimFrame(_on2);
    }
    switch (_5n2) {
        case -2:
            {
                if (_6n2) _Dt1();
                _pn2(_95, _CO, _DO);
                break;
            }
        case -1:
            if (_zY1 == _AY1) {
                _iZ1(_Pn);
                _5n2 = 0;
                if (!_6n2) {
                    _Ct1();
                    _6n2 = true;
                }
                _At1(_4n2, _CO, _DO, _yY1, _dK, _BY1);
            }
            break;
        case 0:
            if (!_6n2) {
                _Ct1();
                _6n2 = true;
            }
            if (_dK >= _yY1) {
                _dK = _yY1;
                _5n2 = 1;
            }
            _kZ1();
            _At1(_4n2, _CO, _DO, _yY1, _dK, _BY1);
            break;
        case 1:
            _Dt1();
            _vZ1(_Pn);
            _5n2 = 2;
            break;
        case 2:
            _Bt1();
            _qn2();
            _5n2 = 3;
            g_pBuiltIn._142 = new Date().getTime();
            break;
        case 3:
            _rn2();
            break;
    }
}

function _sn2(_d62, x, y, colour, text) {
    _d62.fillStyle = colour;
    _d62.lineStyle = colour;
    _d62.font = "14px Verdana";;
    _d62.textAlign = "center";
    _d62.fillText(text, x, y);
    _d62.textAlign = "left";
}

function _pn2(_d62, _j4, _k4) {
    _d62.fillStyle = _9h(0x151515, 1.0);
    _d62.fillRect(0, 0, _j4, _k4);
    _sn2(_d62, _j4 / 2, (_k4 / 2), _9h(0x8d8f90, 1.0), "WebGL is Required to run this application.");
}

function _jZ1(_95, _j4, _k4, _tn2, _un2, _vn2) {
    _95.globalAlpha = 1;
    if (_vn2) {
        try {} catch (e) {
            show_message(e.message);
        }
    } else {
        var _wn2 = (_j4 / 100) * 50;
        var _xn2 = 2;
        var x = (_j4 - _wn2) / 2;
        var y = 10 + (_k4 - _xn2) / 2;
        _95.fillStyle = _9h(0x151515, 1.0);
        _95.fillRect(0, 0, _j4, _k4);
        if (_un2 != 0) {
            var w = (_wn2 / _tn2) * _un2;
            _95.fillStyle = _9h(0x404040, 1.0);
            _95.fillRect(x, y, _wn2, _xn2);
            _95.fillStyle = _9h(0x8d8f90, 1.0);
            _95.fillRect(x, y, w, _xn2);
        }
        _sn2(_95, _j4 / 2, (_k4 / 2), _9h(0x8d8f90, 1.0), "Loading");
    }
}

function _yn2(_Mg2) {
    _Ee._U9();
    var _q_1 = _Mg2._sG.backgrounds;
    for (var i = 0; i < _q_1.length; i++) {
        _Ee._1b(_q_1[i]);
        var _Wg = _Ee._O3(i);
        var _zn2 = _Ee._Vg(i);
        g_pBuiltIn.background_visible[i] = _Wg.visible;
        g_pBuiltIn.background_foreground[i] = _Wg.foreground;
        g_pBuiltIn.background_index[i] = _Wg.index;
        g_pBuiltIn.background_x[i] = _Wg.x;
        g_pBuiltIn.background_y[i] = _Wg.y;
        if (_zn2) {
            g_pBuiltIn.background_width[i] = _zn2._Xg.w;
            g_pBuiltIn.background_height[i] = _zn2._Xg.h;
        } else {
            g_pBuiltIn.background_width[i] = 0;
            g_pBuiltIn.background_height[i] = 0;
        }
        g_pBuiltIn.background_htiled[i] = _Wg._l_1;
        g_pBuiltIn.background_vtiled[i] = _Wg._m_1;
        g_pBuiltIn.background_xscale[i] = _Wg._NF;
        g_pBuiltIn.background_yscale[i] = _Wg._OF;
        g_pBuiltIn.background_vspeed[i] = _Wg._o_1;
        g_pBuiltIn.background_hspeed[i] = _Wg._n_1;
        g_pBuiltIn.background_blend[i] = _Wg._aO;
        g_pBuiltIn.background_alpha[i] = _Wg.alpha;
    }
    g_pBuiltIn.background_color = _Mg2._342;
}

function _An2(_Tr, _Bn2) {
    if (_81) _81._Fg2();
    var _Cn2 = _81;
    _5H = -1;
    _ge._B2(_JO1, 0);
    _zb2();
    var persistent = [];
    if (_Cn2 != null) {
        for (var i = _Cn2._Oy.length - 1; i >= 0; i--) {
            var _4p = _Cn2._Oy._O3(i);
            if (_4p.persistent) {
                persistent[persistent.length] = _4p;
                _4p._Dn2 = true;
            }
        }
        for (var i = persistent.length - 1; i >= 0; i--) {
            _Cn2._Oy._4d(persistent[i]);
        }
        if (_Cn2._yf2 === false) {
            _Cn2._Uf2();
        } else {
            for (var i = _Cn2._Oy.length - 1; i >= 0; i--) {
                var _4p = _Cn2._Oy._O3(i);
                _4p._5p._u82(_4p);
            }
        }
    }
    _Aa._U9();
    _m8._U9();
    _we2();
    _81 = _oG._O3(_Tr);
    var _En2 = _81._yf2;
    if (_En2 === true && _81._zf2 === false) {
        _En2 = false;
    }
    if (_En2 === false) {
        _81._CZ1(_81._sG);
        _81._2g2();
    } else {
        _81._752(_81._rG);
        _81._852(_81._tG);
        _81._552(_81._xf2);
        _81._652(_81._uG);
        _81._952(_81._yf2);
        _81._2g2();
        for (i = _81._Oy.length - 1; i >= 0; i--) {
            var _4p = _81._Oy._O3(i);
            _4p._5p._v82(_4p);
        }
    }
    g_pBuiltIn.room = _81.id;
    _81._Yf2();
    _og2();
    _yn2(_81);
    if (_En2 === false) {
        _81._Tf2();
        _81._Uf2();
        _81._Uf2();
        _Oy = new _Xc();
        var _Fn2 = _81._sG.pInstances;
        for (var _b3 = 0; _b3 < _81._sG.pInstances.length; _b3++) {
            var _HB = false;
            var _Gn2 = _81._sG.pInstances[_b3];
            if (_Gn2.index >= 0) {
                for (var _W1 = persistent.length - 1; _W1 >= 0; _W1--) {
                    if (_Gn2.id == persistent[_W1].id) {
                        _HB = true;
                        break;
                    }
                }
                if (!_HB) {
                    var _eB = _81._v82(_Gn2.x, _Gn2.y, _Gn2.id, _Gn2.index, _Gn2.scaleX, _Gn2.scaleY, _Gn2.rotation, _Gn2.colour);
                    _eB._Dn2 = false;
                }
            }
        }
        var _Fn2 = _81._sG.pInstances;
        for (var _b3 = 0; _b3 < _81._sG.pInstances.length; _b3++) {
            var _Gn2 = _81._sG.pInstances[_b3];
            var _eB = _ge._O3(_Gn2.id);
            if (_eB && (_eB._Dn2 == false)) {
                _eB._Dn2 = true;
                if (!_yX1) {
                    if (_Gn2.pCode) _Gn2.pCode(_eB);
                    _eB._B2(_Sd, 0, _eB, _eB);
                } else {
                    _eB._B2(_Sd, 0, _eB, _eB);
                    if (_Gn2.pCode) _Gn2.pCode(_eB);
                }
            }
        }
    }
    for (var _W1 = 0; _W1 < persistent.length; _W1++) {
        _81._Oy._1b(persistent[_W1]);
        persistent[_W1]._4z();
    }
    if (_Bn2) {
        _ge._B2(_DO1, 0);
    }
    if ((_En2 == false) && (_81._vG != null)) {
        _Hn2 = new _bY1();
        _81._vG(_Hn2);
        _Hn2 = null;
    }
    _ge._B2(_HO1, 0);
    _81._zf2 = true;
}

function _In2(_Jn2) {
    _An2(_Jn2, false);
}

function _qn2() {
    g_pBuiltIn.score = 0;
    g_pBuiltIn.lives = -1;
    _cs = 0;
    _DX1 = -1;
    _EX1 = 0;
    _FX1 = 0;
    _An2(_oG._6H(0).id, true);
    _7n2 = _8n2 = YoYo_GetTimer();
    _an2 = ~~(_7n2 / 1000000) + 4;
    g_pBuiltIn.fps = _1M1;
    g_pBuiltIn.fps_real = _1M1;
}

function _Kn2() {
    _lX1 = [];
    _mX1 = [];
    _oC = -1;
    _nC = -1;
    _CL1 = 0;
    _81._Oy._U9();
    _81._8z._U9();
    var _4c = _2q._wA1;
    for (var i = 0; i < _4c.length; i++) {
        var _Wq = _4c[i];
        _Wq._8N1._U9();
        _Wq._Lr._U9();
    }
    _ge._U9();
}

function _Ln2() {
    _Aa._Ab2();
}

function _Mn2() {
    if (_81._r82.length > 0) _81._Ig2();
    if (_81._Oy._cc2 >= 0) _81._Oy._Db2();
}

function _Nn2() {
    if (_81._ZC) {
        _81._ZC._V9(_81._xf2);
    } else {
        _ge._E92();
    }
}

function _On2() {
    if ((_81._ZC == null) || (_81._ZC == undefined)) {
        _GM1();
    }
}

function _Pn2() {
    g_pBuiltIn.delta_time = (_en2 - g_pBuiltIn._142) * 1000;
    g_pBuiltIn._142 = _en2;
    _Aa._La2();
    _rM1();
    _m8._V9();
    _ge._D92();
    _ge._F92();
    _Mn2();
    if (_5H != -1) return;
    _ge._B2(_DN1, 0);
    _Mn2();
    if (_5H != -1) return;
    if (_mt1) {
        _mt1 = false;
        _ge._B2(_bS1, 0);
    }
    _Bh._M12();
    _Mn2();
    if (_5H != -1) return;
    _fN1();
    _Mn2();
    if (_5H != -1) return;
    _iN1();
    _Mn2();
    if (_5H != -1) return;
    _wb2();
    _Mn2();
    if (_5H != -1) return;
    _SM1();
    _Mn2();
    if (_5H != -1) return;
    _ge._B2(_FN1, 0);
    _Mn2();
    if (_5H != -1) return;
    _Nn2();
    _sM1();
    _Mn2();
    if (_5H != -1) return;
    _cy();
    _1P();
    _Mn2();
    if (_5H != -1) return;
    _On2();
    _Mn2();
    if (_5H != -1) return;
    _ge._B2(_HN1, 0);
    _Mn2();
    if (_5H != -1) return;
    _Me2();
    if (_81 != null) {
        _81._Fg2();
        if (__v) {
            _81._L4();
            _Mn2();
        }
    }
    _81._5g2();
    _Ln2();
    _1I();
}

function _og2() {
    var left, _L2, top, bottom;
    left = 0;
    _L2 = -999999;
    top = 0;
    bottom = -999999;
    if (_81._4a) {
        for (var i = 0; i < _81._6a.length; i++) {
            _7a = _81._6a[i];
            if (_7a.visible) {
                if (_L2 < _7a._SG + _7a._UG) _L2 = _7a._SG + _7a._UG;
                if (bottom < _7a._TG + _7a._VG) bottom = _7a._TG + _7a._VG;
            }
        }
    } else {
        left = 0;
        _L2 = _81._rG;
        top = 0;
        bottom = _81._tG;
        _iX1._UG = _iX1._QG = _L2;
        _iX1._VG = _iX1._RG = bottom;
    }
    if (_8Q) {
        if (!_hQ) {
            _aQ = _9Q;
            _cQ = _bQ;
        }
    } else {
        _aQ = _CO;
        _cQ = _DO;
        if (surface_exists(_fN)) {
            surface_free(_fN);
            _fN = -1;
        }
    }
    _hQ = _8Q;
    _KO = _CO;
    _LO = _DO;
    _8M = _aQ / (_L2 - left);
    _aM = _cQ / (bottom - top);
    var _d3 = new _Qo();
    _d3.left = left;
    _d3.top = top;
    _d3._L2 = _L2;
    _d3.bottom = bottom;
    _CN = _d3;
    _dQ();
}

function _Qn2() {
    var w = 640;
    if (typeof(_Mn.window.innerWidth) == 'number') {
        w = _Mn.window.innerWidth;
    } else if (_Mn.document.documentElement && _Mn.document.documentElement.clientWidth) {
        w = _Mn.document.documentElement.clientWidth;
    } else if (_Mn.document.body && document.body.clientWidth) {
        w = _Mn.document.body.clientWidth;
    }
    return w;
}

function _Rn2() {
    var h = 480;
    if (typeof(_Mn.window.innerHeight) == 'number') {
        h = _Mn.window.innerHeight;
    } else if (_Mn.document.documentElement && _Mn.document.documentElement.clientHeight) {
        h = _Mn.document.documentElement.clientHeight;
    } else if (_Mn.document.body && document.body.clientHeight) {
        h = _Mn.document.body.clientHeight;
    }
    return h;
}

function _yu() {
    var w = 640;
    if (typeof(window.innerWidth) == 'number') {
        w = window.innerWidth;
    } else if (document.documentElement && document.documentElement.clientWidth) {
        w = document.documentElement.clientWidth;
    } else if (document.body && document.body.clientWidth) {
        w = document.body.clientWidth;
    }
    return w;
}

function _zu() {
    var h = 480;
    if (typeof(window.innerHeight) == 'number') {
        h = window.innerHeight;
    } else if (document.documentElement && document.documentElement.clientHeight) {
        h = document.documentElement.clientHeight;
    } else if (document.body && document.body.clientHeight) {
        h = document.body.clientHeight;
    }
    return h;
}

function _Sn2(string) {
    string = string.replace(String.fromCharCode(0x0a) + String.fromCharCode(0x0d) + String.fromCharCode(0x0a), "\n");
    var _Tn2 = "";
    for (var _X2 = 0; _X2 < string.length; _X2++) {
        var c = string.charCodeAt(_X2);
        if (c < 128) {
            _Tn2 += String.fromCharCode(c);
        } else if ((c > 127) && (c < 2048)) {
            _Tn2 += String.fromCharCode((c >> 6) | 192);
            _Tn2 += String.fromCharCode((c & 63) | 128);
        } else {
            _Tn2 += String.fromCharCode((c >> 12) | 224);
            _Tn2 += String.fromCharCode(((c >> 6) & 63) | 128);
            _Tn2 += String.fromCharCode((c & 63) | 128);
        }
    }
    return _Tn2;
}

function _Un2(_Vn2) {
    return (_Wn2(_Vn2) || _Xn2(_Vn2));
}

function _Wn2(_Vn2) {
    _Yn2 = _Vn2.charCodeAt(0);
    if ((_Yn2 > 47) && (_Yn2 < 58)) {
        return true;
    }
    return false;
}

function _Xn2(_Vn2) {
    _Yn2 = _Vn2.charCodeAt(0);
    if (((_Yn2 > 64) && (_Yn2 < 91)) || ((_Yn2 > 96) && (_Yn2 < 123))) {
        return true;
    }
    return false;
}

function _Zn2(_4Y1) {
    var _Cb = "";
    for (var i = 0; i < _4Y1.length; i++) {
        var _g3 = _4Y1[i] & 0xff;
        _Cb = _Cb + _XX1[_g3 >> 4] + _XX1[_g3 & 0xf];
    }
    return _Cb;
}

function __n2(_f2) {
    var _Cb = "";
    for (var i = 0; i < 8; i++) {
        _Cb = _Cb + _XX1[((_f2 >> 28) & 0xf)];
        _f2 = _f2 << 4;
    }
    return _Cb;
}

function _0o2() {
    var _NX1 = _Pn.Options.tm;
    var _W52 = (_en2 / 1000) - _Pn.Options.tm;
}

function _1o2() {
    _8a(canvas, _9a);
    _EO = _9a.top;
    _FO = _9a.left;
    _GO = _9a._L2;
    _HO = _9a.bottom;
    if (_Pn.Options && !_Pn.Options.interpolatePixels) {
        _mN(_95);
    }
    if ((_HX1 != canvas.width) || (_IX1 != canvas.height)) {
        _mt1 = true;
    }
    _HX1 = canvas.width;
    _IX1 = canvas.height;
    var w = _yu();
    var h = _zu();
    if ((_uO) && (!_BX1)) {
        if ((_IO != w) || (_JO != h)) {
            _BX1 = true;
            _uO = false;
        }
        if (canvas.mozRequestFullScreen) {
            if (!document.mozFullScreen) {
                _BX1 = true;
                _uO = true;
            }
        }
    }
    if (_BX1) {
        _BX1 = false;
        if (_uO) {
            w = _mv;
            h = _ov;
            _uO = false;
            canvas.style.position = _Xm2;
            canvas.style.left = _Ym2;
            canvas.style.top = _Zm2;
            canvas.style.margin = _3n2;
            canvas.style = __m2;
            if (!_2n2) {
                if (canvas.parentNode != _0n2) {
                    _0n2.insertBefore(canvas, _1n2);
                }
            }
        } else {
            _uO = true;
            window_set_position(0, 0);
            if (!_2n2) {
                if (canvas.parentNode == _0n2) {
                    _0n2.removeChild(canvas);
                    document.body.insertBefore(canvas, null);
                }
            }
        }
        canvas.width = w;
        canvas.height = h;
        _CO = canvas.width;
        _DO = canvas.height;
        _FO = canvas.offsetLeft;
        _GO = _FO + _CO;
        _EO = canvas.offsetTop;
        _HO = _FO + _DO;
        _IO = _CO;
        _JO = _DO;
        _KO = w;
        _LO = h_8M = 1;
        _aM = 1;
        _og2();
    }
    if (_hP == _YR1) {
        if (_8n2 > (_UI1 + 1000000)) {
            _oJ1();
            _UI1 = _8n2;
        }
    }
}
var _2o2 = 0;
var _3o2 = 0.0;

function _rn2() {
    _8n2 = YoYo_GetTimer();
    if (_8n2 < _7n2 || ((_8n2 - _7n2) > 2000000)) {
        _7n2 = _8n2;
        _an2 = _7n2;
    }
    if (_81._91() <= 0) {
        _81._552(1);
    }
    _en2 = new Date().getTime();
    _yn = ~~(_8n2 - _7n2);
    _3o2 = ~~(1000000.0 / _81._91()) - _yn;
    _9n2 = max(0, _3o2);
    _9n2 = min(_9n2, 1000000.0);
    var _4o2 = 1000000.0 / _81._91();
    if (_9n2 > 14000) return;
    _7n2 = _8n2 + _9n2;
    if (_7n2 < _an2) {
        _an2 = _7n2;
    }
    if (~~_7n2 > (_an2 + 1000000)) {
        _1M1 = _bn2;
        _bn2 = 0;
        _an2 = ~~_7n2;
        _7n2 = 0;
    }
    _bn2++;
    g_pBuiltIn.fps = _1M1;
    if (!_kt1) {
        _a92 = 0;
        _1o2();
        if (_81 === null) {
            _iX1._ba = _iX1._FN = _iX1._UG = _iX1._QG = _CO;
            _iX1._da = _iX1._GN = _iX1._VG = _iX1._RG = _DO;
        } else {
            _og2();
        }
        if (_5H < 0) _A62(); {
            _Pn2();
        }
        if (_2o2 < _a92) _2o2 = _a92;
        if (_5H < 0) _C62();
        switch (_5H) {
            case -1:
                break;;
            case _9H:
            case _1S1:
                _5o2 = false;
                return;
            case _aH:
                _Kn2();
                _oG._Sg2();
                _qn2();
                break;
            case _0S1:
                _vZ1();
                break;
            default:
                _In2(_5H);
        }
    }
    if (_Pn.Options && _Pn.Options.debugMode && _Pn.Options.UpdateDebugWindow_ref) {
        _Pn.Options.UpdateDebugWindow_ref();
    }
}
